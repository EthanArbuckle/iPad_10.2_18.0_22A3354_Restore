_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

void sub_1BC310CA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BC311004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BC3111DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

id OUTLINED_FUNCTION_5(id a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_8()
{
  return objc_opt_class();
}

void OUTLINED_FUNCTION_9(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_10()
{
  return objc_opt_class();
}

void OUTLINED_FUNCTION_11(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

uint64_t OUTLINED_FUNCTION_14()
{
  return objc_opt_class();
}

void OUTLINED_FUNCTION_15(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

id OUTLINED_FUNCTION_16(id a1)
{
  return a1;
}

void sub_1BC3143DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BC326858(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1BC326950(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id HBXBundle()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)HBXBundle___ClassBundle;
  if (!HBXBundle___ClassBundle)
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)HBXBundle___ClassBundle;
    HBXBundle___ClassBundle = v1;

    v0 = (void *)HBXBundle___ClassBundle;
  }
  return v0;
}

id HKHealthRecordsUIFrameworkBundle()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)HKHealthRecordsUIFrameworkBundle___ClassBundle;
  if (!HKHealthRecordsUIFrameworkBundle___ClassBundle)
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)HKHealthRecordsUIFrameworkBundle___ClassBundle;
    HKHealthRecordsUIFrameworkBundle___ClassBundle = v1;

    v0 = (void *)HKHealthRecordsUIFrameworkBundle___ClassBundle;
  }
  return v0;
}

void sub_1BC329C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_1BC32AB58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BC32AE44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void sub_1BC32B02C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BC32B80C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_2_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  uint64_t v0;

  return v0;
}

void sub_1BC32F4E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id HRWDAsUserActivityResponder(void *a1)
{
  id v1;
  id v2;
  void *v3;

  v1 = a1;
  if (objc_msgSend((id)objc_opt_class(), "conformsToProtocol:", &unk_1EF4647F0))
  {
    v2 = v1;
  }
  else
  {
    +[HRWDEmptyUserActivityResponder emptyUserActivityResponder](HRWDEmptyUserActivityResponder, "emptyUserActivityResponder");
    v2 = (id)objc_claimAutoreleasedReturnValue();
  }
  v3 = v2;

  return v3;
}

uint64_t _ConceptsOfRecordsAreDefinedAndEqual(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v3 = a2;
  objc_msgSend(a1, "primaryConcept");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "groupByConcept");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "primaryConcept");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "groupByConcept");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
    v8 = objc_msgSend(v5, "isEqual:", v7);
  else
    v8 = 0;

  return v8;
}

void sub_1BC331448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BC331564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BC331678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void sub_1BC3317A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BC331894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BC331D1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 176), 8);
  _Block_object_dispose((const void *)(v31 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1BC33319C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BC3362D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BC33642C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_2_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

uint64_t HRFeatureFlagShowLanguageOfPreferredName()
{
  return _os_feature_enabled_impl();
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void sub_1BC3387DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1BC3391C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BC339754(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1BC3403E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void sub_1BC341084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v34 - 216), 8);
  _Block_object_dispose((const void *)(v34 - 168), 8);
  _Unwind_Resume(a1);
}

void sub_1BC3414D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1BC341BA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BC3447D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void CategoryRecordKind.categoryKind.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t CategoryRecordKind.conceptId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t CategoryRecordKind.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryRecordKind.meaningfulDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CategoryRecordKind() + 28);
  return sub_1BC3462D8(v3, a1);
}

uint64_t type metadata accessor for CategoryRecordKind()
{
  uint64_t result;

  result = qword_1ED6A4FD0;
  if (!qword_1ED6A4FD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC3462D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC34631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC34631C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4EA0)
  {
    sub_1BC62A760();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4EA0);
  }
}

uint64_t CategoryRecordKind.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_1BC62A760();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62D67C();
  sub_1BC62D6A0();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for CategoryRecordKind();
  sub_1BC3462D8(v0 + *(int *)(v7 + 28), (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
    return sub_1BC62D688();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v6, v1);
  sub_1BC62D688();
  sub_1BC347F0C(&qword_1EF4288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BC62C5CC();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t CategoryRecordKind.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_1BC62A760();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62D670();
  sub_1BC62D67C();
  sub_1BC62D6A0();
  sub_1BC62C740();
  v7 = type metadata accessor for CategoryRecordKind();
  sub_1BC3462D8(v0 + *(int *)(v7 + 28), (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
  {
    sub_1BC62D688();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v6, v1);
    sub_1BC62D688();
    sub_1BC347F0C(&qword_1EF4288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1BC62C5CC();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_1BC62D6AC();
}

uint64_t sub_1BC346660(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v4 = sub_1BC62A760();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  MEMORY[0x1E0C80A78]();
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62D67C();
  sub_1BC62D6A0();
  sub_1BC62C740();
  sub_1BC3462D8(v2 + *(int *)(a2 + 28), (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
    return sub_1BC62D688();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v9, v4);
  sub_1BC62D688();
  sub_1BC347F0C(&qword_1EF4288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1BC62C5CC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BC3467BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v4 = sub_1BC62A760();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  MEMORY[0x1E0C80A78]();
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62D670();
  sub_1BC62D67C();
  sub_1BC62D6A0();
  sub_1BC62C740();
  sub_1BC3462D8(v2 + *(int *)(a2 + 28), (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
  {
    sub_1BC62D688();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v9, v4);
    sub_1BC62D688();
    sub_1BC347F0C(&qword_1EF4288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1BC62C5CC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_1BC62D6AC();
}

uint64_t sub_1BC346938()
{
  return sub_1BC62C998();
}

uint64_t sub_1BC346940(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x1BCCF1C74](a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_1BC346990(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = MEMORY[0x1BCCF1C80](a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_1BC3469E4(float *a1@<X8>)
{
  *a1 = MEMORY[0x1BCCF1C8C]();
}

id sub_1BC346A08()
{
  id *v0;

  return *v0;
}

uint64_t sub_1BC346A10@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1BC346A18(uint64_t a1, uint64_t a2)
{
  return sub_1BC347A14(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1BC346A38()
{
  sub_1BC347F0C(&qword_1EF428EE8, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639140);
  return sub_1BC62D604();
}

uint64_t sub_1BC346A78()
{
  sub_1BC347F0C(&qword_1EF428EE8, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639140);
  return sub_1BC62D5F8();
}

uint64_t sub_1BC346ABC()
{
  sub_1BC347F0C(&qword_1EF428F20, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639184);
  return sub_1BC62A4F0();
}

_QWORD *sub_1BC346B04@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1BC346B18(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1BC346B2C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

void sub_1BC346B40(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1BC346B48()
{
  return sub_1BC62D094();
}

uint64_t sub_1BC346B60()
{
  sub_1BC347F0C(&qword_1EF428F48, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC638B04);
  return sub_1BC62D604();
}

uint64_t sub_1BC346BA0()
{
  sub_1BC347F0C(&qword_1EF428F48, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC638B04);
  return sub_1BC62D5F8();
}

uint64_t sub_1BC346BE0()
{
  sub_1BC347F0C(&qword_1EF428F78, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC6393A4);
  return sub_1BC62A4F0();
}

BOOL sub_1BC346C20(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_1BC346C50()
{
  return sub_1BC62D67C();
}

_QWORD *sub_1BC346C78@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1BC346C8C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1BC346CA0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1BC346CCC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1BC346CF0(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1BC346D04@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1BC346D18(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1BC346D2C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1BC346D40(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1BC346D54()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_1BC346D64(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1BC346D78(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1BC62C668();
  *a2 = 0;
  return result;
}

uint64_t sub_1BC346DEC(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1BC62C674();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1BC346E68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BC62C680();
  v2 = sub_1BC62C650();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BC346EA8()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC346EEC()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC346F2C()
{
  return sub_1BC62C680();
}

uint64_t sub_1BC346F3C()
{
  sub_1BC347F0C(&qword_1EF428F78, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC6393A4);
  return sub_1BC62A538();
}

uint64_t sub_1BC346F7C()
{
  sub_1BC347F0C(&qword_1EF428F78, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC6393A4);
  return sub_1BC62A508();
}

uint64_t sub_1BC346FBC(void *a1)
{
  id v2;

  sub_1BC347F0C(&qword_1EF428F78, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC6393A4);
  v2 = a1;
  return sub_1BC62A4FC();
}

uint64_t sub_1BC347020()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_1BC62CECC();

  return v2;
}

uint64_t sub_1BC347054()
{
  sub_1BC347F0C(&qword_1EF428F78, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC6393A4);
  return sub_1BC62A52C();
}

_QWORD *sub_1BC3470A8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1BC3470B8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1BC3470C8()
{
  return sub_1BC62C680();
}

uint64_t sub_1BC3470D8()
{
  sub_1BC347F0C(&qword_1EF428F20, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639184);
  return sub_1BC62A538();
}

uint64_t sub_1BC347118()
{
  sub_1BC347F0C(&qword_1EF428F20, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639184);
  return sub_1BC62A508();
}

uint64_t sub_1BC347158(void *a1)
{
  id v2;

  sub_1BC347F0C(&qword_1EF428F20, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639184);
  v2 = a1;
  return sub_1BC62A4FC();
}

uint64_t sub_1BC3471BC()
{
  sub_1BC347F0C(&qword_1EF428F20, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639184);
  return sub_1BC62A52C();
}

uint64_t sub_1BC34720C()
{
  sub_1BC62D670();
  sub_1BC62C5CC();
  return sub_1BC62D6AC();
}

_QWORD *sub_1BC347268@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BC347274@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1BC348CE0(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_DWORD *sub_1BC3472B0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_1BC3472C0@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_1BC3472CC()
{
  sub_1BC347F0C(&qword_1EF428FC8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1BC638980);
  sub_1BC347F0C(&qword_1EF428FD0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1BC638920);
  return sub_1BC62D424();
}

uint64_t sub_1BC347360()
{
  sub_1BC347F0C(&qword_1EF428F78, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC6393A4);
  return sub_1BC62A514();
}

BOOL sub_1BC3473B8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BC3473D0()
{
  sub_1BC347F0C(&qword_1EF428D08, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1BC637FEC);
  sub_1BC347F0C(&qword_1EF428D10, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1BC637424);
  return sub_1BC62D424();
}

uint64_t sub_1BC347454()
{
  sub_1BC347F0C(&qword_1EF428CD8, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_1BC637E84);
  sub_1BC347F0C(&qword_1EF428CE0, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_1BC637E24);
  return sub_1BC62D424();
}

uint64_t sub_1BC3474D8()
{
  sub_1BC347F0C((unint64_t *)&qword_1EF4383C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC639360);
  sub_1BC347F0C(&qword_1EF428FC0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC638BBC);
  return sub_1BC62D424();
}

uint64_t sub_1BC34755C()
{
  sub_1BC347F0C(&qword_1EF428F20, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639184);
  return sub_1BC62A514();
}

uint64_t sub_1BC3475B4()
{
  sub_1BC347F0C(&qword_1EF428FA8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC6392D8);
  sub_1BC347F0C((unint64_t *)&unk_1EF428FB0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC638CD0);
  return sub_1BC62D424();
}

uint64_t sub_1BC347638()
{
  sub_1BC347F0C(&qword_1EF428F98, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC63931C);
  sub_1BC347F0C(&qword_1EF428FA0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC638DE4);
  return sub_1BC62D424();
}

uint64_t sub_1BC3476BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BC62C680();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC3476E4()
{
  sub_1BC347F0C(&qword_1EF428F88, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_1BC638FB0);
  sub_1BC347F0C(&qword_1EF428F90, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_1BC638F58);
  return sub_1BC62D424();
}

uint64_t sub_1BC347768()
{
  sub_1BC347F0C(&qword_1EF428FE8, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_1BC6394B4);
  sub_1BC347F0C(&qword_1EF428FF0, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_1BC638534);
  return sub_1BC62D424();
}

uint64_t sub_1BC3477EC()
{
  sub_1BC347F0C(&qword_1EF428FD8, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_1BC63868C);
  sub_1BC347F0C(&qword_1EF428FE0, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_1BC638634);
  return sub_1BC62D424();
}

uint64_t sub_1BC347870()
{
  sub_1BC347F0C(&qword_1EF428CF8, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_1BC637AD0);
  sub_1BC347F0C(&qword_1EF428D00, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_1BC637A78);
  return sub_1BC62D424();
}

uint64_t sub_1BC3478F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC62C650();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BC347938()
{
  sub_1BC347F0C(&qword_1EF428CE8, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardSchemaType, (uint64_t)&unk_1BC637C10);
  sub_1BC347F0C(&qword_1EF428CF0, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardSchemaType, (uint64_t)&unk_1BC637BB8);
  return sub_1BC62D424();
}

uint64_t sub_1BC3479BC()
{
  return sub_1BC62C9C8();
}

uint64_t sub_1BC3479C4()
{
  return sub_1BC62D694();
}

void sub_1BC3479F4()
{
  JUMPOUT(0x1BCCF2928);
}

uint64_t sub_1BC347A08(uint64_t a1, uint64_t a2)
{
  return sub_1BC347A14(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1BC347A14(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1BC62C680();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BC347A50()
{
  sub_1BC62C680();
  sub_1BC62C740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC347A90()
{
  uint64_t v0;

  sub_1BC62C680();
  sub_1BC62D670();
  sub_1BC62C740();
  v0 = sub_1BC62D6AC();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_1BC347B00(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BC347B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BC62C680();
  v2 = v1;
  if (v0 == sub_1BC62C680() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL _s15HealthRecordsUI18CategoryRecordKindV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  _BOOL8 result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;

  v4 = sub_1BC62A760();
  v5 = *(_QWORD *)(v4 - 8);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC348D18();
  v9 = v8;
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  v12 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v33 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v33 - v18;
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2 || a1[1] != a2[1])
    return 0;
  if (a1[2] == a2[2] && a1[3] == a2[3] || (v20 = sub_1BC62D574(), result = 0, (v20 & 1) != 0))
  {
    v34 = v7;
    v22 = v4;
    v23 = v5;
    v24 = type metadata accessor for CategoryRecordKind();
    sub_1BC3462D8((uint64_t)a1 + *(int *)(v24 + 28), (uint64_t)v19);
    v25 = *(int *)(v24 + 28);
    v26 = v23;
    v27 = v22;
    sub_1BC3462D8((uint64_t)a2 + v25, (uint64_t)v17);
    v28 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_1BC3462D8((uint64_t)v19, (uint64_t)v11);
    sub_1BC3462D8((uint64_t)v17, v28);
    v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v29((uint64_t)v11, 1, v22) == 1)
    {
      sub_1BC348D78((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC34631C);
      sub_1BC348D78((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC34631C);
      if (v29(v28, 1, v22) == 1)
      {
        sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC34631C);
        return 1;
      }
    }
    else
    {
      sub_1BC3462D8((uint64_t)v11, (uint64_t)v14);
      if (v29(v28, 1, v22) != 1)
      {
        v30 = v34;
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v34, v28, v27);
        sub_1BC347F0C(&qword_1EF428D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
        v31 = sub_1BC62C644();
        v32 = *(void (**)(char *, uint64_t))(v26 + 8);
        v32(v30, v27);
        sub_1BC348D78((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC34631C);
        sub_1BC348D78((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC34631C);
        v32(v14, v27);
        sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC34631C);
        return (v31 & 1) != 0;
      }
      sub_1BC348D78((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC34631C);
      sub_1BC348D78((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC34631C);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v22);
    }
    sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC348D18);
    return 0;
  }
  return result;
}

uint64_t sub_1BC347EE0()
{
  return sub_1BC347F0C((unint64_t *)&unk_1EF428980, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordKind, (uint64_t)&protocol conformance descriptor for CategoryRecordKind);
}

uint64_t sub_1BC347F0C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1BCCF35C4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for CategoryRecordKind(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = a2[3];
    v5 = *(int *)(a3 + 28);
    v6 = (void *)(a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = sub_1BC62A760();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    if (v10(v7, 1, v8))
    {
      sub_1BC34631C();
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for CategoryRecordKind(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1BC62A760();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for CategoryRecordKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(const void *, uint64_t, uint64_t);
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1BC62A760();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    sub_1BC34631C();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithCopy for CategoryRecordKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1BC62A760();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BC34631C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for CategoryRecordKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1BC62A760();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BC34631C();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for CategoryRecordKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1BC62A760();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BC34631C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryRecordKind()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC3484D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BC34631C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CategoryRecordKind()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC348558(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    sub_1BC34631C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1BC3485CC()
{
  unint64_t v0;

  sub_1BC34631C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for HKMedicalRecordState(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B10);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B18);
}

uint64_t initializeBufferWithCopyOfBuffer for DisplayCategory(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC3486C8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BC3486E8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B20);
}

void type metadata accessor for HRUserDomainConceptListType(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B28);
}

void type metadata accessor for TextStyle(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B30);
}

void type metadata accessor for HKTimeScope(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B38);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1BC34975C(a1, (unint64_t *)&unk_1EF428B40);
}

void type metadata accessor for HKConceptIndexManagerState(uint64_t a1)
{
  sub_1BC34975C(a1, (unint64_t *)&unk_1ED6A4B68);
}

void type metadata accessor for HKDateFormatUtilitiesDateTemplate(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B50);
}

uint64_t _s9YearRangeVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s9YearRangeVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B58);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B60);
}

void type metadata accessor for HKOntologyShardSchemaType(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B68);
}

void type metadata accessor for HKOntologyShardIdentifier(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B70);
}

void type metadata accessor for HKClinicalAccountState(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B78);
}

void type metadata accessor for CGContext(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B80);
}

void type metadata accessor for HKClinicalAccountStateChangeType(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B88);
}

void type metadata accessor for WDOnboardingFunnelContext(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B90);
}

void type metadata accessor for HKMedicalRecordCategoryType(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428B98);
}

void type metadata accessor for HKClinicalOnboardingOptions(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428BA0);
}

void type metadata accessor for HRBrandImageManagerFetchOptions(uint64_t a1)
{
  sub_1BC34975C(a1, (unint64_t *)&unk_1EF428BA8);
}

void type metadata accessor for HKClinicalIngestionState(uint64_t a1)
{
  sub_1BC34975C(a1, (unint64_t *)&unk_1ED6A4B30);
}

void type metadata accessor for CIImageRepresentationOption(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428BB8);
}

uint64_t sub_1BC3488EC()
{
  return sub_1BC347F0C(&qword_1EF428BC0, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1BC6373E8);
}

uint64_t sub_1BC348918()
{
  return sub_1BC347F0C(&qword_1EF428BC8, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1BC6373BC);
}

uint64_t sub_1BC348944()
{
  return sub_1BC347F0C(&qword_1EF428BD0, (uint64_t (*)(uint64_t))type metadata accessor for HRBrandImageManagerFetchOptions, (uint64_t)&unk_1BC637580);
}

uint64_t sub_1BC348970()
{
  return sub_1BC347F0C(&qword_1EF428BD8, (uint64_t (*)(uint64_t))type metadata accessor for HRBrandImageManagerFetchOptions, (uint64_t)&unk_1BC637550);
}

uint64_t sub_1BC34899C()
{
  return sub_1BC347F0C(&qword_1EF428BE0, (uint64_t (*)(uint64_t))type metadata accessor for HRBrandImageManagerFetchOptions, (uint64_t)&unk_1BC6375A8);
}

uint64_t sub_1BC3489C8()
{
  return sub_1BC347F0C(&qword_1EF428BE8, (uint64_t (*)(uint64_t))type metadata accessor for HRBrandImageManagerFetchOptions, (uint64_t)&unk_1BC6375E0);
}

uint64_t sub_1BC3489F4()
{
  return sub_1BC347F0C(&qword_1EF428BF0, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalOnboardingOptions, (uint64_t)&unk_1BC637710);
}

uint64_t sub_1BC348A20()
{
  return sub_1BC347F0C(&qword_1EF428BF8, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalOnboardingOptions, (uint64_t)&unk_1BC6376E0);
}

uint64_t sub_1BC348A4C()
{
  return sub_1BC347F0C(&qword_1EF428C00, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalOnboardingOptions, (uint64_t)&unk_1BC637738);
}

uint64_t sub_1BC348A78()
{
  return sub_1BC347F0C(&qword_1EF428C08, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalOnboardingOptions, (uint64_t)&unk_1BC637770);
}

uint64_t sub_1BC348AA4()
{
  return sub_1BC347F0C(&qword_1EF428C10, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalAccountState, (uint64_t)&unk_1BC6379B0);
}

uint64_t sub_1BC348AD0()
{
  return sub_1BC347F0C(&qword_1EF428C18, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_1BC637A40);
}

uint64_t sub_1BC348AFC()
{
  return sub_1BC347F0C(&qword_1EF428C20, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_1BC637A18);
}

uint64_t sub_1BC348B28()
{
  return sub_1BC347F0C(&qword_1EF428C28, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_1BC637AA8);
}

uint64_t sub_1BC348B54()
{
  return sub_1BC347F0C(&qword_1EF428C30, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardSchemaType, (uint64_t)&unk_1BC637B80);
}

uint64_t sub_1BC348B80()
{
  return sub_1BC347F0C(&qword_1EF428C38, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardSchemaType, (uint64_t)&unk_1BC637B58);
}

uint64_t sub_1BC348BAC()
{
  return sub_1BC347F0C(&qword_1EF428C40, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardSchemaType, (uint64_t)&unk_1BC637BE8);
}

uint64_t sub_1BC348BD8()
{
  return sub_1BC347F0C(&qword_1EF428C48, (uint64_t (*)(uint64_t))type metadata accessor for HKTimeScope, (uint64_t)&unk_1BC637D48);
}

uint64_t sub_1BC348C04()
{
  return sub_1BC347F0C(&qword_1EF428C50, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_1BC637DE8);
}

uint64_t sub_1BC348C30()
{
  return sub_1BC347F0C(&qword_1EF428C58, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_1BC637DBC);
}

uint64_t sub_1BC348C5C()
{
  return sub_1BC347F0C(&qword_1EF428C60, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_1BC637E58);
}

uint64_t sub_1BC348C88()
{
  return sub_1BC347F0C(&qword_1EF428C68, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicalRecordState, (uint64_t)&unk_1BC637F8C);
}

uint64_t sub_1BC348CB4()
{
  return sub_1BC347F0C(&qword_1EF428C70, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1BC637458);
}

uint64_t sub_1BC348CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void sub_1BC348D18()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF428D78)
  {
    sub_1BC34631C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF428D78);
  }
}

uint64_t sub_1BC348D78(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428D88);
}

void type metadata accessor for ASWebAuthenticationSessionError(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428D90);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428D98);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DA0);
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DA8);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DB0);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DB8);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DC0);
}

void type metadata accessor for HKError(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DC8);
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DD0);
}

void type metadata accessor for HKSignedClinicalDataGroupOptions(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DD8);
}

void type metadata accessor for DocumentType(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DE0);
}

void type metadata accessor for DocumentReadingOptionKey(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DE8);
}

void type metadata accessor for HKClinicalSharingMultiDeviceStatus(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DF0);
}

void type metadata accessor for HKClinicalSharingUserStatus(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428DF8);
}

void type metadata accessor for HKClinicalAccountDeletionReason(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428E00);
}

void type metadata accessor for WDMedicalRecordDisplayItemType(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428E08);
}

void type metadata accessor for UITraitEnvironmentLayoutDirection(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428E10);
}

uint64_t sub_1BC348F1C()
{
  return sub_1BC347F0C(&qword_1EF428E18, (uint64_t (*)(uint64_t))type metadata accessor for WDMedicalRecordDisplayItemType, (uint64_t)&unk_1BC6383A4);
}

uint64_t sub_1BC348F48()
{
  return sub_1BC347F0C(&qword_1EF428E20, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_1BC6384FC);
}

uint64_t sub_1BC348F74()
{
  return sub_1BC347F0C(&qword_1EF428E28, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_1BC6384D4);
}

uint64_t sub_1BC348FA0()
{
  return sub_1BC347F0C(&qword_1EF428E30, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_1BC6385FC);
}

uint64_t sub_1BC348FCC()
{
  return sub_1BC347F0C(&qword_1EF428E38, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_1BC6385D4);
}

uint64_t sub_1BC348FF8()
{
  return sub_1BC347F0C(&qword_1EF428E40, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_1BC638664);
}

uint64_t sub_1BC349024()
{
  return sub_1BC347F0C(&qword_1EF428E48, (uint64_t (*)(uint64_t))type metadata accessor for HKSignedClinicalDataGroupOptions, (uint64_t)&unk_1BC638748);
}

uint64_t sub_1BC349050()
{
  return sub_1BC347F0C(&qword_1EF428E50, (uint64_t (*)(uint64_t))type metadata accessor for HKSignedClinicalDataGroupOptions, (uint64_t)&unk_1BC638714);
}

uint64_t sub_1BC34907C()
{
  return sub_1BC347F0C(&qword_1EF428E58, (uint64_t (*)(uint64_t))type metadata accessor for HKSignedClinicalDataGroupOptions, (uint64_t)&unk_1BC638774);
}

uint64_t sub_1BC3490A8()
{
  return sub_1BC347F0C(&qword_1EF428E60, (uint64_t (*)(uint64_t))type metadata accessor for HKSignedClinicalDataGroupOptions, (uint64_t)&unk_1BC6387B0);
}

uint64_t sub_1BC3490D4()
{
  return sub_1BC347F0C(&qword_1EF428E68, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1BC6388E4);
}

uint64_t sub_1BC349100()
{
  return sub_1BC347F0C(&qword_1EF428E70, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1BC6388B8);
}

uint64_t sub_1BC34912C()
{
  return sub_1BC347F0C(&qword_1EF428E78, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1BC638954);
}

uint64_t sub_1BC349158()
{
  return sub_1BC347F0C(&qword_1EF428E80, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC638A1C);
}

uint64_t sub_1BC349184()
{
  return sub_1BC347F0C(&qword_1EF428E88, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC638A48);
}

uint64_t sub_1BC3491B0()
{
  return sub_1BC347F0C(&qword_1EF428E90, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC638B80);
}

uint64_t sub_1BC3491DC()
{
  return sub_1BC347F0C(&qword_1EF428E98, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC638B54);
}

uint64_t sub_1BC349208()
{
  return sub_1BC347F0C(&qword_1EF428EA0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC638C94);
}

uint64_t sub_1BC349234()
{
  return sub_1BC347F0C(&qword_1EF428EA8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC638C68);
}

uint64_t sub_1BC349260()
{
  return sub_1BC347F0C(&qword_1EF428EB0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC638DA8);
}

uint64_t sub_1BC34928C()
{
  return sub_1BC347F0C(&qword_1EF428EB8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC638D7C);
}

uint64_t sub_1BC3492B8()
{
  return sub_1BC347F0C(&qword_1EF428EC0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_1BC638F20);
}

uint64_t sub_1BC3492E4()
{
  return sub_1BC347F0C(&qword_1EF428EC8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_1BC638EF8);
}

uint64_t sub_1BC349310()
{
  return sub_1BC347F0C(&qword_1EF428ED0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_1BC638F88);
}

uint64_t sub_1BC34933C()
{
  return sub_1BC347F0C(&qword_1EF428ED8, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639058);
}

uint64_t sub_1BC349368()
{
  return sub_1BC347F0C(&qword_1EF428EE0, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639084);
}

uint64_t sub_1BC349394()
{
  return sub_1BC347F0C(&qword_1EF428EE8, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639140);
}

uint64_t sub_1BC3493C0()
{
  return sub_1BC347F0C(&qword_1EF428EF0, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC63910C);
}

uint64_t sub_1BC3493EC()
{
  return sub_1BC347F0C(&qword_1EF428EF8, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC6390C8);
}

uint64_t sub_1BC349418()
{
  return sub_1BC347F0C(&qword_1EF428F00, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_1BC63922C);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF429000);
}

uint64_t sub_1BC349458()
{
  return sub_1BC347F0C(&qword_1EF428F08, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_1BC6391F0);
}

unint64_t sub_1BC349488()
{
  unint64_t result;

  result = qword_1EF428F10;
  if (!qword_1EF428F10)
  {
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EF428F10);
  }
  return result;
}

uint64_t sub_1BC3494CC()
{
  return sub_1BC347F0C(&qword_1EF428F18, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_1BC639268);
}

uint64_t sub_1BC3494F8()
{
  return sub_1BC347F0C(&qword_1EF428F20, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639184);
}

uint64_t sub_1BC349524()
{
  return sub_1BC347F0C(&qword_1EF428F28, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_1BC638E90);
}

uint64_t sub_1BC349550()
{
  return sub_1BC347F0C(&qword_1EF428F30, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC638D04);
}

uint64_t sub_1BC34957C()
{
  return sub_1BC347F0C(&qword_1EF428F38, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC638E18);
}

uint64_t sub_1BC3495A8()
{
  return sub_1BC347F0C(&qword_1EF428F40, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC638BF0);
}

uint64_t sub_1BC3495D4()
{
  return sub_1BC347F0C(&qword_1EF428F48, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC638B04);
}

uint64_t sub_1BC349600()
{
  return sub_1BC347F0C(&qword_1EF428F50, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC638AD0);
}

uint64_t sub_1BC34962C()
{
  return sub_1BC347F0C(&qword_1EF428F58, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC638A8C);
}

uint64_t sub_1BC349658()
{
  return sub_1BC347F0C(&qword_1EF428F60, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BC63944C);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF428FF8);
}

uint64_t sub_1BC349698()
{
  return sub_1BC347F0C(&qword_1EF428F68, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BC639410);
}

uint64_t sub_1BC3496C4()
{
  return sub_1BC347F0C(&qword_1EF428F70, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BC639488);
}

uint64_t sub_1BC3496F0()
{
  return sub_1BC347F0C(&qword_1EF428F78, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC6393A4);
}

uint64_t sub_1BC34971C()
{
  return sub_1BC347F0C(&qword_1EF428F80, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_1BC638564);
}

void type metadata accessor for HKOntologyShardState(uint64_t a1)
{
  sub_1BC34975C(a1, &qword_1EF429008);
}

void sub_1BC34975C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

id SingleValueAnnotationViewDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SingleValueAnnotationViewDataSource.init()()
{
  char *v0;
  id v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  objc_super v15;
  uint64_t v16;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_constraints] = MEMORY[0x1E0DEE9D8];
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v2 = v0;
  v3 = objc_msgSend(v1, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueLabel] = v3;
  LOBYTE(v16) = 1;
  v4 = objc_allocWithZone((Class)type metadata accessor for RecordRangeView());
  v5 = RecordRangeView.init(style:)((char *)&v16);
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_referenceRangeView] = v5;
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC639570;
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v5;
  v16 = v6;
  sub_1BC62C890();
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  v8 = v3;
  v9 = v5;
  v10 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v7, sel_initWithArrangedSubviews_, v10);

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueRangeGroup] = v11;
  objc_msgSend(v11, sel_setAxis_, 1);
  objc_msgSend(v11, sel_setAlignment_, 0);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v12 = v11;
  LODWORD(v13) = 1132068864;
  objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 0, v13);

  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for SingleValueAnnotationViewDataSource();
  return objc_msgSendSuper2(&v15, sel_init);
}

id sub_1BC349A54()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueRangeGroup);
}

void sub_1BC349A74(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;

  v2 = v1;
  sub_1BC34B1F0(a1, (uint64_t)v2);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x100))(a1);
  v4 = (void *)objc_opt_self();
  v5 = OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_constraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_deactivateConstraints_, v6);

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC639580;
  v8 = *(void **)((char *)v2 + OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_referenceRangeView);
  v9 = objc_msgSend(v8, sel_widthAnchor);
  v10 = *(void **)((char *)v2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup);
  v11 = objc_msgSend(v10, sel_superview);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_intrinsicContentSize);
    v14 = v13;

  }
  else
  {
    objc_msgSend(v10, sel_intrinsicContentSize);
    v14 = v15;
  }
  v16 = objc_msgSend(v9, sel_constraintGreaterThanOrEqualToConstant_, v14);

  *(_QWORD *)(v7 + 32) = v16;
  v17 = objc_msgSend(v8, sel_leadingAnchor);
  v18 = *(void **)((char *)v2 + OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueRangeGroup);
  v19 = objc_msgSend(v18, sel_leadingAnchor);
  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v19);

  *(_QWORD *)(v7 + 40) = v20;
  v21 = objc_msgSend(v8, sel_trailingAnchor);
  v22 = objc_msgSend(v18, sel_trailingAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(_QWORD *)(v7 + 48) = v23;
  sub_1BC62C890();
  *(_QWORD *)((char *)v2 + v5) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v24 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v24);

}

void sub_1BC349DAC()
{
  _QWORD *v0;
  void *v1;
  id v2;

  sub_1BC34C04C();
  v2 = v1;
  sub_1BC52EBE8(v1);
  (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))(v2);

}

void sub_1BC349E14(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = objc_msgSend(a1, sel_valueString);
  if (v3)
  {

    v4 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueLabel);
    objc_msgSend(v4, sel_setHidden_, 0);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v5 = a1;
    v6 = (void *)sub_1BC62CDDC();
    v7 = (void *)sub_1BC62CDDC();
    v8 = sub_1BC34A5FC(v6, v7);

    objc_msgSend(v4, sel_setAttributedText_, v8);
  }
  else
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueLabel), sel_setHidden_, 1);
  }
}

uint64_t sub_1BC349F78(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;

  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v4) + 0xB0))(a3, a4);
  sub_1BC34A010(a1, (void (*)(_QWORD))type metadata accessor for SingleValueChartData);
  (*(void (**)(void))((*v6 & *v4) + 0x118))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC349FEC(unint64_t a1)
{
  return sub_1BC34A200(a1);
}

uint64_t sub_1BC349FF8(unint64_t a1)
{
  return sub_1BC34A200(a1);
}

uint64_t sub_1BC34A004(unint64_t a1)
{
  return sub_1BC34A010(a1, (void (*)(_QWORD))type metadata accessor for MedicalRecordChartPoint);
}

uint64_t sub_1BC34A010(unint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t j;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = a1;
  v11 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1BC62D28C();
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1BCCF24CC](i, v3);
        v6 = i + 1;
        if (__OFADD__(i, 1))
          break;
        a2(0);
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
        if (v6 == v4)
          return v11;
      }
      __break(1u);
    }
    else
    {
      for (j = 0; ; ++j)
      {
        v8 = j + 1;
        if (__OFADD__(j, 1))
          break;
        a2(0);
        v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v3 = v9;
        swift_unknownObjectRetain();
        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
        if (v8 == v4)
          return v11;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    sub_1BC62D28C();
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1BC34A1F4(unint64_t a1)
{
  return sub_1BC34A200(a1);
}

uint64_t sub_1BC34A200(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1BC62D28C();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1BCCF24CC](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    sub_1BC62D28C();
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  return v12;
}

void sub_1BC34A4B8(unint64_t a1)
{
  char *v1;
  char *v2;
  char *v3;

  if (a1)
    v1 = Array<A>.referenceRangeViewData()(a1);
  else
    v1 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F828]), sel_init);
  v2 = v1;
  v3 = v1;
  sub_1BC52EBE8(v2);

}

uint64_t sub_1BC34A528()
{
  uint64_t v0;

  return swift_bridgeObjectRelease();
}

id SingleValueAnnotationViewDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueAnnotationViewDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC34A5FC(void *a1, void *a2)
{
  void *v2;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void **v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t inited;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  id v52;
  uint64_t v53;

  v5 = objc_msgSend(v2, sel_valueString);
  if (!v5)
    goto LABEL_8;
  v6 = v5;
  v7 = sub_1BC62C680();
  v9 = v8;

  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1BC34B54C();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BC639590;
    v42 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    *(_QWORD *)(inited + 40) = a1;
    v43 = a1;
    v44 = v42;
    sub_1BC35B6B4(inited);
    v45 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v46 = (void *)sub_1BC62C650();
LABEL_10:
    type metadata accessor for Key(0);
    sub_1BC34B608();
    v40 = (id)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v45, sel_initWithString_attributes_, v46, v40);

    goto LABEL_11;
  }
  v11 = objc_msgSend(v2, sel_unitString);
  if (!v11)
  {
    sub_1BC34B54C();
    v47 = swift_initStackObject();
    *(_OWORD *)(v47 + 16) = xmmword_1BC639590;
    v48 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(v47 + 32) = *MEMORY[0x1E0DC1138];
    *(_QWORD *)(v47 + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    *(_QWORD *)(v47 + 40) = a1;
    v49 = a1;
    v50 = v48;
    sub_1BC35B6B4(v47);
    v45 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v46 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v12 = v11;
  sub_1BC62C680();

  sub_1BC34B54C();
  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC639590;
  v14 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(v13 + 32) = *MEMORY[0x1E0DC1138];
  v53 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  *(_QWORD *)(v13 + 64) = v53;
  *(_QWORD *)(v13 + 40) = a1;
  v15 = a1;
  swift_bridgeObjectRetain();
  v52 = v14;
  sub_1BC35B6B4(v13);
  v16 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v17 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v18 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);
  swift_bridgeObjectRelease();

  v20 = swift_initStackObject();
  v21 = (void **)MEMORY[0x1E0DC1150];
  *(_OWORD *)(v20 + 16) = xmmword_1BC639590;
  v22 = *v21;
  *(_QWORD *)(v20 + 32) = *v21;
  v23 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v24 = v22;
  v25 = objc_msgSend(v23, sel_initWithDouble_, 2.0);
  *(_QWORD *)(v20 + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  *(_QWORD *)(v20 + 40) = v25;
  sub_1BC35B6B4(v20);
  v26 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v27 = (void *)sub_1BC62C650();
  v28 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

  objc_msgSend(v19, sel_appendAttributedString_, v29);
  v30 = swift_initStackObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v30 + 32) = v52;
  *(_QWORD *)(v30 + 40) = a2;
  v31 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(v30 + 64) = v53;
  *(_QWORD *)(v30 + 72) = v31;
  v32 = (void *)objc_opt_self();
  v33 = v52;
  v34 = a2;
  v35 = v31;
  v36 = objc_msgSend(v32, sel_secondaryLabelColor);
  *(_QWORD *)(v30 + 104) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
  *(_QWORD *)(v30 + 80) = v36;
  sub_1BC35B6B4(v30);
  v37 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v38 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v39 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(v37, sel_initWithString_attributes_, v38, v39);

  objc_msgSend(v19, sel_appendAttributedString_, v40);
LABEL_11:

  return v19;
}

id sub_1BC34AB64(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  _BYTE v50[16];
  _BYTE v51[16];
  uint64_t v52;
  unint64_t v53;
  _QWORD v54[3];

  sub_1BC34B4AC(v2 + 56, (uint64_t)v51);
  sub_1BC34B4AC((uint64_t)v51, (uint64_t)&v52);
  if (!v53)
    goto LABEL_7;
  v5 = HIBYTE(v53) & 0xF;
  if ((v53 & 0x2000000000000000) == 0)
    v5 = v52 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    sub_1BC34B4AC(v2 + 72, (uint64_t)v50);
    sub_1BC34B4AC((uint64_t)v50, (uint64_t)v54);
    if (v54[1])
    {
      sub_1BC34B54C();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BC639590;
      v7 = (void *)*MEMORY[0x1E0DC1138];
      *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
      v49 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
      *(_QWORD *)(inited + 64) = v49;
      *(_QWORD *)(inited + 40) = a1;
      sub_1BC34B650((uint64_t)v51);
      v8 = a1;
      sub_1BC34B650((uint64_t)v51);
      sub_1BC34B650((uint64_t)v50);
      v48 = v7;
      sub_1BC35B6B4(inited);
      v9 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
      v10 = (void *)sub_1BC62C650();
      sub_1BC34B678((uint64_t)v51);
      type metadata accessor for Key(0);
      sub_1BC34B608();
      v11 = (void *)sub_1BC62C53C();
      swift_bridgeObjectRelease();
      v12 = objc_msgSend(v9, sel_initWithString_attributes_, v10, v11);

      sub_1BC34B678((uint64_t)v51);
      v13 = swift_initStackObject();
      v14 = (void **)MEMORY[0x1E0DC1150];
      *(_OWORD *)(v13 + 16) = xmmword_1BC639590;
      v15 = *v14;
      *(_QWORD *)(v13 + 32) = *v14;
      v16 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      v17 = v15;
      v18 = objc_msgSend(v16, sel_initWithDouble_, 2.0);
      *(_QWORD *)(v13 + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
      *(_QWORD *)(v13 + 40) = v18;
      sub_1BC35B6B4(v13);
      v19 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v20 = (void *)sub_1BC62C650();
      v21 = (void *)sub_1BC62C53C();
      swift_bridgeObjectRelease();
      v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

      objc_msgSend(v12, sel_appendAttributedString_, v22);
      v23 = swift_initStackObject();
      *(_OWORD *)(v23 + 16) = xmmword_1BC6395A0;
      *(_QWORD *)(v23 + 32) = v48;
      *(_QWORD *)(v23 + 40) = a2;
      v24 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(v23 + 64) = v49;
      *(_QWORD *)(v23 + 72) = v24;
      v25 = (void *)objc_opt_self();
      v26 = v48;
      v27 = a2;
      v28 = v24;
      v29 = objc_msgSend(v25, sel_secondaryLabelColor);
      *(_QWORD *)(v23 + 104) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
      *(_QWORD *)(v23 + 80) = v29;
      sub_1BC35B6B4(v23);
      v30 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v31 = (void *)sub_1BC62C650();
      sub_1BC34B678((uint64_t)v50);
      v32 = (void *)sub_1BC62C53C();
      swift_bridgeObjectRelease();
      v33 = objc_msgSend(v30, sel_initWithString_attributes_, v31, v32);

      objc_msgSend(v12, sel_appendAttributedString_, v33);
    }
    else
    {
      sub_1BC34B54C();
      v42 = swift_initStackObject();
      *(_OWORD *)(v42 + 16) = xmmword_1BC639590;
      v43 = (void *)*MEMORY[0x1E0DC1138];
      *(_QWORD *)(v42 + 32) = *MEMORY[0x1E0DC1138];
      *(_QWORD *)(v42 + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
      *(_QWORD *)(v42 + 40) = a1;
      v44 = a1;
      sub_1BC34B650((uint64_t)v51);
      v45 = v43;
      sub_1BC35B6B4(v42);
      v46 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v47 = (void *)sub_1BC62C650();
      sub_1BC34B678((uint64_t)v51);
      type metadata accessor for Key(0);
      sub_1BC34B608();
      v33 = (id)sub_1BC62C53C();
      swift_bridgeObjectRelease();
      v12 = objc_msgSend(v46, sel_initWithString_attributes_, v47, v33);

    }
  }
  else
  {
LABEL_7:
    if ((*(_BYTE *)(v2 + 100) & 1) != 0)
    {
      if (qword_1ED6A4888 != -1)
        swift_once();
      v34 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

    }
    sub_1BC34B54C();
    v35 = swift_initStackObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BC639590;
    v36 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(v35 + 32) = *MEMORY[0x1E0DC1138];
    *(_QWORD *)(v35 + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    *(_QWORD *)(v35 + 40) = a1;
    v37 = a1;
    v38 = v36;
    sub_1BC35B6B4(v35);
    v39 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v40 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BC34B608();
    v33 = (id)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v39, sel_initWithString_attributes_, v40, v33);

  }
  return v12;
}

uint64_t type metadata accessor for SingleValueAnnotationViewDataSource()
{
  return objc_opt_self();
}

void sub_1BC34B1F0(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v4 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_monthYearLabel);
  v5 = (id)HKDateFormatterFromTemplate();
  if (!v5)
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v6 = (void *)sub_1BC62A700();
  v7 = objc_msgSend(v5, sel_stringFromDate_, v6);

  if (!v7)
  {
    sub_1BC62C680();
    v7 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v4, sel_setText_, v7);

  v8 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_hasTime) == 1)
  {
    v9 = (id)HKDateFormatterFromTemplate();
    if (!v9)
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    v10 = (void *)sub_1BC62A700();
    v11 = objc_msgSend(v9, sel_stringFromDate_, v10);

    sub_1BC62C680();
    v12 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v8, sel_setText_, v12);

}

uint64_t method lookup function for SingleValueAnnotationViewDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SingleValueAnnotationViewDataSource.update(using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SingleValueAnnotationViewDataSource.updateReferenceRange(using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SingleValueAnnotationViewDataSource.updateValueLabel(using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SingleValueAnnotationViewDataSource.update(using:valueRange:dateRange:timeScope:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SingleValueAnnotationViewDataSource.updateValue(using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

unint64_t sub_1BC34B458()
{
  unint64_t result;

  result = qword_1EF4290D8;
  if (!qword_1EF4290D8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF4290D8);
  }
  return result;
}

uint64_t sub_1BC34B4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC34B508(0, (unint64_t *)&qword_1EF4290E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC34B508(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC34B54C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4383B0)
  {
    sub_1BC34B5A0();
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4383B0);
  }
}

void sub_1BC34B5A0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF4290F0)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF4290F0);
  }
}

unint64_t sub_1BC34B608()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4383C0;
  if (!qword_1EF4383C0)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x1BCCF35C4](&unk_1BC639360, v1);
    atomic_store(result, (unint64_t *)&qword_1EF4383C0);
  }
  return result;
}

uint64_t sub_1BC34B650(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC34B678(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC34B6A0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

char *Array<A>.referenceRangeViewData()(unint64_t a1)
{
  id v2;
  void *v3;
  double v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  id v17;
  char *result;
  void *v19;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  double v35;
  char v36;
  double v37;
  char v38;
  void *v39;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F828]), sel_init);
  Array<A>.minMaxValuesAndUnit()(a1, (uint64_t)&v35);
  v3 = v39;
  if ((v36 & 1) != 0 || (v38 & 1) != 0)
  {
    objc_msgSend(v2, sel_setValueString_, 0);
    if (!v3)
      goto LABEL_34;
  }
  else
  {
    v4 = v37;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v35);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v4);
    v7 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v5, v6);

    HKValueRange<>.valueDisplayString(style:)(1);
    if (v8)
    {
      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = 0;
    }
    objc_msgSend(v2, sel_setValueString_, v9);

    if (!v3)
    {
LABEL_34:
      objc_msgSend(v2, sel_setUnitString_, 0);
      if (a1 >> 62)
        goto LABEL_35;
LABEL_10:
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v13)
        goto LABEL_36;
      goto LABEL_11;
    }
  }
  v10 = v3;
  sub_1BC611EC4(v10);
  if (v11)
  {
    v12 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v2, sel_setUnitString_, v12);

  if (!(a1 >> 62))
    goto LABEL_10;
LABEL_35:
  swift_bridgeObjectRetain();
  v13 = sub_1BC62D3B8();
  if (!v13)
  {
LABEL_36:
    v28 = 0;
    v19 = 0;
LABEL_37:
    swift_bridgeObjectRelease();

    objc_msgSend(v2, sel_setUseOutOfRangeValueColor_, v28);
    return (char *)v2;
  }
LABEL_11:
  v14 = 0;
  v15 = a1 & 0xC000000000000001;
  v30 = v13;
  v31 = a1 + 32;
  v16 = &unk_1EF459000;
  v29 = a1 & 0xC000000000000001;
  v33 = v3;
  v34 = v2;
  v32 = a1;
  while (1)
  {
    result = v15 ? (char *)MEMORY[0x1BCCF24CC](v14, a1) : (char *)*(id *)(v31 + 8 * v14);
    v19 = result;
    if (__OFADD__(v14++, 1))
      break;
    if (result[v16[324]] == 1)
    {
      v17 = *(id *)&result[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_chartableQuantitySet];
      v21 = objc_msgSend(v17, sel_quantities);
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF432A70);
      v22 = sub_1BC62C878();

      if (v22 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v23 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
        if (v23)
        {
LABEL_21:
          v24 = 4;
          while (1)
          {
            result = (v22 & 0xC000000000000001) != 0
                   ? (char *)MEMORY[0x1BCCF24CC](v24 - 4, v22)
                   : (char *)*(id *)(v22 + 8 * v24);
            v25 = result;
            v26 = v24 - 3;
            if (__OFADD__(v24 - 4, 1))
              break;
            v27 = objc_msgSend(result, sel_isInRange);

            if (!v27)
            {
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              v28 = 1;
              v3 = v33;
              v2 = v34;
              goto LABEL_37;
            }
            ++v24;
            if (v26 == v23)
              goto LABEL_28;
          }
          __break(1u);
          break;
        }
      }
      else
      {
        v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v23)
          goto LABEL_21;
      }
LABEL_28:
      swift_bridgeObjectRelease_n();

      v3 = v33;
      v2 = v34;
      a1 = v32;
      v15 = v29;
      v13 = v30;
      v16 = (_QWORD *)&unk_1EF459000;
    }
    else
    {
      v17 = result;
    }

    if (v14 == v13)
      goto LABEL_36;
  }
  __break(1u);
  return result;
}

id SingleValueChartData.chartableQuantitySet.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_chartableQuantitySet);
}

uint64_t SingleValueChartData.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_date;
  v4 = sub_1BC62A760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SingleValueChartData.dateFormat.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_dateFormat);
}

uint64_t SingleValueChartData.hasTime.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_hasTime);
}

uint64_t SingleValueChartData.partOfOutOfRangeSeries.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_partOfOutOfRangeSeries);
}

id SingleValueChartData.__allocating_init(chartableQuantitySet:date:dateFormat:hasTime:partOfOutOfRangeSeries:)(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return SingleValueChartData.init(chartableQuantitySet:date:dateFormat:hasTime:partOfOutOfRangeSeries:)(a1, a2, a3, a4, a5);
}

id SingleValueChartData.init(chartableQuantitySet:date:dateFormat:hasTime:partOfOutOfRangeSeries:)(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  _BYTE *v5;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id *v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  id v27;
  id v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;

  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_chartableQuantitySet] = a1;
  v11 = &v5[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_date];
  v12 = sub_1BC62A760();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_dateFormat] = a3;
  v5[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_hasTime] = a4;
  v5[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_partOfOutOfRangeSeries] = a5;
  v39.receiver = v5;
  v39.super_class = (Class)type metadata accessor for SingleValueChartData();
  v14 = a1;
  v15 = objc_msgSendSuper2(&v39, sel_init);
  v16 = objc_msgSend(v14, sel_quantities);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF432A70);
  v17 = (id *)sub_1BC62C878();

  if (!((unint64_t)v17 >> 62))
  {
    v18 = *(_QWORD *)(((unint64_t)v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v18 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_17;
LABEL_3:
  if (((unint64_t)v17 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v19 = (id)MEMORY[0x1BCCF24CC](0, v17);
    goto LABEL_6;
  }
  if (!*(_QWORD *)(((unint64_t)v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_20;
  }
  v19 = v17[4];
LABEL_6:
  v20 = v19;
  v38 = a2;
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v20, sel_quantity);

  v17 = (id *)objc_msgSend(v21, sel__unit);
  objc_msgSend(v15, sel_setUnit_, v17);
  v15 = v15;
  v22 = objc_msgSend(v14, sel_quantities);
  v18 = sub_1BC62C878();

  if (!(v18 >> 62))
  {
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_22;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  v37 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v37)
    goto LABEL_21;
LABEL_8:
  if ((v18 & 0xC000000000000001) != 0)
  {
LABEL_22:
    v23 = (id)MEMORY[0x1BCCF24CC](0, v18);
    goto LABEL_11;
  }
  if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_24;
  }
  v23 = *(id *)(v18 + 32);
LABEL_11:
  v24 = v23;
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_doubleValue);
  v26 = v25;

  objc_msgSend(v15, sel_setValue_, v26);
  v27 = v15;
  objc_msgSend(v14, sel_minValueForUnit_, v17);
  objc_msgSend(v27, sel_setMinValue_);

  v28 = v27;
  objc_msgSend(v14, sel_maxValueForUnit_, v17);
  objc_msgSend(v28, sel_setMaxValue_);

  v15 = v28;
  v29 = objc_msgSend(v14, sel_quantities);
  v30 = sub_1BC62C878();

  if (!(v30 >> 62))
  {
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_13;
  }
LABEL_24:
  swift_bridgeObjectRetain();
  v31 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
LABEL_13:
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setRecordCount_, v31);

  v32 = v15;
  v33 = objc_msgSend(v14, sel_quantities);
  v34 = sub_1BC62C878();

  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    v35 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_setRepresentsRange_, v35 > 1);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v38, v12);
  return v32;
}

void sub_1BC34C04C()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  double v12;
  double v13;
  id v14;
  id v15;
  double v16;
  double v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F828]), sel_init);
  objc_msgSend(v0, sel_value);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v3);
  objc_msgSend(v2, sel_setValue_, v4);

  v5 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_chartableQuantitySet];
  v6 = objc_msgSend(v5, sel_quantities);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF432A70);
  v7 = sub_1BC62C878();

  if (!(v7 >> 62))
  {
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_38:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v49 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v49)
    goto LABEL_38;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x1BCCF24CC](0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_41;
    }
    v8 = *(id *)(v7 + 32);
  }
  v9 = v8;
  swift_bridgeObjectRelease();
  if ((objc_msgSend(v1, sel_representsRange) & 1) == 0)
  {
    v23 = objc_msgSend(v9, sel_originalCodedQuantity);
    v24 = v23;
    if (v23)
    {
      v25 = objc_msgSend(v23, sel_displayString);

      sub_1BC62C680();
      v24 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setValueString_, v24);

    v26 = objc_msgSend(v9, sel_rangeLow);
    objc_msgSend(v2, sel_setRangeLow_, v26);

    v27 = objc_msgSend(v9, sel_originalRangeLowCodedQuantity);
    v28 = v27;
    if (v27)
    {
      v29 = objc_msgSend(v27, sel_displayString);

      sub_1BC62C680();
      v28 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setRangeLowString_, v28);

    v30 = objc_msgSend(v9, sel_rangeHigh);
    objc_msgSend(v2, sel_setRangeHigh_, v30);

    v31 = objc_msgSend(v9, sel_originalRangeHighCodedQuantity);
    v32 = v31;
    if (v31)
    {
      v33 = objc_msgSend(v31, sel_displayString);

      sub_1BC62C680();
      v32 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setRangeHighString_, v32);

    v34 = objc_msgSend(v9, sel_originalCodedQuantity);
    if (v34)
    {
      v35 = v34;
      v36 = objc_msgSend(v34, sel_unitCoding);

      if (v36)
      {
        sub_1BC611CF8(v36);
        if (v37)
        {
          v38 = (void *)sub_1BC62C650();
          swift_bridgeObjectRelease();
        }
        else
        {
          v38 = 0;
        }
        objc_msgSend(v2, sel_setUnitString_, v38);

        goto LABEL_34;
      }
    }
    v39 = objc_msgSend(v1, sel_unit);
    if (v39)
    {
      v40 = v39;
      sub_1BC611EC4(v39);
      v42 = v41;

      if (v42)
      {
        v43 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
      }
      else
      {
        v43 = 0;
      }
      objc_msgSend(v2, sel_setUnitString_, v43);
      goto LABEL_33;
    }
    goto LABEL_42;
  }
  v10 = objc_msgSend(v9, sel_quantity);
  v11 = objc_msgSend(v10, sel__unit);

  objc_msgSend(v5, sel_minValueForUnit_, v11);
  v13 = v12;

  v14 = objc_msgSend(v9, sel_quantity);
  v15 = objc_msgSend(v14, sel__unit);

  objc_msgSend(v5, sel_maxValueForUnit_, v15);
  v17 = v16;

  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v13);
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v17);
  v20 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v18, v19);

  HKValueRange<>.valueDisplayString(style:)(1);
  if (v21)
  {
    v22 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v2, sel_setValueString_, v22);

  if (v1[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_partOfOutOfRangeSeries] == 1)
    v44 = HKChartableCodedQuantitySet.hasOutOfRangeQuantities.getter();
  else
    v44 = 0;
  objc_msgSend(v2, sel_setUseOutOfRangeValueColor_, v44 & 1);
  v45 = objc_msgSend(v1, sel_unit);
  if (v45)
  {
    v46 = v45;
    sub_1BC611EC4(v45);
    v48 = v47;

    if (v48)
    {
      v43 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = 0;
    }
    objc_msgSend(v2, sel_setUnitString_, v43);

LABEL_33:
LABEL_34:

    return;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

id SingleValueChartData.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SingleValueChartData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SingleValueChartData.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueChartData();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC34C7C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_date;
  v4 = sub_1BC62A760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC34C804()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_dateFormat);
}

uint64_t sub_1BC34C814()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_hasTime);
}

uint64_t sub_1BC34C824()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_partOfOutOfRangeSeries);
}

void Array<A>.minMaxValuesAndUnit()(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  double v10;
  double v11;
  char **v12;
  char **v13;
  double v14;
  double v15;
  double v16;
  NSObject *v17;
  NSObject *v18;
  NSObject *v19;
  NSObject *v20;
  char **v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  unint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  double v34;
  id v35;
  char v36;
  double v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;

  v4 = sub_1BC62BB34();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v29 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v30 = sub_1BC62D3B8();
    v6 = v30;
    if (v29 >= 2)
    {
      if (!v30)
        goto LABEL_45;
      if (v30 >= 1)
        goto LABEL_3;
      __break(1u);
    }
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6 > 1)
    {
LABEL_3:
      v39 = a2;
      v7 = 0;
      v8 = 0;
      v9 = a1 & 0xC000000000000001;
      v10 = 1.79769313e308;
      v11 = -1.79769313e308;
      v12 = &selRef_titleLabel;
      v13 = &selRef_titleLabel;
      v40 = a1 & 0xC000000000000001;
      v41 = v6;
      while (1)
      {
        if (v9)
        {
          v17 = MEMORY[0x1BCCF24CC](v8, a1);
          if (!v7)
            goto LABEL_4;
        }
        else
        {
          v17 = *(id *)(a1 + 8 * v8 + 32);
          if (!v7)
          {
LABEL_4:
            v7 = objc_msgSend(v17, v12[16], v39);
LABEL_5:
            objc_msgSend(v17, v13[500], v39);
            if (v14 < v10)
              v10 = v14;
            -[NSObject maxValue](v17, sel_maxValue);
            v16 = v15;

            if (v11 <= v16)
              v11 = v16;
            goto LABEL_9;
          }
        }
        v18 = v7;
        v19 = objc_msgSend(v17, v12[16]);
        if (!v19)
        {

          goto LABEL_5;
        }
        v20 = v19;
        v21 = v12;
        sub_1BC34B6A0(0, &qword_1EF429110);
        if ((sub_1BC62CEB4() & 1) != 0)
        {

          v13 = &selRef_titleLabel;
          goto LABEL_5;
        }
        v22 = v44;
        sub_1BC62BAE0();
        v23 = sub_1BC62BB28();
        v24 = sub_1BC62CAC4();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = a1;
          v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v26 = 0;
          _os_log_impl(&dword_1BC30A000, v23, v24, "Cannot concatenate SingleValueChartData with different units, skipping one entry", v26, 2u);
          v27 = v26;
          a1 = v25;
          v22 = v44;
          MEMORY[0x1BCCF36A8](v27, -1, -1);
          v28 = v17;
        }
        else
        {
          v28 = v23;
          v23 = v20;
          v20 = v18;
          v18 = v17;
        }
        v9 = v40;

        (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v43);
        v6 = v41;
        v12 = v21;
        v13 = &selRef_titleLabel;
LABEL_9:
        if (v6 == ++v8)
        {
          swift_bridgeObjectRelease();
          a2 = v39;
          goto LABEL_41;
        }
      }
    }
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    v7 = 0;
    v36 = 1;
    v10 = 0.0;
    v11 = 0.0;
LABEL_42:
    *(double *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v36;
    *(double *)(a2 + 16) = v11;
    *(_BYTE *)(a2 + 24) = v36;
    *(_QWORD *)(a2 + 32) = v7;
    return;
  }
  v31 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v32 = *(id *)(a1 + 32);
      goto LABEL_31;
    }
    __break(1u);
LABEL_45:
    swift_bridgeObjectRelease();
    v7 = 0;
    v10 = 1.79769313e308;
    v11 = -1.79769313e308;
    goto LABEL_41;
  }
  v32 = (id)MEMORY[0x1BCCF24CC](0, a1);
LABEL_31:
  v33 = v32;
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_minValue);
  v10 = v34;

  if (v31)
  {
    swift_bridgeObjectRetain();
    v35 = (id)MEMORY[0x1BCCF24CC](0, a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_47;
    }
    v35 = *(id *)(a1 + 32);
  }
  objc_msgSend(v35, sel_maxValue);
  v11 = v37;

  if (v31)
  {
    swift_bridgeObjectRetain();
    v38 = (id)MEMORY[0x1BCCF24CC](0, a1);
    swift_bridgeObjectRelease();
LABEL_40:
    v7 = objc_msgSend(v38, sel_unit);

LABEL_41:
    v36 = 0;
    goto LABEL_42;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v38 = *(id *)(a1 + 32);
    goto LABEL_40;
  }
LABEL_47:
  __break(1u);
}

uint64_t type metadata accessor for SingleValueChartData()
{
  uint64_t result;

  result = qword_1EF4291A0;
  if (!qword_1EF4291A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC34CCEC()
{
  return type metadata accessor for SingleValueChartData();
}

uint64_t sub_1BC34CCF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A760();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SingleValueChartData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SingleValueChartData.__allocating_init(chartableQuantitySet:date:dateFormat:hasTime:partOfOutOfRangeSeries:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SingleValueChartData.referenceRangeViewData()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

unint64_t sub_1BC34CDB8()
{
  return 0xD000000000000014;
}

id LoadingTableViewCell.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id LoadingTableViewCell.init()()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1BC62C650();
  v2 = objc_msgSend(v0, sel_initWithStyle_reuseIdentifier_, 0, v1);

  return v2;
}

id LoadingTableViewCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id LoadingTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  objc_super v14;

  v6 = OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_containerView;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_init);
  v9 = OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);

  if (a3)
  {
    v10 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for LoadingTableViewCell();
  v11 = objc_msgSendSuper2(&v14, sel_initWithStyle_reuseIdentifier_, a1, v10);

  v12 = v11;
  sub_1BC34D1F8();

  return v12;
}

uint64_t type metadata accessor for LoadingTableViewCell()
{
  return objc_opt_self();
}

id LoadingTableViewCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id LoadingTableViewCell.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_containerView;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for LoadingTableViewCell();
  v7 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);
  v8 = v7;
  if (v7)
  {
    v9 = v7;
    sub_1BC34D1F8();

  }
  return v8;
}

id sub_1BC34D1C8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner), sel_startAnimating);
}

id sub_1BC34D1E0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner), sel_stopAnimating);
}

void sub_1BC34D1F8()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  double v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_containerView];
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_addSubview_, v2);

  v4 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner];
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_addSubview_, v4);
  objc_msgSend(v4, sel_setHidesWhenStopped_, 0);
  objc_msgSend(v4, sel_startAnimating);
  v5 = objc_msgSend(v1, sel_contentView);
  v6 = objc_msgSend(v5, sel_heightAnchor);

  v7 = objc_msgSend(v6, sel_constraintGreaterThanOrEqualToConstant_, *MEMORY[0x1E0DC53E0]);
  LODWORD(v8) = 1132068864;
  objc_msgSend(v7, sel_setPriority_, v8);
  v42 = (void *)objc_opt_self();
  sub_1BC34D844();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC639650;
  *(_QWORD *)(v9 + 32) = v7;
  v41 = v7;
  v10 = objc_msgSend(v2, sel_centerXAnchor);
  v11 = objc_msgSend(v1, sel_contentView);
  v12 = objc_msgSend(v11, (SEL)&selRef__displayItemsForGenericMedicalRecord_completion_ + 6);

  v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
  *(_QWORD *)(v9 + 40) = v13;
  v14 = objc_msgSend(v2, sel_centerYAnchor);
  v15 = objc_msgSend(v1, sel_contentView);
  v16 = objc_msgSend(v15, sel_centerYAnchor);

  v17 = objc_msgSend(v14, (SEL)&selRef_componentsJoinedByString_ + 6, v16);
  *(_QWORD *)(v9 + 48) = v17;
  v18 = objc_msgSend(v2, sel_leadingAnchor);
  v19 = objc_msgSend(v1, sel_contentView);
  v20 = objc_msgSend(v19, sel_leadingAnchor);

  v21 = objc_msgSend(v18, sel_constraintGreaterThanOrEqualToSystemSpacingAfterAnchor_multiplier_, v20, 1.0);
  *(_QWORD *)(v9 + 56) = v21;
  v22 = objc_msgSend(v1, sel_contentView);
  v23 = objc_msgSend(v22, sel_trailingAnchor);

  v24 = objc_msgSend(v1, sel_contentView);
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = objc_msgSend(v23, sel_constraintGreaterThanOrEqualToSystemSpacingAfterAnchor_multiplier_, v25, 1.0);
  *(_QWORD *)(v9 + 64) = v26;
  v27 = objc_msgSend(v2, sel_topAnchor);
  v28 = objc_msgSend(v1, sel_contentView);
  v29 = objc_msgSend(v28, sel_topAnchor);

  v30 = objc_msgSend(v27, sel_constraintGreaterThanOrEqualToSystemSpacingBelowAnchor_multiplier_, v29, 1.0);
  *(_QWORD *)(v9 + 72) = v30;
  v31 = objc_msgSend(v1, sel_contentView);
  v32 = objc_msgSend(v31, sel_bottomAnchor);

  v33 = objc_msgSend(v2, sel_bottomAnchor);
  v34 = objc_msgSend(v32, sel_constraintGreaterThanOrEqualToSystemSpacingBelowAnchor_multiplier_, v33, 1.0);

  *(_QWORD *)(v9 + 80) = v34;
  v35 = objc_msgSend(v4, sel_centerXAnchor);
  v36 = objc_msgSend(v2, sel_centerXAnchor);
  v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  *(_QWORD *)(v9 + 88) = v37;
  v38 = objc_msgSend(v4, sel_centerYAnchor);
  v39 = objc_msgSend(v2, sel_centerYAnchor);
  v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  *(_QWORD *)(v9 + 96) = v40;
  sub_1BC62C890();
  sub_1BC34D89C();
  v43 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_activateConstraints_, v43);

}

id LoadingTableViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LoadingTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for LoadingTableViewCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static LoadingTableViewCell.reuseIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of LoadingTableViewCell.willDisplay()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of LoadingTableViewCell.didEndDisplaying()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

void sub_1BC34D844()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4E30)
  {
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4E30);
  }
}

unint64_t sub_1BC34D89C()
{
  unint64_t result;

  result = qword_1EF4290A0;
  if (!qword_1EF4290A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF4290A0);
  }
  return result;
}

uint64_t sub_1BC34D9A8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC34D9CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = v0;
  sub_1BC62D688();
  v2 = *(void **)(v0 + 8);
  if (v2)
  {
    sub_1BC62D688();
    v3 = v2;
    sub_1BC62CEC0();

    v4 = *(void **)(v1 + 16);
    if (v4)
      goto LABEL_3;
LABEL_6:
    sub_1BC62D688();
    v6 = *(void **)(v1 + 24);
    if (v6)
      goto LABEL_4;
LABEL_7:
    sub_1BC62D688();
    return sub_1BC62D688();
  }
  sub_1BC62D688();
  v4 = *(void **)(v0 + 16);
  if (!v4)
    goto LABEL_6;
LABEL_3:
  sub_1BC62D688();
  v5 = v4;
  sub_1BC62CEC0();

  v6 = *(void **)(v1 + 24);
  if (!v6)
    goto LABEL_7;
LABEL_4:
  sub_1BC62D688();
  v7 = v6;
  sub_1BC62CEC0();

  return sub_1BC62D688();
}

uint64_t sub_1BC34DAC4()
{
  sub_1BC62D670();
  sub_1BC34D9CC();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC34DB04()
{
  sub_1BC62D670();
  sub_1BC34D9CC();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC34DB3C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  char v6;
  _OWORD v7[2];
  char v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_BYTE *)(a2 + 32);
  return sub_1BC35645C((unsigned __int8 *)v5, (unsigned __int8 *)v7) & 1;
}

uint64_t sub_1BC34DB84(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC34DBEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC34DC40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC34DC9C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1BC34DCE0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___contentStatusView;
  v2 = *(void **)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___contentStatusView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___contentStatusView);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for ContentStatusView());
    v6 = ContentStatusView.init(title:subtitle:)(0, 0, 0, 0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BC34DD60()
{
  return sub_1BC34DDA8(&OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___clinicalAccountStore, (SEL *)&selRef_healthStore, (Class *)0x1E0D2EE98, (SEL *)&selRef_initWithHealthStore_);
}

id sub_1BC34DD84()
{
  return sub_1BC34DDA8(&OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataProvider, (SEL *)&selRef_healthRecordsStore, (Class *)off_1E74D0650, (SEL *)&selRef_initWithHealthRecordsStore_);
}

id sub_1BC34DDA8(uint64_t *a1, SEL *a2, Class *a3, SEL *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v10;
  id v11;
  void *v12;
  id v13;

  v5 = *a1;
  v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    v7 = *(id *)(v4 + *a1);
  }
  else
  {
    v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v4
                                                                + OBJC_IVAR___HRMedicalRecordTimelineViewController_profile), *a2));
    v11 = objc_msgSend(objc_allocWithZone(*a3), *a4, v10);

    v12 = *(void **)(v4 + v5);
    *(_QWORD *)(v4 + v5) = v11;
    v7 = v11;

    v6 = 0;
  }
  v13 = v6;
  return v7;
}

uint64_t sub_1BC34DE48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  v1 = OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___accountStateProvider;
  if (*(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___accountStateProvider))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___accountStateProvider);
  }
  else
  {
    v3 = v0;
    if (qword_1ED6A4878 != -1)
      swift_once();
    v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR___HRMedicalRecordTimelineViewController_profile), sel_healthStore));
    v5 = objc_msgSend(v4, sel_profileIdentifier);

    MEMORY[0x1E0C80A78](v6);
    sub_1BC62AA6C();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
    type metadata accessor for AccountStateProvider();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v7, MEMORY[0x1E0D2D480]);
    swift_retain();
    sub_1BC62B888();

    swift_release();
    v2 = v9;
    *(_QWORD *)(v3 + v1) = v9;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

_QWORD *sub_1BC34DFEC()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSourceProvider;
  if (*(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSourceProvider])
  {
    v2 = *(_QWORD **)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSourceProvider];
  }
  else
  {
    v2 = sub_1BC34E050(v0);
    *(_QWORD *)&v0[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

_QWORD *sub_1BC34E050(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _BOOL4 v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  __int128 v13;
  _BYTE *v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  id v20;
  id v21;
  id v22;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - v3;
  v5 = *(_QWORD *)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier] != 0;
  v6 = *(void **)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_profile];
  sub_1BC34EA24((uint64_t)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId], (uint64_t)&v16 - v3);
  v7 = *(void **)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept];
  v8 = *(void **)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider];
  v9 = v8;
  v10 = v6;
  v11 = v7;
  v12 = sub_1BC34DD84();
  v13 = *(_OWORD *)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState + 16];
  v17 = *(_OWORD *)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState];
  v18 = v13;
  v19 = a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState + 32];
  sub_1BC358264((uint64_t)&v17 + 8, (uint64_t)&v20, (uint64_t)&qword_1EF429510, (uint64_t)&unk_1EF429500, 0x1E0CB64B0, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC358210);
  sub_1BC358264((uint64_t)&v18, (uint64_t)&v21, (uint64_t)&qword_1EF429518, (uint64_t)&qword_1EF4294F8, 0x1E0CB64A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC358210);
  sub_1BC358264((uint64_t)&v18 + 8, (uint64_t)&v22, (uint64_t)&unk_1EF429520, (uint64_t)&qword_1ED6A5920, (uint64_t)off_1E74D0668, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC358210);
  v16 = xmmword_1BC639690;
  type metadata accessor for MedicalRecordTimelineDataSourceProvider();
  swift_allocObject();
  sub_1BC3582B4(&v20);
  sub_1BC3582B4(&v21);
  sub_1BC3582B4(&v22);
  v14 = a1;
  return sub_1BC59E3A8(v10, (uint64_t)v4, v7, v5, v8, v12, &v17, (uint64_t *)&v16, a1);
}

uint64_t sub_1BC34E254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSource;
  if (*(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSource))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSource);
  }
  else
  {
    v3 = v0;
    sub_1BC34DFEC();
    type metadata accessor for MedicalRecordTimelineDataSourceProvider();
    sub_1BC347F0C((unint64_t *)&unk_1EF4295D0, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineDataSourceProvider, (uint64_t)&unk_1BC649948);
    v2 = sub_1BC62B708();
    swift_release();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_1BC34E318(__int128 *a1, _QWORD *a2)
{
  void **v3;
  void *v4;
  __int128 v5;
  id v6;

  v3 = (void **)(*a2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView);
  swift_beginAccess();
  v4 = *v3;
  v5 = *a1;
  *(_OWORD *)v3 = *a1;
  v6 = (id)v5;

}

id sub_1BC34E380()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;

  v1 = (id *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView);
  swift_beginAccess();
  v2 = *v1;
  v3 = *v1;
  return v2;
}

void sub_1BC34E3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;

  v5 = v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView;
  swift_beginAccess();
  v6 = *(void **)v5;
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;

}

uint64_t (*sub_1BC34E42C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC34E474(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientSubscriber);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC34E4DC()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1BC34E524(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientSubscriber);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1BC34E574())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC34E5B8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1BC34E674(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1BC34E718(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC34E624@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider;
  swift_beginAccess();
  return sub_1BC34E674(v3, a1);
}

uint64_t sub_1BC34E674(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1BC34E6B8(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1BC34E718(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1BC34E718(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t (*sub_1BC34E730())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC34E7D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - v5;
  v7 = sub_1BC62A7B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34EA24(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BC358494((uint64_t)v6, (uint64_t)&qword_1EF42B210, (uint64_t)MEMORY[0x1E0CB0998], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
    swift_storeEnumTagMultiPayload();
    v17 = sub_1BC62C71C();
    v18 = v11;
    sub_1BC62C764();
    sub_1BC5FC964();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v12 = v17;
    sub_1BC348D78((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    sub_1BC356030();
    v14 = &v3[*(int *)(v13 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    *(_QWORD *)v14 = 0;
    *((_QWORD *)v14 + 1) = 0xE000000000000000;
    swift_storeEnumTagMultiPayload();
    v17 = sub_1BC62C71C();
    v18 = v15;
    sub_1BC62C764();
    sub_1BC5FC964();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v12 = v17;
    sub_1BC348D78((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v12;
}

uint64_t sub_1BC34EA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *MedicalRecordTimelineViewController.__allocating_init(profile:category:accountId:conceptIdentifier:userDomainConcept:highlightedRecordId:displayingRemovedRecords:preloadedRemovedRecords:predicatePerSampleType:showExportButton:)(void *a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, int a7, uint64_t a8, void *a9, char a10)
{
  objc_class *v10;
  id v18;
  char *v19;

  v18 = objc_allocWithZone(v10);
  v19 = sub_1BC356878(a1, a2, a3, a4, a5, a6, a8, a9, a10);

  return v19;
}

char *MedicalRecordTimelineViewController.init(profile:category:accountId:conceptIdentifier:userDomainConcept:highlightedRecordId:displayingRemovedRecords:preloadedRemovedRecords:predicatePerSampleType:showExportButton:)(void *a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, unsigned __int8 a10)
{
  char *v11;

  v11 = sub_1BC356878(a1, a2, a3, a4, a5, a6, a8, a9, a10);

  return v11;
}

_BYTE *MedicalRecordTimelineViewController.__allocating_init(profile:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v11)(id, _QWORD);
  id v12;
  _BYTE *v13;
  void *v14;
  _BYTE *v15;
  id v16;
  id v17;
  uint64_t v18;
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v20[-v7];
  v9 = sub_1BC62A7B4();
  v10 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(v5, 1, 1, v9);
  v11 = *(uint64_t (**)(id, _QWORD))(v1 + 960);
  v12 = a1;
  v13 = (_BYTE *)v11(v12, 0);
  v13[OBJC_IVAR___HRMedicalRecordTimelineViewController_showGradientBackgroundForAllRecordsRoom] = 1;
  v14 = (void *)objc_opt_self();
  v15 = v13;
  v16 = objc_msgSend(v14, sel_systemBlueColor);
  v17 = objc_msgSend(v16, sel_colorWithAlphaComponent_, 0.5);

  v22 = sub_1BC62B564();
  v23 = MEMORY[0x1E0D2B5A0];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
  sub_1BC62B558();

  v18 = (uint64_t)&v15[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider];
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v18);
  sub_1BC34E718(&v21, v18);
  swift_endAccess();

  return v15;
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(profile:category:predicatePerSampleType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  char v16;
  uint64_t v17;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v17 - v11;
  v13 = sub_1BC62A7B4();
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(v10, 1, 1, v13);
  v16 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, _QWORD, _QWORD, char *, _QWORD, _QWORD, uint64_t, char))(v3 + 960))(a1, a2, v12, 0, 0, v10, 0, 0, a3, v16);
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(profile:accountId:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v19;
  uint64_t v20;

  v3 = v2;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - v10;
  v12 = objc_allocWithZone(v3);
  ObjectType = swift_getObjectType();
  v14 = sub_1BC62A7B4();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, a2, v14);
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v16(v11, 0, 1, v14);
  v16(v9, 1, 1, v14);
  v19 = 1;
  v17 = (*(uint64_t (**)(uint64_t, _QWORD, char *, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD, char))(ObjectType + 960))(a1, 0, v11, 0, 0, v9, 0, 0, 0, v19);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a2, v14);
  swift_deallocPartialClassInstance();
  return v17;
}

uint64_t MedicalRecordTimelineViewController.init(profile:accountId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  char v16;
  uint64_t v17;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  ObjectType = swift_getObjectType();
  v11 = sub_1BC62A7B4();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a2, v11);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v13(v9, 0, 1, v11);
  v13(v7, 1, 1, v11);
  v16 = 1;
  v14 = (*(uint64_t (**)(uint64_t, _QWORD, char *, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD, char))(ObjectType + 960))(a1, 0, v9, 0, 0, v7, 0, 0, 0, v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, v11);
  swift_deallocPartialClassInstance();
  return v14;
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(profile:conceptIdentifier:category:highlightedRecordId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;

  v9 = MEMORY[0x1E0CB0998];
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v20 - v14;
  v16 = sub_1BC62A7B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_1BC34EA24(a4, (uint64_t)v13);
  v19 = 0;
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, _QWORD, char *, _QWORD, _QWORD, _QWORD, char))(v4 + 960))(a1, a3, v15, a2, 0, v13, 0, 0, 0, v19);
  sub_1BC358494(a4, (uint64_t)&qword_1EF42B210, (uint64_t)v9, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
  return v17;
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(profile:userDomainConcept:category:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  char v16;
  uint64_t v17;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v17 - v11;
  v13 = sub_1BC62A7B4();
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(v10, 1, 1, v13);
  v16 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, _QWORD, uint64_t, char *, _QWORD, _QWORD, _QWORD, char))(v3 + 960))(a1, a3, v12, 0, a2, v10, 0, 0, 0, v16);
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(profile:preloadedRemovedRecords:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  char v14;
  uint64_t v15;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - v9;
  v11 = sub_1BC62A7B4();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(v8, 1, 1, v11);
  v14 = 0;
  return (*(uint64_t (**)(uint64_t, _QWORD, char *, _QWORD, _QWORD, char *, uint64_t, uint64_t, _QWORD, char))(v2 + 960))(a1, 0, v10, 0, 0, v8, 1, a2, 0, v14);
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(forRemovedRecordWithProfile:category:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  char v14;
  uint64_t v15;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - v9;
  v11 = sub_1BC62A7B4();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(v8, 1, 1, v11);
  v14 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, _QWORD, _QWORD, char *, uint64_t, _QWORD, _QWORD, char))(v2 + 960))(a1, a2, v10, 0, 0, v8, 1, 0, 0, v14);
}

id MedicalRecordTimelineViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  sub_1BC352140();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC34FA90()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  objc_class *v12;
  void *v13;
  id result;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  objc_class *v52;
  void *v53;
  objc_super v54;

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v51 = (uint64_t)&v50 - v4;
  v5 = sub_1BC62AD9C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_account];
  if (v9)
  {
    v10 = v9;
    sub_1BC34DFEC();
    swift_retain();
    swift_release();
    v53 = v9;
    v11 = v10;
    sub_1BC62BF00();

    swift_release();
  }
  v12 = (objc_class *)type metadata accessor for MedicalRecordTimelineViewController();
  v54.receiver = v0;
  v54.super_class = v12;
  v52 = v12;
  objc_msgSendSuper2(&v54, sel_viewDidLoad);
  sub_1BC34E254();
  sub_1BC62B4EC();
  v13 = (void *)sub_1BC62B000();
  swift_release();
  result = objc_msgSend(v0, sel_collectionView);
  if (!result)
  {
    __break(1u);
    goto LABEL_43;
  }
  v15 = result;
  objc_msgSend(result, sel_setCollectionViewLayout_animated_, v13, 0);

  sub_1BC42A9F8();
  result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v16 = result;
  v17 = ObjectType;
  objc_msgSend(result, sel_setPreservesSuperviewLayoutMargins_, 1);

  result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v18 = result;
  objc_msgSend(result, sel_setAlwaysBounceVertical_, 1);

  v19 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v19, sel__setSupportsTwoLineLargeTitles_, 1);

  result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v20 = result;
  sub_1BC62CB9C();
  v21 = (void *)sub_1BC62AD90();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v20, sel_setBackgroundColor_, v21);

  result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v22 = result;
  objc_msgSend(result, sel_setSelfSizingInvalidation_, 2);

  sub_1BC34E254();
  result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v23 = result;
  v24 = v17;
  type metadata accessor for DataSourceObserver();
  v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v26 = (void *)sub_1BC62AFDC();
  swift_retain();
  objc_msgSend(v26, sel_registerObserver_, v25);

  swift_release();
  swift_release();

  *(_QWORD *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_observer] = v25;
  swift_release();
  if (*(_QWORD *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_userDomainConcept]
    || *(_QWORD *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept])
  {
    goto LABEL_11;
  }
  if (*(_QWORD *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier])
  {
    objc_msgSend(v1, sel_setTitle_, 0);
    v39 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v39, sel_setLargeTitleDisplayMode_, 2);
LABEL_33:

    goto LABEL_12;
  }
  v40 = *(_QWORD *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_preloadedRemovedRecords];
  if (v40)
  {
    if (v40 >> 62)
    {
      swift_bridgeObjectRetain();
      v49 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v49 > 0)
        goto LABEL_30;
    }
    else if (*(uint64_t *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
    {
LABEL_30:
      if (qword_1ED6A4888 != -1)
        swift_once();
      v41 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v39 = (id)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v39);
      goto LABEL_33;
    }
  }
  if (v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords] == 1)
    goto LABEL_30;
  v42 = *(void **)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_category];
  if (v42)
  {
    v43 = v42;
    v44 = objc_msgSend(v43, sel_displayName);
    if (!v44)
    {
      sub_1BC62C680();
      v44 = (id)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v1, sel_setTitle_, v44);

  }
  else
  {
    v45 = v51;
    sub_1BC34EA24((uint64_t)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId], v51);
    v46 = sub_1BC62A7B4();
    v47 = MEMORY[0x1E0CB0998];
    v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v45, 1, v46);
    sub_1BC358494(v45, (uint64_t)&qword_1EF42B210, (uint64_t)v47, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
    if (v48 != 1)
LABEL_11:
      objc_msgSend(v1, sel_setTitle_, 0);
  }
LABEL_12:
  v27 = &v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle];
  swift_beginAccess();
  if (*((_QWORD *)v27 + 1))
  {
    swift_bridgeObjectRetain();
    v28 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setTitle_, v28);

  }
  v29 = objc_msgSend(v1, sel_title);
  if (!v29)
  {
    if ((sub_1BC357074() & 1) != 0)
      goto LABEL_18;
    v30 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v30, sel_setLargeTitleDisplayMode_, 2);

    v31 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v31, sel__setManualScrollEdgeAppearanceEnabled_, 0);

    v32 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v32, sel__setAutoScrollEdgeTransitionDistance_, 8.0);

    v29 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v29, sel__setManualScrollEdgeAppearanceEnabled_, 1);
  }

LABEL_18:
  sub_1BC352D40();
  sub_1BC3519B0();
  sub_1BC352550(0);
  if (v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_showGradientBackgroundForAllRecordsRoom] == 1)
  {
    sub_1BC347F0C(&qword_1EF429270, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineViewController, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineViewController);
    sub_1BC62B540();
    result = objc_msgSend(v1, sel_collectionView);
    if (result)
    {
      v33 = result;
      v34 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      objc_msgSend(v33, sel_setBackgroundColor_, v34);

      goto LABEL_21;
    }
LABEL_48:
    __break(1u);
    return result;
  }
LABEL_21:
  v35 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1EF428690 != -1)
    swift_once();
  objc_msgSend(v35, sel_addObserver_selector_name_object_, v1, sel_reloadDataWithNotification_, qword_1EF433600, 0);

  sub_1BC357158(0, (unint64_t *)&qword_1EF429250, (uint64_t (*)(uint64_t))sub_1BC3571B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1BC639590;
  v37 = sub_1BC62C500();
  v38 = sub_1BC347F0C(&qword_1EF429268, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2F348], MEMORY[0x1E0D2F340]);
  *(_QWORD *)(v36 + 32) = v37;
  *(_QWORD *)(v36 + 40) = v38;
  *(_QWORD *)(swift_allocObject() + 16) = v24;
  sub_1BC62CBC0();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return (id)swift_release();
}

void sub_1BC350418(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;

  v2 = objc_msgSend(a1, sel_traitCollection);
  sub_1BC62CCC8();

  sub_1BC62CBCC();
  sub_1BC62CDB8();
  sub_1BC34E254();
  sub_1BC62B4E0();
  swift_release();
  v3 = objc_msgSend(a1, sel_collectionView);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_collectionViewLayout);

    objc_msgSend(v5, sel_invalidateLayout);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC350524(char a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  _QWORD v8[4];
  objc_super v9;

  v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for MedicalRecordTimelineViewController();
  objc_msgSendSuper2(&v9, sel_viewIsAppearing_, a1 & 1);
  v4 = objc_msgSend(v2, sel_traitCollection);
  sub_1BC62CCC8();

  sub_1BC62CBCC();
  result = sub_1BC62CDB8();
  if (*((_BYTE *)v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_showGradientBackgroundForAllRecordsRoom) == 1)
  {
    v6 = (uint64_t)v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider;
    swift_beginAccess();
    sub_1BC34E674(v6, (uint64_t)v8);
    __swift_project_boxed_opaque_existential_1Tm(v8, v8[3]);
    v7 = objc_msgSend(v2, sel_traitCollection);
    sub_1BC62B21C();

    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  return result;
}

uint64_t sub_1BC350758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - v3;
  sub_1BC35891C(0, (unint64_t *)&qword_1EF429540, (void (*)(uint64_t))sub_1BC3583FC, (void (*)(void))sub_1BC358478);
  v6 = v5;
  v14 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  v9 = *(_QWORD *)(sub_1BC34DE48() + 24);
  swift_retain();
  swift_release();
  v16 = v9;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v15 = (id)sub_1BC62CC74();
  v10 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1BC3583FC();
  sub_1BC358478();
  sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  sub_1BC62C080();
  sub_1BC358494((uint64_t)v4, (uint64_t)&qword_1ED6A4DF0, (uint64_t)MEMORY[0x1E0DEF868], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC358A68((unint64_t *)&unk_1EF429558, (unint64_t *)&qword_1EF429540, (void (*)(uint64_t))sub_1BC3583FC, (void (*)(void))sub_1BC358478);
  v11 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
  *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountStateCancellable) = v11;
  return swift_release();
}

void sub_1BC3509C4(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v4 = *(void **)(a1 + 8);
    v3 = *(_QWORD *)(a1 + 16);
    v5 = a2 + 16;
    swift_beginAccess();
    v6 = MEMORY[0x1BCCF37A4](v5);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = v2;
      MedicalRecordTimelineViewController.accountStateDidChange(account:changeType:)(v4, v3);
      sub_1BC3584E4(v2, v4);

    }
  }
}

void MedicalRecordTimelineViewController.accountStateDidChange(account:changeType:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  char **v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  id v70;
  char *v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  id v86;
  char *v87;
  uint64_t (*v88)(void);
  char v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  id v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  unint64_t v99;
  id v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  char *v106;
  char *v107;
  uint64_t (*v108)(void);
  char v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  id v112;
  NSObject *v113;
  os_log_type_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  char *v125;
  id v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  id v149[2];

  v3 = v2;
  v138 = a2;
  v147 = v3;
  ObjectType = swift_getObjectType();
  sub_1BC357210();
  v7 = v6;
  v8 = MEMORY[0x1E0C80A78](v6);
  v136 = (uint64_t)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v135 = (uint64_t)&v127 - v10;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v130 = (uint64_t)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v134 = (char *)&v127 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v140 = (char *)&v127 - v17;
  MEMORY[0x1E0C80A78](v16);
  v144 = (uint64_t)&v127 - v18;
  v19 = sub_1BC62A7B4();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v142 = (char *)&v127 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_1BC62BB34();
  v22 = *(_QWORD *)(v146 - 8);
  v23 = MEMORY[0x1E0C80A78](v146);
  v143 = (char *)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v127 - v26;
  v28 = MEMORY[0x1E0C80A78](v25);
  v131 = (char *)&v127 - v29;
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v127 - v30;
  sub_1BC62BAF8();
  v32 = a1;
  v33 = sub_1BC62BB28();
  v34 = sub_1BC62CAB8();
  LODWORD(v137) = v34;
  v35 = os_log_type_enabled(v33, v34);
  v36 = &selRef_constraintGreaterThanOrEqualToConstant_;
  v141 = v19;
  v145 = v20;
  v133 = ObjectType;
  v139 = v7;
  if (v35)
  {
    v37 = swift_slowAlloc();
    v132 = v27;
    v38 = v37;
    v128 = (void *)swift_slowAlloc();
    v149[0] = v128;
    *(_DWORD *)v38 = 136446722;
    v39 = sub_1BC62D718();
    v129 = v22;
    v40 = v142;
    v148 = sub_1BC4991F0(v39, v41, (uint64_t *)v149);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2082;
    v42 = objc_msgSend(v32, sel_identifier);
    sub_1BC62A79C();

    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v43 = sub_1BC62D52C();
    v44 = v19;
    v46 = v45;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v40, v44);
    v148 = sub_1BC4991F0(v43, v46, (uint64_t *)v149);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 22) = 2082;
    v47 = v138;
    v48 = (id)NSStringFromAccountStateChangeType();
    v49 = sub_1BC62C680();
    v51 = v50;

    v148 = sub_1BC4991F0(v49, v51, (uint64_t *)v149);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v33, (os_log_type_t)v137, "%{public}s got notified that account %{public}s was changed with type %{public}s", (uint8_t *)v38, 0x20u);
    v52 = v128;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v52, -1, -1);
    v53 = v38;
    v27 = v132;
    v36 = &selRef_constraintGreaterThanOrEqualToConstant_;
    MEMORY[0x1BCCF36A8](v53, -1, -1);

    v137 = *(void (**)(char *, uint64_t))(v129 + 8);
    v137(v31, v146);
    v54 = v143;
    v55 = v144;
    v56 = (uint64_t)v140;
  }
  else
  {

    v137 = *(void (**)(char *, uint64_t))(v22 + 8);
    v137(v31, v146);
    v54 = v143;
    v55 = v144;
    v56 = (uint64_t)v140;
    v47 = v138;
  }
  v57 = v147 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId;
  v58 = objc_msgSend(v32, v36[234]);
  if (v47 == 3)
  {
    sub_1BC62A79C();

    v59 = v145;
    v60 = v141;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v145 + 56))(v55, 0, 1, v141);
    v61 = v135;
    v62 = v135 + *(int *)(v139 + 48);
    sub_1BC34EA24(v57, v135);
    sub_1BC34EA24(v55, v62);
    v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
    if (v63(v61, 1, v60) == 1)
    {
      sub_1BC358494(v55, (uint64_t)&qword_1EF42B210, (uint64_t)MEMORY[0x1E0CB0998], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
      if (v63(v62, 1, v60) == 1)
      {
        sub_1BC358494(v61, (uint64_t)&qword_1EF42B210, (uint64_t)MEMORY[0x1E0CB0998], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
LABEL_22:
        v92 = v131;
        sub_1BC62BAF8();
        v93 = v32;
        v94 = sub_1BC62BB28();
        v95 = sub_1BC62CAAC();
        if (os_log_type_enabled(v94, v95))
        {
          v96 = swift_slowAlloc();
          v97 = (void *)swift_slowAlloc();
          v149[0] = v97;
          *(_DWORD *)v96 = 136446466;
          v98 = sub_1BC62D718();
          v148 = sub_1BC4991F0(v98, v99, (uint64_t *)v149);
          sub_1BC62CFF8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v96 + 12) = 2082;
          v100 = objc_msgSend(v93, sel_identifier);
          v101 = v142;
          sub_1BC62A79C();

          sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v102 = sub_1BC62D52C();
          v103 = v60;
          v105 = v104;
          (*(void (**)(char *, uint64_t))(v145 + 8))(v101, v103);
          v148 = sub_1BC4991F0(v102, v105, (uint64_t *)v149);
          sub_1BC62CFF8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC30A000, v94, v95, "%{public}s account %{public}s was deleted, popping timeline view controller for the account", (uint8_t *)v96, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v97, -1, -1);
          MEMORY[0x1BCCF36A8](v96, -1, -1);

          v106 = v131;
        }
        else
        {

          v106 = v92;
        }
        v137(v106, v146);
        sub_1BC3552A4();
        sub_1BC34DFEC();
        swift_retain();
        swift_release();
        v149[0] = 0;
        sub_1BC62BF00();
        swift_release();
        sub_1BC3533E4(1);
        return;
      }
    }
    else
    {
      sub_1BC34EA24(v61, v56);
      if (v63(v62, 1, v60) != 1)
      {
        v87 = v142;
        (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v142, v62, v60);
        v88 = MEMORY[0x1E0CB0998];
        sub_1BC347F0C((unint64_t *)&qword_1EF429288, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        v89 = sub_1BC62C644();
        v90 = v27;
        v91 = *(void (**)(char *, uint64_t))(v59 + 8);
        v91(v87, v60);
        sub_1BC358494(v144, (uint64_t)&qword_1EF42B210, (uint64_t)v88, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
        v91((char *)v56, v60);
        v27 = v90;
        sub_1BC358494(v61, (uint64_t)&qword_1EF42B210, (uint64_t)v88, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
        if ((v89 & 1) != 0)
          goto LABEL_22;
        goto LABEL_14;
      }
      sub_1BC358494(v144, (uint64_t)&qword_1EF42B210, (uint64_t)MEMORY[0x1E0CB0998], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v56, v60);
    }
    sub_1BC348D78(v61, (uint64_t (*)(_QWORD))sub_1BC357210);
LABEL_14:
    sub_1BC62BAF8();
    v70 = v32;
    v71 = v27;
    v72 = sub_1BC62BB28();
    v73 = sub_1BC62CAAC();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = swift_slowAlloc();
      v75 = (void *)swift_slowAlloc();
      v149[0] = v75;
      *(_DWORD *)v74 = 136446466;
      v132 = v71;
      v76 = sub_1BC62D718();
      v77 = v142;
      v148 = sub_1BC4991F0(v76, v78, (uint64_t *)v149);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2082;
      v79 = objc_msgSend(v70, sel_identifier);
      sub_1BC62A79C();

      sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v80 = sub_1BC62D52C();
      v81 = v60;
      v83 = v82;
      (*(void (**)(char *, uint64_t))(v145 + 8))(v77, v81);
      v148 = sub_1BC4991F0(v80, v83, (uint64_t *)v149);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v72, v73, "%{public}s account %{public}s was deleted, reloading data", (uint8_t *)v74, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v75, -1, -1);
      MEMORY[0x1BCCF36A8](v74, -1, -1);

      v84 = v132;
    }
    else
    {

      v84 = v71;
    }
    v137(v84, v146);
    sub_1BC34DFEC();
    swift_retain();
    swift_release();
    sub_1BC62BF0C();
    swift_release();
    v86 = v149[0];
    objc_msgSend(v149[0], sel_reload);

    return;
  }
  v64 = (uint64_t)v134;
  sub_1BC62A79C();

  v65 = v145;
  v66 = v141;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v145 + 56))(v64, 0, 1, v141);
  v67 = v136;
  v68 = v136 + *(int *)(v139 + 48);
  sub_1BC34EA24(v57, v136);
  sub_1BC34EA24(v64, v68);
  v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  if (v69(v67, 1, v66) != 1)
  {
    v85 = v130;
    sub_1BC34EA24(v67, v130);
    if (v69(v68, 1, v66) != 1)
    {
      v107 = v142;
      (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v142, v68, v66);
      v108 = MEMORY[0x1E0CB0998];
      sub_1BC347F0C((unint64_t *)&qword_1EF429288, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v109 = sub_1BC62C644();
      v110 = v67;
      v111 = *(void (**)(char *, uint64_t))(v65 + 8);
      v111(v107, v66);
      sub_1BC358494(v64, (uint64_t)&qword_1EF42B210, (uint64_t)v108, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
      v111((char *)v85, v66);
      v54 = v143;
      sub_1BC358494(v110, (uint64_t)&qword_1EF42B210, (uint64_t)v108, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
      if ((v109 & 1) == 0)
        return;
      goto LABEL_25;
    }
    sub_1BC358494(v64, (uint64_t)&qword_1EF42B210, (uint64_t)MEMORY[0x1E0CB0998], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v85, v66);
LABEL_18:
    sub_1BC348D78(v67, (uint64_t (*)(_QWORD))sub_1BC357210);
    return;
  }
  sub_1BC358494(v64, (uint64_t)&qword_1EF42B210, (uint64_t)MEMORY[0x1E0CB0998], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
  if (v69(v68, 1, v66) != 1)
    goto LABEL_18;
  sub_1BC358494(v67, (uint64_t)&qword_1EF42B210, (uint64_t)MEMORY[0x1E0CB0998], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
LABEL_25:
  sub_1BC62BAF8();
  v112 = v32;
  v113 = sub_1BC62BB28();
  v114 = sub_1BC62CAAC();
  if (os_log_type_enabled(v113, v114))
  {
    v115 = swift_slowAlloc();
    v116 = (void *)swift_slowAlloc();
    v149[0] = v116;
    *(_DWORD *)v115 = 136446466;
    v117 = sub_1BC62D718();
    v118 = v142;
    v148 = sub_1BC4991F0(v117, v119, (uint64_t *)v149);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v115 + 12) = 2082;
    v120 = objc_msgSend(v112, sel_identifier);
    sub_1BC62A79C();

    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v121 = sub_1BC62D52C();
    v122 = v66;
    v124 = v123;
    (*(void (**)(char *, uint64_t))(v145 + 8))(v118, v122);
    v148 = sub_1BC4991F0(v121, v124, (uint64_t *)v149);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v113, v114, "%{public}s account %{public}s was changed, reloading account details", (uint8_t *)v115, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v116, -1, -1);
    MEMORY[0x1BCCF36A8](v115, -1, -1);

    v125 = v143;
  }
  else
  {

    v125 = v54;
  }
  v137(v125, v146);
  v126 = v112;
  sub_1BC3565D0(v112);

}

uint64_t sub_1BC3519B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;

  v1 = v0;
  sub_1BC35866C();
  v3 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  v41 = v3;
  MEMORY[0x1E0C80A78](v2);
  v39 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35876C();
  v6 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  v38 = v6;
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - v9;
  sub_1BC35891C(0, (unint64_t *)&unk_1EF429598, (void (*)(uint64_t))sub_1BC3589E0, (void (*)(void))sub_1BC358A44);
  v12 = v11;
  v35 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - v13;
  sub_1BC350758();
  v15 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                              + OBJC_IVAR___HRMedicalRecordTimelineViewController_profile), sel_healthStore));
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6400]), sel_initWithHealthStore_delegate_, v15, v1);

  v17 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver);
  *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver) = v16;

  v18 = sub_1BC34DFEC()[5];
  swift_retain();
  swift_release();
  v43 = v18;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v42 = (id)sub_1BC62CC74();
  v19 = sub_1BC62CC38();
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v34 = v19;
  v33(v10, 1, 1, v19);
  sub_1BC3589E0();
  sub_1BC358A44();
  sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  sub_1BC62C080();
  sub_1BC358494((uint64_t)v10, (uint64_t)&qword_1ED6A4DF0, (uint64_t)MEMORY[0x1E0DEF868], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC358A68(&qword_1EF4295B0, (unint64_t *)&unk_1EF429598, (void (*)(uint64_t))sub_1BC3589E0, (void (*)(void))sub_1BC358A44);
  v20 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v12);
  *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_queryReturnedCancellable) = v20;
  swift_release();
  v21 = *(_QWORD *)(sub_1BC34DE48() + 32);
  swift_retain();
  swift_release();
  v43 = v21;
  v42 = (id)sub_1BC62CC74();
  v22 = v33;
  v23 = v34;
  v33(v10, 1, 1, v34);
  sub_1BC35886C(0, (unint64_t *)&qword_1ED6A4B40, (unint64_t *)&qword_1ED6A4B58, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalIngestionState);
  sub_1BC3588DC(&qword_1EF429590, (unint64_t *)&qword_1ED6A4B40, (unint64_t *)&qword_1ED6A4B58, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalIngestionState);
  v24 = v36;
  sub_1BC62C080();
  sub_1BC358494((uint64_t)v10, (uint64_t)&qword_1ED6A4DF0, (uint64_t)MEMORY[0x1E0DEF868], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC347F0C(&qword_1EF4295B8, (uint64_t (*)(uint64_t))sub_1BC35876C, MEMORY[0x1E0C95CB8]);
  v25 = v37;
  v26 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v25);
  *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionStateCancellable) = v26;
  swift_release();
  v27 = *(_QWORD *)(sub_1BC34DE48() + 40);
  swift_retain();
  swift_release();
  v43 = v27;
  v42 = (id)sub_1BC62CC74();
  v22(v10, 1, 1, v23);
  sub_1BC35886C(0, &qword_1ED6A4B50, &qword_1ED6A4B78, (uint64_t (*)(uint64_t))type metadata accessor for HKConceptIndexManagerState);
  sub_1BC3588DC(&qword_1EF429580, &qword_1ED6A4B50, &qword_1ED6A4B78, (uint64_t (*)(uint64_t))type metadata accessor for HKConceptIndexManagerState);
  v28 = v39;
  sub_1BC62C080();
  sub_1BC358494((uint64_t)v10, (uint64_t)&qword_1ED6A4DF0, (uint64_t)MEMORY[0x1E0DEF868], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC347F0C(&qword_1EF4295C0, (uint64_t (*)(uint64_t))sub_1BC35866C, MEMORY[0x1E0C95CB8]);
  v29 = v40;
  v30 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v29);
  *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerStateCancellable) = v30;
  return swift_release();
}

void sub_1BC351FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCF37A4](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1BC352550(0);

  }
}

void sub_1BC35204C(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *a1;
  v5 = *((_BYTE *)a1 + 8);
  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCF37A4](v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = v7 + *a3;
    v10 = *(_QWORD *)v9;
    v11 = *(_BYTE *)(v9 + 8);
    *(_QWORD *)v9 = v4;
    *(_BYTE *)(v9 + 8) = v5;
    if ((v5 & 1) != 0)
    {
      if ((v11 & 1) != 0)
      {
LABEL_11:

        return;
      }
    }
    else
    {
      if (v4 != v10)
        v11 = 1;
      if ((v11 & 1) == 0)
        goto LABEL_11;
    }
    sub_1BC352550(0);
    if ((*(_BYTE *)(v9 + 8) & 1) == 0 && *(_QWORD *)v9 == 1)
    {
      objc_msgSend((id)objc_opt_self(), sel_cancelPreviousPerformRequestsWithTarget_selector_object_, v8, sel_reloadData, 0);
      objc_msgSend(v8, sel_performSelector_withObject_afterDelay_, sel_reloadData, 0, 1.25);
    }
    goto LABEL_11;
  }
}

void sub_1BC352140()
{
  uint64_t v0;
  void *v1;

  if (*(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountStateCancellable))
  {
    swift_retain();
    sub_1BC62BEAC();
    swift_release();
  }
  v1 = *(void **)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver);
  *(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver) = 0;

  if (*(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_queryReturnedCancellable))
  {
    swift_retain();
    sub_1BC62BEAC();
    swift_release();
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionStateCancellable))
  {
    swift_retain();
    sub_1BC62BEAC();
    swift_release();
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerStateCancellable))
  {
    swift_retain();
    sub_1BC62BEAC();
    swift_release();
  }
}

BOOL sub_1BC352208()
{
  uint64_t v0;
  char v2;

  sub_1BC34DFEC();
  swift_retain();
  swift_release();
  sub_1BC62BF0C();
  swift_release();
  if (v2 != 1
    || (*(_BYTE *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive) & 1) != 0
    || (*(_BYTE *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState + 8) & 1) == 0
    && *(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState) == 3)
  {
    return 1;
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState + 8) & 1) != 0)
    return 0;
  return *(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState) == 2;
}

void sub_1BC35230C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider);
  if (v6)
  {
    v14 = v6;
    if ((objc_msgSend(v14, sel_loadingNextPage) & 1) != 0)
    {

    }
    else
    {
      sub_1BC62BAF8();
      v7 = sub_1BC62BB28();
      v8 = sub_1BC62CAAC();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        v10 = swift_slowAlloc();
        v16 = v10;
        *(_DWORD *)v9 = 136446210;
        v11 = sub_1BC62D718();
        v15 = sub_1BC4991F0(v11, v12, &v16);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC30A000, v7, v8, "%{public}s requesting next page of data", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v10, -1, -1);
        MEMORY[0x1BCCF36A8](v9, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      objc_msgSend(v14, sel_requestDataOfNextPage);
      objc_msgSend(v14, sel_setLoadingNextPage_, 1);

    }
  }
}

id sub_1BC352550(char a1)
{
  char *v1;
  id result;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;
  void *v8;
  void *v9;
  void *v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  void *v15;
  char *v16;
  void *v17;
  void *v18;
  void *v19;
  char *v20;
  char *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  char *v33;
  char *v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;

  swift_getObjectType();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_cancelPreviousPerformRequestsWithTarget_selector_object_, v1, sel_updateSystemStatusView, 0);
  if ((a1 & 1) != 0)
    return objc_msgSend(v1, sel_performSelector_withObject_afterDelay_, sel_updateSystemStatusView, v1, 0.25);
  v4 = OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider;
  v5 = *(void **)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider];
  if (v5)
  {
    v6 = objc_msgSend(v5, sel_numberOfGroups);
    if (sub_1BC352208())
    {
      if (v6)
        goto LABEL_6;
      goto LABEL_10;
    }
    if (v6)
      goto LABEL_17;
  }
  else if (sub_1BC352208())
  {
LABEL_10:
    if ((v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords] & 1) == 0)
    {
      if (*(_QWORD *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_category])
      {
        v10 = *(void **)&v1[v4];
        if (v10)
        {
          if ((uint64_t)objc_msgSend(v10, sel_numOfRemovedRecords) > 0)
          {
LABEL_6:
            v7 = (char *)sub_1BC34DCE0();
            objc_msgSend(*(id *)&v7[OBJC_IVAR___HRContentStatusView_spinnerView], sel_stopAnimating);
            objc_msgSend(v7, sel_setNeedsLayout);

            result = objc_msgSend(v1, sel_collectionView);
            if (result)
            {
              v8 = result;
              objc_msgSend(result, sel_setBackgroundView_, 0);

              result = objc_msgSend(v1, sel_collectionView);
              if (result)
              {
                v9 = result;
                objc_msgSend(result, sel_setScrollEnabled_, 1);

                sub_1BC34DFEC();
                swift_retain();
                swift_release();
LABEL_38:
                sub_1BC62BF00();
                return (id)swift_release();
              }
              goto LABEL_45;
            }
            goto LABEL_43;
          }
        }
      }
    }
    v11 = (char *)sub_1BC34DCE0();
    objc_msgSend(*(id *)&v11[OBJC_IVAR___HRContentStatusView_spinnerView], sel_startAnimating);
    objc_msgSend(v11, sel_setNeedsLayout);

    v12 = (char *)sub_1BC34DCE0();
    v13 = &v12[OBJC_IVAR___HRContentStatusView_subtitle];
    swift_beginAccess();
    *(_QWORD *)v13 = 0;
    *((_QWORD *)v13 + 1) = 0;
    swift_bridgeObjectRelease();
    v14 = *(void **)&v12[OBJC_IVAR___HRContentStatusView_subtitleLabel];
    if (*((_QWORD *)v13 + 1))
    {
      swift_bridgeObjectRetain();
      v15 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = 0;
    }
    objc_msgSend(v14, sel_setText_, v15);

    objc_msgSend(v12, sel_setNeedsLayout);
    result = objc_msgSend(v1, sel_collectionView);
    if (result)
    {
      v30 = result;
      v31 = sub_1BC34DCE0();
      objc_msgSend(v30, sel_setBackgroundView_, v31);

      result = objc_msgSend(v1, sel_collectionView);
      if (result)
      {
        v32 = result;
        objc_msgSend(result, sel_setScrollEnabled_, 0);

        sub_1BC34DFEC();
        swift_retain();
        swift_release();
        goto LABEL_38;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_41;
  }
  if ((v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords] & 1) != 0
    || !*(_QWORD *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_category]
    || (v19 = *(void **)&v1[v4]) == 0
    || (uint64_t)objc_msgSend(v19, sel_numOfRemovedRecords) <= 0)
  {
    v20 = (char *)sub_1BC34DCE0();
    objc_msgSend(*(id *)&v20[OBJC_IVAR___HRContentStatusView_spinnerView], sel_stopAnimating);
    objc_msgSend(v20, sel_setNeedsLayout);

    v21 = (char *)sub_1BC34DCE0();
    v22 = (void *)sub_1BC62C650();
    v23 = (id)HBXLocalizedString(v22);

    v24 = sub_1BC62C680();
    v26 = v25;

    v27 = (uint64_t *)&v21[OBJC_IVAR___HRContentStatusView_title];
    swift_beginAccess();
    *v27 = v24;
    v27[1] = v26;
    swift_bridgeObjectRelease();
    v28 = *(void **)&v21[OBJC_IVAR___HRContentStatusView_titleLabel];
    if (v27[1])
    {
      swift_bridgeObjectRetain();
      v29 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = 0;
    }
    objc_msgSend(v28, sel_setText_, v29);

    objc_msgSend(v21, sel_setNeedsLayout);
    v33 = (char *)sub_1BC34DCE0();
    v34 = &v33[OBJC_IVAR___HRContentStatusView_subtitle];
    swift_beginAccess();
    *(_QWORD *)v34 = 0;
    *((_QWORD *)v34 + 1) = 0;
    swift_bridgeObjectRelease();
    v35 = *(void **)&v33[OBJC_IVAR___HRContentStatusView_subtitleLabel];
    if (*((_QWORD *)v34 + 1))
    {
      swift_bridgeObjectRetain();
      v36 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = 0;
    }
    objc_msgSend(v35, sel_setText_, v36);

    objc_msgSend(v33, sel_setNeedsLayout);
    result = objc_msgSend(v1, sel_collectionView);
    if (!result)
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v37 = result;
    v38 = sub_1BC34DCE0();
    objc_msgSend(v37, sel_setBackgroundView_, v38);

    result = objc_msgSend(v1, sel_collectionView);
    if (!result)
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v18 = result;
    objc_msgSend(result, sel_setScrollEnabled_, 0);
LABEL_37:

    sub_1BC34DFEC();
    swift_retain();
    swift_release();
    goto LABEL_38;
  }
LABEL_17:
  v16 = (char *)sub_1BC34DCE0();
  objc_msgSend(*(id *)&v16[OBJC_IVAR___HRContentStatusView_spinnerView], sel_stopAnimating);
  objc_msgSend(v16, sel_setNeedsLayout);

  result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v17 = result;
  objc_msgSend(result, sel_setBackgroundView_, 0);

  result = objc_msgSend(v1, sel_collectionView);
  if (result)
  {
    v18 = result;
    objc_msgSend(result, sel_setScrollEnabled_, 1);
    goto LABEL_37;
  }
LABEL_46:
  __break(1u);
  return result;
}

void sub_1BC352C14()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  objc_class *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  _OWORD v9[4];
  uint64_t v10;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_profile];
  v3 = *(void **)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_account];
  v4 = (objc_class *)type metadata accessor for PDFConfigurationViewController();
  v5 = objc_allocWithZone(v4);
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  objc_allocWithZone(v4);
  v6 = v3;
  v7 = PDFConfigurationViewController.init(profile:account:category:)(v2, v3, (uint64_t *)v9);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B0]), sel_initWithRootViewController_, v7);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v8, 1, 0);

}

void sub_1BC352D40()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  unsigned int v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v24 = MEMORY[0x1E0DEE9D8];
  if (*((_BYTE *)v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_showExportButton) == 1)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v2 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v3 = type metadata accessor for MedicalRecordTimelineViewController();
    v23 = v3;
    v22[0] = v0;
    v4 = v0;
    v5 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    if (v3)
    {
      v6 = __swift_project_boxed_opaque_existential_1Tm(v22, v3);
      v7 = *(_QWORD *)(v3 - 8);
      MEMORY[0x1E0C80A78](v6);
      v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      v10 = sub_1BC62D568();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    }
    else
    {
      v10 = 0;
    }
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithTitle_style_target_action_, v5, 0, v10, sel_didTapExportPDFButton);

    swift_unknownObjectRelease();
    v12 = v11;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

  }
  v13 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, sel_isAppleInternalInstall);

    if (v15)
    {
      v23 = type metadata accessor for MedicalRecordTimelineViewController();
      v22[0] = v1;
      v16 = v1;
      v17 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v22, (uint64_t)sel_tapToRadarWithSender_);
      sub_1BC358494((uint64_t)v22, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
      if (v17)
      {
        v18 = v17;
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();

      }
    }
    v19 = objc_msgSend(v1, sel_navigationItem);
    sub_1BC34B6A0(0, &qword_1EF4295C8);
    v20 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setRightBarButtonItems_animated_, v20, 1);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC3531E0(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  char v6;
  void *v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  v2 = v1;
  if (objc_msgSend(a1, sel_object))
  {
    sub_1BC62D088();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  v3 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BC358264((uint64_t)v8, (uint64_t)v9, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC34B508);
  if (!v10)
  {
    sub_1BC358494((uint64_t)v9, (uint64_t)&qword_1ED6A4840, v3, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
LABEL_9:
    sub_1BC3533E4(1);
    return;
  }
  type metadata accessor for MedicalRecordTimelineViewController();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_9;
  v4 = v2;
  v5 = v7;
  v6 = sub_1BC62CEB4();

  if ((v6 & 1) == 0)
    goto LABEL_9;
}

void sub_1BC3533E4(char a1)
{
  id v1;

  if ((a1 & 1) != 0)
  {
    sub_1BC34DFEC();
    swift_retain();
    swift_release();
    sub_1BC62BF0C();
    swift_release();
    if (v1)
    {
      objc_msgSend(v1, sel_setShouldClearPagingCacheOnNextReload_, 1);

    }
  }
  sub_1BC34DFEC();
  swift_retain();
  swift_release();
  sub_1BC62BF0C();
  swift_release();
  objc_msgSend(v1, sel_reload);

}

uint64_t sub_1BC3534B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  _BOOL8 v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v60;
  char v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _BOOL8 v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  id v74;
  void *v75;
  void *v76;
  uint64_t v77;
  char v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  char *v86;
  id v87;
  id v88;
  uint64_t v89;
  id v90;
  void (*v91)(char *, uint64_t, uint64_t);
  id v92;
  id v93;
  char v94;
  char *v95;
  uint64_t v96;
  void *v97;
  void *v98;
  char *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  id v105;
  id v106;
  void *v107;
  void (*v108)(char *, char *, uint64_t);
  id v109;
  char v110;
  uint64_t v111;
  void *v112;
  void *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  id v119;
  id v120;
  uint64_t result;
  uint64_t v122;
  id v123;
  __int128 v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  _BOOL8 v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  int64_t v137;
  _QWORD *v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v131 = (uint64_t)&v122 - v6;
  v7 = sub_1BC62A7B4();
  v132 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v130 = (char *)&v122 - v11;
  v12 = *(void **)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_category);
  v13 = v12 != 0;
  sub_1BC62C680();
  v14 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v15 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithKey_ascending_, v15, 0);

  v126 = v10;
  if (v12 && (v17 = objc_msgSend(v12, sel_additionalPredicatesForCategory)) != 0)
  {
    v18 = v17;
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
    sub_1BC35839C((unint64_t *)&qword_1ED6A58E0, &qword_1ED6A58D8, 0x1E0CB6B00, MEMORY[0x1E0DEFCF8]);
    v19 = sub_1BC62C548();

  }
  else
  {
    v19 = 0;
  }
  v20 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_additionalPredicatesPerSampleType);
  v134 = v16;
  v135 = v1;
  v133 = v13;
  if (!v20)
  {
    v140 = v19;
    goto LABEL_65;
  }
  v129 = v7;
  if ((v20 & 0xC000000000000001) != 0)
  {
    v21 = sub_1BC62D2F8();
    v138 = 0;
    v22 = 0;
    v23 = 0;
    v24 = v21 | 0x8000000000000000;
  }
  else
  {
    v25 = -1 << *(_BYTE *)(v20 + 32);
    v22 = ~v25;
    v26 = *(_QWORD *)(v20 + 64);
    v138 = (_QWORD *)(v20 + 64);
    v27 = -v25;
    if (v27 < 64)
      v28 = ~(-1 << v27);
    else
      v28 = -1;
    v23 = v28 & v26;
    v24 = v20;
  }
  v128 = v5;
  swift_bridgeObjectRetain();
  v29 = 0;
  v127 = v22;
  v136 = v24 & 0x7FFFFFFFFFFFFFFFLL;
  v137 = (unint64_t)(v22 + 64) >> 6;
  v125 = MEMORY[0x1E0DEE9B0] + 8;
  v124 = xmmword_1BC639570;
LABEL_14:
  v30 = v19 & 0xC000000000000001;
  v31 = (void *)(v19 & 0xFFFFFFFFFFFFFF8);
  if (v19 < 0)
    v31 = (void *)v19;
  v139 = v31;
  v140 = v19;
  while (1)
  {
    v32 = v29;
    if ((v24 & 0x8000000000000000) == 0)
      break;
    v35 = sub_1BC62D364();
    if (!v35)
      goto LABEL_64;
    v37 = v36;
    v141 = v35;
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v38 = v142;
    swift_unknownObjectRelease();
    v141 = v37;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v39 = v142;
    swift_unknownObjectRelease();
    if (!v38)
      goto LABEL_64;
LABEL_40:
    v45 = v140;
    if (!v140)
    {

      v19 = 0;
      goto LABEL_14;
    }
    if (v30)
    {
      v46 = v38;
      v47 = sub_1BC62D358();
      if (!v47)
        goto LABEL_17;
      v141 = v47;
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v48 = v142;
      swift_unknownObjectRelease();

      if (v48)
        goto LABEL_48;
    }
    else if (*(_QWORD *)(v140 + 16))
    {
      v49 = sub_1BC558F8C((uint64_t)v38);
      if ((v50 & 1) == 0)
      {
LABEL_17:

        goto LABEL_18;
      }
      v48 = *(id *)(*(_QWORD *)(v45 + 56) + 8 * v49);

      if (v48)
      {
LABEL_48:
        sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, v125, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = v124;
        *(_QWORD *)(v51 + 32) = v39;
        *(_QWORD *)(v51 + 40) = v48;
        v142 = (_QWORD *)v51;
        sub_1BC62C890();
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
        v52 = v38;
        v53 = v39;
        v123 = v48;
        v54 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        v55 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v54);

        if (v30)
        {
          v56 = (uint64_t)v139;
          v57 = sub_1BC62D118();
          if (!__OFADD__(v57, 1))
          {
            v58 = v53;
            v45 = sub_1BC5A2B6C(v56, v57 + 1);
            goto LABEL_53;
          }
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          sub_1BC34B6A0(0, &qword_1ED6A58D8);
          result = sub_1BC62D5EC();
          __break(1u);
          return result;
        }
        v58 = v53;
LABEL_53:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v142 = (_QWORD *)v45;
        v60 = sub_1BC558F8C((uint64_t)v52);
        v62 = v45;
        v63 = v60;
        v64 = *(_QWORD *)(v62 + 16);
        v65 = (v61 & 1) == 0;
        v66 = v64 + v65;
        if (!__OFADD__(v64, v65))
        {
          v67 = v61;
          if (*(_QWORD *)(v62 + 24) >= v66)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1BC5A48D4();
          }
          else
          {
            sub_1BC3C1D14(v66, isUniquelyReferenced_nonNull_native);
            v68 = sub_1BC558F8C((uint64_t)v52);
            if ((v67 & 1) != (v69 & 1))
              goto LABEL_79;
            v63 = v68;
          }
          v19 = (uint64_t)v142;
          if ((v67 & 1) != 0)
          {
            v70 = v142[7];

            *(_QWORD *)(v70 + 8 * v63) = v55;
          }
          else
          {
            v142[(v63 >> 6) + 8] |= 1 << v63;
            *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v63) = v52;
            *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v63) = v55;
            v71 = *(_QWORD *)(v19 + 16);
            v72 = __OFADD__(v71, 1);
            v73 = v71 + 1;
            if (v72)
              goto LABEL_78;
            *(_QWORD *)(v19 + 16) = v73;
            v74 = v52;
          }

          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
    }
LABEL_18:

  }
  if (v23)
  {
    v33 = __clz(__rbit64(v23));
    v23 &= v23 - 1;
    v34 = v33 | (v29 << 6);
    goto LABEL_39;
  }
  v40 = v29 + 1;
  if (__OFADD__(v29, 1))
  {
    __break(1u);
    goto LABEL_76;
  }
  if (v40 >= v137)
    goto LABEL_64;
  v41 = v138[v40];
  ++v29;
  if (v41)
    goto LABEL_38;
  v29 = v32 + 2;
  if (v32 + 2 >= v137)
    goto LABEL_64;
  v41 = v138[v29];
  if (v41)
    goto LABEL_38;
  v29 = v32 + 3;
  if (v32 + 3 >= v137)
    goto LABEL_64;
  v41 = v138[v29];
  if (v41)
    goto LABEL_38;
  v29 = v32 + 4;
  if (v32 + 4 >= v137)
    goto LABEL_64;
  v41 = v138[v29];
  if (v41)
  {
LABEL_38:
    v23 = (v41 - 1) & v41;
    v34 = __clz(__rbit64(v41)) + (v29 << 6);
LABEL_39:
    v43 = 8 * v34;
    v44 = *(void **)(*(_QWORD *)(v24 + 56) + v43);
    v38 = *(id *)(*(_QWORD *)(v24 + 48) + v43);
    v39 = v44;
    if (!v38)
      goto LABEL_64;
    goto LABEL_40;
  }
  v42 = v32 + 5;
  while (v137 != v42)
  {
    v41 = v138[v42++];
    if (v41)
    {
      v29 = v42 - 1;
      goto LABEL_38;
    }
  }
LABEL_64:
  sub_1BC3583F4();
  v1 = v135;
  v5 = v128;
  v7 = v129;
LABEL_65:
  v75 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_userDomainConcept);
  v76 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_profile);
  if (v75)
  {
    v77 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_preloadedRemovedRecords);
    v78 = *(_BYTE *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords);
    swift_bridgeObjectRetain();
    v139 = v75;
    v79 = v76;
    v80 = sub_1BC35409C();
    v81 = v131;
    sub_1BC34EA24(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId, v131);
    v82 = v132;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v81, 1, v7) == 1)
    {
      sub_1BC358494(v81, (uint64_t)&qword_1EF42B210, (uint64_t)MEMORY[0x1E0CB0998], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
      v83 = 0;
    }
    else
    {
      v91 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 32);
      v138 = (_QWORD *)v77;
      v92 = v80;
      v93 = v79;
      v94 = v78;
      v95 = v130;
      v91(v130, v81, v7);
      v96 = v82;
      v97 = (void *)objc_opt_self();
      v98 = (void *)sub_1BC62A784();
      v83 = objc_msgSend(v97, sel_predicateForRecordsFromClinicalAccountIdentifier_, v98);

      v99 = v95;
      v78 = v94;
      v79 = v93;
      v80 = v92;
      v77 = (uint64_t)v138;
      (*(void (**)(char *, uint64_t))(v96 + 8))(v99, v7);
    }
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v100 = swift_allocObject();
    *(_OWORD *)(v100 + 16) = xmmword_1BC6396B0;
    v101 = v134;
    *(_QWORD *)(v100 + 32) = v134;
    v142 = (_QWORD *)v100;
    sub_1BC62C890();
    v102 = (uint64_t)v142;
    v103 = objc_allocWithZone((Class)WDMedicalRecordDisplayItemProvider);
    v104 = v140;
    swift_bridgeObjectRetain();
    v105 = v101;
    v106 = sub_1BC356098(v79, v75, v77, v78, v133, (uint64_t)v80, v83, v104, v102, (SEL *)&selRef_initWithProfile_userDomainConcept_preloadedRemovedRecords_removedRecordsOnly_displayItemOptions_sampleTypes_filter_additionalPredicates_sortDescriptors_);
    v107 = *(void **)(v135 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider);
    *(_QWORD *)(v135 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider) = v106;

  }
  else
  {
    v84 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept);
    v85 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_preloadedRemovedRecords);
    v86 = (char *)*(unsigned __int8 *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords);
    swift_bridgeObjectRetain();
    v87 = v76;
    v88 = v84;
    v139 = sub_1BC35409C();
    sub_1BC34EA24(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId, (uint64_t)v5);
    v89 = v132;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v5, 1, v7) == 1)
    {
      sub_1BC358494((uint64_t)v5, (uint64_t)&qword_1EF42B210, (uint64_t)MEMORY[0x1E0CB0998], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
      v90 = 0;
    }
    else
    {
      v108 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
      v138 = v84;
      v109 = v87;
      v110 = (char)v86;
      v86 = v126;
      v108(v126, v5, v7);
      v111 = v89;
      v112 = (void *)objc_opt_self();
      v113 = (void *)sub_1BC62A784();
      v90 = objc_msgSend(v112, sel_predicateForRecordsFromClinicalAccountIdentifier_, v113);

      v114 = v86;
      LOBYTE(v86) = v110;
      v87 = v109;
      v84 = v138;
      (*(void (**)(char *, uint64_t))(v111 + 8))(v114, v7);
    }
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v115 = swift_allocObject();
    *(_OWORD *)(v115 + 16) = xmmword_1BC6396B0;
    v101 = v134;
    *(_QWORD *)(v115 + 32) = v134;
    v142 = (_QWORD *)v115;
    sub_1BC62C890();
    v116 = (uint64_t)v142;
    v117 = objc_allocWithZone((Class)WDMedicalRecordDisplayItemProvider);
    v118 = v140;
    swift_bridgeObjectRetain();
    v119 = v101;
    v120 = sub_1BC356098(v87, v84, v85, (char)v86, v133, (uint64_t)v139, v90, v118, v116, (SEL *)&selRef_initWithProfile_ontologyConcept_preloadedRemovedRecords_removedRecordsOnly_displayItemOptions_sampleTypes_filter_additionalPredicates_sortDescriptors_);
    v107 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider);
    *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider) = v120;
  }

  return swift_bridgeObjectRelease();
}

id sub_1BC35409C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id result;
  void (*v20)(id *, _QWORD);
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t i;
  id v25;
  void *v26;
  id v27;
  char v28;
  id v29[4];
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_additionalPredicatesPerSampleType);
  if (v1)
  {
    if ((v1 & 0xC000000000000001) != 0)
      v2 = sub_1BC62D118();
    else
      v2 = *(_QWORD *)(v1 + 16);
    v7 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return (id)v7;
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    v30 = sub_1BC5B1440(v1);
    v31 = v8;
    v32 = v9 & 1;
    if ((v2 & 0x8000000000000000) == 0)
    {
      do
      {
        while (1)
        {
          v16 = v30;
          v17 = v31;
          v18 = v32;
          sub_1BC52888C(v29, v30, v31, v32, v1);

          sub_1BC62D268();
          sub_1BC62D298();
          sub_1BC62D2A4();
          result = (id)sub_1BC62D274();
          if ((v1 & 0xC000000000000001) != 0)
            break;
          sub_1BC3562C0(v16, v17, v18, v1);
          v11 = v10;
          v13 = v12;
          v15 = v14;
          sub_1BC3583DC(v16, v17, v18);
          v30 = v11;
          v31 = v13;
          v32 = v15 & 1;
          if (!--v2)
            goto LABEL_18;
        }
        if ((v18 & 1) == 0)
          goto LABEL_38;
        if (sub_1BC62D310())
          swift_isUniquelyReferenced_nonNull_native();
        sub_1BC3582DC();
        v20 = (void (*)(id *, _QWORD))sub_1BC62C578();
        sub_1BC62D37C();
        v20(v29, 0);
        --v2;
      }
      while (v2);
LABEL_18:
      sub_1BC3583DC(v30, v31, v32);
      return (id)v33;
    }
    __break(1u);
    goto LABEL_34;
  }
  v3 = *(void **)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_category);
  if (v3)
  {
    v4 = objc_msgSend(v3, sel_sampleTypes);
    if (v4)
    {

      v5 = objc_msgSend(v3, sel_sampleTypes);
      if (!v5)
        return 0;
      v6 = v5;
      sub_1BC34B6A0(0, &qword_1ED6A58D8);
      v7 = sub_1BC62C878();

      return (id)v7;
    }
  }
  result = objc_msgSend((id)objc_opt_self(), sel_allSupportedSampleTypes);
  if (result)
  {
    v21 = result;
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    v2 = sub_1BC62C878();

    v29[0] = (id)MEMORY[0x1E0DEE9D8];
    if (!(v2 >> 62))
    {
      v22 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v22)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        return (id)MEMORY[0x1E0DEE9D8];
      }
      goto LABEL_22;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    v22 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v22)
      goto LABEL_35;
LABEL_22:
    result = (id)objc_opt_self();
    if (v22 >= 1)
    {
      v23 = result;
      for (i = 0; i != v22; ++i)
      {
        if ((v2 & 0xC000000000000001) != 0)
          v25 = (id)MEMORY[0x1BCCF24CC](i, v2);
        else
          v25 = *(id *)(v2 + 8 * i + 32);
        v26 = v25;
        v27 = objc_msgSend(v23, sel_unknownRecordType, v29[0]);
        v28 = sub_1BC62CEB4();

        if ((v28 & 1) != 0)
        {

        }
        else
        {
          sub_1BC62D268();
          sub_1BC62D298();
          sub_1BC62D2A4();
          sub_1BC62D274();
        }
      }
      swift_bridgeObjectRelease();
      return v29[0];
    }
    __break(1u);
LABEL_38:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1BC3544A0()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD aBlock[6];

  v1 = *(void **)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier];
  if (v1)
  {
    v7 = v1;
    if (objc_msgSend(v7, sel_isInMemory))
    {
      v2 = objc_msgSend(v0, sel_navigationController);
      if (v2)
      {
        v3 = v2;

      }
    }
    else
    {
      v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_profile], sel_conceptStore);
      v5 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1BC3581C8;
      aBlock[5] = v5;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC4E2FCC;
      aBlock[3] = &block_descriptor_24;
      v6 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v4, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v7, 1, v6);
      _Block_release(v6);

    }
  }
}

uint64_t sub_1BC35460C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v6 = sub_1BC62C47C();
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC62C4AC();
  v9 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v12 = (void *)sub_1BC62CC74();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a2;
  v13[4] = a1;
  aBlock[4] = sub_1BC358204;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_30;
  v14 = _Block_copy(aBlock);
  swift_retain();
  v15 = a2;
  v16 = a1;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v19);
}

void sub_1BC354834(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  BOOL v16;
  void *v17;
  void *v18;
  void *v19;
  char v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  BOOL v29[8];
  void *v30;
  void *v31;
  void *v32;
  char v33;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  swift_beginAccess();
  v9 = (char *)MEMORY[0x1BCCF37A4](a1 + 16);
  if (v9)
  {
    v10 = v9;
    if (a2 || !a3)
    {
      v25 = objc_msgSend(v9, sel_navigationController);
      if (v25)
      {
        v26 = v25;

      }
    }
    else
    {
      v11 = OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept;
      v12 = *(void **)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept];
      *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept] = a3;
      v13 = a3;

      sub_1BC34EA24((uint64_t)&v10[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId], (uint64_t)v8);
      v14 = sub_1BC62A7B4();
      v15 = MEMORY[0x1E0CB0998];
      v16 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v8, 1, v14) != 1;
      sub_1BC358494((uint64_t)v8, (uint64_t)&qword_1EF42B210, (uint64_t)v15, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
      v17 = *(void **)&v10[OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier];
      v18 = *(void **)&v10[v11];
      v19 = *(void **)&v10[OBJC_IVAR___HRMedicalRecordTimelineViewController_category];
      v20 = v10[OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords];
      v29[0] = v16;
      v30 = v17;
      v31 = v18;
      v32 = v19;
      v33 = v20;
      v21 = v19;
      v22 = v17;
      v23 = v18;
      sub_1BC35670C((uint64_t)v29);

      sub_1BC34DFEC();
      swift_retain();
      swift_release();
      v28 = a3;
      sub_1BC62BF00();
      swift_release();
      sub_1BC3534B0();
      sub_1BC34DFEC();
      swift_retain();
      swift_release();
      v28 = *(id *)&v10[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider];
      v24 = v28;
      sub_1BC62BF00();

      swift_release();
    }
  }
}

void sub_1BC354AB0(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v3 = sub_1BC62A7B4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = sub_1BC34DD60();
  v7 = (void *)sub_1BC62A784();
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v10 + v9, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  *(_QWORD *)(v10 + ((v5 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  aBlock[4] = sub_1BC357FC8;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC46FB0C;
  aBlock[3] = &block_descriptor;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v6, sel_fetchAccountWithIdentifier_completion_, v7, v11);
  _Block_release(v11);

}

uint64_t sub_1BC354C48(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  char *v23;
  void *v24;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v26 = a2;
  v27 = a5;
  v30 = sub_1BC62C47C();
  v33 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62C4AC();
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62A7B4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v28 = sub_1BC62CC74();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v12);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = a3;
  *((_QWORD *)v16 + 3) = a1;
  v17 = v26;
  *((_QWORD *)v16 + 4) = v26;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v16[v15], (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  *(_QWORD *)&v16[(v14 + v15 + 7) & 0xFFFFFFFFFFFFFFF8] = v27;
  aBlock[4] = sub_1BC3580D4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_20;
  v18 = _Block_copy(aBlock);
  swift_retain();
  v19 = a1;
  v20 = v17;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  v23 = v29;
  v22 = v30;
  sub_1BC62D0A0();
  v24 = (void *)v28;
  MEMORY[0x1BCCF1F68](0, v11, v23, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v11, v32);
}

void sub_1BC354F04(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  os_log_t v34;
  uint64_t v35;
  _BYTE v36[4];
  int v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v10 = sub_1BC62A7B4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v36[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1BC62BB34();
  v41 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = &v36[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v17 = MEMORY[0x1BCCF37A4](a1 + 16);
  if (v17)
  {
    v18 = (void *)v17;
    v40 = v14;
    v19 = a2;
    sub_1BC3565D0(a2);

    if (a3)
    {
      v20 = a3;
      sub_1BC62BAF8();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
      v21 = a3;
      v22 = a3;
      v23 = sub_1BC62BB28();
      v24 = sub_1BC62CAC4();
      v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        v26 = swift_slowAlloc();
        v39 = swift_slowAlloc();
        v42 = v39;
        *(_DWORD *)v26 = 136315650;
        v38 = v23;
        v43 = a5;
        swift_getMetatypeMetadata();
        v37 = v25;
        v27 = sub_1BC62C6E0();
        v43 = sub_1BC4991F0(v27, v28, &v42);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2080;
        sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v29 = sub_1BC62D52C();
        v43 = sub_1BC4991F0(v29, v30, &v42);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
        *(_WORD *)(v26 + 22) = 2080;
        v43 = (uint64_t)a3;
        v31 = a3;
        sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
        v32 = sub_1BC62C6E0();
        v43 = sub_1BC4991F0(v32, v33, &v42);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();

        v34 = v38;
        _os_log_impl(&dword_1BC30A000, v38, (os_log_type_t)v37, "%s: failed to fetch account %s: %s", (uint8_t *)v26, 0x20u);
        v35 = v39;
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v35, -1, -1);
        MEMORY[0x1BCCF36A8](v26, -1, -1);

      }
      else
      {

        (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
      }
      (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v16, v40);
    }
    else
    {

    }
  }
}

void sub_1BC3552A4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  char v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_navigationController);
  v7 = objc_msgSend(v6, sel_topViewController);

  if (v7)
  {
    sub_1BC34B6A0(0, &qword_1EF429570);
    v8 = v1;
    v9 = v7;
    v10 = sub_1BC62CEB4();

    if ((v10 & 1) != 0)
    {
      v11 = objc_msgSend(v8, sel_navigationController);
      if (v11)
      {
        v35 = v11;

LABEL_17:
        return;
      }
      return;
    }
  }
  v12 = objc_msgSend(v1, sel_navigationController);
  if (!v12)
    return;
  v13 = v12;
  v14 = objc_msgSend(v12, sel_viewControllers);
  sub_1BC34B6A0(0, &qword_1EF429570);
  v15 = sub_1BC62C878();

  sub_1BC6101DC((uint64_t)v1, v15);
  v17 = v16;
  LOBYTE(v14) = v18;
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
    v19 = 0;
  else
    v19 = v17;
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_23;
  }
  v17 = v21 & ~(v21 >> 63);
  v22 = objc_msgSend(v13, sel_viewControllers);
  v23 = sub_1BC62C878();

  if (v23 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v24 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_12:
  swift_bridgeObjectRelease();
  if (v17 < v24)
  {
    v25 = objc_msgSend(v13, sel_viewControllers);
    v26 = sub_1BC62C878();

    if ((v26 & 0xC000000000000001) != 0)
    {
      v27 = (id)MEMORY[0x1BCCF24CC](v17, v26);
    }
    else
    {
      if ((unint64_t)v17 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v27 = *(id *)(v26 + 8 * v17 + 32);
    }
    v35 = v27;
    swift_bridgeObjectRelease();

    goto LABEL_17;
  }
  sub_1BC62BAF8();
  v28 = sub_1BC62BB28();
  v29 = sub_1BC62CAAC();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v37 = v31;
    *(_DWORD *)v30 = 136446210;
    v35 = v30 + 4;
    v32 = sub_1BC62D718();
    v36 = sub_1BC4991F0(v32, v33, &v37);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v28, v29, "%{public}s tried popping myself from navigation stack but couldn't find me", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v31, -1, -1);
    MEMORY[0x1BCCF36A8](v30, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1BC3557A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  uint64_t aBlock;
  uint64_t v17;
  uint64_t (*v18)();
  void *v19;
  void (*v20)(void *, uint64_t);
  uint64_t v21;
  id v22;

  v3 = v2;
  if (qword_1ED6A3198 != -1)
    swift_once();
  v6 = (char *)qword_1ED6A42A0;
  v7 = *(void **)(v3 + OBJC_IVAR___HRMedicalRecordTimelineViewController_category);
  v8 = *(void **)(v3 + OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier);
  if (v7)
  {
    sub_1BC4FC8D8(v7, (uint64_t)&aBlock);
    v9 = aBlock;
    v10 = (void *)v17;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_5:
      v11 = *(void **)&v6[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v6;
      *(_QWORD *)(v12 + 24) = a1;
      *(_QWORD *)(v12 + 32) = a2;
      *(_QWORD *)(v12 + 40) = 0;
      *(_BYTE *)(v12 + 48) = v9;
      v20 = sub_1BC35865C;
      v21 = v12;
      aBlock = MEMORY[0x1E0C809B0];
      v17 = 1107296256;
      v18 = sub_1BC4E2FCC;
      v19 = &block_descriptor_61;
      v13 = _Block_copy(&aBlock);
      v14 = v8;
      v15 = v6;
      swift_release();
      objc_msgSend(v11, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v14, 0, v13);
      _Block_release(v13);

      return;
    }
  }
  else
  {
    v9 = 11;
    if (v8)
      goto LABEL_5;
  }
  LOBYTE(aBlock) = v9;
  sub_1BC4E4100(a1, a2, 0, (char *)&aBlock, 0);
}

id MedicalRecordTimelineViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicalRecordTimelineViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicalRecordTimelineViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void MedicalRecordTimelineViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicalRecordTimelineViewController.didUpdateVisibleValueRange(_:changeContext:)(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
    sub_1BC3557A0(3, 18);
}

void MedicalRecordTimelineViewController.didUpdateSeries(withNewValueRange:)(uint64_t a1)
{
  uint64_t v1;

  if (!a1)
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_chartLoaded) == 1)
      sub_1BC3557A0(3, 18);
    else
      *(_BYTE *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_chartLoaded) = 1;
  }
}

void MedicalRecordTimelineViewController.configureDisplayTypes(_:timeScope:stackOffset:)()
{
  sub_1BC3557A0(3, 18);
}

uint64_t MedicalRecordTimelineViewController.ingestionStateDidUpdate(clinicalIngestionStore:state:)(uint64_t a1, uint64_t a2)
{
  return sub_1BC357288(a2);
}

char *sub_1BC355C3C(char *result, uint64_t a2)
{
  void *v2;
  char *v3;
  uint64_t v4;
  char v5;

  v2 = result;
  v3 = &result[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState];
  v4 = *(_QWORD *)&result[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState];
  v5 = result[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState + 8];
  *(_QWORD *)v3 = a2;
  v3[8] = 0;
  if ((v5 & 1) != 0 || v4 != a2)
  {
    result = (char *)sub_1BC352550(0);
    if ((v3[8] & 1) == 0 && *(_QWORD *)v3 == 1)
    {
      objc_msgSend((id)objc_opt_self(), sel_cancelPreviousPerformRequestsWithTarget_selector_object_, v2, sel_reloadData, 0);
      return (char *)objc_msgSend(v2, sel_performSelector_withObject_afterDelay_, sel_reloadData, 0, 1.25);
    }
  }
  return result;
}

uint64_t MedicalRecordTimelineViewController.cloudSyncObserver(_:syncDidStartWith:)(uint64_t a1, void *a2)
{
  return sub_1BC357490(a2);
}

uint64_t sub_1BC355D54(_BYTE *a1, id a2)
{
  uint64_t result;
  uint64_t v4;
  int v5;

  result = (uint64_t)objc_msgSend(a2, sel_isFinished);
  v4 = OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive;
  v5 = a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive];
  a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive] = result ^ 1;
  if ((_DWORD)result == v5)
  {
    result = (uint64_t)sub_1BC352550(0);
    if (a1[v4] != 1)
    {
      objc_msgSend((id)objc_opt_self(), sel_cancelPreviousPerformRequestsWithTarget_selector_object_, a1, sel_reloadData, 0);
      return (uint64_t)objc_msgSend(a1, sel_performSelector_withObject_afterDelay_, sel_reloadData, 0, 1.25);
    }
  }
  return result;
}

uint64_t MedicalRecordTimelineViewController.cloudSyncObserver(_:syncFailedWithError:)()
{
  return sub_1BC3576A4((uint64_t)&unk_1E74D46C0, (uint64_t)sub_1BC358B40, (uint64_t)&block_descriptor_43);
}

uint64_t MedicalRecordTimelineViewController.cloudSyncObserverSyncCompleted(_:)()
{
  return sub_1BC3576A4((uint64_t)&unk_1E74D4670, (uint64_t)sub_1BC3585C0, (uint64_t)&block_descriptor_37);
}

_BYTE *sub_1BC355F30(_BYTE *result)
{
  uint64_t v1;
  int v2;
  void *v3;

  v1 = OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive;
  v2 = result[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive];
  result[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive] = 0;
  if (v2 == 1)
  {
    v3 = result;
    result = sub_1BC352550(0);
    if (*((_BYTE *)v3 + v1) != 1)
    {
      objc_msgSend((id)objc_opt_self(), sel_cancelPreviousPerformRequestsWithTarget_selector_object_, v3, sel_reloadData, 0);
      return objc_msgSend(v3, sel_performSelector_withObject_afterDelay_, sel_reloadData, 0, 1.25);
    }
  }
  return result;
}

void sub_1BC356030()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF436640)
  {
    sub_1BC62A7B4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF436640);
  }
}

id sub_1BC356098(void *a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, SEL *a10)
{
  void *v10;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v23;

  if (a3)
  {
    sub_1BC34B6A0(0, &qword_1ED6A52D8);
    v23 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    if (a6)
    {
LABEL_3:
      sub_1BC34B6A0(0, &qword_1ED6A58D8);
      v18 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    v23 = 0;
    if (a6)
      goto LABEL_3;
  }
  v18 = 0;
LABEL_6:
  if (!a8)
  {
    v19 = 0;
    if (a9)
      goto LABEL_8;
LABEL_10:
    v20 = 0;
    goto LABEL_11;
  }
  sub_1BC34B6A0(0, &qword_1ED6A58D8);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  sub_1BC35839C((unint64_t *)&qword_1ED6A58E0, &qword_1ED6A58D8, 0x1E0CB6B00, MEMORY[0x1E0DEFCF8]);
  v19 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  if (!a9)
    goto LABEL_10;
LABEL_8:
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v20 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
LABEL_11:
  v21 = objc_msgSend(v10, *a10, a1, a2, v23, a4 & 1, a5, v18, a7, v19, v20);

  return v21;
}

void sub_1BC3562C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  char v6;
  char v7;
  void *v8;

  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || -(-1 << *(_BYTE *)(a4 + 32)) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + 64 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8)) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
      {
        sub_1BC62D0B8();
        return;
      }
      goto LABEL_12;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (sub_1BC62D31C() != *(_DWORD *)(a4 + 36))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1BC62D328();
  sub_1BC3583E8(a1, a2, 1);
  sub_1BC34B6A0(0, &qword_1ED6A58D8);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  sub_1BC558F8C((uint64_t)v8);
  v7 = v6;

  if ((v7 & 1) != 0)
  {
    sub_1BC62D304();
    sub_1BC62D340();
    sub_1BC3583DC(a1, a2, 1);
    swift_unknownObjectRelease();
    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_1BC35645C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  char v20;

  if (((*a1 ^ *a2) & 1) != 0)
    goto LABEL_2;
  v6 = (void *)*((_QWORD *)a1 + 1);
  v7 = (void *)*((_QWORD *)a2 + 1);
  if (v6)
  {
    if (!v7)
      goto LABEL_2;
    sub_1BC34B6A0(0, (unint64_t *)&unk_1EF429500);
    v8 = v7;
    v9 = v6;
    v10 = sub_1BC62CEB4();

    if ((v10 & 1) == 0)
      goto LABEL_2;
  }
  else if (v7)
  {
    goto LABEL_2;
  }
  v11 = (void *)*((_QWORD *)a1 + 2);
  v12 = (void *)*((_QWORD *)a2 + 2);
  if (v11)
  {
    if (!v12)
      goto LABEL_2;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4294F8);
    v13 = v12;
    v14 = v11;
    v15 = sub_1BC62CEB4();

    if ((v15 & 1) == 0)
      goto LABEL_2;
  }
  else if (v12)
  {
    goto LABEL_2;
  }
  v16 = (void *)*((_QWORD *)a1 + 3);
  v17 = (void *)*((_QWORD *)a2 + 3);
  if (v16)
  {
    if (v17)
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5920);
      v18 = v17;
      v19 = v16;
      v20 = sub_1BC62CEB4();

      if ((v20 & 1) != 0)
        goto LABEL_19;
    }
  }
  else if (!v17)
  {
LABEL_19:
    v2 = ((a1[32] & 1) == 0) ^ a2[32];
    return v2 & 1;
  }
LABEL_2:
  v2 = 0;
  return v2 & 1;
}

uint64_t sub_1BC3565D0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t result;
  id v12;
  uint64_t v13;
  id v14;

  v2 = v1;
  v4 = sub_1BC62C4D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = OBJC_IVAR___HRMedicalRecordTimelineViewController_account;
  v9 = *(void **)(v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_account);
  *(_QWORD *)(v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_account) = a1;
  v10 = a1;

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v7 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  LOBYTE(a1) = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((a1 & 1) != 0)
  {
    sub_1BC34DFEC();
    swift_retain();
    swift_release();
    v14 = *(id *)(v2 + v8);
    v12 = v14;
    sub_1BC62BF00();

    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC35670C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  __int128 v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v14;
  id v15;
  id v16;

  sub_1BC358264(a1 + 8, (uint64_t)&v16, (uint64_t)&qword_1EF429510, (uint64_t)&unk_1EF429500, 0x1E0CB64B0, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC358210);
  sub_1BC358264(a1 + 16, (uint64_t)&v15, (uint64_t)&qword_1EF429518, (uint64_t)&qword_1EF4294F8, 0x1E0CB64A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC358210);
  sub_1BC358264(a1 + 24, (uint64_t)&v14, (uint64_t)&unk_1EF429520, (uint64_t)&qword_1ED6A5920, (uint64_t)off_1E74D0668, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC358210);
  v3 = v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState;
  v4 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState + 8);
  v5 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState + 16);
  v6 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState + 24);
  *(_BYTE *)(v3 + 32) = *(_BYTE *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v7;
  sub_1BC3582B4(&v16);
  sub_1BC3582B4(&v15);
  sub_1BC3582B4(&v14);

  sub_1BC34DFEC();
  swift_retain();
  swift_release();
  v8 = *(void **)(v3 + 8);
  v9 = *(void **)(v3 + 16);
  v10 = *(id *)(v3 + 24);
  v11 = v8;
  v12 = v9;
  sub_1BC62BF00();

  return swift_release();
}

char *sub_1BC356878(void *a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, unsigned __int8 a9)
{
  _BYTE *v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  _QWORD *v22;
  id v23;
  _BYTE *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  BOOL v31;
  void *v32;
  BOOL *v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  objc_class *v45;
  uint64_t v46;
  id v47;
  char *v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(void);
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  char *v69;
  objc_super v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;

  v68 = a8;
  v65 = a5;
  v66 = a7;
  v62 = a6;
  v63 = a1;
  v64 = a3;
  LODWORD(v67) = a9;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v69 = (char *)&v61 - v14;
  v15 = sub_1BC62A7B4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v61 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle];
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_observer] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_account] = 0;
  v19 = OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept] = 0;
  v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_chartLoaded] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___contentStatusView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___clinicalAccountStore] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataProvider] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___accountStateProvider] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSourceProvider] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSource] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_queryReturnedCancellable] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountStateCancellable] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionStateCancellable] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerStateCancellable] = 0;
  v20 = &v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  v21 = &v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState];
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  v22 = &v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView];
  sub_1BC62B144();
  v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v24 = v9;
  v25 = objc_msgSend(v23, sel_init);
  v26 = MEMORY[0x1E0D2AF30];
  *v22 = v25;
  v22[1] = v26;
  v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_showGradientBackgroundForAllRecordsRoom] = 0;
  *(_QWORD *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientSubscriber] = 0;
  *(_QWORD *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_profile] = a1;
  *(_QWORD *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_category] = a2;
  v27 = v64;
  sub_1BC34EA24(v64, (uint64_t)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId]);
  *(_QWORD *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier] = a4;
  v28 = v65;
  *(_QWORD *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_userDomainConcept] = v65;
  *(_QWORD *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_additionalPredicatesPerSampleType] = v68;
  v29 = v66;
  LOBYTE(v23) = v66 != 0;
  v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords] = v66 != 0;
  v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_showExportButton] = v67;
  v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive] = 0;
  *(_QWORD *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_preloadedRemovedRecords] = v29;
  v67 = v16;
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v31 = v30(v27, 1, v15) != 1;
  v32 = *(void **)&v9[v19];
  v33 = &v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState];
  *v33 = v31;
  *((_QWORD *)v33 + 1) = a4;
  *((_QWORD *)v33 + 2) = v32;
  *((_QWORD *)v33 + 3) = a2;
  v33[32] = (char)v23;
  v34 = (void *)objc_opt_self();
  v35 = v32;
  v36 = a2;
  v37 = a4;
  v38 = a4;
  v39 = v15;
  v68 = v38;
  v40 = v36;
  v41 = v63;
  v42 = v28;
  v43 = objc_msgSend(v34, sel_clearColor);
  v72 = sub_1BC62B564();
  v73 = MEMORY[0x1E0D2B5A0];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v71);
  sub_1BC62B558();
  sub_1BC34E718(&v71, (uint64_t)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider]);

  v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3610]), sel_init);
  v45 = (objc_class *)type metadata accessor for MedicalRecordTimelineViewController();
  v70.receiver = v24;
  v70.super_class = v45;
  v46 = v27;
  v47 = objc_msgSendSuper2(&v70, sel_initWithCollectionViewLayout_, v44);

  v48 = (char *)v47;
  sub_1BC34DE48();
  swift_retain();
  swift_release();
  sub_1BC62BF0C();
  swift_release();
  v49 = BYTE8(v71);
  v50 = &v48[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState];
  *(_QWORD *)v50 = v71;
  v50[8] = v49;
  sub_1BC34DE48();
  swift_retain();
  swift_release();
  sub_1BC62BF0C();
  v51 = (uint64_t)v69;
  swift_release();
  v52 = v71;
  v53 = BYTE8(v71);
  if ((unint64_t)v71 <= 1)
    v54 = 1;
  else
    v54 = v71;
  if (!BYTE8(v71))
    v52 = v54;
  v55 = &v48[OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState];
  *(_QWORD *)v55 = v52;
  v55[8] = v53;
  sub_1BC34EA24(v27, v51);
  if (v30(v51, 1, v39) == 1)
  {
    sub_1BC358494(v51, (uint64_t)&qword_1EF42B210, (uint64_t)MEMORY[0x1E0CB0998], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
  }
  else
  {
    v56 = v67;
    v57 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v61, v51, v39);
    sub_1BC354AB0(v57);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v39);
  }
  v58 = v62;
  if (v37)
  {
    sub_1BC3544A0();

    v40 = v68;
  }
  else
  {
    sub_1BC3534B0();
  }

  v59 = MEMORY[0x1E0CB0998];
  sub_1BC358494(v58, (uint64_t)&qword_1EF42B210, (uint64_t)MEMORY[0x1E0CB0998], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
  sub_1BC358494(v46, (uint64_t)&qword_1EF42B210, (uint64_t)v59, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
  return v48;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t type metadata accessor for MedicalRecordTimelineViewController()
{
  uint64_t result;

  result = qword_1EF429418;
  if (!qword_1EF429418)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for DataSourceObserver()
{
  return objc_opt_self();
}

void sub_1BC356ECC()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  char *v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;

  v1 = &v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_observer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_account] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept] = 0;
  v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_chartLoaded] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___contentStatusView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___clinicalAccountStore] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataProvider] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___accountStateProvider] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSourceProvider] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_queryReturnedCancellable] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountStateCancellable] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionStateCancellable] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerStateCancellable] = 0;
  v2 = &v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  v3 = &v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = &v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView];
  sub_1BC62B144();
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v6 = MEMORY[0x1E0D2AF30];
  *v4 = v5;
  v4[1] = v6;
  v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_showGradientBackgroundForAllRecordsRoom] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientSubscriber] = 0;

  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC357074()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (!v1)
    return 0;
  v2 = sub_1BC62C680();
  v4 = v3;

  if (v2 == 0xD000000000000015 && v4 == 0x80000001BC651A50)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
}

void sub_1BC357158(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_1BC3571B0()
{
  unint64_t result;

  result = qword_1EF435B50;
  if (!qword_1EF435B50)
  {
    sub_1BC35817C(255, &qword_1EF429260);
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF435B50);
  }
  return result;
}

uint64_t sub_1BC3571F8()
{
  return swift_deallocObject();
}

void sub_1BC357208(void *a1)
{
  sub_1BC350418(a1);
}

void sub_1BC357210()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF429278)
  {
    sub_1BC357158(255, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF429278);
  }
}

uint64_t sub_1BC357288(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t (*v15)(uint64_t);
  _QWORD aBlock[6];

  v3 = sub_1BC62C47C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62C4AC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v11 = (void *)sub_1BC62CC74();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_1BC358630;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_55;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BC357490(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v3 = sub_1BC62C47C();
  v18 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62C4AC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v10 = (void *)sub_1BC62CC74();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_1BC358604;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_49;
  v12 = _Block_copy(aBlock);
  v13 = v1;
  v14 = a1;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BC3576A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v6 = sub_1BC62C47C();
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BC62C4AC();
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v12 = (void *)sub_1BC62CC74();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = a3;
  v14 = _Block_copy(aBlock);
  v15 = v3;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v16, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

uint64_t sub_1BC3578A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_1BC357900@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  __int128 *v3;
  __int128 v4;

  v3 = (__int128 *)(*a1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return (id)v4;
}

uint64_t sub_1BC357958@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientSubscriber);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1BC3579B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider;
  swift_beginAccess();
  return sub_1BC34E674(v3, a2);
}

uint64_t sub_1BC357A08()
{
  return type metadata accessor for MedicalRecordTimelineViewController();
}

void sub_1BC357A10()
{
  unint64_t v0;

  sub_1BC357158(319, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MedicalRecordTimelineViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.overrideTitle.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.overrideTitle.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.overrideTitle.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x358))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x360))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x368))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientSubscriber.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientSubscriber.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x390))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientSubscriber.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x398))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientColorProvider.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientColorProvider.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A8))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientColorProvider.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.sidebarSelectionIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B8))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.__allocating_init(profile:category:accountId:conceptIdentifier:userDomainConcept:highlightedRecordId:displayingRemovedRecords:preloadedRemovedRecords:predicatePerSampleType:showExportButton:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 960))();
}

void destroy for MedicalRecordTimelineViewController.DisplayState(id *a1)
{

}

uint64_t initializeWithCopy for MedicalRecordTimelineViewController.DisplayState(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

uint64_t assignWithCopy for MedicalRecordTimelineViewController.DisplayState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 16);
  v8 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 24);
  v11 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MedicalRecordTimelineViewController.DisplayState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicalRecordTimelineViewController.DisplayState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicalRecordTimelineViewController.DisplayState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordTimelineViewController.DisplayState()
{
  return &type metadata for MedicalRecordTimelineViewController.DisplayState;
}

unint64_t sub_1BC357EE0()
{
  unint64_t result;

  result = qword_1EF4294E8;
  if (!qword_1EF4294E8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC639870, &type metadata for MedicalRecordTimelineViewController.DisplayState);
    atomic_store(result, (unint64_t *)&qword_1EF4294E8);
  }
  return result;
}

uint64_t sub_1BC357F24()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC357F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC357FC8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1BC354C48(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1BC358044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1BC3580D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1BC354F04(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_1BC35811C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A58A0;
  if (!qword_1ED6A58A0)
  {
    sub_1BC357158(255, (unint64_t *)&qword_1ED6A5890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A58A0);
  }
  return result;
}

uint64_t sub_1BC35817C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BC3581C8(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1BC35460C(a1, a2, v2);
}

uint64_t sub_1BC3581D0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BC358204()
{
  uint64_t v0;

  sub_1BC354834(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1BC358210(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC34B6A0(255, a3);
    v4 = sub_1BC62CFE0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC358264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

id *sub_1BC3582B4(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

void sub_1BC3582DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429530)
  {
    sub_1BC34B6A0(255, &qword_1ED6A58D8);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58C0);
    sub_1BC35839C((unint64_t *)&qword_1ED6A58E0, &qword_1ED6A58D8, 0x1E0CB6B00, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC62C584();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429530);
  }
}

uint64_t sub_1BC35839C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1BC34B6A0(255, a2);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC3583DC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BC3583E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BC3583F4()
{
  return swift_release();
}

void sub_1BC3583FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4B20)
  {
    sub_1BC34B508(255, (unint64_t *)&qword_1ED6A5360, (uint64_t)&type metadata for AccountStateChange, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC62BEF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4B20);
  }
}

uint64_t sub_1BC358478()
{
  return sub_1BC347F0C((unint64_t *)&unk_1EF429548, (uint64_t (*)(uint64_t))sub_1BC3583FC, MEMORY[0x1E0C95F48]);
}

uint64_t sub_1BC358494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;

  v5 = a4(0, a2, a3, MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1BC3584DC(uint64_t a1)
{
  uint64_t v1;

  sub_1BC3509C4(a1, v1);
}

void sub_1BC3584E4(void *a1, void *a2)
{
  if (a1)
  {

  }
}

void sub_1BC358510(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BC61E83C(*(void **)(v1 + 24), a1);
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_1BC358538()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429568)
  {
    v0 = sub_1BC62BDB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429568);
  }
}

uint64_t sub_1BC35859C()
{
  uint64_t v0;

  return swift_deallocObject();
}

_BYTE *sub_1BC3585C0()
{
  uint64_t v0;

  return sub_1BC355F30(*(_BYTE **)(v0 + 16));
}

uint64_t sub_1BC3585D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC358604()
{
  uint64_t v0;

  return sub_1BC355D54(*(_BYTE **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_1BC35860C()
{
  uint64_t v0;

  return swift_deallocObject();
}

char *sub_1BC358630()
{
  uint64_t v0;

  return sub_1BC355C3C(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC358638()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC35865C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC4E3F08(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_BYTE *)(v2 + 48));
}

void sub_1BC35866C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429578)
  {
    sub_1BC35886C(255, &qword_1ED6A4B50, &qword_1ED6A4B78, (uint64_t (*)(uint64_t))type metadata accessor for HKConceptIndexManagerState);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC3588DC(&qword_1EF429580, &qword_1ED6A4B50, &qword_1ED6A4B78, (uint64_t (*)(uint64_t))type metadata accessor for HKConceptIndexManagerState);
    sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC62BE70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429578);
  }
}

void sub_1BC35876C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429588)
  {
    sub_1BC35886C(255, (unint64_t *)&qword_1ED6A4B40, (unint64_t *)&qword_1ED6A4B58, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalIngestionState);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC3588DC(&qword_1EF429590, (unint64_t *)&qword_1ED6A4B40, (unint64_t *)&qword_1ED6A4B58, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalIngestionState);
    sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC62BE70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429588);
  }
}

void sub_1BC35886C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC357158(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v5 = sub_1BC62BF18();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC3588DC(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC35886C(255, a2, a3, a4);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95FB8], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC35891C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    a4();
    sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v6 = sub_1BC62BE70();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC3589E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4D60)
  {
    v0 = sub_1BC62BF18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4D60);
  }
}

uint64_t sub_1BC358A44()
{
  return sub_1BC347F0C(&qword_1EF4295A8, (uint64_t (*)(uint64_t))sub_1BC3589E0, MEMORY[0x1E0C95FB8]);
}

void sub_1BC358A60(uint64_t a1)
{
  uint64_t v1;

  sub_1BC351FF8(a1, v1);
}

uint64_t sub_1BC358A68(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC35891C(255, a2, a3, a4);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95CB8], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC358AA8(uint64_t *a1)
{
  uint64_t v1;

  sub_1BC35204C(a1, v1, &OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState);
}

void sub_1BC358AC8(uint64_t *a1)
{
  uint64_t v1;

  sub_1BC35204C(a1, v1, &OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState);
}

_QWORD *__swift_project_boxed_opaque_existential_1Tm(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

void sub_1BC358BDC()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for CategorySelectionViewController();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_tableView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  type metadata accessor for TextWithIconCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = (void *)sub_1BC62C650();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

  v5 = objc_msgSend(v0, sel_tableView);
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = v5;
  type metadata accessor for HeaderWithRightAlignedButton();
  v7 = swift_getObjCClassFromMetadata();
  v8 = (void *)sub_1BC62C650();
  objc_msgSend(v6, sel_registerClass_forHeaderFooterViewReuseIdentifier_, v7, v8);

  v9 = objc_msgSend(v0, sel_tableView);
  if (!v9)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v10 = v9;
  if (qword_1EF428330 != -1)
    swift_once();
  objc_msgSend(v10, sel_setSectionHeaderTopPadding_, *(double *)&qword_1EF4295E0);

}

char *sub_1BC358DB8(void *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v8;
  void *v9;
  id v10;
  char *v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  _OWORD v53[4];
  uint64_t v54;

  v5 = v2;
  v8 = (void *)sub_1BC62C650();
  v9 = (void *)sub_1BC62A928();
  v10 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v8, v9);

  type metadata accessor for TextWithIconCell();
  v11 = (char *)swift_dynamicCastClassUnconditional();
  v12 = *(_QWORD *)(v5 + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_allCategories);
  v13 = (void *)a2;
  v14 = sub_1BC62A94C();
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v14 >= *(_QWORD *)(v12 + 16))
  {
LABEL_36:
    __break(1u);
LABEL_37:
    v3 = (uint64_t)sub_1BC3B5060(0, *(_QWORD *)(v3 + 16) + 1, 1, (_QWORD *)v3);
    goto LABEL_24;
  }
  v15 = v12 + 72 * v14;
  v16 = *(_OWORD *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 96);
  v18 = *(_OWORD *)(v15 + 48);
  v53[2] = *(_OWORD *)(v15 + 64);
  v19 = *(_OWORD *)(v15 + 32);
  v54 = v17;
  v53[3] = v16;
  v53[0] = v19;
  v53[1] = v18;
  v20 = (uint64_t *)(v5 + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_selectedCategories);
  swift_beginAccess();
  v21 = *v20;
  swift_bridgeObjectRetain();
  sub_1BC359A94((uint64_t)v53);
  sub_1BC5DBEBC((unsigned __int8 *)v53, v21);
  LOBYTE(v5) = v22;
  swift_bridgeObjectRelease();
  v23 = sub_1BC4DAD68();
  v24 = (void *)sub_1BC62C650();
  objc_msgSend(v23, sel_setText_, v24);

  v25 = sub_1BC4DACD0();
  objc_msgSend(v25, sel_setAccessibilityIgnoresInvertColors_, 1);

  DisplayCategory.Kind.hkDisplayCategory.getter();
  if (v26)
  {
    v27 = v26;
    v28 = sub_1BC4DACD0();
    v29 = objc_msgSend(v27, sel_systemImageName);
    sub_1BC62C680();

    v30 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v30);

    if (v31)
    {
      v32 = objc_msgSend(v27, sel_multiColorImageConfiguration);
      if (!v32)
        v32 = objc_msgSend((id)objc_opt_self(), sel_configurationPreferringMulticolor);
      v33 = objc_msgSend(v31, sel_imageByApplyingSymbolConfiguration_, v32);

    }
    else
    {
      v33 = 0;
    }
    objc_msgSend(v28, sel_setImage_, v33);

  }
  v10 = v10;
  if ((v5 & 1) != 0)
    v34 = sub_1BC378B4C();
  else
    v34 = sub_1BC378B70();
  v35 = v34;
  objc_msgSend(v11, sel_setAccessoryView_, v34);

  sub_1BC359F44();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v3 + 32) = 0x6F6974704F464450;
  *(_QWORD *)(v3 + 40) = 0xEA0000000000736ELL;
  strcpy((char *)(v3 + 48), "CategoryCell");
  *(_BYTE *)(v3 + 61) = 0;
  *(_WORD *)(v3 + 62) = -5120;
  sub_1BC62A94C();
  sub_1BC359F98();
  *(_QWORD *)(v3 + 64) = sub_1BC62D07C();
  *(_QWORD *)(v3 + 72) = v36;
  v37 = (void *)sub_1BC62C86C();
  v38 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v38)
  {
    v39 = sub_1BC62C680();
    v41 = v40;

  }
  else
  {
    v39 = 0;
    v41 = 0;
  }
  v42 = (uint64_t *)&v11[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell_baseAccessibilityIdentifier];
  *v42 = v39;
  v42[1] = v41;
  swift_bridgeObjectRelease();
  sub_1BC4DAE48();
  v43 = objc_msgSend(v11, sel_accessoryView);
  if (!v43)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v13 = v43;
  if ((v5 & 1) != 0)
    v4 = 0x64657463656C6553;
  else
    v4 = 0x7463656C65736544;
  if ((v5 & 1) != 0)
    a2 = 0xE800000000000000;
  else
    a2 = 0xEA00000000006465;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_37;
LABEL_24:
  v45 = *(_QWORD *)(v3 + 16);
  v44 = *(_QWORD *)(v3 + 24);
  if (v45 >= v44 >> 1)
    v3 = (uint64_t)sub_1BC3B5060((_QWORD *)(v44 > 1), v45 + 1, 1, (_QWORD *)v3);
  *(_QWORD *)(v3 + 16) = v45 + 1;
  v46 = v3 + 16 * v45;
  *(_QWORD *)(v46 + 32) = v4;
  *(_QWORD *)(v46 + 40) = a2;
  swift_bridgeObjectRelease();
  v47 = (void *)sub_1BC62C86C();
  v48 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v13, sel_setAccessibilityIdentifier_, v48);
  swift_bridgeObjectRelease();

LABEL_28:
  v49 = v10;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  if ((v5 & 1) != 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
  }
  else if (qword_1ED6A4888 != -1)
  {
    swift_once();
  }
  v50 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v51 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setAccessibilityLabel_, v51, 0xE000000000000000);
  sub_1BC359AF8((uint64_t)v53);

  return v11;
}

unint64_t sub_1BC359580(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _OWORD v34[4];
  uint64_t v35;

  v3 = (void *)sub_1BC62A928();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v3, 1);

  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_allCategories);
  result = sub_1BC62A94C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result >= *(_QWORD *)(v4 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v6 = v4 + 72 * result;
  v34[0] = *(_OWORD *)(v6 + 32);
  v7 = *(_OWORD *)(v6 + 48);
  v8 = *(_OWORD *)(v6 + 64);
  v9 = *(_OWORD *)(v6 + 80);
  v35 = *(_QWORD *)(v6 + 96);
  v34[2] = v8;
  v34[3] = v9;
  v34[1] = v7;
  v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_selectedCategories);
  swift_beginAccess();
  v11 = *v10;
  sub_1BC359A94((uint64_t)v34);
  swift_bridgeObjectRetain();
  sub_1BC5DBEBC((unsigned __int8 *)v34, v11);
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if ((v13 & 1) != 0)
  {
    sub_1BC3FA208((unsigned __int8 *)v34, (uint64_t)&v25);
    v14 = v25;
    v15 = v26;
    v16 = v27;
    v17 = v28;
    v18 = v29;
    v19 = v30;
    v20 = v31;
    v21 = v32;
    v22 = v33;
    swift_endAccess();
    sub_1BC359B60(v14, v15, v16, v17, v18, v19, v20, v21, v22);
  }
  else
  {
    sub_1BC359A94((uint64_t)v34);
    sub_1BC48DB6C((uint64_t)&v25, (unsigned __int8 *)v34);
    v23 = v26;
    v24 = v33;
    swift_endAccess();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  sub_1BC3598B4();
  return sub_1BC359AF8((uint64_t)v34);
}

char *sub_1BC359814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_selectedCategories;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v1 + 16) == *(_QWORD *)(*(_QWORD *)(v0
                                                                  + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_allCategories)
                                                      + 16))
  {
    *(_QWORD *)v1 = MEMORY[0x1E0DEE9E8];
  }
  else
  {
    v2 = swift_bridgeObjectRetain();
    v3 = sub_1BC58B89C(v2);
    swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
  }
  swift_bridgeObjectRelease();
  return sub_1BC3598B4();
}

char *sub_1BC3598B4()
{
  char *v0;
  char *result;
  void *v2;
  char *v3;
  char *v4;

  result = (char *)objc_msgSend(v0, sel_tableView);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, sel_reloadData);

    result = (char *)MEMORY[0x1BCCF37A4](&v0[OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_delegate]);
    if (result)
    {
      v3 = result;
      v4 = &v0[OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_selectedCategories];
      swift_beginAccess();
      *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource] + 72) = *(_QWORD *)v4;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BC467CF4();
      swift_bridgeObjectRelease();
      return (char *)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BC3599E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CategorySelectionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CategorySelectionViewController()
{
  return objc_opt_self();
}

void sub_1BC359A84()
{
  qword_1EF4295E0 = 0x4028000000000000;
}

uint64_t sub_1BC359A94(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = v3;
  v5 = v2;
  return a1;
}

uint64_t sub_1BC359AF8(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC359B60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t result;

  if (a2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC359BC8(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _OWORD *v17;
  uint64_t v18;

  v2 = (void *)sub_1BC62C650();
  v3 = objc_msgSend(a1, sel_dequeueReusableHeaderFooterViewWithIdentifier_, v2);

  if (!v3)
    return 0;
  type metadata accessor for HeaderWithRightAlignedButton();
  v4 = swift_dynamicCastClass();
  if (v4)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v5 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v6 = sub_1BC62A4A8();
    v8 = v7;
    swift_bridgeObjectRelease();

    v9 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText);
    swift_beginAccess();
    *v9 = v6;
    v9[1] = v8;
    swift_bridgeObjectRelease();
    v10 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel);
    if (v9[1])
    {
      swift_bridgeObjectRetain();
      v11 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v10, sel_setText_, v11, 0xE000000000000000);

    swift_beginAccess();
    v12 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v13 = sub_1BC62A4A8();
    v15 = v14;
    swift_bridgeObjectRelease();

    v16 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText);
    swift_beginAccess();
    *v16 = v13;
    v16[1] = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC62CEF0();
    swift_bridgeObjectRelease();
    v17 = (_OWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier);
    swift_beginAccess();
    *v17 = xmmword_1BC6398F0;
    swift_bridgeObjectRelease();
    sub_1BC535950();
    v18 = v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
    swift_beginAccess();
    *(_QWORD *)(v18 + 8) = &off_1E74D4860;
    swift_unknownObjectWeakAssign();
  }
  else
  {

  }
  return v4;
}

void sub_1BC359F44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A53C0)
  {
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A53C0);
  }
}

unint64_t sub_1BC359F98()
{
  unint64_t result;

  result = qword_1ED6A5880;
  if (!qword_1ED6A5880)
  {
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED6A5880);
  }
  return result;
}

uint64_t sub_1BC359FDC(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t Box.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Box.init(value:)(a1);
  return v2;
}

char *Box.init(value:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = *(_QWORD *)v1;
  v13 = a1;
  v11 = sub_1BC62CC68();
  v2 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62C4AC();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1BC62CC20();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v10[1] = sub_1BC35A280();
  sub_1BC357158(0, &qword_1ED6A4820, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC639590;
  sub_1BC62CC14();
  v14 = v8;
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58E8, v7, MEMORY[0x1E0DEF828]);
  sub_1BC357158(0, &qword_1ED6A58B0, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35A2BC((unint64_t *)&qword_1ED6A58B8, &qword_1ED6A58B0, v7);
  sub_1BC62D0A0();
  sub_1BC62C494();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D0], v11);
  *((_QWORD *)v1 + 2) = sub_1BC62CCA4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v12 + 80) - 8) + 32))(&v1[*(_QWORD *)(*(_QWORD *)v1 + 96)], v13);
  return v1;
}

unint64_t sub_1BC35A280()
{
  unint64_t result;

  result = qword_1ED6A58F0;
  if (!qword_1ED6A58F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A58F0);
  }
  return result;
}

uint64_t sub_1BC35A2BC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC357158(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Box.read<A>(with:)()
{
  return sub_1BC62CC8C();
}

uint64_t sub_1BC35A350(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v9 + *(_QWORD *)(v8 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
  a1(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BC35A41C()
{
  uint64_t v0;

  return sub_1BC35A350(*(void (**)(char *))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t Box.write<A>(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = v4;
  v15 = a1;
  v16 = a2;
  v17 = a4;
  v7 = sub_1BC62C47C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1ED6A4818, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC639590;
  sub_1BC62C470();
  v22 = v12;
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, v8, MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35A2BC((unint64_t *)&qword_1ED6A58A0, (unint64_t *)&qword_1ED6A5890, v8);
  sub_1BC62D0A0();
  v18 = a3;
  v19 = v15;
  v20 = v16;
  v21 = v5;
  sub_1BC62CC80();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v7);
}

uint64_t sub_1BC35A5D8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40) + *(_QWORD *)(**(_QWORD **)(v0 + 40) + 96);
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

id *Box.deinit()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 12));
  return v0;
}

uint64_t Box.__deallocating_deinit()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 12));
  return swift_deallocClassInstance();
}

uint64_t sub_1BC35A6EC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Box(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Box);
}

uint64_t method lookup function for Box()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Box.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1BCCF351C](a1, v6, a5);
}

uint64_t sub_1BC35A7B8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BC35E3C8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1BC35D90C(a3, (uint64_t)sub_1BC35E500, v11);
  return swift_release();
}

uint64_t sub_1BC35A894(id a1, char a2)
{
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = a1;
    sub_1BC35E3C8();
    return sub_1BC62C914();
  }
  else
  {
    sub_1BC35E3C8();
    swift_bridgeObjectRetain();
    return sub_1BC62C920();
  }
}

void CIImage.createUIImage(dimension:)(double a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  double v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  id v13;
  id v14;
  uint64_t v15;
  CGColorSpaceRef DeviceRGB;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  char *v26;
  id v27;
  NSObject *v28;
  uint64_t v29;
  uint8_t *v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  CGAffineTransform v44;

  v2 = v1;
  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v7, sel_scale);
  v9 = v8;

  objc_msgSend(v2, sel_extent);
  v11 = v9 * (a1 / v10);
  objc_msgSend(v2, sel_extent);
  CGAffineTransformMakeScale(&v44, v11, v9 * (a1 / v12));
  v13 = objc_msgSend(v2, sel_imageByApplyingTransform_, &v44);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9DD90]), sel_initWithOptions_, 0);
  v15 = *MEMORY[0x1E0C9E070];
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  sub_1BC35C80C(MEMORY[0x1E0DEE9D8], (void (*)(_QWORD))sub_1BC35F618, &qword_1EF429828, type metadata accessor for CIImageRepresentationOption, (uint64_t (*)(uint64_t))sub_1BC558FDC);
  type metadata accessor for CIImageRepresentationOption(0);
  sub_1BC347F0C(&qword_1EF428D08, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1BC637FEC);
  v17 = v13;
  v18 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v14, sel_PNGRepresentationOfImage_format_colorSpace_options_, v13, v15, DeviceRGB, v18);

  if (v19)
  {
    v20 = sub_1BC62A634();
    v22 = v21;

    v23 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
    sub_1BC35D4EC(v20, v22);
    v24 = (void *)sub_1BC62A628();
    v25 = objc_msgSend(v23, sel_initWithData_scale_, v24, v9);
    sub_1BC35D530(v20, v22);

    if (v25)
    {
      sub_1BC35D530(v20, v22);

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v40 = v5;
    v41 = v4;
    v26 = v42;
    sub_1BC62BAF8();
    v27 = v2;
    v28 = sub_1BC62BB28();
    v29 = sub_1BC62CAC4();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      *(_QWORD *)&v44.a = v38;
      v39 = v13;
      *(_DWORD *)v30 = 136315138;
      v37[1] = v30 + 4;
      v31 = v27;
      v32 = objc_msgSend(v31, sel_description);
      v33 = sub_1BC62C680();
      v35 = v34;

      v43 = sub_1BC4991F0(v33, v35, (uint64_t *)&v44);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v28, (os_log_type_t)v29, "%s: failed to create QR code image data", v30, 0xCu);
      v36 = v38;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v36, -1, -1);
      MEMORY[0x1BCCF36A8](v30, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v41);
  }
}

void sub_1BC35AD48(void *a1, void (*a2)(id, uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  unint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  unint64_t v18;
  id v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  double v34;
  NSObject *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  unint64_t v58;
  void (*v59)(id, uint64_t);
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  void (*v65)(id, uint64_t);
  __int128 v66;
  unint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  unint64_t v78;
  uint64_t v79;

  v79 = *MEMORY[0x1E0C80C00];
  v6 = sub_1BC62BB34();
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62C6D4();
  v74 = *(_QWORD *)(v8 - 8);
  v75 = v8;
  MEMORY[0x1E0C80A78](v8);
  v73 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)sub_1BC62C650();
  v11 = objc_msgSend((id)objc_opt_self(), sel_filterWithName_, v10);

  if (!v11)
  {
    v44 = (void *)objc_opt_self();
    v45 = (void *)sub_1BC62C650();
    v46 = objc_msgSend(v44, sel_hk_error_description_, 3, v45);

    swift_willThrow();
LABEL_28:
    v57 = v46;
    a2(v46, 1);

    return;
  }
  v12 = (void *)sub_1BC62C650();
  v13 = (unint64_t)" CIFilter for CIQRCodeGenerator";
  v14 = (void *)sub_1BC62C650();
  objc_msgSend(v11, sel_setValue_forKey_, v12, v14);

  v77 = 0;
  v78 = MEMORY[0x1E0DEE9D8];
  v15 = objc_msgSend(a1, sel_orderedSegmentsWithError_, &v77);
  v16 = v77;
  if (!v15)
  {
    v47 = v77;
    swift_bridgeObjectRelease();
    v48 = v11;
    v46 = (id)sub_1BC62A55C();

    swift_willThrow();
    goto LABEL_28;
  }
  v17 = v15;
  sub_1BC34B6A0(0, &qword_1EF429778);
  v18 = sub_1BC62C878();
  v19 = v16;

  v64 = a3;
  v65 = a2;
  if (v18 >> 62)
    goto LABEL_30;
  v21 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v21)
  {
    v71 = v18 & 0xC000000000000001;
    v22 = 4;
    *(_QWORD *)&v20 = 134217984;
    v66 = v20;
    v67 = v13 | 0x8000000000000000;
    v68 = v11;
    while (1)
    {
      v23 = v22 - 4;
      if (!v71)
        break;
      v24 = (id)MEMORY[0x1BCCF24CC](v22 - 4, v18);
      v25 = v22 - 3;
      if (__OFADD__(v23, 1))
        goto LABEL_29;
LABEL_11:
      v76 = v24;
      v26 = objc_msgSend(v24, sel_fullQRCodeValue, v64);
      sub_1BC62C680();

      v27 = v73;
      sub_1BC62C6C8();
      v28 = sub_1BC62C68C();
      v13 = v29;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v27, v75);
      if (v13 >> 60 == 15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v53 = (void *)objc_opt_self();
        v54 = (void *)sub_1BC62C650();
        v55 = objc_msgSend(v53, sel_hk_error_description_, 3, v54);
        v56 = v11;
        v46 = v55;

        swift_willThrow();
        goto LABEL_27;
      }
      v30 = (void *)sub_1BC62A628();
      v31 = (void *)sub_1BC62C650();
      objc_msgSend(v11, sel_setValue_forKey_, v30, v31);

      v32 = objc_msgSend(v11, sel_outputImage);
      if (!v32)
        goto LABEL_25;
      v33 = v32;
      objc_msgSend(v33, sel_extent);
      if (v34 <= 105.0)
      {

      }
      else
      {
        sub_1BC62BAF8();
        v35 = v33;
        v36 = sub_1BC62BB28();
        v37 = sub_1BC62CAB8();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = swift_slowAlloc();
          *(_DWORD *)v38 = v66;
          -[NSObject extent](v35, sel_extent);
          *(_QWORD *)(v38 + 4) = v39;

          _os_log_impl(&dword_1BC30A000, v36, v37, "Generated QR code is larger than v22 (%f), re-generating with \"L\" correction level", (uint8_t *)v38, 0xCu);
          MEMORY[0x1BCCF36A8](v38, -1, -1);
        }
        else
        {

          v36 = v35;
        }

        (*(void (**)(char *, uint64_t))(v69 + 8))(v72, v70);
        v40 = (void *)sub_1BC62C650();
        v41 = (void *)sub_1BC62C650();
        v42 = v68;
        objc_msgSend(v68, sel_setValue_forKey_, v40, v41);

        v11 = v42;
        v33 = objc_msgSend(v42, sel_outputImage);

        if (!v33)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v49 = (void *)objc_opt_self();
          v50 = (void *)sub_1BC62C650();
          v51 = objc_msgSend(v49, sel_hk_error_description_, 3, v50);
          v52 = v11;
          v46 = v51;

          swift_willThrow();
          sub_1BC35E5E8(v28, v13);

LABEL_27:
          a2 = v65;
          goto LABEL_28;
        }
      }
      v43 = v33;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();

      sub_1BC35E5E8(v28, v13);
      ++v22;
      if (v25 == v21)
        goto LABEL_31;
    }
    v24 = *(id *)(v18 + 8 * v22);
    v25 = v22 - 3;
    if (!__OFADD__(v23, 1))
      goto LABEL_11;
LABEL_29:
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    v21 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
LABEL_31:
  swift_bridgeObjectRelease();
  v58 = v78;
  if (v78 >> 62)
  {
    swift_bridgeObjectRetain();
    v60 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    v59 = v65;
    if (v60)
      goto LABEL_33;
LABEL_35:
    swift_bridgeObjectRelease();
    v61 = (void *)objc_opt_self();
    v62 = (void *)sub_1BC62C650();
    v63 = objc_msgSend(v61, sel_hk_error_description_, 3, v62);

    v59(v63, 1);
    goto LABEL_36;
  }
  v59 = v65;
  if (!*(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_35;
LABEL_33:
  v59((id)v58, 0);
  swift_bridgeObjectRelease();
LABEL_36:

}

uint64_t sub_1BC35B56C()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1BC35B57C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35EDEC(0, (unint64_t *)&qword_1EF429798);
  v2 = (_QWORD *)sub_1BC62D400();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BC558D94(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35B6B4(uint64_t a1)
{
  return sub_1BC35C80C(a1, (void (*)(_QWORD))sub_1BC35E004, (unint64_t *)&qword_1EF4290F0, type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_1BC558F0C);
}

unint64_t sub_1BC35B6D8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35EB5C();
  v2 = (_QWORD *)sub_1BC62D400();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC35EBE0(v4, (uint64_t)&v17, (uint64_t (*)(_QWORD))sub_1BC35EC24);
    v5 = v17;
    v6 = v18;
    result = sub_1BC558D94(v17, v18);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    v10 = v2[7] + 72 * result;
    *(_OWORD *)v10 = v19;
    v11 = v20;
    v12 = v21;
    v13 = v22;
    *(_QWORD *)(v10 + 64) = v23;
    *(_OWORD *)(v10 + 32) = v12;
    *(_OWORD *)(v10 + 48) = v13;
    *(_OWORD *)(v10 + 16) = v11;
    v14 = v2[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v2[2] = v16;
    v4 += 88;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35B82C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[2];

  sub_1BC35EF1C(0, &qword_1ED6A4148, (void (*)(uint64_t))MEMORY[0x1E0CB0998], sub_1BC35ECA8);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v27 - v5;
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35ED08();
  v7 = sub_1BC62D400();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = &v6[*(int *)(v3 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v27[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC35ED9C(v13, (uint64_t)v6, &qword_1ED6A4148, (void (*)(uint64_t))MEMORY[0x1E0CB0998], sub_1BC35ECA8);
    result = sub_1BC559014((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_1BC62A7B4();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    v20 = v8[7] + 72 * v17;
    *(_OWORD *)v20 = *(_OWORD *)v10;
    v21 = *((_OWORD *)v10 + 1);
    v22 = *((_OWORD *)v10 + 2);
    v23 = *((_OWORD *)v10 + 3);
    *(_QWORD *)(v20 + 64) = *((_QWORD *)v10 + 8);
    *(_OWORD *)(v20 + 32) = v22;
    *(_OWORD *)(v20 + 48) = v23;
    *(_OWORD *)(v20 + 16) = v21;
    v24 = v8[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_11;
    v8[2] = v26;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35BA04(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35D700();
  v2 = (_QWORD *)sub_1BC62D400();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    v5 = *(v4 - 4);
    v6 = *(v4 - 3);
    v7 = (void *)*(v4 - 2);
    v8 = (void *)*(v4 - 1);
    v9 = *v4;
    v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = v7;
    result = sub_1BC5590AC(v5, v6, v7, v8);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v2[6] + 32 * result);
    *v14 = v5;
    v14[1] = v6;
    v14[2] = (uint64_t)v7;
    v14[3] = (uint64_t)v8;
    *(_QWORD *)(v2[7] + 8 * result) = v9;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v2[2] = v17;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35BB40(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35D68C();
  v2 = (_QWORD *)sub_1BC62D400();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BC558D94(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35BC54(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35E318(0, &qword_1EF429740, &qword_1EF429748, 0x1E0CB6868, &qword_1EF429750);
  v2 = (_QWORD *)sub_1BC62D400();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_1BC5591BC((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35BD78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  sub_1BC35F550();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (_QWORD *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35F5B4();
  v7 = sub_1BC62D400();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (char *)v6 + *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC35EBE0(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC35F550);
    v15 = *v6;
    v16 = v6[1];
    result = sub_1BC558D94(*v6, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = sub_1BC62A7B4();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35BF10(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35EDEC(0, (unint64_t *)&qword_1EF429780);
  v2 = sub_1BC62D400();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC35E5FC(v6, (uint64_t)&v15, &qword_1EF42B220);
    v7 = v15;
    v8 = v16;
    result = sub_1BC558D94(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1BC35E088(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35C078(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD v28[2];

  sub_1BC35F69C(0, &qword_1EF429788, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v28 - v5;
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35E648();
  v7 = sub_1BC62D400();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = &v6[*(int *)(v3 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC35E11C(v13, (uint64_t)v6, &qword_1EF429788, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    result = sub_1BC559014((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_1BC62A7B4();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    v20 = v8[7] + 48 * v17;
    v21 = *((_QWORD *)v10 + 3);
    v22 = v10[32];
    v23 = *((_QWORD *)v10 + 5);
    v24 = *(_OWORD *)(v10 + 8);
    *(_BYTE *)v20 = *v10;
    *(_OWORD *)(v20 + 8) = v24;
    *(_QWORD *)(v20 + 24) = v21;
    *(_BYTE *)(v20 + 32) = v22;
    *(_QWORD *)(v20 + 40) = v23;
    v25 = v8[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_11;
    v8[2] = v27;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35C258(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35EDEC(0, &qword_1EF4297E0);
  v2 = sub_1BC62D400();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC35E5FC(v6, (uint64_t)v15, (unint64_t *)&qword_1EF42B1F0);
    result = sub_1BC559254((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1BC35E088(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35C3C4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35F29C();
  v2 = (_QWORD *)sub_1BC62D400();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_1BC558F0C((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35C4C8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35E318(0, (unint64_t *)&qword_1EF429758, &qword_1ED6A58D8, 0x1E0CB6B00, (unint64_t *)&qword_1ED6A58E0);
  v2 = (_QWORD *)sub_1BC62D400();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_1BC558F8C((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35C5EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35F0C4();
  v2 = (_QWORD *)sub_1BC62D400();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_1BC559208((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35C6F0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35E16C();
  v2 = (_QWORD *)sub_1BC62D400();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    result = sub_1BC558FDC();
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35C7E8(uint64_t a1)
{
  return sub_1BC35C80C(a1, (void (*)(_QWORD))sub_1BC35E098, &qword_1EF429718, type metadata accessor for AttributeName, (uint64_t (*)(uint64_t))sub_1BC558FDC);
}

unint64_t sub_1BC35C80C(uint64_t a1, void (*a2)(_QWORD), unint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  if (!*(_QWORD *)(a1 + 16))
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a2(0);
  v9 = sub_1BC62D400();
  v10 = (_QWORD *)v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  v12 = v9 + 64;
  v13 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC35E11C(v13, (uint64_t)&v20, a3, a4);
    v14 = v20;
    result = a5(v20);
    if ((v16 & 1) != 0)
      break;
    *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v10[6] + 8 * result) = v14;
    result = (unint64_t)sub_1BC35E088(&v21, (_OWORD *)(v10[7] + 32 * result));
    v17 = v10[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v10[2] = v19;
    v13 += 40;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35C954(uint64_t a1)
{
  return sub_1BC35D034(a1, &qword_1EF4296C8, (unint64_t *)&qword_1ED6A5990);
}

unint64_t sub_1BC35C970(uint64_t a1)
{
  return sub_1BC35D034(a1, &qword_1EF4296C0, (unint64_t *)&qword_1EF429090);
}

unint64_t sub_1BC35C98C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  sub_1BC35F69C(0, (unint64_t *)&qword_1ED6A4EC0, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v23 - v5;
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35F470();
  v7 = sub_1BC62D400();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC35E11C(v13, (uint64_t)v6, (unint64_t *)&qword_1ED6A4EC0, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
    result = sub_1BC559478((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for BrowseCategory();
    result = sub_1BC35F080((uint64_t)v6, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v6[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35CB38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  sub_1BC35F340();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35F3C4();
  v7 = sub_1BC62D400();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC35EBE0(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC35F340);
    result = sub_1BC559478((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for BrowseCategory();
    result = sub_1BC35F080((uint64_t)v6, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v6[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35CCBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  sub_1BC35F17C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35F1F8();
  v7 = sub_1BC62D400();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC35EBE0(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC35F17C);
    result = sub_1BC559014((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_1BC62A7B4();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v6[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35CE48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[2];

  sub_1BC35EF1C(0, qword_1ED6A41F0, (void (*)(uint64_t))type metadata accessor for BrowseCategory, sub_1BC35EF8C);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v27 - v5;
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35EFEC();
  v7 = sub_1BC62D400();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = &v6[*(int *)(v3 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v27[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC35ED9C(v13, (uint64_t)v6, qword_1ED6A41F0, (void (*)(uint64_t))type metadata accessor for BrowseCategory, sub_1BC35EF8C);
    result = sub_1BC559478((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for BrowseCategory();
    result = sub_1BC35F080((uint64_t)v6, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17);
    v20 = v8[7] + 72 * v17;
    *(_OWORD *)v20 = *(_OWORD *)v10;
    v21 = *((_OWORD *)v10 + 1);
    v22 = *((_OWORD *)v10 + 2);
    v23 = *((_OWORD *)v10 + 3);
    *(_QWORD *)(v20 + 64) = *((_QWORD *)v10 + 8);
    *(_OWORD *)(v20 + 32) = v22;
    *(_OWORD *)(v20 + 48) = v23;
    *(_OWORD *)(v20 + 16) = v21;
    v24 = v8[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_11;
    v8[2] = v26;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35D018(uint64_t a1)
{
  return sub_1BC35D034(a1, &qword_1ED6A4808, (unint64_t *)&qword_1ED6A4E60);
}

unint64_t sub_1BC35D034(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35D594(0, a2, a3);
  v4 = (_QWORD *)sub_1BC62D400();
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  v6 = (void **)(a1 + 48);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 2);
    v8 = (uint64_t)*(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    v10 = v9;
    result = sub_1BC558D94(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v10;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC35D148(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35D5F8();
  v2 = (_QWORD *)sub_1BC62D400();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_1BC558FDC(v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1BC35D24C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  __int128 v22;
  _BYTE v23[32];
  __int128 v24;
  void *v25;

  if (*(_QWORD *)(a1 + 16) && (sub_1BC35E6C8(), v2 = (_QWORD *)sub_1BC62D400(), (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (_QWORD *)(a1 + 104);
    while (1)
    {
      v6 = (void *)*(v4 - 8);
      v5 = *(v4 - 7);
      v7 = *(v4 - 4);
      v8 = *(v4 - 3);
      v9 = *(v4 - 2);
      v10 = (void *)*(v4 - 1);
      v11 = *v4;
      LOBYTE(v22) = *((_BYTE *)v4 - 72);
      *((_QWORD *)&v22 + 1) = v6;
      *(_QWORD *)v23 = v5;
      *(_OWORD *)&v23[8] = *((_OWORD *)v4 - 3);
      *(_QWORD *)&v23[24] = v7;
      *(_QWORD *)&v24 = v8;
      *((_QWORD *)&v24 + 1) = v9;
      v25 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = v10;
      v13 = v6;
      sub_1BC5594EC(&v22);
      if ((v15 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
      v16 = v2[6] + 72 * v14;
      v17 = v24;
      *(_OWORD *)(v16 + 32) = *(_OWORD *)&v23[16];
      *(_OWORD *)(v16 + 48) = v17;
      *(_QWORD *)(v16 + 64) = v25;
      v18 = *(_OWORD *)v23;
      *(_OWORD *)v16 = v22;
      *(_OWORD *)(v16 + 16) = v18;
      *(_QWORD *)(v2[7] + 8 * v14) = v11;
      v19 = v2[2];
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (v20)
        goto LABEL_10;
      v4 += 10;
      v2[2] = v21;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1BC35D3C8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC35E318(0, &qword_1EF4297A0, (unint64_t *)&qword_1EF436690, 0x1E0CB6628, &qword_1EF4297A8);
  v2 = (_QWORD *)sub_1BC62D400();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_1BC5596B4((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BC35D4EC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1BC35D530(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t type metadata accessor for SignedClinicalDataQRCodeGenerator()
{
  return objc_opt_self();
}

void sub_1BC35D594(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC34B6A0(255, a3);
    v4 = sub_1BC62D40C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC35D5F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4296D0)
  {
    type metadata accessor for DocumentReadingOptionKey(255);
    type metadata accessor for DocumentType(255);
    sub_1BC347F0C(&qword_1EF428FE8, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_1BC6394B4);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4296D0);
  }
}

void sub_1BC35D68C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4296D8)
  {
    sub_1BC35E59C(255, &qword_1EF4296E0, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4296D8);
  }
}

void sub_1BC35D700()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4296E8)
  {
    sub_1BC35E59C(255, &qword_1EF4296E0, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1BC35D778();
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4296E8);
  }
}

unint64_t sub_1BC35D778()
{
  unint64_t result;

  result = qword_1EF4296F0;
  if (!qword_1EF4296F0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC649FA8, &type metadata for IdentifierDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF4296F0);
  }
  return result;
}

unint64_t sub_1BC35D7BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  unsigned __int8 v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1BC35F4F0();
    v3 = (_QWORD *)sub_1BC62D400();
    for (i = (_OWORD *)(a1 + 96); ; i += 5)
    {
      v5 = *((_BYTE *)i - 64);
      v6 = *((_BYTE *)i - 56);
      v8 = (void *)*((_QWORD *)i - 6);
      v7 = *((_QWORD *)i - 5);
      v9 = *((_QWORD *)i - 4);
      v10 = *((_QWORD *)i - 3);
      v19 = *(i - 1);
      v20 = *i;
      result = sub_1BC558FD8(v5);
      if ((v12 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      v13 = v3[7] + 72 * result;
      *(_BYTE *)v13 = v6;
      *(_QWORD *)(v13 + 8) = v8;
      *(_QWORD *)(v13 + 16) = v7;
      *(_QWORD *)(v13 + 24) = v9;
      *(_QWORD *)(v13 + 32) = v10;
      *(_OWORD *)(v13 + 40) = v19;
      *(_OWORD *)(v13 + 56) = v20;
      v14 = v3[2];
      v15 = __OFADD__(v14, 1);
      v16 = v14 + 1;
      if (v15)
        goto LABEL_10;
      v3[2] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = *((id *)&v20 + 1);
      v18 = v8;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t sub_1BC35D90C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void (*v20)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v23 = a2;
  v5 = sub_1BC62C47C();
  v26 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62C4AC();
  v24 = *(_QWORD *)(v8 - 8);
  v25 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62C488();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF530], v11);
  v15 = (void *)sub_1BC62CCB0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v16 = (_QWORD *)swift_allocObject();
  v17 = v23;
  v16[2] = a1;
  v16[3] = v17;
  v16[4] = a3;
  aBlock[4] = sub_1BC35E578;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_0;
  v18 = _Block_copy(aBlock);
  v19 = a1;
  swift_retain();
  sub_1BC62C494();
  v27 = MEMORY[0x1E0DEE9D8];
  v20 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC35E59C(0, (unint64_t *)&qword_1ED6A5890, v20);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v10, v7, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
  return swift_release();
}

unint64_t sub_1BC35DB8C(double *a1)
{
  return sub_1BC35DBC4(a1, &qword_1EF4297D0, &qword_1ED6A47E8, (uint64_t)off_1E74D01B8);
}

unint64_t sub_1BC35DBA8(double *a1)
{
  return sub_1BC35DBC4(a1, &qword_1EF4297B8, (unint64_t *)&qword_1ED6A47F8, 0x1E0DC3870);
}

unint64_t sub_1BC35DBC4(double *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  double v7;
  void *v8;
  unint64_t result;
  char v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  double *v16;
  void *v17;
  id v18;
  char v19;
  id v20;

  v4 = *((_QWORD *)a1 + 2);
  if (!v4)
    return MEMORY[0x1E0DEE9E0];
  sub_1BC35EAA4(0, a2, a3, a4, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t))MEMORY[0x1E0DECD58]);
  v6 = (_QWORD *)sub_1BC62D400();
  v7 = a1[4];
  v8 = (void *)*((_QWORD *)a1 + 5);
  result = sub_1BC558FE0(v7);
  if ((v10 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v20 = v8;
    return (unint64_t)v6;
  }
  v11 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(double *)(v6[6] + v12) = v7;
    *(_QWORD *)(v6[7] + v12) = v8;
    v13 = v6[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      break;
    v6[2] = v15;
    if (!--v4)
      goto LABEL_8;
    v16 = v11 + 2;
    v7 = *(v11 - 1);
    v17 = *(void **)v11;
    v18 = v8;
    result = sub_1BC558FE0(v7);
    v11 = v16;
    v8 = v17;
    if ((v19 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BC35DCCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  __int128 v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  __int128 v16;
  __int128 v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  sub_1BC35E1EC();
  v3 = (_QWORD *)sub_1BC62D400();
  v4 = *(_QWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  result = sub_1BC559338(v4);
  v7 = v16;
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  v9 = (uint64_t *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v10 = v3[7] + 24 * result;
    *(_OWORD *)v10 = v7;
    *(_QWORD *)(v10 + 16) = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 4;
    v4 = *v9;
    v17 = *(_OWORD *)(v9 + 1);
    v5 = v9[3];
    swift_unknownObjectRetain();
    result = sub_1BC559338(v4);
    v9 = v14;
    v7 = v17;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BC35DDF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  sub_1BC35DEEC();
  v3 = (_QWORD *)sub_1BC62D400();
  LOBYTE(v4) = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_1BC558FD8(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((unsigned __int8 *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1BC558FD8(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_1BC35DEEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4296F8)
  {
    sub_1BC35DF6C(255, (unint64_t *)&qword_1EF429700, &qword_1ED6A52D8);
    sub_1BC35DFC0();
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4296F8);
  }
}

void sub_1BC35DF6C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC34B6A0(255, a3);
    v4 = sub_1BC62C8E4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BC35DFC0()
{
  unint64_t result;

  result = qword_1ED6A4ED0;
  if (!qword_1ED6A4ED0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for DisplayCategory.Kind, &type metadata for DisplayCategory.Kind);
    atomic_store(result, (unint64_t *)&qword_1ED6A4ED0);
  }
  return result;
}

void sub_1BC35E004()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429708)
  {
    type metadata accessor for Key(255);
    sub_1BC347F0C((unint64_t *)&qword_1EF4383C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC639360);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429708);
  }
}

_OWORD *sub_1BC35E088(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1BC35E098()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429710)
  {
    type metadata accessor for AttributeName(255);
    sub_1BC347F0C(&qword_1EF428FA8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC6392D8);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429710);
  }
}

uint64_t sub_1BC35E11C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC35F69C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BC35E16C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429720)
  {
    type metadata accessor for FeatureKey(255);
    sub_1BC347F0C(&qword_1EF428F98, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC63931C);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429720);
  }
}

void sub_1BC35E1EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429728)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_1BC35E280();
    sub_1BC347F0C(&qword_1EF429738, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_1BC639294);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429728);
  }
}

unint64_t sub_1BC35E280()
{
  unint64_t result;

  result = qword_1EF429730;
  if (!qword_1EF429730)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF429730);
  }
  return result;
}

uint64_t sub_1BC35E2D8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1BC34B6A0(255, a2);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC35E318(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    sub_1BC34B6A0(255, a3);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58C0);
    sub_1BC35E2D8(a5, a3);
    v8 = sub_1BC62D40C();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BC35E3C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429760)
  {
    sub_1BC35DF6C(255, (unint64_t *)&qword_1EF429768, (unint64_t *)&qword_1EF429770);
    sub_1BC35E44C();
    v0 = sub_1BC62C92C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429760);
  }
}

unint64_t sub_1BC35E44C()
{
  unint64_t result;

  result = qword_1ED6A59C0;
  if (!qword_1ED6A59C0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A59C0);
  }
  return result;
}

uint64_t sub_1BC35E4A0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC35E3C8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BC35E500(void *a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_1BC35E3C8();
  return sub_1BC35A894(a1, v3);
}

uint64_t sub_1BC35E54C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC35E578()
{
  uint64_t v0;

  sub_1BC35AD48(*(void **)(v0 + 16), *(void (**)(id, uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

void sub_1BC35E59C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC62C8E4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC35E5E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BC35D530(a1, a2);
  return a1;
}

uint64_t sub_1BC35E5FC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1BC35EE38(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1BC35E648()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429790)
  {
    sub_1BC62A7B4();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429790);
  }
}

void sub_1BC35E6C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4E18)
  {
    sub_1BC35E728();
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4E18);
  }
}

unint64_t sub_1BC35E728()
{
  unint64_t result;

  result = qword_1ED6A5500;
  if (!qword_1ED6A5500)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for DisplayCategory, &type metadata for DisplayCategory);
    atomic_store(result, (unint64_t *)&qword_1ED6A5500);
  }
  return result;
}

unint64_t sub_1BC35E76C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1BC35EE94();
    v3 = (_QWORD *)sub_1BC62D400();
    for (i = a1 + 56; ; i += 80)
    {
      v20 = v1;
      v5 = *(_QWORD *)(i - 24);
      v6 = *(_QWORD *)(i - 16);
      v7 = *(_QWORD *)(i - 8);
      v8 = *(_BYTE *)i;
      v9 = *(_QWORD *)(i + 24);
      v21 = *(void **)(i + 16);
      v22 = *(void **)(i + 8);
      v10 = *(_QWORD *)(i + 32);
      v11 = *(_QWORD *)(i + 40);
      v12 = *(void **)(i + 48);
      result = sub_1BC559284(v5, v6, v7, *(_BYTE *)i);
      if ((v14 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v15 = v3[6] + 32 * result;
      *(_QWORD *)v15 = v5;
      *(_QWORD *)(v15 + 8) = v6;
      *(_QWORD *)(v15 + 16) = v7;
      *(_BYTE *)(v15 + 24) = v8;
      v16 = (_QWORD *)(v3[7] + 48 * result);
      result = (unint64_t)v22;
      *v16 = v22;
      v16[1] = v21;
      v16[2] = v9;
      v16[3] = v10;
      v16[4] = v11;
      v16[5] = v12;
      v17 = v3[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v3[2] = v19;
      sub_1BC35EEF4(v22, v21, v9, v10, v11, v12);
      v1 = v20 - 1;
      if (v20 == 1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1BC35E8B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  void **i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1BC35EA00();
    v3 = (_QWORD *)sub_1BC62D400();
    for (i = (void **)(a1 + 104); ; i += 10)
    {
      v21 = v1;
      v5 = (uint64_t)*(i - 9);
      v6 = (uint64_t)*(i - 8);
      v7 = (uint64_t)*(i - 7);
      v8 = *((_BYTE *)i - 48);
      v9 = *((_BYTE *)i - 40);
      v11 = (uint64_t)*(i - 4);
      v10 = (uint64_t)*(i - 3);
      v23 = (uint64_t)*(i - 2);
      v22 = *((_BYTE *)i - 8);
      v12 = *i;
      result = sub_1BC559284(v5, v6, v7, v8);
      if ((v14 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v15 = v3[6] + 32 * result;
      *(_QWORD *)v15 = v5;
      *(_QWORD *)(v15 + 8) = v6;
      *(_QWORD *)(v15 + 16) = v7;
      *(_BYTE *)(v15 + 24) = v8;
      v16 = v3[7] + 48 * result;
      *(_BYTE *)v16 = v9;
      *(_QWORD *)(v16 + 8) = v11;
      *(_QWORD *)(v16 + 16) = v10;
      *(_QWORD *)(v16 + 24) = v23;
      *(_BYTE *)(v16 + 32) = v22;
      *(_QWORD *)(v16 + 40) = v12;
      v17 = v3[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v3[2] = v19;
      v20 = v12;
      v1 = v21 - 1;
      if (v21 == 1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

void sub_1BC35EA00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4297B0)
  {
    sub_1BC35EA60();
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4297B0);
  }
}

unint64_t sub_1BC35EA60()
{
  unint64_t result;

  result = qword_1ED6A4160;
  if (!qword_1ED6A4160)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for AccountIcon.Size, &type metadata for AccountIcon.Size);
    atomic_store(result, (unint64_t *)&qword_1ED6A4160);
  }
  return result;
}

void sub_1BC35EAA4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD, uint64_t, unint64_t))
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v8 = sub_1BC34B6A0(255, a3);
    v9 = sub_1BC35EB18();
    v10 = a5(a1, MEMORY[0x1E0DEF040], v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

unint64_t sub_1BC35EB18()
{
  unint64_t result;

  result = qword_1ED6A4150;
  if (!qword_1ED6A4150)
  {
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEF060], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ED6A4150);
  }
  return result;
}

void sub_1BC35EB5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4297C0)
  {
    sub_1BC35EAA4(255, (unint64_t *)&qword_1ED6A4278, (unint64_t *)&qword_1ED6A47F8, 0x1E0DC3870, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4297C0);
  }
}

uint64_t sub_1BC35EBE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1BC35EC24()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF4297C8)
  {
    sub_1BC35EAA4(255, (unint64_t *)&qword_1ED6A4278, (unint64_t *)&qword_1ED6A47F8, 0x1E0DC3870, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF4297C8);
  }
}

void sub_1BC35ECA8(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1ED6A4290)
  {
    v2 = sub_1BC35EA60();
    v3 = type metadata accessor for UnboundedCache(a1, (uint64_t)&type metadata for AccountIcon.Size, (uint64_t)&type metadata for AccountIcon, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1ED6A4290);
  }
}

void sub_1BC35ED08()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF4297D8)
  {
    sub_1BC62A7B4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC35ECA8(255);
    sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v0, MEMORY[0x1E0CB09C8]);
    v1 = sub_1BC62D40C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF4297D8);
  }
}

uint64_t sub_1BC35ED9C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v7;

  sub_1BC35EF1C(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_1BC35EDEC(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC62D40C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1BC35EE38(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BC35EE94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4297E8)
  {
    sub_1BC35EA60();
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4297E8);
  }
}

id sub_1BC35EEF4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v7;

  if ((a5 & 0x8000000000000000) == 0)
  {
    v7 = a2;
    a6 = a1;
  }
  return a6;
}

void sub_1BC35EF1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BC35EF8C(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1ED6A4280)
  {
    v2 = sub_1BC35EA60();
    v3 = type metadata accessor for UnboundedCache(a1, (uint64_t)&type metadata for AccountIcon.Size, (uint64_t)&type metadata for BrowseIcon, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1ED6A4280);
  }
}

void sub_1BC35EFEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4297F0)
  {
    type metadata accessor for BrowseCategory();
    sub_1BC35EF8C(255);
    sub_1BC347F0C(&qword_1ED6A5438, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t)&protocol conformance descriptor for BrowseCategory);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4297F0);
  }
}

uint64_t sub_1BC35F080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BrowseCategory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC35F0C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4297F8)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A5990);
    sub_1BC34B6A0(255, (unint64_t *)&unk_1EF4357A0);
    sub_1BC35E2D8((unint64_t *)&qword_1ED6A52F0, (unint64_t *)&qword_1ED6A5990);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4297F8);
  }
}

void sub_1BC35F17C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6A3328[0])
  {
    sub_1BC62A7B4();
    sub_1BC34B6A0(255, &qword_1ED6A4978);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, qword_1ED6A3328);
  }
}

void sub_1BC35F1F8()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF429800)
  {
    sub_1BC62A7B4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC34B6A0(255, &qword_1ED6A4978);
    sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v0, MEMORY[0x1E0CB09C8]);
    v1 = sub_1BC62D40C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF429800);
  }
}

void sub_1BC35F29C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429808)
  {
    type metadata accessor for Key(255);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A5970);
    sub_1BC347F0C((unint64_t *)&qword_1EF4383C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC639360);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429808);
  }
}

void sub_1BC35F340()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6A3210)
  {
    type metadata accessor for BrowseCategory();
    sub_1BC35DF6C(255, (unint64_t *)&qword_1ED6A3220, &qword_1ED6A48A0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6A3210);
  }
}

void sub_1BC35F3C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A3228)
  {
    type metadata accessor for BrowseCategory();
    sub_1BC35DF6C(255, (unint64_t *)&qword_1ED6A3220, &qword_1ED6A48A0);
    sub_1BC347F0C(&qword_1ED6A5438, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t)&protocol conformance descriptor for BrowseCategory);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A3228);
  }
}

void sub_1BC35F470()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A52F8)
  {
    type metadata accessor for BrowseCategory();
    sub_1BC347F0C(&qword_1ED6A5438, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t)&protocol conformance descriptor for BrowseCategory);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A52F8);
  }
}

void sub_1BC35F4F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A5300)
  {
    sub_1BC35DFC0();
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A5300);
  }
}

void sub_1BC35F550()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF429810)
  {
    sub_1BC62A7B4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF429810);
  }
}

void sub_1BC35F5B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429818)
  {
    sub_1BC62A7B4();
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429818);
  }
}

void sub_1BC35F618()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429820)
  {
    type metadata accessor for CIImageRepresentationOption(255);
    sub_1BC347F0C(&qword_1EF428D08, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1BC637FEC);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429820);
  }
}

void sub_1BC35F69C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionViewController(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF429900);
}

uint64_t sub_1BC35F714()
{
  return swift_initClassMetadata2();
}

void sub_1BC35F78C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF429830 = v1;
  *(_QWORD *)algn_1EF429838 = v3;
}

void sub_1BC35F858()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF429840 = v1;
  *(_QWORD *)algn_1EF429848 = v3;
}

void sub_1BC35F924()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF429850 = v1;
  *(_QWORD *)algn_1EF429858 = v3;
}

void sub_1BC35F9F0()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF429860 = v1;
  *(_QWORD *)algn_1EF429868 = v3;
}

void sub_1BC35FABC()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF429870 = v1;
  *(_QWORD *)algn_1EF429878 = v3;
}

void sub_1BC35FB88()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF429880 = v1;
  *(_QWORD *)algn_1EF429888 = v3;
}

void sub_1BC35FC54()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF429890 = v1;
  *(_QWORD *)algn_1EF429898 = v3;
}

void sub_1BC35FD20()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF4298A0 = v1;
  *(_QWORD *)algn_1EF4298A8 = v3;
}

void sub_1BC35FDEC()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF4298B0 = v1;
  *(_QWORD *)algn_1EF4298B8 = v3;
}

id sub_1BC35FEB8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF4298E8;
  v2 = *(void **)(v0 + qword_1EF4298E8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF4298E8);
  }
  else
  {
    if (qword_1EF4283A8 != -1)
      swift_once();
    v4 = objc_msgSend(objc_allocWithZone((Class)WDBrandLogoView), sel_initWithSize_, *(double *)&qword_1EF42A0E0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC35FF78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v1 = qword_1EF4298F0;
  v2 = *(void **)(v0 + qword_1EF4298F0);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF4298F0);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_linkButton);
    if (qword_1EF428358 != -1)
      swift_once();
    v5 = (void *)sub_1BC62C650();
    objc_msgSend(v4, sel_setTitle_forState_, v5, 0);

    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_dontShareButtonTapped_, 64);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC36006C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF4298F8;
  v2 = *(void **)(v0 + qword_1EF4298F8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF4298F8);
  }
  else
  {
    v4 = sub_1BC3600CC(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC3600CC(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;

  v2 = objc_msgSend((id)objc_opt_self(), sel_accessoryButton);
  v3 = (void *)objc_opt_self();
  v4 = v2;
  v5 = objc_msgSend(v3, sel_systemBlueColor);
  objc_msgSend(v4, sel_setTintColor_, v5);

  if (qword_1EF428348 != -1)
    swift_once();
  v6 = (void *)sub_1BC62C650();
  objc_msgSend(v4, sel_setTitle_forState_, v6, 0);

  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, a1, sel_learnMoreTapped_, 64);
  return v4;
}

char *sub_1BC3601E0(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  id v18;
  char *v19;
  id v20;
  void *v21;
  void (*v22)(char *, _QWORD, uint64_t);
  uint64_t v23;
  char *result;
  char *v25;
  unsigned int v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  char *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  char *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  char *v52;
  id v53;
  id v54;

  v7 = sub_1BC62B828();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v52 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v51 - v11;
  v13 = qword_1EF4298D8;
  v14 = qword_1ED6A31F0;
  v15 = v3;
  if (v14 != -1)
    swift_once();
  *(_QWORD *)&v3[v13] = qword_1ED6A4498;
  *(_QWORD *)&v15[qword_1EF4298E0] = 0;
  *(_QWORD *)&v15[qword_1EF4298E8] = 0;
  *(_QWORD *)&v15[qword_1EF4298F0] = 0;
  *(_QWORD *)&v15[qword_1EF4298F8] = 0;
  *(_QWORD *)&v15[qword_1EF4298C0] = a1;
  *(_QWORD *)&v15[qword_1EF4298C8] = a2;
  *(_QWORD *)&v15[qword_1EF4298D0] = a3;
  swift_retain();
  v16 = a1;
  v53 = a2;
  swift_bridgeObjectRetain();

  v54 = v16;
  v17 = objc_msgSend(*(id *)&v16[OBJC_IVAR___WDClinicalAccountOnboardingSession_profile], sel_healthStore);
  v18 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionConfirmationViewController(0));
  type metadata accessor for ClinicalSharingOnboardingSelectedDataTypesDataSource();
  swift_allocObject();
  v19 = (char *)v18;
  v20 = v17;
  *(_QWORD *)&v19[qword_1EF429950] = sub_1BC3E28DC(v20, a3);

  swift_retain();
  v21 = (void *)sub_1BC62B7D4();

  v22 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 104);
  v23 = v7;
  v22(v12, *MEMORY[0x1E0D2BA10], v7);
  result = (char *)objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v25 = result;
    v26 = objc_msgSend(result, sel_isiPad);

    if (v26)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      v22(v12, *MEMORY[0x1E0D2BA08], v7);
    }
    v27 = qword_1EF428338;
    v28 = v21;
    v29 = v12;
    if (v27 != -1)
      swift_once();
    v30 = qword_1EF428340;
    swift_bridgeObjectRetain();
    if (v30 != -1)
      swift_once();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v52, v12, v23);
    swift_bridgeObjectRetain();
    v31 = (char *)(id)sub_1BC62B81C();
    sub_1BC36089C();
    v32 = sub_1BC35FEB8();
    v51 = v28;
    v52 = v29;
    v33 = v32;
    v34 = v53;
    v35 = objc_msgSend(v53, sel_title);
    v36 = sub_1BC62C680();
    v38 = v37;

    swift_beginAccess();
    swift_beginAccess();
    swift_retain();
    v39 = sub_1BC618BBC(v36, v38, 60.0);
    swift_endAccess();
    swift_endAccess();
    swift_release();
    v40 = objc_msgSend(v39, sel_scaledToTargetSize_, 60.0, 60.0);
    swift_bridgeObjectRelease();

    objc_msgSend(v33, sel_setImage_, v40);
    v41 = objc_msgSend(*(id *)(*(_QWORD *)&v31[qword_1EF4298C0] + OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_healthStore);
    v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6768]), sel_initWithHealthStore_, v41);

    v43 = objc_msgSend(objc_allocWithZone((Class)WDClinicalSourcesDataProvider), sel_initWithHealthRecordsStore_, v42);
    v44 = sub_1BC35FEB8();
    objc_msgSend(v44, sel_fetchBrandable_dataProvider_, v34, v43);

    v45 = qword_1EF428350;
    v46 = v31;
    if (v45 != -1)
      swift_once();
    sub_1BC62B768();

    v47 = objc_msgSend(v46, sel_buttonTray);
    v48 = sub_1BC35FF78();
    objc_msgSend(v47, sel_addButton_, v48);

    v49 = objc_msgSend(v46, sel_headerView);
    v50 = sub_1BC36006C();
    objc_msgSend(v49, sel_addAccessoryButton_, v50);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v52, v23);
    return v46;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC3607EC(void *a1)
{
  char *v1;
  id v2;
  objc_super v3;

  v3.receiver = a1;
  v3.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionViewController(0);
  v1 = (char *)v3.receiver;
  objc_msgSendSuper2(&v3, sel_viewDidLoad);
  if (*(_QWORD *)(*(_QWORD *)&v1[qword_1EF4298C0] + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) == 2)
  {
    v2 = objc_msgSend(v1, sel_navigationItem, v3.receiver, v3.super_class);
    objc_msgSend(v2, sel_setRightBarButtonItem_, 0);

  }
  sub_1BC360B34();

}

void sub_1BC36089C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v1 = objc_msgSend(v0, sel_headerView);
  v2 = objc_msgSend(v1, sel_customIconContainerView);

  if (v2)
  {
    objc_msgSend(v2, sel_setClipsToBounds_, 0);
    v3 = sub_1BC35FEB8();
    objc_msgSend(v2, sel_addSubview_, v3);

    v4 = sub_1BC35FEB8();
    v5 = objc_msgSend(v4, sel_widthAnchor);

    if (qword_1EF4283A8 != -1)
      swift_once();
    v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, *(double *)&qword_1EF42A0E0);

    objc_msgSend(v6, sel_setActive_, 1);
    v7 = sub_1BC35FEB8();
    v8 = objc_msgSend(v7, sel_heightAnchor);

    v9 = objc_msgSend(v8, sel_constraintEqualToConstant_, *(double *)&qword_1EF42A0E0);
    objc_msgSend(v9, sel_setActive_, 1);

    v10 = sub_1BC35FEB8();
    v11 = objc_msgSend(v10, sel_centerXAnchor);

    v12 = objc_msgSend(v2, sel_centerXAnchor);
    v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

    objc_msgSend(v13, sel_setActive_, 1);
    v14 = sub_1BC35FEB8();
    v15 = objc_msgSend(v14, sel_centerYAnchor);

    v16 = objc_msgSend(v2, sel_centerYAnchor);
    v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

    objc_msgSend(v17, sel_setActive_, 1);
  }
}

void sub_1BC360B34()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  __int128 v29;

  sub_1BC359F44();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v1 + 32) = sub_1BC62C680();
  *(_QWORD *)(v1 + 40) = v2;
  strcpy((char *)(v1 + 48), "ChosenToShare");
  *(_WORD *)(v1 + 62) = -4864;
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v4)
  {
    v5 = sub_1BC62C680();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = objc_msgSend(v0, sel_navigationItem, 2, 4);
  v9 = objc_msgSend(v8, sel_leftBarButtonItem);

  if (v9)
  {
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v29;
    if (!v7)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    *(_QWORD *)(v10 + 32) = v5;
    *(_QWORD *)(v10 + 40) = v7;
    *(_QWORD *)(v10 + 48) = 1801675074;
    *(_QWORD *)(v10 + 56) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v12 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v12);
  }
  v13 = objc_msgSend(v0, sel_navigationItem);
  v14 = objc_msgSend(v13, sel_rightBarButtonItem);

  if (!v14)
  {
LABEL_10:
    v18 = sub_1BC36006C();
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v29;
    if (v7)
    {
      *(_QWORD *)(v19 + 32) = v5;
      *(_QWORD *)(v19 + 40) = v7;
      *(_QWORD *)(v19 + 48) = 0x726F4D6E7261654CLL;
      *(_QWORD *)(v19 + 56) = 0xE900000000000065;
      swift_bridgeObjectRetain();
      v20 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v21 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v18, sel_setAccessibilityIdentifier_, v21);
      v22 = sub_1BC35FF78();
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v29;
      *(_QWORD *)(v23 + 32) = v5;
      *(_QWORD *)(v23 + 40) = v7;
      *(_QWORD *)(v23 + 48) = 0x72616853746E6F44;
      *(_QWORD *)(v23 + 56) = 0xE900000000000065;
      swift_bridgeObjectRetain();
      v24 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v25 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v22, sel_setAccessibilityIdentifier_, v25);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = v29;
      *(_QWORD *)(v26 + 32) = v5;
      *(_QWORD *)(v26 + 40) = v7;
      *(_QWORD *)(v26 + 48) = 0x6572616853;
      *(_QWORD *)(v26 + 56) = 0xE500000000000000;
      v27 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v28 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (v28)
      {
        sub_1BC62C680();

        sub_1BC62B75C();
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v29;
  if (v7)
  {
    *(_QWORD *)(v15 + 32) = v5;
    *(_QWORD *)(v15 + 40) = v7;
    *(_QWORD *)(v15 + 48) = 0x6C65636E6143;
    *(_QWORD *)(v15 + 56) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    v16 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v17 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v17);
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
}

void sub_1BC360F80()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v14[6];

  v1 = *(void **)&v0[qword_1EF4298C0];
  v2 = *(void **)&v0[qword_1EF4298C8];
  v3 = *(_QWORD *)&v0[qword_1EF4298D0];
  v4 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingSharingHealthDataViewController());
  v5 = v1;
  v6 = v2;
  swift_bridgeObjectRetain();
  v7 = sub_1BC561CDC(v5, v6, v3);
  v8 = objc_msgSend(v0, sel_navigationController);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_pushViewController_animated_, v7, 1);

  }
  v10 = *(void **)&v5[OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient];
  v11 = (void *)sub_1BC62C650();
  sub_1BC408EF4(*(_QWORD *)&v5[OBJC_IVAR___WDClinicalAccountOnboardingSession_context]);
  v12 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v14[4] = nullsub_1;
  v14[5] = 0;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC3EFECC;
  v14[3] = &block_descriptor_1;
  v13 = _Block_copy(v14);
  objc_msgSend(v10, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v11, v12, v13);
  _Block_release(v13);

}

uint64_t sub_1BC361118(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC361704(a1, a2, a3, (void (*)(uint64_t))sub_1BC360F80);
}

void sub_1BC361124()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v12[6];

  if (qword_1EF428360 != -1)
    swift_once();
  v1 = qword_1EF428368;
  swift_bridgeObjectRetain();
  if (v1 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v2, v3, 1);

  if (qword_1EF428370 != -1)
    swift_once();
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v12[4] = sub_1BC361D64;
  v12[5] = v5;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BC39B5A0;
  v12[3] = &block_descriptor_3;
  v7 = _Block_copy(v12);
  swift_release();
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_actionWithTitle_style_handler_, v6, 2, v7);
  _Block_release(v7);
  swift_release();

  if (qword_1EF428378 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_actionWithTitle_style_handler_, v10, 0, 0);

  objc_msgSend(v4, sel_addAction_, v9);
  objc_msgSend(v4, sel_addAction_, v11);
  objc_msgSend(v0, sel_presentViewController_animated_completion_, v4, 1, 0);

}

void sub_1BC361418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x1BCCF37A4](v2);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

uint64_t sub_1BC361478(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC361704(a1, a2, a3, (void (*)(uint64_t))sub_1BC361124);
}

void sub_1BC361484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1BC62BB34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)sub_1BC62C650();
  v15 = objc_msgSend((id)objc_opt_self(), sel_presenterForPrivacySplashWithIdentifier_, v7);

  if (v15)
  {
    objc_msgSend(v15, sel_setPresentingViewController_, v1);
    objc_msgSend(v15, sel_present);

  }
  else
  {
    sub_1BC62BAF8();
    v8 = sub_1BC62BB28();
    v9 = sub_1BC62CAC4();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v15 = (id)swift_slowAlloc();
      v16 = v15;
      *(_DWORD *)v10 = 136446466;
      v17 = ObjectType;
      swift_getMetatypeMetadata();
      v11 = sub_1BC62C6E0();
      v17 = sub_1BC4991F0(v11, v12, (uint64_t *)&v16);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      v17 = sub_1BC4991F0(0xD00000000000001ELL, 0x80000001BC652260, (uint64_t *)&v16);
      sub_1BC62CFF8();
      _os_log_impl(&dword_1BC30A000, v8, v9, "[%{public}s]: Could not show privacy splash for %{public}s", (uint8_t *)v10, 0x16u);
      v13 = v15;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v13, -1, -1);
      MEMORY[0x1BCCF36A8](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1BC3616F8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC361704(a1, a2, a3, (void (*)(uint64_t))sub_1BC361484);
}

uint64_t sub_1BC361704(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v6;
  uint64_t v7;
  uint64_t v9;

  swift_unknownObjectRetain();
  v6 = a1;
  sub_1BC62D088();
  v7 = swift_unknownObjectRelease();
  a4(v7);

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v9);
}

void sub_1BC361770()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC36179C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

}

id sub_1BC361828()
{
  return sub_1BC361C8C(type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionViewController);
}

void sub_1BC361834(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

}

uint64_t sub_1BC3618CC()
{
  return type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionViewController(0);
}

uint64_t type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionConfirmationViewController(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF429958);
}

uint64_t sub_1BC3618E8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC36191C()
{
  return swift_initClassMetadata2();
}

void sub_1BC361968()
{
  sub_1BC62D394();
  __break(1u);
}

void sub_1BC3619C0()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionConfirmationViewController(0);
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    v4 = objc_msgSend(v0, sel_collectionView);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_setPreservesSuperviewLayoutMargins_, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC361A9C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC3619C0();

}

void sub_1BC361AD0()
{
  void *v0;
  void *v1;
  void (*v2)(void);
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = v0;
  sub_1BC62B7EC();
  v2 = (void (*)(void))sub_1BC62B7F8();
  v2();
  v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  sub_1BC62B714();
  sub_1BC62CB60();

  v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v6 = v5;
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  sub_1BC361CE0();
  sub_1BC62CB48();

  v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = v7;
  sub_1BC62AEEC();
  sub_1BC62CB48();

  v9 = objc_msgSend(v1, sel_collectionView);
  if (v9)
  {
    sub_1BC62B408();
    sub_1BC62CB60();

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1BC361C14()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC361C40(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC361C70()
{
  return swift_release();
}

id sub_1BC361C80()
{
  return sub_1BC361C8C(type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionConfirmationViewController);
}

id sub_1BC361C8C(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1BC361CC4()
{
  return swift_release();
}

uint64_t sub_1BC361CD4()
{
  return type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionConfirmationViewController(0);
}

unint64_t sub_1BC361CE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4299A8;
  if (!qword_1EF4299A8)
  {
    v1 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryCell, v1);
    atomic_store(result, (unint64_t *)&qword_1EF4299A8);
  }
  return result;
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1BC361D40()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC361D64(uint64_t a1)
{
  uint64_t v1;

  sub_1BC361418(a1, v1);
}

uint64_t sub_1BC361DCC()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t aBlock[7];
  objc_super v57;

  v1 = v0;
  v57.receiver = v0;
  v57.super_class = (Class)type metadata accessor for SignedClinicalDataMultiRecordViewController();
  objc_msgSendSuper2(&v57, sel_viewDidLoad);
  if (qword_1EF428588 != -1)
    swift_once();
  v2 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v3 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v3, 0xE000000000000000);

  v4 = objc_msgSend(v0, sel_tableView);
  if (!v4)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v5 = v4;
  objc_msgSend(v4, sel_setAllowsSelection_, 0);

  v6 = objc_msgSend(v0, sel_tableView);
  if (!v6)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v7 = v6;
  type metadata accessor for RecordPrimaryTitleCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)sub_1BC62C650();
  objc_msgSend(v7, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v9);

  v10 = objc_msgSend(v1, sel_tableView);
  if (!v10)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v11 = v10;
  type metadata accessor for RecordDetailItemCell();
  v12 = swift_getObjCClassFromMetadata();
  v13 = (void *)sub_1BC62C650();
  objc_msgSend(v11, sel_registerClass_forCellReuseIdentifier_, v12, v13);

  v14 = objc_msgSend(v1, sel_tableView);
  if (v14)
  {
    v15 = v14;
    type metadata accessor for RecordReferenceRangeCell();
    v16 = swift_getObjCClassFromMetadata();
    v17 = (void *)sub_1BC62C650();
    objc_msgSend(v15, sel_registerClass_forCellReuseIdentifier_, v16, v17);

    v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_medicalRecords];
    if ((v18 & 0x8000000000000000) != 0 || (v18 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n();
      v19 = (uint64_t)sub_1BC3D6838(v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
    }
    aBlock[0] = v19;
    sub_1BC363320(aBlock);
    swift_bridgeObjectRelease();
    v20 = aBlock[0];
    if (aBlock[0] < 0 || (aBlock[0] & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v21 = sub_1BC62D3B8();
      swift_release();
      if (v21)
        goto LABEL_13;
    }
    else
    {
      v21 = *(_QWORD *)(aBlock[0] + 16);
      if (v21)
      {
LABEL_13:
        if (v21 >= 1)
        {
          v22 = 0;
          v52 = v20 & 0xC000000000000001;
          v53 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_profile];
          v50 = v20;
          v51 = v1;
          v49 = v21;
          do
          {
            if (v52)
              v23 = (id)MEMORY[0x1BCCF24CC](v22, v20);
            else
              v23 = *(id *)(v20 + 8 * v22 + 32);
            v24 = v23;
            v54 = swift_allocObject();
            *(_QWORD *)(v54 + 16) = MEMORY[0x1E0DEE9D8];
            v25 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
            v26 = objc_msgSend(v24, sel_meaningfulDateTitle);
            v27 = sub_1BC62C680();
            v29 = v28;

            objc_msgSend(v25, sel_setDisplayItemType_, 4);
            v30 = objc_msgSend(v24, sel_preferredDisplayName);
            objc_msgSend(v25, sel_setTitle_, v30);

            v31 = HIBYTE(v29) & 0xF;
            if ((v29 & 0x2000000000000000) == 0)
              v31 = v27 & 0xFFFFFFFFFFFFLL;
            v55 = v24;
            if (v31)
            {
              if (qword_1ED6A4888 != -1)
                swift_once();
              v32 = (id)qword_1ED6A5528;
              swift_bridgeObjectRetain();
              sub_1BC62A4A8();
              swift_bridgeObjectRelease();

              sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
              v33 = swift_allocObject();
              *(_OWORD *)(v33 + 16) = xmmword_1BC6395A0;
              v34 = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
              v35 = sub_1BC3644C0();
              *(_QWORD *)(v33 + 64) = v35;
              *(_QWORD *)(v33 + 32) = v27;
              *(_QWORD *)(v33 + 40) = v29;
              v36 = objc_msgSend(v24, sel_meaningfulDateString, 0xE000000000000000);
              v37 = sub_1BC62C680();
              v39 = v38;

              *(_QWORD *)(v33 + 96) = v34;
              *(_QWORD *)(v33 + 104) = v35;
              *(_QWORD *)(v33 + 72) = v37;
              *(_QWORD *)(v33 + 80) = v39;
              sub_1BC62C6B0();
              swift_bridgeObjectRelease();
              v20 = v50;
              v1 = v51;
              v21 = v49;
            }
            else
            {
              swift_bridgeObjectRelease();
              v40 = objc_msgSend(v24, sel_meaningfulDateString);
              sub_1BC62C680();

            }
            v41 = (void *)sub_1BC62C650();
            swift_bridgeObjectRelease();
            objc_msgSend(v25, sel_setSubtitle_, v41);

            swift_beginAccess();
            v42 = v25;
            MEMORY[0x1BCCF1B30]();
            if (*(_QWORD *)((*(_QWORD *)(v54 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v54 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
              sub_1BC62C8B4();
            ++v22;
            sub_1BC62C8D8();
            sub_1BC62C890();
            swift_endAccess();
            v43 = objc_msgSend(v53, sel_healthRecordsStore);
            v44 = objc_msgSend(v53, sel_conceptStore);
            v45 = swift_allocObject();
            *(_QWORD *)(v45 + 16) = v54;
            *(_QWORD *)(v45 + 24) = v1;
            aBlock[4] = (uint64_t)sub_1BC364530;
            aBlock[5] = v45;
            aBlock[0] = MEMORY[0x1E0C809B0];
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_1BC38A4C0;
            aBlock[3] = (uint64_t)&block_descriptor_2;
            v46 = _Block_copy(aBlock);
            swift_retain();
            v47 = v1;
            swift_release();
            objc_msgSend(v55, sel_fetchDetailItemsWithHealthRecordsStore_conceptStore_completion_, v43, v44, v46);
            _Block_release(v46);

            swift_release();
          }
          while (v21 != v22);
          return swift_release();
        }
        __break(1u);
        goto LABEL_33;
      }
    }
    return swift_release();
  }
LABEL_36:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

void sub_1BC362574(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  void *v13;
  id v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  _QWORD aBlock[6];

  v4 = sub_1BC62C47C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62C4AC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = swift_bridgeObjectRetain();
  sub_1BC3BB208(v12);
  swift_endAccess();
  swift_beginAccess();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_displayItemGroupWithDisplayItems_, v13);

  if (v14)
  {
    v15 = &a3[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_displayGroups];
    v16 = swift_beginAccess();
    MEMORY[0x1BCCF1B30](v16);
    if (*(_QWORD *)((*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    swift_endAccess();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v17 = (void *)sub_1BC62CC74();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a3;
    aBlock[4] = sub_1BC364574;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_9;
    v19 = _Block_copy(aBlock);
    v20 = a3;
    swift_release();
    sub_1BC62C494();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1BC36457C();
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35811C();
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v11, v7, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC362884(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, sel_tableView);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_reloadData);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC362A98(void *a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  void **v37;
  void *v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  objc_class *ObjCClassFromMetadata;
  NSString *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[3];
  uint64_t v54;

  ObjectType = swift_getObjectType();
  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62A964();
  v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_displayGroups);
  v10 = swift_beginAccess();
  v11 = *v9;
  if ((v11 & 0xC000000000000001) == 0)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = *(id *)(v11 + 8 * v8 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  v12 = (id)MEMORY[0x1BCCF24CC](v8, v11);
  swift_bridgeObjectRelease();
LABEL_5:
  v13 = objc_msgSend(v12, sel_displayItems);

  if (!v13)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  v11 = sub_1BC62C878();

  v10 = sub_1BC62A94C();
  if ((v11 & 0xC000000000000001) != 0)
  {
LABEL_28:
    v14 = (id)MEMORY[0x1BCCF24CC](v10, v11);
    goto LABEL_10;
  }
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v10 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v14 = *(id *)(v11 + 8 * v10 + 32);
LABEL_10:
  v15 = v14;
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v15, sel_displayItemType);
  if (v16 == (id)15)
  {
    v25 = (void *)sub_1BC62C650();
    v26 = (void *)sub_1BC62A928();
    v27 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v25, v26);

    type metadata accessor for RecordDetailItemCell();
    v28 = swift_dynamicCastClassUnconditional();
    v29 = *(id *)(v28 + OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_titleLabel);
    v30 = objc_msgSend(v15, sel_title);
    objc_msgSend(v29, sel_setText_, v30);

    v23 = *(id *)(v28 + OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_bodyLabel);
    v24 = objc_msgSend(v15, sel_subtitle);
    goto LABEL_15;
  }
  if (v16 == (id)6)
  {
    v32 = (void *)sub_1BC62C650();
    v33 = (void *)sub_1BC62A928();
    v34 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v32, v33);

    type metadata accessor for RecordReferenceRangeCell();
    v35 = swift_dynamicCastClassUnconditional();
    v36 = objc_msgSend(v15, sel_chartValueWithRange);
    v37 = (void **)(v35 + OBJC_IVAR____TtC15HealthRecordsUI24RecordReferenceRangeCell_valueInRange);
    swift_beginAccess();
    v38 = *v37;
    *v37 = v36;
    v39 = v36;

    sub_1BC615B5C();
    v31 = v15;
    v15 = v39;
    goto LABEL_17;
  }
  if (v16 == (id)4)
  {
    v17 = (void *)sub_1BC62C650();
    v18 = (void *)sub_1BC62A928();
    v19 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v17, v18);

    type metadata accessor for RecordPrimaryTitleCell();
    v20 = swift_dynamicCastClassUnconditional();
    v21 = *(id *)(v20 + OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordTitleLabel);
    v22 = objc_msgSend(v15, sel_title);
    objc_msgSend(v21, sel_setText_, v22);

    v23 = *(id *)(v20 + OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordDateLabel);
    v24 = objc_msgSend(v15, sel_subtitle);
LABEL_15:
    v31 = v24;
    objc_msgSend(v23, sel_setText_, v31);

LABEL_17:
LABEL_24:

    return;
  }
  sub_1BC62BAF8();
  v15 = v15;
  v40 = sub_1BC62BB28();
  v41 = sub_1BC62CAC4();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    v53[0] = v50;
    *(_DWORD *)v42 = 136315394;
    v51 = v4;
    v43 = sub_1BC62D718();
    v54 = sub_1BC4991F0(v43, v44, v53);
    v52 = ObjectType;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2048;
    v45 = objc_msgSend(v15, sel_displayItemType);

    v54 = (uint64_t)v45;
    sub_1BC62CFF8();

    _os_log_impl(&dword_1BC30A000, v40, v41, "[%s]: displayItemType %ld not supported", (uint8_t *)v42, 0x16u);
    v46 = v50;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v46, -1, -1);
    MEMORY[0x1BCCF36A8](v42, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v51);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v48 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v48)
  {
    sub_1BC62C680();
    v48 = (NSString *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  v49 = (id)HKErrorTableViewCell();

  if (v49)
    goto LABEL_24;
LABEL_32:
  __break(1u);
}

id sub_1BC363288()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataMultiRecordViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SignedClinicalDataMultiRecordViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BC363320(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC505EE8();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BC363398(v6);
  return sub_1BC62D274();
}

void sub_1BC363398(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  id v22;
  id v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  id *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  id v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  char *v56;
  id v57;
  id v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  void *v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t);
  void **v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;

  v139 = sub_1BC62A760();
  v136 = *(_QWORD *)(v139 - 8);
  v2 = MEMORY[0x1E0C80A78](v139);
  v138 = (char *)&v124 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v137 = (char *)&v124 - v4;
  v5 = a1[1];
  v6 = sub_1BC62D520();
  if (v6 >= v5)
  {
    if (v5 < 0)
      goto LABEL_135;
    if (v5)
      sub_1BC363D58(0, v5, 1, a1);
    return;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_143;
  v128 = v6;
  v125 = a1;
  if (v5 < 2)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v142 = MEMORY[0x1E0DEE9D8];
    v134 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_102:
      v116 = v135;
      if (v14 >= 2)
      {
        v117 = *v125;
        do
        {
          v118 = v14 - 2;
          if (v14 < 2)
            goto LABEL_130;
          if (!v117)
            goto LABEL_142;
          v119 = v10;
          v120 = *(_QWORD *)&v10[16 * v118 + 32];
          v121 = *(_QWORD *)&v10[16 * v14 + 24];
          sub_1BC363F64((void **)(v117 + 8 * v120), (id *)(v117 + 8 * *(_QWORD *)&v10[16 * v14 + 16]), (id *)(v117 + 8 * v121), v134);
          if (v116)
            break;
          if (v121 < v120)
            goto LABEL_131;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v119 = sub_1BC504414((uint64_t)v119);
          if (v118 >= *((_QWORD *)v119 + 2))
            goto LABEL_132;
          v122 = &v119[16 * v118 + 32];
          *(_QWORD *)v122 = v120;
          *((_QWORD *)v122 + 1) = v121;
          v123 = *((_QWORD *)v119 + 2);
          if (v14 > v123)
            goto LABEL_133;
          memmove(&v119[16 * v14 + 16], &v119[16 * v14 + 32], 16 * (v123 - v14));
          v10 = v119;
          *((_QWORD *)v119 + 2) = v123 - 1;
          v14 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v142 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BC62C890();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v8 = v7 >> 1;
    sub_1BC34B6A0(0, &qword_1ED6A52D8);
    v9 = sub_1BC62C8CC();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v134 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v142 = v9;
  }
  v11 = 0;
  v12 = *a1;
  v13 = *a1 + 16;
  v126 = *a1 - 8;
  v127 = v13;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v132 = v5;
  v140 = v12;
  while (1)
  {
    v15 = v11++;
    v131 = v15;
    if (v11 < v5)
    {
      v129 = v10;
      v16 = *(void **)(v12 + 8 * v15);
      v17 = *(id *)(v12 + 8 * v11);
      v18 = v16;
      v19 = objc_msgSend(v17, sel_sortDate);
      v20 = objc_msgSend(v19, sel_date);

      v21 = v137;
      sub_1BC62A724();

      v22 = objc_msgSend(v18, sel_sortDate);
      v23 = objc_msgSend(v22, sel_date);

      v24 = v138;
      sub_1BC62A724();

      v5 = v132;
      LODWORD(v141) = sub_1BC62A70C();
      v25 = *(void (**)(char *, uint64_t))(v136 + 8);
      v26 = v24;
      v27 = v139;
      v25(v26, v139);
      v133 = v25;
      v25(v21, v27);

      v11 = v15 + 2;
      if (v15 + 2 < v5)
      {
        v28 = (id *)(v127 + 8 * v15);
        while (1)
        {
          v29 = *(v28 - 1);
          v30 = *v28;
          v31 = v29;
          v32 = objc_msgSend(v30, sel_sortDate);
          v33 = objc_msgSend(v32, sel_date);

          v34 = v137;
          sub_1BC62A724();

          v35 = objc_msgSend(v31, sel_sortDate);
          v36 = objc_msgSend(v35, sel_date);

          v37 = v138;
          sub_1BC62A724();

          LODWORD(v35) = sub_1BC62A70C();
          v38 = v37;
          v39 = v139;
          v40 = v133;
          v133(v38, v139);
          v40(v34, v39);

          if (((v141 ^ v35) & 1) != 0)
            break;
          ++v11;
          ++v28;
          v5 = v132;
          if (v132 == v11)
          {
            v11 = v132;
            goto LABEL_22;
          }
        }
        v5 = v132;
LABEL_22:
        v15 = v131;
      }
      v10 = v129;
      v12 = v140;
      if ((v141 & 1) != 0)
      {
        if (v11 < v15)
          goto LABEL_136;
        if (v15 < v11)
        {
          v41 = (uint64_t *)(v126 + 8 * v11);
          v42 = v11;
          v43 = v15;
          v44 = (uint64_t *)(v140 + 8 * v15);
          do
          {
            if (v43 != --v42)
            {
              if (!v12)
                goto LABEL_141;
              v45 = *v44;
              *v44 = *v41;
              *v41 = v45;
            }
            ++v43;
            --v41;
            ++v44;
          }
          while (v43 < v42);
        }
      }
    }
    if (v11 < v5)
    {
      if (__OFSUB__(v11, v15))
        goto LABEL_134;
      if (v11 - v15 < v128)
        break;
    }
LABEL_50:
    if (v11 < v15)
      goto LABEL_129;
    v63 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v10 = v63;
    else
      v10 = sub_1BC503AB4(0, *((_QWORD *)v63 + 2) + 1, 1, v63);
    v65 = *((_QWORD *)v10 + 2);
    v64 = *((_QWORD *)v10 + 3);
    v14 = v65 + 1;
    v12 = v140;
    if (v65 >= v64 >> 1)
    {
      v115 = sub_1BC503AB4((char *)(v64 > 1), v65 + 1, 1, v10);
      v12 = v140;
      v10 = v115;
    }
    *((_QWORD *)v10 + 2) = v14;
    v66 = &v10[16 * v65 + 32];
    *(_QWORD *)v66 = v15;
    *((_QWORD *)v66 + 1) = v11;
    if (v65)
    {
      v67 = v10 + 32;
      while (1)
      {
        v68 = v14 - 1;
        if (v14 >= 4)
        {
          v73 = &v67[16 * v14];
          v74 = *((_QWORD *)v73 - 8);
          v75 = *((_QWORD *)v73 - 7);
          v79 = __OFSUB__(v75, v74);
          v76 = v75 - v74;
          if (v79)
            goto LABEL_118;
          v78 = *((_QWORD *)v73 - 6);
          v77 = *((_QWORD *)v73 - 5);
          v79 = __OFSUB__(v77, v78);
          v71 = v77 - v78;
          v72 = v79;
          if (v79)
            goto LABEL_119;
          v80 = v14 - 2;
          v81 = &v67[16 * v14 - 32];
          v83 = *(_QWORD *)v81;
          v82 = *((_QWORD *)v81 + 1);
          v79 = __OFSUB__(v82, v83);
          v84 = v82 - v83;
          if (v79)
            goto LABEL_121;
          v79 = __OFADD__(v71, v84);
          v85 = v71 + v84;
          if (v79)
            goto LABEL_124;
          if (v85 >= v76)
          {
            v103 = &v67[16 * v68];
            v105 = *(_QWORD *)v103;
            v104 = *((_QWORD *)v103 + 1);
            v79 = __OFSUB__(v104, v105);
            v106 = v104 - v105;
            if (v79)
              goto LABEL_128;
            v96 = v71 < v106;
            goto LABEL_88;
          }
        }
        else
        {
          if (v14 != 3)
          {
            v97 = *((_QWORD *)v10 + 4);
            v98 = *((_QWORD *)v10 + 5);
            v79 = __OFSUB__(v98, v97);
            v90 = v98 - v97;
            v91 = v79;
            goto LABEL_82;
          }
          v70 = *((_QWORD *)v10 + 4);
          v69 = *((_QWORD *)v10 + 5);
          v79 = __OFSUB__(v69, v70);
          v71 = v69 - v70;
          v72 = v79;
        }
        if ((v72 & 1) != 0)
          goto LABEL_120;
        v80 = v14 - 2;
        v86 = &v67[16 * v14 - 32];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v89 = __OFSUB__(v87, v88);
        v90 = v87 - v88;
        v91 = v89;
        if (v89)
          goto LABEL_123;
        v92 = &v67[16 * v68];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v79 = __OFSUB__(v93, v94);
        v95 = v93 - v94;
        if (v79)
          goto LABEL_126;
        if (__OFADD__(v90, v95))
          goto LABEL_127;
        if (v90 + v95 >= v71)
        {
          v96 = v71 < v95;
LABEL_88:
          if (v96)
            v68 = v80;
          goto LABEL_90;
        }
LABEL_82:
        if ((v91 & 1) != 0)
          goto LABEL_122;
        v99 = &v67[16 * v68];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v79 = __OFSUB__(v100, v101);
        v102 = v100 - v101;
        if (v79)
          goto LABEL_125;
        if (v102 < v90)
          goto LABEL_14;
LABEL_90:
        v107 = v68 - 1;
        if (v68 - 1 >= v14)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v12)
          goto LABEL_140;
        v108 = v10;
        v109 = &v67[16 * v107];
        v110 = *(_QWORD *)v109;
        v111 = &v67[16 * v68];
        v112 = *((_QWORD *)v111 + 1);
        v113 = v135;
        sub_1BC363F64((void **)(v12 + 8 * *(_QWORD *)v109), (id *)(v12 + 8 * *(_QWORD *)v111), (id *)(v12 + 8 * v112), v134);
        v135 = v113;
        if (v113)
          goto LABEL_113;
        if (v112 < v110)
          goto LABEL_115;
        if (v68 > *((_QWORD *)v108 + 2))
          goto LABEL_116;
        *(_QWORD *)v109 = v110;
        *(_QWORD *)&v67[16 * v107 + 8] = v112;
        v114 = *((_QWORD *)v108 + 2);
        if (v68 >= v114)
          goto LABEL_117;
        v14 = v114 - 1;
        memmove(&v67[16 * v68], v111 + 16, 16 * (v114 - 1 - v68));
        v10 = v108;
        *((_QWORD *)v108 + 2) = v114 - 1;
        v12 = v140;
        if (v114 <= 2)
          goto LABEL_14;
      }
    }
    v14 = 1;
LABEL_14:
    v5 = v132;
    if (v11 >= v132)
      goto LABEL_102;
  }
  if (__OFADD__(v15, v128))
    goto LABEL_137;
  if (v15 + v128 >= v5)
    v46 = v5;
  else
    v46 = v15 + v128;
  if (v46 >= v15)
  {
    if (v11 != v46)
    {
      v129 = v10;
      v130 = v46;
      v47 = (void (*)(char *, uint64_t))(v126 + 8 * v11);
      do
      {
        v48 = *(void **)(v12 + 8 * v11);
        v49 = v15;
        v133 = v47;
        while (1)
        {
          v50 = v11;
          v51 = *(void **)v47;
          v52 = v48;
          v141 = v52;
          v53 = v51;
          v54 = objc_msgSend(v52, sel_sortDate);
          v55 = objc_msgSend(v54, sel_date);

          v56 = v137;
          sub_1BC62A724();

          v57 = objc_msgSend(v53, sel_sortDate);
          v58 = objc_msgSend(v57, sel_date);

          v59 = v138;
          sub_1BC62A724();

          LOBYTE(v57) = sub_1BC62A70C();
          v60 = *(void (**)(char *, uint64_t))(v136 + 8);
          v61 = v139;
          v60(v59, v139);
          v60(v56, v61);

          if ((v57 & 1) == 0)
            break;
          v12 = v140;
          if (!v140)
            goto LABEL_139;
          v11 = v50;
          v62 = *(_QWORD *)v47;
          v48 = (void *)*((_QWORD *)v47 + 1);
          *(_QWORD *)v47 = v48;
          *((_QWORD *)v47 + 1) = v62;
          v47 = (void (*)(char *, uint64_t))((char *)v47 - 8);
          if (v50 == ++v49)
            goto LABEL_43;
        }
        v12 = v140;
        v11 = v50;
LABEL_43:
        ++v11;
        v47 = (void (*)(char *, uint64_t))((char *)v133 + 8);
        v15 = v131;
      }
      while (v11 != v130);
      v11 = v130;
      v10 = v129;
    }
    goto LABEL_50;
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  sub_1BC62D388();
  __break(1u);
}

void sub_1BC363D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v30 = a1;
  v7 = sub_1BC62A760();
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v32 = (char *)&v28 - v10;
  v29 = a2;
  if (a3 != a2)
  {
    v36 = *a4;
    v11 = v36 + 8 * a3 - 8;
    v12 = v32;
LABEL_5:
    v13 = *(void **)(v36 + 8 * a3);
    v14 = v30;
    v31 = v11;
    v37 = a3;
    while (1)
    {
      v15 = *(void **)v11;
      v16 = v13;
      v17 = v15;
      v18 = objc_msgSend(v16, sel_sortDate);
      v19 = objc_msgSend(v18, sel_date);

      sub_1BC62A724();
      v20 = objc_msgSend(v17, sel_sortDate);
      v21 = objc_msgSend(v20, sel_date);

      v22 = v33;
      sub_1BC62A724();

      LOBYTE(v20) = sub_1BC62A70C();
      v23 = *(void (**)(char *, uint64_t))(v34 + 8);
      v24 = v22;
      v25 = v35;
      v23(v24, v35);
      v23(v12, v25);
      v26 = v37;

      if ((v20 & 1) == 0)
      {
LABEL_4:
        a3 = v26 + 1;
        v11 = v31 + 8;
        if (a3 == v29)
          return;
        goto LABEL_5;
      }
      if (!v36)
        break;
      v27 = *(void **)v11;
      v13 = *(void **)(v11 + 8);
      *(_QWORD *)v11 = v13;
      *(_QWORD *)(v11 + 8) = v27;
      v11 -= 8;
      if (v26 == ++v14)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BC363F64(void **a1, id *a2, id *a3, void **a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  id *v28;
  void **v29;
  void **v30;
  id *v31;
  id *v32;
  unint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  id v42;
  id v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  void **v48;
  uint64_t result;
  uint64_t v50;
  void **v51;
  id v52;
  void **v53;
  id *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void **v59;
  void **v60;
  void **v61;
  id *v62;

  v8 = sub_1BC62A760();
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v56 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v54 = a3;
  v55 = (char *)&v50 - v11;
  v12 = (char *)a2 - (char *)a1;
  v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v13 = (char *)a2 - (char *)a1;
  v14 = v13 >> 3;
  v15 = (char *)a3 - (char *)a2;
  v16 = v15 / 8;
  v62 = a1;
  v61 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_43;
    if (a4 != a2 || &a2[v16] <= a4)
      memmove(a4, a2, 8 * v16);
    v30 = &a4[v16];
    v60 = v30;
    v62 = a2;
    if (v15 < 8 || a1 >= a2)
      goto LABEL_42;
    v31 = v54 - 1;
    v32 = a2;
    v59 = a4;
    v51 = a1;
    while (1)
    {
      v53 = v30;
      v54 = v31 + 1;
      v35 = *--v30;
      v34 = v35;
      v36 = *--v32;
      v37 = v34;
      v52 = v37;
      v38 = v36;
      v39 = objc_msgSend(v37, sel_sortDate);
      v40 = objc_msgSend(v39, sel_date);

      v41 = v55;
      sub_1BC62A724();

      v42 = objc_msgSend(v38, sel_sortDate);
      v43 = objc_msgSend(v42, sel_date);

      v44 = v56;
      sub_1BC62A724();

      LOBYTE(v42) = sub_1BC62A70C();
      v45 = *(void (**)(char *, uint64_t))(v57 + 8);
      v46 = v44;
      v47 = v58;
      v45(v46, v58);
      v45(v41, v47);

      if ((v42 & 1) != 0)
        break;
      v60 = v30;
      if (v54 < v53 || v31 >= v53)
      {
        *v31 = *v30;
        v32 = a2;
        goto LABEL_30;
      }
      v48 = v59;
      v33 = (unint64_t)v51;
      if (v54 != v53)
        *v31 = *v30;
      v32 = a2;
      if (v30 <= v48)
        goto LABEL_42;
LABEL_31:
      --v31;
      a2 = v32;
      if ((unint64_t)v32 <= v33)
        goto LABEL_42;
    }
    v30 = v53;
    if (v54 != a2 || v31 >= a2)
      *v31 = *v32;
    v62 = v32;
LABEL_30:
    v33 = (unint64_t)v51;
    if (v30 <= v59)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    if (a4 != a1 || &a1[v14] <= a4)
      memmove(a4, a1, 8 * v14);
    v53 = &a4[v14];
    v60 = v53;
    if (v12 >= 8 && a2 < v54)
    {
      v17 = v55;
      do
      {
        v59 = a4;
        v18 = *a4;
        v19 = *a2;
        v20 = v18;
        v21 = objc_msgSend(v19, sel_sortDate);
        v22 = objc_msgSend(v21, sel_date);

        sub_1BC62A724();
        v23 = objc_msgSend(v20, sel_sortDate);
        v24 = objc_msgSend(v23, sel_date);

        v25 = v56;
        sub_1BC62A724();

        LOBYTE(v23) = sub_1BC62A70C();
        v26 = v58;
        v27 = *(void (**)(char *, uint64_t))(v57 + 8);
        v27(v25, v58);
        v27(v17, v26);

        if ((v23 & 1) != 0)
        {
          v28 = a2 + 1;
          a4 = v59;
          if (a1 < a2 || a1 >= v28 || a1 != a2)
            *a1 = *a2;
        }
        else
        {
          v29 = v59;
          if (a1 != v59)
            *a1 = *v59;
          a4 = v29 + 1;
          v61 = a4;
          v28 = a2;
        }
        v62 = ++a1;
        if (a4 >= v53)
          break;
        a2 = v28;
      }
      while (v28 < v54);
    }
LABEL_42:
    sub_1BC503C80(&v62, &v61, &v60);
    return 1;
  }
LABEL_43:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC364448()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BC36446C()
{
  unint64_t result;

  result = qword_1ED6A4E90;
  if (!qword_1ED6A4E90)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A4E90);
  }
  return result;
}

unint64_t sub_1BC3644C0()
{
  unint64_t result;

  result = qword_1ED6A4E50;
  if (!qword_1ED6A4E50)
  {
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED6A4E50);
  }
  return result;
}

uint64_t sub_1BC364504()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BC364530(uint64_t a1)
{
  uint64_t v1;

  sub_1BC362574(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1BC364550()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC364574()
{
  uint64_t v0;

  sub_1BC362884(*(void **)(v0 + 16));
}

unint64_t sub_1BC36457C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A5870;
  if (!qword_1ED6A5870)
  {
    v1 = sub_1BC62C47C();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A5870);
  }
  return result;
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesDelegate.selectedItemsDidUpdate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ClinicalSharingDataTypeSelectionViewController(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF429A30);
}

uint64_t sub_1BC3645E8()
{
  return swift_initClassMetadata2();
}

void sub_1BC364638()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF4299F8 = v1;
  unk_1EF429A00 = v3;
}

void sub_1BC364704()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF429A08 = v1;
  unk_1EF429A10 = v3;
}

void sub_1BC3647D0()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for ClinicalSharingDataTypeSelectionViewController(0);
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    objc_msgSend(v0, sel_setModalInPresentation_, 1);
    if (*(_QWORD *)(*(_QWORD *)&v0[qword_1EF429A18] + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) == 2)
    {
      v4 = objc_msgSend(v0, sel_navigationItem);
      objc_msgSend(v4, sel_setRightBarButtonItem_, 0);

    }
    sub_1BC364B58();
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC3648E4(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC3647D0();

}

void sub_1BC364918()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  void *v5;
  void *v6;
  id v7;
  char *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD aBlock[6];

  v1 = v0;
  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC58B978(v2);
  swift_bridgeObjectRelease();
  v4 = sub_1BC3D6954(v3);
  swift_bridgeObjectRelease();
  v5 = *(void **)&v1[qword_1EF429A18];
  v6 = *(void **)&v1[qword_1EF429A20];
  v7 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingThingsToKnowViewController());
  v8 = v5;
  v9 = v6;
  sub_1BC389E80(v8, v9, v4);
  v11 = v10;

  objc_msgSend(v1, sel_showViewController_sender_, v11, 0);
  v12 = *(void **)&v8[OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient];
  v13 = (void *)sub_1BC62C650();
  sub_1BC408EF4(*(_QWORD *)&v8[OBJC_IVAR___WDClinicalAccountOnboardingSession_context]);
  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3EFECC;
  aBlock[3] = &block_descriptor_3;
  v15 = _Block_copy(aBlock);
  objc_msgSend(v12, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v13, v14, v15);
  _Block_release(v15);

}

uint64_t sub_1BC364AFC(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_1BC62D088();
  swift_unknownObjectRelease();
  sub_1BC364918();

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v4);
}

void sub_1BC364B58()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  __int128 v21;

  sub_1BC359F44();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v1 + 32) = sub_1BC62C680();
  *(_QWORD *)(v1 + 40) = v2;
  strcpy((char *)(v1 + 48), "ChooseTopics");
  *(_BYTE *)(v1 + 61) = 0;
  *(_WORD *)(v1 + 62) = -5120;
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v4)
  {
    v5 = sub_1BC62C680();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = objc_msgSend(v0, sel_navigationItem, 2, 4);
  v9 = objc_msgSend(v8, sel_backBarButtonItem);

  if (v9)
  {
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v21;
    if (!v7)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    *(_QWORD *)(v10 + 32) = v5;
    *(_QWORD *)(v10 + 40) = v7;
    *(_QWORD *)(v10 + 48) = 1801675074;
    *(_QWORD *)(v10 + 56) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v12 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v12);
  }
  v13 = objc_msgSend(v0, sel_navigationItem);
  v14 = objc_msgSend(v13, sel_rightBarButtonItem);

  if (!v14)
  {
LABEL_10:
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v21;
    if (v7)
    {
      *(_QWORD *)(v18 + 32) = v5;
      *(_QWORD *)(v18 + 40) = v7;
      *(_QWORD *)(v18 + 48) = 1954047310;
      *(_QWORD *)(v18 + 56) = 0xE400000000000000;
      v19 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v20 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (v20)
      {
        sub_1BC62C680();

        sub_1BC62B75C();
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v21;
  if (v7)
  {
    *(_QWORD *)(v15 + 32) = v5;
    *(_QWORD *)(v15 + 40) = v7;
    *(_QWORD *)(v15 + 48) = 0x6C65636E6143;
    *(_QWORD *)(v15 + 56) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    v16 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v17 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v17);
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
}

void sub_1BC364E78()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC364EA4()
{
  uint64_t v0;

}

id sub_1BC364EE0()
{
  return sub_1BC361C8C(type metadata accessor for ClinicalSharingDataTypeSelectionViewController);
}

void sub_1BC364EEC(uint64_t a1)
{

}

uint64_t sub_1BC364F34()
{
  return type metadata accessor for ClinicalSharingDataTypeSelectionViewController(0);
}

uint64_t type metadata accessor for ClinicalSharingOnboardingSelectDataTypesViewController(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF429A90);
}

uint64_t sub_1BC364F50()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC364FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + qword_1EF429A28) + qword_1EF429A80) + qword_1EF42DB20);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC5DCB08(v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC365044(char a1)
{
  swift_retain();
  sub_1BC3F6064((a1 & 1) == 0);
  return swift_release();
}

void sub_1BC365090(char *a1, uint64_t a2, void *a3)
{
  id v4;

  *(_QWORD *)&a1[qword_1EF429A88] = MEMORY[0x1E0DEE9D8];
  v4 = a3;

  sub_1BC62D394();
  __break(1u);
}

void sub_1BC36510C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingSelectDataTypesViewController(0);
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    v4 = objc_msgSend(v0, sel_collectionView);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_setPreservesSuperviewLayoutMargins_, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC3651E8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC36510C();

}

void sub_1BC36521C()
{
  void *v0;
  void *v1;
  void (*v2)(void);
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v1 = v0;
  sub_1BC62B7EC();
  v2 = (void (*)(void))sub_1BC62B7F8();
  v2();
  v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = v3;
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  sub_1BC347F0C((unint64_t *)&qword_1EF4299A8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell, (uint64_t)&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryCell);
  sub_1BC62CB48();

  v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = v5;
  sub_1BC62B408();
  sub_1BC62CB60();

  v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v7;
  type metadata accessor for TextItemCell();
  sub_1BC347F0C(&qword_1EF429AF8, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&protocol conformance descriptor for TextItemCell);
  sub_1BC62CB48();

  v9 = objc_msgSend(v1, sel_collectionView);
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v10 = v9;
  type metadata accessor for TurnOnAllDataTypesCell();
  sub_1BC347F0C(&qword_1EF429B00, (uint64_t (*)(uint64_t))type metadata accessor for TurnOnAllDataTypesCell, (uint64_t)&unk_1BC63D640);
  sub_1BC62CB48();

  v11 = objc_msgSend(v1, sel_collectionView);
  if (v11)
  {
    sub_1BC62ACE8();
    sub_1BC62CB54();

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_1BC3653F4(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  __int128 *v5;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[40];

  v2 = (void *)sub_1BC62A928();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_1BC62A928();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1BC62B7C8();
    sub_1BC62B4EC();
    sub_1BC62B060();
    swift_release();
    sub_1BC34E674((uint64_t)v11, (uint64_t)v8);
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    sub_1BC35817C(0, &qword_1EF429AE0);
    if (swift_dynamicCast())
    {
      v5 = v6;
LABEL_6:
      sub_1BC34E718(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
      sub_1BC62B1BC();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      return;
    }
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1BC365820((uint64_t)v6);
    *(_QWORD *)&v6[0] = v4;
    sub_1BC3658C0();
    v4 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v8;
      goto LABEL_6;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_1BC365820((uint64_t)v8);
  }
}

uint64_t sub_1BC3655DC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC62A970();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v9 = a3;
  v10 = a1;
  sub_1BC3653F4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BC36568C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC3656B8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC3656E8()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_1BC365714()
{
  return sub_1BC361C8C(type metadata accessor for ClinicalSharingOnboardingSelectDataTypesViewController);
}

uint64_t sub_1BC365720()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC365758()
{
  return type metadata accessor for ClinicalSharingOnboardingSelectDataTypesViewController(0);
}

uint64_t sub_1BC365760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + qword_1EF429A80) + qword_1EF42DB20);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC5DCB08(v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3657F0(char a1)
{
  return sub_1BC3F6064((a1 & 1) == 0);
}

uint64_t sub_1BC365820(uint64_t a1)
{
  uint64_t v2;

  sub_1BC36585C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC36585C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429AE8)
  {
    sub_1BC35817C(255, &qword_1EF429AE0);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429AE8);
  }
}

unint64_t sub_1BC3658C0()
{
  unint64_t result;

  result = qword_1EF429AF0;
  if (!qword_1EF429AF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF429AF0);
  }
  return result;
}

id sub_1BC3658FC(char *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  char *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t);
  id result;
  void *v24;
  unsigned int v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;

  v5 = sub_1BC62B828();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - v10;
  *(_QWORD *)&v2[qword_1EF429A18] = a1;
  *(_QWORD *)&v2[qword_1EF429A20] = a2;
  v12 = *(void **)&a1[OBJC_IVAR___WDClinicalAccountOnboardingSession_profile];
  v13 = v2;
  v14 = a1;
  v15 = a2;
  v16 = objc_msgSend(v12, sel_healthStore);
  v17 = (char *)objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingSelectDataTypesViewController(0));
  *(_QWORD *)&v17[qword_1EF429A88] = MEMORY[0x1E0DEE9D8];
  type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource();
  swift_allocObject();
  v18 = v17;
  v19 = v16;
  *(_QWORD *)&v18[qword_1EF429A80] = sub_1BC3F5624(v19, 0, 0, 0, 0);

  swift_retain();
  v20 = sub_1BC62B7D4();

  v21 = qword_1EF429A28;
  *(_QWORD *)&v13[qword_1EF429A28] = v20;

  v22 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
  v22(v11, *MEMORY[0x1E0D2BA10], v5);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v24 = result;
    v25 = objc_msgSend(result, sel_isiPad);

    if (v25)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      v22(v11, *MEMORY[0x1E0D2BA08], v5);
    }
    v26 = qword_1EF428380;
    v27 = *(id *)&v13[v21];
    if (v26 != -1)
      swift_once();
    v28 = qword_1EF428388;
    swift_bridgeObjectRetain();
    if (v28 != -1)
      swift_once();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    swift_bridgeObjectRetain();
    v29 = (id)sub_1BC62B81C();
    result = objc_msgSend(v29, sel_view);
    if (result)
    {
      v30 = result;
      v31 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
      objc_msgSend(v30, sel_setBackgroundColor_, v31);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return v29;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t dispatch thunk of UDCItem.viewData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of UDCItem.healthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of UDCItem.init(viewData:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

_QWORD *sub_1BC365C78(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v16 = *(_QWORD *)(a3 + 16);
  if (!v16)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = a3;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v15 = v4;
  do
  {
    v28 = *(_BYTE *)(v4 + v5 + 32);
    a1(&v21, &v28);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    v8 = v22;
    if (v22)
    {
      v9 = v21;
      v10 = v23;
      v11 = v24;
      v20 = v26;
      v18 = v25;
      v19 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1BC3B52D0(0, v6[2] + 1, 1, v6);
      v13 = v6[2];
      v12 = v6[3];
      if (v13 >= v12 >> 1)
        v6 = sub_1BC3B52D0((_QWORD *)(v12 > 1), v13 + 1, 1, v6);
      v6[2] = v13 + 1;
      v7 = &v6[7 * v13];
      v7[4] = v9;
      v7[5] = v8;
      v7[6] = v10;
      v7[7] = v11;
      v7[8] = v18;
      *((_BYTE *)v7 + 72) = v20;
      v7[10] = v19;
      v4 = v15;
    }
    ++v5;
  }
  while (v16 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BC365E04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  char v61[16];
  uint64_t v62;
  uint64_t v63;

  v60 = a2;
  v56 = sub_1BC62BB34();
  v4 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62A4E4();
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 32);
  sub_1BC34B508(0, &qword_1EF429B08, (uint64_t)&_s13HealthKitDataVN, (uint64_t (*)(_QWORD, uint64_t))_s7PDFDataVMa);
  v12 = (void **)a1;
  v13 = a1 + *(int *)(v11 + 28);
  v62 = v10;
  v63 = v13;
  v59 = v13;
  v14 = sub_1BC365C78((void (*)(uint64_t *__return_ptr, char *))sub_1BC366828, (uint64_t)v61, (uint64_t)&unk_1E74D2610);
  v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v16 = sub_1BC35B57C(MEMORY[0x1E0DEE9D8]);
  v17 = sub_1BC36CE88(v15, v16, (uint64_t)v14, (void (*)(uint64_t *__return_ptr, id *, _QWORD *))sub_1BC36CCAC);
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v17 + 16))
  {
    v54 = v19;
    v56 = v2;
    v20 = v12;
    v21 = *v12;
    sub_1BC62A4D8();
    v22 = objc_msgSend(v21, sel_firstName);
    sub_1BC62C680();

    sub_1BC62A4B4();
    v23 = objc_msgSend(v21, sel_lastName);
    sub_1BC62C680();

    sub_1BC62A4C0();
    v24 = (void *)objc_opt_self();
    v25 = (void *)sub_1BC62A4CC();
    v26 = objc_msgSend(v24, sel_localizedStringFromPersonNameComponents_style_options_, v25, 2, 0);

    v27 = sub_1BC62C680();
    v29 = v28;

    v30 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0)
      v30 = v27 & 0xFFFFFFFFFFFFLL;
    v55 = v17;
    if (!v30)
    {
      swift_bridgeObjectRelease();
      if (qword_1ED6A4888 != -1)
        swift_once();
      v31 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      v52 = 0xE000000000000000;
      v27 = sub_1BC62A4A8();
      v29 = v32;
      swift_bridgeObjectRelease();

    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v9, v58);
    v33 = v59;
    v58 = sub_1BC36D0DC(*v20, v59);
    v35 = v34;
    MEMORY[0x1E0C80A78](v58);
    v52 = (unint64_t)v20;
    v39 = sub_1BC4B216C((_QWORD *(*)(uint64_t *__return_ptr, _QWORD *))sub_1BC36D664, (uint64_t)(&v53 - 4), v36, v37, v38);
    v41 = v40;
    sub_1BC34B508(0, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN, (uint64_t (*)(_QWORD, uint64_t))_s7PDFDataVMa);
    v43 = v42;
    v44 = v60;
    sub_1BC36D6D8(v33, (uint64_t)v60 + *(int *)(v42 + 28));
    *v44 = v27;
    v44[1] = v29;
    v44[2] = v58;
    v44[3] = v35;
    v44[4] = (uint64_t)v39;
    v44[5] = v41;
    v45 = v54;
    v44[6] = v55;
    v44[7] = v45;
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v44, 0, 1, v43);
  }
  else
  {
    v47 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC62BAF8();
    v48 = sub_1BC62BB28();
    v49 = sub_1BC62CAAC();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v50 = 0;
      _os_log_impl(&dword_1BC30A000, v48, v49, "[PDF]: The input data either had no supported sections or all of the supported sections were empty.", v50, 2u);
      MEMORY[0x1BCCF36A8](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v47);
    sub_1BC34B508(0, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN, (uint64_t (*)(_QWORD, uint64_t))_s7PDFDataVMa);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v60, 1, 1, v51);
  }
}

void sub_1BC3662D8(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint8_t **a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint8_t *v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  uint8_t *v35;
  uint8_t *v36;
  uint8_t **v37;
  uint8_t *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint8_t *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  id v58;
  id v59;
  uint8_t *v60;
  uint64_t v61;
  uint8_t **v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v8 = sub_1BC62BB34();
  v63 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v53 - v12;
  v14 = *a1;
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_18;
  v15 = sub_1BC558FD8(v14);
  if ((v16 & 1) == 0)
    goto LABEL_18;
  v17 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v15);
  if (!(v17 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18)
      goto LABEL_5;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  if (!sub_1BC62D3B8())
  {
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    sub_1BC62BAF8();
    v47 = sub_1BC62BB28();
    v48 = sub_1BC62CAAC();
    if (os_log_type_enabled(v47, v48))
    {
      v61 = v8;
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v65 = v50;
      v62 = a4;
      *(_DWORD *)v49 = 136315138;
      LOBYTE(v64) = v14;
      v51 = sub_1BC62C6E0();
      v64 = sub_1BC4991F0(v51, v52, &v65);
      a4 = v62;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v47, v48, "[PDF]: There are no records for this category: %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v50, -1, -1);
      MEMORY[0x1BCCF36A8](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v61);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v8);
    }
    goto LABEL_21;
  }
LABEL_5:
  LOBYTE(v65) = v14;
  DisplayCategory.Kind.systemImageName.getter();
  if (v20)
  {
    v21 = v20;
    v60 = v19;
    v22 = sub_1BC55B770();
    if (*(_QWORD *)(v22 + 16))
    {
      v23 = sub_1BC558FD8(v14);
      if ((v24 & 1) != 0)
      {
        v61 = v8;
        v62 = a4;
        v25 = (_QWORD *)(*(_QWORD *)(v22 + 56) + 72 * v23);
        v26 = (void *)v25[1];
        v27 = v25[3];
        v54 = (uint8_t *)v25[4];
        v28 = (uint8_t *)v25[5];
        v29 = v25[7];
        v58 = (id)v25[8];
        v59 = v26;
        v56 = v27;
        swift_bridgeObjectRetain();
        v57 = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55 = v29;
        swift_bridgeObjectRetain();
        v58 = v58;
        v30 = v59;
        swift_bridgeObjectRelease();
        LOBYTE(v65) = v14;
        v31 = sub_1BC366840(a3, &v65);
        if (v31)
        {
          v32 = (uint64_t)v31;
          v63 = v31(v17);
          v34 = v33;
          v36 = v35;
          sub_1BC36D770(v32);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v37 = v62;
          *v62 = v60;
          v37[1] = v21;
          v38 = v57;
          v37[2] = v54;
          v37[3] = v38;
          v37[4] = (uint8_t *)v63;
          v37[5] = (uint8_t *)v34;
          v37[6] = v36;
          return;
        }
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v8 = v61;
        a4 = v62;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_12:
  sub_1BC62BAF8();
  v39 = sub_1BC62BB28();
  v40 = sub_1BC62CAAC();
  if (os_log_type_enabled(v39, v40))
  {
    v61 = v8;
    v41 = swift_slowAlloc();
    v62 = a4;
    v42 = (uint8_t *)v41;
    v43 = swift_slowAlloc();
    v65 = v43;
    *(_DWORD *)v42 = 136315138;
    v60 = v42 + 4;
    LOBYTE(v64) = v14;
    v44 = sub_1BC62C6E0();
    v64 = sub_1BC4991F0(v44, v45, &v65);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v39, v40, "[PDF]: This kind of category is not supported: %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v43, -1, -1);
    v46 = v42;
    a4 = v62;
    MEMORY[0x1BCCF36A8](v46, -1, -1);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v13, v61);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v63 + 8))(v13, v8);
  }
LABEL_21:
  a4[6] = 0;
  *((_OWORD *)a4 + 1) = 0u;
  *((_OWORD *)a4 + 2) = 0u;
  *(_OWORD *)a4 = 0u;
}

void sub_1BC366828(unsigned __int8 *a1@<X0>, uint8_t **a2@<X8>)
{
  uint64_t v2;

  sub_1BC3662D8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t (*sub_1BC366840(uint64_t a1, _BYTE *a2))(uint64_t a1)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*result)(uint64_t);
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t (**v14)();
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t (**v22)();
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t (**v30)();
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t (**v38)();
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t (**v47)();
  id v48;
  uint64_t v49;

  v4 = _s13ConfigurationVMa();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = 0;
  switch(*a2)
  {
    case 1:
    case 4:
    case 5:
    case 6:
      sub_1BC36D6D8(a1, (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v11 = v10 + v6;
      v12 = swift_allocObject();
      v13 = (v11 & 0xFFFFFFFFFFFFFFF8) + v12;
      sub_1BC36D7DC((uint64_t)v8, v12 + v10);
      *(_BYTE *)(v12 + v11) = 1;
      *(_QWORD *)(v13 + 8) = sub_1BC366D04;
      *(_QWORD *)(v13 + 16) = 0;
      v14 = (uint64_t (**)())(v12 + (((v11 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8));
      *v14 = sub_1BC366DF4;
      v14[1] = 0;
      result = sub_1BC36D914;
      break;
    case 2:
      v40 = *(void **)(a1 + *(int *)(v7 + 44));
      v41 = swift_allocObject();
      *(_QWORD *)(v41 + 16) = v40;
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = sub_1BC36D82C;
      *(_QWORD *)(v42 + 24) = v41;
      sub_1BC36D6D8(a1, (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      v43 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v44 = v43 + v6;
      v45 = swift_allocObject();
      v46 = (v44 & 0xFFFFFFFFFFFFFFF8) + v45;
      sub_1BC36D7DC((uint64_t)v8, v45 + v43);
      *(_BYTE *)(v45 + v44) = 1;
      *(_QWORD *)(v46 + 8) = sub_1BC36D858;
      *(_QWORD *)(v46 + 16) = v42;
      v47 = (uint64_t (**)())(v45 + (((v44 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8));
      *v47 = sub_1BC366CD4;
      v47[1] = 0;
      v48 = v40;
      result = sub_1BC36D8AC;
      break;
    case 3:
      v15 = *(void **)(a1 + *(int *)(v7 + 44));
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v15;
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = sub_1BC36D8B8;
      *(_QWORD *)(v17 + 24) = v16;
      sub_1BC36D6D8(a1, (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      v18 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v19 = v18 + v6;
      v20 = swift_allocObject();
      v21 = (v19 & 0xFFFFFFFFFFFFFFF8) + v20;
      sub_1BC36D7DC((uint64_t)v8, v20 + v18);
      *(_BYTE *)(v20 + v19) = 1;
      *(_QWORD *)(v21 + 8) = sub_1BC36D8C0;
      *(_QWORD *)(v21 + 16) = v17;
      v22 = (uint64_t (**)())(v20 + (((v19 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8));
      *v22 = sub_1BC366CBC;
      v22[1] = 0;
      v23 = v15;
      result = sub_1BC36D904;
      break;
    case 7:
      sub_1BC36D6D8(a1, (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      v24 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v25 = v24 + v6;
      v26 = swift_allocObject();
      sub_1BC36D7DC((uint64_t)v8, v26 + v24);
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = sub_1BC36DA3C;
      *(_QWORD *)(v27 + 24) = v26;
      sub_1BC36D6D8(a1, (uint64_t)v8);
      v28 = swift_allocObject();
      v29 = (v25 & 0xFFFFFFFFFFFFFFF8) + v28;
      sub_1BC36D7DC((uint64_t)v8, v28 + v24);
      *(_BYTE *)(v28 + v25) = 0;
      *(_QWORD *)(v29 + 8) = sub_1BC36DA88;
      *(_QWORD *)(v29 + 16) = v27;
      v30 = (uint64_t (**)())(v28 + (((v25 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8));
      *v30 = sub_1BC366CA4;
      v30[1] = 0;
      result = sub_1BC36DC20;
      break;
    case 0xA:
      v31 = *(void **)(a1 + *(int *)(v7 + 52));
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = v31;
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = sub_1BC36D7A4;
      *(_QWORD *)(v33 + 24) = v32;
      sub_1BC36D6D8(a1, (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      v34 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v35 = v34 + v6;
      v36 = swift_allocObject();
      v37 = (v35 & 0xFFFFFFFFFFFFFFF8) + v36;
      sub_1BC36D7DC((uint64_t)v8, v36 + v34);
      *(_BYTE *)(v36 + v35) = 1;
      *(_QWORD *)(v37 + 8) = sub_1BC36D7AC;
      *(_QWORD *)(v37 + 16) = v33;
      v38 = (uint64_t (**)())(v36 + (((v35 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8));
      *v38 = sub_1BC366CEC;
      v38[1] = 0;
      v39 = v31;
      result = sub_1BC36D820;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BC366CA4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC366CBC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC366CD4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC366CEC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC366D04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[2];

  v4 = sub_1BC62A2BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_preferredDisplayName);
  v9 = sub_1BC62C680();
  v11 = v10;

  v16[0] = v9;
  v16[1] = v11;
  sub_1BC62A2B0();
  sub_1BC36E2AC();
  v12 = sub_1BC62D028();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v14;
  return result;
}

uint64_t sub_1BC366DF4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC366E0C(unint64_t a1, uint64_t a2, int a3, void (*a4)(void *), void (*a5)(void *), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  void (**v20)(void *);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char **v25;
  char **v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void (*v40)(void *);
  id v41;
  char **v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[3];
  uint64_t (*v58)(void);
  uint64_t v59;
  uint64_t *v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int v64;
  void (*v65)(void *);
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;

  v57[2] = a7;
  v58 = a6;
  v12 = _s13ConfigurationVMa();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v57 - v16;
  sub_1BC36D6D8(a2, (uint64_t)v57 - v16);
  v59 = (uint64_t)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC36D6D8((uint64_t)v17, v59);
  v18 = (*(unsigned __int8 *)(v13 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = swift_allocObject();
  v64 = a3;
  *(_BYTE *)(v19 + 16) = a3;
  sub_1BC36D7DC((uint64_t)v17, v19 + v18);
  v57[1] = v19;
  v20 = (void (**)(void *))(v19 + ((v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  v65 = a4;
  *v20 = a4;
  v20[1] = a5;
  if (a1 >> 62)
    goto LABEL_17;
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n();
  if (v21)
  {
    while (1)
    {
      v76 = MEMORY[0x1E0DEE9D8];
      result = sub_1BC3BD838(0, v21 & ~(v21 >> 63), 0);
      if (v21 < 0)
        break;
      v23 = 0;
      v24 = v76;
      v61 = a1 & 0xC000000000000001;
      v60 = &v74;
      v25 = &selRef_predicateWithFormat_;
      v26 = &selRef_predicateWithFormat_;
      v63 = a1;
      v62 = v21;
      while (v21 != v23)
      {
        *(_QWORD *)&v73 = v24;
        if (v61)
          v27 = (id)MEMORY[0x1BCCF24CC](v23, a1);
        else
          v27 = *(id *)(a1 + 8 * v23 + 32);
        v28 = v27;
        v29 = (void *)MEMORY[0x1BCCF2DD8]();
        v30 = objc_msgSend(v28, v25[422]);
        v31 = objc_msgSend(v30, v26[421]);

        v32 = objc_msgSend(v31, sel_bundleIdentifier);
        v33 = sub_1BC62C680();
        v35 = v34;

        v72 = v33;
        if ((v64 & 1) != 0)
        {
          v36 = sub_1BC36DCE0(v28);
          v70 = v37;
          v71 = v36;
          v69 = v38;
          v68 = v39 & 1;
          swift_bridgeObjectRetain();
          v67 = v33;
          v66 = v35;
        }
        else
        {
          v70 = 0;
          v71 = 0;
          v69 = 0;
          v67 = 0;
          v66 = 0;
          v68 = 1;
        }
        v40 = a5;
        v65(v28);
        v41 = objc_msgSend(v28, v25[422]);
        v42 = v26;
        v43 = objc_msgSend(v41, v26[421]);

        v44 = objc_msgSend(v43, sel_name);
        v45 = sub_1BC62C680();
        v47 = v46;

        objc_autoreleasePoolPop(v29);
        v48 = v74;
        v49 = v75;
        v24 = v73;
        v76 = v73;
        v51 = *(_QWORD *)(v73 + 16);
        v50 = *(_QWORD *)(v73 + 24);
        if (v51 >= v50 >> 1)
        {
          v73 = v75;
          sub_1BC3BD838(v50 > 1, v51 + 1, 1);
          v49 = v73;
          v24 = v76;
        }
        ++v23;
        *(_QWORD *)(v24 + 16) = v51 + 1;
        v52 = v24 + 104 * v51;
        v53 = v70;
        *(_QWORD *)(v52 + 32) = v71;
        *(_QWORD *)(v52 + 40) = v53;
        *(_QWORD *)(v52 + 48) = v69;
        *(_BYTE *)(v52 + 56) = v68;
        v54 = v66;
        *(_QWORD *)(v52 + 64) = v67;
        *(_QWORD *)(v52 + 72) = v54;
        *(_QWORD *)(v52 + 80) = v48;
        *(_OWORD *)(v52 + 88) = v49;
        *(_QWORD *)(v52 + 104) = v72;
        *(_QWORD *)(v52 + 112) = v35;
        *(_QWORD *)(v52 + 120) = v45;
        *(_QWORD *)(v52 + 128) = v47;
        v21 = v62;
        a5 = v40;
        a1 = v63;
        v25 = &selRef_predicateWithFormat_;
        v26 = v42;
        if (v62 == v23)
        {
          swift_release();
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_17:
      swift_retain_n();
      swift_bridgeObjectRetain();
      v21 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (!v21)
        goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_release();
    v24 = MEMORY[0x1E0DEE9D8];
LABEL_19:
    sub_1BC36DCA4(v59);
    swift_release();
    sub_1BC368890(v24);
    v55 = v24;
    v56 = v58();
    swift_bridgeObjectRelease();
    sub_1BC368FBC(v55);
    swift_bridgeObjectRelease();
    return v56;
  }
  return result;
}

uint64_t sub_1BC367300(unint64_t a1, uint64_t a2, int a3, void (*a4)(void *), void (*a5)(void *), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  void (**v20)(void *);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char **v25;
  char **v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(void);
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  unint64_t v72;
  void (*v73)(void *);
  int v74;
  void (*v75)(void *);
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v87[7];
  char v88;
  _DWORD v89[12];
  _QWORD v90[3];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;

  v65 = a7;
  v66 = a6;
  v12 = _s13ConfigurationVMa();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v62 - v16;
  sub_1BC36D6D8(a2, (uint64_t)&v62 - v16);
  v68 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC36D6D8((uint64_t)v17, v68);
  v18 = (*(unsigned __int8 *)(v13 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = swift_allocObject();
  v74 = a3;
  *(_BYTE *)(v19 + 16) = a3;
  sub_1BC36D7DC((uint64_t)v17, v19 + v18);
  v67 = v19;
  v20 = (void (**)(void *))(v19 + ((v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  v75 = a4;
  *v20 = a4;
  v20[1] = a5;
  if (!(a1 >> 62))
  {
    v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    if (v21)
      goto LABEL_3;
LABEL_17:
    swift_release();
    v24 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    sub_1BC36DCA4(v68);
    swift_release();
    sub_1BC3689D8(v24);
    v60 = v24;
    v61 = v66();
    swift_bridgeObjectRelease();
    sub_1BC3690B4(v60);
    swift_bridgeObjectRelease();
    return v61;
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  v21 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_17;
LABEL_3:
  v97 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BD88C(0, v21 & ~(v21 >> 63), 0);
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = 0;
    v72 = a1 & 0xC000000000000001;
    v24 = v97;
    v71 = v90;
    v70 = v21 - 1;
    v25 = &selRef_predicateWithFormat_;
    v26 = &selRef_predicateWithFormat_;
    v69 = a1;
    v73 = a5;
    while (1)
    {
      v86 = v23;
      v27 = v24;
      v28 = v72 ? (id)MEMORY[0x1BCCF24CC]() : *(id *)(a1 + 8 * v23 + 32);
      v29 = v28;
      v30 = (void *)MEMORY[0x1BCCF2DD8]();
      v31 = objc_msgSend(v29, v25[422]);
      v32 = objc_msgSend(v31, v26[421]);

      v33 = objc_msgSend(v32, sel_bundleIdentifier);
      v34 = sub_1BC62C680();
      v36 = v35;

      v85 = v34;
      v84 = v36;
      if ((v74 & 1) != 0)
      {
        v83 = sub_1BC36DCE0(v29);
        v82 = v37;
        v81 = v38;
        v78 = v39 & 1;
        swift_bridgeObjectRetain();
        v80 = v34;
        v79 = v36;
      }
      else
      {
        v83 = 0;
        v82 = 0;
        v81 = 0;
        v80 = 0;
        v79 = 0;
        v78 = 1;
      }
      v75(v29);
      v40 = objc_msgSend(v29, v25[422]);
      v41 = objc_msgSend(v40, v26[421]);

      v42 = objc_msgSend(v41, sel_name);
      v77 = sub_1BC62C680();
      v76 = v43;

      objc_autoreleasePoolPop(v30);
      v44 = v90[0];
      v45 = v90[1];
      v47 = v90[2];
      v46 = v91;
      v48 = v92;
      v49 = v93;
      v50 = v94;
      v51 = v95;
      v24 = v27;
      v53 = *(_QWORD *)(v27 + 16);
      v52 = *(_QWORD *)(v27 + 24);
      v54 = v96;
      v97 = v24;
      if (v53 >= v52 >> 1)
      {
        v64 = v90[0];
        v63 = v91;
        sub_1BC3BD88C(v52 > 1, v53 + 1, 1);
        v46 = v63;
        v44 = v64;
        v24 = v97;
      }
      v88 = v78;
      *(_QWORD *)(v24 + 16) = v53 + 1;
      v55 = v24 + 152 * v53;
      v56 = v82;
      *(_QWORD *)(v55 + 32) = v83;
      *(_QWORD *)(v55 + 40) = v56;
      *(_QWORD *)(v55 + 48) = v81;
      *(_BYTE *)(v55 + 56) = v88;
      LODWORD(v56) = v89[0];
      *(_DWORD *)(v55 + 60) = *(_DWORD *)((char *)v89 + 3);
      *(_DWORD *)(v55 + 57) = v56;
      v57 = v79;
      *(_QWORD *)(v55 + 64) = v80;
      *(_QWORD *)(v55 + 72) = v57;
      *(_QWORD *)(v55 + 80) = v44;
      *(_QWORD *)(v55 + 88) = v45;
      *(_QWORD *)(v55 + 96) = v47;
      *(_QWORD *)(v55 + 104) = v46;
      *(_QWORD *)(v55 + 112) = v48;
      *(_QWORD *)(v55 + 120) = v49;
      *(_QWORD *)(v55 + 128) = v50;
      *(_QWORD *)(v55 + 136) = v51;
      *(_BYTE *)(v55 + 144) = v54;
      LODWORD(v57) = *(_DWORD *)v87;
      *(_DWORD *)(v55 + 148) = *(_DWORD *)&v87[3];
      *(_DWORD *)(v55 + 145) = v57;
      v58 = v84;
      *(_QWORD *)(v55 + 152) = v85;
      *(_QWORD *)(v55 + 160) = v58;
      v59 = v76;
      *(_QWORD *)(v55 + 168) = v77;
      *(_QWORD *)(v55 + 176) = v59;
      if (v70 == v86)
        break;
      v23 = v86 + 1;
      a1 = v69;
      v25 = &selRef_predicateWithFormat_;
      v26 = &selRef_predicateWithFormat_;
    }
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3678CC(unint64_t a1, uint64_t a2, int a3, void (*a4)(void *), void (*a5)(void *), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  void (**v20)(void *);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char **v25;
  char **v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  uint64_t (*v61)(void);
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  void (*v68)(void *);
  int v69;
  void (*v70)(void *);
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  _DWORD v83[12];
  _QWORD v84[6];
  uint64_t v85;

  v60[1] = a7;
  v61 = a6;
  v12 = _s13ConfigurationVMa();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v60 - v16;
  sub_1BC36D6D8(a2, (uint64_t)v60 - v16);
  v63 = (uint64_t)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC36D6D8((uint64_t)v17, v63);
  v18 = (*(unsigned __int8 *)(v13 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = swift_allocObject();
  v69 = a3;
  *(_BYTE *)(v19 + 16) = a3;
  sub_1BC36D7DC((uint64_t)v17, v19 + v18);
  v62 = v19;
  v20 = (void (**)(void *))(v19 + ((v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  v70 = a4;
  *v20 = a4;
  v20[1] = a5;
  if (!(a1 >> 62))
  {
    v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    if (v21)
      goto LABEL_3;
LABEL_17:
    swift_release();
    v24 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    sub_1BC36DCA4(v63);
    swift_release();
    sub_1BC368B70(v24);
    v58 = v24;
    v59 = v61();
    swift_bridgeObjectRelease();
    sub_1BC3691AC(v58);
    swift_bridgeObjectRelease();
    return v59;
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  v21 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_17;
LABEL_3:
  v85 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BD8E0(0, v21 & ~(v21 >> 63), 0);
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = 0;
    v67 = a1 & 0xC000000000000001;
    v24 = v85;
    v66 = v84;
    v65 = v21 - 1;
    v25 = &selRef_predicateWithFormat_;
    v26 = &selRef_predicateWithFormat_;
    v64 = a1;
    v68 = a5;
    while (1)
    {
      v80 = v23;
      v81 = v24;
      v27 = v67 ? (id)MEMORY[0x1BCCF24CC]() : *(id *)(a1 + 8 * v23 + 32);
      v28 = v27;
      v29 = (void *)MEMORY[0x1BCCF2DD8]();
      v30 = objc_msgSend(v28, v25[422]);
      v31 = objc_msgSend(v30, v26[421]);

      v32 = objc_msgSend(v31, sel_bundleIdentifier);
      v33 = sub_1BC62C680();
      v35 = v34;

      v79 = v33;
      v78 = v35;
      if ((v69 & 1) != 0)
      {
        v77 = sub_1BC36DCE0(v28);
        v76 = v36;
        v75 = v37;
        v72 = v38 & 1;
        swift_bridgeObjectRetain();
        v74 = v33;
        v73 = v35;
      }
      else
      {
        v77 = 0;
        v76 = 0;
        v75 = 0;
        v74 = 0;
        v73 = 0;
        v72 = 1;
      }
      v70(v28);
      v39 = objc_msgSend(v28, v25[422]);
      v40 = objc_msgSend(v39, v26[421]);

      v41 = objc_msgSend(v40, sel_name);
      v42 = sub_1BC62C680();
      v71 = v43;

      objc_autoreleasePoolPop(v29);
      v44 = v84[0];
      v45 = v84[1];
      v46 = v84[2];
      v47 = v84[3];
      v48 = v84[4];
      v49 = v84[5];
      v24 = v81;
      v85 = v81;
      v51 = *(_QWORD *)(v81 + 16);
      v50 = *(_QWORD *)(v81 + 24);
      if (v51 >= v50 >> 1)
      {
        sub_1BC3BD8E0(v50 > 1, v51 + 1, 1);
        v24 = v85;
      }
      v82 = v72;
      *(_QWORD *)(v24 + 16) = v51 + 1;
      v52 = v24 + (v51 << 7);
      v53 = v76;
      *(_QWORD *)(v52 + 32) = v77;
      *(_QWORD *)(v52 + 40) = v53;
      *(_QWORD *)(v52 + 48) = v75;
      *(_BYTE *)(v52 + 56) = v82;
      LODWORD(v53) = v83[0];
      *(_DWORD *)(v52 + 60) = *(_DWORD *)((char *)v83 + 3);
      *(_DWORD *)(v52 + 57) = v53;
      v54 = v73;
      *(_QWORD *)(v52 + 64) = v74;
      *(_QWORD *)(v52 + 72) = v54;
      *(_QWORD *)(v52 + 80) = v44;
      *(_QWORD *)(v52 + 88) = v45;
      *(_QWORD *)(v52 + 96) = v46;
      *(_QWORD *)(v52 + 104) = v47;
      *(_QWORD *)(v52 + 112) = v48;
      *(_QWORD *)(v52 + 120) = v49;
      v55 = v80;
      v56 = v78;
      *(_QWORD *)(v52 + 128) = v79;
      *(_QWORD *)(v52 + 136) = v56;
      v57 = v71;
      *(_QWORD *)(v52 + 144) = v42;
      *(_QWORD *)(v52 + 152) = v57;
      if (v65 == v55)
        break;
      v23 = v55 + 1;
      a1 = v64;
      v25 = &selRef_predicateWithFormat_;
      v26 = &selRef_predicateWithFormat_;
    }
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC367E1C(unint64_t a1, uint64_t a2, int a3, void (*a4)(void *), void (*a5)(void *), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  void (**v20)(void *);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char **v25;
  char **v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  char **v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[3];
  uint64_t (*v57)(void);
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63)(void *);
  int v64;
  void (*v65)(void *);
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[6];
  uint64_t v75;

  v56[2] = a7;
  v57 = a6;
  v12 = _s13ConfigurationVMa();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v56 - v16;
  sub_1BC36D6D8(a2, (uint64_t)v56 - v16);
  v58 = (uint64_t)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC36D6D8((uint64_t)v17, v58);
  v18 = (*(unsigned __int8 *)(v13 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = swift_allocObject();
  v64 = a3;
  *(_BYTE *)(v19 + 16) = a3;
  sub_1BC36D7DC((uint64_t)v17, v19 + v18);
  v56[1] = v19;
  v20 = (void (**)(void *))(v19 + ((v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  v65 = a4;
  *v20 = a4;
  v20[1] = a5;
  if (a1 >> 62)
    goto LABEL_17;
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n();
  if (v21)
  {
    while (1)
    {
      v75 = MEMORY[0x1E0DEE9D8];
      result = sub_1BC3BD934(0, v21 & ~(v21 >> 63), 0);
      if (v21 < 0)
        break;
      v23 = 0;
      v24 = v75;
      v60 = a1 & 0xC000000000000001;
      v59 = v74;
      v25 = &selRef_predicateWithFormat_;
      v26 = &selRef_predicateWithFormat_;
      v62 = a1;
      v61 = v21;
      v63 = a5;
      while (v21 != v23)
      {
        v73 = v24;
        if (v60)
          v27 = (id)MEMORY[0x1BCCF24CC](v23, a1);
        else
          v27 = *(id *)(a1 + 8 * v23 + 32);
        v28 = v27;
        v29 = (void *)MEMORY[0x1BCCF2DD8]();
        v30 = objc_msgSend(v28, v25[422]);
        v31 = objc_msgSend(v30, v26[421]);

        v32 = objc_msgSend(v31, sel_bundleIdentifier);
        v33 = sub_1BC62C680();
        v35 = v34;

        v72 = v33;
        if ((v64 & 1) != 0)
        {
          v36 = sub_1BC36DCE0(v28);
          v70 = v37;
          v71 = v36;
          v69 = v38;
          v68 = v39 & 1;
          swift_bridgeObjectRetain();
          v66 = v35;
          v67 = v33;
        }
        else
        {
          v70 = 0;
          v71 = 0;
          v69 = 0;
          v66 = 0;
          v67 = 0;
          v68 = 1;
        }
        v65(v28);
        v40 = objc_msgSend(v28, v25[422]);
        v41 = v26;
        v42 = objc_msgSend(v40, v26[421]);

        v43 = objc_msgSend(v42, sel_name);
        v44 = sub_1BC62C680();
        v46 = v45;

        objc_autoreleasePoolPop(v29);
        v48 = v74[0];
        v47 = v74[1];
        v24 = v73;
        v75 = v73;
        v50 = *(_QWORD *)(v73 + 16);
        v49 = *(_QWORD *)(v73 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_1BC3BD934(v49 > 1, v50 + 1, 1);
          v24 = v75;
        }
        ++v23;
        *(_QWORD *)(v24 + 16) = v50 + 1;
        v51 = v24 + 96 * v50;
        v52 = v70;
        *(_QWORD *)(v51 + 32) = v71;
        *(_QWORD *)(v51 + 40) = v52;
        *(_QWORD *)(v51 + 48) = v69;
        *(_BYTE *)(v51 + 56) = v68;
        v53 = v66;
        *(_QWORD *)(v51 + 64) = v67;
        *(_QWORD *)(v51 + 72) = v53;
        *(_QWORD *)(v51 + 80) = v48;
        *(_QWORD *)(v51 + 88) = v47;
        *(_QWORD *)(v51 + 96) = v72;
        *(_QWORD *)(v51 + 104) = v35;
        *(_QWORD *)(v51 + 112) = v44;
        *(_QWORD *)(v51 + 120) = v46;
        v21 = v61;
        a5 = v63;
        a1 = v62;
        v25 = &selRef_predicateWithFormat_;
        v26 = v41;
        if (v61 == v23)
        {
          swift_release();
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_17:
      swift_retain_n();
      swift_bridgeObjectRetain();
      v21 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (!v21)
        goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_release();
    v24 = MEMORY[0x1E0DEE9D8];
LABEL_19:
    sub_1BC36DCA4(v58);
    swift_release();
    sub_1BC368CDC(v24);
    v54 = v24;
    v55 = v57();
    swift_bridgeObjectRelease();
    sub_1BC3692A4(v54);
    swift_bridgeObjectRelease();
    return v55;
  }
  return result;
}

uint64_t sub_1BC3682DC(unint64_t a1, uint64_t a2, int a3, void (*a4)(void *), void (*a5)(void *), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  void (**v20)(void *);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char **v25;
  char **v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(void);
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  void (*v72)(void *);
  int v73;
  void (*v74)(void *);
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  _DWORD v87[12];
  _QWORD v88[8];
  __int128 v89;
  uint64_t v90;

  v64 = a7;
  v65 = a6;
  v12 = _s13ConfigurationVMa();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v62 - v16;
  sub_1BC36D6D8(a2, (uint64_t)&v62 - v16);
  v67 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC36D6D8((uint64_t)v17, v67);
  v18 = (*(unsigned __int8 *)(v13 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = swift_allocObject();
  v73 = a3;
  *(_BYTE *)(v19 + 16) = a3;
  sub_1BC36D7DC((uint64_t)v17, v19 + v18);
  v66 = v19;
  v20 = (void (**)(void *))(v19 + ((v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  v74 = a4;
  *v20 = a4;
  v20[1] = a5;
  if (!(a1 >> 62))
  {
    v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    if (v21)
      goto LABEL_3;
LABEL_17:
    swift_release();
    v24 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    sub_1BC36DCA4(v67);
    swift_release();
    sub_1BC368E08(v24);
    v60 = v24;
    v61 = v65();
    swift_bridgeObjectRelease();
    sub_1BC36939C(v60);
    swift_bridgeObjectRelease();
    return v61;
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  v21 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_17;
LABEL_3:
  v90 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BD988(0, v21 & ~(v21 >> 63), 0);
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = 0;
    v71 = a1 & 0xC000000000000001;
    v24 = v90;
    v70 = v88;
    v69 = v21 - 1;
    v25 = &selRef_predicateWithFormat_;
    v26 = &selRef_predicateWithFormat_;
    v68 = a1;
    v72 = a5;
    while (1)
    {
      v85 = v23;
      v27 = v24;
      v28 = v71 ? (id)MEMORY[0x1BCCF24CC]() : *(id *)(a1 + 8 * v23 + 32);
      v29 = v28;
      v30 = (void *)MEMORY[0x1BCCF2DD8]();
      v31 = objc_msgSend(v29, v25[422]);
      v32 = objc_msgSend(v31, v26[421]);

      v33 = objc_msgSend(v32, sel_bundleIdentifier);
      v34 = sub_1BC62C680();
      v36 = v35;

      v84 = v34;
      v83 = v36;
      if ((v73 & 1) != 0)
      {
        v82 = sub_1BC36DCE0(v29);
        v81 = v37;
        v80 = v38;
        v77 = v39 & 1;
        swift_bridgeObjectRetain();
        v79 = v34;
        v78 = v36;
      }
      else
      {
        v82 = 0;
        v81 = 0;
        v80 = 0;
        v79 = 0;
        v78 = 0;
        v77 = 1;
      }
      v74(v29);
      v40 = objc_msgSend(v29, v25[422]);
      v41 = objc_msgSend(v40, v26[421]);

      v42 = objc_msgSend(v41, sel_name);
      v76 = sub_1BC62C680();
      v75 = v43;

      objc_autoreleasePoolPop(v30);
      v44 = v88[0];
      v45 = v88[1];
      v47 = v88[2];
      v46 = v88[3];
      v48 = v88[4];
      v49 = v88[5];
      v50 = v88[6];
      v51 = v88[7];
      v24 = v27;
      v52 = *(_QWORD *)(v27 + 16);
      v53 = *(_QWORD *)(v24 + 24);
      v54 = v89;
      v90 = v24;
      if (v52 >= v53 >> 1)
      {
        v63 = v88[0];
        v62 = v89;
        sub_1BC3BD988(v53 > 1, v52 + 1, 1);
        v54 = v62;
        v44 = v63;
        v24 = v90;
      }
      v86 = v77;
      *(_QWORD *)(v24 + 16) = v52 + 1;
      v55 = v24 + 160 * v52;
      v56 = v81;
      *(_QWORD *)(v55 + 32) = v82;
      *(_QWORD *)(v55 + 40) = v56;
      *(_QWORD *)(v55 + 48) = v80;
      *(_BYTE *)(v55 + 56) = v86;
      LODWORD(v56) = v87[0];
      *(_DWORD *)(v55 + 60) = *(_DWORD *)((char *)v87 + 3);
      *(_DWORD *)(v55 + 57) = v56;
      v57 = v78;
      *(_QWORD *)(v55 + 64) = v79;
      *(_QWORD *)(v55 + 72) = v57;
      *(_QWORD *)(v55 + 80) = v44;
      *(_QWORD *)(v55 + 88) = v45;
      *(_QWORD *)(v55 + 96) = v47;
      *(_QWORD *)(v55 + 104) = v46;
      *(_QWORD *)(v55 + 112) = v48;
      *(_QWORD *)(v55 + 120) = v49;
      *(_QWORD *)(v55 + 128) = v50;
      *(_QWORD *)(v55 + 136) = v51;
      *(_OWORD *)(v55 + 144) = v54;
      v58 = v83;
      *(_QWORD *)(v55 + 160) = v84;
      *(_QWORD *)(v55 + 168) = v58;
      v59 = v75;
      *(_QWORD *)(v55 + 176) = v76;
      *(_QWORD *)(v55 + 184) = v59;
      if (v69 == v85)
        break;
      v23 = v85 + 1;
      a1 = v68;
      v25 = &selRef_predicateWithFormat_;
      v26 = &selRef_predicateWithFormat_;
    }
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC368890(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD81C(0, v1, 0);
    v2 = v18;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v7 = *((_BYTE *)v4 + 8);
      v8 = v4[3];
      v15 = v4[2];
      v16 = *(v4 - 2);
      v14 = v4[4];
      v17 = *(_OWORD *)(v4 + 5);
      v9 = *(_QWORD *)(v18 + 16);
      v10 = *(_QWORD *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
        sub_1BC3BD81C(v10 > 1, v9 + 1, 1);
      *(_QWORD *)(v18 + 16) = v9 + 1;
      v11 = v18 + 72 * v9;
      *(_QWORD *)(v11 + 32) = v16;
      *(_QWORD *)(v11 + 40) = v5;
      *(_QWORD *)(v11 + 48) = v6;
      *(_BYTE *)(v11 + 56) = v7;
      *(_QWORD *)(v11 + 64) = v15;
      *(_QWORD *)(v11 + 72) = v8;
      *(_QWORD *)(v11 + 80) = v14;
      *(_OWORD *)(v11 + 88) = v17;
      v4 += 13;
      --v1;
    }
    while (v1);
  }
  v12 = sub_1BC3696F4(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC3689D8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD870(0, v1, 0);
    v2 = v26;
    v4 = (uint64_t *)(a1 + 72);
    do
    {
      v22 = *(v4 - 4);
      v23 = *(v4 - 5);
      v21 = *(v4 - 3);
      v20 = *((_BYTE *)v4 - 16);
      v5 = *v4;
      v6 = v4[2];
      v18 = v4[1];
      v19 = *(v4 - 1);
      v7 = v4[4];
      v8 = v4[6];
      v16 = v4[5];
      v17 = v4[3];
      v9 = v4[8];
      v15 = v4[7];
      v24 = *((_BYTE *)v4 + 72);
      v11 = *(_QWORD *)(v26 + 16);
      v10 = *(_QWORD *)(v26 + 24);
      v25 = v11 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1)
        sub_1BC3BD870(v10 > 1, v25, 1);
      *(_QWORD *)(v26 + 16) = v25;
      v12 = v26 + 120 * v11;
      *(_QWORD *)(v12 + 32) = v23;
      *(_QWORD *)(v12 + 40) = v22;
      *(_QWORD *)(v12 + 48) = v21;
      *(_BYTE *)(v12 + 56) = v20;
      *(_QWORD *)(v12 + 64) = v19;
      *(_QWORD *)(v12 + 72) = v5;
      *(_QWORD *)(v12 + 80) = v18;
      *(_QWORD *)(v12 + 88) = v6;
      *(_QWORD *)(v12 + 96) = v17;
      *(_QWORD *)(v12 + 104) = v7;
      *(_QWORD *)(v12 + 112) = v16;
      *(_QWORD *)(v12 + 120) = v8;
      *(_QWORD *)(v12 + 128) = v15;
      *(_QWORD *)(v12 + 136) = v9;
      v4 += 19;
      *(_BYTE *)(v12 + 144) = v24;
      --v1;
    }
    while (v1);
  }
  v13 = sub_1BC3699E4(v2);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1BC368B70(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD8C4(0, v1, 0);
    v2 = v22;
    v4 = (_QWORD *)(a1 + 64);
    do
    {
      v19 = *(v4 - 3);
      v20 = *(v4 - 4);
      v18 = *(v4 - 2);
      v17 = *((_BYTE *)v4 - 8);
      v5 = v4[1];
      v6 = v4[3];
      v15 = v4[2];
      v16 = *v4;
      v7 = v4[5];
      v14 = v4[4];
      v8 = v4[7];
      v21 = v4[6];
      v9 = *(_QWORD *)(v22 + 16);
      v10 = *(_QWORD *)(v22 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
        sub_1BC3BD8C4(v10 > 1, v9 + 1, 1);
      *(_QWORD *)(v22 + 16) = v9 + 1;
      v11 = v22 + 96 * v9;
      *(_QWORD *)(v11 + 32) = v20;
      *(_QWORD *)(v11 + 40) = v19;
      *(_QWORD *)(v11 + 48) = v18;
      *(_BYTE *)(v11 + 56) = v17;
      *(_QWORD *)(v11 + 64) = v16;
      *(_QWORD *)(v11 + 72) = v5;
      *(_QWORD *)(v11 + 80) = v15;
      *(_QWORD *)(v11 + 88) = v6;
      *(_QWORD *)(v11 + 96) = v14;
      *(_QWORD *)(v11 + 104) = v7;
      v4 += 16;
      *(_QWORD *)(v11 + 112) = v21;
      *(_QWORD *)(v11 + 120) = v8;
      --v1;
    }
    while (v1);
  }
  v12 = sub_1BC369D48(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC368CDC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD918(0, v1, 0);
    v2 = v18;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v15 = *((_BYTE *)v4 + 8);
      v7 = v4[3];
      v14 = v4[2];
      v8 = v4[5];
      v16 = *(v4 - 2);
      v17 = v4[4];
      v9 = *(_QWORD *)(v18 + 16);
      v10 = *(_QWORD *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
        sub_1BC3BD918(v10 > 1, v9 + 1, 1);
      *(_QWORD *)(v18 + 16) = v9 + 1;
      v11 = v18 + (v9 << 6);
      *(_QWORD *)(v11 + 32) = v16;
      *(_QWORD *)(v11 + 40) = v5;
      *(_QWORD *)(v11 + 48) = v6;
      *(_BYTE *)(v11 + 56) = v15;
      *(_QWORD *)(v11 + 64) = v14;
      *(_QWORD *)(v11 + 72) = v7;
      v4 += 12;
      *(_QWORD *)(v11 + 80) = v17;
      *(_QWORD *)(v11 + 88) = v8;
      --v1;
    }
    while (v1);
  }
  v12 = sub_1BC36A070(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC368E08(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  _BYTE v27[7];
  uint64_t v28;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD96C(0, v1, 0);
    v2 = v28;
    v4 = (_QWORD *)(a1 + 80);
    do
    {
      v17 = *(v4 - 5);
      v18 = *(v4 - 6);
      v16 = *(v4 - 4);
      v15 = *((_BYTE *)v4 - 24);
      v5 = v4[1];
      v23 = *v4;
      v24 = *(v4 - 2);
      v6 = v4[3];
      v7 = v4[5];
      v21 = v4[4];
      v22 = v4[2];
      v8 = v4[7];
      v9 = v4[9];
      v19 = v4[8];
      v20 = v4[6];
      v11 = *(_QWORD *)(v28 + 16);
      v10 = *(_QWORD *)(v28 + 24);
      v25 = *(v4 - 1);
      v26 = v11 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1)
        sub_1BC3BD96C(v10 > 1, v26, 1);
      *(_QWORD *)(v28 + 16) = v26;
      v12 = v28 + (v11 << 7);
      *(_QWORD *)(v12 + 32) = v18;
      *(_QWORD *)(v12 + 40) = v17;
      *(_QWORD *)(v12 + 48) = v16;
      *(_BYTE *)(v12 + 56) = v15;
      *(_DWORD *)(v12 + 60) = *(_DWORD *)&v27[3];
      *(_DWORD *)(v12 + 57) = *(_DWORD *)v27;
      *(_QWORD *)(v12 + 64) = v24;
      *(_QWORD *)(v12 + 72) = v25;
      *(_QWORD *)(v12 + 80) = v23;
      *(_QWORD *)(v12 + 88) = v5;
      *(_QWORD *)(v12 + 96) = v22;
      *(_QWORD *)(v12 + 104) = v6;
      *(_QWORD *)(v12 + 112) = v21;
      *(_QWORD *)(v12 + 120) = v7;
      *(_QWORD *)(v12 + 128) = v20;
      *(_QWORD *)(v12 + 136) = v8;
      *(_QWORD *)(v12 + 144) = v19;
      *(_QWORD *)(v12 + 152) = v9;
      v4 += 20;
      --v1;
    }
    while (v1);
  }
  v13 = sub_1BC36A340(v2);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1BC368FBC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD7E4(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 128);
    do
    {
      v6 = *(v4 - 3);
      v5 = *(v4 - 2);
      v8 = *(v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
        sub_1BC3BD7E4(v10 > 1, v9 + 1, 1);
      *(_QWORD *)(v14 + 16) = v9 + 1;
      v11 = (_QWORD *)(v14 + 32 * v9);
      v11[4] = v6;
      v11[5] = v5;
      v11[6] = v8;
      v11[7] = v7;
      v4 += 13;
      --v1;
    }
    while (v1);
  }
  v12 = sub_1BC369494(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC3690B4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD7E4(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 176);
    do
    {
      v6 = *(v4 - 3);
      v5 = *(v4 - 2);
      v8 = *(v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
        sub_1BC3BD7E4(v10 > 1, v9 + 1, 1);
      *(_QWORD *)(v14 + 16) = v9 + 1;
      v11 = (_QWORD *)(v14 + 32 * v9);
      v11[4] = v6;
      v11[5] = v5;
      v11[6] = v8;
      v11[7] = v7;
      v4 += 19;
      --v1;
    }
    while (v1);
  }
  v12 = sub_1BC369494(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC3691AC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD7E4(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 152);
    do
    {
      v6 = *(v4 - 3);
      v5 = *(v4 - 2);
      v8 = *(v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
        sub_1BC3BD7E4(v10 > 1, v9 + 1, 1);
      *(_QWORD *)(v14 + 16) = v9 + 1;
      v11 = (_QWORD *)(v14 + 32 * v9);
      v11[4] = v6;
      v11[5] = v5;
      v11[6] = v8;
      v11[7] = v7;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  v12 = sub_1BC369494(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC3692A4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD7E4(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 120);
    do
    {
      v6 = *(v4 - 3);
      v5 = *(v4 - 2);
      v8 = *(v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
        sub_1BC3BD7E4(v10 > 1, v9 + 1, 1);
      *(_QWORD *)(v14 + 16) = v9 + 1;
      v11 = (_QWORD *)(v14 + 32 * v9);
      v11[4] = v6;
      v11[5] = v5;
      v11[6] = v8;
      v11[7] = v7;
      v4 += 12;
      --v1;
    }
    while (v1);
  }
  v12 = sub_1BC369494(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC36939C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD7E4(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 184);
    do
    {
      v6 = *(v4 - 3);
      v5 = *(v4 - 2);
      v8 = *(v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
        sub_1BC3BD7E4(v10 > 1, v9 + 1, 1);
      *(_QWORD *)(v14 + 16) = v9 + 1;
      v11 = (_QWORD *)(v14 + 32 * v9);
      v11[4] = v6;
      v11[5] = v5;
      v11[6] = v8;
      v11[7] = v7;
      v4 += 20;
      --v1;
    }
    while (v1);
  }
  v12 = sub_1BC369494(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC369494(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  _QWORD *v30;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v30 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
    while (1)
    {
      v6 = *(v3 - 3);
      v5 = *(v3 - 2);
      v7 = *(v3 - 1);
      v8 = *v3;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v10 = sub_1BC558D94(v6, v5);
      v11 = v1[2];
      v12 = (v9 & 1) == 0;
      v13 = v11 + v12;
      if (__OFADD__(v11, v12))
        break;
      v14 = v9;
      if (v1[3] < v13)
      {
        sub_1BC3C3260(v13, 1);
        v1 = v30;
        v15 = sub_1BC558D94(v6, v5);
        if ((v14 & 1) != (v16 & 1))
          goto LABEL_20;
        v10 = v15;
      }
      if ((v14 & 1) != 0)
      {
        v29 = v7;
        swift_bridgeObjectRelease();
        v17 = v1[7];
        v18 = *(_QWORD **)(v17 + 8 * v10);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v17 + 8 * v10) = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v18 = sub_1BC3B5540(0, v18[2] + 1, 1, v18);
          *(_QWORD *)(v17 + 8 * v10) = v18;
        }
        v21 = v18[2];
        v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          v18 = sub_1BC3B5540((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
          *(_QWORD *)(v17 + 8 * v10) = v18;
        }
        v18[2] = v21 + 1;
        v4 = &v18[4 * v21];
        v4[4] = v6;
        v4[5] = v5;
        v4[6] = v29;
        v4[7] = v8;
      }
      else
      {
        sub_1BC36E13C(0, (unint64_t *)&qword_1EF429B20, (unint64_t *)&qword_1EF429B28);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1BC639590;
        *(_QWORD *)(v22 + 32) = v6;
        *(_QWORD *)(v22 + 40) = v5;
        *(_QWORD *)(v22 + 48) = v7;
        *(_QWORD *)(v22 + 56) = v8;
        v1[(v10 >> 6) + 8] |= 1 << v10;
        v23 = (uint64_t *)(v1[6] + 16 * v10);
        *v23 = v6;
        v23[1] = v5;
        *(_QWORD *)(v1[7] + 8 * v10) = v22;
        v24 = v1[2];
        v25 = __OFADD__(v24, 1);
        v26 = v24 + 1;
        if (v25)
          goto LABEL_19;
        v1[2] = v26;
      }
      v3 += 4;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    result = sub_1BC62D5EC();
    __break(1u);
  }
  else
  {
LABEL_17:
    v27 = sub_1BC36B7A4((uint64_t)v1);
    swift_release();
    return v27;
  }
  return result;
}

uint64_t sub_1BC3696F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v38 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = swift_bridgeObjectRetain() + 48;
    while (1)
    {
      v5 = *(_QWORD *)(v3 - 16);
      v6 = *(_QWORD *)(v3 - 8);
      v7 = *(_QWORD *)v3;
      v8 = *(_BYTE *)(v3 + 8);
      v9 = *(_QWORD *)(v3 + 24);
      v35 = *(_QWORD *)(v3 + 16);
      v36 = *(_QWORD *)(v3 + 32);
      v37 = *(_OWORD *)(v3 + 40);
      *(_QWORD *)&v39 = v5;
      *((_QWORD *)&v39 + 1) = v6;
      *(_QWORD *)&v40 = v7;
      BYTE8(v40) = v8;
      *(_QWORD *)&v41 = v35;
      *((_QWORD *)&v41 + 1) = v9;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = sub_1BC558DF8((uint64_t *)&v39);
      v12 = v1[2];
      v13 = (v10 & 1) == 0;
      v14 = v12 + v13;
      if (__OFADD__(v12, v13))
        break;
      v15 = v10;
      if (v1[3] < v14)
      {
        sub_1BC3C3590(v14, 1);
        v1 = v38;
        v16 = sub_1BC558DF8((uint64_t *)&v39);
        if ((v15 & 1) != (v17 & 1))
          goto LABEL_20;
        v11 = v16;
      }
      if ((v15 & 1) != 0)
      {
        v33 = v8;
        v34 = v2;
        swift_bridgeObjectRelease();
        v18 = v1[7];
        v19 = *(_QWORD **)(v18 + 8 * v11);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v18 + 8 * v11) = v19;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v19 = sub_1BC3B5648(0, v19[2] + 1, 1, v19);
          *(_QWORD *)(v18 + 8 * v11) = v19;
        }
        v22 = v19[2];
        v21 = v19[3];
        v23 = v22 + 1;
        if (v22 >= v21 >> 1)
        {
          v24 = sub_1BC3B5648((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
          v23 = v22 + 1;
          v19 = v24;
          *(_QWORD *)(v18 + 8 * v11) = v24;
        }
        v19[2] = v23;
        v4 = &v19[9 * v22];
        v4[4] = v5;
        v4[5] = v6;
        v4[6] = v7;
        *((_BYTE *)v4 + 56) = v33;
        v2 = v34;
        v4[8] = v35;
        v4[9] = v9;
        v4[10] = v36;
        *(_OWORD *)(v4 + 11) = v37;
      }
      else
      {
        sub_1BC36E13C(0, (unint64_t *)&qword_1EF429BD8, &qword_1EF429BE0);
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1BC639590;
        *(_QWORD *)(v25 + 32) = v5;
        *(_QWORD *)(v25 + 40) = v6;
        *(_QWORD *)(v25 + 48) = v7;
        *(_BYTE *)(v25 + 56) = v8;
        *(_QWORD *)(v25 + 64) = v35;
        *(_QWORD *)(v25 + 72) = v9;
        *(_QWORD *)(v25 + 80) = v36;
        *(_OWORD *)(v25 + 88) = v37;
        v1[(v11 >> 6) + 8] |= 1 << v11;
        v26 = (_OWORD *)(v1[6] + 48 * v11);
        v27 = v40;
        *v26 = v39;
        v26[1] = v27;
        v26[2] = v41;
        *(_QWORD *)(v1[7] + 8 * v11) = v25;
        v28 = v1[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_19;
        v1[2] = v30;
      }
      v3 += 72;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    result = sub_1BC62D5EC();
    __break(1u);
  }
  else
  {
LABEL_17:
    v31 = sub_1BC36B95C((uint64_t)v1);
    swift_release();
    return v31;
  }
  return result;
}

uint64_t sub_1BC3699E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v52 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = swift_bridgeObjectRetain();
    v4 = 0;
    v39 = v3;
    while (1)
    {
      v40 = v4;
      v41 = v2;
      v7 = *(_QWORD *)(v3 + v4 + 32);
      v8 = *(_QWORD *)(v3 + v4 + 40);
      v9 = *(_QWORD *)(v3 + v4 + 48);
      v10 = *(_BYTE *)(v3 + v4 + 56);
      v11 = *(_QWORD *)(v3 + v4 + 72);
      v12 = *(_QWORD *)(v3 + v4 + 88);
      v42 = *(_QWORD *)(v3 + v4 + 64);
      v43 = *(_QWORD *)(v3 + v4 + 80);
      v13 = *(_QWORD *)(v3 + v4 + 104);
      v45 = *(_QWORD *)(v3 + v4 + 96);
      v14 = *(_QWORD *)(v3 + v4 + 120);
      v47 = *(_QWORD *)(v3 + v4 + 112);
      v15 = *(_QWORD *)(v3 + v4 + 136);
      v49 = *(_QWORD *)(v3 + v4 + 128);
      v51 = *(_BYTE *)(v3 + v4 + 144);
      *(_QWORD *)&v53 = v7;
      *((_QWORD *)&v53 + 1) = v8;
      *(_QWORD *)&v54 = v9;
      BYTE8(v54) = v10;
      *(_QWORD *)&v55 = v42;
      *((_QWORD *)&v55 + 1) = v11;
      swift_bridgeObjectRetain_n();
      v44 = v12;
      swift_bridgeObjectRetain();
      v46 = v13;
      swift_bridgeObjectRetain();
      v48 = v14;
      swift_bridgeObjectRetain();
      v50 = v15;
      swift_bridgeObjectRetain();
      v17 = sub_1BC558DF8((uint64_t *)&v53);
      v18 = v1[2];
      v19 = (v16 & 1) == 0;
      v20 = v18 + v19;
      if (__OFADD__(v18, v19))
        break;
      v21 = v16;
      if (v1[3] < v20)
      {
        sub_1BC3C35A4(v20, 1);
        v1 = v52;
        v22 = sub_1BC558DF8((uint64_t *)&v53);
        if ((v21 & 1) != (v23 & 1))
          goto LABEL_20;
        v17 = v22;
      }
      if ((v21 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v24 = v1[7];
        v25 = *(_QWORD **)(v24 + 8 * v17);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v24 + 8 * v17) = v25;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v25 = sub_1BC3B576C(0, v25[2] + 1, 1, v25);
          *(_QWORD *)(v24 + 8 * v17) = v25;
        }
        v28 = v25[2];
        v27 = v25[3];
        v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          v30 = sub_1BC3B576C((_QWORD *)(v27 > 1), v28 + 1, 1, v25);
          v29 = v28 + 1;
          v25 = v30;
          *(_QWORD *)(v24 + 8 * v17) = v30;
        }
        v25[2] = v29;
        v5 = &v25[15 * v28];
        v5[4] = v7;
        v5[5] = v8;
        v5[6] = v9;
        *((_BYTE *)v5 + 56) = v10;
        v6 = v41;
        v5[8] = v42;
        v5[9] = v11;
        v5[10] = v43;
        v5[11] = v44;
        v5[12] = v45;
        v5[13] = v46;
        v5[14] = v47;
        v5[15] = v48;
        v5[16] = v49;
        v5[17] = v50;
        *((_BYTE *)v5 + 144) = v51;
      }
      else
      {
        sub_1BC36E13C(0, (unint64_t *)&qword_1EF429BA0, &qword_1EF429BA8);
        v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_1BC639590;
        *(_QWORD *)(v31 + 32) = v7;
        *(_QWORD *)(v31 + 40) = v8;
        *(_QWORD *)(v31 + 48) = v9;
        *(_BYTE *)(v31 + 56) = v10;
        *(_QWORD *)(v31 + 64) = v42;
        *(_QWORD *)(v31 + 72) = v11;
        *(_QWORD *)(v31 + 80) = v43;
        *(_QWORD *)(v31 + 88) = v12;
        *(_QWORD *)(v31 + 96) = v45;
        *(_QWORD *)(v31 + 104) = v13;
        *(_QWORD *)(v31 + 112) = v47;
        *(_QWORD *)(v31 + 120) = v48;
        *(_QWORD *)(v31 + 128) = v49;
        *(_QWORD *)(v31 + 136) = v50;
        *(_BYTE *)(v31 + 144) = v51;
        v1[(v17 >> 6) + 8] |= 1 << v17;
        v32 = (_OWORD *)(v1[6] + 48 * v17);
        v33 = v54;
        *v32 = v53;
        v32[1] = v33;
        v32[2] = v55;
        *(_QWORD *)(v1[7] + 8 * v17) = v31;
        v34 = v1[2];
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_19;
        v1[2] = v36;
        v6 = v41;
      }
      v3 = v39;
      v4 = v40 + 120;
      v2 = v6 - 1;
      if (!v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    result = sub_1BC62D5EC();
    __break(1u);
  }
  else
  {
LABEL_17:
    v37 = sub_1BC36BC68((uint64_t)v1);
    swift_release();
    return v37;
  }
  return result;
}

uint64_t sub_1BC369D48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v45 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (_QWORD *)(swift_bridgeObjectRetain() + 64);
    while (1)
    {
      v6 = *(v3 - 4);
      v5 = *(v3 - 3);
      v7 = *(v3 - 2);
      v8 = *((_BYTE *)v3 - 8);
      v9 = v3[1];
      v10 = v3[3];
      v38 = *v3;
      v39 = v3[2];
      v11 = v3[5];
      v41 = v3[4];
      v12 = v3[7];
      v43 = v3[6];
      *(_QWORD *)&v46 = v6;
      *((_QWORD *)&v46 + 1) = v5;
      *(_QWORD *)&v47 = v7;
      v37 = v8;
      BYTE8(v47) = v8;
      *(_QWORD *)&v48 = v38;
      *((_QWORD *)&v48 + 1) = v9;
      swift_bridgeObjectRetain_n();
      v40 = v10;
      swift_bridgeObjectRetain();
      v42 = v11;
      swift_bridgeObjectRetain();
      v44 = v12;
      swift_bridgeObjectRetain();
      v14 = sub_1BC558DF8((uint64_t *)&v46);
      v15 = v1[2];
      v16 = (v13 & 1) == 0;
      v17 = v15 + v16;
      if (__OFADD__(v15, v16))
        break;
      v18 = v13;
      if (v1[3] < v17)
      {
        sub_1BC3C35B8(v17, 1);
        v1 = v45;
        v19 = sub_1BC558DF8((uint64_t *)&v46);
        if ((v18 & 1) != (v20 & 1))
          goto LABEL_20;
        v14 = v19;
      }
      if ((v18 & 1) != 0)
      {
        v36 = v2;
        swift_bridgeObjectRelease();
        v21 = v1[7];
        v22 = *(_QWORD **)(v21 + 8 * v14);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v21 + 8 * v14) = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v22 = sub_1BC3B5888(0, v22[2] + 1, 1, v22);
          *(_QWORD *)(v21 + 8 * v14) = v22;
        }
        v25 = v22[2];
        v24 = v22[3];
        v26 = v25 + 1;
        if (v25 >= v24 >> 1)
        {
          v27 = sub_1BC3B5888((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
          v26 = v25 + 1;
          v22 = v27;
          *(_QWORD *)(v21 + 8 * v14) = v27;
        }
        v22[2] = v26;
        v4 = &v22[12 * v25];
        v4[4] = v6;
        v4[5] = v5;
        v4[6] = v7;
        *((_BYTE *)v4 + 56) = v37;
        v4[8] = v38;
        v4[9] = v9;
        v4[10] = v39;
        v4[11] = v40;
        v4[12] = v41;
        v4[13] = v42;
        v4[14] = v43;
        v4[15] = v44;
        v2 = v36;
      }
      else
      {
        sub_1BC36E13C(0, (unint64_t *)&qword_1EF429B78, &qword_1EF429B80);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_1BC639590;
        *(_QWORD *)(v28 + 32) = v6;
        *(_QWORD *)(v28 + 40) = v5;
        *(_QWORD *)(v28 + 48) = v7;
        *(_BYTE *)(v28 + 56) = v37;
        *(_QWORD *)(v28 + 64) = v38;
        *(_QWORD *)(v28 + 72) = v9;
        *(_QWORD *)(v28 + 80) = v39;
        *(_QWORD *)(v28 + 88) = v10;
        *(_QWORD *)(v28 + 96) = v41;
        *(_QWORD *)(v28 + 104) = v42;
        *(_QWORD *)(v28 + 112) = v43;
        *(_QWORD *)(v28 + 120) = v44;
        v1[(v14 >> 6) + 8] |= 1 << v14;
        v29 = (_OWORD *)(v1[6] + 48 * v14);
        v30 = v47;
        *v29 = v46;
        v29[1] = v30;
        v29[2] = v48;
        *(_QWORD *)(v1[7] + 8 * v14) = v28;
        v31 = v1[2];
        v32 = __OFADD__(v31, 1);
        v33 = v31 + 1;
        if (v32)
          goto LABEL_19;
        v1[2] = v33;
      }
      v3 += 12;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    result = sub_1BC62D5EC();
    __break(1u);
  }
  else
  {
LABEL_17:
    v34 = sub_1BC36BFB4((uint64_t)v1);
    swift_release();
    return v34;
  }
  return result;
}

uint64_t sub_1BC36A070(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v39 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = swift_bridgeObjectRetain() + 48;
    while (1)
    {
      v6 = *(_QWORD *)(v3 - 16);
      v5 = *(_QWORD *)(v3 - 8);
      v7 = *(_QWORD *)v3;
      v8 = *(_BYTE *)(v3 + 8);
      v9 = *(_QWORD *)(v3 + 24);
      v10 = *(_QWORD *)(v3 + 40);
      v36 = *(_QWORD *)(v3 + 16);
      v37 = *(_QWORD *)(v3 + 32);
      *(_QWORD *)&v40 = v6;
      *((_QWORD *)&v40 + 1) = v5;
      *(_QWORD *)&v41 = v7;
      BYTE8(v41) = v8;
      *(_QWORD *)&v42 = v36;
      *((_QWORD *)&v42 + 1) = v9;
      swift_bridgeObjectRetain_n();
      v38 = v10;
      swift_bridgeObjectRetain();
      v12 = sub_1BC558DF8((uint64_t *)&v40);
      v13 = v1[2];
      v14 = (v11 & 1) == 0;
      v15 = v13 + v14;
      if (__OFADD__(v13, v14))
        break;
      v16 = v11;
      if (v1[3] < v15)
      {
        sub_1BC3C35CC(v15, 1);
        v1 = v39;
        v17 = sub_1BC558DF8((uint64_t *)&v40);
        if ((v16 & 1) != (v18 & 1))
          goto LABEL_20;
        v12 = v17;
      }
      if ((v16 & 1) != 0)
      {
        v34 = v8;
        v35 = v2;
        swift_bridgeObjectRelease();
        v19 = v1[7];
        v20 = *(_QWORD **)(v19 + 8 * v12);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v19 + 8 * v12) = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v20 = sub_1BC3B59A8(0, v20[2] + 1, 1, v20);
          *(_QWORD *)(v19 + 8 * v12) = v20;
        }
        v23 = v20[2];
        v22 = v20[3];
        v24 = v23 + 1;
        if (v23 >= v22 >> 1)
        {
          v25 = sub_1BC3B59A8((_QWORD *)(v22 > 1), v23 + 1, 1, v20);
          v24 = v23 + 1;
          v20 = v25;
          *(_QWORD *)(v19 + 8 * v12) = v25;
        }
        v20[2] = v24;
        v4 = &v20[8 * v23];
        v4[4] = v6;
        v4[5] = v5;
        v4[6] = v7;
        *((_BYTE *)v4 + 56) = v34;
        v2 = v35;
        v4[8] = v36;
        v4[9] = v9;
        v4[10] = v37;
        v4[11] = v38;
      }
      else
      {
        sub_1BC36E13C(0, (unint64_t *)&qword_1EF429B58, &qword_1EF429B60);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1BC639590;
        *(_QWORD *)(v26 + 32) = v6;
        *(_QWORD *)(v26 + 40) = v5;
        *(_QWORD *)(v26 + 48) = v7;
        *(_BYTE *)(v26 + 56) = v8;
        *(_QWORD *)(v26 + 64) = v36;
        *(_QWORD *)(v26 + 72) = v9;
        *(_QWORD *)(v26 + 80) = v37;
        *(_QWORD *)(v26 + 88) = v38;
        v1[(v12 >> 6) + 8] |= 1 << v12;
        v27 = (_OWORD *)(v1[6] + 48 * v12);
        v28 = v41;
        *v27 = v40;
        v27[1] = v28;
        v27[2] = v42;
        *(_QWORD *)(v1[7] + 8 * v12) = v26;
        v29 = v1[2];
        v30 = __OFADD__(v29, 1);
        v31 = v29 + 1;
        if (v30)
          goto LABEL_19;
        v1[2] = v31;
      }
      v3 += 64;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    result = sub_1BC62D5EC();
    __break(1u);
  }
  else
  {
LABEL_17:
    v32 = sub_1BC36C2CC((uint64_t)v1);
    swift_release();
    return v32;
  }
  return result;
}

uint64_t sub_1BC36A340(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _QWORD *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v54 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = v2 - 1;
    for (i = 32; ; i += 128)
    {
      v6 = *(_OWORD *)(a1 + i + 16);
      v46 = *(_OWORD *)(a1 + i);
      v47 = v6;
      v7 = *(_OWORD *)(a1 + i + 80);
      v50 = *(_OWORD *)(a1 + i + 64);
      v51 = v7;
      v8 = *(_OWORD *)(a1 + i + 112);
      v52 = *(_OWORD *)(a1 + i + 96);
      v53 = v8;
      v9 = *(_OWORD *)(a1 + i + 48);
      v48 = *(_OWORD *)(a1 + i + 32);
      v49 = v9;
      v55 = v46;
      *(_QWORD *)&v56 = v6;
      BYTE8(v56) = BYTE8(v6);
      v57 = v48;
      sub_1BC36E1F4((uint64_t)&v46);
      swift_bridgeObjectRetain();
      v11 = sub_1BC558DF8((uint64_t *)&v55);
      v12 = v1[2];
      v13 = (v10 & 1) == 0;
      v14 = v12 + v13;
      if (__OFADD__(v12, v13))
        break;
      v15 = v10;
      if (v1[3] < v14)
      {
        sub_1BC3C35E0(v14, 1);
        v1 = v54;
        v16 = sub_1BC558DF8((uint64_t *)&v55);
        if ((v15 & 1) != (v17 & 1))
          goto LABEL_21;
        v11 = v16;
      }
      if ((v15 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v18 = v1[7];
        v19 = *(_QWORD **)(v18 + 8 * v11);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v18 + 8 * v11) = v19;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v19 = sub_1BC3B5AB0(0, v19[2] + 1, 1, v19);
          *(_QWORD *)(v18 + 8 * v11) = v19;
        }
        v22 = v19[2];
        v21 = v19[3];
        if (v22 >= v21 >> 1)
        {
          v19 = sub_1BC3B5AB0((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
          *(_QWORD *)(v18 + 8 * v11) = v19;
        }
        v19[2] = v22 + 1;
        v23 = &v19[16 * v22];
        v24 = v46;
        v25 = v47;
        v26 = v49;
        v23[4] = v48;
        v23[5] = v26;
        v23[2] = v24;
        v23[3] = v25;
        v27 = v50;
        v28 = v51;
        v29 = v53;
        v23[8] = v52;
        v23[9] = v29;
        v23[6] = v27;
        v23[7] = v28;
        if (!v4)
          goto LABEL_17;
      }
      else
      {
        sub_1BC36E13C(0, (unint64_t *)&qword_1EF429B30, &qword_1EF429B38);
        v30 = (_OWORD *)swift_allocObject();
        v31 = v50;
        v32 = v52;
        v33 = v53;
        v30[7] = v51;
        v30[8] = v32;
        v30[9] = v33;
        v34 = v46;
        v35 = v47;
        v30[1] = xmmword_1BC639590;
        v30[2] = v34;
        v36 = v48;
        v37 = v49;
        v30[3] = v35;
        v30[4] = v36;
        v30[5] = v37;
        v30[6] = v31;
        v1[(v11 >> 6) + 8] |= 1 << v11;
        v38 = (_OWORD *)(v1[6] + 48 * v11);
        v39 = v57;
        v40 = v55;
        v38[1] = v56;
        v38[2] = v39;
        *v38 = v40;
        *(_QWORD *)(v1[7] + 8 * v11) = v30;
        v41 = v1[2];
        v42 = __OFADD__(v41, 1);
        v43 = v41 + 1;
        if (v42)
          goto LABEL_20;
        v1[2] = v43;
        if (!v4)
        {
LABEL_17:
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
      }
      --v4;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    result = sub_1BC62D5EC();
    __break(1u);
  }
  else
  {
LABEL_18:
    v44 = sub_1BC36C5B0((uint64_t)v1);
    swift_release();
    return v44;
  }
  return result;
}

uint64_t sub_1BC36A60C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[6];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[8];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = sub_1BC62A2BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (v8
    && (v9 = (void *)v8,
        v10 = a1,
        sub_1BC36E2F0(v9, v25),
        v10,
        result = sub_1BC36EFF0((uint64_t)v25, (uint64_t)v32, &qword_1EF429B98, (uint64_t)&_s20FormattedRecordValueVN),
        (v12 = v33) != 0))
  {
    v13 = v34;
    v14 = v35;
    v15 = (uint64_t *)v32;
    v16 = v36;
    v17 = v37;
  }
  else
  {
    v18 = objc_msgSend(a1, sel_preferredDisplayName);
    v19 = sub_1BC62C680();
    v21 = v20;

    v26 = v19;
    v27 = v21;
    sub_1BC62A2B0();
    sub_1BC36E2AC();
    v22 = sub_1BC62D028();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    v15 = &v26;
    result = sub_1BC40EAC0(v22, v24, 0, 0xE000000000000000, 0, 0xE000000000000000, &v26);
    v16 = v30;
    v17 = v31;
    v13 = v28;
    v14 = v29;
    v12 = v27;
  }
  *a2 = *v15;
  a2[1] = v12;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v16;
  a2[5] = v17;
  return result;
}

uint64_t sub_1BC36A7A4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  id v73;
  void *v74;
  id v75;
  char *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90[6];
  _BYTE v91[72];
  _BYTE v92[72];
  uint64_t v93[6];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109[8];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;

  v118 = *MEMORY[0x1E0C80C00];
  v6 = sub_1BC62A2BC();
  v80 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1BC62A760();
  v9 = *(_QWORD *)(v79 - 8);
  v10 = MEMORY[0x1E0C80A78](v79);
  v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v71 - v13;
  v15 = objc_msgSend(a1, sel_chartableCodedQuantitySet);
  if (!v15
    || (v16 = v15,
        sub_1BC36EA04(v15, (unint64_t)a2, (uint64_t)v91),
        v16,
        result = sub_1BC36EFF0((uint64_t)v91, (uint64_t)v109, &qword_1EF429BC8, (uint64_t)&_s27FormattedRecordValueInRangeVN), (v18 = v110) == 0))
  {
    objc_opt_self();
    v27 = swift_dynamicCastObjCClass();
    v78 = v6;
    if (!v27)
    {
      v39 = a2;
      goto LABEL_15;
    }
    v28 = (void *)v27;
    v76 = v8;
    v29 = a1;
    v77 = v28;
    v30 = objc_msgSend(v28, sel_value);
    if (v30)
    {
      v31 = v30;
      v75 = v29;
      v32 = objc_msgSend(v30, sel_inspectableValue);

      if (v32)
      {
        v74 = a2;
        v33 = v77;
        v34 = objc_msgSend(v77, sel_diagnosticTestCodingCollection);
        v35 = objc_msgSend(v34, sel_codings);

        v73 = (id)sub_1BC34B6A0(0, &qword_1EF429BC0);
        sub_1BC62C878();

        v36 = objc_msgSend(v33, sel_referenceRanges);
        if (v36)
        {
          v37 = v36;
          sub_1BC34B6A0(0, &qword_1EF429BD0);
          v38 = sub_1BC62C878();

        }
        else
        {
          v38 = 0;
        }
        v57 = v32;
        v58 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        if (v38)
        {
          sub_1BC34B6A0(0, &qword_1EF429BD0);
          v59 = (void *)sub_1BC62C86C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v59 = 0;
        }
        v60 = v57;
        v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6498]), sel_initWithCodings_value_referenceRanges_, v58, v57, v59);

        v62 = objc_msgSend(v75, sel_sortDate);
        v63 = objc_msgSend(v62, sel_date);

        sub_1BC62A724();
        Date.medicalDateAdjustedToCurrentCalendar()((uint64_t)v14);
        v64 = *(void (**)(char *, uint64_t))(v9 + 8);
        v65 = v79;
        v72 = v64;
        v64(v12, v79);
        v66 = (void *)sub_1BC62A700();
        v100 = 0;
        v73 = v61;
        v67 = objc_msgSend(v61, sel_chartableCodedQuantitySetWithDate_error_, v66, &v100);

        if (v67)
        {
          v68 = v100;
          a2 = v74;
          sub_1BC36EA04(v67, (unint64_t)v74, (uint64_t)v92);

          v29 = v75;
          v72(v14, v65);
          result = sub_1BC36EFF0((uint64_t)v92, (uint64_t)&v100, &qword_1EF429BC8, (uint64_t)&_s27FormattedRecordValueInRangeVN);
          v18 = v101;
          v40 = v77;
          if (v101)
          {
            v19 = v102;
            v20 = v103;
            v21 = v104;
            v22 = v105;
            v23 = v106;
            v24 = v107;
            v25 = v108 & 1;
            v26 = &v100;
            goto LABEL_17;
          }
LABEL_13:
          v41 = v29;
          v42 = a2;
          sub_1BC36E2F0(v40, v93);

          sub_1BC36EFF0((uint64_t)v93, (uint64_t)&v94, &qword_1EF429B98, (uint64_t)&_s20FormattedRecordValueVN);
          v43 = v95;
          v8 = v76;
          if (v95)
          {
            v44 = v94;
            v45 = v96;
            v46 = v97;
            v47 = v98;
            v48 = v99;

LABEL_16:
            v26 = (id *)&v81;
            result = sub_1BC40EC20(v44, v43, v45, v46, v47, v48, 0, 0xE000000000000000, (uint64_t)&v81, 1u);
            v25 = v89;
            v23 = v87;
            v24 = v88;
            v21 = v85;
            v22 = v86;
            v19 = v83;
            v20 = v84;
            v18 = v82;
            goto LABEL_17;
          }
LABEL_15:
          v49 = objc_msgSend(a1, sel_preferredDisplayName);
          v50 = sub_1BC62C680();
          v51 = a2;
          v53 = v52;

          v81 = v50;
          v82 = v53;
          sub_1BC62A2B0();
          sub_1BC36E2AC();
          v54 = sub_1BC62D028();
          v56 = v55;
          (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v78);
          swift_bridgeObjectRelease();
          sub_1BC40EAC0(v54, v56, 0, 0xE000000000000000, 0, 0xE000000000000000, v90);

          v47 = v90[4];
          v48 = v90[5];
          v45 = v90[2];
          v46 = v90[3];
          v44 = v90[0];
          v43 = v90[1];
          goto LABEL_16;
        }
        v69 = v100;
        v70 = (void *)sub_1BC62A55C();

        swift_willThrow();
        v29 = v75;

        v72(v14, v65);
        a2 = v74;
LABEL_12:
        v40 = v77;
        goto LABEL_13;
      }
      v29 = v75;
    }

    goto LABEL_12;
  }
  v19 = v111;
  v20 = v112;
  v21 = v113;
  v22 = v114;
  v23 = v115;
  v24 = v116;
  v25 = v117 & 1;
  v26 = (id *)v109;
LABEL_17:
  *(_QWORD *)a3 = *v26;
  *(_QWORD *)(a3 + 8) = v18;
  *(_QWORD *)(a3 + 16) = v19;
  *(_QWORD *)(a3 + 24) = v20;
  *(_QWORD *)(a3 + 32) = v21;
  *(_QWORD *)(a3 + 40) = v22;
  *(_QWORD *)(a3 + 48) = v23;
  *(_QWORD *)(a3 + 56) = v24;
  *(_BYTE *)(a3 + 64) = v25;
  return result;
}

__n128 sub_1BC36ADF4@<Q0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  _OWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  __int128 v36;

  v6 = sub_1BC62A2BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    v11 = (void *)v10;
    v12 = *(void **)(a2 + *(int *)(_s13ConfigurationVMa() + 32));
    v13 = a1;
    v14 = v12;
    sub_1BC36B004(v11, v14, (uint64_t)v33);

  }
  else
  {
    v15 = objc_msgSend(a1, sel_preferredDisplayName);
    v16 = sub_1BC62C680();
    v18 = v17;

    *(_QWORD *)&v33[0] = v16;
    *((_QWORD *)&v33[0] + 1) = v18;
    sub_1BC62A2B0();
    sub_1BC36E2AC();
    v19 = sub_1BC62D028();
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(a1, sel_sourceRevision);
    v23 = objc_msgSend(v22, sel_source);

    v24 = objc_msgSend(v23, sel_bundleIdentifier);
    v25 = sub_1BC62C680();
    v27 = v26;

    sub_1BC40EDE0(v19, v21, 0, 0xE000000000000000, 0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t *)v33, v25, v27);
  }
  v28 = v34;
  v29 = v35;
  v31 = v33[1];
  result = (__n128)v33[2];
  v32 = v36;
  *(_OWORD *)a3 = v33[0];
  *(_OWORD *)(a3 + 16) = v31;
  *(__n128 *)(a3 + 32) = result;
  *(_QWORD *)(a3 + 48) = v28;
  *(_QWORD *)(a3 + 56) = v29;
  *(_OWORD *)(a3 + 64) = v32;
  return result;
}

__n128 sub_1BC36B004@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __n128 result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[5];

  v6 = sub_1BC62A760();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_preferredDisplayName);
  v11 = sub_1BC62C680();
  v47 = v12;
  v48 = v11;

  v13 = objc_msgSend(a1, sel_onsetDate);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v14, sel_underlyingDate);
    sub_1BC62A724();

    v16 = (void *)sub_1BC62A700();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v17 = objc_msgSend(a2, sel_stringFromDate_, v16);

    v18 = sub_1BC62C680();
    v45 = v19;
    v46 = v18;

  }
  else
  {
    v45 = 0xE000000000000000;
    v46 = 0;
  }
  v20 = objc_msgSend(a1, sel_lastOccurrenceDate);
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v21, sel_underlyingDate);
    sub_1BC62A724();

    v23 = (void *)sub_1BC62A700();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v24 = objc_msgSend(a2, sel_stringFromDate_, v23);

    v44 = sub_1BC62C680();
    v26 = v25;

  }
  else
  {
    v44 = 0;
    v26 = 0xE000000000000000;
  }
  v27 = objc_msgSend(a1, sel_recordedDate);
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v28, sel_underlyingDate);
    sub_1BC62A724();

    v30 = (void *)sub_1BC62A700();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v31 = objc_msgSend(a2, (SEL)&selRef_recordCategoryType, v30);

    v32 = sub_1BC62C680();
    v34 = v33;

  }
  else
  {
    v32 = 0;
    v34 = 0xE000000000000000;
  }
  v35 = objc_msgSend(a1, sel_sourceRevision);
  v36 = objc_msgSend(v35, sel_source);

  v37 = objc_msgSend(v36, sel_bundleIdentifier);
  v38 = sub_1BC62C680();
  v40 = v39;

  sub_1BC40EDE0(v48, v47, v46, v45, v44, v26, v32, v34, (uint64_t *)v49, v38, v40);
  v41 = v49[3];
  *(_OWORD *)(a3 + 32) = v49[2];
  *(_OWORD *)(a3 + 48) = v41;
  *(_OWORD *)(a3 + 64) = v49[4];
  result = (__n128)v49[1];
  *(_OWORD *)a3 = v49[0];
  *(__n128 *)(a3 + 16) = result;
  return result;
}

uint64_t sub_1BC36B360(void *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  char *v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  void *v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;

  v4 = sub_1BC62A2BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_1BC35B57C((uint64_t)&unk_1E74D2640);
LABEL_31:
    v39 = objc_msgSend(a1, sel_preferredDisplayName);
    v40 = sub_1BC62C680();
    v42 = v41;

    v59 = (_QWORD *)v40;
    v60 = v42;
    sub_1BC62A2B0();
    sub_1BC36E2AC();
    v43 = sub_1BC62D028();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    return v43;
  }
  v8 = sub_1BC54571C(a1);
  v9 = (_QWORD *)sub_1BC35B57C(MEMORY[0x1E0DEE9D8]);
  if (v8 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    if (v10)
      goto LABEL_4;
    goto LABEL_30;
  }
  v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10)
  {
LABEL_30:
    swift_bridgeObjectRelease_n();
    goto LABEL_31;
  }
LABEL_4:
  v46 = a1;
  v47 = v7;
  v48 = v5;
  v49 = v4;
  v51 = v8;
  v52 = v8 & 0xC000000000000001;
  v11 = 4;
  v50 = v10;
  while (1)
  {
    if (v52)
      v13 = (id)MEMORY[0x1BCCF24CC](v11 - 4, v8);
    else
      v13 = *(id *)(v8 + 8 * v11);
    v5 = (unint64_t)v13;
    a1 = (void *)(v11 - 3);
    if (__OFADD__(v11 - 4, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v14 = objc_msgSend(v13, sel_title);
    if (!v14)
      break;
    v15 = v14;
    v54 = v11 - 3;
    v16 = sub_1BC62C680();
    v18 = v17;

    v59 = (_QWORD *)v16;
    v60 = v18;
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v4 = (uint64_t)v59;
    v19 = v60;
    v53 = (id)v5;
    v20 = objc_msgSend((id)v5, sel_subtitle);
    if (!v20)
      goto LABEL_33;
    v21 = v20;
    v22 = sub_1BC62C680();
    v24 = v23;

    v59 = (_QWORD *)v22;
    v60 = v24;
    v57 = 2570;
    v58 = 0xE200000000000000;
    v55 = 8236;
    v56 = 0xE200000000000000;
    sub_1BC36E2AC();
    a1 = (void *)sub_1BC62D034();
    v26 = v25;
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v59 = v9;
    v8 = (unint64_t)v9;
    v5 = sub_1BC558D94(v4, v19);
    v29 = v9[2];
    v30 = (v28 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      goto LABEL_27;
    v7 = v28;
    if (v9[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v9 = v59;
        if ((v28 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        v8 = (unint64_t)&v59;
        sub_1BC5A52D0();
        v9 = v59;
        if ((v7 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_1BC3C2F24(v31, isUniquelyReferenced_nonNull_native);
      v8 = (unint64_t)v59;
      v32 = sub_1BC558D94(v4, v19);
      if ((v7 & 1) != (v33 & 1))
        goto LABEL_34;
      v5 = v32;
      v9 = v59;
      if ((v7 & 1) != 0)
      {
LABEL_5:
        v12 = (_QWORD *)(v9[7] + 16 * v5);
        swift_bridgeObjectRelease();
        *v12 = a1;
        v12[1] = v26;
        goto LABEL_6;
      }
    }
    v9[(v5 >> 6) + 8] |= 1 << v5;
    v34 = (uint64_t *)(v9[6] + 16 * v5);
    *v34 = v4;
    v34[1] = v19;
    v35 = (_QWORD *)(v9[7] + 16 * v5);
    *v35 = a1;
    v35[1] = v26;
    v36 = v9[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_28;
    v9[2] = v38;
    swift_bridgeObjectRetain();
LABEL_6:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v11;
    v8 = v51;
    if (v54 == v50)
    {
      swift_bridgeObjectRelease_n();
      v5 = v48;
      v4 = v49;
      a1 = v46;
      v7 = v47;
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC36B7A4(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  sub_1BC36E194();
  result = sub_1BC62D3DC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8 * i);
    if (!v16[2])
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * i);
    result = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * i + 8);
    v18 = v16[6];
    v19 = v16[7];
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v20 = 16 * i;
    v21 = (_QWORD *)(v3[6] + v20);
    *v21 = v17;
    v21[1] = result;
    v22 = (_QWORD *)(v3[7] + v20);
    *v22 = v18;
    v22[1] = v19;
    v23 = v3[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_23;
    v3[2] = v25;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
        break;
    }
LABEL_16:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 2;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_16;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BC36B95C(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  int64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  sub_1BC36EF70(0, &qword_1EF429BE8, &qword_1EF429BF0, (uint64_t)&_s23FormattedRecordMetadataVN);
  result = sub_1BC62D3DC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v37 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v33 = a1 + 64;
  v34 = (_QWORD *)result;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v35 = (unint64_t)(v6 + 63) >> 6;
  v36 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = *(_QWORD *)(v37 + 48) + 48 * i;
    v15 = *(_QWORD *)(v14 + 32);
    v16 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * i);
    v17 = *(_QWORD *)(v16 + 16);
    v43 = *(_OWORD *)v14;
    if (v17)
    {
      v38 = *(_QWORD *)(v14 + 16);
      v39 = *(_BYTE *)(v14 + 24);
      v41 = v8;
      v42 = v4;
      v45 = MEMORY[0x1E0DEE9D8];
      v40 = *(_QWORD *)(v14 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC3BD800(0, v17, 0);
      v18 = v45;
      v19 = (_OWORD *)(v16 + 88);
      do
      {
        v20 = *((_QWORD *)v19 - 1);
        v44 = *v19;
        v22 = *(_QWORD *)(v45 + 16);
        v21 = *(_QWORD *)(v45 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v22 >= v21 >> 1)
          sub_1BC3BD800(v21 > 1, v22 + 1, 1);
        *(_QWORD *)(v45 + 16) = v22 + 1;
        v23 = v45 + 24 * v22;
        *(_QWORD *)(v23 + 32) = v20;
        *(_OWORD *)(v23 + 40) = v44;
        v19 = (_OWORD *)((char *)v19 + 72);
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      v3 = v34;
      v8 = v41;
      v4 = v42;
      result = v40;
      v24 = v39;
      v25 = v38;
      v26 = v43;
    }
    else
    {
      v27 = *(_BYTE *)(v14 + 24);
      v28 = *(_QWORD *)(v14 + 16);
      result = swift_bridgeObjectRetain();
      v26 = v43;
      v25 = v28;
      v24 = v27;
      v18 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v29 = v3[6] + 48 * i;
    *(_OWORD *)v29 = v26;
    *(_QWORD *)(v29 + 16) = v25;
    *(_BYTE *)(v29 + 24) = v24;
    *(_QWORD *)(v29 + 32) = v15;
    *(_QWORD *)(v29 + 40) = result;
    *(_QWORD *)(v3[7] + 8 * i) = v18;
    v30 = v3[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v32;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_29;
    if (v11 >= v35)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v33 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v35)
        return (uint64_t)v3;
      v12 = *(_QWORD *)(v33 + 8 * v4);
      if (!v12)
        break;
    }
LABEL_16:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 2;
  if (v13 >= v35)
    return (uint64_t)v3;
  v12 = *(_QWORD *)(v33 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v35)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v33 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BC36BC68(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_1BC36EF70(0, &qword_1EF429BB0, &qword_1EF429BB8, (uint64_t)&_s27FormattedRecordValueInRangeVN);
  result = sub_1BC62D3DC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v38 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v34 = a1 + 64;
  v35 = (_QWORD *)result;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v36 = (unint64_t)(v6 + 63) >> 6;
  v37 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = *(_QWORD *)(v38 + 48) + 48 * i;
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(_BYTE *)(v14 + 24);
    v17 = *(_QWORD *)(v14 + 32);
    v18 = *(_QWORD *)(*(_QWORD *)(v38 + 56) + 8 * i);
    v19 = *(_QWORD *)(v18 + 16);
    v45 = *(_OWORD *)v14;
    if (v19)
    {
      v39 = *(_QWORD *)(v14 + 16);
      v40 = *(_BYTE *)(v14 + 24);
      v41 = *(_QWORD *)(v14 + 32);
      v43 = i;
      v44 = v4;
      v52 = MEMORY[0x1E0DEE9D8];
      v42 = *(_QWORD *)(v14 + 40);
      swift_bridgeObjectRetain();
      v46 = v18;
      swift_bridgeObjectRetain();
      sub_1BC3BD854(0, v19, 0);
      v20 = 0;
      v21 = v52;
      do
      {
        v22 = *(_QWORD *)(v46 + v20 + 88);
        v23 = *(_QWORD *)(v46 + v20 + 104);
        v50 = *(_QWORD *)(v46 + v20 + 96);
        v51 = *(_QWORD *)(v46 + v20 + 80);
        v24 = *(_QWORD *)(v46 + v20 + 120);
        v25 = *(_QWORD *)(v46 + v20 + 136);
        v48 = *(_QWORD *)(v46 + v20 + 128);
        v49 = *(_QWORD *)(v46 + v20 + 112);
        v47 = *(_BYTE *)(v46 + v20 + 144);
        v27 = *(_QWORD *)(v52 + 16);
        v26 = *(_QWORD *)(v52 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27 >= v26 >> 1)
          sub_1BC3BD854(v26 > 1, v27 + 1, 1);
        *(_QWORD *)(v52 + 16) = v27 + 1;
        v28 = v52 + 72 * v27;
        *(_QWORD *)(v28 + 32) = v51;
        *(_QWORD *)(v28 + 40) = v22;
        *(_QWORD *)(v28 + 48) = v50;
        *(_QWORD *)(v28 + 56) = v23;
        *(_QWORD *)(v28 + 64) = v49;
        *(_QWORD *)(v28 + 72) = v24;
        *(_QWORD *)(v28 + 80) = v48;
        *(_QWORD *)(v28 + 88) = v25;
        *(_BYTE *)(v28 + 96) = v47;
        v20 += 120;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      v3 = v35;
      v4 = v44;
      result = v42;
      i = v43;
      v17 = v41;
      v16 = v40;
      v15 = v39;
      v29 = v45;
    }
    else
    {
      result = swift_bridgeObjectRetain();
      v29 = v45;
      v21 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v30 = v3[6] + 48 * i;
    *(_OWORD *)v30 = v29;
    *(_QWORD *)(v30 + 16) = v15;
    *(_BYTE *)(v30 + 24) = v16;
    *(_QWORD *)(v30 + 32) = v17;
    *(_QWORD *)(v30 + 40) = result;
    *(_QWORD *)(v3[7] + 8 * i) = v21;
    v31 = v3[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v33;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_29;
    if (v11 >= v36)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v34 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v36)
        return (uint64_t)v3;
      v12 = *(_QWORD *)(v34 + 8 * v4);
      if (!v12)
        break;
    }
LABEL_16:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 2;
  if (v13 >= v36)
    return (uint64_t)v3;
  v12 = *(_QWORD *)(v34 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v36)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v34 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BC36BFB4(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_1BC36EF70(0, &qword_1EF429B88, &qword_1EF429B90, (uint64_t)&_s20FormattedRecordValueVN);
  result = sub_1BC62D3DC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v38 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v34 = a1 + 64;
  v35 = (_QWORD *)result;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v36 = (unint64_t)(v6 + 63) >> 6;
  v37 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = *(_QWORD *)(v38 + 48) + 48 * i;
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(_BYTE *)(v14 + 24);
    v17 = *(_QWORD *)(v14 + 32);
    v18 = *(_QWORD *)(*(_QWORD *)(v38 + 56) + 8 * i);
    v19 = *(_QWORD *)(v18 + 16);
    v45 = *(_OWORD *)v14;
    if (v19)
    {
      v39 = *(_QWORD *)(v14 + 16);
      v40 = *(_BYTE *)(v14 + 24);
      v41 = *(_QWORD *)(v14 + 32);
      v43 = i;
      v44 = v8;
      v48 = MEMORY[0x1E0DEE9D8];
      v42 = *(_QWORD *)(v14 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC3BD8A8(0, v19, 0);
      v20 = v48;
      v21 = (uint64_t *)(v18 + 120);
      do
      {
        v22 = *(v21 - 5);
        v23 = *(v21 - 4);
        v24 = *(v21 - 2);
        v25 = *v21;
        v46 = *(v21 - 1);
        v47 = *(v21 - 3);
        v27 = *(_QWORD *)(v48 + 16);
        v26 = *(_QWORD *)(v48 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27 >= v26 >> 1)
          sub_1BC3BD8A8(v26 > 1, v27 + 1, 1);
        *(_QWORD *)(v48 + 16) = v27 + 1;
        v28 = (_QWORD *)(v48 + 48 * v27);
        v28[4] = v22;
        v28[5] = v23;
        v28[6] = v47;
        v28[7] = v24;
        v28[8] = v46;
        v28[9] = v25;
        v21 += 12;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      v3 = v35;
      v8 = v44;
      result = v42;
      i = v43;
      v17 = v41;
      v16 = v40;
      v15 = v39;
      v29 = v45;
    }
    else
    {
      result = swift_bridgeObjectRetain();
      v29 = v45;
      v20 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v30 = v3[6] + 48 * i;
    *(_OWORD *)v30 = v29;
    *(_QWORD *)(v30 + 16) = v15;
    *(_BYTE *)(v30 + 24) = v16;
    *(_QWORD *)(v30 + 32) = v17;
    *(_QWORD *)(v30 + 40) = result;
    *(_QWORD *)(v3[7] + 8 * i) = v20;
    v31 = v3[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v33;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_29;
    if (v11 >= v36)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v34 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v36)
        return (uint64_t)v3;
      v12 = *(_QWORD *)(v34 + 8 * v4);
      if (!v12)
        break;
    }
LABEL_16:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 2;
  if (v13 >= v36)
    return (uint64_t)v3;
  v12 = *(_QWORD *)(v34 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v36)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v34 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BC36C2CC(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int64_t v42;
  __int128 v43;
  uint64_t v44;

  sub_1BC36EF70(0, &qword_1EF429B68, &qword_1EF429B70, (uint64_t)&_s15FormattedRecordVN);
  result = sub_1BC62D3DC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v37 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v33 = a1 + 64;
  v34 = (_QWORD *)result;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v35 = (unint64_t)(v6 + 63) >> 6;
  v36 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = *(_QWORD *)(v37 + 48) + 48 * i;
    v15 = *(_BYTE *)(v14 + 24);
    v16 = *(_QWORD *)(v14 + 32);
    v17 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * i);
    v18 = *(_QWORD *)(v17 + 16);
    v43 = *(_OWORD *)v14;
    if (v18)
    {
      v38 = *(_QWORD *)(v14 + 16);
      v39 = *(_QWORD *)(v14 + 32);
      v41 = v8;
      v42 = v4;
      v44 = MEMORY[0x1E0DEE9D8];
      v40 = *(_QWORD *)(v14 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC3BD8FC(0, v18, 0);
      v19 = v44;
      v20 = (uint64_t *)(v17 + 88);
      do
      {
        v21 = *(v20 - 1);
        v22 = *v20;
        v24 = *(_QWORD *)(v44 + 16);
        v23 = *(_QWORD *)(v44 + 24);
        swift_bridgeObjectRetain();
        if (v24 >= v23 >> 1)
          sub_1BC3BD8FC(v23 > 1, v24 + 1, 1);
        *(_QWORD *)(v44 + 16) = v24 + 1;
        v25 = v44 + 16 * v24;
        *(_QWORD *)(v25 + 32) = v21;
        *(_QWORD *)(v25 + 40) = v22;
        v20 += 8;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      v3 = v34;
      v8 = v41;
      v4 = v42;
      v16 = v39;
      result = v40;
      v26 = v38;
      v27 = v43;
    }
    else
    {
      v28 = *(_QWORD *)(v14 + 16);
      result = swift_bridgeObjectRetain();
      v27 = v43;
      v26 = v28;
      v19 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v29 = v3[6] + 48 * i;
    *(_OWORD *)v29 = v27;
    *(_QWORD *)(v29 + 16) = v26;
    *(_BYTE *)(v29 + 24) = v15;
    *(_QWORD *)(v29 + 32) = v16;
    *(_QWORD *)(v29 + 40) = result;
    *(_QWORD *)(v3[7] + 8 * i) = v19;
    v30 = v3[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v32;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_29;
    if (v11 >= v35)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v33 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v35)
        return (uint64_t)v3;
      v12 = *(_QWORD *)(v33 + 8 * v4);
      if (!v12)
        break;
    }
LABEL_16:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 2;
  if (v13 >= v35)
    return (uint64_t)v3;
  v12 = *(_QWORD *)(v33 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v35)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v33 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BC36C5B0(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;

  sub_1BC36EF70(0, &qword_1EF429B40, &qword_1EF429B48, (uint64_t)&_s22FormattedRecord3ValuesVN);
  result = sub_1BC62D3DC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v40 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v36 = a1 + 64;
  v37 = (_QWORD *)result;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v38 = (unint64_t)(v6 + 63) >> 6;
  v39 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = *(_QWORD *)(v40 + 48) + 48 * i;
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(_BYTE *)(v14 + 24);
    v17 = *(_QWORD *)(v14 + 32);
    v18 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * i);
    v19 = *(_QWORD *)(v18 + 16);
    v48 = *(_OWORD *)v14;
    if (v19)
    {
      v41 = *(_QWORD *)(v14 + 16);
      v42 = *(_BYTE *)(v14 + 24);
      v43 = *(_QWORD *)(v14 + 32);
      v45 = i;
      v46 = v8;
      v47 = v4;
      v55 = MEMORY[0x1E0DEE9D8];
      v44 = *(_QWORD *)(v14 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = v18;
      sub_1BC3BD950(0, v19, 0);
      v21 = v55;
      v22 = (uint64_t *)(v20 + 152);
      do
      {
        v23 = *(v22 - 8);
        v24 = *(v22 - 6);
        v52 = *(v22 - 7);
        v53 = *(v22 - 9);
        v25 = *(v22 - 4);
        v26 = *(v22 - 2);
        v50 = *(v22 - 3);
        v51 = *(v22 - 5);
        v27 = *v22;
        v49 = *(v22 - 1);
        v29 = *(_QWORD *)(v55 + 16);
        v28 = *(_QWORD *)(v55 + 24);
        v54 = v29 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v29 >= v28 >> 1)
          sub_1BC3BD950(v28 > 1, v54, 1);
        v22 += 16;
        *(_QWORD *)(v55 + 16) = v54;
        v30 = (_QWORD *)(v55 + 80 * v29);
        v30[4] = v53;
        v30[5] = v23;
        v30[6] = v52;
        v30[7] = v24;
        v30[8] = v51;
        v30[9] = v25;
        v30[10] = v50;
        v30[11] = v26;
        v30[12] = v49;
        v30[13] = v27;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      v3 = v37;
      v8 = v46;
      v4 = v47;
      result = v44;
      i = v45;
      v17 = v43;
      v16 = v42;
      v15 = v41;
      v31 = v48;
    }
    else
    {
      result = swift_bridgeObjectRetain();
      v31 = v48;
      v21 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v39 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v32 = v3[6] + 48 * i;
    *(_OWORD *)v32 = v31;
    *(_QWORD *)(v32 + 16) = v15;
    *(_BYTE *)(v32 + 24) = v16;
    *(_QWORD *)(v32 + 32) = v17;
    *(_QWORD *)(v32 + 40) = result;
    *(_QWORD *)(v3[7] + 8 * i) = v21;
    v33 = v3[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v35;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_29;
    if (v11 >= v38)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v36 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v38)
        return (uint64_t)v3;
      v12 = *(_QWORD *)(v36 + 8 * v4);
      if (!v12)
        break;
    }
LABEL_16:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 2;
  if (v13 >= v38)
    return (uint64_t)v3;
  v12 = *(_QWORD *)(v36 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v38)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v36 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1BC36C904(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t *__return_ptr, id *, _QWORD *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  id v48[2];
  uint64_t v49;
  unint64_t v50;
  _QWORD v51[12];
  void *v52;

  v6 = v5;
  v8 = -1 << *(_BYTE *)(a1 + 32);
  v9 = ~v8;
  v10 = *(_QWORD *)(a1 + 64);
  v11 = -v8;
  v51[4] = a1;
  v51[5] = a1 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v51[6] = v9;
  v51[7] = 0;
  v51[8] = v12 & v10;
  v51[9] = a2;
  v51[10] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  v13 = sub_1BC36CCEC();
  if (!v14)
  {
LABEL_20:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BC3583F4();
    swift_release();
    return;
  }
  v17 = v13;
  v18 = v14;
  v19 = v15;
  v20 = v16;
  while (1)
  {
    v51[2] = v17;
    v51[3] = v18;
    v51[0] = v19;
    v51[1] = v20;
    v30 = *(_QWORD **)v6;
    v32 = sub_1BC558D94(v17, v18);
    v33 = v30[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      sub_1BC62D5EC();
      __break(1u);
      goto LABEL_27;
    }
    v36 = v31;
    if (v30[3] < v35)
      break;
    if ((a4 & 1) != 0)
    {
      if ((v31 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1BC5A52D0();
      if ((v36 & 1) != 0)
        goto LABEL_16;
    }
LABEL_6:
    v21 = *(_QWORD **)v6;
    *(_QWORD *)(*(_QWORD *)v6 + 8 * (v32 >> 6) + 64) |= 1 << v32;
    v22 = (uint64_t *)(v21[6] + 16 * v32);
    *v22 = v17;
    v22[1] = v18;
    v23 = (_QWORD *)(v21[7] + 16 * v32);
    *v23 = v19;
    v23[1] = v20;
    v24 = v21[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_25;
    v21[2] = v26;
LABEL_8:
    v17 = sub_1BC36CCEC();
    v18 = v27;
    v19 = v28;
    v20 = v29;
    a4 = 1;
    if (!v27)
      goto LABEL_20;
  }
  sub_1BC3C2F24(v35, a4 & 1);
  v37 = sub_1BC558D94(v17, v18);
  if ((v36 & 1) != (v38 & 1))
    goto LABEL_26;
  v32 = v37;
  if ((v36 & 1) == 0)
    goto LABEL_6;
LABEL_16:
  v39 = *(_QWORD **)v6;
  v40 = *(_QWORD *)(*(_QWORD *)v6 + 56) + 16 * v32;
  v41 = *(void **)(v40 + 8);
  v48[0] = *(id *)v40;
  v48[1] = v41;
  swift_bridgeObjectRetain();
  v42 = v52;
  a5(&v49, v48, v51);
  if (!v42)
  {
    v52 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 = (_QWORD *)(v39[7] + 16 * v32);
    v44 = v49;
    v45 = v50;
    swift_bridgeObjectRelease();
    *v43 = v44;
    v43[1] = v45;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  v48[0] = v42;
  v46 = v42;
  sub_1BC35E44C();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC3583F4();
    swift_release();

    return;
  }
LABEL_27:
  v49 = 0;
  v50 = 0xE000000000000000;
  sub_1BC62D1D8();
  sub_1BC62C764();
  sub_1BC62D2D4();
  sub_1BC62C764();
  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC36CCAC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC36CCB8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC36CCEC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD v23[4];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = 16 * v6;
    v8 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v9 = *v8;
    v10 = v8[1];
    v11 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v7);
    v12 = *v11;
    v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    v14 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    v23[2] = v12;
    v23[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(&v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      v18 = v0[1];
      v19 = *(_QWORD *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        v5 = (v19 - 1) & v19;
        v6 = __clz(__rbit64(v19)) + (v16 << 6);
        v4 = v16;
        goto LABEL_3;
      }
      v20 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        v19 = *(_QWORD *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          v16 = v20;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          v19 = *(_QWORD *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            v16 = v3 + 3;
            goto LABEL_7;
          }
          v20 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            v19 = *(_QWORD *)(v18 + 8 * v20);
            if (v19)
              goto LABEL_10;
            v16 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              v19 = *(_QWORD *)(v18 + 8 * v16);
              if (v19)
                goto LABEL_7;
              v4 = v17 - 1;
              v21 = v3 + 6;
              while (v17 != v21)
              {
                v19 = *(_QWORD *)(v18 + 8 * v21++);
                if (v19)
                {
                  v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_1BC36CE88(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, id *, _QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  char v21;
  uint64_t result;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = v4;
  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = (uint64_t *)(a3 + 80);
    v10 = a1;
    while (1)
    {
      v29 = v5;
      v11 = *(v9 - 5);
      v12 = *(v9 - 3);
      v25 = *(v9 - 4);
      v26 = *(v9 - 6);
      v24 = *((_BYTE *)v9 - 8);
      v13 = *v9;
      v14 = *(v9 - 2);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v27 = v12;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v16 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v16 = sub_1BC3B540C(0, a1[2] + 1, 1, a1);
      v18 = v16[2];
      v17 = v16[3];
      v28 = v7;
      if (v18 >= v17 >> 1)
        v16 = sub_1BC3B540C((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
      v16[2] = v18 + 1;
      v19 = &v16[6 * v18];
      v19[4] = v26;
      v19[5] = v11;
      v19[6] = v25;
      v19[7] = v27;
      v19[8] = v14;
      *((_BYTE *)v19 + 72) = v24;
      v20 = v16;
      swift_bridgeObjectRetain();
      v21 = swift_isUniquelyReferenced_nonNull_native();
      sub_1BC36C904(v13, (uint64_t)sub_1BC36CCB8, 0, v21, a4);
      if (v29)
        break;
      v5 = 0;
      v9 += 7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v20;
      a1 = v20;
      v7 = v28 - 1;
      if (v28 == 1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v10;
      }
    }
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1BC36D0DC(void *a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char v46;
  void (*v47)(char *, uint64_t);
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v57 - v6;
  v8 = sub_1BC62A760();
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC62A8C8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1EF435770, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], v4);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v57 - v15;
  v17 = sub_1BC62A478();
  v63 = *(_QWORD *)(v17 - 8);
  v64 = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v58 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v57 - v20;
  v22 = objc_msgSend(a1, sel_dateOfBirthComponents);
  sub_1BC62A418();

  v23 = sub_1BC62A8D4();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v60 = a2;
  v25(v16, a2, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v16, 0, 1, v23);
  sub_1BC62A46C();
  v26 = *MEMORY[0x1E0CB1158];
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v27(v13, v26, v10);
  v28 = sub_1BC62A454();
  LOBYTE(a2) = v29;
  v30 = *(void (**)(char *, uint64_t))(v11 + 8);
  v30(v13, v10);
  if ((a2 & 1) == 0 && v28 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v27(v13, *MEMORY[0x1E0CB1160], v10);
    v31 = sub_1BC62A454();
    v33 = v32;
    v30(v13, v10);
    if ((v33 & 1) == 0 && v31 != 0x7FFFFFFFFFFFFFFFLL)
    {
      v27(v13, *MEMORY[0x1E0CB1130], v10);
      v34 = sub_1BC62A454();
      v36 = v35;
      v30(v13, v10);
      if ((v36 & 1) == 0 && v34 != 0x7FFFFFFFFFFFFFFFLL)
      {
        sub_1BC62A430();
        v37 = v61;
        v38 = v62;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v7, 1, v62) == 1)
        {
          sub_1BC36D71C((uint64_t)v7);
        }
        else
        {
          v39 = v59;
          (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v59, v7, v38);
          sub_1BC357158(0, &qword_1EF429B18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v40 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
          v41 = swift_allocObject();
          *(_OWORD *)(v41 + 16) = xmmword_1BC639590;
          v27((char *)(v41 + v40), v26, v10);
          sub_1BC5237DC(v41);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          v42 = _s13ConfigurationVMa();
          v43 = v60;
          v44 = v58;
          sub_1BC62A850();
          swift_bridgeObjectRelease();
          v45 = sub_1BC62A43C();
          LOBYTE(v41) = v46;
          v47 = *(void (**)(char *, uint64_t))(v63 + 8);
          v47(v44, v64);
          if ((v41 & 1) == 0)
          {
            v48 = *(void **)(v43 + *(int *)(v42 + 24));
            v49 = (void *)sub_1BC62A700();
            v50 = objc_msgSend(v48, sel_stringFromDate_, v49);

            v51 = sub_1BC62C680();
            v53 = v52;

            v54 = sub_1BC4B3D9C(v51, v53, v45, v43 + *(int *)(v42 + 36));
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v62);
            goto LABEL_15;
          }
          (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v62);
        }
      }
    }
  }
  if (qword_1ED6A4888 != -1)
    swift_once();
  v55 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v54 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v47 = *(void (**)(char *, uint64_t))(v63 + 8);
LABEL_15:
  v47(v21, v64);
  return v54;
}

uint64_t sub_1BC36D664@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *a1;
  v6 = a1[1];
  sub_1BC34B508(0, &qword_1EF429B08, (uint64_t)&_s13HealthKitDataVN, (uint64_t (*)(_QWORD, uint64_t))_s7PDFDataVMa);
  result = sub_1BC4B3FCC(v5, v6, v4 + *(int *)(v7 + 28));
  *a2 = result;
  a2[1] = v9;
  return result;
}

uint64_t sub_1BC36D6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s13ConfigurationVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC36D71C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC36D770(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1BC36D780()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC36D7A4(void *a1)
{
  uint64_t v1;

  return sub_1BC36B360(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BC36D7AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_1BC36D7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s13ConfigurationVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC36D820(uint64_t a1)
{
  return sub_1BC36DC2C(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC366E0C);
}

uint64_t sub_1BC36D82C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC36A7A4(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BC36D834()
{
  swift_release();
  return swift_deallocObject();
}

__n128 sub_1BC36D858@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __n128 result;
  _OWORD v5[4];
  char v6;

  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v5);
  v3 = v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(_OWORD *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 64) = v6;
  result = (__n128)v5[1];
  *(_OWORD *)a1 = v5[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BC36D8AC(uint64_t a1)
{
  return sub_1BC36DC2C(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC367300);
}

uint64_t sub_1BC36D8B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC36A60C(a1, a2);
}

double sub_1BC36D8C0@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;

  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v5);
  v3 = v5[1];
  *a1 = v5[0];
  a1[1] = v3;
  result = *(double *)&v6;
  a1[2] = v6;
  return result;
}

uint64_t sub_1BC36D904(uint64_t a1)
{
  return sub_1BC36DC2C(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3678CC);
}

uint64_t sub_1BC36D914(uint64_t a1)
{
  return sub_1BC36DC2C(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC367E1C);
}

uint64_t sub_1BC36D920()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)_s13ConfigurationVMa();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1BC62A8D4();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = v3 + v1[5];
  v7 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  v8 = v3 + v1[9];
  v9 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  v5(v3 + v1[12], v4);
  return swift_deallocObject();
}

double sub_1BC36DA3C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  double result;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s13ConfigurationVMa() - 8) + 80);
  *(_QWORD *)&result = sub_1BC36ADF4(a1, v2 + ((v5 + 16) & (unint64_t)~v5), a2).n128_u64[0];
  return result;
}

__n128 sub_1BC36DA88@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __n128 result;
  _OWORD v5[5];

  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v5);
  v3 = v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(_OWORD *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 64) = v5[4];
  result = (__n128)v5[1];
  *(_OWORD *)a1 = v5[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)_s13ConfigurationVMa();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1BC62A8D4();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = v3 + v1[5];
  v7 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  v8 = v3 + v1[9];
  v9 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  v5(v3 + v1[12], v4);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC36DC20(uint64_t a1)
{
  return sub_1BC36DC2C(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3682DC);
}

uint64_t sub_1BC36DC2C(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(_s13ConfigurationVMa() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  return a2(a1, v2 + v5, *(unsigned __int8 *)(v2 + v6), *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFFF8) + v2 + 8), *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFFF8) + v2 + 16), *(_QWORD *)(v2 + (((v6 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + (((v6 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1BC36DCA4(uint64_t a1)
{
  uint64_t v2;

  v2 = _s13ConfigurationVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC36DCE0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(unint64_t, _QWORD, uint64_t);
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62A478();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - v8;
  v10 = sub_1BC62A760();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v40 - v15;
  v17 = objc_msgSend(a1, sel_meaningfulDate);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_8;
  }
  v18 = v17;
  v42 = v3;
  sub_1BC62A724();

  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v9, v14, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_8:
    sub_1BC36D71C((uint64_t)v9);
    return 0;
  }
  v40 = v2;
  v41 = v5;
  v19(v16, v9, v10);
  _s13ConfigurationVMa();
  sub_1BC357158(0, &qword_1EF429B18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v20 = sub_1BC62A8C8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 72);
  v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BC6398E0;
  v25 = v24 + v23;
  v26 = *(void (**)(unint64_t, _QWORD, uint64_t))(v21 + 104);
  v26(v25, *MEMORY[0x1E0CB1158], v20);
  v26(v25 + v22, *MEMORY[0x1E0CB1160], v20);
  v26(v25 + 2 * v22, *MEMORY[0x1E0CB1130], v20);
  sub_1BC5237DC(v24);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v27 = v44;
  sub_1BC62A85C();
  swift_bridgeObjectRelease();
  v28 = sub_1BC62A43C();
  if ((v29 & 1) != 0 || (v30 = v28, sub_1BC62A448(), (v31 & 1) != 0) || (sub_1BC62A424(), (v32 & 1) != 0))
  {
    v33 = v43;
    sub_1BC62BAF8();
    v34 = sub_1BC62BB28();
    v35 = sub_1BC62CAAC();
    v36 = os_log_type_enabled(v34, v35);
    v37 = v41;
    if (v36)
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_1BC30A000, v34, v35, "[PDF]: Missing required date components.", v38, 2u);
      MEMORY[0x1BCCF36A8](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v40);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v37);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v41);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  return v30;
}

void sub_1BC36E13C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC36F18C(255, a3);
    v4 = sub_1BC62D538();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC36E194()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429798)
  {
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429798);
  }
}

uint64_t sub_1BC36E1F4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1BC36E268()
{
  unint64_t result;

  result = qword_1EF429B50;
  if (!qword_1EF429B50)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E7F4, &_s18FormattedRecordKeyVN);
    atomic_store(result, (unint64_t *)&qword_1EF429B50);
  }
  return result;
}

unint64_t sub_1BC36E2AC()
{
  unint64_t result;

  result = qword_1EF4312B0;
  if (!qword_1EF4312B0)
  {
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EF4312B0);
  }
  return result;
}

uint64_t sub_1BC36E2F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[6];

  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_value);
  if (v8)
  {
    v9 = v8;
    if (!objc_msgSend(v8, sel_collectionType))
    {
      v10 = objc_msgSend(v9, sel_inspectableValue);
      if (v10)
      {
        v11 = v10;
        if (objc_msgSend(v10, sel_valueType) == (id)6)
        {
          v12 = objc_msgSend(v11, sel_codedQuantityValue);
          if (v12)
          {
            v13 = v12;
            v14 = objc_msgSend(v12, sel_rawValue);
            v15 = sub_1BC62C680();
            v17 = v16;

LABEL_12:
            v29 = objc_msgSend(a1, sel_preferredDisplayName);
            v30 = sub_1BC62C680();
            v32 = v31;

            v33 = objc_msgSend(v9, sel_unitString);
            v34 = sub_1BC62C680();
            v36 = v35;

            sub_1BC40EAC0(v30, v32, v15, v17, v34, v36, v37);
            v22 = v37[0];
            v23 = v37[1];
            v24 = v37[2];
            v25 = v37[3];
            v26 = v37[4];
            v27 = v37[5];

            result = swift_bridgeObjectRelease();
            goto LABEL_13;
          }
        }

      }
    }
    v11 = objc_msgSend(v9, sel_displayString);
    v15 = sub_1BC62C680();
    v17 = v28;
    goto LABEL_12;
  }
  sub_1BC62BAF8();
  v18 = sub_1BC62BB28();
  v19 = sub_1BC62CAAC();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1BC30A000, v18, v19, "[PDF]: Failed to format value for a record.", v20, 2u);
    MEMORY[0x1BCCF36A8](v20, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
LABEL_13:
  *a2 = v22;
  a2[1] = v23;
  a2[2] = v24;
  a2[3] = v25;
  a2[4] = v26;
  a2[5] = v27;
  return result;
}

void *sub_1BC36E594(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD v30[2];

  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((HKChartableCodedQuantity.representsSystolicBloodPressure.getter() & 1) == 0 || !a2)
  {
LABEL_14:
    v24 = objc_msgSend(a1, sel_originalCodedQuantity);
    v23 = v24;
    if (v24)
    {
      v25 = objc_msgSend(v24, sel_rawValue);

      v23 = (void *)sub_1BC62C680();
    }
    return v23;
  }
  v8 = a2;
  if ((HKChartableCodedQuantity.representsDiastolicBloodPressure.getter() & 1) == 0)
  {

    goto LABEL_14;
  }
  v9 = objc_msgSend(a1, sel_originalCodedQuantity);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_rawValue);

    v12 = sub_1BC62C680();
    v14 = v13;

    v15 = objc_msgSend(v8, sel_originalCodedQuantity);
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v15, sel_rawValue);

      v18 = sub_1BC62C680();
      v20 = v19;

      v21 = HIBYTE(v14) & 0xF;
      if ((v14 & 0x2000000000000000) == 0)
        v21 = v12 & 0xFFFFFFFFFFFFLL;
      if (v21)
      {
        v22 = HIBYTE(v20) & 0xF;
        if ((v20 & 0x2000000000000000) == 0)
          v22 = v18 & 0xFFFFFFFFFFFFLL;
        if (v22)
        {
          v30[0] = v12;
          v30[1] = v14;
          swift_bridgeObjectRetain();
          sub_1BC62C764();
          sub_1BC62C764();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (void *)v30[0];
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_1BC62BAF8();
  v26 = sub_1BC62BB28();
  v27 = sub_1BC62CAAC();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_1BC30A000, v26, v27, "[PDF]: Failed to format blood pressure for a record.", v28, 2u);
    MEMORY[0x1BCCF36A8](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

uint64_t sub_1BC36E844(void *a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = objc_msgSend(a1, sel_rangeLow);
  if (v4)
  {
    v5 = a2;
    v6 = v4;
    v7 = objc_msgSend(v5, sel_stringFromNumber_, v6);
    if (v7)
    {
      v8 = v7;
      v9 = sub_1BC62C680();
      v4 = v10;

    }
    else
    {

      v9 = 0;
      v4 = 0;
    }
  }
  else
  {
    v9 = 0;
  }
  v11 = objc_msgSend(a1, sel_rangeHigh);
  if (!v11)
  {
LABEL_12:
    v17 = 0;
    v19 = 0;
    if (!v4)
      goto LABEL_9;
LABEL_13:
    if (v19)
    {
      v20 = sub_1BC4B41E4(v9, (uint64_t)v4, v17, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = sub_1BC4B43CC(v9, (uint64_t)v4);
    }
    goto LABEL_16;
  }
  v12 = v11;
  v13 = a2;
  v14 = v12;
  v15 = objc_msgSend(v13, sel_stringFromNumber_, v14);
  if (!v15)
  {

    goto LABEL_12;
  }
  v16 = v15;
  v17 = sub_1BC62C680();
  v19 = v18;

  if (v4)
    goto LABEL_13;
LABEL_9:
  if (!v19)
    return 0;
  v20 = sub_1BC4B459C(v17, v19);
LABEL_16:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1BC36EA04@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  unint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  _QWORD v69[8];
  char v70;

  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_quantities);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF432A70);
  v11 = sub_1BC62C878();

  v12 = objc_msgSend(a1, sel_codings);
  sub_1BC34B6A0(0, &qword_1EF429BC0);
  v13 = sub_1BC62C878();

  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_3;
LABEL_41:
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_41;
LABEL_3:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v15 = (id)MEMORY[0x1BCCF24CC](0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_49;
    }
    v15 = *(id *)(v13 + 32);
  }
  v16 = v15;
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v16, sel_displayString);

  if (!v17)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  v67 = v7;
  v68 = (void *)a2;
  v66 = sub_1BC62C680();
  v14 = v18;

  a2 = v11 >> 62;
  if (!(v11 >> 62))
  {
    v19 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v19)
      goto LABEL_9;
LABEL_50:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v7 = v67;
    goto LABEL_43;
  }
LABEL_49:
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v19 = result;
  if (!result)
    goto LABEL_50;
LABEL_9:
  v65 = v11 & 0xC000000000000001;
  if ((v11 & 0xC000000000000001) != 0)
  {
    v21 = (id)MEMORY[0x1BCCF24CC](0, v11);
  }
  else
  {
    if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_53;
    }
    v21 = *(id *)(v11 + 32);
  }
  v22 = v21;
  result = swift_bridgeObjectRelease();
  if ((v19 & 0x8000000000000000) == 0)
  {
    v63 = v22;
    v64 = v14;
    if (!a2)
    {
      v23 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v23)
        goto LABEL_53;
      goto LABEL_19;
    }
    swift_bridgeObjectRetain();
    v24 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
    if (v24 >= 1)
    {
      swift_bridgeObjectRetain();
      v23 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
LABEL_19:
      if (v23 < v19)
      {
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      if (v65 && v19 != 1)
      {
        result = 1;
        do
        {
          v25 = result + 1;
          sub_1BC62D1F0();
          result = v25;
        }
        while (v19 != v25);
      }
      if (a2)
      {
        swift_bridgeObjectRetain();
        sub_1BC62D3C4();
        v26 = v28;
        v27 = v29;
        v31 = v30;
        result = swift_bridgeObjectRelease_n();
        v19 = v31 >> 1;
      }
      else
      {
        v26 = (v11 & 0xFFFFFFFFFFFFFF8) + 32;
        v27 = 1;
      }
      v32 = v68;
      if (v27 == v19)
      {
        v33 = 0;
      }
      else
      {
        if (v27 >= v19)
        {
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        v33 = *(void **)(v26 + 8 * v27);
        v34 = v33;
      }
      swift_unknownObjectRelease();
      v35 = v63;
      v36 = sub_1BC36E594(v63, v33);
      v38 = v37;

      if (v38)
      {
        v39 = objc_msgSend(a1, sel_compatibleUnit);
        v40 = sub_1BC611EC4(v39);
        v42 = v41;

        if (v42)
          v43 = v40;
        else
          v43 = 0;
        if (v42)
          v44 = v42;
        else
          v44 = 0xE000000000000000;
        v45 = sub_1BC36E844(v35, v32);
        v47 = v46;
        v68 = (void *)v46;
        v48 = objc_msgSend(v35, sel_isInRange);
        sub_1BC40EC20(v66, v64, (uint64_t)v36, v38, v43, v44, v45, v47, (uint64_t)v69, v48);
        v49 = v69[0];
        v50 = v69[1];
        v51 = v69[2];
        v52 = v69[3];
        v53 = v35;
        v54 = v69[4];
        v55 = v69[5];
        v56 = v69[6];
        v57 = v69[7];
        v58 = v70;

        result = swift_bridgeObjectRelease();
LABEL_46:
        *(_QWORD *)a3 = v49;
        *(_QWORD *)(a3 + 8) = v50;
        *(_QWORD *)(a3 + 16) = v51;
        *(_QWORD *)(a3 + 24) = v52;
        *(_QWORD *)(a3 + 32) = v54;
        *(_QWORD *)(a3 + 40) = v55;
        *(_QWORD *)(a3 + 48) = v56;
        *(_QWORD *)(a3 + 56) = v57;
        *(_BYTE *)(a3 + 64) = v58;
        return result;
      }
      swift_bridgeObjectRelease();

      v7 = v67;
LABEL_43:
      sub_1BC62BAF8();
      v59 = sub_1BC62BB28();
      v60 = sub_1BC62CAAC();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v61 = 0;
        _os_log_impl(&dword_1BC30A000, v59, v60, "[PDF]: Failed to format quantities for a record.", v61, 2u);
        MEMORY[0x1BCCF36A8](v61, -1, -1);
      }

      result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v49 = 0;
      v50 = 0;
      v51 = 0;
      v52 = 0;
      v54 = 0;
      v55 = 0;
      v56 = 0;
      v57 = 0;
      v58 = 0;
      goto LABEL_46;
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
LABEL_56:
  __break(1u);
  return result;
}

void sub_1BC36EF70(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC34B508(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC36E268();
    v5 = sub_1BC62D40C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC36EFF0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1BC34B508(0, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t objectdestroy_38Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)_s13ConfigurationVMa();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 17) & ~v2);
  v4 = sub_1BC62A8D4();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = v3 + v1[5];
  v7 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  v8 = v3 + v1[9];
  v9 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  v5(v3 + v1[12], v4);
  swift_release();
  return swift_deallocObject();
}

void sub_1BC36F18C(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

id sub_1BC36F1F0(void *a1, void *a2)
{
  char *v2;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  objc_super v13;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI44ImprovementDataCollectionOptInViewController_onboardingSession] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI44ImprovementDataCollectionOptInViewController_account] = a2;
  v4 = qword_1ED6A4888;
  v5 = a1;
  v6 = a2;
  if (v4 != -1)
    swift_once();
  v7 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v9 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v10 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for ImprovementDataCollectionOptInViewController();
  v11 = objc_msgSendSuper2(&v13, sel_initWithTitle_detailText_icon_contentLayout_, v8, v10, 0, 2, 0xE000000000000000);

  return v11;
}

void sub_1BC36F3CC()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  objc_super v28;

  v1 = v0;
  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for ImprovementDataCollectionOptInViewController();
  objc_msgSendSuper2(&v28, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v3 = v2;
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  objc_msgSend(v1, sel_setModalInPresentation_, objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI44ImprovementDataCollectionOptInViewController_account], sel_canEnableSharingToProvider));
  v6 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v6, sel_setHidesBackButton_, 1);

  if (qword_1ED6A3198 != -1)
    swift_once();
  v7 = (id)qword_1ED6A42A0;
  sub_1BC4E371C(8, 0, 0);

  v8 = objc_msgSend((id)objc_opt_self(), sel_accessoryButton);
  v9 = objc_msgSend(v4, sel_systemBlueColor);
  objc_msgSend(v8, sel_setTintColor_, v9);

  if (qword_1ED6A4888 != -1)
    swift_once();
  v10 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v11 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setTitle_forState_, v11, 0, 0xE000000000000000);

  objc_msgSend(v8, sel_addTarget_action_forControlEvents_, v1, sel_accessoryButtonTapped, 64);
  v12 = v8;
  v13 = (void *)sub_1BC62C86C();
  v14 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v14)
    goto LABEL_11;
  sub_1BC62C680();

  v15 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setAccessibilityIdentifier_, v15);

  v16 = objc_msgSend(v1, sel_headerView);
  objc_msgSend(v16, sel_addAccessoryButton_, v12);

  v17 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v18 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v19 = (void *)sub_1BC62C86C();
  v20 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v20)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1BC62C680();

  v21 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();

  v22 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v23 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_1BC62C86C();
  v25 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v25)
  {
    sub_1BC62C680();

    v26 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v27 = objc_msgSend(v1, sel_hxui_addSecondaryFooterButtonWithTitle_bold_accessibilityIdentifier_, v23, 0, v26, 0xE000000000000000);

    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_1BC36FA34()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t aBlock;
  uint64_t v22;
  void *v23;
  void *v24;
  void (*v25)();
  uint64_t v26;

  v1 = sub_1BC62C47C();
  v20 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC62C4AC();
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = *MEMORY[0x1E0D28E40];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v0;
  v25 = (void (*)())sub_1BC3707AC;
  v26 = v9;
  aBlock = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1BC3EFECC;
  v24 = &block_descriptor_13;
  v10 = _Block_copy(&aBlock);
  v11 = v0;
  swift_release();
  objc_msgSend(v7, sel_setUserDidAccept_currentAgreement_completion_, 1, v8, v10);
  _Block_release(v10);
  if (qword_1ED6A3198 != -1)
    swift_once();
  v12 = (id)qword_1ED6A42A0;
  sub_1BC4E371C(9, 0, 0);

  v13 = (id)qword_1ED6A42A0;
  sub_1BC4E5A28();

  sub_1BC35A280();
  v14 = (void *)sub_1BC62CC74();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v11;
  v25 = sub_1BC37078C;
  v26 = v15;
  aBlock = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1BC39BE70;
  v24 = &block_descriptor_19;
  v16 = _Block_copy(&aBlock);
  v17 = v11;
  swift_release();
  sub_1BC62C494();
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC370738();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v6, v3, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v19);
}

uint64_t sub_1BC36FD70()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t aBlock;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;

  v1 = sub_1BC62C47C();
  v20 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC62C4AC();
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = *MEMORY[0x1E0D28E40];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v0;
  v25 = sub_1BC370718;
  v26 = v9;
  aBlock = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1BC3EFECC;
  v24 = &block_descriptor_4;
  v10 = _Block_copy(&aBlock);
  v11 = v0;
  swift_release();
  objc_msgSend(v7, sel_setUserDidAccept_currentAgreement_completion_, 0, v8, v10);
  _Block_release(v10);
  if (qword_1ED6A3198 != -1)
    swift_once();
  v12 = (id)qword_1ED6A42A0;
  sub_1BC4E371C(10, 0, 0);

  v13 = (id)qword_1ED6A42A0;
  sub_1BC4E5A28();

  sub_1BC35A280();
  v14 = (void *)sub_1BC62CC74();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v11;
  v25 = sub_1BC3707BC;
  v26 = v15;
  aBlock = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1BC39BE70;
  v24 = &block_descriptor_6;
  v16 = _Block_copy(&aBlock);
  v17 = v11;
  swift_release();
  sub_1BC62C494();
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC370738();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v6, v3, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v19);
}

void sub_1BC3701B4()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI44ImprovementDataCollectionOptInViewController_account];
  if (objc_msgSend(v2, sel_canEnableSharingToProvider))
  {
    v3 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI44ImprovementDataCollectionOptInViewController_onboardingSession];
    objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingInformationalViewController());
    v4 = v3;
    v5 = v2;
    v9 = (id)ClinicalSharingOnboardingInformationalViewController.init(onboardingSession:flowType:selectedAccount:delegate:)(v4, (char *)2, v2, 0);
    v6 = objc_msgSend(v1, sel_navigationController);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, sel_pushViewController_animated_, v9, 1);

    }
  }
  else
  {
    v8 = objc_msgSend(v1, sel_navigationController);
    if (!v8)
      return;
    v9 = v8;
    objc_msgSend(v8, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }

}

uint64_t sub_1BC3702CC(char a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  ObjectType = swift_getObjectType();
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  if ((a1 & 1) != 0)
  {
    sub_1BC62BAF8();
    v13 = a3;
    v14 = sub_1BC62BB28();
    v15 = sub_1BC62CADC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v33 = v6;
      v34 = ObjectType;
      v18 = v17;
      v35 = v17;
      *(_DWORD *)v16 = 136315138;
      swift_getMetatypeMetadata();
      v19 = sub_1BC62C6E0();
      v34 = sub_1BC4991F0(v19, v20, &v35);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v14, v15, "%s: Successfully saved opt-in status", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v18, -1, -1);
      MEMORY[0x1BCCF36A8](v16, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v33);
    }

    v30 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v31 = v12;
  }
  else
  {
    sub_1BC62BAF8();
    v22 = a3;
    v23 = sub_1BC62BB28();
    v24 = sub_1BC62CAC4();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v33 = v6;
      v34 = ObjectType;
      v27 = v26;
      v35 = v26;
      *(_DWORD *)v25 = 136315138;
      swift_getMetatypeMetadata();
      v28 = sub_1BC62C6E0();
      v34 = sub_1BC4991F0(v28, v29, &v35);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v23, v24, "%s: Error saving opt-in status", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v27, -1, -1);
      MEMORY[0x1BCCF36A8](v25, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v33);
    }

    v30 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v31 = v10;
  }
  return v30(v31, v6);
}

id sub_1BC37066C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ImprovementDataCollectionOptInViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ImprovementDataCollectionOptInViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BC3706F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC370718(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC3702CC(a1, a2, *(void **)(v2 + 16));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

void sub_1BC370738()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A5890)
  {
    sub_1BC62C47C();
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A5890);
  }
}

void sub_1BC37078C()
{
  sub_1BC3701B4();
}

uint64_t sub_1BC3707D8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id sub_1BC3707FC()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  _QWORD v10[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_whiteColor);
  v2 = objc_msgSend(v0, sel_secondarySystemBackgroundColor);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v10[4] = sub_1BC370948;
  v10[5] = v3;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1BC4CB70C;
  v10[3] = &block_descriptor_5;
  v5 = _Block_copy(v10);
  v6 = v2;
  v7 = v1;
  v8 = objc_msgSend(v4, sel_initWithDynamicProvider_, v5);
  _Block_release(v5);

  swift_release();
  return v8;
}

uint64_t sub_1BC37091C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC370948(void *a1)
{
  uint64_t v1;

  return sub_1BC4CB67C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

id sub_1BC370968()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  _QWORD v12[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemBlueColor);
  v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.4);

  v3 = objc_msgSend(v0, sel_systemBlueColor);
  v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.6);

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v2;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v12[4] = sub_1BC370AE0;
  v12[5] = v5;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BC4CB70C;
  v12[3] = &block_descriptor_7;
  v7 = _Block_copy(v12);
  v8 = v4;
  v9 = v2;
  v10 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  swift_release();
  return v10;
}

uint64_t OnboardingTileAppearanceManager.__allocating_init(store:)(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  v3 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  v4 = a1;
  v5 = (void *)sub_1BC62C650();
  v6 = objc_msgSend(v3, sel_initWithCategory_domainName_healthStore_, 0, v5, v4);

  *(_QWORD *)(v2 + 24) = v6;
  return v2;
}

uint64_t OnboardingTileAppearanceManager.init(store:)(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  void *v5;
  id v6;

  *(_QWORD *)(v1 + 16) = a1;
  v3 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  v4 = a1;
  v5 = (void *)sub_1BC62C650();
  v6 = objc_msgSend(v3, sel_initWithCategory_domainName_healthStore_, 0, v5, v4);

  *(_QWORD *)(v1 + 24) = v6;
  return v1;
}

void sub_1BC370C18(int a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;

  v63 = a1;
  v4 = sub_1BC62A364();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1BC62A7B4();
  v55 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  MEMORY[0x1E0C80A78](v5);
  v54 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v51 - v8;
  v64 = type metadata accessor for OnboardingViewIdentifier();
  v10 = MEMORY[0x1E0C80A78](v64);
  v60 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v59 = (char *)&v51 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v51 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v51 - v17;
  v19 = sub_1BC62BB34();
  v57 = *(_QWORD *)(v19 - 8);
  v58 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BAF8();
  v65 = a2;
  sub_1BC37448C(a2, (uint64_t)v18);
  swift_retain_n();
  v22 = sub_1BC62BB28();
  v23 = sub_1BC62CADC();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v53 = v9;
    v25 = v24;
    v26 = swift_slowAlloc();
    v51 = v26;
    *(_DWORD *)v25 = 136446722;
    v66 = *v2;
    v67 = v26;
    sub_1BC374538();
    v27 = sub_1BC62C6E0();
    v52 = v16;
    v66 = sub_1BC4991F0(v27, v28, &v67);
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    if ((v63 & 1) != 0)
      v29 = 1702195828;
    else
      v29 = 0x65736C6166;
    if ((v63 & 1) != 0)
      v30 = 0xE400000000000000;
    else
      v30 = 0xE500000000000000;
    v66 = sub_1BC4991F0(v29, v30, &v67);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2082;
    OnboardingViewIdentifier.stringIdentifier.getter();
    v66 = sub_1BC4991F0(v31, v32, &v67);
    v16 = v52;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC348D78((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
    _os_log_impl(&dword_1BC30A000, v22, v23, "[%{public}s] Setting onboarding to (%{public}s) for onboarding view with identifier '%{public}s'", (uint8_t *)v25, 0x20u);
    v33 = v51;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v33, -1, -1);
    v34 = v25;
    v9 = v53;
    MEMORY[0x1BCCF36A8](v34, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1BC348D78((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v21, v58);
  v35 = (uint64_t)v59;
  if ((v63 & 1) != 0)
  {
    sub_1BC62A754();
    v36 = sub_1BC62A760();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v9, 0, 1, v36);
  }
  else
  {
    v37 = sub_1BC62A760();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v9, 1, 1, v37);
  }
  v67 = 0;
  v68 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v67 = 0x6F626E4F2E494843;
  v68 = 0xEF2E676E69647261;
  v38 = v65;
  OnboardingViewIdentifier.stringIdentifier.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62CB30();
  swift_bridgeObjectRelease();
  sub_1BC36D71C((uint64_t)v9);
  sub_1BC37448C(v38, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BC348D78((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
  }
  else
  {
    v39 = v16;
    v40 = v54;
    v41 = v55;
    v42 = v56;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v39, v56);
    sub_1BC357158(0, &qword_1EF429C48, (uint64_t (*)(uint64_t))sub_1BC35F550, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC35F550();
    v44 = v43;
    v45 = *(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80);
    v46 = (v45 + 32) & ~v45;
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1BC639590;
    v48 = (_QWORD *)(v47 + v46);
    v49 = v47 + v46 + *(int *)(v44 + 48);
    *v48 = 0xD000000000000015;
    v48[1] = 0x80000001BC652BB0;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v49, v40, v42);
    sub_1BC35BD78(v47);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
  }
  sub_1BC34B6A0(0, &qword_1EF429C30);
  sub_1BC62CB3C();
  sub_1BC37448C(v65, v35);
  v50 = (char *)&loc_1BC371258 + *((int *)qword_1BC371570 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BC371288()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  unsigned int EnumCaseMultiPayload;

  sub_1BC348D78(v2, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
  sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1BC371B04(v1);
    swift_bridgeObjectRelease();
  }
  v4 = objc_allocWithZone((Class)sub_1BC62ACA0());
  v5 = (void *)sub_1BC62AC94();
  objc_msgSend(v0, sel_addOperation_, v5);

  objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1BC37448C(*(_QWORD *)(v3 - 144), *(_QWORD *)(v3 - 184));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_1BC3713E8 + *((int *)qword_1BC371588 + EnumCaseMultiPayload)))();
}

uint64_t sub_1BC3713F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  sub_1BC348D78(v0, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
  sub_1BC62C650();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v4 - 128) = 0u;
  *(_OWORD *)(v4 - 112) = 0u;
  sub_1BC62A340();
  v5 = (void *)sub_1BC62A328();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 176) + 8))(v2, *(_QWORD *)(v4 - 168));
  objc_msgSend(v1, sel_postNotification_, v5);

  *(_QWORD *)(v4 - 128) = v3;
  sub_1BC3744D0();
  sub_1BC347F0C(&qword_1EF429C40, (uint64_t (*)(uint64_t))sub_1BC3744D0, MEMORY[0x1E0C96108]);
  v6 = sub_1BC62BFFC();
  swift_release();
  return v6;
}

void OnboardingViewIdentifier.stringIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  _QWORD v17[2];

  v1 = v0;
  v2 = type metadata accessor for OnboardingViewIdentifier();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)v17 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v17 - v9;
  v11 = sub_1BC62A7B4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC37448C(v1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() < 2)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1BC37448C(v1, (uint64_t)v5);
    v15 = (char *)&loc_1BC3716FC + 4 * byte_1BC639C26[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_1BC37448C(v1, (uint64_t)v8);
  v16 = (char *)sub_1BC371754 + 4 * byte_1BC639C20[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_1BC371754()
{
  uint64_t v0;

  sub_1BC348D78(v0, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
  return 0xD000000000000011;
}

void sub_1BC371778()
{
  uint64_t v0;

  sub_1BC348D78(v0, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
  JUMPOUT(0x1BC371798);
}

void sub_1BC3717A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BC62C764(0x54636972656E6567, 0xEB00000000656C69);
  swift_bridgeObjectRelease(0xEB00000000656C69);
  v3 = sub_1BC62C764(46, 0xE100000000000000);
  v4 = sub_1BC62A778(v3);
  v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  sub_1BC62C764(v4, v6);
  swift_bridgeObjectRelease(v6);
  JUMPOUT(0x1BC3718E4);
}

void sub_1BC3717C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BC62C764(0x656C69547362616CLL, 0xE800000000000000);
  swift_bridgeObjectRelease(0xE800000000000000);
  v3 = sub_1BC62C764(46, 0xE100000000000000);
  v4 = sub_1BC62A778(v3);
  v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  sub_1BC62C764(v4, v6);
  swift_bridgeObjectRelease(v6);
  JUMPOUT(0x1BC3718E4);
}

void sub_1BC3717DC()
{
  JUMPOUT(0x1BC3717FCLL);
}

void sub_1BC371860()
{
  uint64_t v0;

  sub_1BC348D78(v0, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
  JUMPOUT(0x1BC371880);
}

uint64_t sub_1BC37188C()
{
  return 0x54636972656E6567;
}

uint64_t sub_1BC3718AC()
{
  return 0x656C69547362616CLL;
}

void sub_1BC3718C4()
{
  JUMPOUT(0x1BC3718E4);
}

uint64_t OnboardingViewIdentifier.uniqueIdentifier.getter()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  OnboardingViewIdentifier.stringIdentifier.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return 0x6F626E4F2E494843;
}

void OnboardingViewIdentifier.notificationIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v1);
  sub_1BC37448C(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BC371A30 + 4 * byte_1BC639C2C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_1BC371A30()
{
  uint64_t v0;

  sub_1BC348D78(v0, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
  return 0xD000000000000011;
}

uint64_t sub_1BC371AF0(unint64_t a1)
{
  return sub_1BC372BF4(a1, &qword_1EF429748);
}

uint64_t sub_1BC371B04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v49 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3756BC();
  v48 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v42 - v9;
  v50 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BC37557C(0, &qword_1EF4297E0, MEMORY[0x1E0DEC198], MEMORY[0x1E0DEC1A0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
    v11 = sub_1BC62D400();
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9E0];
  }
  v12 = *(_QWORD *)(v50 + 64);
  v44 = v50 + 64;
  v13 = -1 << *(_BYTE *)(v50 + 32);
  if (-v13 < 64)
    v14 = ~(-1 << -(char)v13);
  else
    v14 = -1;
  v15 = v14 & v12;
  v42 = -1 << *(_BYTE *)(v50 + 32);
  v43 = (unint64_t)(63 - v13) >> 6;
  v47 = &v55;
  v46 = &v59;
  v16 = v11 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v51 = 0;
  v45 = MEMORY[0x1E0DEE9B8] + 8;
  v18 = v48;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v51 << 6);
      goto LABEL_28;
    }
    v23 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v23 >= v43)
      goto LABEL_37;
    v24 = *(_QWORD *)(v44 + 8 * v23);
    v25 = v51 + 1;
    if (!v24)
    {
      v25 = v51 + 2;
      if (v51 + 2 >= v43)
        goto LABEL_37;
      v24 = *(_QWORD *)(v44 + 8 * v25);
      if (!v24)
      {
        v25 = v51 + 3;
        if (v51 + 3 >= v43)
          goto LABEL_37;
        v24 = *(_QWORD *)(v44 + 8 * v25);
        if (!v24)
        {
          v25 = v51 + 4;
          if (v51 + 4 >= v43)
            goto LABEL_37;
          v24 = *(_QWORD *)(v44 + 8 * v25);
          if (!v24)
            break;
        }
      }
    }
LABEL_27:
    v15 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
    v51 = v25;
LABEL_28:
    v27 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v22);
    v28 = *v27;
    v29 = v27[1];
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(&v10[*(int *)(v18 + 48)], *(_QWORD *)(v50 + 56) + *(_QWORD *)(v3 + 72) * v22, v2);
    *(_QWORD *)v10 = v28;
    *((_QWORD *)v10 + 1) = v29;
    sub_1BC375724((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BC3756BC);
    v30 = (char *)v8 + *(int *)(v18 + 48);
    v31 = v8[1];
    *(_QWORD *)&v60 = *v8;
    *((_QWORD *)&v60 + 1) = v31;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v49, v30, v2);
    v32 = v47;
    swift_dynamicCast();
    v56 = v52;
    v57 = v53;
    v58 = v54;
    v33 = v32;
    v34 = v46;
    sub_1BC35E088(v33, v46);
    v52 = v56;
    v53 = v57;
    v54 = v58;
    sub_1BC35E088(v34, &v60);
    sub_1BC35E088(&v60, &v56);
    result = sub_1BC62D16C();
    v35 = -1 << *(_BYTE *)(v11 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v16 + 8 * v37);
      }
      while (v41 == -1);
      v19 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = *(_QWORD *)(v11 + 48) + 40 * v19;
    *(_OWORD *)v20 = v52;
    *(_OWORD *)(v20 + 16) = v53;
    *(_QWORD *)(v20 + 32) = v54;
    result = (uint64_t)sub_1BC35E088(&v56, (_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v19));
    ++*(_QWORD *)(v11 + 16);
  }
  v26 = v51 + 5;
  if (v51 + 5 >= v43)
  {
LABEL_37:
    swift_release();
    sub_1BC3583F4();
    return v11;
  }
  v24 = *(_QWORD *)(v44 + 8 * v26);
  if (v24)
  {
    v25 = v51 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v43)
      goto LABEL_37;
    v24 = *(_QWORD *)(v44 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BC372078(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BC37557C(0, &qword_1EF4297E0, MEMORY[0x1E0DEC198], MEMORY[0x1E0DEC1A0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
    v2 = sub_1BC62D400();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1BC375540(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1BC35E088(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1BC35E088(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1BC35E088(v36, v37);
    sub_1BC35E088(v37, &v33);
    result = sub_1BC62D16C();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1BC35E088(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1BC3583F4();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BC372458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  _OWORD v31[4];
  _OWORD v32[2];
  _OWORD v33[3];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BC3755D0(0, (unint64_t *)&qword_1EF429708, (uint64_t (*)(uint64_t))type metadata accessor for Key, (unint64_t *)&qword_1EF4383C0, (uint64_t)&unk_1BC639360);
    v2 = sub_1BC62D400();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v29 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v30 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28)
      goto LABEL_37;
    v12 = *(_QWORD *)(v29 + 8 * v11);
    v13 = v30 + 1;
    if (!v12)
    {
      v13 = v30 + 2;
      if (v30 + 2 >= v28)
        goto LABEL_37;
      v12 = *(_QWORD *)(v29 + 8 * v13);
      if (!v12)
      {
        v13 = v30 + 3;
        if (v30 + 3 >= v28)
          goto LABEL_37;
        v12 = *(_QWORD *)(v29 + 8 * v13);
        if (!v12)
        {
          v13 = v30 + 4;
          if (v30 + 4 >= v28)
            goto LABEL_37;
          v12 = *(_QWORD *)(v29 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v30 = v13;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v33[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v15 = *(void **)&v33[0];
    *(_QWORD *)&v32[0] = v16;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
    v17 = v15;
    v18 = v16;
    swift_dynamicCast();
    v19 = *(_QWORD *)&v33[0];
    sub_1BC35E088((_OWORD *)((char *)v33 + 8), v31);
    sub_1BC35E088(v31, v33);
    sub_1BC35E088(v33, v32);
    sub_1BC62C680();
    sub_1BC62D670();
    sub_1BC62C740();
    v20 = sub_1BC62D6AC();
    result = swift_bridgeObjectRelease();
    v21 = -1 << *(_BYTE *)(v2 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v19;
    result = (uint64_t)sub_1BC35E088(v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v8));
    ++*(_QWORD *)(v2 + 16);
  }
  v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_1BC3583F4();
    return v2;
  }
  v12 = *(_QWORD *)(v29 + 8 * v14);
  if (v12)
  {
    v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v28)
      goto LABEL_37;
    v12 = *(_QWORD *)(v29 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BC372824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  _OWORD v31[4];
  _OWORD v32[2];
  _OWORD v33[3];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BC3755D0(0, &qword_1EF429CD0, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, &qword_1EF428FE8, (uint64_t)&unk_1BC6394B4);
    v2 = sub_1BC62D400();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v29 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v30 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28)
      goto LABEL_37;
    v12 = *(_QWORD *)(v29 + 8 * v11);
    v13 = v30 + 1;
    if (!v12)
    {
      v13 = v30 + 2;
      if (v30 + 2 >= v28)
        goto LABEL_37;
      v12 = *(_QWORD *)(v29 + 8 * v13);
      if (!v12)
      {
        v13 = v30 + 3;
        if (v30 + 3 >= v28)
          goto LABEL_37;
        v12 = *(_QWORD *)(v29 + 8 * v13);
        if (!v12)
        {
          v13 = v30 + 4;
          if (v30 + 4 >= v28)
            goto LABEL_37;
          v12 = *(_QWORD *)(v29 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v30 = v13;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v33[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v15 = *(void **)&v33[0];
    *(_QWORD *)&v32[0] = v16;
    type metadata accessor for DocumentType(0);
    v17 = v15;
    v18 = v16;
    swift_dynamicCast();
    v19 = *(_QWORD *)&v33[0];
    sub_1BC35E088((_OWORD *)((char *)v33 + 8), v31);
    sub_1BC35E088(v31, v33);
    sub_1BC35E088(v33, v32);
    sub_1BC62C680();
    sub_1BC62D670();
    sub_1BC62C740();
    v20 = sub_1BC62D6AC();
    result = swift_bridgeObjectRelease();
    v21 = -1 << *(_BYTE *)(v2 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v19;
    result = (uint64_t)sub_1BC35E088(v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v8));
    ++*(_QWORD *)(v2 + 16);
  }
  v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_1BC3583F4();
    return v2;
  }
  v12 = *(_QWORD *)(v29 + 8 * v14);
  if (v12)
  {
    v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v28)
      goto LABEL_37;
    v12 = *(_QWORD *)(v29 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BC372BE0(unint64_t a1)
{
  return sub_1BC372BF4(a1, (unint64_t *)&qword_1EF436690);
}

uint64_t sub_1BC372BF4(unint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v35;
  unint64_t v36;
  void *v37;
  void *v38;

  v3 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1BC62D118())
      goto LABEL_3;
LABEL_6:
    v4 = MEMORY[0x1E0DEE9E0];
    if (v3)
      goto LABEL_4;
LABEL_7:
    v9 = -1 << *(_BYTE *)(a1 + 32);
    v6 = ~v9;
    v36 = a1 + 64;
    v10 = -v9;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v7 = v11 & *(_QWORD *)(a1 + 64);
    v8 = a1;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_1BC375450();
  v4 = sub_1BC62D400();
  if (!v3)
    goto LABEL_7;
LABEL_4:
  v5 = sub_1BC62D2F8();
  v36 = 0;
  v6 = 0;
  v7 = 0;
  v8 = v5 | 0x8000000000000000;
LABEL_11:
  v35 = (unint64_t)(v6 + 64) >> 6;
  v12 = v4 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v14 = 0;
  while ((v8 & 0x8000000000000000) != 0)
  {
    if (!sub_1BC62D364())
      goto LABEL_45;
    sub_1BC34B6A0(0, a2);
    swift_dynamicCast();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
    swift_dynamicCast();
    v19 = v37;
    v20 = v38;
LABEL_36:
    result = sub_1BC62CEA8();
    v27 = -1 << *(_BYTE *)(v4 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v12 + 8 * v29);
      }
      while (v33 == -1);
      v15 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = 8 * v15;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  if (v7)
  {
    v17 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v18 = v17 | (v14 << 6);
LABEL_35:
    v19 = *(void **)(*(_QWORD *)(v8 + 48) + 8 * v18);
    v37 = v19;
    v38 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v18);
    v20 = v38;
    v25 = v19;
    v26 = v38;
    goto LABEL_36;
  }
  v21 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v21 >= v35)
    goto LABEL_45;
  v22 = *(_QWORD *)(v36 + 8 * v21);
  v23 = v14 + 1;
  if (v22)
    goto LABEL_34;
  v23 = v14 + 2;
  if (v14 + 2 >= v35)
    goto LABEL_45;
  v22 = *(_QWORD *)(v36 + 8 * v23);
  if (v22)
    goto LABEL_34;
  v23 = v14 + 3;
  if (v14 + 3 >= v35)
    goto LABEL_45;
  v22 = *(_QWORD *)(v36 + 8 * v23);
  if (v22)
    goto LABEL_34;
  v23 = v14 + 4;
  if (v14 + 4 >= v35)
    goto LABEL_45;
  v22 = *(_QWORD *)(v36 + 8 * v23);
  if (v22)
  {
LABEL_34:
    v7 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v23 << 6);
    v14 = v23;
    goto LABEL_35;
  }
  v24 = v14 + 5;
  if (v14 + 5 >= v35)
  {
LABEL_45:
    swift_release();
    sub_1BC3583F4();
    return v4;
  }
  v22 = *(_QWORD *)(v36 + 8 * v24);
  if (v22)
  {
    v23 = v14 + 5;
    goto LABEL_34;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v35)
      goto LABEL_45;
    v22 = *(_QWORD *)(v36 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_34;
  }
LABEL_47:
  __break(1u);
  return result;
}

unint64_t sub_1BC372FBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BC37557C(0, (unint64_t *)&qword_1EF429780, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
    v2 = (_QWORD *)sub_1BC62D400();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  v33 = 0;
  v9 = (unint64_t *)&qword_1EF429CD8;
  v10 = MEMORY[0x1E0DEA968];
  v11 = MEMORY[0x1E0DEA978];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = v33 + 1;
  if (__OFADD__(v33, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = v33 + 1;
  if (!v21)
  {
    v22 = v33 + 2;
    if (v33 + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = v33 + 3;
      if (v33 + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = v33 + 4;
        if (v33 + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = v33 + 5;
          if (v33 + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = v33 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1BC3583F4();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v33 = v22;
  v34 = (v21 - 1) & v21;
  for (i = __clz(__rbit64(v21)) + (v22 << 6); ; i = __clz(__rbit64(v5)) | (v33 << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v35 = *v24;
    v36 = v24[1];
    sub_1BC37557C(0, v9, v10, v11, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1BC35E088(v6, v7);
    sub_1BC35E088(v7, v40);
    sub_1BC35E088(v40, &v38);
    result = sub_1BC558D94(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v10;
      v16 = v9;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v9 = v16;
      v10 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      v11 = MEMORY[0x1E0DEA978];
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      result = (unint64_t)sub_1BC35E088(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_1BC35E088(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_1BC373374(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  char *v6;
  uint64_t v7;

  v2 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1BC37448C(a1, (uint64_t)v4);
  v6 = (char *)&loc_1BC373430 + *((int *)qword_1BC373530 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

void sub_1BC373440()
{
  void *v0;
  uint64_t v1;
  void *v2;

  sub_1BC348D78(v1, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  sub_1BC62CCEC();

}

uint64_t sub_1BC373548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;

  sub_1BC37458C();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v8 = 0x6F626E4F2E494843;
  v9 = 0xEF2E676E69647261;
  OnboardingViewIdentifier.stringIdentifier.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v5 = sub_1BC62CB24();
  swift_bridgeObjectRelease();
  v8 = v5;
  sub_1BC37460C();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A3620, (uint64_t (*)(uint64_t))sub_1BC37460C, MEMORY[0x1E0C96108]);
  sub_1BC62C02C();
  swift_release();
  sub_1BC347F0C(&qword_1ED6A35D8, (uint64_t (*)(uint64_t))sub_1BC37458C, MEMORY[0x1E0C95950]);
  v6 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_1BC3736DC@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1BC62A760();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
  *a2 = (_DWORD)result != 1;
  return result;
}

uint64_t sub_1BC373728()
{
  uint64_t v0;

  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  OnboardingViewIdentifier.stringIdentifier.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62CB24();
  swift_bridgeObjectRelease();
  sub_1BC37460C();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A3620, (uint64_t (*)(uint64_t))sub_1BC37460C, MEMORY[0x1E0C96108]);
  v0 = sub_1BC62BFFC();
  swift_release();
  return v0;
}

uint64_t OnboardingTileAppearanceManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t OnboardingTileAppearanceManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

BOOL sub_1BC37386C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1BC373884()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC3738C8()
{
  return sub_1BC62D67C();
}

uint64_t sub_1BC3738F0()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC373930()
{
  _BYTE *v0;

  if (*v0)
    return 0x746169636F737361;
  else
    return 0x65756C6156776172;
}

uint64_t sub_1BC373978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC37533C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC37399C()
{
  return 0;
}

void sub_1BC3739A8(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BC3739B4()
{
  sub_1BC374690();
  return sub_1BC62D700();
}

uint64_t sub_1BC3739DC()
{
  sub_1BC374690();
  return sub_1BC62D70C();
}

uint64_t sub_1BC373A04()
{
  return 1;
}

uint64_t _s15HealthRecordsUI26RecordAnchorPublisherErrorO9hashValueSivg_0()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC373A4C()
{
  return sub_1BC62D67C();
}

uint64_t sub_1BC373A70()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t OnboardingViewIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  char v30;
  char v31;

  v27 = a2;
  v26 = sub_1BC62A7B4();
  v23 = *(_QWORD *)(v26 - 8);
  v3 = MEMORY[0x1E0C80A78](v26);
  v24 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)v22 - v5;
  sub_1BC374718(0, &qword_1EF429C58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v22 - v9;
  v11 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC374690();
  v14 = v28;
  sub_1BC62D6DC();
  if (v14)
  {
LABEL_3:
    v18 = (uint64_t)a1;
  }
  else
  {
    v28 = a1;
    v15 = v25;
    v16 = v26;
    v22[1] = v11;
    v17 = v27;
    v31 = 0;
    switch(sub_1BC62D484())
    {
      case 0:
      case 1:
      case 2:
      case 4:
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        break;
      case 3:
        v29 = 1;
        sub_1BC347F0C(&qword_1EF429C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
        sub_1BC62D490();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v13, v15, v16);
        break;
      case 5:
        v30 = 1;
        sub_1BC347F0C(&qword_1EF429C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
        v20 = v24;
        sub_1BC62D490();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v13, v20, v16);
        break;
      default:
        sub_1BC3746D4();
        swift_allocError();
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        a1 = v28;
        goto LABEL_3;
    }
    v21 = (uint64_t)v28;
    swift_storeEnumTagMultiPayload();
    sub_1BC375724((uint64_t)v13, v17, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
    v18 = v21;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(v18);
}

void OnboardingViewIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _QWORD v12[6];

  v2 = v1;
  v4 = sub_1BC62A7B4();
  v12[2] = *(_QWORD *)(v4 - 8);
  v12[3] = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v12[1] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC374718(0, &qword_1EF429C78, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v12[5] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC374690();
  sub_1BC62D6F4();
  sub_1BC37448C(v2, (uint64_t)v9);
  v11 = (char *)sub_1BC373FC0 + 4 * byte_1BC639C38[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC373FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(v4 - 112);
  v5 = *(_QWORD *)(v4 - 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v3, v5);
  *(_BYTE *)(v4 - 68) = 0;
  v7 = *(_QWORD *)(v4 - 96);
  sub_1BC62D4F0();
  if (!v7)
  {
    *(_BYTE *)(v4 - 69) = 1;
    sub_1BC347F0C(qword_1EF429C80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1BC62D4FC();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 88) + 8))(v0, v1);
}

uint64_t sub_1BC374178@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OnboardingViewIdentifier.init(from:)(a1, a2);
}

void sub_1BC37418C(_QWORD *a1)
{
  OnboardingViewIdentifier.encode(to:)(a1);
}

Swift::Void __swiftcall OnboardingDismissible.setOnboarding(dismissed:)(Swift::Bool dismissed)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  uint64_t inited;
  id v11;
  id v12;
  void *v13;
  id v14;
  _BYTE v15[32];

  v3 = v2;
  v4 = v1;
  v5 = dismissed;
  v6 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v4, v3);
  type metadata accessor for OnboardingTileAppearanceManager();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  v11 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  v12 = v9;
  v13 = (void *)sub_1BC62C650();
  v14 = objc_msgSend(v11, sel_initWithCategory_domainName_healthStore_, 0, v13, v12);

  *(_QWORD *)(inited + 24) = v14;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  sub_1BC370C18(v5, (uint64_t)v8);
  swift_release();
  swift_release();
  sub_1BC348D78((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
}

uint64_t OnboardingDismissible.isDismissed()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t inited;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  _BYTE v15[32];

  v4 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  type metadata accessor for OnboardingTileAppearanceManager();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v7;
  v9 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  v10 = v7;
  v11 = (void *)sub_1BC62C650();
  v12 = objc_msgSend(v9, sel_initWithCategory_domainName_healthStore_, 0, v11, v10);

  *(_QWORD *)(inited + 24) = v12;
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  v13 = sub_1BC373548();
  swift_release();
  sub_1BC348D78((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
  return v13;
}

uint64_t type metadata accessor for OnboardingViewIdentifier()
{
  uint64_t result;

  result = qword_1ED6A3468;
  if (!qword_1ED6A3468)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC37448C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OnboardingViewIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC3744D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429C38)
  {
    sub_1BC35E44C();
    v0 = sub_1BC62BF54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429C38);
  }
}

unint64_t sub_1BC374538()
{
  unint64_t result;

  result = qword_1EF429C50;
  if (!qword_1EF429C50)
  {
    type metadata accessor for OnboardingTileAppearanceManager();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF429C50);
  }
  return result;
}

uint64_t type metadata accessor for OnboardingTileAppearanceManager()
{
  return objc_opt_self();
}

void sub_1BC37458C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A35E0)
  {
    sub_1BC37460C();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A3620, (uint64_t (*)(uint64_t))sub_1BC37460C, MEMORY[0x1E0C96108]);
    v0 = sub_1BC62BE10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A35E0);
  }
}

void sub_1BC37460C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A3628)
  {
    sub_1BC357158(255, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC35E44C();
    v0 = sub_1BC62BF54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A3628);
  }
}

unint64_t sub_1BC374690()
{
  unint64_t result;

  result = qword_1EF429C60;
  if (!qword_1EF429C60)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC639EF0, &type metadata for OnboardingViewIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF429C60);
  }
  return result;
}

unint64_t sub_1BC3746D4()
{
  unint64_t result;

  result = qword_1EF429C68;
  if (!qword_1EF429C68)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC639EB0, &type metadata for OnboardingViewIdentifier.CodingError);
    atomic_store(result, (unint64_t *)&qword_1EF429C68);
  }
  return result;
}

void sub_1BC374718(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC374690();
    v7 = a3(a1, &type metadata for OnboardingViewIdentifier.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void _s15HealthRecordsUI24OnboardingViewIdentifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v13 = sub_1BC62A7B4();
  v4 = MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for OnboardingViewIdentifier();
  v6 = MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1BC37565C();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 + *(int *)(v8 + 48) - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC37448C(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC37448C(a2, (uint64_t)v10);
  v11 = (char *)sub_1BC3748C0 + 4 * byte_1BC639C3E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC3748C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  sub_1BC37448C(v0, v3);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v3, *(_QWORD *)(v5 - 88));
    v6 = 0;
    v7 = (uint64_t (*)(_QWORD))sub_1BC37565C;
  }
  else
  {
    v8 = *(_QWORD *)(v5 - 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2, v4, v8);
    v6 = sub_1BC62A790();
    v9 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
    v9(v2, v8);
    v9(v3, v8);
    v7 = (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier;
  }
  sub_1BC348D78(v0, v7);
  return v6 & 1;
}

uint64_t method lookup function for OnboardingTileAppearanceManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OnboardingTileAppearanceManager.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of OnboardingTileAppearanceManager.setOnboarding(dismissed:identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of OnboardingTileAppearanceManager.notificationPublisher(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of OnboardingTileAppearanceManager.shouldShowOnboardingTile(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of OnboardingTileAppearanceManager.lastDismissedDatePublisher(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t *initializeBufferWithCopyOfBuffer for OnboardingViewIdentifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v7 = sub_1BC62A7B4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for OnboardingViewIdentifier(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = sub_1BC62A7B4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for OnboardingViewIdentifier(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1BC62A7B4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for OnboardingViewIdentifier(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BC348D78((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1BC62A7B4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for OnboardingViewIdentifier(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1BC62A7B4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for OnboardingViewIdentifier(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BC348D78((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1BC62A7B4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingViewIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for OnboardingViewIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1BC374F20()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BC374F30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of OnboardingDismissible.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of OnboardingDismissible.healthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of OnboardingDismissible.setOnboarding(dismissed:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of OnboardingDismissible.isDismissed()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t getEnumTagSinglePayload for OnboardingViewIdentifier.CodingError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for OnboardingViewIdentifier.CodingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC375048 + 4 * byte_1BC639C44[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC375068 + 4 * byte_1BC639C49[v4]))();
}

_BYTE *sub_1BC375048(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC375068(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC375070(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC375078(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC375080(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC375088(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1BC375094()
{
  return 0;
}

ValueMetadata *type metadata accessor for OnboardingViewIdentifier.CodingError()
{
  return &type metadata for OnboardingViewIdentifier.CodingError;
}

uint64_t getEnumTagSinglePayload for OnboardingViewIdentifier.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingViewIdentifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC375188 + 4 * byte_1BC639C53[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC3751BC + 4 * byte_1BC639C4E[v4]))();
}

uint64_t sub_1BC3751BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC3751C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC3751CCLL);
  return result;
}

uint64_t sub_1BC3751D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC3751E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC3751E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC3751EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC3751F8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1BC375200(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingViewIdentifier.CodingKeys()
{
  return &type metadata for OnboardingViewIdentifier.CodingKeys;
}

unint64_t sub_1BC375220()
{
  unint64_t result;

  result = qword_1EF429CB0;
  if (!qword_1EF429CB0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC639E20, &type metadata for OnboardingViewIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF429CB0);
  }
  return result;
}

unint64_t sub_1BC375268()
{
  unint64_t result;

  result = qword_1EF429CB8;
  if (!qword_1EF429CB8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC639E88, &type metadata for OnboardingViewIdentifier.CodingError);
    atomic_store(result, (unint64_t *)&qword_1EF429CB8);
  }
  return result;
}

unint64_t sub_1BC3752B0()
{
  unint64_t result;

  result = qword_1EF429CC0;
  if (!qword_1EF429CC0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC639D90, &type metadata for OnboardingViewIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF429CC0);
  }
  return result;
}

unint64_t sub_1BC3752F8()
{
  unint64_t result;

  result = qword_1EF429CC8;
  if (!qword_1EF429CC8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC639DB8, &type metadata for OnboardingViewIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF429CC8);
  }
  return result;
}

uint64_t sub_1BC37533C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6156776172 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEF65756C61566465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1BC375450()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429758)
  {
    sub_1BC34B6A0(255, &qword_1ED6A58D8);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58C0);
    sub_1BC3754E8();
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429758);
  }
}

unint64_t sub_1BC3754E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A58E0;
  if (!qword_1ED6A58E0)
  {
    v1 = sub_1BC34B6A0(255, &qword_1ED6A58D8);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A58E0);
  }
  return result;
}

uint64_t sub_1BC375540(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1BC37557C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, MEMORY[0x1E0DEE9B8] + 8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC3755D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BC347F0C(a4, a3, a5);
    v9 = sub_1BC62D40C();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC37565C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF429CE0)
  {
    type metadata accessor for OnboardingViewIdentifier();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF429CE0);
  }
}

void sub_1BC3756BC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF429CE8)
  {
    sub_1BC62A7B4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF429CE8);
  }
}

uint64_t sub_1BC375724(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for AccountLoginDataSource(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF429D00);
}

uint64_t sub_1BC37577C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC3757D4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t result;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v3 = qword_1EF429CF8;
  v4 = *(_QWORD *)(v1 + qword_1EF429CF8);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v5 = sub_1BC62D3B8();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  v37 = a1;
  v6 = (unint64_t)&unk_1EF459000;
  v35 = v3;
  if (v5)
  {
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_47;
    }
    v7 = 0;
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x1BCCF24CC](v7++, v4);
        v10 = v9 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
        v11 = *(void **)(v10 + *(int *)(type metadata accessor for ClinicalAccountLoginUpgradeAction() + 20));
        sub_1BC377DC8(v11);
        swift_unknownObjectRelease();
      }
      else
      {
        v12 = *(_QWORD *)(v4 + 32 + 8 * v7++);
        v13 = v12 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
        v11 = *(void **)(v13 + *(int *)(type metadata accessor for ClinicalAccountLoginUpgradeAction() + 20));
        sub_1BC377DC8(v11);
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1BC3B5BB8(0, v8[2] + 1, 1, v8);
      v15 = v8[2];
      v14 = v8[3];
      if (v15 >= v14 >> 1)
        v8 = sub_1BC3B5BB8((_QWORD *)(v14 > 1), v15 + 1, 1, v8);
      v8[2] = v15 + 1;
      v8[v15 + 4] = v11;
    }
    while (v7 != v5);
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease_n();
  v16 = v37;
  if (!(v37 >> 62))
  {
    v17 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17)
      goto LABEL_18;
LABEL_36:
    swift_bridgeObjectRelease();
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1BC62D3B8();
  if (!v17)
    goto LABEL_36;
LABEL_18:
  if (v17 < 1)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if ((v37 & 0xC000000000000001) != 0)
  {
    v18 = 0;
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v20 = MEMORY[0x1BCCF24CC](v18, v37) + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
      v21 = *(void **)(v20 + *(int *)(type metadata accessor for ClinicalAccountLoginUpgradeAction() + 20));
      sub_1BC377DC8(v21);
      swift_unknownObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_1BC3B5BB8(0, v19[2] + 1, 1, v19);
      v23 = v19[2];
      v22 = v19[3];
      if (v23 >= v22 >> 1)
        v19 = sub_1BC3B5BB8((_QWORD *)(v22 > 1), v23 + 1, 1, v19);
      ++v18;
      v19[2] = v23 + 1;
      v19[v23 + 4] = v21;
    }
    while (v17 != v18);
  }
  else
  {
    v24 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
    v25 = 0;
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v26 = *(void **)(*(_QWORD *)(v16 + 8 * v25 + 32)
                     + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action
                     + *(int *)(v24 + 20));
      sub_1BC377DC8(v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_1BC3B5BB8(0, v19[2] + 1, 1, v19);
      v28 = v19[2];
      v27 = v19[3];
      if (v28 >= v27 >> 1)
        v19 = sub_1BC3B5BB8((_QWORD *)(v27 > 1), v28 + 1, 1, v19);
      ++v25;
      v19[2] = v28 + 1;
      v19[v28 + 4] = v26;
      v16 = v37;
    }
    while (v17 != v25);
  }
  swift_bridgeObjectRelease();
LABEL_37:
  v29 = sub_1BC3EDC60((uint64_t)v8, (uint64_t)v19);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
    return result;
  v31 = swift_bridgeObjectRetain();
  sub_1BC3D1D10(v31);
  swift_bridgeObjectRelease();
  sub_1BC62B2E8();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v36 + v35);
  if (!(v6 >> 62))
  {
    v32 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v32)
      goto LABEL_40;
LABEL_49:
    swift_bridgeObjectRelease();
    return sub_1BC62B684();
  }
LABEL_48:
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  if (!result)
    goto LABEL_49;
LABEL_40:
  if ((v6 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1BCCF24CC](0, v6);
    goto LABEL_43;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_43:
    swift_bridgeObjectRelease();
    sub_1BC3EEABC();
    v34 = v33;
    swift_bridgeObjectRelease();
    if (v34)
    {
      sub_1BC62B684();
      return swift_release();
    }
    swift_release();
    return sub_1BC62B684();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC375CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v10;

  v0 = sub_1BC62B3C0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - v5;
  sub_1BC62B36C();
  sub_1BC62B324();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  v8 = sub_1BC62B3B4();
  v7(v6, v0);
  return v8;
}

uint64_t sub_1BC375DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC62B3C0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62B36C();
  v4 = sub_1BC62B3B4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1BC375E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  *(_QWORD *)(v5 + 16) = a4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 24) = v7;
  *v7 = v5;
  v7[1] = sub_1BC375EA0;
  return sub_1BC376074(a5);
}

uint64_t sub_1BC375EA0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC375EFC()
{
  uint64_t v0;

  sub_1BC62C944();
  *(_QWORD *)(v0 + 40) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC375F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  v2 = MEMORY[0x1E0DEE9D8];
  v7 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v3 = swift_retain_n();
    MEMORY[0x1BCCF1B30](v3);
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    v2 = v7;
  }
  v4 = *(_QWORD *)(v0 + 16);
  swift_release();
  v5 = *(_QWORD *)(v4 + qword_1EF429CF8);
  *(_QWORD *)(v4 + qword_1EF429CF8) = v2;
  sub_1BC3757D4(v5);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BC376044()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC376074(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_1BC62A7B4();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v4 = sub_1BC62BB34();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v5 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v2[15] = v5;
  v2[16] = *(_QWORD *)(v5 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC3761AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_1BC3EEE9C(*(id *)(v0 + 32), 0, 0, 0, v3);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(_QWORD *)(v0 + 176) = v4;
  if (v4(v3, 1, v1) == 1)
  {
    sub_1BC377E3C(*(_QWORD *)(v0 + 112), (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    v20 = 0;
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v20);
  }
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 120);
  sub_1BC378168(*(_QWORD *)(v0 + 112), v5);
  v7 = *(int *)(v6 + 20);
  *(_DWORD *)(v0 + 224) = v7;
  v8 = *(void **)(v5 + v7);
  *(_QWORD *)(v0 + 184) = v8;
  if ((unint64_t)v8 < 4)
  {
    v9 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 40);
    sub_1BC377D48(v9, v10);
    v12 = *(_QWORD *)(v11 + qword_1EF429CF0);
    type metadata accessor for AccountLoginItem(0);
    v13 = swift_allocObject();
    swift_retain();
    v20 = v13;
    sub_1BC377094(v10, v12);
    sub_1BC377D8C(v9);
    goto LABEL_5;
  }
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + qword_1EF429CF0);
  v15 = objc_msgSend(v8, sel_gatewayID);
  v16 = sub_1BC62C680();
  v18 = v17;

  *(_QWORD *)(v0 + 200) = v18;
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v19;
  *v19 = v0;
  v19[1] = sub_1BC3763D0;
  return sub_1BC5C2A4C(v16, v18);
}

uint64_t sub_1BC3763D0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BC376434()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v1 = *(void **)(v0 + 216);
  if (!v1)
  {
    v21 = *(int *)(v0 + 224);
    v22 = *(_QWORD *)(v0 + 168);
    sub_1BC3781AC(*(id *)(v0 + 184));
    v23 = *(_QWORD *)(v22 + v21);
    v24 = *(_QWORD *)(v0 + 168);
    v25 = *(_QWORD *)(v0 + 144);
    if (v23 >= 4)
    {
      v50 = *(_QWORD *)(v0 + 136);
      v51 = *(_QWORD *)(v0 + 40);
      sub_1BC377D48(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144));
      v52 = *(_QWORD *)(v51 + qword_1EF429CF0);
      type metadata accessor for AccountUpgradeItem(0);
      v53 = swift_allocObject();
      sub_1BC377D48(v25, v50);
      swift_retain();
      v59 = v53;
      sub_1BC377094(v50, v52);
      sub_1BC377D8C(v25);
    }
    else
    {
      v26 = *(_QWORD *)(v0 + 40);
      sub_1BC377D48(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144));
      v27 = *(_QWORD *)(v26 + qword_1EF429CF0);
      type metadata accessor for AccountLoginItem(0);
      v28 = swift_allocObject();
      swift_retain();
      v59 = v28;
      sub_1BC377094(v25, v27);
    }
    v49 = v24;
    goto LABEL_12;
  }
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  sub_1BC62BAF8();
  sub_1BC377D48(v3, v2);
  v4 = v1;
  v5 = sub_1BC62BB28();
  v6 = sub_1BC62CAB8();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 160);
  v10 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 72);
  if (v7)
  {
    v57 = *(_QWORD *)(v0 + 80);
    v58 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 56);
    v13 = *(_QWORD *)(v0 + 48);
    v14 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v60 = v56;
    *(_DWORD *)v14 = 136315394;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v15 = sub_1BC62D52C();
    *(_QWORD *)(v0 + 16) = sub_1BC4991F0(v15, v16, &v60);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC377D8C(v8);
    *(_WORD *)(v14 + 12) = 2080;
    v17 = objc_msgSend(v4, sel_identifier);
    sub_1BC62A79C();

    v18 = sub_1BC62D52C();
    v20 = v19;
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v12, v13);
    *(_QWORD *)(v0 + 24) = sub_1BC4991F0(v18, v20, &v60);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v5, v6, "AccountLoginDataSource for account %s will ignore gateway upgrade because account %s for the upgradeable gateway is already connected", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v56, -1, -1);
    MEMORY[0x1BCCF36A8](v14, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v9, v58);
  }
  else
  {
    sub_1BC377D8C(*(_QWORD *)(v0 + 160));

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 176);
  v29 = *(void **)(v0 + 184);
  v31 = *(_QWORD *)(v0 + 120);
  v33 = *(_QWORD *)(v0 + 96);
  v32 = *(_QWORD *)(v0 + 104);
  v34 = *(id *)(v0 + 32);
  v35 = objc_msgSend(v29, sel_gatewayID);
  v36 = sub_1BC62C680();
  v38 = v37;

  sub_1BC3EEE9C(v34, 0, v36, v38, v32);
  sub_1BC378004(v32, v33, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
  if (v30(v33, 1, v31) != 1)
  {
    v43 = *(void **)(v0 + 184);
    v42 = *(_QWORD *)(v0 + 192);
    v44 = *(_QWORD *)(v0 + 168);
    v46 = *(_QWORD *)(v0 + 144);
    v45 = *(_QWORD *)(v0 + 152);
    v47 = *(_QWORD *)(v0 + 104);
    sub_1BC378168(*(_QWORD *)(v0 + 96), v45);
    sub_1BC377D48(v45, v46);
    type metadata accessor for AccountLoginItem(0);
    v48 = swift_allocObject();
    swift_retain();
    v59 = v48;
    sub_1BC377094(v46, v42);
    sub_1BC3781AC(v43);

    sub_1BC377D8C(v45);
    sub_1BC377E3C(v47, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    v49 = v44;
LABEL_12:
    sub_1BC377D8C(v49);
    goto LABEL_13;
  }
  v39 = *(_QWORD *)(v0 + 168);
  v41 = *(_QWORD *)(v0 + 96);
  v40 = *(_QWORD *)(v0 + 104);
  sub_1BC3781AC(*(id *)(v0 + 184));

  sub_1BC377E3C(v40, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
  sub_1BC377D8C(v39);
  sub_1BC377E3C(v41, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
  v59 = 0;
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v59);
}

void sub_1BC376984()
{
  sub_1BC3769B4();
}

void sub_1BC37699C()
{
  sub_1BC3769B4();
}

void sub_1BC3769B4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC3769DC()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC376A08()
{
  sub_1BC62B69C();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC376A54()
{
  return type metadata accessor for AccountLoginDataSource(0);
}

unint64_t sub_1BC376A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  unint64_t result;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  _QWORD v28[2];

  v7 = sub_1BC62A7B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC62C680() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      v17 = sub_1BC62AE20();
      v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v17;
      a3[4] = sub_1BC347F0C(&qword_1EF42A050, v18, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC62AE14();
    }
  }
  result = sub_1BC62A964();
  v20 = result;
  v21 = *(_QWORD *)(v3 + qword_1EF429CF8);
  if ((v21 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v22 = MEMORY[0x1BCCF24CC](v20, v21);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (result >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    __break(1u);
    return result;
  }
  v22 = *(_QWORD *)(v21 + 8 * result + 32);
  swift_retain();
LABEL_12:
  sub_1BC377D48(v22 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action, (uint64_t)v13);
  swift_release();
  sub_1BC3EEABC();
  if (v23)
  {
    v28[0] = 0x74497265746F6F46;
    v28[1] = 0xEB000000005F6D65;
    sub_1BC62A7A8();
    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v24 = sub_1BC62B624();
    v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
    a3[3] = v24;
    a3[4] = sub_1BC347F0C(&qword_1EF42A058, v25, MEMORY[0x1E0D2B6A8]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1BC62B618();
  }
  else
  {
    v26 = sub_1BC62AE20();
    v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
    a3[3] = v26;
    a3[4] = sub_1BC347F0C(&qword_1EF42A050, v27, MEMORY[0x1E0D2AB20]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1BC62AE14();
  }
  return sub_1BC377D8C((uint64_t)v13);
}

unint64_t sub_1BC376D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BC376A5C(a1, a2, a3);
}

id sub_1BC376D58()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___spinner;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___spinner);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___spinner);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC376DCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v27;
  uint64_t v28;

  v28 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - v4;
  v6 = sub_1BC62BBB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1CB0];
  sub_1BC357158(0, qword_1EF429DA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1CB0], v2);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v27 - v15;
  v17 = v1 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___customAccessory;
  swift_beginAccess();
  sub_1BC378004(v17, (uint64_t)v16, qword_1EF429DA0, v10);
  v18 = sub_1BC62BB94();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(v28, v16, v18);
  sub_1BC377E3C((uint64_t)v16, qword_1EF429DA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1CB0]);
  v27 = sub_1BC376D58();
  sub_1BC37805C();
  v21 = (uint64_t (**)())&v9[*(int *)(v20 + 48)];
  v22 = *MEMORY[0x1E0DC1C20];
  v23 = sub_1BC62BB64();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v9, v22, v23);
  *v21 = sub_1BC37A6E4;
  v21[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DC1D18], v6);
  v24 = sub_1BC62BB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 1, 1, v24);
  v25 = v28;
  sub_1BC62BB88();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v14, v25, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
  swift_beginAccess();
  sub_1BC37810C((uint64_t)v14, v17);
  return swift_endAccess();
}

uint64_t sub_1BC377094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t *v17;
  uint64_t v19;

  v3 = v2;
  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___spinner) = 0;
  v10 = v3 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___customAccessory;
  v11 = sub_1BC62BB94();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1BC377D48(a1, v3 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v12 = sub_1BC3EF45C();
  v14 = v13;
  v15 = objc_msgSend((id)objc_opt_self(), sel_hk_appKeyColor);
  v16 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  sub_1BC377D8C(a1);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID, v9, v6);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) = a2;
  v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelText);
  *v17 = v12;
  v17[1] = v14;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor) = v15;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont) = v16;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) = 0;
  return v3;
}

uint64_t sub_1BC377274(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v24;

  v3 = v2;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  v9 = sub_1BC62BB94();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v13 = swift_dynamicCastObjCClass();
  if (v13)
  {
    v14 = v13;
    sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC62BBC4();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
    v15 = a1;
    sub_1BC376DCC((uint64_t)v12);
    sub_1BC62BB58();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1BC62CD40();
    v16 = sub_1BC376D58();
    objc_msgSend(v16, sel_startAnimating);

    v17 = sub_1BC62C95C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = v3;
    v18[5] = a2;
    v18[6] = v14;
    swift_retain();
    v19 = a2;
    v20 = &unk_1EF42A0A0;
  }
  else
  {
    v21 = sub_1BC62C95C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 1, 1, v21);
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = v3;
    v18[5] = a2;
    swift_retain();
    v22 = a2;
    v20 = &unk_1EF42A088;
  }
  sub_1BC5C2784((uint64_t)v8, (uint64_t)v20, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1BC3774D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1BC3774F4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[2] + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_1BC377560;
  return sub_1BC5C2FE4(v1, v0[3]);
}

uint64_t sub_1BC377560()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC3775B4()
{
  uint64_t v0;

  sub_1BC62C944();
  *(_QWORD *)(v0 + 48) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC37761C()
{
  uint64_t v0;
  id v1;

  swift_release();
  v1 = sub_1BC376D58();
  objc_msgSend(v1, sel_stopAnimating);

  sub_1BC62CD40();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC37767C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1BC377694()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[2] + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1BC377700;
  return sub_1BC5C2FE4(v1, v0[3]);
}

uint64_t sub_1BC377700()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC377748()
{
  uint64_t v0;

  sub_1BC377D8C(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action);

  return sub_1BC377E3C(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___customAccessory, qword_1EF429DA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1CB0]);
}

uint64_t sub_1BC377798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  v2 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1BC359FDC(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  sub_1BC377D8C(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action);

  sub_1BC377E3C(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___customAccessory, qword_1EF429DA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1CB0]);
  return v0;
}

uint64_t sub_1BC377888()
{
  sub_1BC377798();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC3778AC()
{
  return type metadata accessor for AccountLoginItem(0);
}

uint64_t type metadata accessor for AccountLoginItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF429D90);
}

void sub_1BC3778C8()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for ClinicalAccountLoginUpgradeAction();
  if (v0 <= 0x3F)
  {
    sub_1BC357158(319, qword_1EF429DA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1CB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1BC377974()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 264))();
}

uint64_t sub_1BC3779A8()
{
  type metadata accessor for AccountUpgradeCell();
  sub_1BC347F0C(&qword_1EF42A078, (uint64_t (*)(uint64_t))type metadata accessor for AccountUpgradeCell, (uint64_t)&unk_1BC641D54);
  return sub_1BC62ADA8();
}

uint64_t sub_1BC3779F4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v11;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - v5;
  v7 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v2;
  v8[5] = a2;
  swift_retain();
  v9 = a2;
  sub_1BC5C2784((uint64_t)v6, (uint64_t)&unk_1EF42A070, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_1BC377ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1BC377AE4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[2] + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1BC3781BC;
  return sub_1BC5C2FE4(v1, v0[3]);
}

uint64_t sub_1BC377B50()
{
  return type metadata accessor for AccountUpgradeItem(0);
}

uint64_t type metadata accessor for AccountUpgradeItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF429EF8);
}

uint64_t sub_1BC377B6C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1BC377BA0()
{
  sub_1BC62D670();
  sub_1BC60154C();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC377BFC()
{
  sub_1BC60154C();
  sub_1BC62C740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC377C3C()
{
  sub_1BC62D670();
  sub_1BC60154C();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC377C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BC60154C();
  v2 = v1;
  if (v0 == sub_1BC60154C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BC377D1C()
{
  return sub_1BC347F0C(&qword_1EF42A048, type metadata accessor for AccountUpgradeItem, (uint64_t)&unk_1BC639FB4);
}

uint64_t sub_1BC377D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC377D8C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1BC377DC8(id result)
{
  if ((unint64_t)result >= 4)
    return result;
  return result;
}

uint64_t sub_1BC377DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1BC3781C0;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_1BC377E3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BC357158(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC377EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1BC377F18;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_1BC377F18()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC377F60()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC377F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1BC3781C0;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

uint64_t sub_1BC378004(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC357158(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BC37805C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42A0B0)
  {
    sub_1BC62BB64();
    sub_1BC3780CC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42A0B0);
  }
}

unint64_t sub_1BC3780CC()
{
  unint64_t result;

  result = qword_1EF42A0B8;
  if (!qword_1EF42A0B8)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EF42A0B8);
  }
  return result;
}

uint64_t sub_1BC37810C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC357158(0, qword_1EF429DA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1CB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC378168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC3781AC(id a1)
{
  if ((unint64_t)a1 >= 4)

}

void UIImageView.applyImage(_:style:)(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  objc_msgSend(v2, sel_setImage_, a1);
  v5 = v3;
  v6 = v4;
  UIImageView.applyStyle(_:)((uint64_t)&v5);
}

void UIImageView.applyStyle(_:)(uint64_t a1)
{
  void *v1;
  void *v2;
  int v3;
  id v4;
  double v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  double v13;
  double v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(void **)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    if (v3)
    {
      if (v3 == 1)
      {
        v22 = 0;
        LOBYTE(v23) = 2;
        v4 = v2;
        UIImageView.applyStyle(_:)(&v22);
        objc_msgSend(v1, sel_setTintColor_, v4, v22, v23);
        sub_1BC37859C(v2, 1);
        return;
      }
      objc_msgSend(v1, sel_setContentMode_, 0);
      v18 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      objc_msgSend(v1, sel_setBackgroundColor_, v18);

      v19 = objc_msgSend(v1, sel_layer);
      objc_msgSend(v19, sel_setBorderColor_, 0);

      v20 = objc_msgSend(v1, sel_layer);
      objc_msgSend(v20, sel_setBorderWidth_, 0.0);

      v21 = objc_msgSend(v1, sel_layer);
      objc_msgSend(v21, sel_setCornerRadius_, 0.0);

      v17 = objc_msgSend(v1, sel_layer);
      objc_msgSend(v17, sel_setCornerContentsMasksEdges_, 0);
    }
    else
    {
      v5 = *(double *)&v2;
      objc_msgSend(v1, sel_setContentMode_, 1);
      v6 = (void *)objc_opt_self();
      v7 = objc_msgSend(v6, sel_whiteColor);
      objc_msgSend(v1, sel_setBackgroundColor_, v7);

      v8 = objc_msgSend(v1, sel_layer);
      v9 = objc_msgSend(v6, sel_separatorColor);
      v10 = objc_msgSend(v9, sel_CGColor);

      objc_msgSend(v8, sel_setBorderColor_, v10);
      v11 = objc_msgSend(v1, sel_layer);
      v12 = objc_msgSend(v1, sel_traitCollection);
      objc_msgSend(v12, sel_displayPixel);
      v14 = v13;

      objc_msgSend(v11, sel_setBorderWidth_, v14);
      v15 = objc_msgSend(v1, sel_layer);
      objc_msgSend(v15, sel_setCornerRadius_, v5);

      v16 = objc_msgSend(v1, sel_layer);
      objc_msgSend(v16, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

      v17 = objc_msgSend(v1, sel_layer);
      objc_msgSend(v17, sel_setCornerContentsMasksEdges_, 1);
    }

    objc_msgSend(v1, sel_setTintColor_, 0);
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC37859C(id a1, char a2)
{
  if (a2 == 1)

}

Swift::Void __swiftcall UIImageView.applyAccountLogoStyle(isMonogram:imageViewSize:)(Swift::Bool isMonogram, CGSize imageViewSize)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (isMonogram)
  {
    v3 = 0;
    LOBYTE(v4) = 2;
  }
  else
  {
    static AccountIcon.Size.smallerOrEqual(to:)((uint64_t)&v3, imageViewSize.width, imageViewSize.height);
    v2 = 0x4008000000000000;
    if (v6 != 1)
      v2 = v5;
    v3 = v2;
    LOBYTE(v4) = 0;
  }
  UIImageView.applyStyle(_:)((uint64_t)&v3);
}

void sub_1BC378620(void *a1, double a2, double a3, uint64_t a4, Swift::Bool a5)
{
  id v8;

  v8 = a1;
  UIImageView.applyAccountLogoStyle(isMonogram:imageViewSize:)(a5, (CGSize)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2));

}

double static UIImageView.logoInset(for:)(double a1, double a2)
{
  double result;
  double v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char v7;

  static AccountIcon.Size.smallerOrEqual(to:)((uint64_t)&v4, a1, a2);
  result = v5;
  v3 = 2.0;
  if (v6 | *(_QWORD *)&v5 | v4)
    v3 = 3.0;
  if (v7 == 1)
    return v3;
  return result;
}

double sub_1BC3786D0(double a1, double a2)
{
  double result;
  double v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char v7;

  static AccountIcon.Size.smallerOrEqual(to:)((uint64_t)&v4, a1, a2);
  result = v5;
  v3 = 2.0;
  if (v6 | *(_QWORD *)&v5 | v4)
    v3 = 3.0;
  if (v7 == 1)
    return v3;
  return result;
}

void sub_1BC378720()
{
  qword_1EF42A0C8 = 0x4042000000000000;
}

double static UIImageView.smallLogoViewDimension.getter()
{
  return sub_1BC378828(&qword_1EF428390, (uint64_t)&qword_1EF42A0C8);
}

double sub_1BC37874C(uint64_t a1, uint64_t a2)
{
  return sub_1BC37887C(a1, a2, &qword_1EF428390, (uint64_t)&qword_1EF42A0C8);
}

void sub_1BC378768()
{
  qword_1EF42A0D0 = 0x4046800000000000;
}

double static UIImageView.mediumLogoViewDimension.getter()
{
  return sub_1BC378828(&qword_1EF428398, (uint64_t)&qword_1EF42A0D0);
}

double sub_1BC378798(uint64_t a1, uint64_t a2)
{
  return sub_1BC37887C(a1, a2, &qword_1EF428398, (uint64_t)&qword_1EF42A0D0);
}

void sub_1BC3787B4()
{
  qword_1EF42A0D8 = 0x404E000000000000;
}

double static UIImageView.largeLogoViewDimension.getter()
{
  return sub_1BC378828(&qword_1EF4283A0, (uint64_t)&qword_1EF42A0D8);
}

double sub_1BC3787E0(uint64_t a1, uint64_t a2)
{
  return sub_1BC37887C(a1, a2, &qword_1EF4283A0, (uint64_t)&qword_1EF42A0D8);
}

void sub_1BC3787FC()
{
  qword_1EF42A0E0 = 0x4054000000000000;
}

double static UIImageView.providerDetailLogoViewDimension.getter()
{
  return sub_1BC378828(&qword_1EF4283A8, (uint64_t)&qword_1EF42A0E0);
}

double sub_1BC378828(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(double *)a2;
}

double sub_1BC378860(uint64_t a1, uint64_t a2)
{
  return sub_1BC37887C(a1, a2, &qword_1EF4283A8, (uint64_t)&qword_1EF42A0E0);
}

double sub_1BC37887C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  if (*a3 != -1)
    swift_once();
  return *(double *)a4;
}

void UIImageView.applyIcon(_:)(uint64_t a1)
{
  void *v1;
  unint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char v12;
  id v13;
  void *v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >> 1 == 0xFFFFFFFF)
  {
    objc_msgSend(v1, sel_setImage_, 0);
    v14 = 0;
    v15 = 2;
    UIImageView.applyStyle(_:)((uint64_t)&v14);
  }
  else
  {
    v4 = *(void **)a1;
    v3 = *(void **)(a1 + 8);
    if ((v2 & 0x8000000000000000) != 0)
    {
      v7 = *(_QWORD *)(a1 + 16);
      v8 = *(_QWORD *)(a1 + 24);
      v9 = *(void **)(a1 + 40);
      v10 = 0x4008000000000000;
      if ((v2 & 1) == 0)
        v10 = *(_QWORD *)(a1 + 24);
      if ((v4 & 1) != 0)
        v11 = 0;
      else
        v11 = (void *)v10;
      if ((v4 & 1) != 0)
        v12 = 2;
      else
        v12 = 0;
      sub_1BC35EEF4(*(void **)a1, v3, v7, v8, v2, v9);
      sub_1BC35EEF4(v4, v3, v7, v8, v2, v9);
      objc_msgSend(v1, sel_setImage_, v9);
      v14 = v11;
      v15 = v12;
      UIImageView.applyStyle(_:)((uint64_t)&v14);
      sub_1BC37859C(v11, v12);
      sub_1BC378D5C(v4, v3, v7, v8, v2, v9);
      sub_1BC378D5C(v4, v3, v7, v8, v2, v9);
    }
    else if (v3)
    {
      v5 = v4;
      v6 = v3;
      objc_msgSend(v1, sel_setImage_, v5);
      v14 = v3;
      v15 = 1;
      UIImageView.applyStyle(_:)((uint64_t)&v14);

    }
    else
    {
      v13 = v4;
      objc_msgSend(v1, sel_setImage_, v13);
      v14 = 0;
      v15 = 2;
      UIImageView.applyStyle(_:)((uint64_t)&v14);

    }
  }
}

{
  void *v1;
  void *v2;
  uint64_t v3;
  char v4;
  id v5;
  uint64_t v6;
  char v7;

  v2 = *(void **)(a1 + 40);
  if (!v2 || (*(_BYTE *)a1 & 1) != 0)
  {
    v3 = 0;
    v4 = 2;
  }
  else
  {
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
      v3 = 0x4008000000000000;
    else
      v3 = *(_QWORD *)(a1 + 24);
    v4 = 0;
  }
  v5 = v2;
  objc_msgSend(v1, sel_setImage_, v5);
  v6 = v3;
  v7 = v4;
  UIImageView.applyStyle(_:)((uint64_t)&v6);

  sub_1BC37859C((id)v3, v4);
}

id sub_1BC378B4C()
{
  return sub_1BC378B8C(0xD000000000000015, 0x80000001BC652EB0, (SEL *)&selRef_systemBlueColor);
}

id sub_1BC378B70()
{
  return sub_1BC378B8C(0x656C63726963, 0xE600000000000000, (SEL *)&selRef_tertiaryLabelColor);
}

id sub_1BC378B8C(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v4 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v5 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v4, 3);

  v6 = (void *)sub_1BC62C650();
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v6, v5);

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v7);
  v9 = objc_msgSend((id)objc_opt_self(), *a3);
  objc_msgSend(v8, sel_setTintColor_, v9);

  return v8;
}

double _sSo11UIImageViewC15HealthRecordsUIE13logoDimension3for12CoreGraphics7CGFloatVSo6CGSizeV_tFZ_0(double a1, double a2)
{
  double v2;
  double v3;
  BOOL v4;
  double v5;
  double v8;
  __int128 v9;
  char v10;

  static AccountIcon.Size.smallerOrEqual(to:)((uint64_t)&v8, a1, a2);
  if (v10 == 1)
  {
    if (*((_QWORD *)&v9 + 1) | (unint64_t)v9 | *(_QWORD *)&v8)
    {
      v2 = 3.0;
      v3 = 45.0;
      v4 = v9 == 0 && *(_QWORD *)&v8 == 2;
      v5 = 80.0;
      if (v4)
        v5 = 60.0;
      if (*(_QWORD *)&v8 != 1 || v9 != 0)
        v3 = v5;
    }
    else
    {
      v2 = 2.0;
      v3 = 36.0;
    }
  }
  else
  {
    v3 = v8;
    v2 = *(double *)&v9;
  }
  return v3 - v2;
}

void sub_1BC378D5C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if ((unint64_t)a5 >> 1 != 0xFFFFFFFF)
    sub_1BC378D70(a1, a2, a3, a4, a5, a6);
}

void sub_1BC378D70(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if ((a5 & 0x8000000000000000) == 0)
  {

    a6 = a2;
  }

}

uint64_t _s9IconStyleOwCP(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BC378DDC(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1BC378DDC(id result, char a2)
{
  if (a2 == 1)
    return result;
  return result;
}

void _s9IconStyleOwxx(uint64_t a1)
{
  sub_1BC37859C(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s9IconStyleOwca(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BC378DDC(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BC37859C(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s9IconStyleOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BC37859C(v4, v5);
  return a1;
}

uint64_t _s9IconStyleOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s9IconStyleOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC378F2C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BC378F44(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UIImageView.IconStyle()
{
  return &type metadata for UIImageView.IconStyle;
}

uint64_t sub_1BC378F70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;

  v3 = objc_msgSend(*(id *)(v1 + qword_1EF42C0D0), sel_healthStore);
  v4 = objc_msgSend(v3, sel_profileIdentifier);

  sub_1BC62CB90();
  v5 = type metadata accessor for AllFeedForProfileDataSourceProvider();
  v6 = swift_allocObject();
  sub_1BC34E718(&v9, v6 + 16);
  *(_QWORD *)(v6 + 56) = v4;
  a1[3] = v5;
  result = sub_1BC379B20(&qword_1EF42A220, v7, (uint64_t (*)(uint64_t))type metadata accessor for AllFeedForProfileDataSourceProvider, (uint64_t)&protocol conformance descriptor for AllFeedForProfileDataSourceProvider);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t AllFeedForProfileDataSourceProvider.__allocating_init(sourceProfile:store:)(uint64_t a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1BC34E718(a2, v4 + 16);
  *(_QWORD *)(v4 + 56) = a1;
  return v4;
}

uint64_t sub_1BC379094@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0D2A9E0];
  v3 = sub_1BC62AD9C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

id sub_1BC3790D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalAllFeedForProfileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC37910C()
{
  qword_1EF42A0E8 = 0x4036000000000000;
}

uint64_t sub_1BC37911C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1BC34E674(a1, (uint64_t)v5);
  v3 = *a2 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1BC34E718(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC379180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_1BC34E674(v1 + 16, a1);
}

uint64_t sub_1BC3791C8(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1BC34E718(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC379220())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t AllFeedForProfileDataSourceProvider.init(sourceProfile:store:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;

  sub_1BC34E718(a2, v2 + 16);
  *(_QWORD *)(v2 + 56) = a1;
  return v2;
}

uint64_t sub_1BC379290()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC3792D8();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v0 + 32) = sub_1BC37937C();
  *(_QWORD *)(v0 + 40) = v1;
  return v0;
}

void sub_1BC3792D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42A0F0)
  {
    sub_1BC37932C();
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42A0F0);
  }
}

unint64_t sub_1BC37932C()
{
  unint64_t result;

  result = qword_1EF42A0F8;
  if (!qword_1EF42A0F8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42A0F8);
  }
  return result;
}

uint64_t sub_1BC37937C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void (*v23)(_QWORD *, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  void *v28;
  void (*v29)(_QWORD *, _QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _QWORD v39[4];

  v1 = v0;
  v2 = sub_1BC62B12C();
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v35 - v6;
  sub_1BC62AC10();
  v8 = (void *)MEMORY[0x1BCCEFEBC]();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v9 = swift_allocObject();
  v35 = xmmword_1BC6396B0;
  *(_OWORD *)(v9 + 16) = xmmword_1BC6396B0;
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC639590;
  v11 = *(void **)(v0 + 56);
  *(_QWORD *)(v10 + 32) = v11;
  v12 = v11;
  v13 = MEMORY[0x1BCCEFED4](v10);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 32) = v13;
  v39[0] = v9;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v14 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v14);

  objc_msgSend(v8, sel_setPredicate_, v15);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v35;
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v18 = (void *)sub_1BC62C650();
  v19 = objc_msgSend(v17, sel_initWithKey_ascending_selector_, v18, 1, sel_localizedStandardCompare_);

  *(_QWORD *)(v16 + 32) = v19;
  v39[0] = v16;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v20 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setSortDescriptors_, v20);

  swift_beginAccess();
  sub_1BC34E674(v1 + 16, (uint64_t)v39);
  __swift_project_boxed_opaque_existential_1Tm(v39, v39[3]);
  v21 = v8;
  v22 = (void *)sub_1BC62A9D0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v21, v22, 0, 0);

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
  sub_1BC62B0FC();
  v23 = (void (*)(_QWORD *, _QWORD))sub_1BC62B114();
  v25 = v24;
  v26 = sub_1BC62B0B4();
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
  if (!v27(v25, 1, v26))
  {
    swift_getKeyPath();
    v28 = (void *)objc_opt_self();
    if (qword_1EF4283B0 != -1)
      swift_once();
    v38 = objc_msgSend(v28, sel_absoluteDimension_, *(double *)&qword_1EF42A0E8);
    sub_1BC62B0A8();
  }
  v23(v39, 0);
  v29 = (void (*)(_QWORD *, _QWORD))sub_1BC62B114();
  if (!v27(v30, 1, v26))
  {
    swift_getKeyPath();
    v38 = objc_msgSend((id)objc_opt_self(), sel_absoluteDimension_, 0.0);
    sub_1BC62B0A8();
  }
  v29(v39, 0);
  sub_1BC379AA4();
  v32 = v36;
  v31 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v5, v7, v37);
  v33 = sub_1BC62AF34();

  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v31);
  sub_1BC379B20((unint64_t *)&qword_1EF42A240, 255, (uint64_t (*)(uint64_t))sub_1BC379AA4, MEMORY[0x1E0D2B7F8]);
  return v33;
}

uint64_t AllFeedForProfileDataSourceProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return v0;
}

uint64_t AllFeedForProfileDataSourceProvider.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1BC3798C8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC3792D8();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v0 + 32) = sub_1BC37937C();
  *(_QWORD *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1BC37991C()
{
  return sub_1BC62AD18();
}

uint64_t sub_1BC37992C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 16;
  swift_beginAccess();
  return sub_1BC34E674(v3, a2);
}

uint64_t type metadata accessor for InternalAllFeedForProfileViewController()
{
  uint64_t result;

  result = qword_1EF42A100;
  if (!qword_1EF42A100)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC3799B8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC3799F4()
{
  return type metadata accessor for InternalAllFeedForProfileViewController();
}

uint64_t type metadata accessor for AllFeedForProfileDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for AllFeedForProfileDataSourceProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AllFeedForProfileDataSourceProvider.store.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of AllFeedForProfileDataSourceProvider.store.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of AllFeedForProfileDataSourceProvider.store.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of AllFeedForProfileDataSourceProvider.__allocating_init(sourceProfile:store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AllFeedForProfileDataSourceProvider.selectedDataSources(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

void sub_1BC379A60(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC62D538();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1BC379AA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42A230)
  {
    sub_1BC62AC10();
    sub_1BC379B20((unint64_t *)&qword_1EF42A238, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E718], MEMORY[0x1E0D2A838]);
    v0 = sub_1BC62AF1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42A230);
  }
}

uint64_t sub_1BC379B20(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1BC379B70()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI17PinnedConceptCell____lazy_storage___accessoryImageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17PinnedConceptCell____lazy_storage___accessoryImageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17PinnedConceptCell____lazy_storage___accessoryImageView);
  }
  else
  {
    v4 = v0;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
    v5 = (void *)sub_1BC62CE60();
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v5);

    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

uint64_t sub_1BC379C30()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v1, (uint64_t)v7);
  if (v8)
  {
    sub_1BC37AE0C();
    type metadata accessor for PinnedConceptItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = *(_BYTE *)(v6 + 40);
      swift_release();
      if ((v2 & 1) != 0)
      {
        if (qword_1ED6A4888 == -1)
          goto LABEL_8;
        goto LABEL_9;
      }
    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v7);
  }
  if (qword_1ED6A4888 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v3 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v4 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v4;
}

uint64_t sub_1BC379DE8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v1, (uint64_t)v3);
  if (v4)
  {
    sub_1BC37AE0C();
    type metadata accessor for PinnedConceptItem();
    if ((swift_dynamicCast() & 1) != 0)
      swift_release();
  }
  else
  {
    sub_1BC37AE60((uint64_t)v3);
  }
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
  return sub_1BC62CE60();
}

uint64_t sub_1BC379F08()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];

  v1 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v5, (uint64_t)v17);
  if (v17[3])
  {
    sub_1BC37AE0C();
    type metadata accessor for PinnedConceptItem();
    if ((swift_dynamicCast() & 1) != 0)
      return v16;
  }
  else
  {
    sub_1BC37AE60((uint64_t)v17);
  }
  sub_1BC62BAF8();
  v7 = v0;
  v8 = sub_1BC62BB28();
  v9 = sub_1BC62CAC4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v15 = v1;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v16 = v12;
    *(_DWORD *)v11 = 136446210;
    sub_1BC37ADB0(v5, (uint64_t)v17);
    sub_1BC357158(0, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v13 = sub_1BC62C6F8();
    v17[0] = sub_1BC4991F0(v13, v14, &v16);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v8, v9, "Incorrect view model for PinnedConceptCell: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v12, -1, -1);
    MEMORY[0x1BCCF36A8](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return 0;
}

uint64_t sub_1BC37A170()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v1 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v5, (uint64_t)v17);
  if (!v18)
  {
    sub_1BC37AE60((uint64_t)v17);
LABEL_8:
    sub_1BC62BAF8();
    v7 = v0;
    v8 = sub_1BC62BB28();
    v9 = sub_1BC62CAC4();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v15 = v1;
      v16 = v11;
      v12 = v11;
      *(_DWORD *)v10 = 136446210;
      sub_1BC37ADB0(v5, (uint64_t)v17);
      sub_1BC357158(0, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v13 = sub_1BC62C6F8();
      v17[0] = sub_1BC4991F0(v13, v14, &v16);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v8, v9, "Incorrect view model for PinnedConceptCell: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v12, -1, -1);
      MEMORY[0x1BCCF36A8](v10, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v15);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  sub_1BC37AE0C();
  type metadata accessor for PinnedConceptItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_8;
  swift_release();
  sub_1BC37ADB0(v5, (uint64_t)v17);
  if (v18)
  {
    if ((swift_dynamicCast() & 1) != 0)
      swift_release();
    return sub_1BC37A6EC();
  }
  else
  {
    sub_1BC37AE60((uint64_t)v17);
    return sub_1BC37A6EC();
  }
}

uint64_t sub_1BC37A424@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC37A478(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1BC37AEB4((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC37A170();
  return sub_1BC37AE60(a1);
}

void (*sub_1BC37A4F0(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_1BC5A14B0();
  return sub_1BC37A538;
}

void sub_1BC37A538(_QWORD *a1, char a2)
{
  void *v3;

  v3 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  if ((a2 & 1) == 0)
    sub_1BC37A170();
  free(v3);
}

uint64_t sub_1BC37A578()
{
  sub_1BC5A0CC4();
  return sub_1BC37A6EC();
}

void sub_1BC37A654()
{
  uint64_t v0;

}

id sub_1BC37A664()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PinnedConceptCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PinnedConceptCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC37A6C4()
{
  return sub_1BC37ACD0();
}

uint64_t sub_1BC37A6E4()
{
  return 0;
}

uint64_t sub_1BC37A6EC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t *, _QWORD);
  id v14;
  id v15;
  uint64_t v16;
  uint64_t (**v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_1;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];
  uint64_t v50;
  uint64_t v51;

  v1 = v0;
  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v46 = (char *)&v41 - v3;
  v4 = sub_1BC62BBB8();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1BC62BB94();
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1BC62BD98();
  v9 = *(_QWORD *)(v44 - 8);
  v10 = MEMORY[0x1E0C80A78](v44);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1BCCF201C](v10);
  sub_1BC379C30();
  sub_1BC62BD74();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  sub_1BC62CDDC();
  v13 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
  sub_1BC62BCC0();
  v13(v49, 0);
  v14 = sub_1BC379B70();
  v15 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  objc_msgSend(v14, sel_setTintColor_, v15);

  sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62BBC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
  sub_1BC379B70();
  sub_1BC37805C();
  v17 = (uint64_t (**)())&v6[*(int *)(v16 + 48)];
  v18 = *MEMORY[0x1E0DC1C20];
  v19 = sub_1BC62BB64();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v6, v18, v19);
  *v17 = sub_1BC37A6E4;
  v17[1] = 0;
  v20 = v9;
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v6, *MEMORY[0x1E0DC1D18], v43);
  v21 = sub_1BC62BB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v46, 1, 1, v21);
  sub_1BC62BB88();
  sub_1BC62BB58();
  v22 = v8;
  v23 = v44;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v22, v47);
  sub_1BC62CD40();
  v50 = v23;
  v51 = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v49);
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(boxed_opaque_existential_1, v12, v23);
  MEMORY[0x1BCCF1FC8](v49);
  v25 = sub_1BC379B70();
  v26 = (void *)sub_1BC379DE8();
  objc_msgSend(v25, sel_setImage_, v26);

  sub_1BC359F44();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v27 + 32) = 0x736E6F6974704FLL;
  *(_QWORD *)(v27 + 40) = 0xE700000000000000;
  v28 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v28, (uint64_t)v49);
  if (v50)
  {
    sub_1BC37AE0C();
    type metadata accessor for PinnedConceptItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v29 = *(_BYTE *)(v48 + 40);
      swift_release();
      if ((v29 & 1) != 0)
      {
        v30 = 0xEB000000006E6F74;
        v31 = 0x7475426E69706E55;
        goto LABEL_7;
      }
    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v49);
  }
  v31 = 0x6F747475426E6950;
  v30 = 0xE90000000000006ELL;
LABEL_7:
  *(_QWORD *)(v27 + 48) = v31;
  *(_QWORD *)(v27 + 56) = v30;
  v32 = (void *)sub_1BC62C86C();
  v33 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v33);
  v34 = sub_1BC379B70();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v27 = (uint64_t)sub_1BC3B5060(0, *(_QWORD *)(v27 + 16) + 1, 1, (_QWORD *)v27);
  v36 = *(_QWORD *)(v27 + 16);
  v35 = *(_QWORD *)(v27 + 24);
  if (v36 >= v35 >> 1)
    v27 = (uint64_t)sub_1BC3B5060((_QWORD *)(v35 > 1), v36 + 1, 1, (_QWORD *)v27);
  *(_QWORD *)(v27 + 16) = v36 + 1;
  v37 = v27 + 16 * v36;
  *(_QWORD *)(v37 + 32) = 0x726F737365636341;
  *(_QWORD *)(v37 + 40) = 0xE900000000000079;
  v38 = (void *)sub_1BC62C86C();
  v39 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v34, sel_setAccessibilityIdentifier_, v39);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v23);
}

uint64_t sub_1BC37ACD0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];
  uint64_t v7;

  v1 = sub_1BC379F08();
  if (v1)
  {
    v2 = *(void (**)(uint64_t))(v1 + 48);
    swift_retain();
    v3 = swift_release();
    v2(v3);
    swift_release();
  }
  v4 = v0 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v4, (uint64_t)v6);
  if (v7)
  {
    sub_1BC37AE0C();
    type metadata accessor for PinnedConceptItem();
    if ((swift_dynamicCast() & 1) != 0)
      swift_release();
  }
  else
  {
    sub_1BC37AE60((uint64_t)v6);
  }
  return sub_1BC37A6EC();
}

uint64_t sub_1BC37ADB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC357158(0, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC37AE0C()
{
  unint64_t result;

  result = qword_1EF42ADC0;
  if (!qword_1EF42ADC0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42ADC0);
  }
  return result;
}

uint64_t sub_1BC37AE60(uint64_t a1)
{
  uint64_t v2;

  sub_1BC357158(0, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC37AEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC357158(0, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_UNKNOWN **sub_1BC37AF10()
{
  return &off_1E74D8948;
}

uint64_t ClinicalPublisherFactory.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6768]), sel_initWithHealthStore_, a1);
  return v2;
}

uint64_t ClinicalPublisherFactory.init(with:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6768]), sel_initWithHealthStore_, a1);
  return v1;
}

uint64_t sub_1BC37AFB8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - v5;
  sub_1BC37B1F0();
  v8 = v7;
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC37B2B8(0);
  v12 = v11;
  v21 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v2;
  sub_1BC37CD9C(0, (unint64_t *)&qword_1ED6A3628, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC37B260();
  v16 = a1;
  swift_retain();
  sub_1BC62BF78();
  v17 = sub_1BC62A760();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  sub_1BC347F0C(&qword_1EF42A2C8, (uint64_t (*)(uint64_t))sub_1BC37B1F0, MEMORY[0x1E0C96148]);
  sub_1BC62C014();
  sub_1BC377E3C((uint64_t)v6, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  sub_1BC347F0C(&qword_1EF42A2D0, (uint64_t (*)(uint64_t))sub_1BC37B2B8, MEMORY[0x1E0C957E8]);
  v18 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v12);
  return v18;
}

void sub_1BC37B1F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42A2B8)
  {
    sub_1BC37CD9C(255, (unint64_t *)&qword_1ED6A3628, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC37B260();
    v0 = sub_1BC62BF84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42A2B8);
  }
}

unint64_t sub_1BC37B260()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A3620;
  if (!qword_1ED6A3620)
  {
    sub_1BC37CD9C(255, (unint64_t *)&qword_1ED6A3628, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A3620);
  }
  return result;
}

void sub_1BC37B2B8(uint64_t a1)
{
  sub_1BC37BC08(a1, &qword_1EF42A2C0, (uint64_t (*)(uint64_t))sub_1BC37B1F0, &qword_1EF42A2C8);
}

uint64_t sub_1BC37B2D4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  id v7;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1BC37CD9C(0, (unint64_t *)&qword_1ED6A3628, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  v7 = a1;
  swift_retain();
  result = sub_1BC62BF60();
  *a3 = result;
  return result;
}

uint64_t sub_1BC37B374@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC37B2D4(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1BC37B37C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  _QWORD aBlock[7];

  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a3, sel_identifier);
  sub_1BC62A79C();

  v13 = _sSo7HKQueryC15HealthRecordsUIE025predicateForRecentAccountC09accountIdSo11NSPredicateC10Foundation4UUIDV_tFZ_0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v14 = _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0();
  v15 = sub_1BC37C770(v14);
  v16 = v13;
  sub_1BC37CA30(v15, (uint64_t)v16);
  swift_release();

  sub_1BC34D844();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BC6396B0;
  sub_1BC62C680();
  v18 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v19 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_initWithKey_ascending_, v19, 0);

  *(_QWORD *)(v17 + 32) = v20;
  aBlock[0] = v17;
  sub_1BC62C890();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  v22 = objc_allocWithZone(MEMORY[0x1E0CB6AE8]);
  sub_1BC34B6A0(0, &qword_1ED6A48A0);
  swift_retain();
  v23 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v24 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1BC37CD94;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3BD514;
  aBlock[3] = &block_descriptor_21;
  v25 = _Block_copy(aBlock);
  v26 = objc_msgSend(v22, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v23, v24, 0, 0, 0, 1, v25);

  _Block_release(v25);
  swift_release();
  v27 = v26;
  v28 = (void *)sub_1BC62C650();
  objc_msgSend(v27, sel_setDebugIdentifier_, v28);

  objc_msgSend(*(id *)(a4 + 16), sel_executeQuery_, v27);
}

uint64_t sub_1BC37B69C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t result;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1BC37CD9C(0, (unint64_t *)&unk_1EF42A320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0DEE030]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - v12;
  if (a4)
  {
    *(_QWORD *)v13 = a4;
    swift_storeEnumTagMultiPayload();
    v14 = a4;
    v11 = v13;
LABEL_14:
    a5(v11);
    return sub_1BC37CE24((uint64_t)v11);
  }
  if (!a2)
  {
    v21 = sub_1BC62A760();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v13, 1, 1, v21);
    swift_storeEnumTagMultiPayload();
    v11 = v13;
    goto LABEL_14;
  }
  if (!(a2 >> 62))
  {
    v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v15)
      goto LABEL_6;
LABEL_12:
    swift_bridgeObjectRelease();
    v22 = sub_1BC62A760();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 1, 1, v22);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  if (!result)
    goto LABEL_12;
LABEL_6:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v17 = (id)MEMORY[0x1BCCF24CC](0, a2);
    goto LABEL_9;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = *(id *)(a2 + 32);
LABEL_9:
    v18 = v17;
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v18, sel__creationDate);

    sub_1BC62A724();
    v20 = sub_1BC62A760();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC37B8BC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD v17[2];

  v2 = v1;
  sub_1BC37BA7C();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC37BBEC(0);
  v10 = v9;
  v17[0] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v2;
  sub_1BC37BAF4();
  sub_1BC347F0C(&qword_1EF42A2F8, (uint64_t (*)(uint64_t))sub_1BC37BAF4, MEMORY[0x1E0C96108]);
  v14 = a1;
  swift_retain();
  sub_1BC62BF78();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C(&qword_1EF42A308, (uint64_t (*)(uint64_t))sub_1BC37BA7C, MEMORY[0x1E0C96148]);
  sub_1BC62C014();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BC347F0C(&qword_1EF42A310, (uint64_t (*)(uint64_t))sub_1BC37BBEC, MEMORY[0x1E0C957E8]);
  v15 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v17[0] + 8))(v12, v10);
  return v15;
}

void sub_1BC37BA7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42A2D8)
  {
    sub_1BC37BAF4();
    sub_1BC347F0C(&qword_1EF42A2F8, (uint64_t (*)(uint64_t))sub_1BC37BAF4, MEMORY[0x1E0C96108]);
    v0 = sub_1BC62BF84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42A2D8);
  }
}

void sub_1BC37BAF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42A2E0)
  {
    sub_1BC357158(255, &qword_1EF42A2E8, (uint64_t (*)(uint64_t))sub_1BC37BB78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35E44C();
    v0 = sub_1BC62BF54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42A2E0);
  }
}

void sub_1BC37BB78()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF42A2F0)
  {
    sub_1BC62A760();
    sub_1BC62A7B4();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF42A2F0);
  }
}

void sub_1BC37BBEC(uint64_t a1)
{
  sub_1BC37BC08(a1, &qword_1EF42A300, (uint64_t (*)(uint64_t))sub_1BC37BA7C, &qword_1EF42A308);
}

void sub_1BC37BC08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_1BC347F0C(a4, a3, MEMORY[0x1E0C96148]);
    v7 = sub_1BC62BDF8();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC37BC88@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  id v7;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1BC37BAF4();
  swift_allocObject();
  v7 = a1;
  swift_retain();
  result = sub_1BC62BF60();
  *a3 = result;
  return result;
}

uint64_t sub_1BC37BD18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC37BC88(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1BC37BD20(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t (*v21)(uint64_t, void *, uint64_t, void *, void *);
  void *v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  void (*v48)(uint64_t, unint64_t, uint64_t, void *);
  uint64_t v49;
  uint64_t v50;
  uint64_t aBlock;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, void *, uint64_t, void *, void *);
  void *v54;
  void (*v55)(uint64_t, unint64_t, uint64_t, void *);
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;

  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  swift_retain();
  v13 = objc_msgSend(a3, sel_identifier);
  sub_1BC62A79C();

  v14 = _sSo7HKQueryC15HealthRecordsUIE027predicateForRelevantAccountC09accountIdSo11NSPredicateC10Foundation4UUIDV_tFZ_0((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v15 = sub_1BC55B770();
  v16 = *(_QWORD *)(v15 + 16);
  v49 = v12;
  v50 = a4;
  if (v16)
  {
    v17 = sub_1BC558FD8(2);
    if ((v18 & 1) != 0)
    {
      v19 = *(_QWORD *)(v15 + 56) + 72 * v17;
      v20 = *(_BYTE *)v19;
      v22 = *(void **)(v19 + 8);
      v21 = *(uint64_t (**)(uint64_t, void *, uint64_t, void *, void *))(v19 + 16);
      v23 = *(void **)(v19 + 24);
      v48 = *(void (**)(uint64_t, unint64_t, uint64_t, void *))(v19 + 32);
      v25 = *(_QWORD *)(v19 + 40);
      v24 = *(_QWORD *)(v19 + 48);
      v26 = *(_QWORD *)(v19 + 56);
      v27 = *(void **)(v19 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = v27;
      v29 = v22;
      v30 = swift_bridgeObjectRelease();
      LOBYTE(aBlock) = v20;
      v52 = (uint64_t)v29;
      v53 = v21;
      v54 = v23;
      v55 = v48;
      v56 = v25;
      v57 = v24;
      v58 = v26;
LABEL_6:
      MEMORY[0x1E0C80A78](v30);
      v47 = v14;
      v32 = v14;
      swift_bridgeObjectRetain();
      sub_1BC3B1578((void (*)(uint64_t *__return_ptr, id *))sub_1BC37CCB8, (uint64_t)(&v48 - 4), v24);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v33 = v32;
      swift_bridgeObjectRelease_n();
      sub_1BC34D844();
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1BC6396B0;
      sub_1BC62C680();
      v35 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
      v36 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v37 = objc_msgSend(v35, sel_initWithKey_ascending_, v36, 0);

      *(_QWORD *)(v34 + 32) = v37;
      aBlock = v34;
      sub_1BC62C890();
      v38 = swift_allocObject();
      v39 = v49;
      *(_QWORD *)(v38 + 16) = sub_1BC37C738;
      *(_QWORD *)(v38 + 24) = v39;
      v40 = objc_allocWithZone(MEMORY[0x1E0CB6AE8]);
      sub_1BC34B6A0(0, &qword_1ED6A48A0);
      v41 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
      v42 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v55 = sub_1BC37CCF8;
      v56 = v38;
      aBlock = MEMORY[0x1E0C809B0];
      v52 = 1107296256;
      v53 = sub_1BC3BD514;
      v54 = &block_descriptor_6;
      v43 = _Block_copy(&aBlock);
      v44 = objc_msgSend(v40, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v41, v42, 0, 0, 0, 0, v43);

      _Block_release(v43);
      swift_release();
      v45 = v44;
      v46 = (void *)sub_1BC62C650();
      objc_msgSend(v45, sel_setDebugIdentifier_, v46);

      objc_msgSend(*(id *)(v50 + 16), sel_executeQuery_, v45);
      return;
    }
  }
  swift_bridgeObjectRelease();
  v31 = objc_msgSend((id)objc_opt_self(), sel_unknownRecordCategory);
  if (v31)
  {
    sub_1BC4FC8D8(v31, (uint64_t)&aBlock);
    v29 = (id)v52;
    v24 = v57;
    v28 = v59;
    goto LABEL_6;
  }
  __break(1u);
}

void sub_1BC37C1A4(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  char *v45;
  id v46;
  char *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[2];
  void (*v53)(void *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  unint64_t v66;

  v53 = a5;
  v9 = sub_1BC62A7B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62A760();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1EF42A318, (uint64_t (*)(uint64_t))sub_1BC37BB78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v19 = (_QWORD *)((char *)v52 - v18);
  sub_1BC37BB78();
  v21 = MEMORY[0x1E0C80A78](v20);
  v22 = MEMORY[0x1E0C80A78](v21);
  if (a4)
  {
    v26 = a4;
    v53(a4, 1);

    return;
  }
  v54 = (uint64_t)v52 - v23;
  v59 = v24;
  v60 = v22;
  v56 = v16;
  v57 = v14;
  v58 = v13;
  if (!a2)
  {
    v53((void *)MEMORY[0x1E0DEE9D8], 0);
    return;
  }
  v63 = v25;
  if (!(a2 >> 62))
  {
    v27 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v29 = v59;
    v28 = v60;
    if (v27)
      goto LABEL_6;
LABEL_25:
    swift_bridgeObjectRelease();
    v53((void *)MEMORY[0x1E0DEE9D8], 0);
LABEL_26:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v27 = sub_1BC62D3B8();
  v29 = v59;
  v28 = v60;
  if (!v27)
    goto LABEL_25;
LABEL_6:
  v55 = v12;
  v52[1] = a6;
  if (v27 >= 1)
  {
    v30 = 0;
    v61 = a2 & 0xC000000000000001;
    v31 = MEMORY[0x1E0DEE9D8];
    v62 = v27;
    do
    {
      v66 = v31;
      if (v61)
        v32 = (id)MEMORY[0x1BCCF24CC](v30, a2);
      else
        v32 = *(id *)(a2 + 8 * v30 + 32);
      v33 = v32;
      objc_opt_self();
      v34 = swift_dynamicCastObjCClass();
      if (v34)
      {
        v35 = (void *)v34;
        v64 = (char *)v19 + *(int *)(v28 + 48);
        v65 = (char *)v19 + *(int *)(v28 + 64);
        v33 = v33;
        v36 = v10;
        v37 = a2;
        v38 = objc_msgSend(v35, sel_displayNameForGroupByConcept);
        v39 = v9;
        v40 = sub_1BC62C680();
        v42 = v41;

        *v19 = v40;
        v19[1] = v42;
        v9 = v39;
        v43 = objc_msgSend(v35, sel_sortDate);
        v44 = objc_msgSend(v43, sel_date);

        v29 = v59;
        v45 = v56;
        sub_1BC62A724();

        a2 = v37;
        v10 = v36;
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v64, v45, v58);
        v46 = objc_msgSend(v35, sel_UUID);
        v47 = v55;
        sub_1BC62A79C();

        v48 = v47;
        v28 = v60;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v48, v9);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v19, 0, 1, v28);
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v19, 1, 1, v28);
      }

      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v29 + 48))(v19, 1, v28) == 1)
      {
        sub_1BC377E3C((uint64_t)v19, &qword_1EF42A318, (uint64_t (*)(uint64_t))sub_1BC37BB78);
        v31 = v66;
      }
      else
      {
        v49 = v54;
        sub_1BC37CD18((uint64_t)v19, v54);
        sub_1BC37CD18(v49, v63);
        v31 = v66;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v31 = sub_1BC3B5CD8(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
        v51 = *(_QWORD *)(v31 + 16);
        v50 = *(_QWORD *)(v31 + 24);
        if (v51 >= v50 >> 1)
          v31 = sub_1BC3B5CD8(v50 > 1, v51 + 1, 1, v31);
        *(_QWORD *)(v31 + 16) = v51 + 1;
        sub_1BC37CD18(v63, v31+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v51);
      }
      ++v30;
    }
    while (v62 != v30);
    swift_bridgeObjectRelease();
    v53((void *)v31, 0);
    goto LABEL_26;
  }
  __break(1u);
}

uint64_t ClinicalPublisherFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ClinicalPublisherFactory.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalPublisherFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for ClinicalPublisherFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClinicalPublisherFactory.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ClinicalPublisherFactory.makeLastRecordCreationDatePublisher(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ClinicalPublisherFactory.makeLastLabNamesPublisher(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

void sub_1BC37C730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC37BD20(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC37C738(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

unint64_t sub_1BC37C770(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  unint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_1BC37C8CC((unint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v6 = sub_1BC37C8CC((unint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x1BCCF36A8](v7, -1, -1);
  }
  return v6;
}

unint64_t sub_1BC37C8CC(unint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v5 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = *(_QWORD *)(a3 + 56) & v10;
  v12 = (unint64_t)(v9 + 63) >> 6;
  do
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
    }
    else
    {
      v16 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_23;
      if (v16 >= v12)
      {
LABEL_21:
        swift_retain();
        return sub_1BC3FC824(v5, a2, v6, a3);
      }
      v17 = *(_QWORD *)(v8 + 8 * v16);
      ++v7;
      if (!v17)
      {
        v7 = v16 + 1;
        if (v16 + 1 >= v12)
          goto LABEL_21;
        v17 = *(_QWORD *)(v8 + 8 * v7);
        if (!v17)
        {
          v7 = v16 + 2;
          if (v16 + 2 >= v12)
            goto LABEL_21;
          v17 = *(_QWORD *)(v8 + 8 * v7);
          if (!v17)
          {
            v18 = v16 + 3;
            if (v18 >= v12)
              goto LABEL_21;
            v17 = *(_QWORD *)(v8 + 8 * v18);
            if (!v17)
            {
              while (1)
              {
                v7 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_24;
                if (v7 >= v12)
                  goto LABEL_21;
                v17 = *(_QWORD *)(v8 + 8 * v7);
                ++v18;
                if (v17)
                  goto LABEL_20;
              }
            }
            v7 = v18;
          }
        }
      }
LABEL_20:
      v11 = (v17 - 1) & v17;
      v14 = __clz(__rbit64(v17)) + (v7 << 6);
    }
    *(_QWORD *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
  }
  while (!__OFADD__(v6++, 1));
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1BC37CA30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  void *v11;
  unint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  int64_t v20;
  _QWORD v21[4];
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v25 = a2;
  v29 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 56);
  v23 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & v2;
  v24 = (unint64_t)(v3 + 63) >> 6;
  v26 = a1;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v7 >= v24)
      goto LABEL_24;
    v19 = *(_QWORD *)(v23 + 8 * v7);
    if (!v19)
      break;
LABEL_19:
    v5 = (v19 - 1) & v19;
    v9 = __clz(__rbit64(v19)) + (v7 << 6);
LABEL_5:
    v27 = &v22;
    v10 = (_QWORD *)(*(_QWORD *)(v26 + 48) + 72 * v9);
    v11 = (void *)v10[1];
    v12 = v10[6];
    v13 = (void *)v10[8];
    MEMORY[0x1E0C80A78](result);
    v21[2] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v14 = v13;
    v15 = v11;
    v16 = v28;
    v17 = sub_1BC3B1578((void (*)(uint64_t *__return_ptr, id *))sub_1BC37CE70, (uint64_t)v21, v12);
    v28 = v16;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    result = sub_1BC3BB3AC(v17);
  }
  v20 = v7 + 1;
  if (v7 + 1 >= v24)
    goto LABEL_24;
  v19 = *(_QWORD *)(v23 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v7 + 2;
  if (v7 + 2 >= v24)
    goto LABEL_24;
  v19 = *(_QWORD *)(v23 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v7 + 3;
  if (v7 + 3 >= v24)
    goto LABEL_24;
  v19 = *(_QWORD *)(v23 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v7 + 4;
  if (v7 + 4 >= v24)
  {
LABEL_24:
    swift_release();
    return v29;
  }
  v19 = *(_QWORD *)(v23 + 8 * v20);
  if (v19)
  {
LABEL_18:
    v7 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v7 >= v24)
      goto LABEL_24;
    v19 = *(_QWORD *)(v23 + 8 * v7);
    ++v20;
    if (v19)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1BC37CCB8(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1BC6182C4(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BC37CCD4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC37CCF8(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  sub_1BC37C1A4(a1, a2, a3, a4, *(void (**)(void *, uint64_t))(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1BC37CD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC37BB78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC37CD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC37B37C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC37CD94(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  return sub_1BC37B69C(a1, a2, a3, a4, *(void (**)(char *))(v4 + 16));
}

void sub_1BC37CD9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC357158(255, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v7 = v6;
    v8 = sub_1BC35E44C();
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC37CE24(uint64_t a1)
{
  uint64_t v2;

  sub_1BC37CD9C(0, (unint64_t *)&unk_1EF42A320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0DEE030]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC37CE70(id *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1BC37CCB8(a1, a2);
}

id IngestionStateChangeListener.__allocating_init(currentValue:handler:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  id v10;
  char *v11;
  char *v12;
  id v13;
  objc_super v15;
  uint64_t v16;
  char v17;

  v5 = v4;
  v10 = objc_allocWithZone(v5);
  v16 = a1;
  v17 = a2 & 1;
  sub_1BC37D024();
  swift_allocObject();
  v11 = (char *)v10;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_changePublisher] = sub_1BC62BF24();
  v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_handler];
  *(_QWORD *)v12 = a3;
  *((_QWORD *)v12 + 1) = a4;
  swift_retain();

  v15.receiver = v11;
  v15.super_class = v5;
  v13 = objc_msgSendSuper2(&v15, sel_init);
  swift_release();
  return v13;
}

id IngestionStateChangeListener.init(currentValue:handler:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  char *v7;
  char *v8;
  id v9;
  objc_super v11;
  uint64_t v12;
  char v13;

  v12 = a1;
  v13 = a2 & 1;
  sub_1BC37D024();
  swift_allocObject();
  v7 = v4;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_changePublisher] = sub_1BC62BF24();
  v8 = &v7[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_handler];
  *(_QWORD *)v8 = a3;
  *((_QWORD *)v8 + 1) = a4;
  swift_retain();

  v11.receiver = v7;
  v11.super_class = (Class)type metadata accessor for IngestionStateChangeListener();
  v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_release();
  return v9;
}

void sub_1BC37D024()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4B40)
  {
    sub_1BC37D088();
    v0 = sub_1BC62BF18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4B40);
  }
}

void sub_1BC37D088()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4B58)
  {
    type metadata accessor for HKClinicalIngestionState(255);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4B58);
  }
}

uint64_t type metadata accessor for IngestionStateChangeListener()
{
  return objc_opt_self();
}

uint64_t sub_1BC37D0FC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSObject *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = sub_1BC62BB34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BAF8();
  v11 = a1;
  v12 = sub_1BC62BB28();
  v13 = sub_1BC62CAAC();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    v29 = v13;
    v30 = v8;
    v31 = v7;
    v14 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v33 = v28;
    v34 = ObjectType;
    *(_DWORD *)v14 = 136446722;
    swift_getMetatypeMetadata();
    v15 = sub_1BC62C6E0();
    v32 = a2;
    v34 = sub_1BC4991F0(v15, v16, &v33);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    v17 = v11;
    v18 = objc_msgSend(v17, sel_description);
    v19 = sub_1BC62C680();
    v21 = v20;

    v34 = sub_1BC4991F0(v19, v21, &v33);
    a2 = v32;
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2082;
    v22 = 0x80000001BC653150;
    v23 = 0xD000000000000013;
    v24 = v29;
    switch(a2)
    {
      case 0:
        v22 = 0xED00006574617453;
        v23 = 0x206E776F6E6B6E55;
        break;
      case 1:
        v22 = 0xED0000676E697473;
        v23 = 0x65676E4920746F4ELL;
        break;
      case 2:
        break;
      case 3:
        v22 = 0xE900000000000067;
        v23 = 0x6E69747365676E49;
        break;
      default:
        v22 = 0xEE002E6574617453;
        v23 = 0x206E776F6E6B6E55;
        v24 = v29;
        break;
    }
    v34 = sub_1BC4991F0(v23, v22, &v33);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v12, v24, "[%{public}s]: ingestionStateDidUpdate (store: %s, to: %{public}s)", (uint8_t *)v14, 0x20u);
    v25 = v28;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v25, -1, -1);
    MEMORY[0x1BCCF36A8](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v26 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_handler);
  swift_retain();
  v26(a2);
  swift_release();
  v34 = a2;
  v35 = 0;
  return sub_1BC62BF00();
}

id IngestionStateChangeListener.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void IngestionStateChangeListener.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id IngestionStateChangeListener.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IngestionStateChangeListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for IngestionStateChangeListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IngestionStateChangeListener.__allocating_init(currentValue:handler:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 120))(a1, a2 & 1);
}

uint64_t dispatch thunk of IngestionStateChangeListener.ingestionStateDidUpdate(clinicalIngestionStore:state:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t sub_1BC37D61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  __int128 v6;
  __int128 v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t (*v10)(void);
  uint64_t v11;
  _OWORD v12[4];
  uint64_t v13;

  if (*(_QWORD *)a1)
  {
    v6 = *(_OWORD *)(a1 + 48);
    v12[2] = *(_OWORD *)(a1 + 32);
    v12[3] = v6;
    v13 = *(_QWORD *)(a1 + 64);
    v7 = *(_OWORD *)(a1 + 16);
    v12[0] = *(_OWORD *)a1;
    v12[1] = v7;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC48C0C8((uint64_t)v12, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v11;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v10 = MEMORY[0x1E0DEB940];
    sub_1BC3801D0(a1, (uint64_t)&qword_1EF42A3B8, (uint64_t)sub_1BC380158, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BC357158);
    sub_1BC5A24DC(a2, a3, (uint64_t)v12);
    swift_bridgeObjectRelease();
    return sub_1BC3801D0((uint64_t)v12, (uint64_t)&qword_1EF42A3B8, (uint64_t)sub_1BC380158, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC357158);
  }
}

void sub_1BC37D738(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[4];
  uint64_t v17;
  void *v18;
  _BYTE v19[40];
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;

  v3 = v2;
  sub_1BC36EFF0(a1, (uint64_t)v16, &qword_1EF42A3B0, (uint64_t)&type metadata for AccountIcon);
  v5 = v16[0];
  v6 = v16[1];
  v7 = v16[2];
  v8 = v16[3];
  v10 = v17;
  v9 = v18;
  sub_1BC36EFF0(a1, (uint64_t)v19, &qword_1EF42A3B0, (uint64_t)&type metadata for AccountIcon);
  if (v20)
  {
    LOBYTE(v21) = v5 & 1;
    *((_QWORD *)&v21 + 1) = v6;
    v22 = v7;
    v23 = v8;
    v24 = v10 & 1;
    v25 = v9;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC48C5E0(&v21, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v15;
    swift_bridgeObjectRelease();
    v12 = sub_1BC62A7B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
  }
  else
  {
    sub_1BC5A25E8(a2, (uint64_t)&v21);
    v13 = sub_1BC62A7B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);

  }
}

uint64_t sub_1BC37D880(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  __int128 v4;
  __int128 v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[4];
  uint64_t v10;

  if (*(_QWORD *)a1)
  {
    v4 = *(_OWORD *)(a1 + 48);
    v9[2] = *(_OWORD *)(a1 + 32);
    v9[3] = v4;
    v10 = *(_QWORD *)(a1 + 64);
    v5 = *(_OWORD *)(a1 + 16);
    v9[0] = *(_OWORD *)a1;
    v9[1] = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BC48CFC0((uint64_t)v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    return sub_1BC348D78(a2, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  }
  else
  {
    sub_1BC3801D0(a1, (uint64_t)&qword_1ED6A4288, (uint64_t)&qword_1ED6A4280, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
    sub_1BC5A2860(a2, (uint64_t)v9);
    sub_1BC348D78(a2, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    return sub_1BC3801D0((uint64_t)v9, (uint64_t)&qword_1ED6A4288, (uint64_t)&qword_1ED6A4280, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
  }
}

void sub_1BC37D99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  char v29;
  uint64_t v31;
  _QWORD v32[6];
  _BYTE v33[32];
  unint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = v5;
  v29 = a5 & 1;
  sub_1BC36EFF0(a1, (uint64_t)v32, (unint64_t *)&qword_1ED6A4158, (uint64_t)&type metadata for BrowseIcon);
  v8 = v32[0];
  v9 = v32[1];
  v10 = v32[2];
  v11 = v32[3];
  v12 = v32[4];
  v13 = v32[5];
  sub_1BC36EFF0(a1, (uint64_t)v33, (unint64_t *)&qword_1ED6A4158, (uint64_t)&type metadata for BrowseIcon);
  if (v34 >> 1 == 0xFFFFFFFF)
  {
    v14 = sub_1BC559284(a2, a3, a4, v29);
    if ((v15 & 1) != 0)
    {
      v16 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = *v6;
      *(_QWORD *)&v35 = *v6;
      *v6 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BC5A6F04();
        v18 = v35;
      }
      v19 = *(_QWORD *)(v18 + 56) + 48 * v16;
      v20 = *(void **)v19;
      v21 = *(void **)(v19 + 8);
      v22 = *(_QWORD *)(v19 + 16);
      v23 = *(_QWORD *)(v19 + 24);
      v24 = *(_QWORD *)(v19 + 32);
      v25 = *(void **)(v19 + 40);
      sub_1BC5A41B8(v16, v18);
      *v6 = v18;
      swift_bridgeObjectRelease();
      sub_1BC378D70(v20, v21, v22, v23, v24, v25);
    }
  }
  else
  {
    *(_QWORD *)&v35 = v8;
    *((_QWORD *)&v35 + 1) = v9;
    v36 = v10;
    v37 = v11;
    v38 = v12;
    v39 = v13;
    v26 = swift_isUniquelyReferenced_nonNull_native();
    v31 = *v6;
    *v6 = 0x8000000000000000;
    sub_1BC48D12C(&v35, a2, a3, a4, v29, v26);
    *v6 = v31;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC37DB2C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  __int128 v4;
  __int128 v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[4];
  uint64_t v12;

  if (*(_QWORD *)a1)
  {
    v4 = *(_OWORD *)(a1 + 48);
    v11[2] = *(_OWORD *)(a1 + 32);
    v11[3] = v4;
    v12 = *(_QWORD *)(a1 + 64);
    v5 = *(_OWORD *)(a1 + 16);
    v11[0] = *(_OWORD *)a1;
    v11[1] = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BC48D3E8((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v10;
    swift_bridgeObjectRelease();
    v7 = sub_1BC62A7B4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
  }
  else
  {
    sub_1BC3801D0(a1, (uint64_t)&unk_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
    sub_1BC5A2A54(a2, (uint64_t)v11);
    v9 = sub_1BC62A7B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a2, v9);
    return sub_1BC3801D0((uint64_t)v11, (uint64_t)&unk_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
  }
}

unint64_t sub_1BC37DC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t result;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  char v23;
  uint64_t v25;
  _QWORD v26[4];
  uint64_t v27;
  uint64_t v28;
  char v29[40];
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v6 = v5;
  v23 = a5 & 1;
  sub_1BC36EFF0(a1, (uint64_t)v26, &qword_1EF42A3B0, (uint64_t)&type metadata for AccountIcon);
  v9 = v26[0];
  v8 = v26[1];
  v10 = v26[2];
  v11 = v26[3];
  v13 = v27;
  v12 = v28;
  sub_1BC36EFF0(a1, (uint64_t)v29, &qword_1EF42A3B0, (uint64_t)&type metadata for AccountIcon);
  if (v30)
  {
    LOBYTE(v31) = v9 & 1;
    *((_QWORD *)&v31 + 1) = v8;
    v32 = v10;
    v33 = v11;
    v34 = v13 & 1;
    v35 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = *v6;
    *v6 = 0x8000000000000000;
    sub_1BC48D554(&v31, a2, a3, a4, v23, isUniquelyReferenced_nonNull_native);
    *v6 = v25;
  }
  else
  {
    result = sub_1BC559284(a2, a3, a4, v23);
    if ((v16 & 1) == 0)
      return result;
    v17 = result;
    v18 = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v6;
    *(_QWORD *)&v31 = *v6;
    *v6 = 0x8000000000000000;
    if ((v18 & 1) == 0)
    {
      sub_1BC5A7520();
      v19 = v31;
    }
    v20 = *(void **)(*(_QWORD *)(v19 + 56) + 48 * v17 + 40);
    sub_1BC5A41B8(v17, v19);
    *v6 = v19;

  }
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC37DDD8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1BC37DE40()
{
  void *v0;
  id result;
  void *v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for AccountSelectionViewController();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = result;
  type metadata accessor for TextWithIconCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = (void *)sub_1BC62C650();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

  result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v5 = result;
  type metadata accessor for HeaderWithRightAlignedButton();
  v6 = swift_getObjCClassFromMetadata();
  v7 = (void *)sub_1BC62C650();
  objc_msgSend(v5, sel_registerClass_forHeaderFooterViewReuseIdentifier_, v6, v7);

  result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v8 = result;
  if (qword_1EF4283B8 != -1)
    swift_once();
  objc_msgSend(v8, sel_setSectionHeaderTopPadding_, *(double *)&qword_1EF42A340);

  return (id)sub_1BC37E00C();
}

uint64_t sub_1BC37E00C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t *v19;
  uint64_t result;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  void *v45;
  void *v46;
  dispatch_group_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  NSObject *v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char v72;
  char *v73;
  id v74;
  _QWORD *v75;
  uint64_t (*v76)();
  _QWORD *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v84;
  uint64_t v85;
  dispatch_group_t v86;
  void (*v87)(char *, uint64_t);
  void *v88;
  uint64_t v89;
  void *v90;
  void *v91;
  id v92;
  uint64_t (*v93)(uint64_t);
  dispatch_group_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  dispatch_group_t v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  dispatch_group_t v112;
  char *v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  _QWORD v127[3];
  char v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  void *v134;
  _QWORD v135[9];
  uint64_t v136;
  uint64_t v137;
  void *v138;
  void *v139;
  void *v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  void *v146;

  v1 = sub_1BC62C47C();
  v110 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC62C4AC();
  v96 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62A7B4();
  v124 = *(_QWORD *)(v7 - 8);
  v125 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v98 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v95 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v95 - v14;
  v126 = v16;
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v95 - v17;
  v113 = v0;
  v19 = (unint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_accountIcons];
  result = swift_beginAccess();
  if (*v19)
    return result;
  v122 = v18;
  v123 = v12;
  v109 = v15;
  *v19 = sub_1BC35C078(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  v108 = dispatch_group_create();
  v21 = *(_QWORD *)&v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts];
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC62D3B8();
    v22 = result;
    v24 = v109;
    v23 = v110;
    if (result)
      goto LABEL_4;
LABEL_19:
    swift_bridgeObjectRelease();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v88 = (void *)sub_1BC62CC74();
    v89 = swift_allocObject();
    v90 = v113;
    *(_QWORD *)(v89 + 16) = v113;
    v140 = sub_1BC364574;
    v141 = v89;
    v136 = MEMORY[0x1E0C809B0];
    v137 = 1107296256;
    v138 = sub_1BC39BE70;
    v139 = &block_descriptor_9_0;
    v91 = _Block_copy(&v136);
    v92 = v90;
    sub_1BC62C494();
    v135[0] = MEMORY[0x1E0DEE9D8];
    v93 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v93, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35811C();
    sub_1BC62D0A0();
    v94 = v108;
    sub_1BC62CC08();
    _Block_release(v91);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v6, v4);
    return swift_release();
  }
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  v24 = v109;
  v23 = v110;
  if (!v22)
    goto LABEL_19;
LABEL_4:
  v107 = v22 - 1;
  if (v22 >= 1)
  {
    v25 = *(_QWORD *)&v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_iconProvider];
    v26 = *(_QWORD *)&v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize];
    v116 = *(_QWORD *)&v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize + 8];
    v117 = v26;
    v115 = *(_QWORD *)&v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize + 16];
    v114 = v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize + 24];
    v97 = v25;
    v100 = v21 & 0xC000000000000001;
    v101 = v25 + 32;
    swift_beginAccess();
    v27 = 0;
    v121 = 0;
    v99 = v126 + 7;
    v105 = v3;
    v106 = v1;
    v103 = v6;
    v104 = v4;
    v102 = v21;
    while (1)
    {
      v42 = v125;
      v43 = v123;
      v120 = v27;
      v44 = v100 ? (id)MEMORY[0x1BCCF24CC]() : *(id *)(v21 + 8 * v27 + 32);
      v45 = v44;
      v46 = v113;
      v47 = v108;
      dispatch_group_enter(v108);
      v119 = v45;
      v48 = objc_msgSend(v45, sel_identifier);
      v49 = v122;
      sub_1BC62A79C();

      v50 = v124;
      v51 = *(void (**)(char *, char *, uint64_t))(v124 + 16);
      v51(v24, v49, v42);
      v111 = v51;
      v51(v43, v24, v42);
      v52 = (*(unsigned __int8 *)(v50 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
      v53 = (unint64_t)&v99[v52] & 0xFFFFFFFFFFFFFFF8;
      v54 = swift_allocObject();
      *(_QWORD *)(v54 + 16) = v46;
      (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v54 + v52, v24, v42);
      v118 = v54;
      *(_QWORD *)(v54 + v53) = v47;
      v55 = sub_1BC37FAE0(v101, (uint64_t)&v136);
      v56 = MEMORY[0x1E0C80A78](v55);
      *(&v95 - 2) = (uint64_t)v49;
      MEMORY[0x1E0C80A78](v56);
      *(&v95 - 4) = (uint64_t)sub_1BC37FBC8;
      *(&v95 - 3) = v57;
      *(&v95 - 2) = v58;
      sub_1BC38020C(0, &qword_1EF42A3A8, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
      v59 = v46;
      v60 = v47;
      v126 = (char *)v59;
      v61 = v60;
      v62 = v121;
      sub_1BC62CC8C();
      v63 = sub_1BC348D78((uint64_t)&v136, (uint64_t (*)(_QWORD))sub_1BC37FB24);
      if (!v135[0])
        break;
      v112 = v61;
      v127[0] = v117;
      v127[1] = v116;
      v127[2] = v115;
      v128 = v114;
      v64 = MEMORY[0x1E0C80A78](v63);
      *(&v95 - 2) = (uint64_t)v127;
      MEMORY[0x1E0C80A78](v64);
      *(&v95 - 4) = (uint64_t)sub_1BC37FC84;
      *(&v95 - 3) = v65;
      *(&v95 - 2) = v66;
      sub_1BC34B508(0, &qword_1EF42A3B0, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1BC62CC8C();
      v121 = v62;
      v67 = v129;
      v68 = v130;
      v69 = v131;
      v70 = v132;
      v72 = v133;
      v71 = v134;
      sub_1BC3801D0((uint64_t)v135, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
      v73 = v98;
      if (!v71)
      {
        v61 = v112;
LABEL_7:
        v28 = v97;
        v29 = objc_msgSend(*(id *)(v97 + 24), sel_healthRecordsStore);
        v30 = objc_msgSend(v29, sel_healthStore);

        v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EE98]), sel_initWithHealthStore_, v30);
        v32 = v122;
        v33 = (void *)sub_1BC62A784();
        v34 = swift_allocObject();
        v35 = v118;
        *(_QWORD *)(v34 + 16) = sub_1BC37FA8C;
        *(_QWORD *)(v34 + 24) = v35;
        v36 = v117;
        *(_QWORD *)(v34 + 32) = v28;
        *(_QWORD *)(v34 + 40) = v36;
        v37 = v115;
        *(_QWORD *)(v34 + 48) = v116;
        *(_QWORD *)(v34 + 56) = v37;
        *(_BYTE *)(v34 + 64) = v114;
        v140 = sub_1BC37FC18;
        v141 = v34;
        v136 = MEMORY[0x1E0C809B0];
        v137 = 1107296256;
        v138 = sub_1BC46FB0C;
        v139 = &block_descriptor_7;
        v38 = _Block_copy(&v136);
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v31, sel_fetchAccountWithIdentifier_completion_, v33, v38);
        _Block_release(v38);

        swift_release();
        v39 = *(void (**)(char *, uint64_t))(v124 + 8);
        v40 = v125;
        v39(v123, v125);

        v39(v32, v40);
        v1 = v106;
        v41 = v120;
        v24 = v109;
        v23 = v110;
        v4 = v104;
        v3 = v105;
        v21 = v102;
        v6 = v103;
        if (v107 == v120)
          goto LABEL_19;
        goto LABEL_8;
      }
      LOBYTE(v142) = v67 & 1;
      *((_QWORD *)&v142 + 1) = v68;
      v143 = v69;
      v144 = v70;
      v145 = v72 & 1;
      v146 = v71;
      v74 = v71;
      v76 = sub_1BC37DDD8();
      if (*v75)
      {
        v77 = v75;
        v78 = v73;
        v79 = v123;
        v80 = (uint64_t)v73;
        v81 = v125;
        v111(v78, v123, v125);
        v82 = v74;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v135[0] = *v77;
        *v77 = 0x8000000000000000;
        sub_1BC48C5E0(&v142, v80, isUniquelyReferenced_nonNull_native);
        *v77 = v135[0];
        swift_bridgeObjectRelease();
        v84 = v124;
        (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v80, v81);
        ((void (*)(uint64_t *, _QWORD))v76)(&v136, 0);
        v85 = v110;
        v3 = v105;
        v6 = v103;
      }
      else
      {
        ((void (*)(uint64_t *, _QWORD))v76)(&v136, 0);
        v85 = v110;
        v3 = v105;
        v6 = v103;
        v84 = v124;
        v81 = v125;
        v79 = v123;
      }
      v86 = v112;
      dispatch_group_leave(v112);

      swift_release();
      v87 = *(void (**)(char *, uint64_t))(v84 + 8);
      v87(v79, v81);

      v87(v122, v81);
      v1 = v106;
      v41 = v120;
      v4 = v104;
      v24 = v109;
      v21 = v102;
      v23 = v85;
      if (v107 == v120)
        goto LABEL_19;
LABEL_8:
      v27 = v41 + 1;
    }
    v121 = v62;
    sub_1BC3801D0((uint64_t)v135, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_1BC37E9E8(uint64_t *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t (*v16)();
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t v25;
  dispatch_group_t v26;
  uint64_t v27;
  _BYTE v28[32];
  _QWORD v29[6];

  v26 = a4;
  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v10 = a1[1];
  v12 = a1[2];
  v13 = a1[3];
  v14 = (void *)a1[5];
  v24 = a1[4];
  v25 = v10;
  v15 = *((_BYTE *)a1 + 48);
  v16 = sub_1BC37DDD8();
  if (*v17)
  {
    v23 = v16;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
    if ((v15 & 1) != 0)
    {
      v27 = v11;
      sub_1BC35E44C();
      swift_willThrowTypedImpl();
      v18 = 0;
      v19 = 0;
      v12 = 0;
      v13 = 0;
      v20 = 0;
      v14 = 0;
    }
    else
    {
      v18 = v11 & 1;
      v20 = v24 & 1;
      v21 = v14;
      v19 = v25;
    }
    v29[0] = v18;
    v29[1] = v19;
    v29[2] = v12;
    v29[3] = v13;
    v29[4] = v20;
    v29[5] = v14;
    sub_1BC37D738((uint64_t)v29, (uint64_t)v9);
    ((void (*)(_BYTE *, _QWORD))v23)(v28, 0);
  }
  else
  {
    ((void (*)(_BYTE *, _QWORD))v16)(v28, 0);
  }
  dispatch_group_leave(v26);
}

char *sub_1BC37EBD0(void *a1, void *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t *v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  char v22;
  unsigned __int8 *v23;
  int v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD *);
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v67;
  char *v68;
  int v69;
  uint64_t v70;
  id v71;
  void *v72;
  __int128 v73;
  uint64_t v74;
  char v75;
  char v76[8];
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;
  void *v80;

  v4 = v2;
  v7 = (_QWORD *)sub_1BC62A7B4();
  v8 = *(v7 - 1);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)sub_1BC62C650();
  v12 = sub_1BC62A928();
  v13 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v11, v12);

  type metadata accessor for TextWithIconCell();
  v14 = (char *)swift_dynamicCastClassUnconditional();
  v15 = *(_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts);
  v16 = sub_1BC62A94C();
  v72 = a2;
  if ((v15 & 0xC000000000000001) == 0)
  {
    if ((v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v16 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v17 = *(id *)(v15 + 8 * v16 + 32);
      goto LABEL_5;
    }
    __break(1u);
LABEL_53:
    v7 = sub_1BC3B5060(0, v7[2] + 1, 1, v7);
    goto LABEL_39;
  }
  v17 = (id)MEMORY[0x1BCCF24CC](v16, v15);
LABEL_5:
  v3 = v17;
  v18 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_accountIcons);
  swift_beginAccess();
  v19 = *v18;
  v71 = v13;
  if (v19)
  {
    swift_bridgeObjectRetain();
    v20 = objc_msgSend(v3, sel_identifier);
    sub_1BC62A79C();

    if (*(_QWORD *)(v19 + 16))
    {
      v21 = sub_1BC559014((uint64_t)v10);
      if ((v22 & 1) != 0)
      {
        v23 = (unsigned __int8 *)(*(_QWORD *)(v19 + 56) + 48 * v21);
        v24 = *v23;
        v67 = *((_QWORD *)v23 + 1);
        v68 = v14;
        v25 = *((_QWORD *)v23 + 3);
        v70 = *((_QWORD *)v23 + 2);
        v69 = v23[32];
        v26 = *(void (**)(char *, _QWORD *))(v8 + 8);
        v27 = *((id *)v23 + 5);
        v26(v10, v7);
        v14 = v68;
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    (*(void (**)(char *, _QWORD *))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease();
  }
  v28 = objc_msgSend(v3, sel_title);
  v29 = sub_1BC62C680();
  v31 = v30;

  v32 = *(_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize + 16);
  v33 = *(_BYTE *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize + 24);
  v73 = *(_OWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize);
  v74 = v32;
  v75 = v33;
  sub_1BC512C94(v29, v31, (uint64_t)&v73, (uint64_t)v76);
  swift_bridgeObjectRelease();
  v24 = v76[0];
  v70 = v77;
  v25 = v78;
  v69 = v79;
  v27 = v80;
LABEL_11:
  v34 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts);
  swift_beginAccess();
  v35 = *v34;
  swift_bridgeObjectRetain();
  LOBYTE(v4) = sub_1BC5DC4E0(v3, v35);
  swift_bridgeObjectRelease();
  v36 = sub_1BC4DAD68();
  v37 = objc_msgSend(v3, sel_title);
  if (!v37)
  {
    sub_1BC62C680();
    v37 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v36, sel_setText_, v37);

  v38 = sub_1BC4DACD0();
  objc_msgSend(v38, sel_setImage_, v27);

  v39 = sub_1BC4DACD0();
  if (v24)
    v40 = 0;
  else
    v40 = v25;
  if (v24)
    v41 = 2;
  else
    v41 = 0;
  if (((v24 | v69 ^ 1) & 1) != 0)
    v42 = v40;
  else
    v42 = 0x4008000000000000;
  if (((v24 | v69 ^ 1) & 1) != 0)
    v43 = v41;
  else
    v43 = 0;
  *(_QWORD *)&v73 = v42;
  BYTE8(v73) = v43;
  UIImageView.applyStyle(_:)((uint64_t)&v73);

  sub_1BC37859C((id)v42, v43);
  v13 = v71;
  if ((v4 & 1) != 0)
    v44 = sub_1BC378B4C();
  else
    v44 = sub_1BC378B70();
  v45 = v44;
  v71 = v27;
  objc_msgSend(v14, sel_setAccessoryView_, v44);

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = (_QWORD *)swift_allocObject();
  *((_OWORD *)v7 + 1) = xmmword_1BC6398E0;
  v7[4] = 0x6F6974704F464450;
  v7[5] = 0xEA0000000000736ELL;
  v7[6] = 0x43746E756F636341;
  v7[7] = 0xEB000000006C6C65;
  *(_QWORD *)&v73 = sub_1BC62A94C();
  sub_1BC359F98();
  v7[8] = sub_1BC62D07C();
  v7[9] = v46;
  v47 = (void *)sub_1BC62C86C();
  v48 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v48)
  {
    v49 = sub_1BC62C680();
    v51 = v50;

  }
  else
  {
    v49 = 0;
    v51 = 0;
  }
  v52 = (uint64_t *)&v14[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell_baseAccessibilityIdentifier];
  *v52 = v49;
  v52[1] = v51;
  swift_bridgeObjectRelease();
  sub_1BC4DAE48();
  v53 = objc_msgSend(v14, sel_accessoryView);
  if (!v53)
  {
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  a2 = v53;
  if ((v4 & 1) != 0)
    v12 = 0x64657463656C6553;
  else
    v12 = 0x7463656C65736544;
  if ((v4 & 1) != 0)
    v8 = 0xE800000000000000;
  else
    v8 = 0xEA00000000006465;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_53;
LABEL_39:
  v55 = v7[2];
  v54 = v7[3];
  if (v55 >= v54 >> 1)
    v7 = sub_1BC3B5060((_QWORD *)(v54 > 1), v55 + 1, 1, v7);
  v7[2] = v55 + 1;
  v56 = &v7[2 * v55];
  v56[4] = v12;
  v56[5] = v8;
  swift_bridgeObjectRelease();
  v57 = (void *)sub_1BC62C86C();
  v58 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(a2, sel_setAccessibilityIdentifier_, v58);
  swift_bridgeObjectRelease();

LABEL_43:
  v59 = v13;
  v60 = objc_msgSend(v3, sel_title);
  v61 = sub_1BC62C680();
  v63 = v62;

  *(_QWORD *)&v73 = v61;
  *((_QWORD *)&v73 + 1) = v63;
  sub_1BC62C764();
  if ((v4 & 1) != 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
  }
  else if (qword_1ED6A4888 != -1)
  {
    swift_once();
  }
  v64 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v65 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setAccessibilityLabel_, v65);

  return v14;
}

void sub_1BC37F4EC(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  void *v11;
  void *v12;

  v3 = (void *)sub_1BC62A928();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v3, 1);

  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts);
  v5 = sub_1BC62A94C();
  if ((v4 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1BCCF24CC](v5, v4);
    goto LABEL_5;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v5 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    __break(1u);
    return;
  }
  v6 = *(id *)(v4 + 8 * v5 + 32);
LABEL_5:
  v7 = v6;
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts);
  swift_beginAccess();
  v9 = *v8;
  swift_bridgeObjectRetain();
  v10 = sub_1BC5DC4E0(v7, v9);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if ((v10 & 1) != 0)
  {
    v11 = (void *)sub_1BC3FA8D4(v7);
  }
  else
  {
    sub_1BC48EA38(&v12, v7);
    v11 = v12;
  }
  swift_endAccess();

  sub_1BC37F7FC();
}

char *sub_1BC37F6E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts;
  swift_beginAccess();
  if ((*(_QWORD *)v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D118();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  }
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v2 == v5)
      goto LABEL_6;
LABEL_8:
    v6 = swift_bridgeObjectRetain();
    v4 = sub_1BC58C148(v6);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v2 != *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_8;
LABEL_6:
  v4 = MEMORY[0x1E0DEE9E8];
LABEL_9:
  *(_QWORD *)v1 = v4;
  swift_bridgeObjectRelease();
  return sub_1BC37F7FC();
}

char *sub_1BC37F7FC()
{
  char *v0;
  char *result;
  void *v2;
  char *v3;
  char *v4;

  result = (char *)objc_msgSend(v0, sel_tableView);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, sel_reloadData);

    result = (char *)MEMORY[0x1BCCF37A4](&v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_delegate]);
    if (result)
    {
      v3 = result;
      v4 = &v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts];
      swift_beginAccess();
      *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource] + 112) = *(_QWORD *)v4;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BC467CF4();
      swift_bridgeObjectRelease();
      return (char *)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BC37F930()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountSelectionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AccountSelectionViewController()
{
  return objc_opt_self();
}

void sub_1BC37F9EC()
{
  qword_1EF42A340 = 0x4028000000000000;
}

uint64_t sub_1BC37F9FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1BC37FA8C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1BC37E9E8(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(NSObject **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BC37FAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC37FB24(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC37FB24(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!qword_1EF42A3A0)
  {
    v2 = sub_1BC62A7B4();
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC380260(255, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
    v5 = v4;
    v6 = sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v3, MEMORY[0x1E0CB09C8]);
    v7 = type metadata accessor for UnboundedCache(a1, v2, v5, v6);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_1EF42A3A0);
  }
}

double sub_1BC37FBC8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC5142F8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BC37FBD0()
{
  uint64_t v0;

  return sub_1BC4D3820(*(void (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BC37FBEC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC37FC18(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC5131C0(a1, a2, *(void (**)(double *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1BC37FC60()
{
  uint64_t v0;

  return swift_deallocObject();
}

double sub_1BC37FC84@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC5142E0(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1BC37FC8C()
{
  char *v0;
  uint64_t v1;
  char *v2;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_iconProvider;
  if (qword_1ED6A31F0 != -1)
    swift_once();
  *(_QWORD *)&v0[v1] = qword_1ED6A4498;
  v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize];
  *((_QWORD *)v2 + 1) = 0;
  *((_QWORD *)v2 + 2) = 0;
  *(_QWORD *)v2 = 0;
  v2[24] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_accountIcons] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_retain();

  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC37FD70(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _OWORD *v20;
  uint64_t v21;

  v2 = v1;
  v4 = (void *)sub_1BC62C650();
  v5 = objc_msgSend(a1, sel_dequeueReusableHeaderFooterViewWithIdentifier_, v4);

  if (!v5)
    return 0;
  type metadata accessor for HeaderWithRightAlignedButton();
  v6 = swift_dynamicCastClass();
  if (v6)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v7 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v8 = sub_1BC62A4A8();
    v10 = v9;
    swift_bridgeObjectRelease();

    v11 = (uint64_t *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText);
    swift_beginAccess();
    *v11 = v8;
    v11[1] = v10;
    swift_bridgeObjectRelease();
    v12 = *(void **)(v6 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel);
    if (v11[1])
    {
      swift_bridgeObjectRetain();
      v13 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v12, sel_setText_, v13, 0xE000000000000000);

    v14 = (_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts);
    swift_beginAccess();
    if ((*v14 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1BC62D118();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts) >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
    v15 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v16 = sub_1BC62A4A8();
    v18 = v17;
    swift_bridgeObjectRelease();

    v19 = (uint64_t *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText);
    swift_beginAccess();
    *v19 = v16;
    v19[1] = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC62CEF0();
    swift_bridgeObjectRelease();
    v20 = (_OWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier);
    swift_beginAccess();
    *v20 = xmmword_1BC6398F0;
    swift_bridgeObjectRelease();
    sub_1BC535950();
    v21 = v6 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
    swift_beginAccess();
    *(_QWORD *)(v21 + 8) = &off_1E74D56D0;
    swift_unknownObjectWeakAssign();
  }
  else
  {

  }
  return v6;
}

void sub_1BC380158(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED6A4278)
  {
    v2 = sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A47F8);
    v3 = sub_1BC35EB18();
    v4 = type metadata accessor for UnboundedCache(a1, MEMORY[0x1E0DEF040], v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED6A4278);
  }
}

uint64_t sub_1BC3801D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;

  v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1BC38020C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC380260(255, a3, a4);
    v5 = sub_1BC62CFE0();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC380260(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC35EA60();
    v7 = type metadata accessor for UnboundedCache(a1, (uint64_t)&type metadata for AccountIcon.Size, a3, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC3802C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC3849DC(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_1BC3802D8()
{
  type metadata accessor for PDFAttachmentCell(0);
  sub_1BC347F0C((unint64_t *)&unk_1EF42ADF0, type metadata accessor for PDFAttachmentCell, (uint64_t)&unk_1BC63A788);
  return sub_1BC62ADA8();
}

unint64_t sub_1BC380324()
{
  sub_1BC62A778();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

id sub_1BC380384()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  objc_class *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;

  v1 = qword_1EF42A3E0;
  v2 = *(void **)&v0[qword_1EF42A3E0];
  if (v2)
  {
    v3 = *(id *)&v0[qword_1EF42A3E0];
  }
  else
  {
    v4 = v0;
    v5 = sub_1BC381F54();
    v6 = objc_msgSend(v5, sel_heightAnchor);

    v7 = objc_msgSend(v4, sel_contentView);
    objc_msgSend(v7, sel_bounds);

    v8 = (objc_class *)sub_1BC62B3E4();
    sub_1BC62B3CC();
    v9 = objc_allocWithZone(v8);
    v10 = (void *)sub_1BC62B3D8();
    objc_msgSend(v10, sel_itemSize);
    v12 = v11;

    v13 = objc_msgSend(v6, sel_constraintEqualToConstant_, v12);
    v14 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v13;
    v3 = v13;

    v2 = 0;
  }
  v15 = v2;
  return v3;
}

char *sub_1BC3804D4(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = qword_1EF42A3D8;
  v11 = objc_allocWithZone((Class)sub_1BC62B168());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_init);
  *(_QWORD *)&v12[qword_1EF42A3E0] = 0;

  v19.receiver = v12;
  v19.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  v14 = sub_1BC381F54();
  objc_msgSend(v14, sel_setDataSource_, *(_QWORD *)&v13[qword_1EF42A3D8]);

  v15 = v13;
  v16 = sub_1BC381F54();

  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_initWithTarget_action_, v15, sel_didTapPreview_);
  objc_msgSend(v16, sel_addGestureRecognizer_, v17);

  return v15;
}

char *sub_1BC380624(double a1, double a2, double a3, double a4)
{
  return sub_1BC3804D4(a1, a2, a3, a4);
}

void sub_1BC380644(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;

  v5 = qword_1EF42A3D8;
  v6 = objc_allocWithZone((Class)sub_1BC62B168());
  v7 = a3;
  *(_QWORD *)&a1[v5] = objc_msgSend(v6, sel_init);
  *(_QWORD *)&a1[qword_1EF42A3E0] = 0;

  sub_1BC62D394();
  __break(1u);
}

void sub_1BC3806EC(void *a1)
{
  id v1;
  id v2;
  id v3;
  objc_class *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  objc_super v13;

  v13.receiver = a1;
  v13.super_class = (Class)swift_getObjectType();
  v1 = v13.receiver;
  objc_msgSendSuper2(&v13, sel_layoutSubviews);
  v2 = sub_1BC381F54();
  v3 = objc_msgSend(v1, sel_contentView, v13.receiver, v13.super_class);
  objc_msgSend(v3, sel_bounds);

  v4 = (objc_class *)sub_1BC62B3E4();
  sub_1BC62B3CC();
  v5 = objc_allocWithZone(v4);
  v6 = (void *)sub_1BC62B3D8();
  objc_msgSend(v2, sel_setCollectionViewLayout_animated_, v6, 0);

  v7 = sub_1BC380384();
  v8 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v8, sel_bounds);

  sub_1BC62B3CC();
  v9 = objc_allocWithZone(v4);
  v10 = (void *)sub_1BC62B3D8();
  objc_msgSend(v10, sel_itemSize);
  v12 = v11;

  objc_msgSend(v7, sel_setConstant_, v12);
  objc_msgSend(v1, sel_invalidateIntrinsicContentSize);

}

id sub_1BC3808CC()
{
  void *v0;
  id v1;
  objc_class *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v1 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_bounds);

  v2 = (objc_class *)sub_1BC62B3E4();
  sub_1BC62B3CC();
  v3 = objc_allocWithZone(v2);
  sub_1BC62B3D8();
  v4 = objc_allocWithZone((Class)sub_1BC62B474());
  v5 = (void *)sub_1BC62B468();
  objc_msgSend(v5, sel_setShowsHorizontalScrollIndicator_, 0);
  v6 = (void *)objc_opt_self();
  v7 = v5;
  v8 = objc_msgSend(v6, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v8);

  return v7;
}

void sub_1BC3809FC()
{
  id v0;

  sub_1BC380A60();
  sub_1BC62B15C();
  v0 = sub_1BC381F54();
  objc_msgSend(v0, sel_reloadData);

}

void sub_1BC380A60()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = v0;
  type metadata accessor for PDFAttachmentItem(0);
  type metadata accessor for AttachmentContext();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v2 = sub_1BC381EF4();
  v3 = sub_1BC57F488();

  v4 = (void *)sub_1BC62C650();
  objc_msgSend(v3, sel_setText_, v4);

  v5 = sub_1BC381EF4();
  v6 = sub_1BC57F57C();

  v7 = (void *)sub_1BC62C650();
  objc_msgSend(v6, sel_setText_, v7);

  sub_1BC62C764();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v8 = (id)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityLabel_, v8);

}

void sub_1BC380BC0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = v0;
  type metadata accessor for AttachmentContext();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v2 = sub_1BC381EF4();
  v3 = sub_1BC57F488();

  v4 = (void *)sub_1BC62C650();
  objc_msgSend(v3, sel_setText_, v4);

  v5 = sub_1BC381EF4();
  v6 = sub_1BC57F57C();

  v7 = (void *)sub_1BC62C650();
  objc_msgSend(v6, sel_setText_, v7);

  sub_1BC62C764();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v8 = (id)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityLabel_, v8);

}

void sub_1BC380D14()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  _QWORD v19[2];

  v1 = v0;
  v2 = *MEMORY[0x1E0DEEDD8] & *v0;
  v3 = type metadata accessor for AttachmentContext();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v2 + 96);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 16);
  v8 = *(_QWORD *)(v2 + 80);
  v7(v8, v6);
  v9 = &v5[*(int *)(v3 + 20)];
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  swift_bridgeObjectRetain();
  sub_1BC348D78((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
  v7(v8, v6);
  swift_bridgeObjectRetain();
  sub_1BC348D78((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
  v12 = sub_1BC381EF4();
  v13 = sub_1BC57F488();

  v14 = (void *)sub_1BC62C650();
  objc_msgSend(v13, sel_setText_, v14);

  v15 = sub_1BC381EF4();
  v16 = sub_1BC57F57C();

  v17 = (void *)sub_1BC62C650();
  objc_msgSend(v16, sel_setText_, v17);

  v19[0] = v10;
  v19[1] = v11;
  sub_1BC62C764();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityLabel_, v18);

}

void sub_1BC380EF8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  sub_1BC3810B8();
  v1 = (void *)objc_opt_self();
  sub_1BC34D844();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC639580;
  v3 = sub_1BC381F54();
  v4 = objc_msgSend(v3, sel_leadingAnchor);

  v5 = objc_msgSend(v0, sel_contentView);
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = sub_1BC381F54();
  v9 = objc_msgSend(v8, sel_trailingAnchor);

  v10 = objc_msgSend(v0, sel_contentView);
  v11 = objc_msgSend(v10, sel_trailingAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  *(_QWORD *)(v2 + 40) = v12;
  *(_QWORD *)(v2 + 48) = sub_1BC380384();
  sub_1BC62C890();
  sub_1BC34D89C();
  v13 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v13);

}

void sub_1BC3810B8()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = objc_msgSend(v1, sel_layoutMarginsGuide);

  v27 = (void *)objc_opt_self();
  sub_1BC34D844();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC63A3C0;
  v4 = sub_1BC381EF4();
  v5 = objc_msgSend(v4, sel_topAnchor);

  v6 = objc_msgSend(v0, sel_contentView);
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v7, 16.0);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = sub_1BC381EF4();
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = objc_msgSend(v2, sel_leadingAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(_QWORD *)(v3 + 40) = v12;
  v13 = sub_1BC381EF4();
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v2, sel_trailingAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v3 + 48) = v16;
  v17 = sub_1BC381F54();
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = sub_1BC381EF4();
  v20 = objc_msgSend(v19, sel_bottomAnchor);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 16.0);
  *(_QWORD *)(v3 + 56) = v21;
  v22 = objc_msgSend(v0, sel_contentView);
  v23 = objc_msgSend(v22, sel_bottomAnchor);

  v24 = sub_1BC381F54();
  v25 = objc_msgSend(v24, sel_bottomAnchor);

  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, 30.0);
  *(_QWORD *)(v3 + 64) = v26;
  sub_1BC62C890();
  sub_1BC34D89C();
  v28 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, v28);

}

void sub_1BC3813E8()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = objc_msgSend(v1, sel_layoutMarginsGuide);

  v27 = (void *)objc_opt_self();
  sub_1BC34D844();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC63A3C0;
  v4 = sub_1BC381EF4();
  v5 = objc_msgSend(v4, sel_topAnchor);

  v6 = objc_msgSend(v0, sel_contentView);
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v7, 16.0);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = sub_1BC381EF4();
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = objc_msgSend(v2, sel_leadingAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(_QWORD *)(v3 + 40) = v12;
  v13 = sub_1BC381EF4();
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v2, sel_trailingAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v3 + 48) = v16;
  v17 = sub_1BC381F54();
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = sub_1BC381EF4();
  v20 = objc_msgSend(v19, sel_bottomAnchor);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 16.0);
  *(_QWORD *)(v3 + 56) = v21;
  v22 = objc_msgSend(v0, sel_contentView);
  v23 = objc_msgSend(v22, sel_bottomAnchor);

  v24 = sub_1BC381F54();
  v25 = objc_msgSend(v24, sel_bottomAnchor);

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25);

  *(_QWORD *)(v3 + 64) = v26;
  sub_1BC62C890();
  sub_1BC34D89C();
  v28 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, v28);

}

void sub_1BC381730()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  _QWORD *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = objc_msgSend(v1, sel_layoutMarginsGuide);

  v28 = (void *)objc_opt_self();
  sub_1BC34D844();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC63A3C0;
  v4 = sub_1BC381EF4();
  v5 = objc_msgSend(v4, sel_topAnchor);

  v6 = objc_msgSend(v0, sel_contentView);
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v7, 16.0);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = sub_1BC381EF4();
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = objc_msgSend(v2, sel_leadingAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(_QWORD *)(v3 + 40) = v12;
  v13 = sub_1BC381EF4();
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v2, sel_trailingAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v3 + 48) = v16;
  v17 = sub_1BC381F54();
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = sub_1BC381EF4();
  v20 = objc_msgSend(v19, sel_bottomAnchor);

  v21 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
  v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20);

  *(_QWORD *)(v3 + 56) = v22;
  v23 = objc_msgSend(v0, sel_contentView);
  v24 = objc_msgSend(v23, sel_bottomAnchor);

  v25 = sub_1BC381F54();
  v26 = objc_msgSend(v25, sel_bottomAnchor);

  (*(void (**)(void))((*v21 & *v0) + 0xC0))();
  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26);

  *(_QWORD *)(v3 + 64) = v27;
  sub_1BC62C890();
  sub_1BC34D89C();
  v29 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_activateConstraints_, v29);

}

void sub_1BC381A88()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  _QWORD *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = objc_msgSend(v1, sel_layoutMarginsGuide);

  v28 = (void *)objc_opt_self();
  sub_1BC34D844();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC63A3C0;
  v4 = sub_1BC381EF4();
  v5 = objc_msgSend(v4, sel_topAnchor);

  v6 = objc_msgSend(v0, sel_contentView);
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v7, 16.0);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = sub_1BC381EF4();
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = objc_msgSend(v2, sel_leadingAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(_QWORD *)(v3 + 40) = v12;
  v13 = sub_1BC381EF4();
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v2, sel_trailingAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v3 + 48) = v16;
  v17 = (void *)sub_1BC381F50();
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = sub_1BC381EF4();
  v20 = objc_msgSend(v19, sel_bottomAnchor);

  v21 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
  v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20);

  *(_QWORD *)(v3 + 56) = v22;
  v23 = objc_msgSend(v0, sel_contentView);
  v24 = objc_msgSend(v23, sel_bottomAnchor);

  v25 = (void *)sub_1BC381F50();
  v26 = objc_msgSend(v25, sel_bottomAnchor);

  (*(void (**)(void))((*v21 & *v0) + 0xC0))();
  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26);

  *(_QWORD *)(v3 + 64) = v27;
  sub_1BC62C890();
  sub_1BC34D89C();
  v29 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_activateConstraints_, v29);

}

void sub_1BC381DE0(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1BC384A20();

}

void sub_1BC381E2C()
{
  uint64_t v0;

}

void sub_1BC381E5C(uint64_t a1)
{

}

uint64_t type metadata accessor for PDFAttachmentCell(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42A410);
}

uint64_t sub_1BC381EA8()
{
  return swift_initClassMetadata2();
}

id sub_1BC381EF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF42ABD8;
  v2 = *(void **)(v0 + qword_1EF42ABD8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF42ABD8);
  }
  else
  {
    v4 = sub_1BC3834A8();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC381F54()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = qword_1EF42ABE0;
  v2 = *(void **)((char *)v0 + qword_1EF42ABE0);
  if (v2)
  {
    v3 = *(id *)((char *)v0 + qword_1EF42ABE0);
  }
  else
  {
    v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
    v5 = *(void **)((char *)v0 + v1);
    *(_QWORD *)((char *)v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

double sub_1BC381FC8()
{
  return 16.0;
}

double sub_1BC381FD0()
{
  return 30.0;
}

uint64_t sub_1BC381FD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_1EF42ABE8;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC382028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_1EF42ABE8;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC383540();
  return sub_1BC384EB4(a1, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t (*sub_1BC3820A4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC3820EC;
}

uint64_t sub_1BC3820EC(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC383540();
  return result;
}

uint64_t sub_1BC38211C()
{
  return type metadata accessor for PDFAttachmentCell(0);
}

uint64_t sub_1BC382124()
{
  return sub_1BC382DFC(&OBJC_IVAR____TtC15HealthRecordsUI19ImageAttachmentItem_context);
}

uint64_t sub_1BC382130()
{
  return type metadata accessor for ImageAttachmentItem(0);
}

uint64_t type metadata accessor for ImageAttachmentItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42A580);
}

uint64_t sub_1BC38214C()
{
  return sub_1BC3829F4();
}

uint64_t sub_1BC38215C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1BC3849DC(*v1 + OBJC_IVAR____TtC15HealthRecordsUI19ImageAttachmentItem_context, a1);
}

uint64_t sub_1BC382174(uint64_t a1, uint64_t a2)
{
  return sub_1BC382F10(a1, a2, type metadata accessor for ImageAttachmentCell, &qword_1EF42ADD8);
}

uint64_t sub_1BC382188()
{
  return sub_1BC382D7C();
}

id sub_1BC3821B0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  id v11;

  v1 = qword_1EF42A618;
  v2 = *(void **)&v0[qword_1EF42A618];
  if (v2)
  {
    v3 = *(id *)&v0[qword_1EF42A618];
  }
  else
  {
    v4 = sub_1BC381F54();
    v5 = objc_msgSend(v4, sel_widthAnchor);

    v6 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v6, sel_bounds);
    v8 = v7;

    v9 = objc_msgSend(v5, sel_constraintEqualToConstant_, v8 * 0.68);
    v10 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1BC382290()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  double v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, sel_layoutSubviews);
  v1 = sub_1BC3821B0();
  v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v2, sel_bounds);
  v4 = v3;

  objc_msgSend(v1, sel_setConstant_, v4 * 0.68);
  if ((v0[qword_1EF42A620 + 8] & 1) == 0)
  {
    v5 = *(double *)&v0[qword_1EF42A620];
    v6 = sub_1BC381F54();
    v7 = objc_msgSend(v6, sel_heightAnchor);

    v8 = sub_1BC381F54();
    v9 = objc_msgSend(v8, sel_widthAnchor);

    v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_multiplier_, v9, v5);
    v11 = qword_1EF42A610;
    v12 = *(void **)&v0[qword_1EF42A610];
    *(_QWORD *)&v0[qword_1EF42A610] = v10;
    v13 = v10;
    if (v12)
      objc_msgSend(v12, sel_setActive_, 0);
    v14 = *(void **)&v0[v11];
    if (v14)
      objc_msgSend(v14, sel_setActive_, 1);

  }
  return objc_msgSend(v0, sel_invalidateIntrinsicContentSize);
}

void sub_1BC382424(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC382290();

}

id sub_1BC382458()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone((Class)sub_1BC62B078()), sel_init);
  objc_msgSend(v0, sel_setContentMode_, 1);
  return v0;
}

void sub_1BC3824A0(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  double v5;
  double v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;

  sub_1BC380BC0();
  v3 = sub_1BC381F54();
  v4 = *(void **)(a1 + 16);
  objc_msgSend(v3, sel_setImage_, v4);

  objc_msgSend(v4, sel_size);
  if (v5 <= 0.0)
  {
    v16 = sub_1BC381F54();
    v17 = objc_msgSend(v16, sel_heightAnchor);

    v18 = objc_msgSend(v17, sel_constraintEqualToConstant_, 0.0);
    v14 = qword_1EF42A610;
    v15 = *(void **)(v1 + qword_1EF42A610);
    *(_QWORD *)(v1 + qword_1EF42A610) = v18;
    v20 = v18;
    if (!v15)
      goto LABEL_8;
    goto LABEL_7;
  }
  v7 = v1 + qword_1EF42A620;
  *(double *)v7 = v6 / v5;
  *(_BYTE *)(v7 + 8) = 0;
  v8 = sub_1BC381F54();
  v9 = objc_msgSend(v8, sel_heightAnchor);

  v10 = sub_1BC381F54();
  v11 = objc_msgSend(v10, sel_widthAnchor);

  v12 = *(double *)v7;
  if (*(_BYTE *)(v7 + 8))
    v12 = 0.0;
  v13 = objc_msgSend(v9, sel_constraintEqualToAnchor_multiplier_, v11, v12);

  v14 = qword_1EF42A610;
  v15 = *(void **)(v1 + qword_1EF42A610);
  *(_QWORD *)(v1 + qword_1EF42A610) = v13;
  v20 = v13;
  if (v15)
LABEL_7:
    objc_msgSend(v15, sel_setActive_, 0);
LABEL_8:
  v19 = *(void **)(v1 + v14);
  if (v19)
    objc_msgSend(v19, sel_setActive_, 1);

}

void sub_1BC38266C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  sub_1BC3810B8();
  v1 = (void *)objc_opt_self();
  sub_1BC34D844();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC639570;
  v3 = sub_1BC381F54();
  v4 = objc_msgSend(v3, sel_centerXAnchor);

  v5 = objc_msgSend(v0, sel_contentView);
  v6 = objc_msgSend(v5, sel_centerXAnchor);

  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(_QWORD *)(v2 + 32) = v7;
  *(_QWORD *)(v2 + 40) = sub_1BC3821B0();
  sub_1BC62C890();
  sub_1BC34D89C();
  v8 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v8);

}

id sub_1BC3827A8(char *a1, double a2, double a3, double a4, double a5)
{
  objc_class *ObjectType;
  char *v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&a1[qword_1EF42A610] = 0;
  *(_QWORD *)&a1[qword_1EF42A618] = 0;
  v11 = &a1[qword_1EF42A620];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v13.receiver = a1;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_1BC382844(char *a1, uint64_t a2, uint64_t a3)
{
  objc_class *ObjectType;
  char *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&a1[qword_1EF42A610] = 0;
  *(_QWORD *)&a1[qword_1EF42A618] = 0;
  v6 = &a1[qword_1EF42A620];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v8.receiver = a1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_initWithCoder_, a3);
}

void sub_1BC3828B8()
{
  uint64_t v0;

}

void sub_1BC3828E4(uint64_t a1)
{

}

uint64_t type metadata accessor for ImageAttachmentCell(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42A650);
}

uint64_t sub_1BC382930()
{
  return swift_initClassMetadata2();
}

void sub_1BC38297C(uint64_t *a1)
{
  sub_1BC3824A0(*a1);
}

uint64_t sub_1BC382984()
{
  return type metadata accessor for ImageAttachmentCell(0);
}

uint64_t sub_1BC38298C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BC348D78(v0 + OBJC_IVAR____TtC15HealthRecordsUI18TextAttachmentItem_context, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC3829CC()
{
  return type metadata accessor for TextAttachmentItem(0);
}

uint64_t type metadata accessor for TextAttachmentItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42A7C8);
}

uint64_t sub_1BC3829E8()
{
  return sub_1BC3829F4();
}

uint64_t sub_1BC3829F4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AttachmentContext();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC382A64@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1BC3849DC(*v1 + OBJC_IVAR____TtC15HealthRecordsUI18TextAttachmentItem_context, a1);
}

uint64_t sub_1BC382A7C(uint64_t a1, uint64_t a2)
{
  return sub_1BC382F10(a1, a2, type metadata accessor for TextAttachmentCell, &qword_1EF42ADE0);
}

uint64_t sub_1BC382A90()
{
  return sub_1BC382D7C();
}

id sub_1BC382AB8()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v0;
}

void sub_1BC382B5C()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  sub_1BC3813E8();
  v0 = (void *)objc_opt_self();
  sub_1BC34D844();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC639570;
  v2 = sub_1BC381F54();
  v3 = objc_msgSend(v2, sel_leadingAnchor);

  v4 = sub_1BC381EF4();
  v5 = objc_msgSend(v4, sel_leadingAnchor);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);
  *(_QWORD *)(v1 + 32) = v6;
  v7 = sub_1BC381F54();
  v8 = objc_msgSend(v7, sel_trailingAnchor);

  v9 = sub_1BC381EF4();
  v10 = objc_msgSend(v9, sel_trailingAnchor);

  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v10);
  *(_QWORD *)(v1 + 40) = v11;
  sub_1BC62C890();
  sub_1BC34D89C();
  v12 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_activateConstraints_, v12);

}

uint64_t type metadata accessor for TextAttachmentCell(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42A880);
}

void sub_1BC382D10()
{
  id v0;
  id v1;

  sub_1BC380BC0();
  v0 = sub_1BC381F54();
  v1 = (id)sub_1BC62C650();
  objc_msgSend(v0, sel_setText_, v1);

}

uint64_t sub_1BC382D74()
{
  return type metadata accessor for TextAttachmentCell(0);
}

uint64_t sub_1BC382D7C()
{
  uint64_t v1;

  v1 = sub_1BC62D718();
  sub_1BC62C764();
  sub_1BC62A778();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BC382DF0()
{
  return sub_1BC382DFC(&OBJC_IVAR____TtC15HealthRecordsUI23ThumbnailAttachmentItem_context);
}

uint64_t sub_1BC382DFC(_QWORD *a1)
{
  uint64_t v1;

  sub_1BC348D78(v1 + *a1, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC382E44()
{
  return type metadata accessor for ThumbnailAttachmentItem(0);
}

uint64_t type metadata accessor for ThumbnailAttachmentItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42A9E0);
}

uint64_t sub_1BC382E60()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AttachmentContext();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC382EE4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1BC3849DC(*v1 + OBJC_IVAR____TtC15HealthRecordsUI23ThumbnailAttachmentItem_context, a1);
}

uint64_t sub_1BC382EFC(uint64_t a1, uint64_t a2)
{
  return sub_1BC382F10(a1, a2, type metadata accessor for ThumbnailAttachmentCell, &qword_1EF42ADE8);
}

uint64_t sub_1BC382F10(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  a3(0);
  sub_1BC347F0C(a4, a3, (uint64_t)&unk_1BC63A788);
  return sub_1BC62ADA8();
}

uint64_t sub_1BC382F68()
{
  return sub_1BC382D7C();
}

double sub_1BC382F90()
{
  return 10.0;
}

id sub_1BC382F98()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
}

void sub_1BC382FBC(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  char v5;

  sub_1BC380BC0();
  v2 = sub_1BC381F54();
  objc_msgSend(v2, sel_setImage_, *(_QWORD *)(a1 + 16));

  if (*(_BYTE *)(a1 + 24) == 1)
  {
    v3 = sub_1BC381F54();
    if (qword_1EF4283C0 != -1)
      swift_once();
    v4 = qword_1EF42A3C0;
    v5 = 0;
    UIImageView.applyStyle(_:)((uint64_t)&v4);

  }
}

void sub_1BC383068()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;

  sub_1BC381730();
  v1 = (void *)objc_opt_self();
  sub_1BC34D844();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC63A3D0;
  v3 = sub_1BC381F54();
  v4 = objc_msgSend(v3, sel_leadingAnchor);

  v5 = sub_1BC381EF4();
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = objc_msgSend(v0, sel_contentView);
  v9 = objc_msgSend(v8, sel_layoutMarginsGuide);

  v10 = objc_msgSend(v9, sel_trailingAnchor);
  v11 = sub_1BC381F54();
  v12 = objc_msgSend(v11, sel_trailingAnchor);

  v13 = objc_msgSend(v10, sel_constraintGreaterThanOrEqualToAnchor_, v12);
  *(_QWORD *)(v2 + 40) = v13;
  v14 = sub_1BC381F54();
  v15 = objc_msgSend(v14, sel_widthAnchor);

  if (qword_1EF4283C8 != -1)
    swift_once();
  v16 = objc_msgSend(v15, sel_constraintEqualToConstant_, *(double *)&qword_1EF42A3C8);

  *(_QWORD *)(v2 + 48) = v16;
  v17 = sub_1BC381F54();
  v18 = objc_msgSend(v17, sel_heightAnchor);

  if (qword_1EF4283D0 != -1)
    swift_once();
  v19 = objc_msgSend(v18, sel_constraintEqualToConstant_, *(double *)&qword_1EF42A3D0);

  *(_QWORD *)(v2 + 56) = v19;
  sub_1BC62C890();
  sub_1BC34D89C();
  v20 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v20);

}

id sub_1BC38331C(void *a1, double a2, double a3, double a4, double a5)
{
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_1BC38338C(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_1BC3833D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ThumbnailAttachmentCell(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42AAA0);
}

uint64_t sub_1BC383418()
{
  return swift_initClassMetadata2();
}

void sub_1BC38344C(uint64_t *a1)
{
  sub_1BC382FBC(*a1);
}

uint64_t sub_1BC383454()
{
  return type metadata accessor for ThumbnailAttachmentCell(0);
}

uint64_t sub_1BC38345C()
{
  return swift_initClassMetadata2();
}

id sub_1BC3834A8()
{
  id v0;
  void *v1;
  id v2;

  type metadata accessor for StackedTwoLabelView();
  v0 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = (void *)sub_1BC62C86C();
  v2 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v0, sel_setAccessibilityIdentifier_, v2);
  return v0;
}

uint64_t sub_1BC383540()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v15[40];

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50);
  v3 = sub_1BC62CFE0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v15[-v6];
  v8 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v5);
  v10 = &v15[-v9];
  v11 = (uint64_t)v0 + qword_1EF42ABE8;
  swift_beginAccess();
  sub_1BC37ADB0(v11, (uint64_t)v15);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  v12 = swift_dynamicCast();
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v12)
  {
    v13(v7, 0, 1, v2);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v7, v2);
    (*(void (**)(_BYTE *))((*v1 & *v0) + 0xF0))(v10);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v2);
  }
  else
  {
    v13(v7, 1, 1, v2);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  }
}

_QWORD *sub_1BC3836D0(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v9;
  uint64_t *v10;
  char *v11;
  objc_class *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  void *v22;
  void *v23;
  objc_super v25;

  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = (uint64_t *)(*MEMORY[0x1E0DEEDD8] & *v4);
  *(_QWORD *)((char *)v4 + qword_1EF42ABD8) = 0;
  *(_QWORD *)((char *)v4 + qword_1EF42ABE0) = 0;
  v11 = (char *)v4 + qword_1EF42ABE8;
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  v12 = (objc_class *)type metadata accessor for BaseAttachmentCell(0, v10[10], v10[11], v10[12]);
  v25.receiver = v4;
  v25.super_class = v12;
  v13 = objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  v14 = objc_msgSend(v13, sel_contentView);
  v15 = sub_1BC381EF4();
  objc_msgSend(v14, sel_addSubview_, v15);

  v16 = objc_msgSend(v13, sel_contentView);
  v17 = (void *)sub_1BC381F50();
  objc_msgSend(v16, sel_addSubview_, v17);

  v18 = (void *)sub_1BC381F50();
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  objc_msgSend(v13, sel_setIsAccessibilityElement_, 1);
  v19 = qword_1ED6A4888;
  v20 = v13;
  if (v19 != -1)
    swift_once();
  v21 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v22 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setAccessibilityHint_, v22, 0xE000000000000000);

  UIAccessibilityIdentification.hrui_setAccessibilityIdentifier(_:)((Swift::OpaquePointer)&unk_1E74D2850);
  v23 = (void *)sub_1BC381F50();
  UIAccessibilityIdentification.hrui_setAccessibilityIdentifier(_:)((Swift::OpaquePointer)&unk_1E74D2880);

  (*(void (**)(void))((*v9 & *v20) + 0xE8))();
  return v20;
}

_QWORD *sub_1BC383978(double a1, double a2, double a3, double a4)
{
  return sub_1BC3836D0(a1, a2, a3, a4);
}

void sub_1BC383998(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BC384D88();
}

void sub_1BC3839BC()
{
  sub_1BC62D394();
  __break(1u);
}

id sub_1BC383A14()
{
  _QWORD *v0;
  objc_class *v1;
  objc_super v3;

  v1 = (objc_class *)type metadata accessor for BaseAttachmentCell(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60));
  v3.receiver = v0;
  v3.super_class = v1;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1BC383A64(uint64_t a1)
{

  return sub_1BC384EB4(a1 + qword_1EF42ABE8, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t type metadata accessor for BaseAttachmentCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BaseAttachmentCell);
}

void (*sub_1BC383AD4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC3820A4((uint64_t)v2);
  return sub_1BC383B18;
}

void sub_1BC383B18(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

id sub_1BC383B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  objc_class *v11;
  char *v12;
  uint64_t *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  _QWORD v23[2];
  objc_super v24;

  v4 = type metadata accessor for AttachmentContext();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34D844();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC6396B0;
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v8 = (uint64_t *)&v6[*(int *)(v4 + 24)];
  v9 = *v8;
  v10 = v8[1];
  v11 = (objc_class *)type metadata accessor for QLItemSingleDataProvider();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = (uint64_t *)&v12[OBJC_IVAR____TtC15HealthRecordsUI24QLItemSingleDataProvider_data];
  *v13 = v9;
  v13[1] = v10;
  sub_1BC35D4EC(v9, v10);
  v24.receiver = v12;
  v24.super_class = v11;
  v14 = objc_msgSendSuper2(&v24, sel_init);
  sub_1BC62B924();
  v15 = objc_allocWithZone(MEMORY[0x1E0CD3248]);
  swift_bridgeObjectRetain();
  v16 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v15, sel_initWithDataProvider_contentType_previewTitle_, v14, v16, v17);

  sub_1BC348D78((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
  *(_QWORD *)(v7 + 32) = v18;
  v23[1] = v7;
  sub_1BC62C890();
  v19 = objc_allocWithZone(MEMORY[0x1E0CD3250]);
  sub_1BC384988();
  v20 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, sel_initWithPreviewItems_, v20);

  return v21;
}

uint64_t sub_1BC383D64(uint64_t a1, void *a2)
{
  return sub_1BC3847D8(a2);
}

id sub_1BC383E10()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QLItemSingleDataProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for QLItemSingleDataProvider()
{
  return objc_opt_self();
}

uint64_t *sub_1BC383E74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC62A7B4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = (int *)type metadata accessor for AttachmentContext();
    v14 = v13[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = v13[6];
    v19 = (uint64_t *)&v9[v18];
    v20 = (uint64_t *)&v10[v18];
    v21 = *v20;
    v22 = v20[1];
    swift_bridgeObjectRetain();
    sub_1BC35D4EC(v21, v22);
    *v19 = v21;
    v19[1] = v22;
    v23 = v13[7];
    v24 = &v9[v23];
    v25 = &v10[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = v13[8];
    v28 = &v9[v27];
    v29 = &v10[v27];
    v30 = sub_1BC62B99C();
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    v31(v28, v29, v30);
    v32 = (char *)a2 + *(int *)(a3 + 24);
    *(_QWORD *)(swift_unknownObjectWeakCopyInit() + 8) = *((_QWORD *)v32 + 1);
  }
  return v7;
}

uint64_t sub_1BC383FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for AttachmentContext();
  swift_bridgeObjectRelease();
  sub_1BC35D530(*(_QWORD *)(v4 + *(int *)(v6 + 24)), *(_QWORD *)(v4 + *(int *)(v6 + 24) + 8));
  swift_bridgeObjectRelease();
  v7 = v4 + *(int *)(v6 + 32);
  v8 = sub_1BC62B99C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_unknownObjectWeakDestroy();
}

_QWORD *sub_1BC38408C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC62A7B4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  v11 = (int *)type metadata accessor for AttachmentContext();
  v12 = v11[5];
  v13 = &v7[v12];
  v14 = &v8[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = v11[6];
  v17 = (uint64_t *)&v7[v16];
  v18 = (uint64_t *)&v8[v16];
  v19 = *v18;
  v20 = v18[1];
  swift_bridgeObjectRetain();
  sub_1BC35D4EC(v19, v20);
  *v17 = v19;
  v17[1] = v20;
  v21 = v11[7];
  v22 = &v7[v21];
  v23 = &v8[v21];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = v11[8];
  v26 = &v7[v25];
  v27 = &v8[v25];
  v28 = sub_1BC62B99C();
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  v29(v26, v27, v28);
  v30 = (char *)a2 + *(int *)(a3 + 24);
  *(_QWORD *)(swift_unknownObjectWeakCopyInit() + 8) = *((_QWORD *)v30 + 1);
  return a1;
}

_QWORD *sub_1BC3841C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC62A7B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for AttachmentContext();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v10[6];
  v15 = (uint64_t *)&v7[v14];
  v16 = (uint64_t *)&v8[v14];
  v17 = *v16;
  v18 = v16[1];
  sub_1BC35D4EC(*v16, v18);
  v19 = *v15;
  v20 = v15[1];
  *v15 = v17;
  v15[1] = v18;
  sub_1BC35D530(v19, v20);
  v21 = v10[7];
  v22 = &v7[v21];
  v23 = &v8[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v10[8];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v27 = sub_1BC62B99C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = (char *)a2 + *(int *)(a3 + 24);
  *(_QWORD *)(swift_unknownObjectWeakCopyAssign() + 8) = *((_QWORD *)v28 + 1);
  return a1;
}

_QWORD *sub_1BC384320(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC62A7B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for AttachmentContext();
  *(_OWORD *)&v7[v10[5]] = *(_OWORD *)&v8[v10[5]];
  *(_OWORD *)&v7[v10[6]] = *(_OWORD *)&v8[v10[6]];
  *(_OWORD *)&v7[v10[7]] = *(_OWORD *)&v8[v10[7]];
  v11 = v10[8];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_1BC62B99C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = (char *)a2 + *(int *)(a3 + 24);
  *(_QWORD *)(swift_unknownObjectWeakTakeInit() + 8) = *((_QWORD *)v15 + 1);
  return a1;
}

_QWORD *sub_1BC384400(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC62A7B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for AttachmentContext();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = *(_QWORD *)&v7[v16];
  v18 = *(_QWORD *)&v7[v16 + 8];
  *(_OWORD *)&v7[v16] = *(_OWORD *)&v8[v16];
  sub_1BC35D530(v17, v18);
  v19 = v10[7];
  v20 = &v7[v19];
  v21 = &v8[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  v24 = v10[8];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v27 = sub_1BC62B99C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = (char *)a2 + *(int *)(a3 + 24);
  *(_QWORD *)(swift_unknownObjectWeakTakeAssign() + 8) = *((_QWORD *)v28 + 1);
  return a1;
}

uint64_t sub_1BC384518()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC384524(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for AttachmentContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1BC3845A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BC3845AC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for AttachmentContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PDFAttachmentItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42AD58);
}

uint64_t sub_1BC384634()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AttachmentContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC3846B4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BC347F0C(&qword_1EF42AD98, type metadata accessor for PDFAttachmentItem, (uint64_t)&unk_1BC63A610);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BC3846F0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BC347F0C(&qword_1EF42ADA0, type metadata accessor for ThumbnailAttachmentItem, (uint64_t)&unk_1BC63A65C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BC38472C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BC347F0C(&qword_1EF42ADA8, type metadata accessor for TextAttachmentItem, (uint64_t)&unk_1BC63A6A8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BC384768(uint64_t a1)
{
  uint64_t result;

  result = sub_1BC347F0C((unint64_t *)&unk_1EF42ADB0, type metadata accessor for ImageAttachmentItem, (uint64_t)&unk_1BC63A6F4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1BC3847A4()
{
  qword_1EF42A3C0 = 0x4008000000000000;
}

void sub_1BC3847B4()
{
  qword_1EF42A3C8 = 0x4040800000000000;
}

void sub_1BC3847C8()
{
  qword_1EF42A3D0 = 0x4046000000000000;
}

uint64_t sub_1BC3847D8(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t, uint64_t);
  id v16;
  _BYTE v18[40];

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = *(_QWORD *)(v3 + 0x50);
  v5 = sub_1BC62CFE0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v18[-v8];
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v7);
  v12 = &v18[-v11];
  v13 = (uint64_t)v1 + qword_1EF42ABE8;
  swift_beginAccess();
  sub_1BC37ADB0(v13, (uint64_t)v18);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  v14 = swift_dynamicCast();
  v15 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v14)
  {
    v15(v9, 0, 1, v4);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v9, v4);
    v16 = sub_1BC383B48(v4, *(_QWORD *)(v3 + 96));
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v16, 1, 0);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v4);
  }
  else
  {
    v15(v9, 1, 1, v4);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  }
}

unint64_t sub_1BC384988()
{
  unint64_t result;

  result = qword_1EF42ADD0;
  if (!qword_1EF42ADD0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42ADD0);
  }
  return result;
}

uint64_t sub_1BC3849DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AttachmentContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC384A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  objc_class *v17;
  char *v18;
  uint64_t *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  objc_super v29;
  _QWORD v30[5];

  sub_1BC384E68(0, (unint64_t *)&unk_1EF42AE00, (void (*)(uint64_t))type metadata accessor for PDFAttachmentItem);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v29 - v2;
  v4 = type metadata accessor for PDFAttachmentItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0 + qword_1EF42ABE8;
  swift_beginAccess();
  sub_1BC37ADB0(v8, (uint64_t)v30);
  if (!v30[3])
  {
    sub_1BC384EB4((uint64_t)v30, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    return sub_1BC384EB4((uint64_t)v3, (unint64_t *)&unk_1EF42AE00, (void (*)(uint64_t))type metadata accessor for PDFAttachmentItem);
  }
  sub_1BC37AE0C();
  v9 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_1BC384EB4((uint64_t)v3, (unint64_t *)&unk_1EF42AE00, (void (*)(uint64_t))type metadata accessor for PDFAttachmentItem);
  sub_1BC384EF0((uint64_t)v3, (uint64_t)v7);
  v10 = MEMORY[0x1BCCF37A4](&v7[*(int *)(v4 + 24)]);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = &v7[*(int *)(v4 + 20)];
    sub_1BC34D844();
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BC6396B0;
    v14 = (uint64_t *)&v12[*(int *)(type metadata accessor for AttachmentContext() + 24)];
    v15 = *v14;
    v16 = v14[1];
    v17 = (objc_class *)type metadata accessor for QLItemSingleDataProvider();
    v18 = (char *)objc_allocWithZone(v17);
    v19 = (uint64_t *)&v18[OBJC_IVAR____TtC15HealthRecordsUI24QLItemSingleDataProvider_data];
    *v19 = v15;
    v19[1] = v16;
    sub_1BC35D4EC(v15, v16);
    v29.receiver = v18;
    v29.super_class = v17;
    v20 = objc_msgSendSuper2(&v29, sel_init);
    sub_1BC62B924();
    v21 = objc_allocWithZone(MEMORY[0x1E0CD3248]);
    swift_bridgeObjectRetain();
    v22 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v23 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(v21, sel_initWithDataProvider_contentType_previewTitle_, v20, v22, v23);

    *(_QWORD *)(v13 + 32) = v24;
    v30[0] = v13;
    sub_1BC62C890();
    v25 = objc_allocWithZone(MEMORY[0x1E0CD3250]);
    sub_1BC384988();
    v26 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v27 = objc_msgSend(v25, sel_initWithPreviewItems_, v26);

    objc_msgSend(v11, sel_presentViewController_animated_completion_, v27, 1, 0);
    swift_unknownObjectRelease();

  }
  return sub_1BC348D78((uint64_t)v7, type metadata accessor for PDFAttachmentItem);
}

void sub_1BC384D88()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[qword_1EF42ABD8] = 0;
  *(_QWORD *)&v0[qword_1EF42ABE0] = 0;
  v1 = &v0[qword_1EF42ABE8];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;

  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC384E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1BC384E68(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC62CFE0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC384EB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BC384E68(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BC384EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PDFAttachmentItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC384F34(unint64_t a1, uint64_t (*a2)(uint64_t), double a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(unint64_t, uint64_t), uint64_t a8, double (*a9)(void), uint64_t a10, uint64_t a11)
{
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  id v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v63;
  unint64_t v64;
  _QWORD v66[2];
  unint64_t v67;

  v12 = a1;
  v13 = MEMORY[0x1E0DEE9D8];
  v67 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_25;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
  if (!v14)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x1E0DEE9D8];
    goto LABEL_27;
  }
LABEL_3:
  v15 = 0;
  do
  {
    while (1)
    {
      v16 = v67;
      v17 = v67 >> 62;
      if (v15)
      {
        if (v17)
        {
          swift_bridgeObjectRetain();
          v18 = sub_1BC62D3B8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v18 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v19 = (id)a2(v18);
        v20 = a9();
        v22 = v21;

        v23 = *(_QWORD *)&v20;
        v24 = v22;
      }
      else
      {
        v19 = 0;
        v23 = 0;
        v24 = 0;
      }
      if (v17)
      {
        swift_bridgeObjectRetain();
        v25 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v25 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (__OFADD__(v25, 2))
      {
        __break(1u);
LABEL_25:
        swift_retain();
        swift_bridgeObjectRetain();
        if (!sub_1BC62D3B8())
          goto LABEL_26;
        goto LABEL_3;
      }
      v26 = (id)a5(v25 + 2);
      v27 = a9();
      v29 = v28;

      v30 = (void *)MEMORY[0x1BCCF2DD8]();
      sub_1BC385494(v12, a11, v19, v23, v24, v26, (uint64_t)v66, v27, v29, a3);
      objc_autoreleasePoolPop(v30);
      swift_bridgeObjectRelease();

      v31 = v66[0];
      if (!v66[0])
      {
        swift_release();
        goto LABEL_44;
      }
      v12 = v66[1];
      v32 = swift_retain();
      MEMORY[0x1BCCF1B30](v32);
      if (*(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
      v33 = *(_QWORD *)(v31 + 48);
      swift_release();
      v15 = v33 != 0;
      if (v12 >> 62)
        break;
      if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    v34 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  while (v34);
LABEL_23:
  swift_bridgeObjectRelease();
  v35 = v67;
LABEL_27:
  v36 = (void *)(v35 >> 62);
  if (v35 >> 62)
    goto LABEL_41;
  v59 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_29:
  v66[0] = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC62D28C();
  if (v36)
  {
    swift_bridgeObjectRetain();
    v37 = sub_1BC62D3B8();
    if (v37)
      goto LABEL_31;
  }
  else
  {
    v37 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v37)
    {
LABEL_31:
      v38 = 0;
      v56 = v35 & 0xFFFFFFFFFFFFFF8;
      v58 = v35 & 0xC000000000000001;
      v54 = v37;
      v55 = v35;
      do
      {
        if (v58)
        {
          v39 = (_QWORD *)MEMORY[0x1BCCF24CC](v38, v35);
          v40 = v38 + 1;
          if (__OFADD__(v38, 1))
            goto LABEL_39;
        }
        else
        {
          if (v38 >= *(_QWORD *)(v56 + 16))
            goto LABEL_40;
          v39 = *(_QWORD **)(v35 + 8 * v38 + 32);
          swift_retain();
          v40 = v38 + 1;
          if (__OFADD__(v38, 1))
          {
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            swift_bridgeObjectRetain();
            v59 = sub_1BC62D3B8();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
        }
        v64 = v40;
        v41 = (id)a7(v40, v59);
        v42 = a9();
        v44 = v43;

        v45 = v39[2];
        v36 = (void *)v39[3];
        v46 = v39[4];
        v47 = (void *)v39[6];
        v48 = v39[7];
        v61 = v39[8];
        v63 = v39[5];
        v49 = v39[12];
        v50 = v39[13];
        _s4PageCMa();
        v13 = swift_allocObject();
        *(_BYTE *)(v13 + 120) = 1;
        *(_QWORD *)(v13 + 16) = v45;
        *(_QWORD *)(v13 + 24) = v36;
        *(_QWORD *)(v13 + 32) = v46;
        *(_QWORD *)(v13 + 40) = v63;
        *(_QWORD *)(v13 + 48) = v47;
        *(_QWORD *)(v13 + 56) = v48;
        *(_QWORD *)(v13 + 64) = v61;
        *(_QWORD *)(v13 + 72) = v41;
        *(double *)(v13 + 80) = v42;
        *(_QWORD *)(v13 + 88) = v44;
        *(_QWORD *)(v13 + 96) = v49;
        *(_QWORD *)(v13 + 104) = v50;
        *(_QWORD *)(v13 + 112) = 0;
        v51 = v47;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v52 = v36;
        swift_release();
        sub_1BC62D268();
        sub_1BC62D298();
        v35 = v55;
        sub_1BC62D2A4();
        sub_1BC62D274();
        ++v38;
      }
      while (v64 != v54);
    }
  }
  swift_bridgeObjectRelease();
  v31 = v66[0];
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
LABEL_44:
  swift_bridgeObjectRelease();
  return v31;
}

void sub_1BC385494(unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>, uint64_t a8@<D0>, uint64_t a9@<D1>, double a10@<D2>)
{
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  uint64_t v56;
  unint64_t v60;
  char v62;
  uint64_t v63;
  _QWORD v64[2];

  v12 = v10;
  v16 = a1;
  if (a1 >> 62)
    goto LABEL_68;
  v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v18)
  {
LABEL_69:
    swift_bridgeObjectRelease();
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    swift_bridgeObjectRetain();
    v48 = MEMORY[0x1BCCF24CC](0, v16);
    swift_bridgeObjectRelease();
    a7 = *(_QWORD *)(v48 + 64);
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    if (a7 < 0 || (a7 & 0x4000000000000000) != 0)
      goto LABEL_74;
LABEL_52:
    if (*(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_53;
LABEL_75:
    swift_bridgeObjectRelease();
    goto LABEL_76;
  }
LABEL_3:
  if (v18 < 1)
    goto LABEL_71;
  v52 = v16 & 0xC000000000000001;
  v53 = (_QWORD *)a7;
  v54 = v12;
  if ((v16 & 0xC000000000000001) == 0)
  {
LABEL_13:
    v23 = 0;
    a7 = 0;
    while (1)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v16 + 8 * v23 + 32) + 64);
      if ((unint64_t)v11 >> 62)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        v25 = sub_1BC62D3B8();
        swift_release();
        swift_bridgeObjectRelease();
        v21 = __OFADD__(a7, v25);
        a7 += v25;
        if (v21)
        {
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
      }
      else
      {
        v24 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
        v21 = __OFADD__(a7, v24);
        a7 += v24;
        if (v21)
          goto LABEL_20;
      }
      if (v18 == ++v23)
        goto LABEL_21;
    }
  }
  v11 = 0;
  a7 = 0;
  do
  {
    v19 = *(_QWORD *)(MEMORY[0x1BCCF24CC](v11, v16) + 64);
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      v22 = sub_1BC62D3B8();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v21 = __OFADD__(a7, v22);
      a7 += v22;
      if (v21)
      {
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRelease();
      v21 = __OFADD__(a7, v20);
      a7 += v20;
      if (v21)
        goto LABEL_12;
    }
    ++v11;
  }
  while (v18 != v11);
LABEL_21:
  swift_bridgeObjectRelease();
  if (a7 < 1)
    goto LABEL_70;
  v26 = 0;
  v27 = 0;
  v28 = 1;
  v60 = v16;
  while (1)
  {
    v56 = v27;
    v29 = sub_1BC385AD0(v28, v16);
    v12 = v29;
    v11 = v30;
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      v31 = sub_1BC62D3B8();
      v63 = v26;
      if (v31)
      {
LABEL_25:
        if (v31 >= 1)
        {
          v62 = v11;
          v32 = 0;
          v11 = 0;
          v16 = v12 & 0xC000000000000001;
          do
          {
            if (v16)
              MEMORY[0x1BCCF24CC](v32, v12);
            else
              swift_retain();
            v33 = sub_1BC4DD378();
            swift_release();
            v21 = __OFADD__(v11, v33);
            v11 += v33;
            if (v21)
            {
              __break(1u);
              goto LABEL_67;
            }
            ++v32;
          }
          while (v31 != v32);
          v34 = swift_bridgeObjectRelease();
          v35 = v11 < a2;
          LOBYTE(v11) = v62;
          if (v35)
            goto LABEL_36;
          goto LABEL_44;
        }
LABEL_67:
        __break(1u);
LABEL_68:
        swift_bridgeObjectRetain();
        v18 = sub_1BC62D3B8();
        if (!v18)
          goto LABEL_69;
        goto LABEL_3;
      }
    }
    else
    {
      v31 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v63 = v26;
      if (v31)
        goto LABEL_25;
    }
    v34 = swift_bridgeObjectRelease();
    if (a2 <= 0)
      goto LABEL_44;
LABEL_36:
    v36 = (void *)MEMORY[0x1BCCF2DD8](v34);
    if ((v11 & 1) != 0)
    {
      v37 = (uint64_t)a6;
      v38 = a6;
      v40 = a9;
      v39 = a8;
    }
    else
    {
      v37 = 0;
      v39 = 0;
      v40 = 0;
    }
    swift_bridgeObjectRetain();
    v41 = a3;
    v26 = sub_1BC56BE98(v12, (uint64_t)a3, a4, a5, v37, v39, v40);
    objc_autoreleasePoolPop(v36);
    swift_bridgeObjectRelease();
    if (sub_1BC569290() >= a10)
      break;
    swift_release();
    v16 = v60;
    if (v28 == a7)
    {
      swift_retain();
      goto LABEL_64;
    }
    v27 = v28;
    v21 = __OFADD__(v28++, 1);
    if (v21)
    {
      __break(1u);
LABEL_44:
      swift_bridgeObjectRelease();
      v11 = v54;
      v16 = v60;
      v26 = v63;
      if (!v63)
        goto LABEL_48;
LABEL_45:
      swift_retain();
      a7 = v56;
LABEL_64:
      v47 = sub_1BC385F70(a7, v16);
      swift_release();
      goto LABEL_65;
    }
  }
  v11 = v54;
  v16 = v60;
  if (*(double *)(v26 + 112) <= a10)
  {
    swift_release();
    swift_retain();
    a7 = v28;
    goto LABEL_64;
  }
  swift_release();
  v26 = v63;
  if (v63)
    goto LABEL_45;
LABEL_48:
  if (v52)
    goto LABEL_72;
  if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_78;
  }
  a7 = *(_QWORD *)(*(_QWORD *)(v16 + 32) + 64);
  swift_bridgeObjectRetain();
  if ((a7 & 0x8000000000000000) == 0 && (a7 & 0x4000000000000000) == 0)
    goto LABEL_52;
LABEL_74:
  swift_bridgeObjectRetain();
  v49 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v49)
    goto LABEL_75;
LABEL_53:
  if ((a7 & 0xC000000000000001) != 0)
  {
LABEL_78:
    v51 = MEMORY[0x1BCCF24CC](0, a7);
    swift_bridgeObjectRelease();
    v43 = *(_QWORD *)(v51 + 80);
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    if ((v43 & 0x8000000000000000) == 0)
    {
      v16 = v60;
      if ((v43 & 0x4000000000000000) == 0)
        goto LABEL_57;
      goto LABEL_83;
    }
    goto LABEL_82;
  }
  if (!*(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_82:
    v16 = v60;
    goto LABEL_83;
  }
  v42 = *(_QWORD *)(a7 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(v42 + 80);
  swift_bridgeObjectRetain();
  swift_release();
  if ((v43 & 0x8000000000000000) == 0 && (v43 & 0x4000000000000000) == 0)
  {
LABEL_57:
    v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_58;
  }
LABEL_83:
  swift_bridgeObjectRetain();
  v44 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
LABEL_58:
  v45 = swift_bridgeObjectRelease();
  if (v44 < 2)
    goto LABEL_76;
  v46 = (void *)MEMORY[0x1BCCF2DD8](v45);
  sub_1BC38772C(v16, a2, a3, a4, a5, a6, (uint64_t)v64, a8, a9, a10);
  if (v11)
  {
    objc_autoreleasePoolPop(v46);
    __break(1u);
  }
  else
  {
    objc_autoreleasePoolPop(v46);
    v26 = v64[0];
    if (v64[0])
    {
      v47 = v64[1];
      goto LABEL_65;
    }
LABEL_76:
    v26 = sub_1BC3868E8(v16, a3, a4, a5, a6, a2, a10, *(double *)&a8, *(double *)&a9);
    v47 = v50;
LABEL_65:
    *v53 = v26;
    v53[1] = v47;
  }
}

uint64_t sub_1BC385AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  v34 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)a2 >> 62)
    goto LABEL_31;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return v34;
  }
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v2 = MEMORY[0x1BCCF24CC](0, a2);
  }
  else
  {
    if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    v2 = *(_QWORD *)(a2 + 32);
    swift_retain();
  }
  v6 = *(_QWORD *)(v2 + 64);
  if (!(v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) >= a1)
      goto LABEL_39;
    goto LABEL_8;
  }
LABEL_38:
  swift_bridgeObjectRetain();
  v17 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (v17 < a1)
  {
LABEL_8:
    v7 = 0;
    v8 = v5 - 1;
    do
    {
      v9 = swift_retain();
      MEMORY[0x1BCCF1B30](v9);
      if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
      v10 = *(_QWORD *)(v2 + 64);
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        v16 = sub_1BC62D3B8();
        swift_release();
        swift_bridgeObjectRelease();
        v12 = __OFSUB__(a1, v16);
        a1 -= v16;
        if (v12)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          if (a2 < 0)
            v2 = a2;
          else
            v2 = a2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v5 = sub_1BC62D3B8();
          if (!v5)
            goto LABEL_35;
          goto LABEL_3;
        }
      }
      else
      {
        v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_release();
        v12 = __OFSUB__(a1, v11);
        a1 -= v11;
        if (v12)
          goto LABEL_28;
      }
      if (v8 == v7)
        goto LABEL_35;
      v13 = v7 + 1;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v2 = MEMORY[0x1BCCF24CC](v7 + 1, a2);
        if (__OFADD__(v13, 1))
          goto LABEL_29;
      }
      else
      {
        if (v13 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_30;
        v2 = *(_QWORD *)(a2 + 8 * v7 + 40);
        swift_retain();
        if (__OFADD__(v13, 1))
          goto LABEL_29;
      }
      v14 = *(_QWORD *)(v2 + 64);
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        v15 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      ++v7;
    }
    while (v15 < a1);
  }
LABEL_39:
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v2 + 64);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v20 == a1)
      goto LABEL_41;
  }
  else if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) == a1)
  {
LABEL_41:
    v19 = swift_retain();
    MEMORY[0x1BCCF1B30](v19);
    if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    goto LABEL_55;
  }
  v21 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain();
  v22 = sub_1BC525614(a1, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
  {
    sub_1BC62D5A4();
    swift_unknownObjectRetain_n();
    v30 = swift_dynamicCastClass();
    if (!v30)
    {
      swift_unknownObjectRelease();
      v30 = MEMORY[0x1E0DEE9D8];
    }
    v31 = *(_QWORD *)(v30 + 16);
    swift_release();
    if (__OFSUB__(v28 >> 1, v26))
    {
      __break(1u);
    }
    else if (v31 == (v28 >> 1) - v26)
    {
      v29 = swift_dynamicCastClass();
      if (!v29)
      {
        swift_unknownObjectRelease();
        v29 = MEMORY[0x1E0DEE9D8];
      }
      goto LABEL_53;
    }
    swift_unknownObjectRelease();
  }
  v29 = sub_1BC3D6984(v22, v24, v26, v28);
LABEL_53:
  swift_unknownObjectRelease();
  sub_1BC4DCF3C(v29);
  v32 = swift_release();
  MEMORY[0x1BCCF1B30](v32);
  if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
LABEL_55:
  sub_1BC62C8D8();
  sub_1BC62C890();
  swift_release();
  return v34;
}

uint64_t sub_1BC385F70(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72[2];
  uint64_t v73;

  v73 = MEMORY[0x1E0DEE9D8];
  if (a2 >> 62)
    goto LABEL_128;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_129:
    swift_bridgeObjectRelease();
    return v73;
  }
  while (1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v5 = (_QWORD *)MEMORY[0x1BCCF24CC](0, a2);
      v6 = 1;
      while (1)
      {
        if (a1)
        {
          v9 = v5[8];
          if (v9 >> 62)
          {
            swift_bridgeObjectRetain();
            v10 = sub_1BC62D3B8();
            swift_bridgeObjectRelease();
          }
          else
          {
            v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v11 = v5[8];
          if (a1 < v10)
          {
            if (a1 < 0)
              goto LABEL_118;
            if (v11 >> 62)
            {
              swift_bridgeObjectRetain_n();
              v12 = sub_1BC62D3B8();
              result = swift_bridgeObjectRelease();
              if (v12 >= a1)
                v35 = a1;
              else
                v35 = v12;
              if (v12 >= 0)
                a1 = v35;
              if (v12 < a1)
              {
                __break(1u);
                goto LABEL_131;
              }
              swift_bridgeObjectRetain();
              v36 = sub_1BC62D3B8();
              result = swift_bridgeObjectRelease();
              if (v36 < a1)
                goto LABEL_120;
              if (a1 < 0)
                goto LABEL_132;
              swift_bridgeObjectRetain();
              v37 = sub_1BC62D3B8();
              result = swift_bridgeObjectRelease();
              if (v37 < v12)
                goto LABEL_133;
              if (v12 < 0)
                goto LABEL_134;
            }
            else
            {
              v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v12 < a1)
                a1 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
            }
            if ((v11 & 0xC000000000000001) != 0 && a1 != v12)
            {
              if (a1 >= v12)
                goto LABEL_124;
              _s11SizedRecordCMa();
              v13 = a1;
              do
              {
                v14 = v13 + 1;
                sub_1BC62D1F0();
                v13 = v14;
              }
              while (v12 != v14);
            }
            if (v11 >> 62)
            {
              swift_bridgeObjectRetain();
              v15 = sub_1BC62D3C4();
              v16 = v19;
              a1 = v20;
              v17 = v21;
              swift_bridgeObjectRelease_n();
              if ((v17 & 1) != 0)
                goto LABEL_33;
            }
            else
            {
              v15 = v11 & 0xFFFFFFFFFFFFFF8;
              v16 = (v11 & 0xFFFFFFFFFFFFFF8) + 32;
              v17 = (2 * v12) | 1;
              if ((v17 & 1) != 0)
              {
LABEL_33:
                sub_1BC62D5A4();
                swift_unknownObjectRetain_n();
                v23 = swift_dynamicCastClass();
                if (!v23)
                {
                  swift_unknownObjectRelease();
                  v23 = MEMORY[0x1E0DEE9D8];
                }
                v24 = *(_QWORD *)(v23 + 16);
                swift_release();
                if (__OFSUB__(v17 >> 1, a1))
                  goto LABEL_125;
                if (v24 == (v17 >> 1) - a1)
                {
                  v22 = swift_dynamicCastClass();
                  if (!v22)
                  {
                    swift_unknownObjectRelease();
                    v22 = MEMORY[0x1E0DEE9D8];
                  }
                  goto LABEL_39;
                }
                swift_unknownObjectRelease();
              }
            }
            v22 = sub_1BC3D6984(v15, v16, a1, v17);
LABEL_39:
            swift_unknownObjectRelease();
            v25 = (void *)v5[2];
            v26 = v5[3];
            v27 = v5[4];
            v28 = (void *)v5[5];
            v29 = v5[6];
            v30 = v5[7];
            sub_1BC34E674((uint64_t)(v5 + 9), (uint64_t)v72);
            _s12SizedSectionCMa();
            v31 = swift_allocObject();
            *(_QWORD *)(v31 + 112) = 0;
            *(_BYTE *)(v31 + 120) = 1;
            *(_QWORD *)(v31 + 128) = 0;
            *(_BYTE *)(v31 + 136) = 1;
            *(_QWORD *)(v31 + 144) = 0;
            *(_BYTE *)(v31 + 152) = 1;
            *(_QWORD *)(v31 + 16) = v25;
            *(_QWORD *)(v31 + 24) = v26;
            *(_QWORD *)(v31 + 32) = v27;
            *(_QWORD *)(v31 + 40) = v28;
            *(_QWORD *)(v31 + 64) = v22;
            *(_QWORD *)(v31 + 48) = v29;
            *(_QWORD *)(v31 + 56) = v30;
            sub_1BC34E718(v72, v31 + 72);
            v32 = v25;
            MEMORY[0x1BCCF1B30](v28);
            if (*(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BC62C8B4();
            sub_1BC62C8D8();
            sub_1BC62C890();
            swift_unknownObjectRelease();
            if (v6 == v4)
              goto LABEL_129;
            a1 = 0;
            goto LABEL_9;
          }
          if (v11 >> 62)
          {
            swift_bridgeObjectRetain();
            v33 = sub_1BC62D3B8();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            v8 = __OFSUB__(a1, v33);
            a1 -= v33;
            if (v8)
              goto LABEL_119;
          }
          else
          {
            v18 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_unknownObjectRelease();
            v8 = __OFSUB__(a1, v18);
            a1 -= v18;
            if (v8)
              goto LABEL_119;
          }
        }
        else
        {
          v7 = swift_retain();
          MEMORY[0x1BCCF1B30](v7);
          if (*(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          sub_1BC62C8D8();
          sub_1BC62C890();
          swift_unknownObjectRelease();
          a1 = 0;
        }
        if (v6 == v4)
          goto LABEL_129;
LABEL_9:
        v5 = (_QWORD *)MEMORY[0x1BCCF24CC](v6, a2);
        v8 = __OFADD__(v6++, 1);
        if (v8)
        {
          __break(1u);
          goto LABEL_117;
        }
      }
    }
    v38 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v38)
      break;
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    if (!v4)
      goto LABEL_129;
  }
  v39 = 0;
  v40 = a2 + 32;
  v71 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    while (1)
    {
      v42 = *(_QWORD **)(v40 + 8 * v39++);
      if (a1)
        break;
      v41 = swift_retain_n();
      MEMORY[0x1BCCF1B30](v41);
      if (*(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
      swift_release();
      a1 = 0;
LABEL_64:
      if (v39 == v4)
        goto LABEL_129;
      if (v39 == v38)
        goto LABEL_117;
    }
    v43 = v42[8];
    if (v43 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v44 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
    }
    v45 = v42[8];
    if (a1 >= v44)
    {
      if (v45 >> 62)
      {
        swift_bridgeObjectRetain();
        v67 = sub_1BC62D3B8();
        swift_release();
        swift_bridgeObjectRelease();
        v8 = __OFSUB__(a1, v67);
        a1 -= v67;
        if (v8)
          goto LABEL_122;
      }
      else
      {
        v52 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_release();
        v8 = __OFSUB__(a1, v52);
        a1 -= v52;
        if (v8)
          goto LABEL_122;
      }
      goto LABEL_64;
    }
    if (a1 < 0)
      goto LABEL_121;
    if (!(v45 >> 62))
    {
      v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v46 < a1)
        a1 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      goto LABEL_75;
    }
    swift_bridgeObjectRetain_n();
    v46 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
    if (v46 >= a1)
      v68 = a1;
    else
      v68 = v46;
    if (v46 >= 0)
      a1 = v68;
    if (v46 < a1)
      break;
    swift_bridgeObjectRetain();
    v69 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
    if (v69 < a1)
      goto LABEL_123;
    if (a1 < 0)
      goto LABEL_135;
    swift_bridgeObjectRetain();
    v70 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
    if (v70 < v46)
      goto LABEL_136;
    if (v46 < 0)
      goto LABEL_137;
LABEL_75:
    if ((v45 & 0xC000000000000001) != 0 && a1 != v46)
    {
      if (a1 >= v46)
        goto LABEL_126;
      _s11SizedRecordCMa();
      v47 = a1;
      do
      {
        v48 = v47 + 1;
        sub_1BC62D1F0();
        v47 = v48;
      }
      while (v46 != v48);
    }
    if (v45 >> 62)
    {
      swift_bridgeObjectRetain();
      v49 = sub_1BC62D3C4();
      v50 = v53;
      a1 = v54;
      v51 = v55;
      swift_bridgeObjectRelease_n();
      if ((v51 & 1) == 0)
        goto LABEL_88;
    }
    else
    {
      v49 = v45 & 0xFFFFFFFFFFFFFF8;
      v50 = (v45 & 0xFFFFFFFFFFFFFF8) + 32;
      v51 = (2 * v46) | 1;
      if ((v51 & 1) == 0)
        goto LABEL_88;
    }
    sub_1BC62D5A4();
    swift_unknownObjectRetain_n();
    v57 = swift_dynamicCastClass();
    if (!v57)
    {
      swift_unknownObjectRelease();
      v57 = MEMORY[0x1E0DEE9D8];
    }
    v58 = *(_QWORD *)(v57 + 16);
    swift_release();
    if (__OFSUB__(v51 >> 1, a1))
      goto LABEL_127;
    if (v58 != (v51 >> 1) - a1)
    {
      swift_unknownObjectRelease();
LABEL_88:
      v56 = sub_1BC3D6984(v49, v50, a1, v51);
      goto LABEL_95;
    }
    v56 = swift_dynamicCastClass();
    if (!v56)
    {
      swift_unknownObjectRelease();
      v56 = MEMORY[0x1E0DEE9D8];
    }
LABEL_95:
    swift_unknownObjectRelease();
    v59 = (void *)v42[2];
    v60 = v42[3];
    v61 = v42[4];
    v62 = (void *)v42[5];
    v63 = v42[6];
    v64 = v42[7];
    sub_1BC34E674((uint64_t)(v42 + 9), (uint64_t)v72);
    _s12SizedSectionCMa();
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 112) = 0;
    *(_BYTE *)(v65 + 120) = 1;
    *(_QWORD *)(v65 + 128) = 0;
    *(_BYTE *)(v65 + 136) = 1;
    *(_QWORD *)(v65 + 144) = 0;
    *(_BYTE *)(v65 + 152) = 1;
    *(_QWORD *)(v65 + 16) = v59;
    *(_QWORD *)(v65 + 24) = v60;
    *(_QWORD *)(v65 + 32) = v61;
    *(_QWORD *)(v65 + 40) = v62;
    *(_QWORD *)(v65 + 64) = v56;
    *(_QWORD *)(v65 + 48) = v63;
    *(_QWORD *)(v65 + 56) = v64;
    sub_1BC34E718(v72, v65 + 72);
    v66 = v59;
    MEMORY[0x1BCCF1B30](v62);
    v40 = a2 + 32;
    if (*(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    swift_release();
    v38 = v71;
    if (v39 == v4)
      goto LABEL_129;
    a1 = 0;
    if (v39 == v71)
      goto LABEL_117;
  }
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
  return result;
}

uint64_t sub_1BC3868E8(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, double a7, double a8, double a9)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;

  v102 = a3;
  v17 = sub_1BC62BB34();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1BC62D3B8();
    v101 = v21;
    if (!v21)
      goto LABEL_70;
  }
  else
  {
    v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v101 = v21;
    if (!v21)
      goto LABEL_70;
  }
  v99 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v22 = MEMORY[0x1BCCF24CC](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_66:
      v24 = MEMORY[0x1BCCF24CC](0, v21);
      goto LABEL_11;
    }
    v22 = *(_QWORD *)(a1 + 32);
    swift_retain();
  }
  v100 = a1 >> 62;
  swift_bridgeObjectRelease();
  v104 = v22;
  v21 = *(_QWORD *)(v22 + 64);
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    if (!sub_1BC62D3B8())
      goto LABEL_69;
  }
  else
  {
    v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v23)
      goto LABEL_69;
  }
  if ((v21 & 0xC000000000000001) != 0)
    goto LABEL_66;
  if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_74;
  }
  v24 = *(_QWORD *)(v21 + 32);
  swift_retain();
LABEL_11:
  swift_bridgeObjectRelease();
  v103 = v24;
  v21 = *(_QWORD *)(v24 + 80);
  if (!(v21 >> 62))
  {
    v25 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25)
      goto LABEL_13;
    goto LABEL_68;
  }
  swift_bridgeObjectRetain();
  if (!sub_1BC62D3B8())
  {
LABEL_68:
    swift_release();
LABEL_69:
    swift_release();
LABEL_70:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_13:
  if ((v21 & 0xC000000000000001) != 0)
  {
LABEL_74:
    v26 = MEMORY[0x1BCCF24CC](0, v21);
    goto LABEL_16;
  }
  if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v26 = *(_QWORD *)(v21 + 32);
  swift_retain();
LABEL_16:
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v26 + 48);
  v97 = v21 >> 62;
  v98 = v26;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v27 = sub_1BC62D3B8();
    v28 = swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    v28 = swift_bridgeObjectRetain();
  }
  if (v27 < a6)
    a6 = v27;
  v29 = (void *)MEMORY[0x1BCCF2DD8](v28);
  v95 = a4;
  a4 = v98;
  sub_1BC38856C(0, a6, 0, 0, v104, v103, v98, v21, (uint64_t *)&v105, a8, a9, a7, a2, v102, v95, a5);
  objc_autoreleasePoolPop(v29);
  a2 = (void *)v105;
  if (!v105)
    goto LABEL_24;
  v20 = v106;
  v17 = v97;
  if (v97)
  {
    if ((v21 & 0x8000000000000000) != 0)
      v34 = v21;
    else
      v34 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    a6 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (a6 < v20)
      goto LABEL_180;
    swift_bridgeObjectRetain();
    v30 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    a6 = v30;
    if (v30 < v106)
    {
      __break(1u);
LABEL_24:
      swift_bridgeObjectRelease();
      sub_1BC62BAF8();
      v31 = sub_1BC62BB28();
      v32 = sub_1BC62CAC4();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_1BC30A000, v31, v32, "[PDF]: Encountered a value that does not fit on a page, attempted to truncate the value but the resulting maximum height turned out to be negative.", v33, 2u);
        MEMORY[0x1BCCF36A8](v33, -1, -1);
        swift_release();
        swift_release();
        swift_release();

      }
      else
      {

        swift_release();
        swift_release();
        swift_release();
      }
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
      return 0;
    }
  }
  if (v30 < v20)
    goto LABEL_77;
  if (v20 < 0)
  {
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (v17)
  {
    swift_bridgeObjectRetain();
    v34 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v34 < a6)
    goto LABEL_79;
  if (a6 < 0)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if ((v21 & 0xC000000000000001) != 0 && v20 != a6)
  {
    if (v20 >= (unint64_t)a6)
      goto LABEL_181;
    _s10SizedValueCMa();
    v35 = v20;
    do
    {
      v36 = v35 + 1;
      sub_1BC62D1F0();
      v35 = v36;
    }
    while (a6 != v36);
  }
  if (v17)
  {
    swift_bridgeObjectRetain();
    v34 = sub_1BC62D3C4();
    v17 = v37;
    v20 = v38;
    a6 = v39;
    swift_bridgeObjectRelease_n();
    if ((a6 & 1) == 0)
      goto LABEL_47;
  }
  else
  {
    v34 = v21 & 0xFFFFFFFFFFFFFF8;
    v17 = (v21 & 0xFFFFFFFFFFFFFF8) + 32;
    a6 = (2 * a6) | 1;
    if ((a6 & 1) == 0)
      goto LABEL_47;
  }
  sub_1BC62D5A4();
  swift_unknownObjectRetain_n();
  v40 = swift_dynamicCastClass();
  if (!v40)
  {
    swift_unknownObjectRelease();
    v40 = MEMORY[0x1E0DEE9D8];
  }
  v41 = *(_QWORD *)(v40 + 16);
  swift_release();
  if (__OFSUB__((unint64_t)a6 >> 1, v20))
    goto LABEL_182;
  if (v41 != ((unint64_t)a6 >> 1) - v20)
    goto LABEL_183;
  v21 = swift_dynamicCastClass();
  if (!v21)
  {
    swift_unknownObjectRelease();
    v21 = MEMORY[0x1E0DEE9D8];
  }
  while (1)
  {
    swift_unknownObjectRelease();
    if ((v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
    {
LABEL_81:
      swift_bridgeObjectRetain();
      v50 = sub_1BC62D3B8();
      swift_release();
      if (v50)
      {
LABEL_57:
        sub_1BC34D844();
        v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_1BC6396B0;
        a6 = *(_QWORD *)(a4 + 16);
        v43 = *(_QWORD *)(a4 + 24);
        v44 = *(_QWORD *)(a4 + 32);
        v45 = *(_BYTE *)(a4 + 40);
        _s15SizedValueGroupCMa();
        v46 = swift_allocObject();
        *(_QWORD *)(v46 + 16) = a6;
        *(_QWORD *)(v46 + 24) = v43;
        *(_QWORD *)(v46 + 32) = v44;
        *(_BYTE *)(v46 + 40) = v45;
        *(_QWORD *)(v46 + 48) = v21;
        *(_QWORD *)(v42 + 32) = v46;
        v105 = v42;
        sub_1BC62C890();
        v47 = v105;
        v48 = (id)a6;
        goto LABEL_83;
      }
    }
    else if (*(_QWORD *)(v21 + 16))
    {
      goto LABEL_57;
    }
    swift_release();
    v47 = MEMORY[0x1E0DEE9D8];
LABEL_83:
    v51 = *(_QWORD *)(v103 + 80);
    if (!((unint64_t)v51 >> 62))
    {
      v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v52 >= 1)
        v53 = 1;
      else
        v53 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v52 < (unint64_t)v53)
        goto LABEL_116;
      goto LABEL_88;
    }
    a6 = v51 < 0 ? *(_QWORD *)(v103 + 80) : v51 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    v52 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
    if (v52 < 0)
      break;
    if (v52 >= 1)
      v53 = 1;
    else
      v53 = v52;
    swift_bridgeObjectRetain();
    v66 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v66 < v53)
      goto LABEL_116;
    swift_bridgeObjectRetain();
    a6 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (a6 < v52)
    {
      __break(1u);
LABEL_116:
      __break(1u);
      goto LABEL_117;
    }
LABEL_88:
    if ((v51 & 0xC000000000000001) != 0 && (unint64_t)v52 >= 2)
    {
      _s15SizedValueGroupCMa();
      v54 = v53;
      do
      {
        v55 = v54 + 1;
        sub_1BC62D1F0();
        v54 = v55;
      }
      while (v52 != v55);
    }
    if ((unint64_t)v51 >> 62)
    {
      swift_bridgeObjectRetain();
      a6 = sub_1BC62D3C4();
      v56 = v58;
      v53 = v59;
      v57 = v60;
      swift_bridgeObjectRelease_n();
      if ((v57 & 1) == 0)
        goto LABEL_96;
    }
    else
    {
      a6 = v51 & 0xFFFFFFFFFFFFFF8;
      v56 = (v51 & 0xFFFFFFFFFFFFFF8) + 32;
      v57 = (2 * v52) | 1;
      if ((v57 & 1) == 0)
        goto LABEL_96;
    }
    sub_1BC62D5A4();
    swift_unknownObjectRetain_n();
    v62 = swift_dynamicCastClass();
    if (!v62)
    {
      swift_unknownObjectRelease();
      v62 = MEMORY[0x1E0DEE9D8];
    }
    v63 = *(_QWORD *)(v62 + 16);
    swift_release();
    if (__OFSUB__(v57 >> 1, v53))
    {
      __break(1u);
LABEL_185:
      swift_unknownObjectRelease();
LABEL_96:
      v61 = sub_1BC3D6B38(a6, v56, v53, v57);
      goto LABEL_103;
    }
    if (v63 != (v57 >> 1) - v53)
      goto LABEL_185;
    v61 = swift_dynamicCastClass();
    if (!v61)
    {
      swift_unknownObjectRelease();
      v61 = MEMORY[0x1E0DEE9D8];
    }
LABEL_103:
    swift_unknownObjectRelease();
    v105 = v47;
    sub_1BC3BB3D0(v61);
    v53 = v105;
    if (!(v105 >> 62))
    {
      if (*(_QWORD *)((v105 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_105;
      goto LABEL_118;
    }
LABEL_117:
    swift_bridgeObjectRetain();
    v67 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v67)
    {
LABEL_105:
      sub_1BC34D844();
      a6 = swift_allocObject();
      *(_OWORD *)(a6 + 16) = xmmword_1BC6396B0;
      v64 = sub_1BC4DCE70(v53);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a6 + 32) = v64;
      v105 = a6;
      sub_1BC62C890();
      v65 = v105;
      goto LABEL_119;
    }
LABEL_118:
    swift_bridgeObjectRelease();
    v65 = MEMORY[0x1E0DEE9D8];
LABEL_119:
    v68 = *(_QWORD *)(v104 + 64);
    v17 = (unint64_t)v68 >> 62;
    if ((unint64_t)v68 >> 62)
    {
      if (v68 < 0)
        a6 = *(_QWORD *)(v104 + 64);
      else
        a6 = v68 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
      v34 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (v34 < 0)
        goto LABEL_191;
      if (v34 >= 1)
        v69 = 1;
      else
        v69 = v34;
      swift_bridgeObjectRetain();
      v94 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v94 < v69)
        goto LABEL_174;
      swift_bridgeObjectRetain();
      a6 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (a6 < v34)
      {
        __break(1u);
LABEL_174:
        __break(1u);
        goto LABEL_175;
      }
    }
    else
    {
      v34 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v34 >= 1)
        v69 = 1;
      else
        v69 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v34 < (unint64_t)v69)
        goto LABEL_174;
    }
    if ((v68 & 0xC000000000000001) != 0 && (unint64_t)v34 >= 2)
    {
      _s11SizedRecordCMa();
      v70 = v69;
      do
      {
        v71 = v70 + 1;
        sub_1BC62D1F0();
        v70 = v71;
      }
      while (v34 != v71);
    }
    if (v17)
    {
      swift_bridgeObjectRetain();
      a6 = sub_1BC62D3C4();
      v17 = v73;
      v69 = v74;
      v72 = v75;
      swift_bridgeObjectRelease_n();
      if ((v72 & 1) == 0)
        goto LABEL_132;
    }
    else
    {
      a6 = v68 & 0xFFFFFFFFFFFFFF8;
      v17 = (v68 & 0xFFFFFFFFFFFFFF8) + 32;
      v72 = (2 * v34) | 1;
      if ((v72 & 1) == 0)
        goto LABEL_132;
    }
    sub_1BC62D5A4();
    swift_unknownObjectRetain_n();
    v77 = swift_dynamicCastClass();
    if (!v77)
    {
      swift_unknownObjectRelease();
      v77 = MEMORY[0x1E0DEE9D8];
    }
    v78 = *(_QWORD *)(v77 + 16);
    swift_release();
    if (__OFSUB__(v72 >> 1, v69))
    {
      __break(1u);
LABEL_187:
      swift_unknownObjectRelease();
LABEL_132:
      v76 = sub_1BC3D6984(a6, v17, v69, v72);
      goto LABEL_139;
    }
    if (v78 != (v72 >> 1) - v69)
      goto LABEL_187;
    v76 = swift_dynamicCastClass();
    if (!v76)
    {
      swift_unknownObjectRelease();
      v76 = MEMORY[0x1E0DEE9D8];
    }
LABEL_139:
    swift_unknownObjectRelease();
    v105 = v65;
    sub_1BC3BB3C4(v76);
    v69 = v105;
    v34 = v101;
    if (!(v105 >> 62))
    {
      v20 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFF8) + 0x10);
      a4 = v98;
      if (v20)
        goto LABEL_141;
      goto LABEL_176;
    }
LABEL_175:
    swift_bridgeObjectRetain();
    v20 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    a4 = v98;
    if (v20)
    {
LABEL_141:
      sub_1BC34D844();
      a6 = swift_allocObject();
      *(_OWORD *)(a6 + 16) = xmmword_1BC6396B0;
      v79 = sub_1BC4DCF3C(v69);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a6 + 32) = v79;
      v105 = a6;
      v20 = (uint64_t)&v105;
      sub_1BC62C890();
      v80 = v105;
      if (v34 < 0)
        goto LABEL_177;
      goto LABEL_142;
    }
LABEL_176:
    swift_bridgeObjectRelease();
    v80 = MEMORY[0x1E0DEE9D8];
    if (v34 < 0)
    {
LABEL_177:
      __break(1u);
      goto LABEL_178;
    }
LABEL_142:
    if (v100)
    {
      swift_bridgeObjectRetain();
      if (sub_1BC62D3B8() < 1)
        goto LABEL_178;
      swift_bridgeObjectRetain();
      v81 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
LABEL_147:
      if (v81 < v34)
        goto LABEL_179;
      if (v99 && v34 != 1)
      {
        _s12SizedSectionCMa();
        v82 = 1;
        do
        {
          v83 = v82 + 1;
          sub_1BC62D1F0();
          v82 = v83;
        }
        while (v34 != v83);
      }
      if (v100)
      {
        swift_bridgeObjectRetain();
        v84 = sub_1BC62D3C4();
        v85 = v88;
        v86 = v89;
        v87 = v90;
        swift_bridgeObjectRelease_n();
        if ((v87 & 1) == 0)
          goto LABEL_156;
      }
      else
      {
        v84 = a1 & 0xFFFFFFFFFFFFFF8;
        v85 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
        v86 = 1;
        v87 = (2 * v34) | 1;
        if ((v87 & 1) == 0)
          goto LABEL_156;
      }
      sub_1BC62D5A4();
      swift_unknownObjectRetain_n();
      v91 = swift_dynamicCastClass();
      if (!v91)
      {
        swift_unknownObjectRelease();
        v91 = MEMORY[0x1E0DEE9D8];
      }
      v92 = *(_QWORD *)(v91 + 16);
      swift_release();
      if (__OFSUB__(v87 >> 1, v86))
      {
        __break(1u);
      }
      else if (v92 == (v87 >> 1) - v86)
      {
        if (!swift_dynamicCastClass())
          swift_unknownObjectRelease();
        goto LABEL_163;
      }
      swift_unknownObjectRelease();
LABEL_156:
      sub_1BC3D6990(v84, v85, v86, v87);
LABEL_163:
      swift_unknownObjectRelease();
      v105 = v80;
      v93 = swift_bridgeObjectRetain();
      sub_1BC3BB3B8(v93);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return (uint64_t)a2;
    }
    v81 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v81)
      goto LABEL_147;
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
LABEL_181:
    __break(1u);
LABEL_182:
    __break(1u);
LABEL_183:
    swift_unknownObjectRelease();
LABEL_47:
    v21 = sub_1BC3D6B44(v34, v17, v20, a6);
  }
  __break(1u);
LABEL_191:
  __break(1u);
  return result;
}

uint64_t sub_1BC38772C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>, uint64_t a8@<D0>, uint64_t a9@<D1>, double a10@<D2>)
{
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  id v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v122;
  uint64_t v124;
  uint64_t inited;
  void *v126;
  unint64_t v127;
  unint64_t v128;
  __int128 v129;
  __int128 v130[2];

  v17 = a1;
  v19 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_143;
  v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v105 = v20;
  if (!v20)
  {
LABEL_148:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a7 = 0;
    *(_QWORD *)(a7 + 8) = 0;
    return result;
  }
LABEL_3:
  v21 = v17 & 0xC000000000000001;
  v104 = v19;
  if ((v17 & 0xC000000000000001) != 0)
  {
    v10 = MEMORY[0x1BCCF24CC](0, v17);
  }
  else
  {
    if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_150;
    }
    v10 = *(_QWORD *)(v17 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v10 + 64);
  if (!(v19 >> 62))
  {
    v22 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v22)
      goto LABEL_8;
LABEL_147:
    swift_release();
    goto LABEL_148;
  }
  swift_bridgeObjectRetain();
  if (!sub_1BC62D3B8())
    goto LABEL_147;
LABEL_8:
  v102 = v17;
  if ((v19 & 0xC000000000000001) != 0)
  {
LABEL_150:
    v23 = MEMORY[0x1BCCF24CC](0, v19);
    goto LABEL_11;
  }
  if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  v23 = *(_QWORD *)(v19 + 32);
  swift_retain();
LABEL_11:
  swift_bridgeObjectRelease();
  v124 = v23;
  v17 = *(_QWORD *)(v23 + 80);
  v24 = v17 >> 62;
  if (!(v17 >> 62))
  {
    v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v13 = v19 - 1;
    if (!__OFSUB__(v19, 1))
      goto LABEL_13;
    goto LABEL_153;
  }
  swift_bridgeObjectRetain_n();
  v19 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  v13 = v19 - 1;
  if (__OFSUB__(v19, 1))
  {
LABEL_153:
    __break(1u);
    goto LABEL_154;
  }
LABEL_13:
  if (v13 < 1)
  {
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  v103 = (_QWORD *)a7;
  v101 = v21;
  v25 = v17 & 0xFFFFFFFFFFFFFF8;
  if (v24)
  {
    swift_bridgeObjectRetain();
    v117 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v117 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = 0;
  a7 = 0;
  v113 = v10 + 72;
  if ((v17 & 0x8000000000000000) != 0)
    v26 = v17;
  else
    v26 = v17 & 0xFFFFFFFFFFFFFF8;
  v115 = v17 & 0xC000000000000001;
  v116 = v26;
  v106 = v25 + 32;
  v111 = a9;
  v112 = a8;
  v129 = xmmword_1BC6396B0;
  v27 = 1;
  v122 = v10;
  v114 = v17;
  v107 = v17 & 0xFFFFFFFFFFFFFF8;
  v108 = v17 >> 62;
  v110 = v13;
  while (1)
  {
    v28 = v117 >= v27 || v117 <= -1;
    v127 = v27;
    v11 = v28 ? v27 : v117;
    if (v24)
    {
      swift_bridgeObjectRetain();
      v10 = v116;
      if (sub_1BC62D3B8() < 0)
        goto LABEL_141;
      swift_bridgeObjectRetain();
      v19 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = *(_QWORD *)(v25 + 16);
      swift_bridgeObjectRetain();
      v10 = v116;
    }
    if ((uint64_t)v19 < (uint64_t)v11)
      goto LABEL_138;
    v109 = a7;
    v128 = v12;
    if (v115 && v11)
    {
      v19 = _s15SizedValueGroupCMa();
      v29 = 0;
      do
      {
        v30 = v29 + 1;
        sub_1BC62D1F0();
        v29 = v30;
      }
      while (v11 != v30);
    }
    if (v24)
    {
      swift_bridgeObjectRetain();
      a7 = sub_1BC62D3C4();
      v13 = v31;
      v12 = v32;
      v11 = v33;
      swift_bridgeObjectRelease_n();
      if ((v11 & 1) == 0)
        goto LABEL_40;
    }
    else
    {
      v12 = 0;
      a7 = v25;
      v13 = v106;
      v11 = (2 * v11) | 1;
      if ((v11 & 1) == 0)
        goto LABEL_40;
    }
    v19 = sub_1BC62D5A4();
    swift_unknownObjectRetain_n();
    v34 = swift_dynamicCastClass();
    if (!v34)
    {
      swift_unknownObjectRelease();
      v34 = MEMORY[0x1E0DEE9D8];
    }
    v17 = *(_QWORD *)(v34 + 16);
    swift_release();
    if (__OFSUB__(v11 >> 1, v12))
      goto LABEL_142;
    if (v17 != (v11 >> 1) - v12)
    {
      swift_unknownObjectRelease();
LABEL_40:
      v13 = sub_1BC3D6B38(a7, v13, v12, v11);
      goto LABEL_47;
    }
    v13 = swift_dynamicCastClass();
    if (!v13)
    {
      swift_unknownObjectRelease();
      v13 = MEMORY[0x1E0DEE9D8];
    }
LABEL_47:
    swift_unknownObjectRelease();
    if (v13 < 0 || (v13 & 0x4000000000000000) != 0)
    {
      swift_retain();
      a7 = sub_1BC62D3B8();
      if (!a7)
      {
LABEL_71:
        v37 = swift_release();
        if (a2 <= 0)
          goto LABEL_78;
        goto LABEL_72;
      }
    }
    else
    {
      a7 = *(_QWORD *)(v13 + 16);
      swift_retain();
      if (!a7)
        goto LABEL_71;
    }
    if (a7 < 1)
      goto LABEL_140;
    if ((v13 & 0xC000000000000001) != 0)
    {
      v11 = 0;
      v35 = 0;
      while (1)
      {
        v19 = MEMORY[0x1BCCF24CC](v11, v13);
        v12 = *(_QWORD *)(v19 + 48);
        if (v12 >> 62)
        {
          swift_bridgeObjectRetain();
          v17 = sub_1BC62D3B8();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          v36 = __OFADD__(v35, v17);
          v35 += v17;
          if (v36)
          {
LABEL_136:
            __break(1u);
            goto LABEL_137;
          }
        }
        else
        {
          v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_unknownObjectRelease();
          v36 = __OFADD__(v35, v17);
          v35 += v17;
          if (v36)
            goto LABEL_136;
        }
        if (a7 == ++v11)
          goto LABEL_68;
      }
    }
    v12 = 0;
    v35 = 0;
    do
    {
      v11 = *(_QWORD *)(v13 + 8 * v12 + 32);
      v19 = *(_QWORD *)(v11 + 48);
      if (v19 >> 62)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        v17 = sub_1BC62D3B8();
        swift_release();
        swift_bridgeObjectRelease();
        v36 = __OFADD__(v35, v17);
        v35 += v17;
        if (v36)
        {
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          swift_bridgeObjectRetain();
          v105 = sub_1BC62D3B8();
          if (!v105)
            goto LABEL_148;
          goto LABEL_3;
        }
      }
      else
      {
        v17 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        v36 = __OFADD__(v35, v17);
        v35 += v17;
        if (v36)
          goto LABEL_137;
      }
      ++v12;
    }
    while (a7 != v12);
LABEL_68:
    v37 = swift_release();
    if (v35 >= a2)
    {
LABEL_78:
      swift_release();
      v59 = v103;
      v21 = v122;
      v60 = v128;
      v61 = v114;
      if (v128)
        goto LABEL_79;
LABEL_82:
      swift_release();
      swift_release();
      result = swift_bridgeObjectRelease();
      *v59 = 0;
      v59[1] = 0;
      return result;
    }
LABEL_72:
    v126 = (void *)MEMORY[0x1BCCF2DD8](v37);
    sub_1BC34D844();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BC6396B0;
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1BC6396B0;
    v11 = *(_QWORD *)(v124 + 16);
    v39 = *(_QWORD *)(v124 + 24);
    v40 = *(_QWORD *)(v124 + 32);
    v42 = *(void **)(v124 + 40);
    v41 = *(_QWORD *)(v124 + 48);
    v43 = *(_QWORD *)(v124 + 56);
    v44 = *(_BYTE *)(v124 + 64);
    v45 = *(_QWORD *)(v124 + 72);
    sub_1BC34E674(v124 + 88, (uint64_t)v130);
    _s11SizedRecordCMa();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 128) = 0;
    *(_BYTE *)(v46 + 136) = 1;
    *(_QWORD *)(v46 + 16) = v11;
    *(_QWORD *)(v46 + 24) = v39;
    *(_QWORD *)(v46 + 32) = v40;
    *(_QWORD *)(v46 + 40) = v42;
    *(_QWORD *)(v46 + 48) = v41;
    *(_QWORD *)(v46 + 56) = v43;
    *(_BYTE *)(v46 + 64) = v44;
    *(_QWORD *)(v46 + 72) = v45;
    *(_QWORD *)(v46 + 80) = v13;
    sub_1BC34E718(v130, v46 + 88);
    *(_QWORD *)(v38 + 32) = v46;
    *(_QWORD *)&v130[0] = v38;
    swift_retain();
    swift_retain();
    v47 = (id)v11;
    v48 = v42;
    sub_1BC62C890();
    v49 = *(_QWORD *)&v130[0];
    v21 = v122;
    v50 = *(void **)(v122 + 16);
    a9 = *(uint64_t *)(v122 + 24);
    a8 = *(uint64_t *)(v122 + 32);
    v51 = *(void **)(v122 + 40);
    v52 = *(_QWORD *)(v122 + 48);
    v53 = *(_QWORD *)(v122 + 56);
    sub_1BC34E674(v113, (uint64_t)v130);
    _s12SizedSectionCMa();
    v54 = swift_allocObject();
    *(_QWORD *)(v54 + 112) = 0;
    *(_BYTE *)(v54 + 120) = 1;
    *(_QWORD *)(v54 + 128) = 0;
    *(_BYTE *)(v54 + 136) = 1;
    *(_QWORD *)(v54 + 144) = 0;
    *(_BYTE *)(v54 + 152) = 1;
    *(_QWORD *)(v54 + 16) = v50;
    *(double *)(v54 + 24) = *(double *)&a9;
    *(double *)(v54 + 32) = *(double *)&a8;
    *(_QWORD *)(v54 + 40) = v51;
    *(_QWORD *)(v54 + 64) = v49;
    *(_QWORD *)(v54 + 48) = v52;
    *(_QWORD *)(v54 + 56) = v53;
    sub_1BC34E718(v130, v54 + 72);
    *(_QWORD *)(inited + 32) = v54;
    *(_QWORD *)&v130[0] = inited;
    v55 = v50;
    v56 = v51;
    sub_1BC62C890();
    v19 = *(_QWORD *)&v130[0];
    v10 = (uint64_t)a3;
    v57 = a3;
    v58 = a6;
    v12 = sub_1BC56BE98(v19, (uint64_t)a3, a4, a5, (uint64_t)a6, v112, v111);
    objc_autoreleasePoolPop(v126);
    swift_release();
    if (sub_1BC569290() >= a10)
      break;
    swift_release();
    v13 = v110;
    if (v127 == v110)
    {
      swift_retain();
LABEL_85:
      v61 = v114;
      goto LABEL_86;
    }
    a7 = v127;
    v27 = v127 + 1;
    v17 = v114;
    v25 = v107;
    v24 = v108;
    if (__OFADD__(v127, 1))
      goto LABEL_139;
  }
  v60 = v128;
  if (*(double *)(v12 + 112) <= a10)
  {
    swift_release();
    swift_retain();
    v13 = v127;
    goto LABEL_85;
  }
  swift_release();
  v59 = v103;
  v61 = v114;
  if (!v128)
    goto LABEL_82;
LABEL_79:
  swift_retain();
  v12 = v60;
  v13 = v109;
LABEL_86:
  v63 = sub_1BC388BD0(v13, v61);
  v65 = v64;
  v11 = v66;
  v13 = v67;
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    sub_1BC62D5A4();
    swift_unknownObjectRetain_n();
    v69 = swift_dynamicCastClass();
    if (!v69)
    {
      swift_unknownObjectRelease();
      v69 = MEMORY[0x1E0DEE9D8];
    }
    v70 = *(_QWORD *)(v69 + 16);
    swift_release();
    if (__OFSUB__((unint64_t)v13 >> 1, v11))
      goto LABEL_169;
    if (v70 != ((unint64_t)v13 >> 1) - v11)
      goto LABEL_170;
    v68 = swift_dynamicCastClass();
    if (!v68)
    {
      swift_unknownObjectRelease();
      v68 = MEMORY[0x1E0DEE9D8];
    }
    goto LABEL_94;
  }
  while (2)
  {
    v68 = sub_1BC3D6B38(v63, v65, v11, v13);
LABEL_94:
    swift_unknownObjectRelease();
    v13 = sub_1BC4DCE70(v68);
    swift_release();
    sub_1BC34D844();
    v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = v129;
    *(_QWORD *)(v71 + 32) = v13;
    *(_QWORD *)&v130[0] = v71;
    sub_1BC62C890();
    v17 = *(_QWORD *)&v130[0];
    v11 = *(_QWORD *)(v21 + 64);
    v21 = v11 >> 62;
    if (v11 >> 62)
    {
LABEL_156:
      if ((v11 & 0x8000000000000000) != 0)
        v65 = v11;
      else
        v65 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
      swift_retain();
      v72 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (v72 < 0)
        goto LABEL_176;
      if (v72 >= 1)
        v63 = 1;
      else
        v63 = v72;
      swift_bridgeObjectRetain();
      v99 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v99 >= v63)
      {
        swift_bridgeObjectRetain();
        v100 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
        if (v100 >= v72)
          goto LABEL_99;
        __break(1u);
      }
      goto LABEL_166;
    }
    v72 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v72 >= 1)
      v63 = 1;
    else
      v63 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v72 < (unint64_t)v63)
    {
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
LABEL_99:
    if ((v11 & 0xC000000000000001) != 0 && (unint64_t)v72 >= 2)
    {
      _s11SizedRecordCMa();
      v73 = v63;
      do
      {
        v74 = v73 + 1;
        sub_1BC62D1F0();
        v73 = v74;
      }
      while (v72 != v74);
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      v13 = sub_1BC62D3C4();
      v75 = v77;
      v63 = v78;
      v76 = v79;
      swift_bridgeObjectRelease_n();
      if ((v76 & 1) != 0)
        goto LABEL_108;
      goto LABEL_107;
    }
    v13 = v11 & 0xFFFFFFFFFFFFFF8;
    v75 = (v11 & 0xFFFFFFFFFFFFFF8) + 32;
    v76 = (2 * v72) | 1;
    if ((v76 & 1) == 0)
    {
LABEL_107:
      v80 = sub_1BC3D6984(v13, v75, v63, v76);
      goto LABEL_114;
    }
LABEL_108:
    v11 = sub_1BC62D5A4();
    swift_unknownObjectRetain_n();
    v81 = swift_dynamicCastClass();
    if (!v81)
    {
      swift_unknownObjectRelease();
      v81 = MEMORY[0x1E0DEE9D8];
    }
    v82 = *(_QWORD *)(v81 + 16);
    swift_release();
    if (__OFSUB__(v76 >> 1, v63))
    {
      __break(1u);
      goto LABEL_172;
    }
    if (v82 != (v76 >> 1) - v63)
    {
LABEL_172:
      swift_unknownObjectRelease();
      goto LABEL_107;
    }
    v80 = swift_dynamicCastClass();
    if (!v80)
    {
      swift_unknownObjectRelease();
      v80 = MEMORY[0x1E0DEE9D8];
    }
LABEL_114:
    swift_unknownObjectRelease();
    *(_QWORD *)&v130[0] = v17;
    sub_1BC3BB3C4(v80);
    v21 = sub_1BC4DCF3C(*(uint64_t *)&v130[0]);
    swift_bridgeObjectRelease();
    v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = v129;
    *(_QWORD *)(v83 + 32) = v21;
    *(_QWORD *)&v130[0] = v83;
    v63 = (uint64_t)v130;
    result = sub_1BC62C890();
    if ((v105 & 0x8000000000000000) == 0)
    {
      v65 = *(_QWORD *)&v130[0];
      if (v104)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        if (sub_1BC62D3B8() < 1)
          goto LABEL_167;
        swift_bridgeObjectRetain();
        v84 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v84 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_retain();
        if (!v84)
        {
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          swift_unknownObjectRelease();
          continue;
        }
      }
      if (v84 >= v105)
      {
        if (v101 && v105 != 1)
        {
          _s12SizedSectionCMa();
          v85 = 1;
          do
          {
            v86 = v85 + 1;
            sub_1BC62D1F0();
            v85 = v86;
          }
          while (v105 != v86);
        }
        if (!v104)
        {
          v87 = v102 & 0xFFFFFFFFFFFFFF8;
          v88 = (v102 & 0xFFFFFFFFFFFFFF8) + 32;
          v89 = 1;
          v90 = (2 * v105) | 1;
          goto LABEL_129;
        }
        swift_bridgeObjectRetain();
        v87 = sub_1BC62D3C4();
        v88 = v91;
        v89 = v92;
        v90 = v93;
        swift_bridgeObjectRelease_n();
        if ((v90 & 1) == 0)
        {
LABEL_128:
          v94 = sub_1BC3D6990(v87, v88, v89, v90);
LABEL_135:
          swift_unknownObjectRelease();
          *(_QWORD *)&v130[0] = v65;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1BC3BB3B8(v94);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          result = swift_release();
          v98 = *(_QWORD *)&v130[0];
          *v103 = v12;
          v103[1] = v98;
          return result;
        }
LABEL_129:
        v95 = v88;
        sub_1BC62D5A4();
        swift_unknownObjectRetain_n();
        v96 = swift_dynamicCastClass();
        if (!v96)
        {
          swift_unknownObjectRelease();
          v96 = MEMORY[0x1E0DEE9D8];
        }
        v97 = *(_QWORD *)(v96 + 16);
        swift_release();
        if (__OFSUB__(v90 >> 1, v89))
        {
          __break(1u);
        }
        else if (v97 == (v90 >> 1) - v89)
        {
          v94 = swift_dynamicCastClass();
          if (!v94)
          {
            swift_unknownObjectRelease();
            v94 = MEMORY[0x1E0DEE9D8];
          }
          goto LABEL_135;
        }
        swift_unknownObjectRelease();
        v88 = v95;
        goto LABEL_128;
      }
      goto LABEL_168;
    }
    break;
  }
  __break(1u);
LABEL_176:
  __break(1u);
  return result;
}

void sub_1BC38856C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, void *a13, uint64_t a14, uint64_t a15, void *a16)
{
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t inited;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v81;

  v26 = a9;
  if (a1 >= a2)
  {
    *a9 = a3;
    a9[1] = a4;
    swift_retain();
    return;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_51;
  }
  v19 = a1 + (a2 - a1) / 2;
  if (__OFADD__(a1, (a2 - a1) / 2))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v21 = a12;
  v22 = a11;
  v23 = a10;
  v18 = a8;
  v20 = a7;
  v70 = a1;
  v71 = a2;
  v78 = a5;
  sub_1BC34D844();
  v79 = 1;
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6396B0;
  v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_1BC6396B0;
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BC6396B0;
  v69 = v19;
  if (__OFADD__(v19++, 1))
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v19 < 0)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v16 = v27;
  v77 = v18 >> 62;
  if (!(v18 >> 62))
  {
    v29 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29 >= v19)
      goto LABEL_8;
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
LABEL_54:
  swift_bridgeObjectRetain();
  if (sub_1BC62D3B8() < 0)
  {
    __break(1u);
LABEL_63:
    objc_autoreleasePoolPop(v26);
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v65 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (v65 < v19)
    goto LABEL_56;
LABEL_8:
  v74 = v17;
  if ((v18 & 0xC000000000000001) != 0 && v19)
  {
    _s10SizedValueCMa();
    v30 = 0;
    do
    {
      v31 = v30 + 1;
      sub_1BC62D1F0();
      v30 = v31;
    }
    while (v19 != v31);
  }
  v67 = a4;
  v68 = a3;
  v73 = v26;
  if (v77)
  {
    swift_bridgeObjectRetain();
    v33 = sub_1BC62D3C4();
    v34 = v36;
    v32 = v37;
    v35 = v38;
    swift_bridgeObjectRelease_n();
    v72 = v20;
    if ((v35 & 1) == 0)
    {
LABEL_16:
      v39 = sub_1BC3D6B44(v33, v34, v32, v35);
      goto LABEL_23;
    }
  }
  else
  {
    v32 = 0;
    v33 = v18 & 0xFFFFFFFFFFFFFF8;
    v34 = (v18 & 0xFFFFFFFFFFFFFF8) + 32;
    v35 = (2 * v19) | 1;
    v72 = v20;
  }
  v40 = (void *)sub_1BC62D5A4();
  swift_unknownObjectRetain_n();
  v41 = swift_dynamicCastClass();
  if (!v41)
  {
    swift_unknownObjectRelease();
    v41 = MEMORY[0x1E0DEE9D8];
  }
  v42 = *(void **)(v41 + 16);
  swift_release();
  if (__OFSUB__(v35 >> 1, v32))
  {
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    v66 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v66 > 1)
      goto LABEL_32;
    goto LABEL_28;
  }
  if (v42 != (void *)((v35 >> 1) - v32))
  {
    swift_unknownObjectRelease();
    v20 = v72;
    goto LABEL_16;
  }
  v39 = swift_dynamicCastClass();
  v20 = v72;
  if (!v39)
  {
    swift_unknownObjectRelease();
    v39 = MEMORY[0x1E0DEE9D8];
  }
LABEL_23:
  swift_unknownObjectRelease();
  v44 = *(void **)(v20 + 16);
  v43 = *(_QWORD *)(v20 + 24);
  v45 = *(_QWORD *)(v20 + 32);
  v46 = *(_BYTE *)(v20 + 40);
  _s15SizedValueGroupCMa();
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v44;
  *(_QWORD *)(v47 + 24) = v43;
  *(_QWORD *)(v47 + 32) = v45;
  *(_BYTE *)(v47 + 40) = v46;
  *(_QWORD *)(v47 + 48) = v39;
  *(_QWORD *)(v16 + 32) = v47;
  sub_1BC62C890();
  v48 = sub_1BC4DCE70(v16);
  v49 = v44;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v75 + 32) = v48;
  sub_1BC62C890();
  v50 = sub_1BC4DCF3C(v75);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 32) = v50;
  *(_QWORD *)&v81 = inited;
  sub_1BC62C890();
  v16 = inited;
  v51 = *(_QWORD *)(v78 + 64);
  if (!(v51 >> 62))
  {
    v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_25;
  }
LABEL_57:
  swift_bridgeObjectRetain();
  v52 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
LABEL_25:
  v33 = a15;
  v40 = a16;
  v79 = a14;
  v42 = a13;
  if (v52 > 1)
    goto LABEL_32;
  v53 = *(_QWORD *)(a6 + 80);
  if (v53 >> 62)
    goto LABEL_59;
  if (*(uint64_t *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
    goto LABEL_32;
LABEL_28:
  if (!v77)
  {
    if (v19 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_43;
LABEL_32:
    v55 = *(_QWORD *)&v23;
    v56 = *(_QWORD *)&v22;
    v57 = v40;
    v58 = (uint64_t)v40;
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  v54 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (v19 < v54)
    goto LABEL_32;
LABEL_43:
  v58 = 0;
  v55 = 0;
  v56 = 0;
LABEL_33:
  v59 = v42;
  v60 = sub_1BC56BE98(v16, (uint64_t)v42, v79, v33, v58, v55, v56);
  if (sub_1BC569290() < v21)
  {
    v61 = v73;
    if (v19 < v71)
    {
      v62 = swift_retain();
      v26 = (uint64_t *)MEMORY[0x1BCCF2DD8](v62);
      sub_1BC38856C(&v81, v19, v71, v60, v19, v78, a6, v72, v18, v23, v22, v21, v42, v79, v33, v40);
      if (!v74)
      {
        objc_autoreleasePoolPop(v26);
        swift_release_n();
LABEL_41:
        *(_OWORD *)v61 = v81;
        return;
      }
      goto LABEL_63;
    }
LABEL_42:
    *v61 = v60;
    v61[1] = v19;
    return;
  }
  v61 = v73;
  if (*(double *)(v60 + 112) <= v21)
    goto LABEL_42;
  if (v69 > v70)
  {
    v26 = (uint64_t *)MEMORY[0x1BCCF2DD8]();
    sub_1BC38856C(&v81, v70, v69, v68, v67, v78, a6, v72, v18, v23, v22, v21, v42, v79, v33, v40);
    if (!v74)
    {
      objc_autoreleasePoolPop(v26);
      swift_release();
      goto LABEL_41;
    }
    goto LABEL_63;
  }
  if (v68)
  {
    swift_retain();
    swift_release();
    *v73 = v68;
    v73[1] = v67;
  }
  else
  {
    v63 = sub_1BC388E44(v60, v21);
    swift_release();
    if (v63)
      v64 = v19;
    else
      v64 = 0;
    *v73 = v63;
    v73[1] = v64;
  }
}

uint64_t sub_1BC388BD0(uint64_t result, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = result;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BC62D3B8();
  result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3)
    v6 = v3;
  else
    v6 = v5;
  if (v5 < 0)
    v6 = v3;
  if (v3)
    v7 = v6;
  else
    v7 = 0;
  if (v5 < v7)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
    goto LABEL_34;
  if (v7 < 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9 < v5)
    goto LABEL_36;
  if ((v2 & 0xC000000000000001) != 0 && v7 != v5)
  {
    if (v7 < (unint64_t)v5)
    {
      _s15SizedValueGroupCMa();
      v10 = v7;
      do
      {
        v11 = v10 + 1;
        sub_1BC62D1F0();
        v10 = v11;
      }
      while (v5 != v11);
      goto LABEL_27;
    }
LABEL_37:
    __break(1u);
    return result;
  }
LABEL_27:
  if (v4)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BC62D3C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

unint64_t sub_1BC388DA8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_1BC62C758();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_1BC62C7D0();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC388E44(uint64_t a1, double a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  double v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v49 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v49 != 1)
      return 0;
  }
  else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    return 0;
  }
  v5 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0)
  {
    v50 = *(_QWORD *)(MEMORY[0x1BCCF24CC](0, v4) + 64);
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    if ((v50 & 0x8000000000000000) == 0 && (v50 & 0x4000000000000000) == 0)
    {
      v51 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      if (v51 != 1)
        return 0;
LABEL_67:
      v7 = MEMORY[0x1BCCF24CC](0, v4);
      goto LABEL_10;
    }
LABEL_65:
    swift_bridgeObjectRetain();
    v52 = sub_1BC62D3B8();
    swift_bridgeObjectRelease_n();
    if (v52 != 1)
      return 0;
    if (!v5)
      goto LABEL_78;
    goto LABEL_67;
  }
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_64:
    swift_bridgeObjectRetain();
    goto LABEL_65;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v4 + 32) + 64);
  if (v6 < 0 || (v6 & 0x4000000000000000) != 0)
    goto LABEL_64;
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
    return 0;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_79:
    __break(1u);
LABEL_80:
    v17 = MEMORY[0x1BCCF24CC](0);
LABEL_36:
    v20 = *(_QWORD *)(v17 + 80);
    if ((v20 & 0xC000000000000001) != 0)
      goto LABEL_82;
    if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v5 = *(_QWORD *)(v20 + 32);
      result = swift_retain();
      goto LABEL_39;
    }
    __break(1u);
LABEL_84:
    v22 = MEMORY[0x1BCCF24CC](0);
LABEL_42:
    v23 = sub_1BC4DD004((_QWORD *)(v17 + 88));
    v24 = v23 - (sub_1BC569290() - a2);
    if (v24 > 0.0)
    {
      v25 = *(_QWORD *)(v22 + 16);
      v26 = *(_QWORD *)(v22 + 24);
      v27 = *(_QWORD *)(v22 + 32);
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        v57 = MEMORY[0x1E0DEE9D8];
        v56 = *(_QWORD *)(v22 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BC3BDA2C(0, v28, 0);
        v29 = 0;
        v30 = v57;
        v31 = *(_QWORD *)(v57 + 16);
        do
        {
          v32 = v27 + 8 * v29;
          if (v24 >= *(double *)(v32 + 32))
            v33 = *(double *)(v32 + 32);
          else
            v33 = v24;
          v34 = *(_QWORD *)(v57 + 24);
          if (v31 >= v34 >> 1)
            sub_1BC3BDA2C(v34 > 1, v31 + 1, 1);
          ++v29;
          *(_QWORD *)(v57 + 16) = v31 + 1;
          *(double *)(v57 + 8 * v31++ + 32) = v33;
        }
        while (v28 != v29);
        swift_bridgeObjectRelease();
        v25 = v56;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30 = MEMORY[0x1E0DEE9D8];
      }
      v36 = *(_BYTE *)(v22 + 40);
      _s10SizedValueCMa();
      v37 = swift_allocObject();
      *(_QWORD *)(v37 + 48) = 0;
      *(_BYTE *)(v37 + 56) = 1;
      *(_QWORD *)(v37 + 16) = v25;
      *(_QWORD *)(v37 + 24) = v26;
      *(_QWORD *)(v37 + 32) = v30;
      *(_BYTE *)(v37 + 40) = v36;
      sub_1BC34D844();
      v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_1BC6396B0;
      v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1BC6396B0;
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1BC6396B0;
      v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_1BC6396B0;
      *(_QWORD *)(v40 + 32) = v37;
      v58 = v40;
      sub_1BC62C890();
      v42 = *(void **)(v5 + 16);
      v41 = *(_QWORD *)(v5 + 24);
      v43 = *(_QWORD *)(v5 + 32);
      v44 = *(_BYTE *)(v5 + 40);
      _s15SizedValueGroupCMa();
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 16) = v42;
      *(_QWORD *)(v45 + 24) = v41;
      *(_QWORD *)(v45 + 32) = v43;
      *(_BYTE *)(v45 + 40) = v44;
      *(_QWORD *)(v45 + 48) = v58;
      *(_QWORD *)(v39 + 32) = v45;
      sub_1BC62C890();
      v46 = sub_1BC4DCE70(v39);
      v47 = v42;
      swift_retain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v38 + 32) = v46;
      sub_1BC62C890();
      v48 = sub_1BC4DCF3C(v38);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v55 + 32) = v48;
      sub_1BC62C890();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v35 = sub_1BC5692C4(v55, *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
      swift_bridgeObjectRelease();
      return v35;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  while (1)
  {
    v7 = *(_QWORD *)(v4 + 32);
    swift_retain();
LABEL_10:
    v8 = *(_QWORD *)(v7 + 64);
    swift_bridgeObjectRetain();
    swift_release();
    if ((v8 & 0xC000000000000001) != 0)
    {
      v53 = MEMORY[0x1BCCF24CC](0, v8);
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v53 + 80);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      if ((v10 & 0x8000000000000000) == 0 && (v10 & 0x4000000000000000) == 0)
        goto LABEL_14;
      goto LABEL_70;
    }
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
    __break(1u);
LABEL_72:
    v14 = MEMORY[0x1BCCF24CC](0, v8);
LABEL_23:
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(v14 + 80);
    swift_bridgeObjectRetain();
    swift_release();
    if ((v8 & 0xC000000000000001) != 0)
      goto LABEL_74;
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v15 = *(_QWORD *)(v8 + 32);
      swift_retain();
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v15 + 48);
      swift_bridgeObjectRetain();
      swift_release();
      if ((v16 & 0x8000000000000000) == 0 && (v16 & 0x4000000000000000) == 0)
        goto LABEL_27;
      goto LABEL_76;
    }
    __break(1u);
LABEL_78:
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_79;
  }
  v9 = *(_QWORD *)(v8 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 80);
  swift_bridgeObjectRetain();
  swift_release();
  if ((v10 & 0x8000000000000000) == 0 && (v10 & 0x4000000000000000) == 0)
  {
LABEL_14:
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_15;
  }
LABEL_70:
  swift_bridgeObjectRetain();
  v11 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
LABEL_15:
  result = swift_bridgeObjectRelease();
  if (v11 != 1)
    return 0;
  if (v5)
  {
    v13 = MEMORY[0x1BCCF24CC](0, v4);
  }
  else
  {
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_86;
    v13 = *(_QWORD *)(v4 + 32);
    swift_retain();
  }
  v8 = *(_QWORD *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_release();
  if ((v8 & 0xC000000000000001) != 0)
    goto LABEL_72;
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(_QWORD *)(v8 + 32);
    swift_retain();
    goto LABEL_23;
  }
  __break(1u);
LABEL_74:
  v54 = MEMORY[0x1BCCF24CC](0, v8);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v54 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  if ((v16 & 0x8000000000000000) == 0 && (v16 & 0x4000000000000000) == 0)
  {
LABEL_27:
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_28;
  }
LABEL_76:
  swift_bridgeObjectRetain();
  v17 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
LABEL_28:
  result = swift_bridgeObjectRelease();
  if (v17 != 1)
    return 0;
  if (v5)
  {
    v18 = MEMORY[0x1BCCF24CC](0, v4);
    goto LABEL_33;
  }
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_87;
  v18 = *(_QWORD *)(v4 + 32);
  swift_retain();
LABEL_33:
  v19 = *(_QWORD *)(v18 + 64);
  if ((v19 & 0xC000000000000001) != 0)
    goto LABEL_80;
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = *(_QWORD *)(v19 + 32);
    swift_retain();
    goto LABEL_36;
  }
  __break(1u);
LABEL_82:
  result = MEMORY[0x1BCCF24CC](0);
  v5 = result;
LABEL_39:
  v21 = *(_QWORD *)(v5 + 48);
  if ((v21 & 0xC000000000000001) != 0)
    goto LABEL_84;
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v22 = *(_QWORD *)(v21 + 32);
    swift_retain();
    goto LABEL_42;
  }
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
  return result;
}

unint64_t MedicalRecordChartingError.description.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
  {
    if (*(_QWORD *)v0)
      return 0xD000000000000013;
    else
      return 0xD00000000000001BLL;
  }
  else
  {
    sub_1BC62D1D8();
    sub_1BC62C764();
    sub_1BC62D52C();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    return 0;
  }
}

uint64_t getEnumTagSinglePayload for MedicalRecordChartingError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MedicalRecordChartingError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1BC389748(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BC389764(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordChartingError()
{
  return &type metadata for MedicalRecordChartingError;
}

uint64_t type metadata accessor for ClinicalSharingThingsToKnowViewController()
{
  uint64_t result;

  result = qword_1EF42AE28;
  if (!qword_1EF42AE28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC3897D0()
{
  return swift_initClassMetadata2();
}

void sub_1BC38982C(void *a1)
{
  char *v1;
  id v2;
  objc_super v3;

  v3.receiver = a1;
  v3.super_class = (Class)type metadata accessor for ClinicalSharingThingsToKnowViewController();
  v1 = (char *)v3.receiver;
  objc_msgSendSuper2(&v3, sel_viewDidLoad);
  if (*(_QWORD *)(*(_QWORD *)&v1[qword_1EF42AE10] + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) == 2)
  {
    v2 = objc_msgSend(v1, sel_navigationItem, v3.receiver, v3.super_class);
    objc_msgSend(v2, sel_setRightBarButtonItem_, 0);

  }
  sub_1BC3898DC();

}

void sub_1BC3898DC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  __int128 v21;

  sub_1BC359F44();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v1 + 32) = sub_1BC62C680();
  *(_QWORD *)(v1 + 40) = v2;
  strcpy((char *)(v1 + 48), "YouShouldKnow");
  *(_WORD *)(v1 + 62) = -4864;
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v4)
  {
    v5 = sub_1BC62C680();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = objc_msgSend(v0, sel_navigationItem, 2, 4);
  v9 = objc_msgSend(v8, sel_leftBarButtonItem);

  if (v9)
  {
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v21;
    if (!v7)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    *(_QWORD *)(v10 + 32) = v5;
    *(_QWORD *)(v10 + 40) = v7;
    *(_QWORD *)(v10 + 48) = 1801675074;
    *(_QWORD *)(v10 + 56) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v12 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v12);
  }
  v13 = objc_msgSend(v0, sel_navigationItem);
  v14 = objc_msgSend(v13, sel_rightBarButtonItem);

  if (!v14)
  {
LABEL_10:
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v21;
    if (v7)
    {
      *(_QWORD *)(v18 + 32) = v5;
      *(_QWORD *)(v18 + 40) = v7;
      *(_QWORD *)(v18 + 48) = 1954047310;
      *(_QWORD *)(v18 + 56) = 0xE400000000000000;
      v19 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v20 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (v20)
      {
        sub_1BC62C680();

        sub_1BC62B75C();
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v21;
  if (v7)
  {
    *(_QWORD *)(v15 + 32) = v5;
    *(_QWORD *)(v15 + 40) = v7;
    *(_QWORD *)(v15 + 48) = 0x6C65636E6143;
    *(_QWORD *)(v15 + 56) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    v16 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v17 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v17);
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
}

void sub_1BC389C00()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v12[6];

  v1 = *(void **)&v0[qword_1EF42AE10];
  v2 = *(void **)&v0[qword_1EF42AE18];
  v3 = *(_QWORD *)&v0[qword_1EF42AE20];
  v4 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionViewController(0));
  v5 = v1;
  v6 = v2;
  swift_bridgeObjectRetain();
  v7 = sub_1BC3601E0(v5, v6, v3);
  objc_msgSend(v0, sel_showViewController_sender_, v7, 0);
  v8 = *(void **)&v5[OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient];
  v9 = (void *)sub_1BC62C650();
  sub_1BC408EF4(*(_QWORD *)&v5[OBJC_IVAR___WDClinicalAccountOnboardingSession_context]);
  v10 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v12[4] = nullsub_1;
  v12[5] = 0;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BC3EFECC;
  v12[3] = &block_descriptor_8;
  v11 = _Block_copy(v12);
  objc_msgSend(v8, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v9, v10, v11);
  _Block_release(v11);

}

void sub_1BC389D7C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC389DA8()
{
  uint64_t v0;

  return swift_bridgeObjectRelease();
}

id sub_1BC389DE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingThingsToKnowViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC389E18(uint64_t a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC389E60()
{
  return type metadata accessor for ClinicalSharingThingsToKnowViewController();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

void sub_1BC389E80(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  char *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(unint64_t, char *, uint64_t);
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  _QWORD v40[2];
  char *v41;
  uint64_t v42;
  __int128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v42 = sub_1BC62AEA4();
  v45 = *(_QWORD *)(v42 - 8);
  v7 = MEMORY[0x1E0C80A78](v42);
  v44 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v40 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v40 - v12;
  *(_QWORD *)(v3 + qword_1EF42AE10) = a1;
  *(_QWORD *)(v3 + qword_1EF42AE18) = a2;
  v46 = v3;
  *(_QWORD *)(v3 + qword_1EF42AE20) = a3;
  sub_1BC359F44();
  v14 = swift_allocObject();
  v43 = xmmword_1BC6398E0;
  *(_OWORD *)(v14 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v14 + 32) = sub_1BC62C680();
  *(_QWORD *)(v14 + 40) = v15;
  strcpy((char *)(v14 + 48), "YouShouldKnow");
  *(_WORD *)(v14 + 62) = -4864;
  *(_QWORD *)(v14 + 64) = 0x4964656B63617453;
  *(_QWORD *)(v14 + 72) = 0xEB000000006D6574;
  v16 = a1;
  v17 = a2;
  v18 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v19 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v19)
  {
    sub_1BC62C680();

  }
  if (qword_1ED6A3308 != -1)
    swift_once();
  v20 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  v21 = v13;
  sub_1BC62AE98();
  v22 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  sub_1BC62AE98();
  v23 = (void *)objc_opt_self();
  v24 = (void *)sub_1BC62C650();
  v25 = objc_msgSend(v23, sel_modelSpecificLocalizedStringKeyForKey_, v24);

  v41 = v11;
  if (v25)
  {
    sub_1BC62C680();

    v26 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v27 = v44;
    sub_1BC62AE98();
    v28 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    v29 = sub_1BC62A4A8();
    v40[0] = v30;
    v40[1] = v29;
    swift_bridgeObjectRelease();

    sub_1BC38A3E4();
    v31 = v45;
    v32 = *(_QWORD *)(v45 + 72);
    v33 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v43;
    v35 = v34 + v33;
    v36 = *(void (**)(unint64_t, char *, uint64_t))(v31 + 16);
    v37 = v42;
    v36(v35, v21, v42);
    v38 = v41;
    v36(v35 + v32, v41, v37);
    v36(v35 + 2 * v32, v27, v37);
    sub_1BC62B720();
    v39 = *(void (**)(char *, uint64_t))(v31 + 8);
    v39(v27, v37);
    v39(v38, v37);
    v39(v21, v37);
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC38A3E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42AE78)
  {
    sub_1BC62AEA4();
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42AE78);
  }
}

uint64_t type metadata accessor for RecordDisplayNamesDataSource()
{
  uint64_t result;

  result = qword_1EF42AE90;
  if (!qword_1EF42AE90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC38A474()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC38A4C0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  v2 = sub_1BC62C878();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC38A52C(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9D8];
  sub_1BC62D28C();
  if (a1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x1BCCF24CC](v3, a1);
LABEL_7:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_12;
        sub_1BC38A954(v3, v4);

        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
        ++v3;
        if (v6 == v2)
          goto LABEL_14;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
      v2 = sub_1BC62D3B8();
      if (!v2)
        goto LABEL_14;
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_7;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BC38A678(void *a1, void *a2)
{
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v12[6];

  *(_QWORD *)(v2 + qword_1EF42AE80) = a1;
  *(_QWORD *)(v2 + qword_1EF42AE88) = a2;
  v4 = a1;
  v5 = a2;
  v6 = sub_1BC62B678();
  v7 = *(void **)(v6 + qword_1EF42AE80);
  v8 = *(_QWORD *)(v6 + qword_1EF42AE88);
  v12[4] = sub_1BC38ADBC;
  v12[5] = v6;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BC38A4C0;
  v12[3] = &block_descriptor_9;
  v9 = _Block_copy(v12);
  swift_retain_n();
  v10 = v7;
  swift_release();
  objc_msgSend(v10, sel_fetchDisplayNameItemWithHealthRecordsStore_completion_, v8, v9);
  _Block_release(v9);
  swift_release();

  return v6;
}

uint64_t sub_1BC38A7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC62B3C0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62B330();
  v4 = sub_1BC62B3B4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1BC38A830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t result;
  _BYTE v8[16];

  v0 = sub_1BC62C4D0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)&v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BC38A52C(v4);
  swift_bridgeObjectRelease();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v3 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF740], v0);
  v6 = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if ((v6 & 1) != 0)
  {
    sub_1BC3D1D2C(v5);
    swift_bridgeObjectRelease();
    sub_1BC62B2E8();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1BC38A954(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  sub_1BC359F44();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v3 + 32) = sub_1BC62C680();
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = 0x4E79616C70736944;
  *(_QWORD *)(v3 + 56) = 0xEF6C6C6543656D61;
  *(_QWORD *)(v3 + 64) = sub_1BC62D52C();
  *(_QWORD *)(v3 + 72) = v5;
  v6 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v7 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v7)
  {
    v8 = sub_1BC62C680();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  result = objc_msgSend(a2, sel_title);
  if (result)
  {
    v12 = result;
    v13 = sub_1BC62C680();
    v15 = v14;

    v16 = objc_msgSend(a2, sel_subtitle);
    if (v16)
    {
      v17 = v16;
      v18 = sub_1BC62C680();
      v20 = v19;

    }
    else
    {
      v18 = 0;
      v20 = 0;
    }
    type metadata accessor for TitleSubtitleDetailItem(0);
    v21 = (_QWORD *)swift_allocObject();
    sub_1BC62A7A8();
    v21[2] = v13;
    v21[3] = v15;
    v22 = MEMORY[0x1E0DEE9D8];
    v21[4] = v18;
    v21[5] = v20;
    v21[6] = 0;
    v21[7] = v22;
    v21[8] = v8;
    v21[9] = v10;
    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC38AB20()
{
  sub_1BC38AB50();
}

void sub_1BC38AB38()
{
  sub_1BC38AB50();
}

void sub_1BC38AB50()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC38AB78()
{
  uint64_t v0;

}

uint64_t sub_1BC38ABA4()
{
  uint64_t v0;

  v0 = sub_1BC62B69C();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC38ABF0()
{
  return type metadata accessor for RecordDisplayNamesDataSource();
}

unint64_t sub_1BC38ABF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  v2 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v2);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v3 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62BD38();
  v4 = sub_1BC62AD3C();
  swift_allocObject();
  v5 = sub_1BC62AD24();
  a1[3] = v4;
  result = sub_1BC38AD74();
  a1[4] = result;
  *a1 = v5;
  return result;
}

unint64_t sub_1BC38AD60@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC38ABF8(a1);
}

unint64_t sub_1BC38AD74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A4108;
  if (!qword_1ED6A4108)
  {
    v1 = sub_1BC62AD3C();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D2A8A0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A4108);
  }
  return result;
}

uint64_t sub_1BC38ADBC()
{
  return sub_1BC38A830();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

double sub_1BC38ADDC()
{
  double result;

  result = 13.0;
  xmmword_1EF459B00 = xmmword_1BC63A920;
  *(_OWORD *)&qword_1EF459B10 = xmmword_1BC63A930;
  return result;
}

void sub_1BC38ADFC()
{
  qword_1EF459B20 = 0x4020000000000000;
}

id sub_1BC38AE0C()
{
  id v0;
  double v1;
  double v2;
  double v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  objc_msgSend(v0, sel_setLineBreakMode_, 0);
  LODWORD(v1) = 1148846080;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 1, v1);
  LODWORD(v2) = 1148846080;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v2);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

id sub_1BC38AEE4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___bottomConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___bottomConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___bottomConstraint];
  }
  else
  {
    v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel], sel_bottomAnchor);
    v5 = objc_msgSend(v0, sel_bottomAnchor);
    if (qword_1EF4283D8 != -1)
      swift_once();
    v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, *(double *)&qword_1EF459B10);

    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BC38AFD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateChevronConstraint;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateChevronConstraint);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateChevronConstraint);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView), sel_leadingAnchor);
    v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel), sel_trailingAnchor);
    if (qword_1EF4283E0 != -1)
      swift_once();
    v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, *(double *)&qword_1EF459B20);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BC38B0D8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateTrailingConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateTrailingConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateTrailingConstraint];
  }
  else
  {
    v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel], sel_trailingAnchor);
    v5 = objc_msgSend(v0, sel_trailingAnchor);
    if (qword_1EF4283D8 != -1)
      swift_once();
    v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, -*(double *)&qword_1EF459B18);

    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void *sub_1BC38B1D0()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1BC38B21C(void *a1)
{
  sub_1BC38B494(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage);
}

uint64_t (*sub_1BC38B228())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC38B26C()
{
  return sub_1BC38BBC4(&OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title);
}

uint64_t sub_1BC38B278(uint64_t a1, uint64_t a2)
{
  return sub_1BC38B344(a1, a2, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title);
}

uint64_t (*sub_1BC38B284())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC38B2C8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC38B32C()
{
  return sub_1BC38BBC4(&OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString);
}

uint64_t sub_1BC38B338(uint64_t a1, uint64_t a2)
{
  return sub_1BC38B344(a1, a2, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString);
}

uint64_t sub_1BC38B344(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC38B39C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1BC38B3E0(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  void **v6;
  void *v7;
  id v8;

  v5 = *a1;
  v6 = (void **)(*a2 + *a5);
  swift_beginAccess();
  v7 = *v6;
  *v6 = v5;
  v8 = v5;

}

void *sub_1BC38B43C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1BC38B488(void *a1)
{
  sub_1BC38B494(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor);
}

void sub_1BC38B494(void *a1, _QWORD *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;

  v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  v5 = *v4;
  *v4 = a1;

}

uint64_t (*sub_1BC38B4E0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1BC38B554()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned __int8 *v3;
  id v4;
  id v5;
  int v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  int v11;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView);
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
  swift_beginAccess();
  objc_msgSend(v2, sel_setHidden_, *v3);
  v4 = sub_1BC38AFD8();
  objc_msgSend(v4, sel_setActive_, (*v3 & 1) == 0);

  v5 = sub_1BC38B0D8();
  objc_msgSend(v5, sel_setActive_, *v3);

  v6 = *v3;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel);
  if (v6 == 1)
  {
    objc_msgSend(v7, sel_setLineBreakMode_, 4);
    type metadata accessor for UILayoutPriority(0);
    sub_1BC347F0C((unint64_t *)&qword_1EF42AF98, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, MEMORY[0x1E0DC2B88]);
    sub_1BC62BB4C();
    LODWORD(v8) = v11;
    objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 0, v8);
    LODWORD(v9) = 1132068864;
  }
  else
  {
    objc_msgSend(v7, sel_setLineBreakMode_, 0);
    type metadata accessor for UILayoutPriority(0);
    sub_1BC347F0C((unint64_t *)&qword_1EF42AF98, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, MEMORY[0x1E0DC2B88]);
    sub_1BC62BB40();
    LODWORD(v10) = v11;
    objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 0, v10);
    LODWORD(v9) = 1148846080;
  }
  objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 1, v9);
  sub_1BC38D028();
}

uint64_t sub_1BC38B72C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
  swift_beginAccess();
  return *v1;
}

void sub_1BC38B770(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
  swift_beginAccess();
  *v3 = a1;
  sub_1BC38B554();
}

uint64_t (*sub_1BC38B7C4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC38B80C;
}

uint64_t sub_1BC38B80C(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC38B554);
}

void sub_1BC38B818(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  id v4;
  double v5;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode);
  swift_beginAccess();
  *v3 = v2;
  v4 = sub_1BC38B0D8();
  v5 = 0.0;
  if ((*v3 & 1) == 0)
  {
    if (qword_1EF4283D8 != -1)
      swift_once();
    v5 = -*(double *)&qword_1EF459B18;
  }
  objc_msgSend(v4, sel_setConstant_, v5);

}

uint64_t sub_1BC38B8C8()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode);
  swift_beginAccess();
  return *v1;
}

void sub_1BC38B90C(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  id v4;
  double v5;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode);
  swift_beginAccess();
  *v3 = a1;
  v4 = sub_1BC38B0D8();
  v5 = 0.0;
  if ((*v3 & 1) == 0)
  {
    if (qword_1EF4283D8 != -1)
      swift_once();
    v5 = -*(double *)&qword_1EF459B18;
  }
  objc_msgSend(v4, sel_setConstant_, v5);

}

void (*sub_1BC38B9B8(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC38BA10;
}

void sub_1BC38BA10(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  double v7;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = v3[4];
    v6 = sub_1BC38B0D8();
    v7 = 0.0;
    if ((*(_BYTE *)(v4 + v5) & 1) == 0)
    {
      if (qword_1EF4283D8 != -1)
        swift_once();
      v7 = -*(double *)&qword_1EF459B18;
    }
    objc_msgSend(v6, sel_setConstant_, v7);

  }
  free(v3);
}

uint64_t sub_1BC38BAA8()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  return *v1;
}

void sub_1BC38BAEC(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  *v3 = a1;
  sub_1BC38C8B4();
}

void (*sub_1BC38BB40(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC38BB88;
}

void sub_1BC38BB88(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC38C8B4();
}

uint64_t sub_1BC38BBB8()
{
  return sub_1BC38BBC4(&OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier);
}

uint64_t sub_1BC38BBC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

void sub_1BC38BC14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = v2;
  v6 = (_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease();
  if (v6[1])
  {
    v7 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel);
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

    v9 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel);
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

  }
}

void (*sub_1BC38BD58(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC38BDB0;
}

void sub_1BC38BDB0(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = (uint64_t *)(v4 + v3[4]);
    v6 = v5[1];
    if (v6)
    {
      v7 = *v5;
      v8 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel);
      v12 = *v5;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRetain();
      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v12, v6);

      v10 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel);
      v13 = v6;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v11 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11, v7, v13);

    }
  }
  free(v3);
}

uint64_t sub_1BC38BEE4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC38CC9C(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  swift_beginAccess();
  sub_1BC38CD44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC38BF54();
  return sub_1BC38CD88((uint64_t)v5);
}

void sub_1BC38BF54()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void **v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void **v39;
  void *v40;
  uint64_t v41;

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData);
  swift_beginAccess();
  v3 = v2[3];
  if (v3)
  {
    v4 = v2[4];
    v5 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    v6 = *(_QWORD *)(v3 - 8);
    MEMORY[0x1E0C80A78](v5);
    v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v3);
  }
  else
  {
    v9 = 0;
  }
  v10 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage);
  swift_beginAccess();
  v11 = *v10;
  *v10 = (void *)v9;

  v12 = v2[3];
  if (v12)
  {
    v13 = v2[4];
    v14 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    v15 = *(_QWORD *)(v12 - 8);
    MEMORY[0x1E0C80A78](v14);
    v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v12);
  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  v21 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title);
  swift_beginAccess();
  *v21 = v18;
  v21[1] = v20;
  swift_bridgeObjectRelease();
  v22 = v2[3];
  if (!v22)
    goto LABEL_9;
  v23 = v2[4];
  v24 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
  v25 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v25 + 16))(v27);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v22);
  if (!v30)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    v30 = 0xE100000000000000;
    v28 = 32;
  }
  v31 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString);
  swift_beginAccess();
  *v31 = v28;
  v31[1] = v30;
  swift_bridgeObjectRelease();
  v32 = v2[3];
  if (v32)
  {
    v33 = v2[4];
    v34 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    v35 = *(_QWORD *)(v32 - 8);
    MEMORY[0x1E0C80A78](v34);
    v37 = (char *)&v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v37);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 32))(v32, v33);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v32);
  }
  else
  {
    v38 = 0;
  }
  v39 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor);
  swift_beginAccess();
  v40 = *v39;
  *v39 = (void *)v38;

  sub_1BC38C8B4();
  sub_1BC38CDE4();
}

uint64_t sub_1BC38C2C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  swift_beginAccess();
  return sub_1BC38CC9C(v3, a1);
}

uint64_t sub_1BC38C314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  swift_beginAccess();
  sub_1BC38CD44(a1, v3);
  swift_endAccess();
  sub_1BC38BF54();
  return sub_1BC38CD88(a1);
}

uint64_t (*sub_1BC38C380(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC38C3C8;
}

uint64_t sub_1BC38C3C8(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC38BF54);
}

uint64_t sub_1BC38C3D4(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return a3(result);
  return result;
}

id ConceptFeedItemTitleView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *ConceptFeedItemTitleView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  double v19;
  double v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  objc_super v31;

  v9 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v11 = v4;
  v12 = objc_msgSend(v10, sel_init);
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  objc_msgSend(v12, sel_setLineBreakMode_, 0);
  objc_msgSend(v12, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v13) = 1148846080;
  objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 1, v13);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v4[v9] = v12;
  v14 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel;
  *(_QWORD *)&v11[v14] = sub_1BC38AE0C();
  v15 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v16, sel_setContentMode_, 4);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
  v17 = (void *)sub_1BC62CE54();
  objc_msgSend(v16, sel_setImage_, v17);

  v18 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v16, sel_setTintColor_, v18);

  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v19) = 1148846080;
  objc_msgSend(v16, sel_setContentHuggingPriority_forAxis_, 0, v19);
  LODWORD(v20) = 1148846080;
  objc_msgSend(v16, sel_setContentCompressionResistancePriority_forAxis_, 0, v20);
  *(_QWORD *)&v11[v15] = v16;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___bottomConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateChevronConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateTrailingConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage] = 0;
  v21 = &v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = &v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor] = 0;
  v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron] = 0;
  v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode] = 0;
  v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing] = 1;
  v23 = &v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v24 = &v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData];
  *(_OWORD *)v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((_QWORD *)v24 + 4) = 0;

  v31.receiver = v11;
  v31.super_class = (Class)type metadata accessor for ConceptFeedItemTitleView();
  v25 = (char *)objc_msgSendSuper2(&v31, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v25, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1BC38DA70();
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel]);
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel]);
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView]);
  sub_1BC38D028();
  sub_1BC38DB44(0, (unint64_t *)&qword_1EF429250, (void (*)(uint64_t))sub_1BC3571B0);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1BC639590;
  v27 = sub_1BC62BDD4();
  v28 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v26 + 32) = v27;
  *(_QWORD *)(v26 + 40) = v28;
  v29 = v25;
  MEMORY[0x1BCCF20E8](v26, sel_traitCollectionDidChangeWithTraitEnvironment_previousTraitCollection_);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v29;
}

void sub_1BC38C8B4()
{
  char *v0;
  char *v1;
  void **v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  id *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t inited;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;

  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title];
  swift_beginAccess();
  if (*((_QWORD *)v1 + 1))
  {
    v2 = (void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor];
    swift_beginAccess();
    v3 = *v2;
    if (v3)
    {
      swift_bridgeObjectRetain();
      v4 = v3;
      v5 = objc_msgSend(v0, sel_traitCollection);
      v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

      LOBYTE(v5) = sub_1BC62CD1C();
      if ((v5 & 1) != 0
        && (v7 = &v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing],
            swift_beginAccess(),
            (*v7 & 1) != 0)
        || (v8 = (id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage],
            swift_beginAccess(),
            !*v8)
        || (v9 = objc_msgSend(*v8, sel_imageWithRenderingMode_, 2)) == 0)
      {
        v22 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel];
        sub_1BC38DB44(0, (unint64_t *)&qword_1EF4383B0, (void (*)(uint64_t))sub_1BC34B5A0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BC639590;
        v24 = (void *)*MEMORY[0x1E0DC1140];
        *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1140];
        *(_QWORD *)(inited + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
        *(_QWORD *)(inited + 40) = v4;
        v25 = v4;
        v26 = v24;
        sub_1BC35B6B4(inited);
        v27 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
        v28 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1BC347F0C((unint64_t *)&qword_1EF4383C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC639360);
        v29 = (void *)sub_1BC62C53C();
        swift_bridgeObjectRelease();
        v30 = objc_msgSend(v27, sel_initWithString_attributes_, v28, v29);

        objc_msgSend(v22, sel_setAttributedText_, v30);
      }
      else
      {
        v10 = v9;
        v11 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel];
        v12 = objc_msgSend(v11, sel_font);
        if (v12)
        {
          v13 = v12;
          v14 = objc_msgSend(v0, sel_traitCollection);
          objc_msgSend(v14, sel_displayScale);
          v16 = v15;

          v17 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
          v18 = v4;
          v19 = v10;
          v20 = (void *)sub_1BC62C650();
          swift_bridgeObjectRelease();
          v21 = objc_msgSend(v17, sel_initWithLeadingImage_text_font_displayScale_imageTintColor_textColor_adjustsImageSizeForAccessibilityContentSizeCategory_, v19, v20, v13, v18, v18, 1, v16);

          objc_msgSend(v11, sel_setAttributedText_, v21);
        }
        else
        {
          __break(1u);
        }
      }
    }
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel], sel_setAttributedText_, 0);
  }
}

uint64_t sub_1BC38CC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC38CCE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC38CCE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42AF38)
  {
    sub_1BC35817C(255, &qword_1EF42AF40);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42AF38);
  }
}

uint64_t sub_1BC38CD44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC38CCE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC38CD88(uint64_t a1)
{
  uint64_t v2;

  sub_1BC38CCE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ConceptFeedItemTitleView()
{
  return objc_opt_self();
}

void sub_1BC38CDE4()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  void **v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel);
  swift_beginAccess();
  sub_1BC38DB44(0, (unint64_t *)&qword_1EF4383B0, (void (*)(uint64_t))sub_1BC34B5A0);
  inited = swift_initStackObject();
  v3 = (void **)MEMORY[0x1E0DC1140];
  *(_OWORD *)(inited + 16) = xmmword_1BC639590;
  v4 = *v3;
  *(_QWORD *)(inited + 32) = *v3;
  v5 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v6 = v4;
  v7 = objc_msgSend(v5, sel_secondaryLabelColor);
  *(_QWORD *)(inited + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
  *(_QWORD *)(inited + 40) = v7;
  sub_1BC35B6B4(inited);
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC347F0C((unint64_t *)&qword_1EF4383C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC639360);
  v10 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_initWithString_attributes_, v9, v10);

  objc_msgSend(v1, sel_setAttributedText_, v11);
}

void sub_1BC38D028()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  id v11;
  double v12;
  id v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  double v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  void *v75;
  int v76;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_activeConstraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  v5 = objc_msgSend(v1, sel_heightAnchor);
  v6 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel];
  v7 = objc_msgSend(v6, sel_font);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_lineHeight);
    v10 = v9;

    v11 = objc_msgSend(v5, sel_constraintGreaterThanOrEqualToConstant_, v10);
    LODWORD(v12) = 1148846080;
    objc_msgSend(v11, sel_setPriority_, v12);
    v13 = objc_msgSend(v1, sel_traitCollection);
    v14 = objc_msgSend(v13, sel_preferredContentSizeCategory);

    v15 = sub_1BC62CD1C();
    sub_1BC34D844();
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BC63A940;
    v17 = objc_msgSend(v6, sel_leadingAnchor);
    v18 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
    v19 = objc_msgSend(v18, sel_leadingAnchor);

    if ((v15 & 1) != 0)
    {
      if (qword_1EF4283D8 != -1)
        swift_once();
      v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, *((double *)&xmmword_1EF459B00 + 1), v11);

      *(_QWORD *)(v16 + 32) = v20;
      v21 = objc_msgSend(v6, sel_topAnchor);
      v22 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      v23 = objc_msgSend(v22, sel_topAnchor);

      v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, *(double *)&xmmword_1EF459B00);
      *(_QWORD *)(v16 + 40) = v24;
      v25 = objc_msgSend(v6, sel_trailingAnchor);
      v26 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      v27 = objc_msgSend(v26, sel_trailingAnchor);

      if (qword_1EF4283E0 != -1)
        swift_once();
      v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, -(*(double *)&qword_1EF459B20 + *(double *)&qword_1EF459B18));

      *(_QWORD *)(v16 + 48) = v28;
      v29 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel];
      v30 = objc_msgSend(v29, sel_topAnchor);
      v31 = objc_msgSend(v6, sel_bottomAnchor);
      v32 = objc_msgSend(v30, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v31, 2.0);

      *(_QWORD *)(v16 + 56) = v32;
      v33 = objc_msgSend(v29, sel_trailingAnchor);
      v34 = objc_msgSend(v6, sel_trailingAnchor);
      v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

      *(_QWORD *)(v16 + 64) = v35;
      v36 = objc_msgSend(v29, sel_leadingAnchor);
      v37 = objc_msgSend(v6, sel_leadingAnchor);
      v38 = objc_msgSend(v36, (SEL)&selRef_componentsJoinedByString_ + 6, v37);

      *(_QWORD *)(v16 + 72) = v38;
      v39 = objc_msgSend(v29, sel_bottomAnchor);
      v40 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      v41 = objc_msgSend(v40, sel_bottomAnchor);

      v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, v41, -*(double *)&qword_1EF459B10);
      *(_QWORD *)(v16 + 80) = v42;
      v43 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView];
      v44 = objc_msgSend(v43, sel_firstBaselineAnchor);
      v45 = objc_msgSend(v6, sel_firstBaselineAnchor);
      v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v45);

      *(_QWORD *)(v16 + 88) = v46;
      v47 = objc_msgSend(v43, sel_trailingAnchor);
      v48 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      v49 = objc_msgSend(v48, sel_trailingAnchor);

      v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v49, -*(double *)&qword_1EF459B18);
    }
    else
    {
      if (qword_1EF4283D8 != -1)
        swift_once();
      v51 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, *((double *)&xmmword_1EF459B00 + 1), v11);

      *(_QWORD *)(v16 + 32) = v51;
      v52 = objc_msgSend(v6, sel_topAnchor);
      v53 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      v54 = objc_msgSend(v53, sel_topAnchor);

      v55 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, v54, *(double *)&xmmword_1EF459B00);
      *(_QWORD *)(v16 + 40) = v55;
      v56 = objc_msgSend(v6, sel_trailingAnchor);
      v57 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel];
      v58 = objc_msgSend(v57, sel_leadingAnchor);
      v59 = objc_msgSend(v56, sel_constraintLessThanOrEqualToAnchor_constant_, v58, -*(double *)&qword_1EF459B18);

      *(_QWORD *)(v16 + 48) = v59;
      *(_QWORD *)(v16 + 56) = sub_1BC38AEE4();
      v60 = objc_msgSend(v57, sel_firstBaselineAnchor);
      v61 = objc_msgSend(v6, sel_firstBaselineAnchor);
      v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v61);

      *(_QWORD *)(v16 + 64) = v62;
      v63 = objc_msgSend(v57, sel_leadingAnchor);
      v64 = objc_msgSend(v6, sel_trailingAnchor);
      if (qword_1EF4283E0 != -1)
        swift_once();
      v65 = objc_msgSend(v63, sel_constraintEqualToAnchor_constant_, v64, *(double *)&qword_1EF459B20);

      type metadata accessor for UILayoutPriority(0);
      sub_1BC347F0C((unint64_t *)&qword_1EF42AF98, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, MEMORY[0x1E0DC2B88]);
      sub_1BC62BB4C();
      LODWORD(v66) = v76;
      objc_msgSend(v65, sel_setPriority_, v66);
      *(_QWORD *)(v16 + 72) = v65;
      v67 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView];
      v68 = objc_msgSend(v67, sel_centerYAnchor);
      v69 = objc_msgSend(v57, sel_centerYAnchor);
      v70 = objc_msgSend(v68, sel_constraintEqualToAnchor_, v69);

      *(_QWORD *)(v16 + 80) = v70;
      *(_QWORD *)(v16 + 88) = sub_1BC38AFD8();
      v47 = objc_msgSend(v67, sel_trailingAnchor);
      v71 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      v49 = objc_msgSend(v71, sel_trailingAnchor);

      v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v49, -*(double *)&qword_1EF459B18);
    }
    v72 = v50;

    *(_QWORD *)(v16 + 96) = v72;
    *(_QWORD *)(v16 + 104) = v75;
    sub_1BC62C890();
    *(_QWORD *)&v1[v3] = v16;
    v73 = v75;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v74 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_activateConstraints_, v74);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC38DA70()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4B10], 1024);
  objc_msgSend(v1, sel_setFont_, v3);

  v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel);
  v5 = objc_msgSend(v2, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4AB8], 0);
  objc_msgSend(v4, sel_setFont_, v5);

}

void sub_1BC38DB44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC62D538();
    if (!v5)
      atomic_store(v4, a2);
  }
}

id ConceptFeedItemTitleView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptFeedItemTitleView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC38DBC0@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage, a2);
}

void sub_1BC38DBCC(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1BC38B3E0(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage);
}

uint64_t sub_1BC38DBE8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title, a2);
}

uint64_t sub_1BC38DBF4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC38B2C8(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title);
}

uint64_t sub_1BC38DC10@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString, a2);
}

uint64_t sub_1BC38DC1C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC38B2C8(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString);
}

id sub_1BC38DC38@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor, a2);
}

id keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, void **a3@<X8>)
{
  void **v4;
  void *v5;

  v4 = (void **)(*a1 + *a2);
  swift_beginAccess();
  v5 = *v4;
  *a3 = *v4;
  return v5;
}

void sub_1BC38DC90(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1BC38B3E0(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor);
}

uint64_t sub_1BC38DCAC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron, a2);
}

void sub_1BC38DCB8(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
  swift_beginAccess();
  *v3 = v2;
  sub_1BC38B554();
}

uint64_t sub_1BC38DD10@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode, a2);
}

uint64_t sub_1BC38DD20@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing, a2);
}

uint64_t keypath_get_7Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

void sub_1BC38DD78(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(*a2
               + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  *v3 = v2;
  sub_1BC38C8B4();
}

uint64_t sub_1BC38DDD0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier, a2);
}

uint64_t keypath_get_1Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

void sub_1BC38DE2C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1BC38BC14(v1, v2);
}

uint64_t sub_1BC38DE68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  swift_beginAccess();
  return sub_1BC38CC9C(v3, a2);
}

uint64_t method lookup function for ConceptFeedItemTitleView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.headerImage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.headerImage.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.headerImage.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.dateString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.dateString.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.dateString.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.categoryColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.categoryColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.categoryColor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesChevron.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesChevron.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesChevron.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.isInEditingMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.isInEditingMode.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.isInEditingMode.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesHeaderSymbolForAccessibilitySizing.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesHeaderSymbolForAccessibilitySizing.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesHeaderSymbolForAccessibilitySizing.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.baseAccessibilityIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.baseAccessibilityIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.baseAccessibilityIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.viewData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.viewData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.viewData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

void sub_1BC38E2B4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  objc_msgSend(v3, sel_setLineBreakMode_, 0);
  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v3, sel_setContentHuggingPriority_forAxis_, 1, v4);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v2] = v3;
  v5 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel;
  *(_QWORD *)&v1[v5] = sub_1BC38AE0C();
  v6 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v7, sel_setContentMode_, 4);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
  v8 = (void *)sub_1BC62CE54();
  objc_msgSend(v7, sel_setImage_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v7, sel_setTintColor_, v9);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v10) = 1148846080;
  objc_msgSend(v7, sel_setContentHuggingPriority_forAxis_, 0, v10);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 0, v11);
  *(_QWORD *)&v1[v6] = v7;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___bottomConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateChevronConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateTrailingConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage] = 0;
  v12 = &v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title];
  *v12 = 0;
  v12[1] = 0;
  v13 = &v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString];
  *v13 = 0;
  v13[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing] = 1;
  v14 = &v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier];
  *v14 = 0;
  v14[1] = 0;
  v15 = &v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_QWORD *)v15 + 4) = 0;

  sub_1BC62D394();
  __break(1u);
}

void sub_1BC38E5BC(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!a1)
  {

    goto LABEL_9;
  }
  v5 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  v6 = sub_1BC62C680();
  v8 = v7;
  if (v6 == sub_1BC62C680() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  v11 = sub_1BC62D574();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BC38C8B4();
    sub_1BC38CDE4();
    sub_1BC38D028();
  }
}

uint64_t sub_1BC38E6D4()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11[4];
  char v12;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC396C10(v0, (uint64_t)v11);
  if (v12 != 1)
    return 0x6E69676F6CLL;
  v9 = 0;
  v10 = 0xE000000000000000;
  v5 = v11[0];
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v9 = 0xD000000000000014;
  v10 = 0x80000001BC653D30;
  v6 = objc_msgSend(v5, sel_identifier);
  sub_1BC62A79C();

  sub_1BC379B20((unint64_t *)&qword_1EF429280, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1BC62C764();

  return v9;
}

uint64_t sub_1BC38E83C(uint64_t a1)
{
  __int128 *v1;
  __int128 *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  _QWORD v38[5];
  id v39[4];
  char v40;

  v2 = v1;
  sub_1BC396C10(v1, (uint64_t)v38);
  v4 = (void *)v38[0];
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v38 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v38 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v38 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v38 - v18;
  sub_1BC396C10(v2, (uint64_t)v39);
  v20 = v39[0];
  if ((v40 & 1) != 0)
  {
    v21 = v39[3];
    v22 = v39[0];
    v23 = objc_msgSend(v22, sel_gateway);
    if (v23)
    {
      v24 = v23;
      v25 = objc_msgSend(v23, sel_baseURL);

      if (v25)
      {
        sub_1BC62A5BC();

        v26 = sub_1BC62A604();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 0, 1, v26);
      }
      else
      {

        v33 = sub_1BC62A604();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v11, 1, 1, v33);
      }
      sub_1BC397AA0((uint64_t)v11, (uint64_t)v14);
    }
    else
    {

      v31 = sub_1BC62A604();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 1, 1, v31);
    }
  }
  else
  {
    v21 = v39[1];
    v27 = v4;
    v28 = objc_msgSend(v20, sel_baseURL);
    if (v28)
    {
      v29 = v28;
      sub_1BC62A5BC();

      sub_1BC397854((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
      v30 = sub_1BC62A604();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v17, 0, 1, v30);
    }
    else
    {
      sub_1BC397854((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
      v32 = sub_1BC62A604();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 1, 1, v32);
    }
    v14 = v17;
  }
  sub_1BC397AA0((uint64_t)v14, (uint64_t)v19);
  if (qword_1ED6A3198 != -1)
    swift_once();
  sub_1BC397AF4((uint64_t)v19, (uint64_t)v8, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v34 = sub_1BC62A604();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v8, 1, v34) == 1)
  {
    sub_1BC384EB4((uint64_t)v8, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v36 = 0;
  }
  else
  {
    v36 = (void *)sub_1BC62A598();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v34);
  }
  sub_1BC4E371C(a1, (uint64_t)v21, v36);

  return sub_1BC384EB4((uint64_t)v19, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1BC38EBC8()
{
  __int128 *v0;
  _BYTE v2[40];

  sub_1BC396C10(v0, (uint64_t)v2);
  return sub_1BC38E6D4();
}

id ClinicalAccountLoginSession.__allocating_init(accountStore:presentationAnchor:funnelContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  objc_super v9;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore] = a1;
  *(_QWORD *)&v7[OBJC_IVAR___HRUIClinicalAccountLoginSession_presentationAnchor] = a2;
  *(_QWORD *)&v7[OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, sel_init);
}

id ClinicalAccountLoginSession.init(accountStore:presentationAnchor:funnelContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore] = a1;
  *(_QWORD *)&v3[OBJC_IVAR___HRUIClinicalAccountLoginSession_presentationAnchor] = a2;
  *(_QWORD *)&v3[OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext] = a3;
  v9.receiver = v3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t ClinicalAccountLoginSession.startLogin(with:loginCancelledHandler:callbackErrorHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;

  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - v12;
  v14 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_1BC62C944();
  v15 = v5;
  v16 = a1;
  sub_1BC38F084(a2);
  swift_retain();
  v17 = sub_1BC62C938();
  v18 = (_QWORD *)swift_allocObject();
  v19 = MEMORY[0x1E0DF06E8];
  v18[2] = v17;
  v18[3] = v19;
  v18[4] = v15;
  v18[5] = v16;
  v18[6] = a2;
  v18[7] = a3;
  v18[8] = a4;
  v18[9] = a5;
  sub_1BC38F7CC((uint64_t)v13, (uint64_t)&unk_1EF42AFD0, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1BC38EEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v13;
  uint64_t v15;

  v8[2] = a1;
  v8[3] = sub_1BC62C944();
  v8[4] = sub_1BC62C938();
  v13 = (_QWORD *)swift_task_alloc();
  v8[5] = v13;
  *v13 = v8;
  v13[1] = sub_1BC38EF6C;
  return sub_1BC38F138(a5, a6, a7, a8, v15);
}

uint64_t sub_1BC38EF6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 56) = a1;
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC38F010()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC38F050()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC38F084(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1BC38F098(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1BC3781C0;
  return sub_1BC38EEC4(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1BC38F138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[40] = a5;
  v6[41] = v5;
  v6[38] = a3;
  v6[39] = a4;
  v6[36] = a1;
  v6[37] = a2;
  v7 = sub_1BC62BB34();
  v6[42] = v7;
  v6[43] = *(_QWORD *)(v7 - 8);
  v6[44] = swift_task_alloc();
  sub_1BC62C944();
  v6[45] = sub_1BC62C938();
  v6[46] = sub_1BC62C908();
  v6[47] = v8;
  return swift_task_switch();
}

uint64_t sub_1BC38F1D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  void *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 328) + OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession))
  {
    swift_release();
    sub_1BC62C680();
    v1 = MEMORY[0x1E0DEA968];
    sub_1BC397800(0, &qword_1EF42B218, &qword_1EF42B220);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BC639590;
    *(_QWORD *)(inited + 32) = sub_1BC62C680();
    *(_QWORD *)(inited + 40) = v3;
    *(_QWORD *)(inited + 72) = v1;
    *(_QWORD *)(inited + 48) = 0xD000000000000017;
    *(_QWORD *)(inited + 56) = 0x80000001BC653EC0;
    sub_1BC35BF10(inited);
    v4 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v5 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v6 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v5, 100, v6);

    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(void **)(v0 + 288);
    sub_1BC62BAF8();
    v9 = v8;
    v10 = sub_1BC62BB28();
    v11 = sub_1BC62CADC();
    v12 = os_log_type_enabled(v10, v11);
    v14 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 352);
    v15 = *(_QWORD *)(v0 + 336);
    v16 = *(void **)(v0 + 288);
    if (v12)
    {
      v26 = *(_QWORD *)(v0 + 352);
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v27 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = (id)HKSensitiveLogItem();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v20 = sub_1BC62C6E0();
      *(_QWORD *)(v0 + 280) = sub_1BC4991F0(v20, v21, &v27);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v10, v11, "ClinicalAccountLoginSession: initializing to start login to gateway %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v18, -1, -1);
      MEMORY[0x1BCCF36A8](v17, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v26, v15);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    }
    v22 = *(void **)(*(_QWORD *)(v0 + 328) + OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore);
    v23 = *(_QWORD *)(v0 + 288);
    *(_QWORD *)(v0 + 56) = v0 + 272;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1BC38F594;
    v24 = swift_continuation_init();
    *(_QWORD *)(v0 + 160) = MEMORY[0x1E0C809B0];
    v25 = (_QWORD *)(v0 + 160);
    v25[1] = 0x40000000;
    v25[2] = sub_1BC38FC10;
    v25[3] = &block_descriptor_50;
    v25[4] = v24;
    objc_msgSend(v22, sel_beginInitialLoginSessionForGateway_completion_, v23, v25);
    return swift_continuation_await();
  }
}

uint64_t sub_1BC38F594()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 384) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC38F5F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(void **)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 392) = v3;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext);
  *(_QWORD *)(v0 + 200) = v2;
  *(_BYTE *)(v0 + 232) = 0;
  *(_QWORD *)(v0 + 208) = v4;
  *(_QWORD *)(v0 + 216) = 0;
  *(_QWORD *)(v0 + 224) = 0;
  v5 = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v6;
  *v6 = v0;
  v6[1] = sub_1BC38F688;
  return sub_1BC38FC98(v3, v0 + 200, *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
}

uint64_t sub_1BC38F688()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC38F6E8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 392));
}

uint64_t sub_1BC38F734()
{
  uint64_t v0;

  swift_release();
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC38F780()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 392);
  v2 = *(void **)(v0 + 288);
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC38F7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1BC62C95C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1BC62C950();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BC384EB4(a1, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BC62C908();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_1BC34B6A0(0, &qword_1EF42B2A0);
  return swift_task_create();
}

uint64_t sub_1BC38F914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1BC62C95C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1BC62C950();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1BC384EB4(a1, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BC62C908();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1BC38FC10(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    sub_1BC35E44C();
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC38FC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[15] = a6;
  v7[16] = v6;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  v8 = sub_1BC62A604();
  v7[17] = v8;
  v7[18] = *(_QWORD *)(v8 - 8);
  v7[19] = swift_task_alloc();
  v9 = sub_1BC62BB34();
  v7[20] = v9;
  v7[21] = *(_QWORD *)(v9 - 8);
  v7[22] = swift_task_alloc();
  sub_1BC62C944();
  v7[23] = sub_1BC62C938();
  v7[24] = sub_1BC62C908();
  v7[25] = v10;
  return swift_task_switch();
}

uint64_t sub_1BC38FD60()
{
  uint64_t v0;
  _BYTE *v1;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t type;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];

  if (*(_QWORD *)(*(_QWORD *)(v0 + 128) + OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession))
  {
    swift_release();
    sub_1BC397D04();
    swift_allocError();
    *v1 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v50 = OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession;
    v51 = *(_QWORD *)(v0 + 128);
    v3 = *(void **)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 88);
    sub_1BC62BAF8();
    sub_1BC397854(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
    v5 = v3;
    sub_1BC397854(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
    v6 = v5;
    v7 = sub_1BC62BB28();
    v8 = sub_1BC62CADC();
    v9 = os_log_type_enabled(v7, v8);
    v11 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 160);
    if (v9)
    {
      v13 = *(_QWORD *)(v0 + 152);
      v44 = *(_QWORD *)(v0 + 144);
      v45 = *(_QWORD *)(v0 + 136);
      type = v8;
      v14 = *(_QWORD *)(v0 + 88);
      v43 = *(id *)(v0 + 80);
      v49 = *(_QWORD *)(v0 + 160);
      v15 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v52[0] = v46;
      *(_DWORD *)v15 = 136315394;
      sub_1BC397854(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
      v47 = v10;
      v16 = sub_1BC38E6D4();
      v18 = v17;
      sub_1BC397854(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
      *(_QWORD *)(v0 + 64) = sub_1BC4991F0(v16, v18, v52);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      sub_1BC397854(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
      sub_1BC397854(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
      *(_WORD *)(v15 + 12) = 2080;
      v19 = objc_msgSend(v43, sel_loginURL);
      sub_1BC62A5BC();

      v20 = sub_1BC62A574();
      v22 = v21;
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v13, v45);
      *(_QWORD *)(v0 + 48) = v20;
      *(_QWORD *)(v0 + 56) = v22;
      sub_1BC62D5D4();
      v23 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v24 = sub_1BC62C6E0();
      *(_QWORD *)(v0 + 72) = sub_1BC4991F0(v24, v25, v52);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v7, type, "ClinicalAccountLoginSession: %s starting at %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v46, -1, -1);
      MEMORY[0x1BCCF36A8](v15, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v47, v49);
    }
    else
    {
      v27 = *(void **)(v0 + 80);
      v26 = *(_QWORD *)(v0 + 88);
      sub_1BC397854(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
      sub_1BC397854(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    v29 = *(_QWORD *)(v0 + 120);
    v28 = *(_QWORD *)(v0 + 128);
    v30 = *(_QWORD *)(v0 + 104);
    v31 = *(_QWORD *)(v0 + 112);
    v32 = *(__int128 **)(v0 + 88);
    v33 = *(_QWORD *)(v0 + 96);
    v34 = *(void **)(v0 + 80);
    sub_1BC38E83C(5);
    v35 = *(void **)(v28 + OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore);
    type metadata accessor for ClinicalAccountLoginSessionCallbackHandler();
    v36 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 208) = v36;
    sub_1BC397854((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
    v37 = v35;
    swift_retain();
    sub_1BC38F084(v33);
    swift_defaultActor_initialize();
    v36[20] = 0;
    sub_1BC396C10(v32, (uint64_t)(v36 + 14));
    v36[19] = v37;
    if (v33)
      v38 = v30;
    else
      v38 = 0;
    v36[21] = v33;
    v36[22] = v38;
    v36[23] = v31;
    v36[24] = v29;
    swift_retain();
    v39 = sub_1BC391888(v34, (uint64_t)sub_1BC397D48, (uint64_t)v36);
    *(_QWORD *)(v0 + 216) = v39;
    swift_release();
    v40 = *(void **)(v51 + v50);
    *(_QWORD *)(v51 + v50) = v39;
    v41 = v39;

    v42 = v41;
    return swift_task_switch();
  }
}

uint64_t sub_1BC390218()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(void **)(v1 + 160);
  if (v2)
  {
    objc_msgSend(v2, sel_cancel);
    v3 = *(void **)(v1 + 160);
    v1 = *(_QWORD *)(v0 + 208);
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(v0 + 216);

  return swift_task_switch();
}

uint64_t sub_1BC39027C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 216);
  swift_release();
  objc_msgSend(v1, sel_start);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ClinicalAccountLoginSession.startRelogin(to:from:profile:loginCancelledHandler:callbackErrorHandler:)(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v27 = a6;
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v26 - v15;
  v17 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_1BC62C944();
  v18 = v7;
  v19 = a1;
  v20 = a2;
  v21 = a3;
  sub_1BC38F084(a4);
  swift_retain();
  v22 = sub_1BC62C938();
  v23 = (_QWORD *)swift_allocObject();
  v24 = MEMORY[0x1E0DF06E8];
  v23[2] = v22;
  v23[3] = v24;
  v23[4] = v18;
  v23[5] = v19;
  v23[6] = v20;
  v23[7] = v21;
  v23[8] = a4;
  v23[9] = a5;
  v23[10] = v27;
  v23[11] = a7;
  sub_1BC38F914((uint64_t)v16, (uint64_t)&unk_1EF42AFE0, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_1BC39044C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 80) = v12;
  *(_OWORD *)(v8 + 64) = v11;
  *(_QWORD *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 56) = a8;
  *(_QWORD *)(v8 + 32) = a5;
  *(_QWORD *)(v8 + 40) = a6;
  *(_QWORD *)(v8 + 24) = a4;
  sub_1BC62C944();
  *(_QWORD *)(v8 + 88) = sub_1BC62C938();
  *(_QWORD *)(v8 + 96) = sub_1BC62C908();
  *(_QWORD *)(v8 + 104) = v9;
  return swift_task_switch();
}

uint64_t sub_1BC3904D4()
{
  uint64_t v0;
  id v1;
  id v2;
  _QWORD *v3;

  v1 = objc_msgSend(*(id *)(v0 + 48), sel_healthStore);
  v2 = objc_msgSend(v1, sel_profileIdentifier);
  *(_QWORD *)(v0 + 112) = v2;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v3;
  *v3 = v0;
  v3[1] = sub_1BC39056C;
  return sub_1BC390780(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), (uint64_t)v2, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_1BC39056C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_1BC3905D8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC39060C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 128);
  v2 = *(void **)(v0 + 112);
  swift_release();

  *(_QWORD *)(v0 + 16) = v1;
  v3 = v1;
  sub_1BC35E44C();
  if (swift_dynamicCast() && *(_BYTE *)(v0 + 136) == 1)
  {

    sub_1BC3911C4(1);
    swift_willThrow();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3906CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1BC3781C0;
  return sub_1BC39044C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1BC390780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[47] = a7;
  v8[48] = v7;
  v8[45] = a5;
  v8[46] = a6;
  v8[43] = a3;
  v8[44] = a4;
  v8[41] = a1;
  v8[42] = a2;
  v9 = sub_1BC62BB34();
  v8[49] = v9;
  v8[50] = *(_QWORD *)(v9 - 8);
  v8[51] = swift_task_alloc();
  v8[52] = swift_task_alloc();
  v8[53] = swift_task_alloc();
  sub_1BC62C944();
  v8[54] = sub_1BC62C938();
  v8[55] = sub_1BC62C908();
  v8[56] = v10;
  return swift_task_switch();
}

uint64_t sub_1BC39083C()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint8_t *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62[2];

  v1 = *(void **)(v0 + 328);
  sub_1BC62BAF8();
  v2 = v1;
  v3 = sub_1BC62BB28();
  v4 = sub_1BC62CADC();
  if (os_log_type_enabled(v3, v4))
  {
    v56 = *(_QWORD *)(v0 + 400);
    v57 = *(_QWORD *)(v0 + 392);
    v59 = *(_QWORD *)(v0 + 424);
    v5 = *(void **)(v0 + 328);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v62[0] = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = (id)HKSensitiveLogItem();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v9 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 320) = sub_1BC4991F0(v9, v10, v62);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v3, v4, "ClinicalAccountLoginSession: initializing to start relogin to account %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v7, -1, -1);
    MEMORY[0x1BCCF36A8](v6, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v11(v59, v57);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 424);
    v13 = *(_QWORD *)(v0 + 392);
    v14 = *(_QWORD *)(v0 + 400);
    v15 = *(void **)(v0 + 328);

    v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v16 = objc_msgSend(*(id *)(v0 + 328), sel_gateway);
  if (!v16)
  {
    v18 = *(void **)(v0 + 328);
    sub_1BC62BAF8();
    v19 = v18;
    v20 = sub_1BC62BB28();
    v21 = sub_1BC62CADC();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 408);
    v24 = *(_QWORD *)(v0 + 392);
    v25 = *(void **)(v0 + 328);
    if (v22)
    {
      v58 = *(_QWORD *)(v0 + 408);
      v26 = (uint8_t *)swift_slowAlloc();
      v60 = v11;
      v27 = swift_slowAlloc();
      v62[0] = v27;
      *(_DWORD *)v26 = 136315138;
      v28 = (id)HKSensitiveLogItem();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v29 = sub_1BC62C6E0();
      *(_QWORD *)(v0 + 312) = sub_1BC4991F0(v29, v30, v62);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v20, v21, "ClinicalAccountLoginSession: given account %s has no gateway, unable to check gateway status to determine whether login should be blocked, proceeding.", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v27, -1, -1);
      MEMORY[0x1BCCF36A8](v26, -1, -1);

      v60(v58, v24);
    }
    else
    {

      v11(v23, v24);
    }
    goto LABEL_12;
  }
  v17 = v16;
  if ((unint64_t)objc_msgSend(v16, sel_status) < 2)
  {

LABEL_12:
    v49 = *(void **)(*(_QWORD *)(v0 + 384) + OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore);
    v50 = *(_QWORD *)(v0 + 328);
    *(_QWORD *)(v0 + 56) = v0 + 296;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1BC390EFC;
    v51 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    v52 = (_QWORD *)(v0 + 80);
    v52[1] = 0x40000000;
    v52[2] = sub_1BC38FC10;
    v52[3] = &block_descriptor_60;
    v52[4] = v51;
    objc_msgSend(v49, sel_beginReloginSessionForAccount_completion_, v50, v52);
    return swift_continuation_await();
  }
  v31 = *(void **)(v0 + 328);
  swift_release();
  sub_1BC62BAF8();
  v32 = v31;
  v33 = v17;
  v34 = v32;
  v35 = v33;
  v36 = sub_1BC62BB28();
  v37 = sub_1BC62CAC4();
  v38 = os_log_type_enabled(v36, v37);
  v39 = *(_QWORD *)(v0 + 416);
  v40 = *(_QWORD *)(v0 + 392);
  v41 = *(void **)(v0 + 328);
  if (v38)
  {
    v61 = v11;
    v42 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    v62[0] = v55;
    *(_DWORD *)v42 = 136315394;
    v43 = (id)HKSensitiveLogItem();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v44 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 288) = sub_1BC4991F0(v44, v45, v62);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    v46 = (id)HKSensitiveLogItem();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v47 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 304) = sub_1BC4991F0(v47, v48, v62);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v36, v37, "ClinicalAccountLoginSession: gateway %s for account %s does not currently allow logging in, bailing out", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v55, -1, -1);
    MEMORY[0x1BCCF36A8](v42, -1, -1);

    v61(v39, v40);
  }
  else
  {

    v11(v39, v40);
  }
  sub_1BC397D04();
  swift_allocError();
  *v54 = 1;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC390EFC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 456) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC390F58()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 384);
  v3 = *(void **)(v0 + 336);
  v2 = *(void **)(v0 + 344);
  v4 = *(void **)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 464) = v5;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext);
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)(v0 + 128) = v3;
  *(_QWORD *)(v0 + 136) = v2;
  *(_QWORD *)(v0 + 144) = v6;
  *(_BYTE *)(v0 + 152) = 1;
  v7 = v4;
  v8 = v3;
  v9 = v2;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 472) = v10;
  *v10 = v0;
  v10[1] = sub_1BC391008;
  return sub_1BC38FC98(v5, v0 + 120, *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 376));
}

uint64_t sub_1BC391008()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC391068()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 464);
  v3 = *(void **)(v0 + 336);
  v2 = *(void **)(v0 + 344);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3910F0()
{
  uint64_t v0;

  swift_release();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC391150()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 464);
  v3 = *(void **)(v0 + 336);
  v2 = *(void **)(v0 + 344);
  v4 = *(void **)(v0 + 328);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1BC3911C4(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  id v12;

  sub_1BC62C680();
  v2 = MEMORY[0x1E0DEA968];
  sub_1BC397800(0, &qword_1EF42B218, &qword_1EF42B220);
  if ((a1 & 1) != 0)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BC639590;
    *(_QWORD *)(inited + 32) = sub_1BC62C680();
    *(_QWORD *)(inited + 40) = v10;
    *(_QWORD *)(inited + 72) = v2;
    *(_QWORD *)(inited + 48) = 0xD000000000000014;
    *(_QWORD *)(inited + 56) = 0x80000001BC653F30;
    sub_1BC35BF10(inited);
    v11 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v7 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v11, sel_initWithDomain_code_userInfo_, v6, 110, v7);
  }
  else
  {
    v3 = swift_initStackObject();
    *(_OWORD *)(v3 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v3 + 32) = sub_1BC62C680();
    *(_QWORD *)(v3 + 40) = v4;
    *(_QWORD *)(v3 + 72) = v2;
    *(_QWORD *)(v3 + 48) = 0xD000000000000017;
    *(_QWORD *)(v3 + 56) = 0x80000001BC653EC0;
    sub_1BC35BF10(v3);
    v5 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v7 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v5, sel_initWithDomain_code_userInfo_, v6, 100, v7);
  }
  v12 = v8;

  return v12;
}

uint64_t sub_1BC3915D4(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;

  v6 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v23 - v10;
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - v13;
  v15 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1BC397AF4(a1, (uint64_t)v11, (unint64_t *)&qword_1EF42B258, v6);
  sub_1BC62C944();
  swift_retain();
  v16 = a2;
  v17 = sub_1BC62C938();
  v18 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (_QWORD *)swift_allocObject();
  v21 = MEMORY[0x1E0DF06E8];
  v20[2] = v17;
  v20[3] = v21;
  v20[4] = a3;
  sub_1BC397AA0((uint64_t)v11, (uint64_t)v20 + v18);
  *(_QWORD *)((char *)v20 + v19) = a2;
  sub_1BC5C2784((uint64_t)v14, (uint64_t)&unk_1EF42B290, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1BC39176C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v9;

  v6[2] = sub_1BC62C944();
  v6[3] = sub_1BC62C938();
  v9 = (_QWORD *)swift_task_alloc();
  v6[4] = v9;
  *v9 = v6;
  v9[1] = sub_1BC3917E8;
  return sub_1BC391E78(a5, a6);
}

uint64_t sub_1BC3917E8()
{
  swift_task_dealloc();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC391858()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1BC391888(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  char *v42;
  id v43;
  char *v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD aBlock[6];

  v54 = a2;
  v55 = a3;
  v4 = sub_1BC62A604();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v56 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62A3DC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v52[0] = (char *)v52 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v52 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v52 - v17;
  v19 = a1;
  v20 = objc_msgSend(a1, sel_callbackURLComponents);
  sub_1BC62A3A0();

  sub_1BC62A3D0();
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v53 = v7;
  v24 = v7;
  v25 = v23;
  v23(v18, v24);
  if (!v22)
    goto LABEL_7;
  v26 = sub_1BC62C6EC();
  v28 = v27;
  swift_bridgeObjectRelease();
  if (v26 == 0x7370747468 && v28 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v30 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  if ((v30 & 1) != 0)
  {
LABEL_9:
    v31 = v19;
    v36 = objc_msgSend(v19, sel_callbackURLComponents);
    sub_1BC62A3A0();

    sub_1BC62A3B8();
    v37 = v25;
    v38 = v53;
    v37(v16, v53);
    v39 = (void *)objc_opt_self();
    v40 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v41 = objc_msgSend(v19, sel_callbackURLComponents);
    v42 = (char *)v52[0];
    sub_1BC62A3A0();

    sub_1BC62A3C4();
    v37(v42, v38);
    v34 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v39, sel_callbackWithHTTPSHost_path_, v40, v34);

    goto LABEL_10;
  }
LABEL_7:
  v31 = v19;
  v32 = objc_msgSend(v19, sel_callbackURLComponents);
  sub_1BC62A3A0();

  sub_1BC62A3D0();
  v25(v11, v53);
  v33 = (void *)objc_opt_self();
  v34 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v33, sel_callbackWithCustomScheme_, v34);
LABEL_10:

  v43 = objc_msgSend(v31, sel_loginURL);
  v44 = v56;
  sub_1BC62A5BC();

  v45 = objc_allocWithZone(MEMORY[0x1E0C925E8]);
  v46 = v35;
  v47 = v55;
  swift_retain();
  v48 = (void *)sub_1BC62A598();
  aBlock[4] = v54;
  aBlock[5] = v47;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC396C28;
  aBlock[3] = &block_descriptor_54;
  v49 = _Block_copy(aBlock);
  v50 = objc_msgSend(v45, sel_initWithURL_callback_completionHandler_, v48, v46, v49);
  _Block_release(v49);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v44, v4);
  swift_release();
  objc_msgSend(v50, sel_setPrefersEphemeralWebBrowserSession_, 1);
  objc_msgSend(v50, sel_setPresentationContextProvider_, v52[1]);

  return v50;
}

void __swiftcall ClinicalAccountLoginSession.presentationAnchor(for:)(UIWindow *__return_ptr retstr, ASWebAuthenticationSession a2)
{
  uint64_t v2;
  id v3;

  v3 = *(id *)(v2 + OBJC_IVAR___HRUIClinicalAccountLoginSession_presentationAnchor);
}

id ClinicalAccountLoginSession.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ClinicalAccountLoginSession.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ClinicalAccountLoginSession.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalAccountLoginSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for ClinicalAccountLoginSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClinicalAccountLoginSession.__allocating_init(accountStore:presentationAnchor:funnelContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BC391E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[53] = a2;
  v3[54] = v2;
  v3[52] = a1;
  v4 = sub_1BC62BB34();
  v3[55] = v4;
  v3[56] = *(_QWORD *)(v4 - 8);
  v3[57] = swift_task_alloc();
  v3[58] = swift_task_alloc();
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v3[62] = swift_task_alloc();
  v5 = sub_1BC62A604();
  v3[63] = v5;
  v3[64] = *(_QWORD *)(v5 - 8);
  v3[65] = swift_task_alloc();
  v3[66] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC391F78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  id v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  _BOOL4 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  os_log_type_t type[8];
  os_log_type_t typea;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  os_log_t log;
  os_log_t loga;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v1 = *(_QWORD *)(v0 + 432);
  v2 = *(void **)(v1 + 160);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 504);
    v4 = *(_QWORD *)(v0 + 512);
    v5 = *(_QWORD *)(v0 + 496);
    v6 = *(_QWORD *)(v0 + 416);
    *(_QWORD *)(v1 + 160) = 0;

    sub_1BC397AF4(v6, v5, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
    {
      v7 = *(void **)(v0 + 424);
      sub_1BC384EB4(*(_QWORD *)(v0 + 496), (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      if (v7
        && (*(_QWORD *)(v0 + 320) = v7,
            v8 = v7,
            sub_1BC35E44C(),
            type metadata accessor for ASWebAuthenticationSessionError(0),
            (swift_dynamicCast() & 1) != 0))
      {
        v9 = *(void **)(v0 + 328);
        *(_QWORD *)(v0 + 552) = v9;
        *(_QWORD *)(v0 + 344) = v9;
        sub_1BC379B20(&qword_1EF428F20, 255, (uint64_t (*)(uint64_t))type metadata accessor for ASWebAuthenticationSessionError, (uint64_t)&unk_1BC639184);
        sub_1BC62A520();
        if (*(_QWORD *)(v0 + 336) == 1)
        {
          v10 = v0 + 176;
          sub_1BC62BAF8();
          swift_retain_n();
          v11 = sub_1BC62BB28();
          v12 = sub_1BC62CADC();
          v13 = os_log_type_enabled(v11, v12);
          v14 = *(_QWORD *)(v0 + 480);
          v15 = *(_QWORD *)(v0 + 440);
          v16 = *(_QWORD *)(v0 + 448);
          v17 = *(_QWORD *)(v0 + 432);
          if (v13)
          {
            log = *(os_log_t *)(v0 + 480);
            v105 = *(_QWORD *)(v0 + 440);
            v18 = (uint8_t *)swift_slowAlloc();
            v102 = swift_slowAlloc();
            v114 = v102;
            *(_DWORD *)v18 = 136315138;
            sub_1BC396C10((__int128 *)(v17 + 112), v0 + 136);
            sub_1BC397854(v0 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
            v19 = sub_1BC38E6D4();
            v100 = v16;
            v21 = v20;
            sub_1BC397854(v0 + 136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
            v22 = v19;
            v10 = v0 + 176;
            *(_QWORD *)(v0 + 376) = sub_1BC4991F0(v22, v21, &v114);
            sub_1BC62CFF8();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BC30A000, v11, v12, "ClinicalAccountLoginSession: %s was canceled", v18, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1BCCF36A8](v102, -1, -1);
            MEMORY[0x1BCCF36A8](v18, -1, -1);

            (*(void (**)(os_log_t, uint64_t))(v100 + 8))(log, v105);
          }
          else
          {

            swift_release_n();
            (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
          }
          sub_1BC396C10((__int128 *)(*(_QWORD *)(v0 + 432) + 112), v10);
          sub_1BC38E83C(7);
        }
        else
        {
          sub_1BC62BAF8();
          swift_retain_n();
          v79 = v9;
          v80 = sub_1BC62BB28();
          v81 = sub_1BC62CAC4();
          v82 = os_log_type_enabled(v80, v81);
          v83 = *(_QWORD *)(v0 + 472);
          v84 = *(_QWORD *)(v0 + 440);
          v85 = *(_QWORD *)(v0 + 448);
          v86 = *(_QWORD *)(v0 + 432);
          if (v82)
          {
            v113 = *(_QWORD *)(v0 + 472);
            v87 = swift_slowAlloc();
            v104 = swift_slowAlloc();
            v114 = v104;
            *(_DWORD *)v87 = 136315394;
            sub_1BC396C10((__int128 *)(v86 + 112), v0 + 96);
            sub_1BC397854(v0 + 96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
            v109 = v84;
            v88 = sub_1BC38E6D4();
            typea = v81;
            v90 = v89;
            sub_1BC397854(v0 + 96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
            *(_QWORD *)(v0 + 352) = sub_1BC4991F0(v88, v90, &v114);
            sub_1BC62CFF8();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v87 + 12) = 2080;
            *(_QWORD *)(v0 + 360) = v79;
            v91 = v79;
            v92 = sub_1BC62C6E0();
            *(_QWORD *)(v0 + 368) = sub_1BC4991F0(v92, v93, &v114);
            sub_1BC62CFF8();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BC30A000, v80, typea, "ClinicalAccountLoginSession: %s failed with session error %s", (uint8_t *)v87, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1BCCF36A8](v104, -1, -1);
            MEMORY[0x1BCCF36A8](v87, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v113, v109);
          }
          else
          {

            swift_release_n();
            (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
          }
          v94 = v79;
        }
      }
      else
      {
        sub_1BC62BAF8();
        swift_retain();
        v57 = v7;
        swift_retain();
        v58 = v7;
        v59 = sub_1BC62BB28();
        v60 = sub_1BC62CAC4();
        v61 = os_log_type_enabled(v59, v60);
        v62 = *(_QWORD *)(v0 + 464);
        v63 = *(_QWORD *)(v0 + 440);
        v64 = *(_QWORD *)(v0 + 448);
        v65 = *(_QWORD *)(v0 + 432);
        if (v61)
        {
          v96 = *(_QWORD *)(v0 + 424);
          v112 = *(_QWORD *)(v0 + 440);
          v66 = swift_slowAlloc();
          v103 = swift_slowAlloc();
          v114 = v103;
          *(_DWORD *)v66 = 136315394;
          sub_1BC396C10((__int128 *)(v65 + 112), v0 + 56);
          sub_1BC397854(v0 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
          v67 = sub_1BC38E6D4();
          v108 = v62;
          v69 = v68;
          sub_1BC397854(v0 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
          *(_QWORD *)(v0 + 392) = sub_1BC4991F0(v67, v69, &v114);
          sub_1BC62CFF8();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v66 + 12) = 2080;
          *(_QWORD *)(v0 + 304) = v96;
          v70 = v7;
          sub_1BC384E68(0, (unint64_t *)&unk_1ED6A4E80, (void (*)(uint64_t))sub_1BC35E44C);
          v71 = sub_1BC62C6E0();
          *(_QWORD *)(v0 + 312) = sub_1BC4991F0(v71, v72, &v114);
          sub_1BC62CFF8();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1BC30A000, v59, v60, "ClinicalAccountLoginSession: %s failed with error %s", (uint8_t *)v66, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v103, -1, -1);
          MEMORY[0x1BCCF36A8](v66, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v108, v112);
        }
        else
        {
          swift_release_n();

          (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v62, v63);
        }
        v75 = v7;
        if (!v7)
        {
          sub_1BC62C680();
          v76 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
          v77 = (void *)sub_1BC62C650();
          swift_bridgeObjectRelease();
          v75 = objc_msgSend(v76, sel_initWithDomain_code_userInfo_, v77, 0, 0);

        }
        *(_QWORD *)(v0 + 576) = v75;
        v78 = v7;
      }
      return swift_task_switch();
    }
    else
    {
      v34 = *(_QWORD *)(v0 + 528);
      v35 = *(_QWORD *)(v0 + 520);
      v36 = *(_QWORD *)(v0 + 504);
      v37 = *(_QWORD *)(v0 + 512);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 32))(v34, *(_QWORD *)(v0 + 496), v36);
      sub_1BC62BAF8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v35, v34, v36);
      swift_retain_n();
      v38 = sub_1BC62BB28();
      v39 = sub_1BC62CADC();
      v40 = os_log_type_enabled(v38, v39);
      v41 = *(_QWORD *)(v0 + 520);
      v42 = *(_QWORD *)(v0 + 504);
      v43 = *(_QWORD *)(v0 + 512);
      v44 = *(_QWORD *)(v0 + 488);
      v45 = *(_QWORD *)(v0 + 440);
      v46 = *(_QWORD *)(v0 + 448);
      v47 = *(_QWORD *)(v0 + 432);
      if (v40)
      {
        v107 = *(_QWORD *)(v0 + 488);
        *(_QWORD *)type = *(_QWORD *)(v0 + 504);
        v48 = swift_slowAlloc();
        v101 = swift_slowAlloc();
        v114 = v101;
        *(_DWORD *)v48 = 136315394;
        sub_1BC396C10((__int128 *)(v47 + 112), v0 + 216);
        sub_1BC397854(v0 + 216, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
        v95 = v43;
        v49 = sub_1BC38E6D4();
        v99 = v46;
        v51 = v50;
        sub_1BC397854(v0 + 216, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
        *(_QWORD *)(v0 + 384) = sub_1BC4991F0(v49, v51, &v114);
        sub_1BC62CFF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 12) = 2080;
        *(_QWORD *)(v0 + 288) = sub_1BC62A574();
        *(_QWORD *)(v0 + 296) = v52;
        sub_1BC62D5D4();
        v53 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_1BC62D088();
        swift_unknownObjectRelease();
        v54 = sub_1BC62C6E0();
        *(_QWORD *)(v0 + 408) = sub_1BC4991F0(v54, v55, &v114);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        v56 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
        v56(v41, *(_QWORD *)type);
        _os_log_impl(&dword_1BC30A000, v38, v39, "ClinicalAccountLoginSession: %s finished with callback URL %s", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v101, -1, -1);
        MEMORY[0x1BCCF36A8](v48, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v107, v45);
      }
      else
      {
        swift_release_n();
        v56 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
        v56(v41, v42);

        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
      }
      *(_QWORD *)(v0 + 536) = v56;
      v74 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 544) = v74;
      *v74 = v0;
      v74[1] = sub_1BC392CE8;
      return sub_1BC3931E8(*(_QWORD *)(v0 + 528));
    }
  }
  else
  {
    sub_1BC62BAF8();
    swift_retain_n();
    v23 = sub_1BC62BB28();
    v24 = sub_1BC62CAC4();
    v25 = os_log_type_enabled(v23, v24);
    v27 = *(_QWORD *)(v0 + 448);
    v26 = *(_QWORD *)(v0 + 456);
    v29 = *(_QWORD *)(v0 + 432);
    v28 = *(_QWORD *)(v0 + 440);
    if (v25)
    {
      loga = *(os_log_t *)(v0 + 440);
      v30 = (uint8_t *)swift_slowAlloc();
      v106 = swift_slowAlloc();
      v114 = v106;
      *(_DWORD *)v30 = 136315138;
      sub_1BC396C10((__int128 *)(v29 + 112), v0 + 16);
      sub_1BC397854(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
      v31 = sub_1BC38E6D4();
      v33 = v32;
      sub_1BC397854(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
      *(_QWORD *)(v0 + 400) = sub_1BC4991F0(v31, v33, &v114);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v23, v24, "ClinicalAccountLoginSession: %s got a 2nd or more completion callback, ignoring", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v106, -1, -1);
      MEMORY[0x1BCCF36A8](v30, -1, -1);

      (*(void (**)(uint64_t, os_log_t))(v27 + 8))(v26, loga);
    }
    else
    {

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BC392CE8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC392D40()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 536))(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 504));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC392DE0()
{
  uint64_t v0;

  sub_1BC62C944();
  *(_QWORD *)(v0 + 560) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC392E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v1 = *(_QWORD *)(v0 + 432);
  v2 = swift_release();
  v3 = *(void (**)(uint64_t))(v1 + 168);
  if (v3)
    v3(v2);
  return swift_task_switch();
}

uint64_t sub_1BC392E9C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC392F34()
{
  uint64_t v0;

  sub_1BC62C944();
  *(_QWORD *)(v0 + 568) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC392F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 432);
  swift_release();
  (*(void (**)(uint64_t))(v2 + 184))(v1);
  return swift_task_switch();
}

uint64_t sub_1BC392FF4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 552);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC393090()
{
  uint64_t v0;

  sub_1BC62C944();
  *(_QWORD *)(v0 + 584) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC3930F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 576);
  v2 = *(_QWORD *)(v0 + 432);
  swift_release();
  (*(void (**)(uint64_t))(v2 + 184))(v1);
  return swift_task_switch();
}

uint64_t sub_1BC393150()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3931E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[44] = a1;
  v2[45] = v1;
  v3 = sub_1BC62A604();
  v2[46] = v3;
  v2[47] = *(_QWORD *)(v3 - 8);
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  v4 = sub_1BC62BB34();
  v2[51] = v4;
  v2[52] = *(_QWORD *)(v4 - 8);
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  v5 = sub_1BC62A7B4();
  v2[56] = v5;
  v2[57] = *(_QWORD *)(v5 - 8);
  v2[58] = swift_task_alloc();
  v2[59] = type metadata accessor for HealthRecordsURLParsingResult();
  v2[60] = swift_task_alloc();
  v2[61] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC393304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t inited;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  os_log_type_t type[8];
  os_log_type_t typea;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  os_log_t log;
  os_log_t loga;
  uint64_t v96;
  unint64_t v97;

  v2 = *(_QWORD *)(v0 + 480);
  v1 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 352);
  type metadata accessor for HealthRecordsURLHandler();
  *(_QWORD *)(v0 + 496) = swift_initStackObject();
  sub_1BC47ABA0(v3, v1);
  sub_1BC397938(v1, v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 9:
      sub_1BC62BAF8();
      swift_retain_n();
      v14 = sub_1BC62BB28();
      v15 = sub_1BC62CADC();
      v16 = os_log_type_enabled(v14, v15);
      v17 = *(_QWORD *)(v0 + 432);
      v18 = *(_QWORD *)(v0 + 408);
      v19 = *(_QWORD *)(v0 + 416);
      v20 = *(_QWORD *)(v0 + 360);
      if (v16)
      {
        log = *(os_log_t *)(v0 + 432);
        v91 = *(_QWORD *)(v0 + 416);
        v21 = (uint8_t *)swift_slowAlloc();
        *(_QWORD *)type = v18;
        v22 = swift_slowAlloc();
        v96 = v22;
        *(_DWORD *)v21 = 136315138;
        sub_1BC396C10((__int128 *)(v20 + 112), v0 + 96);
        sub_1BC397854(v0 + 96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
        v23 = sub_1BC38E6D4();
        v25 = v24;
        sub_1BC397854(v0 + 96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
        *(_QWORD *)(v0 + 320) = sub_1BC4991F0(v23, v25, &v96);
        sub_1BC62CFF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC30A000, v14, v15, "ClinicalAccountLoginSession: %s was not granted access, we're done here", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v22, -1, -1);
        MEMORY[0x1BCCF36A8](v21, -1, -1);

        (*(void (**)(os_log_t, os_log_type_t *))(v91 + 8))(log, *(os_log_type_t **)type);
      }
      else
      {

        swift_release_n();
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      }
      sub_1BC396C10((__int128 *)(*(_QWORD *)(v0 + 360) + 112), v0 + 136);
      sub_1BC38E83C(7);
      break;
    case 8:
      v26 = **(void ***)(v0 + 480);
      *(_QWORD *)(v0 + 520) = v26;
      sub_1BC62BAF8();
      swift_retain();
      v27 = v26;
      swift_retain();
      v28 = v26;
      v29 = sub_1BC62BB28();
      v30 = sub_1BC62CAC4();
      v31 = os_log_type_enabled(v29, v30);
      v32 = *(_QWORD *)(v0 + 440);
      v33 = *(_QWORD *)(v0 + 408);
      v34 = *(_QWORD *)(v0 + 416);
      v35 = *(_QWORD *)(v0 + 360);
      if (v31)
      {
        typea = v30;
        v36 = swift_slowAlloc();
        v87 = swift_slowAlloc();
        v96 = v87;
        *(_DWORD *)v36 = 136315394;
        sub_1BC396C10((__int128 *)(v35 + 112), v0 + 176);
        sub_1BC397854(v0 + 176, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
        v85 = v34;
        v37 = sub_1BC38E6D4();
        v92 = v32;
        v39 = v38;
        sub_1BC397854(v0 + 176, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
        *(_QWORD *)(v0 + 328) = sub_1BC4991F0(v37, v39, &v96);
        sub_1BC62CFF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 12) = 2080;
        *(_QWORD *)(v0 + 336) = v26;
        v40 = v26;
        sub_1BC35E44C();
        v41 = sub_1BC62C6E0();
        *(_QWORD *)(v0 + 344) = sub_1BC4991F0(v41, v42, &v96);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC30A000, v29, typea, "ClinicalAccountLoginSession: %s got redirected with error %s", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v87, -1, -1);
        MEMORY[0x1BCCF36A8](v36, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v92, v33);
      }
      else
      {
        swift_release_n();

        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
      }
      sub_1BC3979B8();
      *(_DWORD *)(v0 + 132) = *(_DWORD *)(v67 + 48);
      break;
    case 7:
      v5 = *(uint64_t **)(v0 + 480);
      v7 = *(_QWORD *)(v0 + 456);
      v6 = *(_QWORD *)(v0 + 464);
      v8 = *(_QWORD *)(v0 + 448);
      v9 = *v5;
      v10 = v5[1];
      *(_QWORD *)(v0 + 504) = v10;
      sub_1BC397A38();
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v6, (char *)v5 + *(int *)(v11 + 48), v8);
      v12 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 512) = v12;
      *v12 = v0;
      v12[1] = sub_1BC393CE8;
      return sub_1BC3942B0(v9, v10, *(_QWORD *)(v0 + 464));
    default:
      v43 = *(_QWORD *)(v0 + 400);
      v44 = *(_QWORD *)(v0 + 368);
      v45 = *(_QWORD *)(v0 + 376);
      v46 = *(_QWORD *)(v0 + 352);
      sub_1BC62BAF8();
      v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
      v47(v43, v46, v44);
      swift_retain_n();
      v48 = sub_1BC62BB28();
      v49 = sub_1BC62CAD0();
      v50 = os_log_type_enabled(v48, v49);
      v52 = *(_QWORD *)(v0 + 416);
      v51 = *(_QWORD *)(v0 + 424);
      v54 = *(_QWORD *)(v0 + 400);
      v53 = *(_QWORD *)(v0 + 408);
      if (v50)
      {
        v81 = *(_QWORD *)(v0 + 392);
        v82 = *(_QWORD *)(v0 + 384);
        v83 = *(_QWORD *)(v0 + 376);
        v84 = v48;
        v93 = *(_QWORD *)(v0 + 416);
        loga = *(os_log_t *)(v0 + 424);
        v56 = *(_QWORD *)(v0 + 360);
        v55 = *(_QWORD *)(v0 + 368);
        v57 = swift_slowAlloc();
        v86 = swift_slowAlloc();
        v96 = v86;
        *(_DWORD *)v57 = 136315394;
        sub_1BC396C10((__int128 *)(v56 + 112), v0 + 216);
        sub_1BC397854(v0 + 216, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
        v58 = v54;
        v80 = v54;
        v59 = sub_1BC38E6D4();
        v88 = v53;
        v61 = v60;
        sub_1BC397854(v0 + 216, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
        *(_QWORD *)(v0 + 304) = sub_1BC4991F0(v59, v61, &v96);
        sub_1BC62CFF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 12) = 2080;
        v47(v81, v58, v55);
        v47(v82, v81, v55);
        sub_1BC62D5D4();
        v62 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_1BC62D088();
        swift_unknownObjectRelease();
        v63 = sub_1BC62C6E0();
        v65 = v64;
        v66 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
        v66(v81, v55);
        *(_QWORD *)(v0 + 312) = sub_1BC4991F0(v63, v65, &v96);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        v66(v80, v55);
        _os_log_impl(&dword_1BC30A000, v84, v49, "ClinicalAccountLoginSession: %s got an unexpected callback URL %s", (uint8_t *)v57, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v86, -1, -1);
        MEMORY[0x1BCCF36A8](v57, -1, -1);

        (*(void (**)(os_log_t, uint64_t))(v93 + 8))(loga, v88);
      }
      else
      {
        v69 = *(_QWORD *)(v0 + 368);
        v68 = *(_QWORD *)(v0 + 376);
        swift_release_n();
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v54, v69);

        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
      }
      sub_1BC62C680();
      v70 = MEMORY[0x1E0DEA968];
      sub_1BC397800(0, &qword_1EF42B218, &qword_1EF42B220);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BC639590;
      *(_QWORD *)(inited + 32) = sub_1BC62C680();
      *(_QWORD *)(inited + 40) = v72;
      v96 = 0;
      v97 = 0xE000000000000000;
      sub_1BC62D1D8();
      swift_bridgeObjectRelease();
      v96 = 0xD00000000000001DLL;
      v97 = 0x80000001BC653E80;
      sub_1BC379B20(&qword_1EF42B240, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      sub_1BC62D52C();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v73 = v96;
      v74 = v97;
      *(_QWORD *)(inited + 72) = v70;
      *(_QWORD *)(inited + 48) = v73;
      *(_QWORD *)(inited + 56) = v74;
      sub_1BC35BF10(inited);
      v75 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v76 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v77 = (void *)sub_1BC62C53C();
      swift_bridgeObjectRelease();
      v78 = objc_msgSend(v75, sel_initWithDomain_code_userInfo_, v76, 3, v77);
      *(_QWORD *)(v0 + 544) = v78;

      v79 = v78;
      break;
  }
  return swift_task_switch();
}

uint64_t sub_1BC393CE8()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BC393D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 448);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1BC39797C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC393E0C()
{
  uint64_t v0;

  sub_1BC62C944();
  *(_QWORD *)(v0 + 528) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC393E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 360);
  swift_release();
  (*(void (**)(uint64_t))(v2 + 184))(v1);
  return swift_task_switch();
}

uint64_t sub_1BC393ECC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(int *)(v0 + 132);
  v2 = *(void **)(v0 + 520);
  v3 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 480);
  swift_release();

  sub_1BC39797C(v3);
  sub_1BC384EB4(v4 + v1, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC393FA8()
{
  uint64_t v0;

  sub_1BC62C944();
  *(_QWORD *)(v0 + 536) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC394010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v1 = *(_QWORD *)(v0 + 360);
  v2 = swift_release();
  v3 = *(void (**)(uint64_t))(v1 + 168);
  if (v3)
    v3(v2);
  return swift_task_switch();
}

uint64_t sub_1BC394064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 456);
  swift_release();
  sub_1BC39797C(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC394128()
{
  uint64_t v0;

  sub_1BC62C944();
  *(_QWORD *)(v0 + 552) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC394190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 360);
  swift_release();
  (*(void (**)(uint64_t))(v2 + 184))(v1);
  return swift_task_switch();
}

uint64_t sub_1BC3941E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 480);

  swift_release();
  sub_1BC39797C(v2);
  sub_1BC39797C(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3942B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[49] = a3;
  v4[50] = v3;
  v4[47] = a1;
  v4[48] = a2;
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v4[51] = swift_task_alloc();
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  v4[52] = swift_task_alloc();
  v5 = sub_1BC62A7B4();
  v4[53] = v5;
  v4[54] = *(_QWORD *)(v5 - 8);
  v4[55] = swift_task_alloc();
  v4[56] = swift_task_alloc();
  v4[57] = swift_task_alloc();
  v4[58] = swift_task_alloc();
  v6 = sub_1BC62BB34();
  v4[59] = v6;
  v4[60] = *(_QWORD *)(v6 - 8);
  v4[61] = swift_task_alloc();
  v4[62] = swift_task_alloc();
  v4[63] = swift_task_alloc();
  v4[64] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC3943EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0[58];
  v2 = v0[53];
  v3 = v0[54];
  v4 = v0[49];
  sub_1BC62BAF8();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[65] = v5;
  v5(v1, v4, v2);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v6 = sub_1BC62BB28();
  v7 = sub_1BC62CADC();
  if (os_log_type_enabled(v6, v7))
  {
    v40 = v0[64];
    v38 = v0[60];
    v39 = v0[59];
    v33 = v0[58];
    v34 = v0[54];
    v32 = v0[53];
    v8 = v0[50];
    v35 = v0[47];
    v36 = v0[48];
    v9 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v41 = v37;
    *(_DWORD *)v9 = 136315650;
    sub_1BC396C10((__int128 *)(v8 + 112), (uint64_t)(v0 + 15));
    sub_1BC397854((uint64_t)(v0 + 15), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
    v10 = sub_1BC38E6D4();
    v12 = v11;
    sub_1BC397854((uint64_t)(v0 + 15), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
    v0[42] = sub_1BC4991F0(v10, v12, &v41);
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    sub_1BC379B20((unint64_t *)&qword_1EF429280, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v13 = sub_1BC62D52C();
    v0[43] = sub_1BC4991F0(v13, v14, &v41);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    v15 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v15(v33, v32);
    *(_WORD *)(v9 + 22) = 2080;
    v0[34] = v35;
    v0[35] = v36;
    swift_bridgeObjectRetain();
    sub_1BC62D5D4();
    v16 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v17 = sub_1BC62C6E0();
    v0[46] = sub_1BC4991F0(v17, v18, &v41);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v6, v7, "ClinicalAccountLoginSession: %s with state %s will now exchange code %s for token", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v37, -1, -1);
    MEMORY[0x1BCCF36A8](v9, -1, -1);

    v19 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v19(v40, v39);
  }
  else
  {
    v20 = v0[64];
    v21 = v0[59];
    v22 = v0[60];
    v23 = v0[58];
    v24 = v0[53];
    v25 = v0[54];
    swift_release_n();
    v15 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v15(v23, v24);

    swift_bridgeObjectRelease_n();
    v19 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v19(v20, v21);
  }
  v0[67] = v15;
  v0[66] = v19;
  v26 = *(void **)(v0[50] + 152);
  v27 = sub_1BC62A784();
  v0[68] = v27;
  v28 = sub_1BC62C650();
  v0[69] = v28;
  v0[7] = v0 + 45;
  v0[2] = v0;
  v0[3] = sub_1BC394838;
  v29 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v30 = v0 + 10;
  v30[1] = 0x40000000;
  v30[2] = sub_1BC3954CC;
  v30[3] = &block_descriptor_10;
  v30[4] = v29;
  objc_msgSend(v26, sel_endLoginSessionWithState_code_completion_, v27, v28, v30);
  return swift_continuation_await();
}

uint64_t sub_1BC394838()
{
  return swift_task_switch();
}

uint64_t sub_1BC394884()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v33)(uint64_t, uint64_t);
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint8_t *v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  id v88;
  void (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void *v94;
  id v95;
  void (*v96)(uint64_t, uint64_t);
  NSObject *log;
  os_log_t loga;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  void (*v108)(uint64_t, uint64_t);
  id v109;
  id v110;
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t);
  os_log_type_t v113;
  void *v114;
  void *v115;
  uint64_t v116;

  v1 = *(void **)(v0 + 552);
  v2 = *(void **)(v0 + 544);
  v3 = *(void **)(v0 + 360);
  *(_QWORD *)(v0 + 560) = v3;

  v4 = objc_msgSend(v3, sel_error);
  if (v4)
  {
    v5 = v4;
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
    v7 = *(_QWORD *)(v0 + 456);
    v8 = *(_QWORD *)(v0 + 424);
    v9 = *(_QWORD *)(v0 + 392);
    sub_1BC62BAF8();
    v6(v7, v9, v8);
    swift_retain_n();
    v10 = v5;
    v11 = sub_1BC62BB28();
    v113 = sub_1BC62CAC4();
    v12 = os_log_type_enabled(v11, v113);
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
    v14 = *(_QWORD *)(v0 + 504);
    v15 = *(_QWORD *)(v0 + 472);
    v16 = *(_QWORD *)(v0 + 456);
    v17 = *(_QWORD *)(v0 + 424);
    v18 = *(_QWORD *)(v0 + 400);
    if (v12)
    {
      v108 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
      v96 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
      v106 = *(_QWORD *)(v0 + 504);
      v19 = swift_slowAlloc();
      v100 = swift_slowAlloc();
      v116 = v100;
      *(_DWORD *)v19 = 136315650;
      sub_1BC396C10((__int128 *)(v18 + 112), v0 + 200);
      sub_1BC397854(v0 + 200, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
      log = v11;
      v20 = sub_1BC38E6D4();
      v103 = v15;
      v21 = v3;
      v23 = v22;
      sub_1BC397854(v0 + 200, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
      *(_QWORD *)(v0 + 304) = sub_1BC4991F0(v20, v23, &v116);
      sub_1BC62CFF8();
      swift_release_n();
      v3 = v21;
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      sub_1BC379B20((unint64_t *)&qword_1EF429280, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v24 = sub_1BC62D52C();
      *(_QWORD *)(v0 + 312) = sub_1BC4991F0(v24, v25, &v116);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      v96(v16, v17);
      *(_WORD *)(v19 + 22) = 2080;
      *(_QWORD *)(v0 + 320) = v10;
      sub_1BC35E44C();
      v26 = v10;
      v27 = sub_1BC62C6E0();
      *(_QWORD *)(v0 + 328) = sub_1BC4991F0(v27, v28, &v116);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, log, v113, "ClinicalAccountLoginSession: %s failed to end session with state %s. Error: %s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v100, -1, -1);
      MEMORY[0x1BCCF36A8](v19, -1, -1);

      v108(v106, v103);
    }
    else
    {
      v33 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
      swift_release_n();
      v33(v16, v17);

      v13(v14, v15);
    }
    v34 = objc_msgSend(v3, sel_alternateCredentialPersistentID);
    if (v34)
    {
      v35 = v34;
      v36 = objc_msgSend(v3, sel_account);
      if (v36)
      {
        v37 = v36;
        sub_1BC62BAF8();
        v38 = v37;
        v39 = sub_1BC62BB28();
        v40 = sub_1BC62CADC();
        if (os_log_type_enabled(v39, v40))
        {
          loga = *(os_log_t *)(v0 + 536);
          v104 = *(_QWORD *)(v0 + 496);
          v107 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
          v101 = *(_QWORD *)(v0 + 472);
          v41 = *(_QWORD *)(v0 + 448);
          v109 = v38;
          v42 = *(_QWORD *)(v0 + 424);
          v110 = v10;
          v43 = (uint8_t *)swift_slowAlloc();
          v99 = swift_slowAlloc();
          v116 = v99;
          *(_DWORD *)v43 = 136315138;
          v44 = objc_msgSend(v109, sel_identifier);
          sub_1BC62A79C();

          sub_1BC379B20((unint64_t *)&qword_1EF429280, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v45 = sub_1BC62D52C();
          v47 = v46;
          v48 = v42;
          v38 = v109;
          ((void (*)(uint64_t, uint64_t))loga)(v41, v48);
          *(_QWORD *)(v0 + 296) = sub_1BC4991F0(v45, v47, &v116);
          sub_1BC62CFF8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC30A000, v39, v40, "ClinicalAccountLoginSession: will ask user to replace account %s", v43, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v99, -1, -1);
          v49 = v43;
          v10 = v110;
          MEMORY[0x1BCCF36A8](v49, -1, -1);

          v107(v104, v101);
        }
        else
        {
          v79 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
          v80 = *(_QWORD *)(v0 + 496);
          v81 = *(_QWORD *)(v0 + 472);

          v79(v80, v81);
        }
        v82 = *(_QWORD *)(v0 + 416);
        v83 = *(_QWORD *)(v0 + 400);
        v84 = sub_1BC62C95C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v82, 1, 1, v84);
        v86 = sub_1BC379B20(&qword_1EF42B230, v85, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginSessionCallbackHandler, (uint64_t)&unk_1BC63AA74);
        v87 = (_QWORD *)swift_allocObject();
        v87[2] = v83;
        v87[3] = v86;
        v87[4] = v83;
        v87[5] = v35;
        swift_retain_n();
        v88 = v35;
        sub_1BC5C2784(v82, (uint64_t)&unk_1EF42B238, (uint64_t)v87);

        swift_release();
        goto LABEL_20;
      }

    }
    v114 = v3;
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
    v52 = *(_QWORD *)(v0 + 424);
    v51 = *(_QWORD *)(v0 + 432);
    v53 = *(_QWORD *)(v0 + 408);
    v54 = *(_QWORD *)(v0 + 392);
    v55 = v10;
    v56 = (void *)objc_opt_self();
    v57 = (void *)sub_1BC62C650();
    v58 = (void *)sub_1BC62A550();
    v59 = objc_msgSend(v56, sel_hk_error_description_underlyingError_, 100, v57, v58);

    v50(v53, v54, v52);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v53, 0, 1, v52);
    sub_1BC395550(v59, v53);

  }
  else
  {
    v29 = objc_msgSend(v3, sel_account);
    *(_QWORD *)(v0 + 568) = v29;
    if (v29)
    {
      v30 = (uint64_t)v29;
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 576) = v31;
      *v31 = v0;
      v31[1] = sub_1BC3953BC;
      return sub_1BC395C98(v30, *(_QWORD *)(v0 + 392));
    }
    v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
    v61 = *(_QWORD *)(v0 + 440);
    v62 = *(_QWORD *)(v0 + 424);
    v63 = *(_QWORD *)(v0 + 392);
    sub_1BC62BAF8();
    v60(v61, v63, v62);
    swift_retain_n();
    v64 = sub_1BC62BB28();
    v65 = sub_1BC62CAD0();
    v66 = os_log_type_enabled(v64, v65);
    v112 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    v67 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
    v68 = *(_QWORD *)(v0 + 488);
    v69 = *(_QWORD *)(v0 + 472);
    v111 = *(_QWORD *)(v0 + 440);
    v70 = *(_QWORD *)(v0 + 424);
    v71 = *(_QWORD *)(v0 + 400);
    if (v66)
    {
      v115 = v3;
      v72 = swift_slowAlloc();
      v102 = swift_slowAlloc();
      v116 = v102;
      *(_DWORD *)v72 = 136315394;
      sub_1BC396C10((__int128 *)(v71 + 112), v0 + 160);
      sub_1BC397854(v0 + 160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
      v105 = v69;
      v73 = sub_1BC38E6D4();
      v75 = v74;
      sub_1BC397854(v0 + 160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
      *(_QWORD *)(v0 + 352) = sub_1BC4991F0(v73, v75, &v116);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2080;
      sub_1BC379B20((unint64_t *)&qword_1EF429280, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v76 = sub_1BC62D52C();
      *(_QWORD *)(v0 + 288) = sub_1BC4991F0(v76, v77, &v116);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      v112(v111, v70);
      _os_log_impl(&dword_1BC30A000, v64, v65, "ClinicalAccountLoginSession: %s failed to end session with state %s: ended successfully but got no account", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v102, -1, -1);
      v78 = v72;
      v3 = v115;
      MEMORY[0x1BCCF36A8](v78, -1, -1);

      v67(v68, v105);
    }
    else
    {
      swift_release_n();
      v112(v111, v70);

      v67(v68, v69);
    }
    v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
    v90 = *(_QWORD *)(v0 + 424);
    v91 = *(_QWORD *)(v0 + 432);
    v53 = *(_QWORD *)(v0 + 408);
    v92 = *(_QWORD *)(v0 + 392);
    v93 = (void *)objc_opt_self();
    v94 = (void *)sub_1BC62C650();
    v95 = objc_msgSend(v93, sel_hk_error_description_, 100, v94);

    v89(v53, v92, v90);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v91 + 56))(v53, 0, 1, v90);
    sub_1BC395550(v95, v53);

  }
  sub_1BC384EB4(v53, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3953BC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC395414()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 560);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3954CC(uint64_t a1, void *a2)
{
  id v2;

  **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  v2 = a2;
  return swift_continuation_resume();
}

uint64_t sub_1BC3954FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_1BC3781C0;
  return sub_1BC396454(a5);
}

void sub_1BC395550(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42;
  uint64_t v43;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;
  char isUniquelyReferenced_nonNull_native;
  id v50;
  uint64_t v51;
  void *v52;
  os_log_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65[4];
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[8];

  v5 = sub_1BC62A7B4();
  v6 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v59 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, v6);
  v58 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v62 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v53 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v53 - v15;
  v61 = sub_1BC62BB34();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BAF8();
  v63 = a2;
  sub_1BC397AF4(a2, (uint64_t)v16, (unint64_t *)&qword_1EF42B210, v6);
  swift_retain();
  v19 = a1;
  v20 = v2;
  swift_retain();
  v21 = a1;
  v22 = sub_1BC62BB28();
  v23 = sub_1BC62CADC();
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc();
    v57 = v5;
    v26 = v25;
    v55 = swift_slowAlloc();
    v65[0] = v55;
    *(_DWORD *)v26 = 136315650;
    v54 = v24;
    sub_1BC396C10((__int128 *)(v20 + 112), (uint64_t)v70);
    sub_1BC397854((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
    v53 = v22;
    v27 = sub_1BC38E6D4();
    v56 = v7;
    v29 = v28;
    sub_1BC397854((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
    *(_QWORD *)&v66 = sub_1BC4991F0(v27, v29, v65);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v26 + 12) = 2080;
    sub_1BC397AF4((uint64_t)v16, (uint64_t)v14, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v30 = sub_1BC62C6E0();
    *(_QWORD *)&v66 = sub_1BC4991F0(v30, v31, v65);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC384EB4((uint64_t)v16, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    *(_WORD *)(v26 + 22) = 2080;
    *(_QWORD *)&v66 = a1;
    v32 = a1;
    v33 = a1;
    sub_1BC35E44C();
    sub_1BC62D5D4();
    v34 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v35 = sub_1BC62C6E0();
    v37 = v36;

    *(_QWORD *)&v66 = sub_1BC4991F0(v35, v37, v65);
    v7 = v56;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    v38 = v53;
    _os_log_impl(&dword_1BC30A000, v53, (os_log_type_t)v54, "ClinicalAccountLoginSession: %s with state %s failed to log in: %s", (uint8_t *)v26, 0x20u);
    v39 = v55;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v39, -1, -1);
    v40 = v26;
    v5 = v57;
    MEMORY[0x1BCCF36A8](v40, -1, -1);

  }
  else
  {
    swift_release_n();
    sub_1BC384EB4((uint64_t)v16, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);

  }
  (*(void (**)(char *, uint64_t))(v60 + 8))(v18, v61);
  sub_1BC397800(0, &qword_1EF42B218, &qword_1EF42B220);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC639590;
  *(_QWORD *)(inited + 32) = 0xD00000000000002BLL;
  *(_QWORD *)(inited + 40) = 0x80000001BC653DB0;
  swift_getErrorValue();
  v42 = v68;
  v43 = v69;
  *(_QWORD *)(inited + 72) = v69;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(boxed_opaque_existential_1, v42, v43);
  v45 = sub_1BC35BF10(inited);
  v46 = v62;
  sub_1BC397AF4(v63, v62, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v46, 1, v5) == 1)
  {
    sub_1BC384EB4(v46, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  }
  else
  {
    v47 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v59, v46, v5);
    v67 = v5;
    v48 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v66);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v48, v47, v5);
    sub_1BC35E088(&v66, v65);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v64 = v45;
    sub_1BC48C754(v65, 0xD00000000000002BLL, 0x80000001BC653D80, isUniquelyReferenced_nonNull_native);
    v45 = v64;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v47, v5);
  }
  v50 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1EF428670 != -1)
    swift_once();
  v51 = qword_1EF4335E0;
  sub_1BC372078(v45);
  swift_bridgeObjectRelease();
  v52 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_postNotificationName_object_userInfo_, v51, v20, v52);

}

uint64_t sub_1BC395C98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[51] = a2;
  v3[52] = v2;
  v3[50] = a1;
  v4 = sub_1BC62A7B4();
  v3[53] = v4;
  v3[54] = *(_QWORD *)(v4 - 8);
  v3[55] = swift_task_alloc();
  v3[56] = swift_task_alloc();
  v5 = sub_1BC62BB34();
  v3[57] = v5;
  v3[58] = *(_QWORD *)(v5 - 8);
  v3[59] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC395D34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t inited;
  uint64_t v24;
  id v25;
  uint64_t *boxed_opaque_existential_1;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  void (*v57)(uint64_t *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;

  v1 = *(uint64_t **)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 408);
  sub_1BC62BAF8();
  v57 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16);
  v57(v1, v4, v2);
  swift_retain_n();
  v5 = sub_1BC62BB28();
  v6 = sub_1BC62CADC();
  if (os_log_type_enabled(v5, v6))
  {
    v50 = *(_QWORD *)(v0 + 464);
    v51 = *(id *)(v0 + 456);
    v53 = *(_QWORD *)(v0 + 472);
    v46 = *(_QWORD *)(v0 + 448);
    v54 = *(_QWORD *)(v0 + 432);
    v7 = *(_QWORD *)(v0 + 416);
    v44 = *(_QWORD *)(v0 + 424);
    v8 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    v59 = v48;
    *(_DWORD *)v8 = 136315394;
    sub_1BC396C10((__int128 *)(v7 + 112), v0 + 296);
    sub_1BC397854(v0 + 296, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969A8);
    v9 = sub_1BC38E6D4();
    v11 = v10;
    sub_1BC397854(v0 + 296, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
    *(_QWORD *)(v0 + 384) = sub_1BC4991F0(v9, v11, &v59);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_1BC379B20((unint64_t *)&qword_1EF429280, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v12 = sub_1BC62D52C();
    *(_QWORD *)(v0 + 392) = sub_1BC4991F0(v12, v13, &v59);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    v55 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
    v55(v46, v44);
    _os_log_impl(&dword_1BC30A000, v5, v6, "ClinicalAccountLoginSession: %s with state %s completed successfully", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v48, -1, -1);
    MEMORY[0x1BCCF36A8](v8, -1, -1);

    (*(void (**)(uint64_t, id))(v50 + 8))(v53, v51);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 464);
    v14 = *(_QWORD *)(v0 + 472);
    v17 = *(_QWORD *)(v0 + 448);
    v16 = *(_QWORD *)(v0 + 456);
    v18 = *(_QWORD *)(v0 + 424);
    v19 = *(_QWORD *)(v0 + 432);
    swift_release_n();
    v55 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v55(v17, v18);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v52 = (id)objc_opt_self();
  v49 = objc_msgSend(v52, sel_defaultCenter);
  if (qword_1EF428670 != -1)
    swift_once();
  v20 = *(_QWORD *)(v0 + 424);
  v22 = *(void **)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 408);
  v45 = qword_1EF4335E0;
  v47 = *(_QWORD *)(v0 + 416);
  sub_1BC397800(0, (unint64_t *)&qword_1EF42B1E8, (unint64_t *)&qword_1EF42B1F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v0 + 352) = 0xD00000000000002DLL;
  *(_QWORD *)(v0 + 360) = 0x80000001BC653D50;
  v24 = MEMORY[0x1E0DEA968];
  sub_1BC62D184();
  *(_QWORD *)(inited + 96) = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(v0 + 336) = 0xD00000000000002BLL;
  *(_QWORD *)(v0 + 344) = 0x80000001BC653D80;
  v25 = v22;
  sub_1BC62D184();
  *(_QWORD *)(inited + 168) = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 144));
  v57(boxed_opaque_existential_1, v21, v20);
  sub_1BC35C258(inited);
  v27 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  objc_msgSend(v49, sel_postNotificationName_object_userInfo_, v45, v47, v27);

  v28 = objc_msgSend(v52, sel_defaultCenter);
  if (qword_1ED6A3F58 != -1)
    swift_once();
  v29 = *(_QWORD *)(v0 + 440);
  v30 = *(_QWORD *)(v0 + 424);
  v31 = *(void **)(v0 + 400);
  v56 = qword_1ED6A3F48;
  v58 = *(_QWORD *)(v0 + 416);
  v32 = swift_initStackObject();
  *(_OWORD *)(v32 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v0 + 368) = 0x49746E756F636361;
  *(_QWORD *)(v0 + 376) = 0xE900000000000044;
  sub_1BC62D184();
  v33 = v24;
  v34 = objc_msgSend(v31, sel_identifier);
  sub_1BC62A79C();

  v35 = sub_1BC62A778();
  v37 = v36;
  v55(v29, v30);
  *(_QWORD *)(v32 + 96) = v33;
  *(_QWORD *)(v32 + 72) = v35;
  *(_QWORD *)(v32 + 80) = v37;
  sub_1BC35C258(v32);
  v38 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_postNotificationName_object_userInfo_, v56, v58, v38);

  if (objc_msgSend(v31, sel_isSharingToProvider)
    && (v39 = *(_QWORD *)(v0 + 416), *(_BYTE *)(v39 + 144) == 1))
  {
    v40 = *(void **)(v39 + 128);
    *(_QWORD *)(v0 + 480) = v40;
    v41 = v40;
    v42 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 488) = v42;
    *v42 = v0;
    v42[1] = sub_1BC3963B4;
    return sub_1BC396FB8(*(_QWORD *)(v0 + 400), (uint64_t)v41);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BC3963B4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC396408()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC396454(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[13] = a1;
  v2[14] = v1;
  v3 = sub_1BC62BB34();
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC3964B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  _QWORD *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 112);
  sub_1BC396C10((__int128 *)(v1 + 112), v0 + 56);
  v3 = *(void **)(v1 + 112);
  v2 = *(void **)(v1 + 120);
  v4 = *(void **)(v1 + 128);
  sub_1BC396C10((__int128 *)(v0 + 56), v0 + 16);
  if (*(_BYTE *)(v0 + 48) == 1)
  {
    v6 = *(void **)(v0 + 16);
    v5 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 144) = v6;
    *(_QWORD *)(v0 + 152) = v5;
    v7 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 160) = v7;
    v8 = (void *)objc_opt_self();
    v9 = v3;
    v10 = v2;
    v11 = v4;
    v12 = objc_msgSend(v8, sel_userProfileWithProfileIdentifier_, v7);
    *(_QWORD *)(v0 + 168) = v12;
    type metadata accessor for ClinicalAccountManager();
    v13 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 176) = v13;
    v14 = MEMORY[0x1E0DEE9E8];
    v13[5] = 0;
    v13[6] = 0;
    v13[4] = v14;
    v13[2] = v12;
    v13[3] = objc_msgSend(v12, sel_clinicalAccountStore);
    if (qword_1ED6A31B0 != -1)
      swift_once();
    v15 = *(void **)(v0 + 104);
    v16 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 184) = v16;
    v16[2] = v13;
    v16[3] = v6;
    v16[4] = v5;
    v17 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 192) = v17;
    v17[2] = v13;
    v17[3] = v6;
    v17[4] = v15;
    v17[5] = v5;
    sub_1BC62C944();
    swift_retain_n();
    v18 = v6;
    v19 = v5;
    v20 = v18;
    v21 = v19;
    v22 = v15;
    *(_QWORD *)(v0 + 200) = sub_1BC62C938();
    sub_1BC62C908();
    return swift_task_switch();
  }
  else
  {
    sub_1BC62BAF8();
    swift_retain_n();
    v24 = sub_1BC62BB28();
    v25 = sub_1BC62CAD0();
    v26 = os_log_type_enabled(v24, v25);
    v28 = *(_QWORD *)(v0 + 128);
    v27 = *(_QWORD *)(v0 + 136);
    v29 = *(_QWORD *)(v0 + 120);
    if (v26)
    {
      v38 = *(_QWORD *)(v0 + 136);
      v37 = *(_QWORD *)(v0 + 128);
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v39 = v31;
      *(_DWORD *)v30 = 136315138;
      v32 = v3;
      v33 = sub_1BC38E6D4();
      v34 = v29;
      v36 = v35;
      sub_1BC397854(v0 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC3969EC);
      *(_QWORD *)(v0 + 96) = sub_1BC4991F0(v33, v36, &v39);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1BC30A000, v24, v25, "ClinicalAccountLoginSession: can only login to different account with a relogin context but got %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v31, -1, -1);
      MEMORY[0x1BCCF36A8](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v34);
    }
    else
    {
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BC396854()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = v0[24];
  v2 = v0[23];
  v4 = (void *)v0[18];
  v3 = (void *)v0[19];
  swift_release();
  sub_1BC555B28(v4, v3, (uint64_t)&unk_1EF42B1D8, v2, (uint64_t)&unk_1EF42B1E0, v1);
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1BC3968D4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 160);
  v4 = *(void **)(v0 + 144);
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC39692C()
{
  uint64_t v0;

  sub_1BC3969EC(*(void **)(v0 + 112), *(void **)(v0 + 120), *(void **)(v0 + 128), *(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144));

  sub_1BC36D770(*(_QWORD *)(v0 + 168));
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ClinicalAccountLoginSessionCallbackHandler()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ClinicalAccountLoginSessionCallbackHandler.SessionRegistration()
{
  return &type metadata for ClinicalAccountLoginSessionCallbackHandler.SessionRegistration;
}

id sub_1BC3969A8(void *a1, void *a2, void *a3, uint64_t a4, char a5)
{
  id v7;
  id v8;

  if ((a5 & 1) != 0)
  {
    v7 = a1;
    v8 = a2;
    a1 = a3;
  }
  return a1;
}

void destroy for ClinicalAccountLoginSession.Context(uint64_t a1)
{
  sub_1BC3969EC(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void sub_1BC3969EC(void *a1, void *a2, void *a3, uint64_t a4, char a5)
{

  if ((a5 & 1) != 0)
  {

  }
}

uint64_t initializeWithCopy for ClinicalAccountLoginSession.Context(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  char v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BC3969A8(*(void **)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ClinicalAccountLoginSession.Context(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  char v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  char v12;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BC3969A8(*(void **)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BC3969EC(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ClinicalAccountLoginSession.Context(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_1BC3969EC(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalAccountLoginSession.Context(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalAccountLoginSession.Context(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC396BE0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1BC396BE8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountLoginSession.Context()
{
  return &type metadata for ClinicalAccountLoginSession.Context;
}

uint64_t sub_1BC396C04()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1BC396C10(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1BC396C28(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, void *);
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_1BC62A5BC();
    v10 = sub_1BC62A604();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    v11 = sub_1BC62A604();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_1BC384EB4((uint64_t)v8, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1BC396D38()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC396D6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1BC3781C0;
  return sub_1BC5CA010(v2, v3, v4);
}

uint64_t sub_1BC396DCC()
{
  id *v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC396E08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1BC377F18;
  return sub_1BC5CA074(v2, v3, v5, v4);
}

uint64_t sub_1BC396E6C(void *a1)
{
  id v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  v1 = a1;
  sub_1BC35E44C();
  if (swift_dynamicCast() && (v9 & 1) != 0)
    return 1;
  v3 = (void *)sub_1BC62A550();
  if (objc_msgSend(v3, sel_hk_isHealthKitError) && objc_msgSend(v3, sel_code) == (id)110)
  {
    v4 = objc_msgSend(v3, sel_localizedDescription);
    v5 = sub_1BC62C680();
    v7 = v6;

    if (v5 == 0xD000000000000014 && v7 == 0x80000001BC653F30)
    {
      swift_bridgeObjectRelease();

      return 1;
    }
    v8 = sub_1BC62D574();
    swift_bridgeObjectRelease();

    if ((v8 & 1) != 0)
      return 1;
  }
  else
  {

  }
  return 0;
}

uint64_t sub_1BC396FB8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[10] = a1;
  v2[11] = a2;
  v3 = sub_1BC62A7B4();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v4 = sub_1BC62BB34();
  v2[16] = v4;
  v2[17] = *(_QWORD *)(v4 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC397060()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  char **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;

  v1 = (void *)v0[10];
  sub_1BC62BAF8();
  v2 = v1;
  v3 = sub_1BC62BB28();
  v4 = sub_1BC62CADC();
  v5 = &selRef_constraintGreaterThanOrEqualToConstant_;
  if (os_log_type_enabled(v3, v4))
  {
    v30 = v0[17];
    v6 = v0[15];
    v31 = v0[16];
    v32 = v0[19];
    v7 = v0[12];
    v8 = (void *)v0[10];
    v27 = v8;
    v28 = v0[13];
    v9 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v34 = v29;
    *(_DWORD *)v9 = 136315138;
    v10 = objc_msgSend(v8, sel_identifier);
    sub_1BC62A79C();

    sub_1BC379B20((unint64_t *)&qword_1EF429280, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v11 = sub_1BC62D52C();
    v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v6, v7);
    v14 = v11;
    v5 = &selRef_constraintGreaterThanOrEqualToConstant_;
    v0[9] = sub_1BC4991F0(v14, v13, &v34);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v3, v4, "ClinicalAccountLoginSession: will update multi device status for %s to “override”", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v29, -1, -1);
    MEMORY[0x1BCCF36A8](v9, -1, -1);

    v15 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v15(v32, v31);
  }
  else
  {
    v16 = v0[19];
    v17 = v0[16];
    v18 = v0[17];
    v19 = (void *)v0[10];

    v15 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v15(v16, v17);
  }
  v0[20] = v15;
  v20 = (void *)v0[10];
  v21 = objc_msgSend((id)objc_opt_self(), sel_userProfileWithProfileIdentifier_, v0[11]);
  v0[21] = v21;
  type metadata accessor for ClinicalAccountManager();
  v22 = (_QWORD *)swift_allocObject();
  v0[22] = v22;
  v23 = MEMORY[0x1E0DEE9E8];
  v22[5] = 0;
  v22[6] = 0;
  v22[4] = v23;
  v22[2] = v21;
  v22[3] = objc_msgSend(v21, sel_clinicalAccountStore);
  v24 = objc_msgSend(v20, v5[234]);
  sub_1BC62A79C();

  v33 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF438F28 + dword_1EF438F28);
  v25 = (_QWORD *)swift_task_alloc();
  v0[23] = v25;
  *v25 = v0;
  v25[1] = sub_1BC39737C;
  return v33(v0[14], 3);
}

uint64_t sub_1BC39737C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 104);
  v3 = *(_QWORD *)(*v1 + 112);
  v5 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc();
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v2 + 200) = v6;
  v6(v3, v5);
  return swift_task_switch();
}

uint64_t sub_1BC39740C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC397470()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  os_log_type_t type;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;

  v1 = *(void **)(v0 + 192);
  v2 = *(void **)(v0 + 80);
  sub_1BC62BAF8();
  v3 = v2;
  v4 = v1;
  v5 = v3;
  v6 = v1;
  v7 = sub_1BC62BB28();
  v8 = sub_1BC62CAC4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 192);
    v30 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    v33 = *(void **)(v0 + 168);
    v35 = *(_QWORD *)(v0 + 144);
    v36 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    v34 = *(_QWORD *)(v0 + 128);
    type = v8;
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(void **)(v0 + 80);
    v13 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v37 = v31;
    *(_DWORD *)v13 = 136315394;
    v14 = objc_msgSend(v12, sel_identifier);
    sub_1BC62A79C();

    sub_1BC379B20((unint64_t *)&qword_1EF429280, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v15 = sub_1BC62D52C();
    v17 = v16;
    v30(v10, v11);
    *(_QWORD *)(v0 + 48) = sub_1BC4991F0(v15, v17, &v37);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2080;
    *(_QWORD *)(v0 + 56) = v9;
    v18 = v9;
    v19 = v9;
    sub_1BC35E44C();
    sub_1BC62D5D4();
    v20 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v21 = sub_1BC62C6E0();
    v23 = v22;

    *(_QWORD *)(v0 + 64) = sub_1BC4991F0(v21, v23, &v37);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v7, type, "ClinicalAccountLoginSession: failed to update clinical sharing device status of account %s with error: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v31, -1, -1);
    MEMORY[0x1BCCF36A8](v13, -1, -1);
    swift_release();

    v36(v35, v34);
  }
  else
  {
    v24 = *(void **)(v0 + 192);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    v26 = *(_QWORD *)(v0 + 144);
    v27 = *(_QWORD *)(v0 + 128);
    v28 = *(void **)(v0 + 80);

    swift_release();
    v25(v26, v27);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BC397800(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC35EE38(255, a3);
    v4 = sub_1BC62D538();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC397854(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_1BC39788C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC3978C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BC3781C0;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_1BC3781C0;
  return sub_1BC396454(v2);
}

uint64_t sub_1BC397938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HealthRecordsURLParsingResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC39797C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HealthRecordsURLParsingResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC3979B8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42B248)
  {
    sub_1BC35E44C();
    sub_1BC384E68(255, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42B248);
  }
}

void sub_1BC397A38()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42B250)
  {
    sub_1BC62A7B4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42B250);
  }
}

uint64_t sub_1BC397AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC397AF4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC384E68(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BC397B40()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  if (*(_QWORD *)(v0 + 64))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC397BC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_1BC397BD4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_1BC62A550();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  if (*(_QWORD *)(v0 + 48))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC397C64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1BC377F18;
  return sub_1BC38EEC4(a1, v4, v5, v6, v7, v8, v9, v10);
}

unint64_t sub_1BC397D04()
{
  unint64_t result;

  result = qword_1EF42B280;
  if (!qword_1EF42B280)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63AB24, &type metadata for ClinicalAccountLoginError);
    atomic_store(result, &qword_1EF42B280);
  }
  return result;
}

uint64_t sub_1BC397D48(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC3915D4(a1, a2, v2);
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_1BC397D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease();
  swift_release();
  v5 = sub_1BC62A604();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);

  return swift_deallocObject();
}

uint64_t sub_1BC397E38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = (uint64_t)v1 + v6;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1BC3781C0;
  return sub_1BC39176C(a1, v7, v8, v9, v10, v11);
}

uint64_t storeEnumTagSinglePayload for ClinicalAccountLoginError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC397F40 + 4 * byte_1BC63A995[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC397F74 + 4 * byte_1BC63A990[v4]))();
}

uint64_t sub_1BC397F74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC397F7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC397F84);
  return result;
}

uint64_t sub_1BC397F90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC397F98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC397F9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC397FA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountLoginError()
{
  return &type metadata for ClinicalAccountLoginError;
}

unint64_t sub_1BC397FC4()
{
  unint64_t result;

  result = qword_1EF42B2A8;
  if (!qword_1EF42B2A8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63AAFC, &type metadata for ClinicalAccountLoginError);
    atomic_store(result, (unint64_t *)&qword_1EF42B2A8);
  }
  return result;
}

void static AccountIcon.Size.smallerOrEqual(to:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v3;

  v3 = 0;
  if (a2 > 36.0 || a3 > 36.0)
  {
    v3 = 1;
    if (a2 > 45.0 || a3 > 45.0)
    {
      v3 = 2;
      if (a2 > 60.0 || a3 > 60.0)
        v3 = 3;
    }
  }
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
}

double AccountIcon.Size.cornerRadius.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 24) == 1)
    return 3.0;
  else
    return *(double *)(v0 + 16);
}

double AccountIcon.Size.imageDimension.getter()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  BOOL v6;
  double v7;

  v1 = *(double *)v0;
  v2 = *(double *)(v0 + 8);
  if (*(_BYTE *)(v0 + 24) != 1)
    return v1 - v2;
  v3 = *(_QWORD *)(v0 + 16);
  if (!(*(_QWORD *)&v2 | *(_QWORD *)&v1 | v3))
    return 36.0 - 2.0;
  v4 = v3 | *(_QWORD *)&v2;
  v5 = 45.0;
  if (v4)
    v6 = 0;
  else
    v6 = *(_QWORD *)&v1 == 2;
  v7 = 80.0;
  if (v6)
    v7 = 60.0;
  if (*(_QWORD *)&v1 != 1 || v4 != 0)
    v5 = v7;
  return v5 - 3.0;
}

double AccountIcon.Size.insetDimension.getter()
{
  uint64_t v0;
  double result;

  if (*(_BYTE *)(v0 + 24) != 1)
    return *(double *)(v0 + 8);
  result = 2.0;
  if (*(_QWORD *)(v0 + 8) | *(_QWORD *)v0 | *(_QWORD *)(v0 + 16))
    return 3.0;
  return result;
}

double AccountIcon.Size.imageViewDimension.getter()
{
  uint64_t v0;
  double v1;
  double result;
  BOOL v3;
  double v4;

  v1 = *(double *)v0;
  if (*(_BYTE *)(v0 + 24) != 1)
    return v1;
  if (!(*(_QWORD *)(v0 + 8) | *(_QWORD *)(v0 + 16) | *(_QWORD *)&v1))
    return 36.0;
  result = 45.0;
  v3 = *(_OWORD *)(v0 + 8) == 0 && *(_QWORD *)&v1 == 2;
  v4 = 80.0;
  if (v3)
    v4 = 60.0;
  if (*(_QWORD *)&v1 != 1 || *(_OWORD *)(v0 + 8) != 0)
    return v4;
  return result;
}

void AccountIcon.imageViewStyle.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if ((*(_BYTE *)v1 & 1) != 0)
  {
    v2 = 0;
    v3 = 2;
  }
  else
  {
    v2 = 0x4008000000000000;
    if (*(_BYTE *)(v1 + 32) != 1)
      v2 = *(_QWORD *)(v1 + 24);
    v3 = 0;
  }
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
}

BOOL static AccountIcon.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AccountIcon.Kind.hash(into:)()
{
  return sub_1BC62D67C();
}

uint64_t AccountIcon.Kind.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

void *static AccountIcon.Size.allCases.getter()
{
  return &unk_1E74D28C0;
}

uint64_t AccountIcon.Size.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 24) == 1)
    return sub_1BC62D67C();
  sub_1BC62D67C();
  sub_1BC62D6A0();
  sub_1BC62D6A0();
  return sub_1BC62D6A0();
}

uint64_t AccountIcon.Size.hashValue.getter()
{
  sub_1BC62D670();
  AccountIcon.Size.hash(into:)();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC398590()
{
  sub_1BC62D670();
  AccountIcon.Size.hash(into:)();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC3985EC()
{
  sub_1BC62D670();
  AccountIcon.Size.hash(into:)();
  return sub_1BC62D6AC();
}

void sub_1BC398640(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E74D2960;
}

void AccountIcon.kind.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

__n128 AccountIcon.size.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 32);
  result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

id AccountIcon.image.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

void AccountIcon.init(monogram:size:)(id a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  double v9;
  double v10;
  BOOL v11;
  double v12;
  id v14;

  v5 = *(double *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a2 + 24);
  if (v8 == 1)
  {
    v9 = 36.0;
    v10 = 45.0;
    if (v7 | v6)
      v11 = 0;
    else
      v11 = *(_QWORD *)&v5 == 2;
    v12 = 80.0;
    if (v11)
      v12 = 60.0;
    if (*(_QWORD *)&v5 != 1 || (v7 | v6) != 0)
      v10 = v12;
    if (v7 | v6 | *(_QWORD *)&v5)
      v9 = v10;
  }
  else
  {
    v9 = *(double *)a2;
  }
  v14 = objc_msgSend(a1, sel_scaledToTargetSize_, v9, v9);

  *(_BYTE *)a3 = 1;
  *(double *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 24) = v7;
  *(_BYTE *)(a3 + 32) = v8;
  *(_QWORD *)(a3 + 40) = v14;
}

double AccountIcon.Size.imageViewSize.getter()
{
  uint64_t v0;
  double v1;
  double result;
  BOOL v3;
  double v4;

  v1 = *(double *)v0;
  if (*(_BYTE *)(v0 + 24) != 1)
    return v1;
  if (!(*(_QWORD *)(v0 + 8) | *(_QWORD *)(v0 + 16) | *(_QWORD *)&v1))
    return 36.0;
  result = 45.0;
  v3 = *(_OWORD *)(v0 + 8) == 0 && *(_QWORD *)&v1 == 2;
  v4 = 80.0;
  if (v3)
    v4 = 60.0;
  if (*(_QWORD *)&v1 != 1 || *(_OWORD *)(v0 + 8) != 0)
    return v4;
  return result;
}

void AccountIcon.init(logo:size:)(id a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  double v9;
  double v10;
  id v11;

  v5 = *(double *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a2 + 24);
  if (v8 == 1)
  {
    if (v7 | v6 | *(_QWORD *)&v5)
    {
      v9 = 80.0;
      if (*(_QWORD *)&v5 == 2 && (v7 | v6) == 0)
        v9 = 60.0;
      if (*(_QWORD *)&v5 == 1 && (v7 | v6) == 0)
        v9 = 45.0;
      v10 = 3.0;
    }
    else
    {
      v10 = 2.0;
      v9 = 36.0;
    }
  }
  else
  {
    v9 = *(double *)a2;
    v10 = *(double *)(a2 + 8);
  }
  v11 = objc_msgSend(a1, sel_scaledToTargetSize_padding_, v9 - v10 - v10, v9 - v10 - v10, v10, v10);

  *(_BYTE *)a3 = 0;
  *(double *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 24) = v7;
  *(_BYTE *)(a3 + 32) = v8;
  *(_QWORD *)(a3 + 40) = v11;
}

double AccountIcon.Size.imageSize.getter()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  BOOL v7;
  double v8;

  v1 = *(double *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v3 = *(_QWORD *)(v0 + 16);
    if (v2 | *(_QWORD *)&v1 | v3)
    {
      v4 = v3 | v2;
      v5 = 3.0;
      v6 = 45.0;
      if (v4)
        v7 = 0;
      else
        v7 = *(_QWORD *)&v1 == 2;
      v8 = 80.0;
      if (v7)
        v8 = 60.0;
      if (*(_QWORD *)&v1 != 1 || v4 != 0)
        v6 = v8;
    }
    else
    {
      v5 = 2.0;
      v6 = 36.0;
    }
  }
  else
  {
    v6 = *(double *)v0;
    v5 = *(double *)(v0 + 8);
  }
  return v6 - v5 - v5;
}

uint64_t AccountIcon.imageStyle.getter()
{
  _BYTE *v0;
  void *v1;
  id v2;
  id v3;

  if ((*v0 & 1) == 0)
  {
    v1 = (void *)objc_opt_self();
    objc_msgSend(v1, sel_whiteColor);
    objc_msgSend(v1, sel_separatorColor);
    v2 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
    objc_msgSend(v2, sel_displayPixel);

    v3 = (id)*MEMORY[0x1E0CD2A68];
  }
  return sub_1BC62AD48();
}

uint64_t AccountIcon.hasBorder.getter()
{
  return sub_1BC398AF8((SEL *)&selRef_systemGrayColor);
}

id AccountIcon.borderColor.getter()
{
  return sub_1BC398B58((SEL *)&selRef_systemGrayColor);
}

uint64_t AccountIcon.hasBackgroundColor.getter()
{
  return sub_1BC398AF8((SEL *)&selRef_whiteColor);
}

uint64_t sub_1BC398AF8(SEL *a1)
{
  _BYTE *v1;
  uint64_t result;

  if ((*v1 & 1) != 0)
    return 0;
  result = (uint64_t)objc_msgSend((id)objc_opt_self(), *a1);
  if (result)
  {

    return 1;
  }
  return result;
}

id AccountIcon.backgroundColor.getter()
{
  return sub_1BC398B58((SEL *)&selRef_whiteColor);
}

id sub_1BC398B58(SEL *a1)
{
  _BYTE *v1;

  if ((*v1 & 1) != 0)
    return 0;
  else
    return objc_msgSend((id)objc_opt_self(), *a1);
}

BOOL AccountIcon.hasInsets.getter()
{
  _BYTE *v0;

  return (*v0 & 1) == 0;
}

void AccountIcon.hash(into:)()
{
  uint64_t v0;
  int v1;
  void *v2;
  id v3;

  v1 = *(unsigned __int8 *)(v0 + 32);
  v2 = *(void **)(v0 + 40);
  sub_1BC62D67C();
  sub_1BC62D67C();
  if (v1 != 1)
  {
    sub_1BC62D6A0();
    sub_1BC62D6A0();
    sub_1BC62D6A0();
  }
  v3 = v2;
  sub_1BC62CEC0();

}

uint64_t AccountIcon.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1BC62D670();
  sub_1BC62D67C();
  sub_1BC62D67C();
  if (v1 != 1)
  {
    sub_1BC62D6A0();
    sub_1BC62D6A0();
    sub_1BC62D6A0();
  }
  sub_1BC62CEC0();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC398DB4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1BC62D67C();
  sub_1BC62D67C();
  if (v1 != 1)
  {
    sub_1BC62D6A0();
    sub_1BC62D6A0();
    sub_1BC62D6A0();
  }
  return sub_1BC62CEC0();
}

uint64_t sub_1BC398E84()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1BC62D670();
  sub_1BC62D67C();
  sub_1BC62D67C();
  if (v1 != 1)
  {
    sub_1BC62D6A0();
    sub_1BC62D6A0();
    sub_1BC62D6A0();
  }
  sub_1BC62CEC0();
  return sub_1BC62D6AC();
}

double AccountIcon.Size.imageInsets.getter()
{
  uint64_t v0;
  double result;

  if (*(_BYTE *)(v0 + 24) != 1)
    return *(double *)(v0 + 8);
  result = 2.0;
  if (*(_QWORD *)(v0 + 8) | *(_QWORD *)v0 | *(_QWORD *)(v0 + 16))
    return 3.0;
  return result;
}

uint64_t _s15HealthRecordsUI11AccountIconV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v13;

  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2)
    return 0;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  if (*((_BYTE *)a1 + 32) != 1)
  {
    if (((_BYTE)a2[4] & 1) != 0)
      return 0;
    v10 = v2 == v5 && v3 == v6;
    if (!v10 || v4 != v7)
      return 0;
    goto LABEL_22;
  }
  v8 = *(_QWORD *)&v4 | *(_QWORD *)&v3;
  if (!(v8 | *(_QWORD *)&v2))
  {
    if (!*((_BYTE *)a2 + 32) || *(_QWORD *)&v7 | *(_QWORD *)&v6 | *(_QWORD *)&v5)
      return 0;
    goto LABEL_22;
  }
  if (*(_QWORD *)&v2 != 1 || v8)
  {
    if (*(_QWORD *)&v2 == 2 && !v8)
    {
      if (!*((_BYTE *)a2 + 32))
        return 0;
      v9 = *(_QWORD *)&v7 | *(_QWORD *)&v6;
      if (!(v9 | *(_QWORD *)&v5) || *(_QWORD *)&v5 == 1 && !v9)
        return 0;
      if (*(_QWORD *)&v5 != 2)
        return 0;
      goto LABEL_9;
    }
    if (((_BYTE)a2[4] & 1) == 0)
      return 0;
    v13 = *(_QWORD *)&v7 | *(_QWORD *)&v6;
    if (!(v13 | *(_QWORD *)&v5) || (unint64_t)(*(_QWORD *)&v5 - 1) <= 1 && !v13)
      return 0;
LABEL_22:
    sub_1BC3996E4();
    return sub_1BC62CEB4() & 1;
  }
  if (!*((_BYTE *)a2 + 32))
    return 0;
  v9 = *(_QWORD *)&v7 | *(_QWORD *)&v6;
  if (!(v9 | *(_QWORD *)&v5) || *(_QWORD *)&v5 != 1)
    return 0;
LABEL_9:
  if (!v9)
    goto LABEL_22;
  return 0;
}

uint64_t _s15HealthRecordsUI11AccountIconV4SizeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;

  v2 = *(double *)a1;
  v3 = *(double *)(a1 + 8);
  v4 = *(double *)(a1 + 16);
  v5 = *(double *)a2;
  v6 = *(double *)(a2 + 8);
  v7 = *(double *)(a2 + 16);
  if (*(_BYTE *)(a1 + 24) != 1)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
      return 0;
    if (v2 == v5 && v3 == v6)
      return v4 == v7;
    return 0;
  }
  v8 = *(_QWORD *)&v4 | *(_QWORD *)&v3;
  if (!(v8 | *(_QWORD *)&v2))
  {
    if (*(_BYTE *)(a2 + 24))
      return (*(_QWORD *)&v7 | *(_QWORD *)&v6 | *(_QWORD *)&v5) == 0;
    return 0;
  }
  if (*(_QWORD *)&v2 == 1 && v8 == 0)
  {
    if (*(_BYTE *)(a2 + 24))
    {
      v15 = *(_QWORD *)&v7 | *(_QWORD *)&v6;
      if (v15 | *(_QWORD *)&v5)
      {
        if (*(_QWORD *)&v5 == 1 && !v15)
          return 1;
      }
    }
    return 0;
  }
  if (*(_QWORD *)&v2 != 2 || v8 != 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v11 = *(_QWORD *)&v7 | *(_QWORD *)&v6;
      if (v11 | *(_QWORD *)&v5)
      {
        if (*(_QWORD *)&v5 != 1 || v11)
          return *(_QWORD *)&v5 != 2 || v11 != 0;
      }
    }
    return 0;
  }
  if (!*(_BYTE *)(a2 + 24))
    return 0;
  v16 = *(_QWORD *)&v7 | *(_QWORD *)&v6;
  if (!(v16 | *(_QWORD *)&v5) || *(_QWORD *)&v5 == 1 && !v16)
    return 0;
  return *(_QWORD *)&v5 == 2 && v16 == 0;
}

unint64_t sub_1BC399254()
{
  unint64_t result;

  result = qword_1EF42B2B0;
  if (!qword_1EF42B2B0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for AccountIcon.Kind, &type metadata for AccountIcon.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF42B2B0);
  }
  return result;
}

unint64_t sub_1BC39929C()
{
  unint64_t result;

  result = qword_1ED6A4168[0];
  if (!qword_1ED6A4168[0])
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for AccountIcon.Size, &type metadata for AccountIcon.Size);
    atomic_store(result, qword_1ED6A4168);
  }
  return result;
}

unint64_t sub_1BC3992E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42B2B8;
  if (!qword_1EF42B2B8)
  {
    sub_1BC39932C();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42B2B8);
  }
  return result;
}

void sub_1BC39932C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42B2C0)
  {
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42B2C0);
  }
}

unint64_t sub_1BC399384()
{
  unint64_t result;

  result = qword_1EF42B2C8;
  if (!qword_1EF42B2C8)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for AccountIcon, &type metadata for AccountIcon);
    atomic_store(result, (unint64_t *)&qword_1EF42B2C8);
  }
  return result;
}

void destroy for AccountIcon(uint64_t a1)
{

}

uint64_t initializeWithCopy for AccountIcon(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  v3 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v3;
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for AccountIcon(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(_OWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 40);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  v6 = v4;

  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AccountIcon(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  v3 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for AccountIcon(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountIcon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountIcon()
{
  return &type metadata for AccountIcon;
}

uint64_t storeEnumTagSinglePayload for AccountIcon.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC3995AC + 4 * byte_1BC63AB69[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC3995E0 + 4 * byte_1BC63AB64[v4]))();
}

uint64_t sub_1BC3995E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC3995E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC3995F0);
  return result;
}

uint64_t sub_1BC3995FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC399604);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC399608(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC399610(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountIcon.Kind()
{
  return &type metadata for AccountIcon.Kind;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AccountIcon.Size(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AccountIcon.Size(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

uint64_t sub_1BC399694(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BC3996B0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    *(_BYTE *)(result + 24) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountIcon.Size()
{
  return &type metadata for AccountIcon.Size;
}

unint64_t sub_1BC3996E4()
{
  unint64_t result;

  result = qword_1ED6A4E60;
  if (!qword_1ED6A4E60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A4E60);
  }
  return result;
}

BOOL sub_1BC399720(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BC399734()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  if (!*(_BYTE *)(v0 + *(int *)(v1 + 28)))
  {
    if (qword_1ED6A4888 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (*(_BYTE *)(v0 + *(int *)(v1 + 28)) == 1)
  {
    if (qword_1ED6A4888 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (qword_1ED6A4888 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1BC3998F4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  if (!*(_BYTE *)(v0 + *(int *)(v1 + 28)))
  {
    if (qword_1ED6A4888 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (*(_BYTE *)(v0 + *(int *)(v1 + 28)) == 1)
  {
    if (qword_1ED6A4888 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (qword_1ED6A4888 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v3;
}

int *AccountStatusSummaryTileFeedItemViewData.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  void (*v25)(uint64_t);
  void (*v26)(uint64_t);
  char v27;
  void (*v28)(char *, uint64_t);
  void (*v29)(uint64_t);
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *result;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  int *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = a2;
  v3 = sub_1BC62A7B4();
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  MEMORY[0x1E0C80A78](v3);
  v46 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62B918();
  v6 = (void (*)(uint64_t))MEMORY[0x1E0D2EDE0];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC399EBC();
  v11 = v10;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1ED6A3D50, v6);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v44 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v44 - v21;
  v45 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
  sub_1BC399F2C(a1 + v45[9], (uint64_t)v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v19, *MEMORY[0x1E0D2EDC0], v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v5);
  v23 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1BC399F2C((uint64_t)v22, (uint64_t)v13);
  sub_1BC399F2C((uint64_t)v19, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v24((uint64_t)v13, 1, v5) != 1)
  {
    sub_1BC399F2C((uint64_t)v13, (uint64_t)v16);
    if (v24(v23, 1, v5) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v23, v5);
      sub_1BC399FBC();
      v27 = sub_1BC62C644();
      v28 = *(void (**)(char *, uint64_t))(v7 + 8);
      v28(v9, v5);
      v29 = (void (*)(uint64_t))MEMORY[0x1E0D2EDE0];
      sub_1BC384EB4((uint64_t)v19, &qword_1ED6A3D50, (void (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
      sub_1BC384EB4((uint64_t)v22, &qword_1ED6A3D50, v29);
      v28(v16, v5);
      sub_1BC384EB4((uint64_t)v13, &qword_1ED6A3D50, v29);
      if ((v27 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v30 = 0;
      goto LABEL_10;
    }
    v26 = (void (*)(uint64_t))MEMORY[0x1E0D2EDE0];
    sub_1BC384EB4((uint64_t)v19, &qword_1ED6A3D50, (void (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
    sub_1BC384EB4((uint64_t)v22, &qword_1ED6A3D50, v26);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v5);
LABEL_6:
    sub_1BC348D78((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC399EBC);
    goto LABEL_9;
  }
  v25 = (void (*)(uint64_t))MEMORY[0x1E0D2EDE0];
  sub_1BC384EB4((uint64_t)v19, &qword_1ED6A3D50, (void (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
  sub_1BC384EB4((uint64_t)v22, &qword_1ED6A3D50, v25);
  if (v24(v23, 1, v5) != 1)
    goto LABEL_6;
  sub_1BC384EB4((uint64_t)v13, &qword_1ED6A3D50, (void (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
LABEL_8:
  v30 = 2;
LABEL_10:
  v32 = v46;
  v31 = v47;
  v33 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, a1, v48);
  v34 = v45[7];
  v35 = (uint64_t *)(a1 + v45[6]);
  v37 = *v35;
  v36 = v35[1];
  v39 = *(_QWORD *)(a1 + v34);
  v38 = *(_QWORD *)(a1 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC348D78(a1, (uint64_t (*)(_QWORD))type metadata accessor for AccountStatusSummaryTileFeedItemData);
  v40 = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v49, v32, v33);
  result = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  v42 = (_QWORD *)(v40 + result[5]);
  *v42 = v37;
  v42[1] = v36;
  v43 = (_QWORD *)(v40 + result[6]);
  *v43 = v39;
  v43[1] = v38;
  *(_BYTE *)(v40 + result[7]) = v30;
  return result;
}

void sub_1BC399EBC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42B2D0)
  {
    sub_1BC384E68(255, &qword_1ED6A3D50, (void (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42B2D0);
  }
}

uint64_t sub_1BC399F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC384E68(0, &qword_1ED6A3D50, (void (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AccountStatusSummaryTileFeedItemViewData()
{
  uint64_t result;

  result = qword_1ED6A3A88;
  if (!qword_1ED6A3A88)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BC399FBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42B2D8;
  if (!qword_1EF42B2D8)
  {
    v1 = sub_1BC62B918();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D2EE00], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42B2D8);
  }
  return result;
}

uint64_t AccountStatusSummaryTileFeedItemViewData.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  sub_1BC384E68(0, &qword_1EF42B2E0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemData);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - v5;
  v7 = type metadata accessor for AccountStatusSummaryTileFeedItemData();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - v12;
  v14 = a1;
  AccountStatusSummaryTileFeedItemData.init(_:)(v14, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {

    sub_1BC384EB4((uint64_t)v6, &qword_1EF42B2E0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemData);
    v15 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
  else
  {
    sub_1BC39A198((uint64_t)v6, (uint64_t)v13);
    sub_1BC39A1DC((uint64_t)v13, (uint64_t)v10);
    AccountStatusSummaryTileFeedItemViewData.init(_:)((uint64_t)v10, a2);

    sub_1BC348D78((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for AccountStatusSummaryTileFeedItemData);
    v17 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 0, 1, v17);
  }
}

uint64_t sub_1BC39A198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccountStatusSummaryTileFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC39A1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccountStatusSummaryTileFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for AccountStatusSummaryTileFeedItemViewData(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC62A7B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AccountStatusSummaryTileFeedItemViewData(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AccountStatusSummaryTileFeedItemViewData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountStatusSummaryTileFeedItemViewData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for AccountStatusSummaryTileFeedItemViewData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for AccountStatusSummaryTileFeedItemViewData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountStatusSummaryTileFeedItemViewData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC39A580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountStatusSummaryTileFeedItemViewData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC39A60C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC62A7B4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1BC39A688()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RecordRangeView.InRangeContext(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountStatusSummaryTileFeedItemViewData.Action(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC39A7E0 + 4 * byte_1BC63AD35[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC39A814 + 4 * byte_1BC63AD30[v4]))();
}

uint64_t sub_1BC39A814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC39A81C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC39A824);
  return result;
}

uint64_t sub_1BC39A830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC39A838);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC39A83C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC39A844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1BC39A850(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AccountStatusSummaryTileFeedItemViewData.Action()
{
  return &type metadata for AccountStatusSummaryTileFeedItemViewData.Action;
}

unint64_t sub_1BC39A86C()
{
  unint64_t result;

  result = qword_1EF42B2E8;
  if (!qword_1EF42B2E8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63ADE8, &type metadata for AccountStatusSummaryTileFeedItemViewData.Action);
    atomic_store(result, (unint64_t *)&qword_1EF42B2E8);
  }
  return result;
}

uint64_t HKTimeScope.dateFormat.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return 9;
  else
    return qword_1BC63AE18[a1 - 1];
}

uint64_t HKTimeScope.hasTime.getter(unint64_t a1)
{
  return (a1 > 4) | (9u >> a1) & 1;
}

void HKTimeScope.bucketingDate(for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  void *v53;
  void *v54;
  id v55;
  char *v56;
  void *v57;
  id v58;
  char *v59;
  void *v60;
  void *v61;
  id v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  void *v70;
  void *v71;
  id v72;
  void *v73;
  id v74;
  void *v75;
  void *v76;
  id v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  char *v84;
  uint64_t v85;
  void *v86;
  void *v87;
  id v88;
  void *v89;
  id v90;
  char *v91;
  void *v92;
  void *v93;
  id v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v105 = a3;
  v106 = a1;
  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v4);
  v103 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v102 = (char *)&v97 - v7;
  MEMORY[0x1E0C80A78](v8);
  v101 = (char *)&v97 - v9;
  MEMORY[0x1E0C80A78](v10);
  v100 = (char *)&v97 - v11;
  v12 = sub_1BC62A760();
  v107 = *(_QWORD *)(v12 - 8);
  v108 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v97 - v16;
  MEMORY[0x1E0C80A78](v18);
  v99 = (char *)&v97 - v19;
  MEMORY[0x1E0C80A78](v20);
  v98 = (char *)&v97 - v21;
  MEMORY[0x1E0C80A78](v22);
  v97 = (char *)&v97 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v97 - v25;
  MEMORY[0x1E0C80A78](v27);
  v104 = (char *)&v97 - v28;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v97 - v30;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v97 - v33;
  v35 = sub_1BC62A8D4();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v97 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A8A4();
  v39 = (void *)sub_1BC62A868();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  switch(a2)
  {
    case 1:
      v70 = (void *)sub_1BC62A700();
      v71 = v39;
      v72 = objc_msgSend(v39, sel_hk_startOfYearForDate_addingYears_, v70, 0);

      sub_1BC62A724();
      v73 = (void *)sub_1BC62A700();
      v74 = objc_msgSend(v71, sel_hk_startOfYearForDate_addingYears_, v73, 1);

      sub_1BC62A724();
      v75 = (void *)sub_1BC62A700();
      v76 = (void *)sub_1BC62A700();
      v77 = (id)HKUIMidDate();

      v46 = (_QWORD *)v107;
      if (!v77)
        goto LABEL_22;
      v78 = v104;
      sub_1BC62A724();

      v64 = (void (*)(char *, char *, uint64_t))v46[4];
      v79 = v100;
      v80 = v78;
      v81 = v108;
      v64(v100, v80, v108);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v46[7])(v79, 0, 1, v81);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v46[6])(v79, 1, v81) == 1)
        goto LABEL_23;

      v82 = (void (*)(char *, uint64_t))v46[1];
      v82(v31, v81);
      v82(v34, v81);
      v83 = v105;
      v84 = v79;
      v85 = v81;
      goto LABEL_16;
    case 2:
      v86 = (void *)sub_1BC62A700();
      v87 = v39;
      v88 = objc_msgSend(v39, sel_hk_startOfMonthForDate_, v86);

      sub_1BC62A724();
      v89 = (void *)sub_1BC62A700();
      v90 = objc_msgSend(v39, sel_hk_startOfMonthForDate_addingMonths_, v89, 1);

      v91 = v97;
      sub_1BC62A724();

      v92 = (void *)sub_1BC62A700();
      v93 = (void *)sub_1BC62A700();
      v94 = (id)HKUIMidDate();

      v46 = (_QWORD *)v107;
      if (!v94)
        goto LABEL_24;
      v95 = v104;
      sub_1BC62A724();

      v64 = (void (*)(char *, char *, uint64_t))v46[4];
      v65 = v101;
      v96 = v95;
      v67 = v108;
      v64(v101, v96, v108);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v46[7])(v65, 0, 1, v67);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v46[6])(v65, 1, v67) == 1)
        goto LABEL_25;

      v68 = (void (*)(char *, uint64_t))v46[1];
      v68(v91, v67);
      v69 = v26;
      goto LABEL_15;
    case 3:
      v53 = (void *)sub_1BC62A700();
      v54 = v39;
      v55 = objc_msgSend(v39, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, 0, v53, 0);

      v56 = v98;
      sub_1BC62A724();

      v57 = (void *)sub_1BC62A700();
      v58 = objc_msgSend(v39, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, 0, v57, 1);

      v59 = v99;
      sub_1BC62A724();

      v60 = (void *)sub_1BC62A700();
      v61 = (void *)sub_1BC62A700();
      v62 = (id)HKUIMidDate();

      v46 = (_QWORD *)v107;
      if (!v62)
        goto LABEL_20;
      v63 = v104;
      sub_1BC62A724();

      v64 = (void (*)(char *, char *, uint64_t))v46[4];
      v65 = v102;
      v66 = v63;
      v67 = v108;
      v64(v102, v66, v108);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v46[7])(v65, 0, 1, v67);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v46[6])(v65, 1, v67) == 1)
        goto LABEL_21;

      v68 = (void (*)(char *, uint64_t))v46[1];
      v68(v59, v67);
      v69 = v56;
LABEL_15:
      v68(v69, v67);
      v83 = v105;
      v84 = v65;
      v85 = v67;
LABEL_16:
      v64(v83, v84, v85);
      return;
    case 4:
    case 5:
      v40 = (void *)sub_1BC62A700();
      v41 = objc_msgSend(v39, sel_hk_startOfDateByAddingDays_toDate_, 0, v40);

      sub_1BC62A724();
      v42 = (void *)sub_1BC62A700();
      v43 = objc_msgSend(v39, sel_hk_startOfDateByAddingDays_toDate_, 1, v42);

      sub_1BC62A724();
      v44 = (void *)sub_1BC62A700();
      v45 = (void *)sub_1BC62A700();
      v46 = (id)HKUIMidDate();

      v47 = v107;
      if (!v46)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56))(v103, 1, 1, v108);
LABEL_19:
        __break(1u);
LABEL_20:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v46[7])(v102, 1, 1, v108);
LABEL_21:
        __break(1u);
LABEL_22:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v46[7])(v100, 1, 1, v108);
LABEL_23:
        __break(1u);
LABEL_24:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v46[7])(v101, 1, 1, v108);
LABEL_25:
        __break(1u);
        JUMPOUT(0x1BC39B160);
      }
      v48 = v104;
      sub_1BC62A724();

      v46 = *(_QWORD **)(v47 + 32);
      v49 = v103;
      v50 = v48;
      v51 = v108;
      ((void (*)(char *, char *, uint64_t))v46)(v103, v50, v108);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v51);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v49, 1, v51) == 1)
        goto LABEL_19;

      v52 = *(void (**)(char *, uint64_t))(v47 + 8);
      v52(v14, v51);
      v52(v17, v51);
      ((void (*)(char *, char *, uint64_t))v46)(v105, v49, v51);
      return;
    default:
      (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v105, v106, v108);

      return;
  }
}

id HKTimeScope.bucketDateRangeString(from:)(uint64_t a1, uint64_t a2)
{
  id v2;
  id result;
  void *v4;
  id v5;
  uint64_t v6;

  if ((unint64_t)(a2 - 3) < 3)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_hk_monthDayYearIntervalFormatter);
    if (v2)
      goto LABEL_11;
    __break(1u);
  }
  if (a2 == 2)
    goto LABEL_8;
  if (a2 == 1)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_hk_yearIntervalFormatter);
    if (v2)
      goto LABEL_11;
    __break(1u);
LABEL_8:
    v2 = objc_msgSend((id)objc_opt_self(), sel_hk_monthIntervalFormatter);
    if (v2)
      goto LABEL_11;
    __break(1u);
  }
  result = objc_msgSend((id)objc_opt_self(), sel_hk_hourDateIntervalFormatter);
  v2 = result;
  if (!result)
  {
    __break(1u);
    return result;
  }
LABEL_11:
  v4 = (void *)sub_1BC62A2D4();
  v5 = objc_msgSend(v2, sel_stringFromDateInterval_, v4);

  if (v5)
  {
    v6 = sub_1BC62C680();

  }
  else
  {

    return 0;
  }
  return (id)v6;
}

void static TapToRadarManager.presentTapToRadarDialogue(from:)(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *);
  void *v21;
  void *v22;
  uint64_t v23;

  if (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
  {
    v3 = (void *)sub_1BC62C650();
    v4 = (void *)sub_1BC62C650();
    v5 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v3, v4, 1);

    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 24) = v1;
    v7 = a1;
    v8 = (void *)sub_1BC62C650();
    v22 = sub_1BC39BCEC;
    v23 = v6;
    v9 = MEMORY[0x1E0C809B0];
    v18 = MEMORY[0x1E0C809B0];
    v19 = 1107296256;
    v20 = sub_1BC39B5A0;
    v21 = &block_descriptor_11;
    v10 = _Block_copy(&v18);
    swift_release();
    v11 = (void *)objc_opt_self();
    v12 = objc_msgSend(v11, sel_actionWithTitle_style_handler_, v8, 0, v10);
    _Block_release(v10);

    v13 = (void *)sub_1BC62C650();
    v22 = sub_1BC39B7A4;
    v23 = 0;
    v18 = v9;
    v19 = 1107296256;
    v20 = sub_1BC39B5A0;
    v21 = &block_descriptor_3_0;
    v14 = _Block_copy(&v18);
    swift_release();
    v15 = objc_msgSend(v11, sel_actionWithTitle_style_handler_, v13, 0, v14);
    _Block_release(v14);

    objc_msgSend(v5, sel_addAction_, v12);
    objc_msgSend(v5, sel_addAction_, v15);
    v16 = (void *)sub_1BC62C650();
    v17 = objc_msgSend(v11, sel_actionWithTitle_style_handler_, v16, 1, 0);

    objc_msgSend(v5, sel_addAction_, v17);
    objc_msgSend(v7, sel_presentViewController_animated_completion_, v5, 1, 0);

  }
}

void sub_1BC39B5A0(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1BC39B5F0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v10[6];

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  v6 = objc_allocWithZone((Class)WDAppleInternalConsentViewController);
  v10[4] = sub_1BC39BDC0;
  v10[5] = v5;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1BC39BAC4;
  v10[3] = &block_descriptor_9_1;
  v7 = _Block_copy(v10);
  v8 = a2;
  v9 = objc_msgSend(v6, sel_initWithPresentingViewController_completionBlock_, v8, v7);
  _Block_release(v7);
  swift_release();
  objc_msgSend(v8, sel_presentViewController_animated_completion_, v9, 1, 0);

}

void sub_1BC39B6E4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v8[6];

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a3;
  *(_QWORD *)(v5 + 24) = a2;
  v8[4] = sub_1BC39BDEC;
  v8[5] = v5;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1BC39BE70;
  v8[3] = &block_descriptor_15;
  v6 = _Block_copy(v8);
  v7 = a2;
  swift_release();
  objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, v6);
  _Block_release(v6);
}

uint64_t sub_1BC39B7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v13;

  v0 = sub_1BC62A604();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_1BC62C650();
  v6 = (void *)sub_1BC62C650();
  v7 = objc_msgSend(v4, sel_hk_tapToHealthRadarURLForComponent_title_description_classification_reproducibility_keywords_autoDiagnostics_attachments_, 938492, v5, v6, 0, 0, 0, 2, 0);

  sub_1BC62A5BC();
  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v8)
  {
    v9 = v8;
    v10 = (void *)sub_1BC62A598();
    sub_1BC35BF10(MEMORY[0x1E0DEE9D8]);
    v11 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_openSensitiveURL_withOptions_, v10, v11);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

id TapToRadarManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id TapToRadarManager.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TapToRadarManager();
  return objc_msgSendSuper2(&v2, sel_init);
}

id TapToRadarManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TapToRadarManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC39BA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  _OWORD v7[2];

  if (a3)
  {
    swift_unknownObjectRetain();
    sub_1BC62D088();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  v5 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v7, a4);
  sub_1BC39BD2C((uint64_t)v7);
  return v5;
}

uint64_t sub_1BC39BAC4(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0(uint64_t a1, uint64_t a2)
{
  id v4;
  unsigned __int8 v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[3];
  uint64_t v17;

  if (!objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
    return 0;
  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v5 = objc_msgSend(v4, sel_BOOLForKey_, *MEMORY[0x1E0CB7708]);

  if ((v5 & 1) != 0)
    return 0;
  v7 = (void *)sub_1BC62C650();
  v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v7);

  sub_1BC39BE10(a1, (uint64_t)v16);
  v9 = v17;
  if (v17)
  {
    v10 = __swift_project_boxed_opaque_existential_1Tm(v16, v17);
    v11 = *(_QWORD *)(v9 - 8);
    MEMORY[0x1E0C80A78](v10);
    v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    v14 = sub_1BC62D568();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  }
  else
  {
    v14 = 0;
  }
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithImage_style_target_action_, v8, 0, v14, a2);
  swift_unknownObjectRelease();

  return v6;
}

uint64_t sub_1BC39BCC8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC39BCEC(uint64_t a1)
{
  uint64_t v1;

  sub_1BC39B5F0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t type metadata accessor for TapToRadarManager()
{
  return objc_opt_self();
}

uint64_t sub_1BC39BD2C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC39BD68();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC39BD68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4840)
  {
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4840);
  }
}

void sub_1BC39BDC0(uint64_t a1)
{
  uint64_t v1;

  sub_1BC39B6E4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC39BDC8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC39BDEC()
{
  uint64_t v0;

  return static TapToRadarManager.presentTapToRadarDialogue(from:)(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC39BE10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC39BD68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC39BE70(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t SyncTaskScheduler.schedule(task:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1BC39BEC0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OS_dispatch_queue.schedule(task:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD v15[2];
  _QWORD aBlock[6];

  v4 = sub_1BC62C47C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62C4AC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_12;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1BC62C494();
  v15[1] = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, v5, MEMORY[0x1E0DEF510]);
  sub_1BC370738();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_1BC39C0C0(uint64_t a1, uint64_t a2)
{
  return OS_dispatch_queue.schedule(task:)(a1, a2);
}

void NSOperationQueue.schedule(task:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD v6[6];

  v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1BC39BE70;
  v6[3] = &block_descriptor_3_1;
  v3 = _Block_copy(v6);
  v4 = (void *)objc_opt_self();
  swift_retain();
  v5 = objc_msgSend(v4, sel_blockOperationWithBlock_, v3);
  _Block_release(v3);
  swift_release();
  objc_msgSend(v2, sel_addOperation_, v5);

}

void sub_1BC39C1A8(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[6];

  v3 = *v2;
  v7[4] = a1;
  v7[5] = a2;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1BC39BE70;
  v7[3] = &block_descriptor_6_0;
  v4 = _Block_copy(v7);
  v5 = (void *)objc_opt_self();
  swift_retain();
  v6 = objc_msgSend(v5, sel_blockOperationWithBlock_, v4);
  _Block_release(v4);
  swift_release();
  objc_msgSend(v3, sel_addOperation_, v6);

}

uint64_t dispatch thunk of TaskScheduler.schedule(task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for SyncTaskScheduler()
{
  return &type metadata for SyncTaskScheduler;
}

id DiagnosticTestResultFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store);
}

uint64_t DiagnosticTestResultFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context);
}

id DiagnosticTestResultFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id DiagnosticTestResultFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for DiagnosticTestResultFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for DiagnosticTestResultFormatter()
{
  return objc_opt_self();
}

uint64_t sub_1BC39C388(void *a1)
{
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context) < 2uLL)
    return sub_1BC39C3D8(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC39C3D8(void *a1)
{
  uint64_t inited;
  unint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v39;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B398, (uint64_t (*)(uint64_t))sub_1BC39CBC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC63AF10;
  *(_QWORD *)(inited + 32) = sub_1BC61F7D8(a1);
  v3 = sub_1BC39CBE4();
  v4 = a1;
  v5 = objc_msgSend(v4, sel_effectiveStartDate);
  v6 = objc_msgSend(v4, sel_effectiveEndDate);

  v7 = objc_msgSend(v4, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  *(_QWORD *)(inited + 40) = sub_1BC4AA4A0(v5, v6, sub_1BC5A0780, 0, sub_1BC5A0780, 0, v8, v10, v3);
  *(_QWORD *)(inited + 48) = sub_1BC50F438(v4);
  v11 = v4;
  v12 = sub_1BC506E48(v11);

  v13 = Array<A>.newlineJoined.getter(v12);
  v15 = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = sub_1BC4A8B00(v13, v15);
  *(_QWORD *)(inited + 64) = sub_1BC4BEAD8(v11);
  *(_QWORD *)(inited + 72) = sub_1BC39CC20(v11);
  v16 = objc_msgSend(v11, sel_performers);
  if (v16)
  {
    v17 = sub_1BC62C878();

    v16 = (id)Array<A>.newlineJoined.getter(v17);
    v19 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  *(_QWORD *)(inited + 80) = sub_1BC4A8CD4((uint64_t)v16, v19);
  *(_QWORD *)(inited + 88) = sub_1BC39CE00(v11);
  *(_QWORD *)(inited + 96) = sub_1BC546064(v11);
  sub_1BC62C890();
  v39 = MEMORY[0x1E0DEE9D8];
  v20 = *(void **)(inited + 32);
  if (v20)
  {
    v21 = v20;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v22 = *(void **)(inited + 40);
  if (v22)
  {
    v23 = v22;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v24 = *(void **)(inited + 48);
  if (v24)
  {
    v25 = v24;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v26 = *(void **)(inited + 56);
  if (v26)
  {
    v27 = v26;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v28 = *(void **)(inited + 64);
  if (v28)
  {
    v29 = v28;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v30 = *(void **)(inited + 72);
  if (v30)
  {
    v31 = v30;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v32 = *(void **)(inited + 80);
  if (v32)
  {
    v33 = v32;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v34 = *(void **)(inited + 88);
  if (v34)
  {
    v35 = v34;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v36 = *(void **)(inited + 96);
  if (v36)
  {
    v37 = v36;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  swift_bridgeObjectRelease();
  return v39;
}

id DiagnosticTestResultFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DiagnosticTestResultFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DiagnosticTestResultFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiagnosticTestResultFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC39CA38()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store);
}

uint64_t sub_1BC39CA4C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context);
}

id sub_1BC39CA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for DiagnosticTestResultFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1BC39CAD0(void *a1)
{
  _QWORD *v1;
  uint64_t result;

  if (*(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context) < 2uLL)
    return sub_1BC39C3D8(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

unint64_t sub_1BC39CB30(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC39CB54();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC39CB54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42B368;
  if (!qword_1EF42B368)
  {
    v1 = type metadata accessor for DiagnosticTestResultFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42B368);
  }
  return result;
}

uint64_t method lookup function for DiagnosticTestResultFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DiagnosticTestResultFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DiagnosticTestResultFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

void sub_1BC39CBC8(uint64_t a1)
{
  sub_1BC357158(a1, &qword_1EF42B3A0, (uint64_t (*)(uint64_t))sub_1BC39CBE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BC39CBE4()
{
  unint64_t result;

  result = qword_1EF4299F0;
  if (!qword_1EF4299F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF4299F0);
  }
  return result;
}

id sub_1BC39CC20(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v1 = a1;
  v2 = sub_1BC506E60(v1);
  v4 = v3;

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v7 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1BC39CE00(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;

  v1 = objc_msgSend(a1, sel_comments);
  if (v1)
  {
    v2 = sub_1BC62C680();
    v4 = v3;

    v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v5 = v2 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v6 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v7 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

uint64_t type metadata accessor for InternalConceptsFeedViewController()
{
  uint64_t result;

  result = qword_1EF42B3A8;
  if (!qword_1EF42B3A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC39D034()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1BC39D070@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t result;
  _BYTE v10[40];

  v3 = *(void **)(v1 + qword_1EF42C0D0);
  v4 = *(id *)(v1 + qword_1EF42C0D8);
  v5 = objc_msgSend(v3, sel_healthStore);
  v6 = objc_msgSend(v5, sel_profileIdentifier);

  sub_1BC62CB90();
  v7 = type metadata accessor for ConceptListViewDataSourceProvider();
  swift_allocObject();
  v8 = ConceptListViewDataSourceProvider.init(categoryPredicate:sourceProfile:store:)(v4, v6, (uint64_t)v10);
  a1[3] = v7;
  result = sub_1BC39D188();
  a1[4] = result;
  *a1 = v8;
  return result;
}

id sub_1BC39D14C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalConceptsFeedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC39D180()
{
  return type metadata accessor for InternalConceptsFeedViewController();
}

unint64_t sub_1BC39D188()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42B3F8;
  if (!qword_1EF42B3F8)
  {
    v1 = type metadata accessor for ConceptListViewDataSourceProvider();
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for ConceptListViewDataSourceProvider, v1);
    atomic_store(result, (unint64_t *)&qword_1EF42B3F8);
  }
  return result;
}

id static NSUserDefaults.minimumNumberOfLabsForFrequentCollection.getter()
{
  return sub_1BC39D250(0xD00000000000002FLL, 0x80000001BC654640, 3);
}

id static NSUserDefaults.numberOfMonthsForFrequentLabCutoff.getter()
{
  return sub_1BC39D250(0xD000000000000029, 0x80000001BC654670, 3);
}

id static NSUserDefaults.shouldForceAllConceptsLowUtility.getter()
{
  return sub_1BC39D35C(0xD000000000000026, 0x80000001BC6546A0, 0);
}

id static NSUserDefaults.alwaysShowHighlights.getter()
{
  return sub_1BC39D35C(0xD000000000000017, 0x80000001BC6546D0, 0);
}

id sub_1BC39D250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result;
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  unsigned int v9;
  void *v10;
  void *v11;
  id v12;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v6
      && (sub_1BC39D460(),
          v7 = (void *)sub_1BC62CB00(),
          v8 = (void *)sub_1BC62C650(),
          v9 = objc_msgSend(v7, sel_hk_keyExists_, v8),
          v7,
          v8,
          v9))
    {
      v10 = (void *)sub_1BC62CB00();
      v11 = (void *)sub_1BC62C650();
      v12 = objc_msgSend(v10, sel_integerForKey_, v11);

      return v12;
    }
    else
    {
      return (id)a3;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BC39D35C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  id result;
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  unsigned int v9;
  void *v10;
  void *v11;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v6)
    {
      sub_1BC39D460();
      v7 = (void *)sub_1BC62CB00();
      v8 = (void *)sub_1BC62C650();
      v9 = objc_msgSend(v7, sel_hk_keyExists_, v8);

      if (v9)
      {
        v10 = (void *)sub_1BC62CB00();
        v11 = (void *)sub_1BC62C650();
        a3 = objc_msgSend(v10, sel_BOOLForKey_, v11);

      }
    }
    return (id)(a3 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1BC39D460()
{
  unint64_t result;

  result = qword_1ED6A36D8;
  if (!qword_1ED6A36D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A36D8);
  }
  return result;
}

uint64_t type metadata accessor for SignedClinicalDataStatusDataSource(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF42B418);
}

uint64_t sub_1BC39D4B0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC39D508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v10;

  v0 = sub_1BC62B3C0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - v5;
  sub_1BC62B330();
  sub_1BC62B324();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  v8 = sub_1BC62B3B4();
  v7(v6, v0);
  return v8;
}

uint64_t sub_1BC39D5CC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v4[6] = a4;
  v4[7] = *a4;
  v5 = sub_1BC62BB34();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[11] = v6;
  *v6 = v4;
  v6[1] = sub_1BC39D648;
  return sub_1BC39D9F8();
}

uint64_t sub_1BC39D648()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC39D6AC()
{
  uint64_t v0;

  sub_1BC62C944();
  *(_QWORD *)(v0 + 104) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC39D714()
{
  uint64_t v0;

  swift_release();
  sub_1BC39E344();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC39D754()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = (void *)v0[12];
  sub_1BC62BAF8();
  v3 = v2;
  swift_retain();
  v4 = v2;
  swift_retain();
  v5 = sub_1BC62BB28();
  v6 = sub_1BC62CAC4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (void *)v0[12];
    v21 = v0[9];
    v8 = v0[7];
    v22 = v0[8];
    v23 = v0[10];
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v24 = v10;
    *(_DWORD *)v9 = 136315394;
    v0[2] = v8;
    swift_getMetatypeMetadata();
    v11 = sub_1BC62C6E0();
    v0[3] = sub_1BC4991F0(v11, v12, &v24);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    v0[4] = v7;
    v13 = v7;
    sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
    v14 = sub_1BC62C6E0();
    v0[5] = sub_1BC4991F0(v14, v15, &v24);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v5, v6, "%s: Failed to generate QR images, error: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v10, -1, -1);
    MEMORY[0x1BCCF36A8](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    v16 = (void *)v0[12];
    v18 = v1[9];
    v17 = v1[10];
    v19 = v1[8];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1BC39D9F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1[8] = v0;
  v1[9] = *v0;
  v2 = sub_1BC62BB34();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC39DA9C()
{
  _QWORD *v0;
  char *v1;
  void **v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  char *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t (*v45)(void);
  id v46;
  void *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];

  v52[1] = *MEMORY[0x1E0C80C00];
  v1 = *(char **)(v0[8] + qword_1EF42B410);
  v0[14] = v1;
  if (!v1)
  {
    sub_1BC62BAF8();
    swift_retain_n();
    v18 = sub_1BC62BB28();
    v19 = sub_1BC62CADC();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[11];
    v21 = v0[12];
    v23 = v0[10];
    if (!v20)
    {
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      goto LABEL_18;
    }
    v51 = v0[12];
    v24 = v0[9];
    v50 = v0[10];
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v52[0] = v26;
    *(_DWORD *)v25 = 136315138;
    v0[2] = v24;
    swift_getMetatypeMetadata();
    v27 = sub_1BC62C6E0();
    v0[3] = sub_1BC4991F0(v27, v28, v52);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BC30A000, v18, v19, "%s: No SCD context, cannot generate QR image", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v26, -1, -1);
    MEMORY[0x1BCCF36A8](v25, -1, -1);

    v17 = v22;
    v16 = v50;
LABEL_7:
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v51, v16);
    goto LABEL_18;
  }
  v2 = (void **)(v0 + 6);
  v3 = OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_qrImage;
  v0[15] = OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_qrImage;
  if (*(_QWORD *)&v1[v3])
  {
    v4 = v1;
    sub_1BC62BAF8();
    swift_retain_n();
    v5 = sub_1BC62BB28();
    v6 = sub_1BC62CADC();
    v7 = os_log_type_enabled(v5, v6);
    v8 = v0[13];
    v9 = v0[10];
    v10 = v0[11];
    if (!v7)
    {

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      goto LABEL_18;
    }
    v49 = v4;
    v51 = v0[13];
    v11 = v0[9];
    v48 = v0[10];
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v52[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v0[4] = v11;
    swift_getMetatypeMetadata();
    v14 = sub_1BC62C6E0();
    v0[5] = sub_1BC4991F0(v14, v15, v52);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BC30A000, v5, v6, "%s: Already have QR image, not re-fetching", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v13, -1, -1);
    MEMORY[0x1BCCF36A8](v12, -1, -1);

    v17 = v10;
    v16 = v48;
    goto LABEL_7;
  }
  v29 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group];
  v30 = v1;
  v31 = objc_msgSend(v29, sel_mainRecord);
  v0[16] = v31;
  if (v31)
  {
    v32 = v31;
    v33 = objc_msgSend(v29, sel_QRRepresentation);
    v0[17] = v33;
    if (v33)
    {
      v34 = v33;
      *v2 = 0;
      v35 = objc_msgSend(v33, sel_orderedSegmentsWithError_, v0 + 6);
      v36 = *v2;
      if (!v35)
      {
        v46 = v36;
        sub_1BC62A55C();

        swift_willThrow();
        v47 = (void *)v0[14];

        swift_task_dealloc();
        swift_task_dealloc();
        v45 = (uint64_t (*)(void))v0[1];
        return v45();
      }
      v37 = v35;
      sub_1BC34B6A0(0, &qword_1EF429778);
      v38 = sub_1BC62C878();
      v39 = v36;

      if (v38 >> 62)
      {
        swift_bridgeObjectRetain();
        v40 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v40 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v40 == 1 || (sub_1BC62CD94() & 1) != 0)
      {
        v41 = type metadata accessor for SignedClinicalDataQRCodeGenerator();
        v42 = swift_task_alloc();
        v0[18] = v42;
        *(_QWORD *)(v42 + 16) = v41;
        *(_QWORD *)(v42 + 24) = v34;
        v43 = (_QWORD *)swift_task_alloc();
        v0[19] = v43;
        sub_1BC3A0B4C();
        *v43 = v0;
        v43[1] = sub_1BC39E0B4;
        return sub_1BC62D5BC();
      }

    }
    else
    {

    }
  }
  else
  {

  }
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  v45 = (uint64_t (*)(void))v0[1];
  return v45();
}

uint64_t sub_1BC39E0B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC39E16C()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  void *v11;

  v1 = *(_QWORD *)(v0 + 56);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v5 = 0;
    goto LABEL_9;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1BCCF24CC](0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v2 = *(id *)(v1 + 32);
  }
  v3 = v2;
  swift_bridgeObjectRelease();
  CIImage.createUIImage(dimension:)(158.0);
  v5 = v4;

LABEL_9:
  v7 = *(void **)(v0 + 128);
  v8 = *(void **)(v0 + 136);
  v10 = *(char **)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 120);
  v11 = *(void **)&v10[v9];
  *(_QWORD *)&v10[v9] = v5;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC39E2AC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  swift_task_dealloc();
  v1 = *(void **)(v0 + 128);
  v2 = *(void **)(v0 + 112);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC39E344()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  void *v11;
  id v12;
  unint64_t v13;
  id v14;
  uint64_t result;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v1 = (uint64_t)v0;
  v2 = *v0;
  v3 = sub_1BC62BB34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62C4D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v1 + qword_1EF42B410);
  if (v11)
  {
    v12 = v11;
    v13 = sub_1BC545D1C((uint64_t)v12);
    v14 = v12;
    swift_retain();
    sub_1BC3A06A0(v13, (uint64_t)v14, v1);
    swift_bridgeObjectRelease();

    swift_release();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    *v10 = sub_1BC62CC74();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
    LOBYTE(v13) = sub_1BC62C4F4();
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
    if ((v13 & 1) != 0)
    {
      sub_1BC62B2E8();

      return swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1BC62BAF8();
    swift_retain_n();
    v16 = sub_1BC62BB28();
    v17 = sub_1BC62CADC();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v23 = v2;
      v24 = v19;
      *(_DWORD *)v18 = 136315138;
      v22[0] = v18 + 4;
      swift_getMetatypeMetadata();
      v20 = sub_1BC62C6E0();
      v23 = sub_1BC4991F0(v20, v21, &v24);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v16, v17, "%s: No SCD context, cannot update data source items", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v19, -1, -1);
      MEMORY[0x1BCCF36A8](v18, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

id sub_1BC39E634@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v7;
  id result;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t *v21;
  void *v22;
  uint64_t (*v23)(uint64_t);
  id v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v7 = *a1;
  result = objc_msgSend(*a1, sel_displayItemType);
  switch((unint64_t)result)
  {
    case 0xBuLL:
      result = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group), sel_medicalRecords);
      if (!result)
        goto LABEL_7;
      v9 = result;
      sub_1BC34B6A0(0, &qword_1ED6A52D8);
      v10 = sub_1BC62C878();

      v11 = objc_msgSend(v7, sel_title);
      if (!v11)
        goto LABEL_26;
      v12 = v11;
      v13 = sub_1BC62C680();
      v15 = v14;

      v16 = *(void **)(a3 + qword_1EF42B400);
      v17 = type metadata accessor for MultiRecordItem();
      swift_allocObject();
      v18 = v16;
      v19 = sub_1BC3A00B8(v13, v15, v10, v18);

      *(_QWORD *)(a4 + 24) = v17;
      v21 = (unint64_t *)&unk_1EF42B7B8;
      v22 = &protocol conformance descriptor for TextItem;
      v23 = (uint64_t (*)(uint64_t))type metadata accessor for MultiRecordItem;
      goto LABEL_14;
    case 0xDuLL:
      result = objc_msgSend(v7, sel_image);
      if (!result)
        goto LABEL_7;
      v24 = result;
      v25 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group);
      v26 = type metadata accessor for QRCodeItem();
      v27 = (_QWORD *)swift_allocObject();
      v27[3] = v25;
      v27[4] = 0;
      v27[2] = v24;
      *(_QWORD *)(a4 + 24) = v26;
      *(_QWORD *)(a4 + 32) = sub_1BC379B20(&qword_1EF42B7A8, v28, (uint64_t (*)(uint64_t))type metadata accessor for QRCodeItem, (uint64_t)&unk_1BC63B120);
      *(_QWORD *)a4 = v27;
      return v25;
    case 0xFuLL:
      sub_1BC359F44();
      v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1BC6395A0;
      *(_QWORD *)(v29 + 32) = sub_1BC62C680();
      *(_QWORD *)(v29 + 40) = v30;
      v31 = objc_msgSend(v7, sel_title);
      if (!v31)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        JUMPOUT(0x1BC39EB30);
      }
      v32 = v31;
      v33 = objc_msgSend(v31, sel_removeSpecialCharactersAndWhiteSpaces);

      v34 = sub_1BC62C680();
      v36 = v35;

      v65 = v34;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 48) = v34;
      *(_QWORD *)(v29 + 56) = v36;
      v37 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v38 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (v38)
      {
        v39 = sub_1BC62C680();
        v41 = v40;

      }
      else
      {
        v39 = 0;
        v41 = 0;
      }
      v52 = objc_msgSend(v7, sel_title, v65, v36);
      if (!v52)
        goto LABEL_25;
      v53 = v52;
      v66 = sub_1BC62C680();
      v55 = v54;

      v56 = objc_msgSend(v7, sel_subtitle);
      if (v56)
      {
        v57 = v56;
        v58 = v41;
        v59 = sub_1BC62C680();
        v61 = v60;

      }
      else
      {
        v58 = v41;
        v59 = 0;
        v61 = 0;
      }
      v62 = type metadata accessor for TitleSubtitleDetailItem(0);
      v63 = (_QWORD *)swift_allocObject();
      sub_1BC62A7A8();
      v63[2] = v66;
      v63[3] = v55;
      v64 = MEMORY[0x1E0DEE9D8];
      v63[4] = v59;
      v63[5] = v61;
      v63[6] = 0;
      v63[7] = v64;
      v63[8] = v39;
      v63[9] = v58;
      *(_QWORD *)(a4 + 24) = v62;
      result = (id)sub_1BC379B20(&qword_1EF42B7C0, 255, type metadata accessor for TitleSubtitleDetailItem, (uint64_t)&unk_1BC63DA50);
      *(_QWORD *)(a4 + 32) = result;
      *(_QWORD *)a4 = v63;
      return result;
    case 0x10uLL:
      v42 = objc_msgSend(v7, sel_title);
      if (!v42)
        goto LABEL_23;
      v43 = v42;
      v44 = sub_1BC62C680();
      v46 = v45;

      v47 = objc_msgSend(v7, sel_attributedSubtitle);
      if (!v47)
        goto LABEL_24;
      v48 = v47;
      v49 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group);
      v50 = type metadata accessor for RecordVerificationItem(0);
      swift_allocObject();
      v51 = v49;
      v19 = sub_1BC3A03BC(v44, v46, v48, v51);

      *(_QWORD *)(a4 + 24) = v50;
      v21 = (unint64_t *)&unk_1EF42B7B0;
      v22 = &unk_1BC63DA50;
      v20 = 255;
      v23 = type metadata accessor for RecordVerificationItem;
LABEL_14:
      result = (id)sub_1BC379B20(v21, v20, v23, (uint64_t)v22);
      *(_QWORD *)(a4 + 32) = result;
      *(_QWORD *)a4 = v19;
      return result;
    default:
LABEL_7:
      *(_QWORD *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      return result;
  }
}

void sub_1BC39EB48()
{
  sub_1BC39EB78();
}

void sub_1BC39EB60()
{
  sub_1BC39EB78();
}

void sub_1BC39EB78()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC39EBA0()
{
  uint64_t v0;

}

uint64_t sub_1BC39EBDC()
{
  uint64_t v0;

  v0 = sub_1BC62B69C();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC39EC38()
{
  return type metadata accessor for SignedClinicalDataStatusDataSource(0);
}

uint64_t sub_1BC39EC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t result;
  id v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  _QWORD v27[2];

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v10);
  if (sub_1BC62C680() == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v13 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
LABEL_13:
    if (qword_1EF428588 != -1)
      swift_once();
    v20 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC62BD38();
    v21 = sub_1BC62AD3C();
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
    swift_allocObject();
    v23 = sub_1BC62AD24();
    a3[3] = v21;
    result = sub_1BC379B20((unint64_t *)&qword_1ED6A4108, 255, v22, MEMORY[0x1E0D2A8A0]);
    a3[4] = result;
    *a3 = v23;
    return result;
  }
  if (sub_1BC62C680() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      v17 = sub_1BC62AE20();
      v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v17;
      a3[4] = sub_1BC379B20(&qword_1EF42A050, 255, v18, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC62AE14();
    }
  }
  if (qword_1EF428588 != -1)
    swift_once();
  v24 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v27[0] = 0x74497265746F6F46;
  v27[1] = 0xEB000000005F6D65;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v25 = sub_1BC62B624();
  v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
  a3[3] = v25;
  a3[4] = sub_1BC379B20(&qword_1EF42A058, 255, v26, MEMORY[0x1E0D2B6A8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC62B618();
}

uint64_t sub_1BC39F044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BC39EC40(a1, a2, a3);
}

void sub_1BC39F058()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC39F084()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

}

uint64_t sub_1BC39F0A0()
{
  id *v0;

  v0 = TextItem.deinit();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MultiRecordItem()
{
  return objc_opt_self();
}

void sub_1BC39F0FC(uint64_t a1, void *a2)
{
  sub_1BC3A09E8(a2);
}

void sub_1BC39F120()
{
  uint64_t v0;

}

uint64_t sub_1BC39F130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailItem_uuid;
  v2 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1BC39F1BC()
{
  return type metadata accessor for RecordVerificationItem(0);
}

uint64_t type metadata accessor for RecordVerificationItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42B5A0);
}

uint64_t sub_1BC39F1D8()
{
  return swift_updateClassMetadata2();
}

void sub_1BC39F21C(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t v4;
  id v5;

  v4 = *v2;
  v5 = _s15HealthRecordsUI41SignedClinicalDataRecordDetailViewFactoryC06issuerhI10Controller06signedeF5GroupSo06UIViewL0CSo08HKSignedefN0C_tFZ_0(*(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI22RecordVerificationItem_group));
  objc_msgSend(a2, sel_showViewController_sender_, v5, v4);

}

uint64_t sub_1BC39F274()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v4;

  v4 = sub_1BC62D718();
  sub_1BC62C764();
  v1 = *(id *)(v0 + 16);
  v2 = objc_msgSend(v1, sel_description);
  sub_1BC62C680();

  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BC39F334()
{
  id *v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QRCodeItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC39F388()
{
  uint64_t v0;

  type metadata accessor for QRCodeCell();
  sub_1BC379B20(&qword_1EF42B798, v0, (uint64_t (*)(uint64_t))type metadata accessor for QRCodeCell, (uint64_t)&unk_1BC63B078);
  return sub_1BC62ADA8();
}

uint64_t sub_1BC39F3D0()
{
  return sub_1BC39F274();
}

void sub_1BC39F3F0(uint64_t a1, void *a2)
{
  sub_1BC3A08F8(a2);
}

id sub_1BC39F414()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell____lazy_storage___QRCodeView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell____lazy_storage___QRCodeView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell____lazy_storage___QRCodeView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
    objc_msgSend(v4, sel_setContentMode_, 4);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC39F4AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC37ADB0(v3, (uint64_t)v7);
  if (v8)
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    type metadata accessor for QRCodeItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = sub_1BC39F414();
      objc_msgSend(v4, sel_setImage_, *(_QWORD *)(v6 + 16));
      swift_release();

    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v7);
  }
  return sub_1BC37AE60(a1);
}

void (*sub_1BC39F598(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell_item;
  v3[6] = v1;
  v3[7] = v4;
  swift_beginAccess();
  return sub_1BC39F5F0;
}

void sub_1BC39F5F0(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  id v5;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1BC37ADB0(v3[6] + v3[7], (uint64_t)v3);
    if (v3[3])
    {
      sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
      type metadata accessor for QRCodeItem();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v4 = v3[5];
        v5 = sub_1BC39F414();
        objc_msgSend(v5, sel_setImage_, *(_QWORD *)(v4 + 16));

        swift_release();
      }
    }
    else
    {
      sub_1BC37AE60((uint64_t)v3);
    }
  }
  free(v3);
}

id sub_1BC39F6B4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  objc_super v69;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell____lazy_storage___QRCodeView] = 0;
  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell_item];
  v10 = (objc_class *)type metadata accessor for QRCodeCell();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v69.receiver = v4;
  v69.super_class = v10;
  v11 = objc_msgSendSuper2(&v69, sel_initWithFrame_, a1, a2, a3, a4);
  v12 = objc_allocWithZone(MEMORY[0x1E0DC39A0]);
  v13 = v11;
  v14 = objc_msgSend(v12, sel_init);
  v15 = objc_msgSend(v13, sel_contentView);
  objc_msgSend(v15, sel_addLayoutGuide_, v14);

  v16 = objc_msgSend(v14, sel_leadingAnchor);
  v17 = objc_msgSend(v13, (SEL)&selRef_invalidate);
  v18 = objc_msgSend(v17, sel_leadingAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  objc_msgSend(v19, sel_setActive_, 1);

  v20 = objc_msgSend(v14, sel_trailingAnchor);
  v21 = objc_msgSend(v13, (SEL)&selRef_invalidate);
  v22 = objc_msgSend(v21, sel_trailingAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  objc_msgSend(v23, sel_setActive_, 1);

  v24 = objc_msgSend(v14, sel_topAnchor);
  v25 = objc_msgSend(v13, (SEL)&selRef_invalidate);
  v26 = objc_msgSend(v25, sel_topAnchor);

  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  objc_msgSend(v27, sel_setActive_, 1);

  v28 = objc_msgSend(v14, sel_bottomAnchor);
  v29 = objc_msgSend(v13, (SEL)&selRef_invalidate);
  v30 = objc_msgSend(v29, sel_bottomAnchor);

  v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v30);
  objc_msgSend(v31, sel_setActive_, 1);

  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v33 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v32, sel_setBackgroundColor_, v33);

  objc_msgSend(v32, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v34 = objc_msgSend(v13, (SEL)&selRef_invalidate);
  objc_msgSend(v34, sel_addSubview_, v32);

  v35 = objc_msgSend(v32, sel_centerXAnchor);
  v36 = objc_msgSend(v14, sel_centerXAnchor);
  v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  objc_msgSend(v37, sel_setActive_, 1);
  v38 = objc_msgSend(v32, sel_centerYAnchor);
  v39 = objc_msgSend(v14, sel_centerYAnchor);
  v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  objc_msgSend(v40, sel_setActive_, 1);
  v41 = sub_1BC39F414();
  objc_msgSend(v41, sel_setContentMode_, 4);

  v42 = sub_1BC39F414();
  objc_msgSend(v42, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v43 = sub_1BC39F414();
  objc_msgSend(v32, sel_addSubview_, v43);

  v44 = sub_1BC39F414();
  v45 = objc_msgSend(v44, sel_centerXAnchor);

  v46 = objc_msgSend(v14, sel_centerXAnchor);
  v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

  objc_msgSend(v47, sel_setActive_, 1);
  v48 = sub_1BC39F414();
  v49 = objc_msgSend(v48, sel_centerYAnchor);

  v50 = objc_msgSend(v14, sel_centerYAnchor);
  v51 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v50);

  objc_msgSend(v51, sel_setActive_, 1);
  v52 = sub_1BC39F414();
  v53 = objc_msgSend(v13, sel_contentView);
  objc_msgSend(v52, sel_hk_alignVerticalConstraintsWithView_margin_, v53, 20.0);

  v54 = objc_msgSend(v32, sel_widthAnchor);
  v55 = sub_1BC39F414();
  v56 = objc_msgSend(v55, sel_widthAnchor);

  v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_multiplier_constant_, v56, 1.0, 6.0);
  objc_msgSend(v57, sel_setActive_, 1);

  v58 = objc_msgSend(v32, sel_heightAnchor);
  v59 = sub_1BC39F414();
  v60 = objc_msgSend(v59, sel_heightAnchor);

  v61 = objc_msgSend(v58, sel_constraintEqualToAnchor_multiplier_constant_, v60, 1.0, 6.0);
  objc_msgSend(v61, sel_setActive_, 1);

  v62 = objc_msgSend(v32, sel_layer);
  objc_msgSend(v62, sel_setCornerRadius_, 6.0);

  v63 = objc_msgSend(v32, sel_layer);
  objc_msgSend(v63, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  objc_msgSend(v32, sel_setClipsToBounds_, 1);
  sub_1BC359F44();
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v64 + 32) = sub_1BC62C680();
  *(_QWORD *)(v64 + 40) = v65;
  *(_QWORD *)(v64 + 48) = 0x654365646F435251;
  *(_QWORD *)(v64 + 56) = 0xEA00000000006C6CLL;
  v66 = (void *)sub_1BC62C86C();
  v67 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v13, sel_setAccessibilityIdentifier_, v67);
  swift_bridgeObjectRelease();

  return v13;
}

id sub_1BC39FF98()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QRCodeCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for QRCodeCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC3A0020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

void (*sub_1BC3A0074(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC39F598(v2);
  return sub_1BC383B18;
}

_QWORD *sub_1BC3A00B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = v4;
  v33 = a1;
  v34 = a2;
  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - v9;
  v32 = sub_1BC62BBAC();
  v11 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC62BB64();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[12] = a3;
  v5[13] = a4;
  sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62BBC4();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC639590;
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DC1C20], v14);
  v19 = sub_1BC62BB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 1, 1, v19);
  v20 = a4;
  sub_1BC62BBA0();
  sub_1BC62BB7C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v32);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_1BC359F44();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v21 + 32) = sub_1BC62C680();
  *(_QWORD *)(v21 + 40) = v22;
  *(_QWORD *)(v21 + 48) = 0x63655269746C754DLL;
  *(_QWORD *)(v21 + 56) = 0xEF6C6C654364726FLL;
  v23 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v24 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v24)
  {
    v25 = sub_1BC62C680();
    v27 = v26;

  }
  else
  {
    v25 = 0;
    v27 = 0;
  }
  type metadata accessor for TextItemCell();
  sub_1BC379B20(&qword_1EF429AF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&protocol conformance descriptor for TextItemCell);
  v5[10] = sub_1BC62ADA8();
  v5[11] = v28;
  v29 = v34;
  v5[2] = v33;
  v5[3] = v29;
  v5[4] = 0;
  v5[5] = 0;
  v5[6] = 0;
  v5[7] = v18;
  v5[8] = v25;
  v5[9] = v27;
  return v5;
}

_QWORD *sub_1BC3A03BC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;

  v32 = a2;
  v33 = a3;
  v31 = a1;
  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - v7;
  v30 = sub_1BC62BBAC();
  v9 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62BB64();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC15HealthRecordsUI22RecordVerificationItem_group) = a4;
  sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62BBC4();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC639590;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DC1C20], v12);
  v17 = sub_1BC62BB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
  v18 = a4;
  sub_1BC62BBA0();
  sub_1BC62BB7C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v30);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1BC359F44();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v19 + 32) = sub_1BC62C680();
  *(_QWORD *)(v19 + 40) = v20;
  *(_QWORD *)(v19 + 48) = 0xD000000000000016;
  *(_QWORD *)(v19 + 56) = 0x80000001BC654980;
  v21 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v22 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v22)
  {
    v23 = sub_1BC62C680();
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0;
  }
  v26 = v33;
  v27 = v33;
  sub_1BC62A7A8();
  v28 = v32;
  v4[2] = v31;
  v4[3] = v28;
  v4[4] = 0;
  v4[5] = 0;
  v4[6] = v26;
  v4[7] = v16;
  v4[8] = v23;
  v4[9] = v25;
  return v4;
}

_QWORD *sub_1BC3A06A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  id v29;
  _QWORD *v30;

  v23 = a2;
  v24 = a3;
  v4 = a1;
  v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1BC62D3B8())
  {
    v21 = v4;
    v22 = v4 & 0xC000000000000001;
    for (i = 4; ; ++i)
    {
      v7 = v22 ? (id)MEMORY[0x1BCCF24CC](i - 4, v4) : *(id *)(v4 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v29 = v7;
      sub_1BC39E634(&v29, v23, v24, (uint64_t)&v25);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return (_QWORD *)swift_bridgeObjectRelease();
      }

      if (v26)
      {
        sub_1BC34E718(&v25, (uint64_t)v28);
        sub_1BC34E718(v28, (uint64_t)&v25);
        v10 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v10 = sub_1BC3B5CEC(0, v10[2] + 1, 1, v10);
          v30 = v10;
        }
        v12 = v10[2];
        v11 = v10[3];
        if (v12 >= v11 >> 1)
          v30 = sub_1BC3B5CEC((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
        v13 = v26;
        v14 = v27;
        v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v25, v26);
        MEMORY[0x1E0C80A78](v15);
        v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v18 + 16))(v17);
        sub_1BC5EE8E8(v12, (uint64_t)v17, (uint64_t *)&v30, v13, v14);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
        v4 = v21;
      }
      else
      {
        sub_1BC37AE60((uint64_t)&v25);
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v30;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

void sub_1BC3A08F8(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v2 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;
  v3 = a1;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_didTapDone);
  v5 = (void *)_s15HealthRecordsUI41SignedClinicalDataRecordDetailViewFactoryC06QRCodeI10Controller06signedeF5GroupSo06UIViewL0CSo08HKSignedefN0C_tFZ_0(*(void **)(v1 + 24));
  v6 = objc_msgSend(v5, sel_navigationItem);
  objc_msgSend(v6, sel_setRightBarButtonItem_, v4);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v5);
  objc_msgSend(v3, sel_showViewController_sender_, v7, v1);

}

void sub_1BC3A09E8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  objc_super v10;

  v3 = *(_QWORD *)(v1 + 96);
  v4 = *(void **)(v1 + 104);
  v5 = (objc_class *)type metadata accessor for SignedClinicalDataMultiRecordViewController();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_medicalRecords] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_profile] = v4;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_displayGroups] = MEMORY[0x1E0DEE9D8];
  v10.receiver = v6;
  v10.super_class = v5;
  swift_bridgeObjectRetain();
  v7 = v4;
  v8 = objc_msgSendSuper2(&v10, sel_initWithUsingInsetStyling_, 1);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(a1, sel_showViewController_sender_, v8, v1, v10.receiver, v10.super_class);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC3A0AB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF43AE70)
  {
    sub_1BC35817C(255, (unint64_t *)&qword_1EF42ADC0);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF43AE70);
  }
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1BC3A0B44(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC35A7B8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1BC3A0B4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429768)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1EF429770);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429768);
  }
}

uint64_t AccountViewData.accountId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC62A7B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AccountViewData.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccountViewData(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for AccountViewData(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1ED6A38C0);
}

uint64_t AccountViewData.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccountViewData(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountViewData.init(accountId:title:subtitle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  _QWORD *v15;

  v12 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = type metadata accessor for AccountViewData(0);
  v14 = (_QWORD *)(a6 + *(int *)(result + 20));
  *v14 = a2;
  v14[1] = a3;
  v15 = (_QWORD *)(a6 + *(int *)(result + 24));
  *v15 = a4;
  v15[1] = a5;
  return result;
}

id sub_1BC3A0CF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF42B800;
  v2 = *(void **)(v0 + qword_1EF42B800);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF42B800);
  }
  else
  {
    v4 = sub_1BC3A0D54(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC3A0D54(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC639570;
  v3 = *(void **)(a1 + qword_1EF42B7E0);
  v4 = *(void **)(a1 + qword_1EF42B7E8);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  sub_1BC62C890();
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  v6 = v3;
  v7 = v4;
  v8 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v5, sel_initWithArrangedSubviews_, v8);

  objc_msgSend(v9, sel_setAxis_, 1);
  objc_msgSend(v9, sel_setSpacing_, 0.0);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v9;
}

id sub_1BC3A0E90()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v1, sel_setFont_, 0);
  objc_msgSend(v1, sel_setNumberOfLines_, 0);
  objc_msgSend(v1, sel_setTextColor_, v0);

  v6 = sub_1BC62C680();
  v7 = v2;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  v3 = v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v6, v7);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

id sub_1BC3A1010()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v5 = sub_1BC62C680();
  v6 = v1;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v5, v6);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_1BC3A1130(uint64_t a1)
{
  return sub_1BC3A1B6C(a1, (uint64_t)&qword_1EF42B7D8, &qword_1EF42B7E0, &qword_1EF42B7E8);
}

uint64_t sub_1BC3A114C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC384E68(0, &qword_1EF42B7C8, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC3A11A0()
{
  char *v0;
  void *v1;
  id v2;

  v1 = *(void **)&v0[qword_1EF42B7D8];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v1);
  v2 = sub_1BC3A0CF4();
  objc_msgSend(v0, sel_addSubview_, v2);

  sub_1BC3A1238();
}

void sub_1BC3A1210()
{
  sub_1BC3A218C(&qword_1EF42B7E0, &qword_1EF42B7E8);
}

void sub_1BC3A1224()
{
  sub_1BC3A2278(&qword_1EF42B7E0, &qword_1EF42B7E8);
}

void sub_1BC3A1238()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  double v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  double v45;
  id v46;
  id v47;
  id v48;
  id v49;
  double v50;
  void *v51;
  id v52;

  v1 = v0;
  v51 = (void *)objc_opt_self();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC639570;
  v3 = *(void **)&v1[qword_1EF42B7D8];
  v4 = objc_msgSend(v3, sel_widthAnchor);
  v5 = *(double *)&v1[qword_1EF42B7F0];
  v6 = objc_msgSend(v4, sel_constraintEqualToConstant_, v5);

  *(_QWORD *)(v2 + 32) = v6;
  v7 = objc_msgSend(v3, sel_heightAnchor);
  v8 = objc_msgSend(v7, sel_constraintEqualToConstant_, v5);

  *(_QWORD *)(v2 + 40) = v8;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v9 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v51, sel_activateConstraints_, v9);

  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC63A940;
  v11 = objc_msgSend(v3, sel_leadingAnchor);
  v12 = objc_msgSend(v1, sel_leadingAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(v10 + 32) = v13;
  v14 = objc_msgSend(v3, sel_trailingAnchor);
  v15 = sub_1BC3A0CF4();
  v16 = objc_msgSend(v15, sel_leadingAnchor);

  v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, -*(double *)&v1[qword_1EF42B7F8]);
  *(_QWORD *)(v10 + 40) = v17;
  v18 = sub_1BC3A0CF4();
  v19 = objc_msgSend(v18, sel_trailingAnchor);

  v20 = objc_msgSend(v1, sel_trailingAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(v10 + 48) = v21;
  v22 = objc_msgSend(v3, sel_topAnchor);
  v23 = objc_msgSend(v1, sel_topAnchor);
  v24 = objc_msgSend(v22, sel_constraintGreaterThanOrEqualToAnchor_, v23);

  *(_QWORD *)(v10 + 56) = v24;
  v25 = sub_1BC3A0CF4();
  v26 = objc_msgSend(v25, sel_topAnchor);

  v27 = objc_msgSend(v1, sel_topAnchor);
  v28 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToAnchor_, v27);

  *(_QWORD *)(v10 + 64) = v28;
  v29 = objc_msgSend(v3, sel_centerYAnchor);
  v30 = sub_1BC3A0CF4();
  v31 = objc_msgSend(v30, sel_centerYAnchor);

  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v31);
  LODWORD(v33) = 1148846080;
  objc_msgSend(v32, sel_setPriority_, v33);
  *(_QWORD *)(v10 + 72) = v32;
  v34 = objc_msgSend(v1, sel_bottomAnchor);
  v35 = objc_msgSend(v3, sel_bottomAnchor);
  v36 = objc_msgSend(v34, sel_constraintGreaterThanOrEqualToAnchor_, v35);

  *(_QWORD *)(v10 + 80) = v36;
  v37 = objc_msgSend(v1, sel_bottomAnchor);
  v38 = sub_1BC3A0CF4();
  v39 = objc_msgSend(v38, sel_bottomAnchor);

  v40 = objc_msgSend(v37, sel_constraintGreaterThanOrEqualToAnchor_, v39);
  *(_QWORD *)(v10 + 88) = v40;
  v41 = sub_1BC3A0CF4();
  v42 = objc_msgSend(v41, sel_topAnchor);

  v43 = objc_msgSend(v1, sel_topAnchor);
  v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  LODWORD(v45) = 1132068864;
  objc_msgSend(v44, sel_setPriority_, v45);
  *(_QWORD *)(v10 + 96) = v44;
  v46 = objc_msgSend(v1, sel_bottomAnchor);
  v47 = sub_1BC3A0CF4();
  v48 = objc_msgSend(v47, sel_bottomAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v48);
  LODWORD(v50) = 1132068864;
  objc_msgSend(v49, sel_setPriority_, v50);
  *(_QWORD *)(v10 + 104) = v49;
  sub_1BC62C890();
  v52 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v51, sel_activateConstraints_, v52);

}

id AccountView2.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  objc_super v15;

  v9 = qword_1EF42B7D8;
  v10 = objc_allocWithZone((Class)type metadata accessor for AccountIconView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_init);
  *(_QWORD *)&v11[qword_1EF42B800] = 0;
  v12 = qword_1EF42B7E0;
  *(_QWORD *)&v11[v12] = sub_1BC3A0E90();
  v13 = qword_1EF42B7E8;
  *(_QWORD *)&v11[v13] = sub_1BC3A1010();
  *(_QWORD *)&v11[qword_1EF42B7F0] = 0x4046000000000000;
  *(_QWORD *)&v11[qword_1EF42B7F8] = 0x4020000000000000;
  *(_QWORD *)&v11[qword_1EF42B808] = 0x4000000000000000;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for AccountView2(0);
  return objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1BC3A195C(double a1, double a2, double a3, double a4)
{
  return AccountView2.init(frame:)(a1, a2, a3, a4);
}

id AccountView2.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v3 = qword_1EF42B7D8;
  v4 = objc_allocWithZone((Class)type metadata accessor for AccountIconView(0));
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  *(_QWORD *)&v5[qword_1EF42B800] = 0;
  v6 = qword_1EF42B7E0;
  *(_QWORD *)&v5[v6] = sub_1BC3A0E90();
  v7 = qword_1EF42B7E8;
  *(_QWORD *)&v5[v7] = sub_1BC3A1010();
  *(_QWORD *)&v5[qword_1EF42B7F0] = 0x4046000000000000;
  *(_QWORD *)&v5[qword_1EF42B7F8] = 0x4020000000000000;
  *(_QWORD *)&v5[qword_1EF42B808] = 0x4000000000000000;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for AccountView2(0);
  v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_1BC3A1A70(uint64_t a1, uint64_t a2, void *a3)
{
  return AccountView2.init(coder:)(a3);
}

void sub_1BC3A1A94()
{
  uint64_t v0;

}

id AccountView2.__deallocating_deinit()
{
  return sub_1BC361C8C(type metadata accessor for AccountView2);
}

void sub_1BC3A1AEC(uint64_t a1)
{

}

uint64_t sub_1BC3A1B44(uint64_t a1)
{
  return sub_1BC3A2D60(a1, (void (*)(char *))sub_1BC3A1130);
}

id sub_1BC3A1B50(uint64_t a1)
{
  return sub_1BC3A1B6C(a1, (uint64_t)&qword_1ED6A3788, &qword_1ED6A3790, &qword_1ED6A3798);
}

id sub_1BC3A1B6C(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;

  v39 = a3;
  v40 = a4;
  v6 = type metadata accessor for AccountViewData(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1EF42B7C8, v10);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v39 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v39 - v18;
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B7D0, (void (*)(uint64_t))type metadata accessor for AccountIconViewData);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v39 - v21;
  v41 = a1;
  v42 = v4;
  sub_1BC3A114C(a1, (uint64_t)v19);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v23(v19, 1, v6) == 1)
  {
    v24 = type metadata accessor for AccountIconViewData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v22, 1, 1, v24);
  }
  else
  {
    sub_1BC3A2E60((uint64_t)v19, (uint64_t)v9);
    v25 = sub_1BC62A7B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v9, v25);
    v26 = &v9[*(int *)(v6 + 20)];
    v28 = *(_QWORD *)v26;
    v27 = *((_QWORD *)v26 + 1);
    v29 = type metadata accessor for AccountIconViewData(0);
    v30 = &v22[*(int *)(v29 + 20)];
    *(_QWORD *)v30 = v28;
    *((_QWORD *)v30 + 1) = v27;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v22, 0, 1, v29);
    swift_bridgeObjectRetain();
    sub_1BC3A2E24((uint64_t)v9);
  }
  sub_1BC5B5E20((uint64_t)v22);
  sub_1BC384EB4((uint64_t)v22, (unint64_t *)&qword_1EF42B7D0, (void (*)(uint64_t))type metadata accessor for AccountIconViewData);
  v31 = v41;
  v32 = v42;
  v33 = *(void **)&v42[*v39];
  sub_1BC3A114C(v41, (uint64_t)v17);
  if (v23(v17, 1, v6) == 1)
  {
    sub_1BC384EB4((uint64_t)v17, &qword_1EF42B7C8, (void (*)(uint64_t))type metadata accessor for AccountViewData);
    v34 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BC3A2E24((uint64_t)v17);
    v34 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v33, sel_setText_, v34, v39);

  v35 = *(void **)&v32[*v40];
  sub_1BC3A114C(v31, (uint64_t)v14);
  if (v23(v14, 1, v6) == 1)
  {
    sub_1BC384EB4((uint64_t)v14, &qword_1EF42B7C8, (void (*)(uint64_t))type metadata accessor for AccountViewData);
LABEL_11:
    v37 = 0;
    goto LABEL_12;
  }
  v36 = *(_QWORD *)&v14[*(int *)(v6 + 24) + 8];
  swift_bridgeObjectRetain();
  sub_1BC3A2E24((uint64_t)v14);
  if (!v36)
    goto LABEL_11;
  v37 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
LABEL_12:
  objc_msgSend(v35, sel_setText_, v37);

  return objc_msgSend(v32, sel_setNeedsLayout);
}

void sub_1BC3A1EF0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;

  if (a2)
  {
    sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v5 + 32) = a1;
    *(_QWORD *)(v5 + 40) = a2;
    *(_QWORD *)(v5 + 48) = 0x56746E756F636341;
    *(_QWORD *)(v5 + 56) = 0xEB00000000776569;
    swift_bridgeObjectRetain_n();
    v6 = (void *)sub_1BC62C86C();
    v7 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v2, sel_setAccessibilityIdentifier_, v7);
    swift_bridgeObjectRelease();

    v8 = *(void **)&v2[qword_1ED6A3790];
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v9 + 32) = a1;
    *(_QWORD *)(v9 + 40) = a2;
    *(_QWORD *)(v9 + 48) = 0x656C746954;
    *(_QWORD *)(v9 + 56) = 0xE500000000000000;
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1BC62C86C();
    v11 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v11);
    swift_bridgeObjectRelease();

    v12 = *(void **)&v2[qword_1ED6A3798];
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v13 + 32) = a1;
    *(_QWORD *)(v13 + 40) = a2;
    *(_QWORD *)(v13 + 48) = 0x656C746974627553;
    *(_QWORD *)(v13 + 56) = 0xE800000000000000;
    v14 = (void *)sub_1BC62C86C();
    v15 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v12, sel_setAccessibilityIdentifier_, v15);
    swift_bridgeObjectRelease();

  }
}

id sub_1BC3A2118()
{
  char *v0;

  objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[qword_1ED6A3788]);
  objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[qword_1ED6A3790]);
  return objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[qword_1ED6A3798]);
}

void sub_1BC3A2178()
{
  sub_1BC3A218C(&qword_1ED6A3790, &qword_1ED6A3798);
}

void sub_1BC3A218C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v4 = *(void **)(v2 + *a1);
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4AD0], 256);
  objc_msgSend(v4, sel_setFont_, v6);

  v7 = *(void **)(v2 + *a2);
  v8 = objc_msgSend(v5, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4B10], 256);
  objc_msgSend(v7, sel_setFont_, v8);

}

void sub_1BC3A2264()
{
  sub_1BC3A2278(&qword_1ED6A3790, &qword_1ED6A3798);
}

void sub_1BC3A2278(_QWORD *a1, _QWORD *a2)
{
  char *v2;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_clearColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v6);

  v7 = *(void **)&v2[*a1];
  v8 = objc_msgSend(v5, sel_labelColor);
  objc_msgSend(v7, sel_setTextColor_, v8);

  v9 = *(void **)&v2[*a2];
  v10 = objc_msgSend(v5, sel_secondaryLabelColor);
  objc_msgSend(v9, sel_setTextColor_, v10);

}

void sub_1BC3A2364(void *a1)
{
  char *v1;
  double v2;
  objc_super v3;
  double v4[12];

  v3.receiver = a1;
  v3.super_class = (Class)type metadata accessor for AccountView(0);
  v1 = (char *)v3.receiver;
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  objc_msgSend(v1, sel_bounds, v3.receiver, v3.super_class);
  sub_1BC3A24A8(v4, v2);
  objc_msgSend(*(id *)&v1[qword_1ED6A3788], sel_setFrame_, v4[0], v4[1], v4[2], v4[3]);
  objc_msgSend(*(id *)&v1[qword_1ED6A3790], sel_setFrame_, v4[4], v4[5], v4[6], v4[7]);
  objc_msgSend(*(id *)&v1[qword_1ED6A3798], sel_setFrame_, v4[8], v4[9], v4[10], v4[11]);

}

double sub_1BC3A2430(void *a1, double a2)
{
  id v3;
  CGRect v5[3];

  v3 = a1;
  sub_1BC3A24A8(&v5[0].origin.x, a2);
  CGRectGetMaxY(v5[2]);
  CGRectGetMaxY(v5[0]);

  return a2;
}

double sub_1BC3A24A8@<D0>(double *a1@<X8>, double a2@<D0>)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  double v20;
  double v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  id v30;
  double v31;
  double v32;
  void (*v33)(char *, uint64_t);
  void *v34;
  id v35;
  double v36;
  double v37;
  double v38;
  CGFloat v39;
  double v40;
  id v41;
  double v42;
  double MaxX;
  double v44;
  double v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat MinX;
  CGFloat MaxY;
  double v50;
  double result;
  uint64_t v52;
  id v53;
  double v54;
  double v55;
  double v56;
  CGFloat v57;
  id v58;
  double v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v3 = v2;
  v6 = sub_1BC62D55C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = objc_msgSend(v3, sel_effectiveUserInterfaceLayoutDirection);
  objc_msgSend(v3, sel_directionalLayoutMargins);
  v11 = v10;
  objc_msgSend(v3, sel_directionalLayoutMargins);
  v13 = v12;
  objc_msgSend(v3, sel_layoutMargins);
  v15 = v14;
  v16 = *(_QWORD *)&v3[qword_1ED6A3788];
  v17 = qword_1EF438550;
  v18 = objc_msgSend(*(id *)(v16 + qword_1EF438550), sel_image);
  v19 = v18;
  if (v18)

  v20 = a2 - v11;
  v21 = *(double *)&v3[qword_1ED6A37A0];
  v22 = objc_msgSend(*(id *)(v16 + v17), sel_image);
  v23 = 0.0;
  v24 = 0.0;
  if (v22)
  {

    v24 = v21;
  }
  v56 = v20;
  v57 = v11;
  v59 = v13;
  v25 = v20 - v13;
  v53 = v19;
  if (v19)
    v23 = v24 + *(double *)&v3[qword_1ED6A37B0];
  v26 = v25 - v23;
  v27 = *(void **)&v3[qword_1ED6A3790];
  objc_msgSend(v27, sel_sizeThatFits_, v25 - v23, 1.79769313e308);
  v28 = *MEMORY[0x1E0DED500];
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v29(v9, v28, v6);
  v30 = objc_msgSend(v27, sel_traitCollection);
  objc_msgSend(v30, sel_displayScale);
  sub_1BC62A994();
  objc_msgSend(v30, sel_displayScale);
  sub_1BC62A994();
  v32 = v31;

  v33 = *(void (**)(char *, uint64_t))(v7 + 8);
  v33(v9, v6);
  v34 = *(void **)&v3[qword_1ED6A3798];
  objc_msgSend(v34, sel_sizeThatFits_, v26, 1.79769313e308);
  v29(v9, v28, v6);
  v35 = objc_msgSend(v34, sel_traitCollection);
  objc_msgSend(v35, sel_displayScale);
  sub_1BC62A994();
  objc_msgSend(v35, sel_displayScale);
  sub_1BC62A994();
  v37 = v36;

  v33(v9, v6);
  v54 = *(double *)&v3[qword_1ED6A37A8];
  v55 = v37;
  v38 = v37 + v32 + v54;
  v39 = v15;
  if (v38 >= v24)
  {
    v29(v9, *MEMORY[0x1E0DED508], v6);
    sub_1BC62A9AC();
    v39 = v40;
    v33(v9, v6);
  }
  v41 = v58;
  v42 = v57;
  if (v58 != (id)1)
  {
    v60.origin.x = v57;
    v60.origin.y = v39;
    v60.size.width = v24;
    v60.size.height = v24;
    MaxX = CGRectGetMaxX(v60);
    if (v53)
      v44 = *(double *)&v3[qword_1ED6A37B0];
    else
      v44 = 0.0;
    v59 = MaxX + v44;
  }
  if (v24 >= v38)
  {
    v29(v9, *MEMORY[0x1E0DED508], v6);
    sub_1BC62A9AC();
    v15 = v45;
    v33(v9, v6);
  }
  if (v41 == (id)1)
    v42 = v56 - v24;
  v46 = v15;
  v47 = v59;
  v61.origin.x = v59;
  v61.origin.y = v46;
  v61.size.width = v26;
  v61.size.height = v32;
  MinX = CGRectGetMinX(v61);
  v62.origin.x = v47;
  v62.origin.y = v46;
  v62.size.width = v26;
  v62.size.height = v32;
  MaxY = CGRectGetMaxY(v62);
  v50 = v54;
  *a1 = v42;
  a1[1] = v39;
  a1[2] = v24;
  a1[3] = v24;
  a1[4] = v47;
  a1[5] = v46;
  a1[6] = v26;
  a1[7] = v32;
  a1[8] = MinX;
  a1[9] = v50 + MaxY;
  result = v55;
  a1[10] = v26;
  a1[11] = result;
  return result;
}

id _s15HealthRecordsUI12AccountView2C5frameACSo6CGRectV_tcfC_0(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id AccountView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  objc_super v17;

  v9 = qword_1ED6A3788;
  v10 = objc_allocWithZone((Class)type metadata accessor for AccountIconView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_init);
  v12 = qword_1ED6A3790;
  v13 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v14, sel_setFont_, 0);
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  objc_msgSend(v14, sel_setTextColor_, v13);

  *(_QWORD *)&v11[v12] = v14;
  v15 = qword_1ED6A3798;
  *(_QWORD *)&v11[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  *(_QWORD *)&v11[qword_1ED6A37A0] = 0x4046000000000000;
  *(_QWORD *)&v11[qword_1ED6A37B0] = 0x4020000000000000;
  *(_QWORD *)&v11[qword_1ED6A37A8] = 0x4000000000000000;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for AccountView(0);
  return objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1BC3A2AC8(double a1, double a2, double a3, double a4)
{
  return AccountView.init(frame:)(a1, a2, a3, a4);
}

id AccountView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id AccountView.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  v3 = qword_1ED6A3788;
  v4 = objc_allocWithZone((Class)type metadata accessor for AccountIconView(0));
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = qword_1ED6A3790;
  v7 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v8, sel_setFont_, 0);
  objc_msgSend(v8, sel_setNumberOfLines_, 0);
  objc_msgSend(v8, sel_setTextColor_, v7);

  *(_QWORD *)&v5[v6] = v8;
  v9 = qword_1ED6A3798;
  *(_QWORD *)&v5[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  *(_QWORD *)&v5[qword_1ED6A37A0] = 0x4046000000000000;
  *(_QWORD *)&v5[qword_1ED6A37B0] = 0x4020000000000000;
  *(_QWORD *)&v5[qword_1ED6A37A8] = 0x4000000000000000;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for AccountView(0);
  v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

id sub_1BC3A2CA0(uint64_t a1, uint64_t a2, void *a3)
{
  return AccountView.init(coder:)(a3);
}

void sub_1BC3A2CC4()
{
  uint64_t v0;

}

id AccountView.__deallocating_deinit()
{
  return sub_1BC361C8C(type metadata accessor for AccountView);
}

void sub_1BC3A2D0C(uint64_t a1)
{

}

uint64_t sub_1BC3A2D54(uint64_t a1)
{
  return sub_1BC3A2D60(a1, (void (*)(char *))sub_1BC3A1B50);
}

uint64_t sub_1BC3A2D60(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  sub_1BC384E68(0, &qword_1EF42B7C8, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - v5;
  sub_1BC3A3454(a1, (uint64_t)&v9 - v5);
  v7 = type metadata accessor for AccountViewData(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  a2(v6);
  return sub_1BC384EB4((uint64_t)v6, &qword_1EF42B7C8, (void (*)(uint64_t))type metadata accessor for AccountViewData);
}

uint64_t sub_1BC3A2E24(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccountViewData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC3A2E60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccountViewData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AccountView2(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42B838);
}

uint64_t type metadata accessor for AccountView(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1ED6A38B0);
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountViewData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC62A7B4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for AccountViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AccountViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for AccountViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountViewData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC3A3198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountViewData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC3A3224(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC62A7B4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1BC3A32A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC3A331C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AccountView2()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountView2.apply(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AccountView2.addConstraints()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t sub_1BC3A33C4()
{
  return type metadata accessor for AccountView2(0);
}

uint64_t sub_1BC3A33CC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AccountView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountView.apply(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t sub_1BC3A344C()
{
  return type metadata accessor for AccountView(0);
}

uint64_t sub_1BC3A3454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccountViewData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC3A349C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;

  objc_opt_self();
  v1 = (void *)swift_dynamicCastObjCClass();
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = objc_msgSend(v1, sel_collectionView);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = v2;
  v4 = *(_BYTE *)(v0 + 48);
  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0F0, (uint64_t (*)(uint64_t))sub_1BC37932C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  if ((v4 & 1) != 0)
  {
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BC6395A0;
    sub_1BC3A36A0(v3);
    *(_QWORD *)(v5 + 32) = v6;
    *(_QWORD *)(v5 + 40) = v7;
    v9 = *(_QWORD *)(v0 + 32);
    v8 = *(_QWORD *)(v0 + 40);
    v10 = objc_allocWithZone(MEMORY[0x1E0CB6780]);
    v11 = v3;
    swift_retain();
    swift_retain();
    v12 = objc_msgSend(v10, sel_init);
    type metadata accessor for RecentLabsDataSource();
    *(_QWORD *)(swift_allocObject() + qword_1EF42EBA8) = v8;
    *(_QWORD *)(v5 + 48) = sub_1BC3A3A10(v9, v12, v3, (void (*)(uint64_t))sub_1BC3A3E74);
    v13 = (_QWORD *)(v5 + 56);
  }
  else
  {
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BC639590;
    v15 = *(_QWORD *)(v0 + 32);
    v14 = *(_QWORD *)(v0 + 40);
    v16 = objc_allocWithZone(MEMORY[0x1E0CB6780]);
    swift_retain();
    swift_retain();
    v17 = v3;
    v18 = objc_msgSend(v16, sel_init);
    type metadata accessor for AlphabeticalLabsDataSource();
    *(_QWORD *)(swift_allocObject() + qword_1EF42F168) = v14;
    *(_QWORD *)(v5 + 32) = sub_1BC3A3A10(v15, v18, v3, (void (*)(uint64_t))sub_1BC3A3BF0);
    v13 = (_QWORD *)(v5 + 40);
  }
  *v13 = MEMORY[0x1E0D2B148];

  return v5;
}

void sub_1BC3A36A0(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _BYTE v12[40];

  v3 = *(id *)(v1 + 16);
  v4 = a1;
  sub_1BC62CB90();
  type metadata accessor for LabsOnboardingDataSource();
  swift_allocObject();
  v5 = sub_1BC423814(v3, v4, (uint64_t)v12);

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6F18]), sel_init);
  v7 = objc_msgSend(v6, sel_features);

  if (v7)
  {
    v8 = objc_msgSend(v7, sel_stanley);

    v9 = MEMORY[0x1E0D2B148];
    if (v8)
    {
      sub_1BC357158(0, &qword_1EF42BA78, (uint64_t (*)(uint64_t))sub_1BC3A4194, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BC639590;
      *(_QWORD *)(inited + 32) = 1;
      v11 = sub_1BC347F0C(&qword_1EF42BA88, (uint64_t (*)(uint64_t))type metadata accessor for LabsOnboardingDataSource, (uint64_t)&protocol conformance descriptor for LabsOnboardingDataSource);
      *(_QWORD *)(inited + 40) = v5;
      *(_QWORD *)(inited + 48) = v11;
      *(_QWORD *)(inited + 56) = v9;
      sub_1BC35DCCC(inited);
      swift_setDeallocating();
      sub_1BC3A4194();
      swift_retain();
      swift_arrayDestroy();
      sub_1BC62B5C4();
      swift_allocObject();
      sub_1BC62B5B8();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC3A3878()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LabsCategoryListDataProvider()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for LabsCategoryListDataProvider.DisplayType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC3A3928 + 4 * byte_1BC63B2C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC3A395C + 4 * byte_1BC63B2C0[v4]))();
}

uint64_t sub_1BC3A395C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC3A3964(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC3A396CLL);
  return result;
}

uint64_t sub_1BC3A3978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC3A3980);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC3A3984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC3A398C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LabsCategoryListDataProvider.DisplayType()
{
  return &type metadata for LabsCategoryListDataProvider.DisplayType;
}

unint64_t sub_1BC3A39AC()
{
  unint64_t result;

  result = qword_1EF42BA70;
  if (!qword_1EF42BA70)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63B36C, &type metadata for LabsCategoryListDataProvider.DisplayType);
    atomic_store(result, (unint64_t *)&qword_1EF42BA70);
  }
  return result;
}

uint64_t sub_1BC3A39F0()
{
  return sub_1BC3A349C();
}

uint64_t sub_1BC3A3A10(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void (*v17)(uint64_t);
  _QWORD v18[2];

  v17 = a4;
  v5 = v4;
  v9 = sub_1BC62A7B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + qword_1ED6A40F0) = MEMORY[0x1E0DEE9E8];
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v5 + qword_1ED6A4100) = 0;
  *(_QWORD *)(v5 + qword_1ED6A40E8) = a1;
  *(_QWORD *)(v5 + qword_1ED6A40E0) = a2;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  swift_retain();
  v13 = a2;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  strcpy((char *)v18, "MutableArray<");
  HIWORD(v18[1]) = -4864;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v14 = sub_1BC62B2B8();
  v15 = swift_retain();
  v17(v15);
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1BC3A3BF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  id v15;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v14 - v2;
  sub_1BC3A4200();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = (*(uint64_t (**)(uint64_t))(class metadata base offset for UDCListDataSource + *v0 + 192))(v7);
  sub_1BC35A280();
  v15 = (id)sub_1BC62CC74();
  v10 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
  sub_1BC3A44B4(0, &qword_1EF42BA98, &qword_1EF42BAA0, &qword_1EF42BAA8, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
  sub_1BC3A42CC();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E00, (uint64_t (*)(uint64_t))sub_1BC35A280, MEMORY[0x1E0DEF7F8]);
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v3);

  swift_release();
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC3A43AC;
  *(_QWORD *)(v12 + 24) = v11;
  sub_1BC347F0C(&qword_1EF42BAB8, (uint64_t (*)(uint64_t))sub_1BC3A4200, MEMORY[0x1E0C95CB8]);
  sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_beginAccess();
  sub_1BC62BEA0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC3A3E74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  id v15;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v14 - v2;
  sub_1BC3A43E8();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = (*(uint64_t (**)(uint64_t))(class metadata base offset for UDCListDataSource + *v0 + 192))(v7);
  sub_1BC35A280();
  v15 = (id)sub_1BC62CC74();
  v10 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
  sub_1BC3A44B4(0, &qword_1EF42BAC8, &qword_1EF42BAD0, &qword_1EF42BAD8, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem);
  sub_1BC3A4588();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E00, (uint64_t (*)(uint64_t))sub_1BC35A280, MEMORY[0x1E0DEF7F8]);
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v3);

  swift_release();
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC3A43AC;
  *(_QWORD *)(v12 + 24) = v11;
  sub_1BC347F0C(&qword_1EF42BAE8, (uint64_t (*)(uint64_t))sub_1BC3A43E8, MEMORY[0x1E0C95CB8]);
  sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_beginAccess();
  sub_1BC62BEA0();
  swift_endAccess();
  return swift_release();
}

_QWORD *sub_1BC3A40F8(uint64_t a1, uint64_t a2)
{
  _QWORD *result;

  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t))(class metadata base offset for UDCListDataSource + *result + 200))(a1, a2);
    sub_1BC62B2D0();
    swift_bridgeObjectRelease();
    sub_1BC62B2DC();
    return (_QWORD *)swift_release();
  }
  return result;
}

void sub_1BC3A4194()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42BA80)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_1BC35E280();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42BA80);
  }
}

void sub_1BC3A4200()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42BA90)
  {
    sub_1BC3A44B4(255, &qword_1EF42BA98, &qword_1EF42BAA0, &qword_1EF42BAA8, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
    sub_1BC35A280();
    sub_1BC3A42CC();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A4E00, (uint64_t (*)(uint64_t))sub_1BC35A280, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC62BE70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42BA90);
  }
}

unint64_t sub_1BC3A42CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42BAB0;
  if (!qword_1EF42BAB0)
  {
    sub_1BC3A44B4(255, &qword_1EF42BA98, &qword_1EF42BAA0, &qword_1EF42BAA8, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42BAB0);
  }
  return result;
}

uint64_t sub_1BC3A4334(uint64_t a1)
{
  uint64_t v2;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC3A4388()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

_QWORD *sub_1BC3A43AC(uint64_t a1, uint64_t a2)
{
  return sub_1BC3A40F8(a1, a2);
}

uint64_t sub_1BC3A43C4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC3A43E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42BAC0)
  {
    sub_1BC3A44B4(255, &qword_1EF42BAC8, &qword_1EF42BAD0, &qword_1EF42BAD8, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem);
    sub_1BC35A280();
    sub_1BC3A4588();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A4E00, (uint64_t (*)(uint64_t))sub_1BC35A280, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC62BE70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42BAC0);
  }
}

void sub_1BC3A44B4(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BC3A451C(255, a3, a4, a5);
    v6 = sub_1BC62BE94();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC3A451C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC357158(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

unint64_t sub_1BC3A4588()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42BAE0;
  if (!qword_1EF42BAE0)
  {
    sub_1BC3A44B4(255, &qword_1EF42BAC8, &qword_1EF42BAD0, &qword_1EF42BAD8, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42BAE0);
  }
  return result;
}

uint64_t sub_1BC3A45F0(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

id ClinicalSourcesDataProvider.__allocating_init(healthRecordsStore:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithHealthRecordsStore_, a1);

  return v3;
}

id ClinicalSourcesDataProvider.init(healthRecordsStore:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ClinicalSourcesDataProvider();
  v3 = objc_msgSendSuper2(&v5, sel_initWithHealthRecordsStore_, a1);

  return v3;
}

uint64_t type metadata accessor for ClinicalSourcesDataProvider()
{
  return objc_opt_self();
}

id ClinicalSourcesDataProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSourcesDataProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC3A4744()
{
  swift_getMetatypeMetadata();
  return sub_1BC62C6E0();
}

void sub_1BC3A4838()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = objc_msgSend(v0, sel_textLabel);
  if (v1)
  {
    v2 = v1;
    v3 = (void *)sub_1BC62C650();
    objc_msgSend(v2, sel_setText_, v3);

  }
  v4 = objc_msgSend(v0, sel_detailTextLabel);
  if (v4)
  {
    v5 = v4;
    v6 = (void *)sub_1BC62C650();
    objc_msgSend(v5, sel_setText_, v6);

  }
  v7 = objc_msgSend(v0, sel_detailTextLabel);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v8, sel_setTextColor_, v9);

  }
}

id sub_1BC3A496C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalStateViewController.Cell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC3A499C(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  void *v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  objc_super v17;
  uint64_t v18;
  void *v19;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_sections] = MEMORY[0x1E0DEE9D8];
  v3 = qword_1ED6A4878;
  v4 = v1;
  v5 = v4;
  if (v3 != -1)
    v4 = (char *)swift_once();
  v18 = *(_QWORD *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v4);
  sub_1BC62AA6C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v6, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();
  swift_release();
  v7 = v19;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_profile] = v19;
  v8 = (objc_class *)type metadata accessor for InternalStateProvider();
  v9 = objc_allocWithZone(v8);
  v10 = v7;
  v11 = objc_msgSend(v10, sel_conceptStore);
  v12 = objc_msgSend(v10, sel_healthRecordsStore);
  v13 = objc_allocWithZone(v8);
  v14 = sub_1BC49E1F8(v11, v12);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_dataProvider] = v14;

  v17.receiver = v5;
  v17.super_class = (Class)type metadata accessor for InternalStateViewController();
  v15 = objc_msgSendSuper2(&v17, sel_initWithCoder_, a1);

  return v15;
}

id sub_1BC3A4BD4()
{
  char *v0;
  void *v1;
  id v2;
  objc_super v4;

  v1 = v0;
  v2 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_dataProvider];
  sub_1BC4A22BC(0, 0);

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for InternalStateViewController();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1BC3A4CE0()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  objc_super v7;
  uint64_t v8;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for InternalStateViewController();
  objc_msgSendSuper2(&v7, sel_viewDidLoad);
  v1 = (void *)sub_1BC62C650();
  objc_msgSend(v0, sel_setTitle_, v1);

  v2 = objc_msgSend(v0, sel_tableView);
  if (v2)
  {
    v3 = v2;
    v4 = type metadata accessor for InternalStateViewController.Cell();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v8 = v4;
    swift_getMetatypeMetadata();
    sub_1BC62C6E0();
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v6);

  }
  else
  {
    __break(1u);
  }
}

id sub_1BC3A4E14(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  void *v7;
  id result;
  void *v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  objc_super v18;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - v4;
  v6 = (objc_class *)type metadata accessor for InternalStateViewController();
  v18.receiver = v1;
  v18.super_class = v6;
  objc_msgSendSuper2(&v18, sel_viewWillAppear_, a1 & 1);
  v7 = (void *)objc_opt_self();
  result = objc_msgSend(v7, sel_isMainThread);
  if ((_DWORD)result)
  {
    v9 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_dataProvider];
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v1;
    v11 = v9;
    v12 = v1;
    sub_1BC4A22BC((uint64_t)sub_1BC3A5D38, v10);
    swift_release();

    result = objc_msgSend(v7, sel_isMainThread);
    if ((_DWORD)result)
    {
      v13 = sub_1BC62C95C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
      sub_1BC62C944();
      v14 = v12;
      v15 = sub_1BC62C938();
      v16 = (_QWORD *)swift_allocObject();
      v17 = MEMORY[0x1E0DF06E8];
      v16[2] = v15;
      v16[3] = v17;
      v16[4] = v14;
      sub_1BC5C2784((uint64_t)v5, (uint64_t)&unk_1EF42BB90, (uint64_t)v16);
      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3A5000(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t (*v15)(uint64_t);
  _QWORD aBlock[6];

  v3 = sub_1BC62C47C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62C4AC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v11 = (void *)sub_1BC62CC74();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  aBlock[4] = sub_1BC3A5DC8;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_14;
  v13 = _Block_copy(aBlock);
  v14 = a2;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_1BC3A5204(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id result;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - v3;
  result = objc_msgSend((id)objc_opt_self(), sel_isMainThread);
  if ((_DWORD)result)
  {
    v6 = sub_1BC62C95C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
    sub_1BC62C944();
    v7 = a1;
    v8 = sub_1BC62C938();
    v9 = (_QWORD *)swift_allocObject();
    v10 = MEMORY[0x1E0DF06E8];
    v9[2] = v8;
    v9[3] = v10;
    v9[4] = v7;
    sub_1BC5C2784((uint64_t)v4, (uint64_t)&unk_1EF42BB98, (uint64_t)v9);
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC3A5314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[9] = a4;
  v5 = sub_1BC62C47C();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v6 = sub_1BC62C4AC();
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  sub_1BC62C944();
  v4[16] = sub_1BC62C938();
  v4[17] = sub_1BC62C908();
  v4[18] = v7;
  return swift_task_switch();
}

uint64_t sub_1BC3A53D0()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;

  v1 = *(void **)(v0[9] + OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_dataProvider);
  v0[19] = v1;
  v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[20] = v2;
  *v2 = v0;
  v2[1] = sub_1BC3A5438;
  return sub_1BC4A03F0();
}

uint64_t sub_1BC3A5438(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_1BC3A5494()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;
  uint64_t v14;

  v1 = v0[21];
  v2 = v0[15];
  v3 = v0[12];
  v13 = v0[14];
  v14 = v0[13];
  v5 = v0[10];
  v4 = v0[11];
  v6 = (char *)v0[9];
  swift_release();
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_sections] = v1;
  swift_bridgeObjectRelease();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v7 = (void *)sub_1BC62CC74();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v6;
  v0[6] = sub_1BC364574;
  v0[7] = v8;
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_1BC39BE70;
  v0[5] = &block_descriptor_13;
  v9 = _Block_copy(v0 + 2);
  v10 = v6;
  sub_1BC62C494();
  v0[8] = MEMORY[0x1E0DEE9D8];
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v2, v3, v9);
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t type metadata accessor for InternalStateViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for InternalStateViewController.Cell()
{
  return objc_opt_self();
}

void sub_1BC3A589C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;

  v2 = v1;
  v15 = type metadata accessor for InternalStateViewController.Cell();
  swift_getMetatypeMetadata();
  sub_1BC62C6E0();
  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC62A928();
  v6 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v4, v5, v15);

  if (swift_dynamicCastClass())
  {
    v7 = sub_1BC62A964();
    v8 = v7;
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_sections);
    if ((v9 & 0xC000000000000001) == 0)
    {
      if ((v7 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v7 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v10 = *(_QWORD *)(v9 + 8 * v7 + 32);
        swift_retain();
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_16;
    }
    swift_bridgeObjectRetain();
    v10 = MEMORY[0x1BCCF24CC](v8, v9);
    swift_bridgeObjectRelease();
LABEL_6:
    v11 = sub_1BC62A94C();
    v12 = *(_QWORD *)(v10 + 32);
    if ((v12 & 0xC000000000000001) == 0)
    {
      if ((v11 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v11 < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        swift_retain();
LABEL_10:
        swift_release();
        sub_1BC3A4838();
        swift_release();
        return;
      }
      __break(1u);
      goto LABEL_19;
    }
LABEL_16:
    MEMORY[0x1BCCF24CC]();
    goto LABEL_10;
  }

  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC62A970();
  sub_1BC347F0C(&qword_1EF42BB80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1698]);
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v14 = (id)HKErrorTableViewCell();

  if (!v14)
LABEL_19:
    __break(1u);
}

uint64_t sub_1BC3A5D14()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC3A5D38(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC3A5000(a1, *(void **)(v1 + 16));
}

uint64_t sub_1BC3A5D44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC3781C0;
  return sub_1BC3A5314(a1, v4, v5, v6);
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

id sub_1BC3A5DC8()
{
  uint64_t v0;

  return sub_1BC3A5204(*(void **)(v0 + 16));
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC3A5E00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC377F18;
  return sub_1BC3A5314(a1, v4, v5, v6);
}

void sub_1BC3A5E6C(_QWORD *a1@<X8>)
{
  sub_1BC61DAE4(a1);
}

id sub_1BC3A5E74(void *a1)
{
  char *v1;
  objc_class *v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_sections] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_profile] = a1;
  v3 = (objc_class *)type metadata accessor for InternalStateProvider();
  v4 = objc_allocWithZone(v3);
  v5 = v1;
  v6 = a1;
  v7 = objc_msgSend(v6, sel_conceptStore);
  v8 = objc_msgSend(v6, sel_healthRecordsStore);
  v9 = objc_allocWithZone(v3);
  v10 = sub_1BC49E1F8(v7, v8);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_dataProvider] = v10;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for InternalStateViewController();
  return objc_msgSendSuper2(&v12, sel_initWithStyle_, 2);
}

id sub_1BC3A5F98()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  _BYTE v12[24];
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___store;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___store);
  if (!v2)
  {
    v4 = v0;
    v5 = v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
    swift_beginAccess();
    sub_1BC3A9BF4(v5, (uint64_t)v12, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
    if (v13)
    {
      sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
      sub_1BC35817C(0, &qword_1EF42BC40);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v6 = *((_QWORD *)&v15 + 1);
        if (*((_QWORD *)&v15 + 1))
        {
          v7 = v16;
          __swift_project_boxed_opaque_existential_1Tm(&v14, *((uint64_t *)&v15 + 1));
          v8 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
LABEL_10:
          v9 = *(void **)(v4 + v1);
          *(_QWORD *)(v4 + v1) = v8;
          v3 = v8;

          v2 = 0;
          goto LABEL_11;
        }
      }
      else
      {
        v16 = 0;
        v14 = 0u;
        v15 = 0u;
      }
    }
    else
    {
      sub_1BC3801D0((uint64_t)v12, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
      v14 = 0u;
      v15 = 0u;
      v16 = 0;
    }
    sub_1BC3801D0((uint64_t)&v14, (uint64_t)&unk_1EF42BC38, (uint64_t)&qword_1EF42BC40, (uint64_t)&protocol descriptor for UDCItem, (uint64_t (*)(_QWORD))sub_1BC3A9C44);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
    goto LABEL_10;
  }
  v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___store);
LABEL_11:
  v10 = v2;
  return v3;
}

id sub_1BC3A616C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v21;

  v1 = v0;
  sub_1BC384E68(0, &qword_1EF42BC10, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - v3;
  v5 = OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___button;
  v6 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___button];
  if (v6)
  {
    v7 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___button];
  }
  else
  {
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_1BC34B6A0(0, &qword_1EF42BC28);
    *(_QWORD *)(swift_allocObject() + 16) = v0;
    v0;
    v9 = (void *)sub_1BC62CEE4();
    objc_msgSend(v8, sel_addAction_forControlEvents_, v9, 64);

    sub_1BC3A645C();
    static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
    v10 = sub_1BC62CF98();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 0, 1, v10);
    sub_1BC62CFB0();
    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v11) = 1148846080;
    objc_msgSend(v8, sel_setContentHuggingPriority_forAxis_, 0, v11);
    objc_msgSend(v8, sel_setAlpha_, 0.0);
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v12 + 32) = 0xD000000000000013;
    *(_QWORD *)(v12 + 40) = 0x80000001BC650BC0;
    v7 = v8;
    v13 = sub_1BC3A645C();
    v14 = 0x6F747475426E6950;
    if ((v13 & 1) != 0)
      v14 = 0x7475426E69706E55;
    v15 = 0xE90000000000006ELL;
    if ((v13 & 1) != 0)
      v15 = 0xEB000000006E6F74;
    *(_QWORD *)(v12 + 48) = v14;
    *(_QWORD *)(v12 + 56) = v15;
    v16 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v17 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v17);
    v18 = *(void **)&v1[v5];
    *(_QWORD *)&v1[v5] = v7;

    v6 = 0;
  }
  v19 = v6;
  return v7;
}

uint64_t sub_1BC3A645C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];

  v1 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v1);
  v3 = (id *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  sub_1BC3A9BF4(v4, (uint64_t)v14, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v14[3])
  {
    sub_1BC3801D0((uint64_t)v14, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
    goto LABEL_7;
  }
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UDCAlphabeticalItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v10 = 0;
    return v10 & 1;
  }
  sub_1BC3AA02C(v13 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, (uint64_t)v3);
  swift_release();
  v5 = v3[1];
  sub_1BC348D78((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
  if (qword_1ED6A4878 != -1)
    swift_once();
  v6 = qword_1ED6A54F0;
  v7 = sub_1BC3A5F98();
  v8 = objc_msgSend(v7, sel_profileIdentifier);

  v13 = *(_QWORD *)(v6 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v9);
  *(&v12 - 2) = v6;
  *(&v12 - 1) = (uint64_t)v8;
  sub_1BC62AA6C();
  sub_1BC62BA74();
  sub_1BC3A9E00();
  swift_retain();
  sub_1BC62B888();

  swift_release();
  v10 = sub_1BC62BA50();

  swift_release();
  return v10 & 1;
}

char *sub_1BC3A66D8(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  objc_super v20;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___store] = 0;
  v9 = OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView;
  v10 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemBrowseTitleView());
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___button] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_activeConstraints] = MEMORY[0x1E0DEE9D8];
  v11[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode] = 0;
  v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item];
  *((_QWORD *)v12 + 4) = 0;
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v13 = &v11[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_sectionContext];
  v14 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for AlphabeticalUDCCell();
  v15 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v16, sel_addSubview_, *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView]);

  v17 = objc_msgSend(v15, sel_contentView);
  v18 = sub_1BC3A616C();
  objc_msgSend(v17, sel_addSubview_, v18);

  sub_1BC3A7770();
  sub_1BC3A6B98();
  objc_msgSend(v15, sel_setTintAdjustmentMode_, 1);

  return v15;
}

id sub_1BC3A68CC(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___store] = 0;
  v3 = OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView;
  v4 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemBrowseTitleView());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___button] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_activeConstraints] = MEMORY[0x1E0DEE9D8];
  v5[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode] = 0;
  v6 = &v5[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item];
  *((_QWORD *)v6 + 4) = 0;
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v7 = &v5[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_sectionContext];
  v8 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for AlphabeticalUDCCell();
  v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

id sub_1BC3A6A18()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for AlphabeticalUDCCell();
  objc_msgSendSuper2(&v5, sel_awakeFromNib);
  v1 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView]);

  v2 = objc_msgSend(v0, sel_contentView);
  v3 = sub_1BC3A616C();
  objc_msgSend(v2, sel_addSubview_, v3);

  sub_1BC3A7770();
  sub_1BC3A6B98();
  return objc_msgSend(v0, sel_setTintAdjustmentMode_, 1);
}

void sub_1BC3A6B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCF37A4](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_1BC3A6B98();
    v4 = objc_msgSend(v3, sel_contentView);
    objc_msgSend(v4, sel_layoutIfNeeded);

  }
}

void sub_1BC3A6B98()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unsigned __int8 *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView);
  v3 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron);
  if (v1 == 1)
  {
    swift_beginAccess();
    *v3 = 1;
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView), sel_setHidden_, 1);
    v4 = sub_1BC45A3C8();
    objc_msgSend(v4, sel_setActive_, (*v3 & 1) == 0);

    v5 = sub_1BC45A4C8();
    objc_msgSend(v5, sel_setActive_, *v3);

    v6 = sub_1BC3A616C();
    objc_msgSend(v6, sel_setAlpha_, 1.0);
  }
  else
  {
    swift_beginAccess();
    *v3 = 0;
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView), sel_setHidden_, 0);
    v7 = sub_1BC45A3C8();
    objc_msgSend(v7, sel_setActive_, (*v3 & 1) == 0);

    v8 = sub_1BC45A4C8();
    objc_msgSend(v8, sel_setActive_, *v3);

    v6 = sub_1BC3A616C();
    objc_msgSend(v6, sel_setAlpha_, 0.0);
  }

  sub_1BC3A7770();
}

uint64_t sub_1BC3A6D10()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  id v59[3];
  _QWORD v60[3];
  ValueMetadata *v61;
  _UNKNOWN **v62;

  v1 = v0;
  v58 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1EF42BC10, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v53 - v6;
  v8 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item];
  swift_beginAccess();
  sub_1BC3A9BF4(v11, (uint64_t)v60, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v61)
  {
    sub_1BC3801D0((uint64_t)v60, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
LABEL_8:
    sub_1BC62BAF8();
    v22 = v1;
    v23 = sub_1BC62BB28();
    v24 = sub_1BC62CAC4();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v57 = v2;
      v26 = (uint8_t *)v25;
      v56 = (_BYTE *)swift_slowAlloc();
      v59[0] = v56;
      *(_DWORD *)v26 = 136446210;
      v55 = v26 + 4;
      sub_1BC3A9BF4(v11, (uint64_t)v60, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
      sub_1BC3A9C44(0, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
      v27 = sub_1BC62C6F8();
      v60[0] = sub_1BC4991F0(v27, v28, (uint64_t *)v59);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v23, v24, "Incorrect view model for AlphabeticalUDCCell: %{public}s", v26, 0xCu);
      v29 = v56;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v29, -1, -1);
      MEMORY[0x1BCCF36A8](v26, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v4, v58);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v58);
    }
  }
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UDCAlphabeticalItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_8;
  v58 = (uint64_t)v7;
  v57 = (uint64_t)v59[0];
  v12 = (char *)v59[0] + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData;
  *v10 = *((_BYTE *)v59[0] + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  swift_storeEnumTagMultiPayload();
  if (qword_1ED6A4878 != -1)
    swift_once();
  v13 = qword_1ED6A54F0;
  v14 = sub_1BC3A5F98();
  v59[0] = *(id *)(v13 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v14);
  sub_1BC62AA6C();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
  sub_1BC3A9E00();
  swift_retain();
  sub_1BC62B888();

  swift_release();
  v15 = (void *)v60[0];
  v16 = type metadata accessor for UserDomainConceptViewData();
  v17 = (uint64_t)&v12[*(int *)(v16 + 36)];
  v18 = v15;
  v19 = sub_1BC3A9E48(v17, v18);
  v21 = v20;
  v56 = v18;

  if (v21)
  {
    v54 = v21;
    v55 = (uint8_t *)v19;
  }
  else
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v31 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v32 = sub_1BC62A4A8();
    v54 = v33;
    v55 = (uint8_t *)v32;
    swift_bridgeObjectRelease();

  }
  v34 = *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView];
  v35 = *((_QWORD *)v12 + 4);
  v53 = *((_QWORD *)v12 + 3);
  swift_bridgeObjectRetain();
  sub_1BC5FC724();
  if (v36)
  {
    v37 = v16;
    if (qword_1ED6A4908 != -1)
      swift_once();
    v38 = (id)qword_1ED6A5978;
    v39 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v40 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v39, v38, 0);

    v16 = v37;
  }
  else
  {
    v40 = 0;
  }
  v41 = BrowseCategory.tintColorForTemplateImage.getter();
  v42 = &v12[*(int *)(v16 + 44)];
  v43 = *(_QWORD *)v42;
  v44 = *((_QWORD *)v42 + 1);
  v45 = v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode];
  swift_bridgeObjectRetain();
  v46 = sub_1BC3A645C();
  v61 = &type metadata for UserDomainConceptFeedItemViewData;
  v62 = &protocol witness table for UserDomainConceptFeedItemViewData;
  v47 = swift_allocObject();
  v60[0] = v47;
  *(_QWORD *)(v47 + 16) = v53;
  *(_QWORD *)(v47 + 24) = v35;
  v48 = v54;
  *(_QWORD *)(v47 + 32) = v55;
  *(_QWORD *)(v47 + 40) = v48;
  *(_QWORD *)(v47 + 48) = v40;
  *(_QWORD *)(v47 + 56) = v41;
  *(_QWORD *)(v47 + 64) = 0;
  *(_QWORD *)(v47 + 72) = v43;
  *(_QWORD *)(v47 + 80) = v44;
  *(_QWORD *)(v47 + 88) = 0;
  *(_QWORD *)(v47 + 96) = 0;
  *(_QWORD *)(v47 + 104) = 0;
  *(_BYTE *)(v47 + 112) = 1;
  *(_BYTE *)(v47 + 113) = v45;
  *(_BYTE *)(v47 + 114) = v46 & 1;
  *(_WORD *)(v47 + 115) = 256;
  v49 = v34 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData;
  swift_beginAccess();
  sub_1BC3AA078((uint64_t)v60, v49, (unint64_t *)&qword_1EF42AF38, &qword_1EF42AF40);
  swift_endAccess();
  sub_1BC45AE18();
  sub_1BC3801D0((uint64_t)v60, (uint64_t)&qword_1EF42AF38, (uint64_t)&qword_1EF42AF40, (uint64_t)&protocol descriptor for ConceptTitleViewContentProviding, (uint64_t (*)(_QWORD))sub_1BC3A9C44);
  v50 = sub_1BC3A616C();
  sub_1BC3A645C();
  v51 = v58;
  static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
  v52 = sub_1BC62CF98();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 0, 1, v52);
  sub_1BC62CFB0();
  swift_release();

  return sub_1BC348D78((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
}

uint64_t sub_1BC3A74B4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  v22 = sub_1BC62A970();
  v2 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void (*)(uint64_t))MEMORY[0x1E0D2AAA0];
  sub_1BC384E68(0, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = sub_1BC62ADD8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_sectionContext;
  swift_beginAccess();
  sub_1BC397AF4(v13, (uint64_t)v8, &qword_1EF42BC08, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1BC3AA0C8((uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1BC62ADCC();
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_1BC62D1D8();
  v15 = sub_1BC62C680();
  v17 = v16;
  swift_bridgeObjectRelease();
  v24 = v15;
  v25 = v17;
  sub_1BC62C764();
  v23 = sub_1BC62A964();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v23 = sub_1BC62A958();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v19 = v24;
  v18 = v25;
  v20 = (void *)sub_1BC62C650();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v20);

  sub_1BC45AAD8(v19, v18);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1BC3A7770()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  double v38;
  id v39;
  int v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  char v48;
  double v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_activeConstraints];
  swift_beginAccess();
  v4 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v53 = v4;
  v5 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v5);

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC63B440;
  v7 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView];
  v8 = objc_msgSend(v7, sel_leadingAnchor);
  v9 = objc_msgSend(v1, sel_contentView);
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v10);
  *(_QWORD *)(v6 + 32) = v11;
  v12 = objc_msgSend(v7, sel_trailingAnchor);
  v13 = sub_1BC3A616C();
  v14 = objc_msgSend(v13, sel_leadingAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, -7.0);
  *(_QWORD *)(v6 + 40) = v15;
  v16 = objc_msgSend(v7, sel_topAnchor);
  v17 = objc_msgSend(v1, sel_contentView);
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(_QWORD *)(v6 + 48) = v19;
  v20 = objc_msgSend(v7, sel_bottomAnchor);
  v21 = objc_msgSend(v1, sel_contentView);
  v22 = objc_msgSend(v21, sel_bottomAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v6 + 56) = v23;
  v24 = sub_1BC3A616C();
  v25 = objc_msgSend(v24, sel_centerYAnchor);

  v26 = objc_msgSend(v1, sel_contentView);
  v27 = objc_msgSend(v26, sel_centerYAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(_QWORD *)(v6 + 64) = v28;
  v29 = sub_1BC3A616C();
  v30 = objc_msgSend(v29, sel_heightAnchor);

  v31 = sub_1BC3A616C();
  v32 = objc_msgSend(v31, sel_widthAnchor);

  v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_multiplier_, v32, 1.0);
  *(_QWORD *)(v6 + 72) = v33;
  v34 = sub_1BC3A616C();
  v35 = objc_msgSend(v34, sel_widthAnchor);

  v36 = objc_msgSend(v1, sel_traitCollection);
  v37 = objc_msgSend(v36, sel_preferredContentSizeCategory);
  LOBYTE(v18) = sub_1BC62CD1C();

  v38 = 32.0;
  if ((v18 & 1) != 0)
    v38 = 64.0;
  v39 = objc_msgSend(v35, sel_constraintEqualToConstant_, v38, v53);

  *(_QWORD *)(v6 + 80) = v39;
  sub_1BC62C890();
  *v3 = v6;
  swift_bridgeObjectRelease();
  v40 = v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode];
  v41 = sub_1BC3A616C();
  v42 = objc_msgSend(v41, sel_trailingAnchor);

  v43 = objc_msgSend(v1, sel_contentView);
  v44 = objc_msgSend(v43, sel_trailingAnchor);

  if (v40 == 1)
  {
    v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v44, -16.0);
  }
  else
  {
    v46 = objc_msgSend(v1, sel_traitCollection);
    v47 = objc_msgSend(v46, sel_preferredContentSizeCategory);
    v48 = sub_1BC62CD1C();

    v49 = 56.0;
    if ((v48 & 1) == 0)
      v49 = 24.0;
    v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v44, v49);
  }
  v50 = v45;

  swift_beginAccess();
  v51 = v50;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  swift_endAccess();

  swift_bridgeObjectRetain();
  v52 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v52);

}

uint64_t sub_1BC3A7DD0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t result;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;

  v5 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v5);
  v7 = (id *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = v2 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  sub_1BC3A9BF4(v8, (uint64_t)v26, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v27)
    return sub_1BC3801D0((uint64_t)v26, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UDCAlphabeticalItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    sub_1BC3AA02C(v25 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, (uint64_t)v7);
    swift_release();
    v10 = v7[1];
    sub_1BC348D78((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
    if (qword_1ED6A4878 != -1)
      swift_once();
    v11 = qword_1ED6A54F0;
    v12 = sub_1BC3A5F98();
    v25 = *(_QWORD *)(v11 + OBJC_IVAR___HRProfileManager_lock);
    *(&v24 - 2) = MEMORY[0x1E0C80A78](v12);
    *(&v24 - 1) = v11;
    sub_1BC62AA6C();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
    sub_1BC3A9E00();
    swift_retain();
    sub_1BC62B888();

    swift_release();
    v13 = (void *)v26[0];
    if (qword_1ED6A31B0 != -1)
      swift_once();
    v14 = objc_allocWithZone((Class)type metadata accessor for UserDomainConceptDetailViewController());
    v15 = v10;
    v16 = v13;
    v17 = sub_1BC4E89A4(v15, v16);

    sub_1BC3A9BF4(a1, (uint64_t)v26, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC34B508);
    v18 = v27;
    if (v27)
    {
      v19 = __swift_project_boxed_opaque_existential_1Tm(v26, v27);
      v20 = *(_QWORD *)(v18 - 8);
      MEMORY[0x1E0C80A78](v19);
      v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v20 + 16))(v22);
      v23 = sub_1BC62D568();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
    }
    else
    {
      v23 = 0;
    }
    objc_msgSend(a2, sel_showViewController_sender_, v17, v23);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BC3A8220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t inited;
  id v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;

  v2 = v1;
  v4 = sub_1BC62BABC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v11);
  v13 = (id *)((char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = v2 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  sub_1BC3A9BF4(v14, (uint64_t)&v52, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v54)
    return sub_1BC3801D0((uint64_t)&v52, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
  v15 = sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UDCAlphabeticalItem();
  v50 = v15;
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    return result;
  v46 = v8;
  v47 = v10;
  v48 = v7;
  v43 = v5;
  v44 = v4;
  v45 = a1;
  sub_1BC3AA02C(v51 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, (uint64_t)v13);
  swift_release();
  v49 = v13[1];
  sub_1BC348D78((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
  if (qword_1ED6A4878 != -1)
    swift_once();
  v17 = qword_1ED6A54F0;
  v18 = sub_1BC3A5F98();
  v19 = objc_msgSend(v18, sel_profileIdentifier);

  v51 = *(_QWORD *)(v17 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v20);
  *(&v43 - 2) = v17;
  *(&v43 - 1) = (uint64_t)v19;
  sub_1BC62AA6C();
  sub_1BC62BA74();
  sub_1BC3A9E00();
  swift_retain();
  sub_1BC62B888();

  v21 = swift_release();
  v22 = v52;
  v23 = (void *)sub_1BC3A616C(v21);
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v24 + 32) = 0xD000000000000013;
  *(_QWORD *)(v24 + 40) = 0x80000001BC650BC0;
  v25 = sub_1BC3A645C();
  v26 = 0x6F747475426E6950;
  if ((v25 & 1) != 0)
    v26 = 0x7475426E69706E55;
  v27 = 0xE90000000000006ELL;
  if ((v25 & 1) != 0)
    v27 = 0xEB000000006E6F74;
  *(_QWORD *)(v24 + 48) = v26;
  *(_QWORD *)(v24 + 56) = v27;
  v28 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v29 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v23, sel_setAccessibilityIdentifier_, v29);
  sub_1BC3A9BF4(v14, (uint64_t)&v52, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v54)
  {

    swift_release();
    return sub_1BC3801D0((uint64_t)&v52, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v30 = *(_QWORD *)(v51 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration);
    swift_release();
    v31 = v22;
    v32 = sub_1BC62BA2C();
    if (v32 >> 62)
      v33 = sub_1BC62D3B8();
    else
      v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    v35 = (uint64_t)v47;
    v34 = (uint64_t)v48;
    swift_bridgeObjectRelease();
    if (!v33)
    {
      v36 = sub_1BC3A5F98();
      type metadata accessor for OnboardingTileAppearanceManager();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = v36;
      v38 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
      v39 = v36;
      v40 = (void *)sub_1BC62C650();
      v41 = objc_msgSend(v38, sel_initWithCategory_domainName_healthStore_, 0, v40, v39);

      *(_QWORD *)(inited + 24) = v41;
      swift_storeEnumTagMultiPayload();
      sub_1BC370C18(1, v35);
      swift_release();
      swift_release();
      sub_1BC348D78(v35, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
    }
    v42 = v49;
    ListConceptManager.togglePinState(for:onCommitHandler:)(v49, 0, 0, v34);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v34, v44);
    if (qword_1ED6A3198 != -1)
      swift_once();
    v52 = v30;
    v53 = 0;
    sub_1BC4E4C94((uint64_t)v42, v31, v45, 0, &v52);

    return swift_release();
  }
  else
  {

    return swift_release();
  }
}

id sub_1BC3A8838()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlphabeticalUDCCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC3A8904()
{
  return type metadata accessor for AlphabeticalUDCCell();
}

uint64_t type metadata accessor for AlphabeticalUDCCell()
{
  uint64_t result;

  result = qword_1EF42BBF8;
  if (!qword_1EF42BBF8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC3A8948()
{
  unint64_t v0;

  sub_1BC384E68(319, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BC3A8A00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  return sub_1BC3A9BF4(v3, a1, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
}

uint64_t sub_1BC3A8A70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  v4 = MEMORY[0x1E0D2A060];
  sub_1BC3AA078(a1, v3, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
  swift_endAccess();
  sub_1BC3A6D10();
  return sub_1BC3801D0(a1, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, v4, (uint64_t (*)(_QWORD))sub_1BC3A9C44);
}

uint64_t (*sub_1BC3A8B1C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC3A8B64;
}

uint64_t sub_1BC3A8B64(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC3A6D10);
}

uint64_t sub_1BC3A8B70(void *a1, void *a2)
{
  id v4;
  _QWORD v6[4];

  v6[3] = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  v6[0] = a1;
  v4 = a1;
  sub_1BC3A7DD0((uint64_t)v6, a2);
  return sub_1BC3801D0((uint64_t)v6, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BC34B508);
}

uint64_t sub_1BC3A8C00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_sectionContext;
  swift_beginAccess();
  return sub_1BC397AF4(v3, a1, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
}

uint64_t sub_1BC3A8C60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_sectionContext;
  swift_beginAccess();
  sub_1BC3AA114(a1, v3);
  swift_endAccess();
  sub_1BC3A74B4();
  return sub_1BC3AA0C8(a1);
}

uint64_t (*sub_1BC3A8CCC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC3A8D14;
}

uint64_t sub_1BC3A8D14(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC3A74B4);
}

id sub_1BC3A8D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  id v5;
  _QWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  v1 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v1);
  v3 = (id *)((char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  sub_1BC3A9BF4(v4, (uint64_t)v8, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v9)
  {
    sub_1BC3801D0((uint64_t)v8, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
    return 0;
  }
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UDCAlphabeticalItem();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  sub_1BC3AA02C(v7[1] + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, (uint64_t)v3);
  swift_release();
  v5 = v3[1];
  sub_1BC348D78((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
  return v5;
}

id sub_1BC3A8E7C()
{
  return sub_1BC3A8D20();
}

double sub_1BC3A8E9C()
{
  id *v0;
  CGRect v2;

  objc_msgSend(*v0, sel_frame);
  return CGRectGetWidth(v2);
}

id sub_1BC3A8EBC()
{
  return sub_1BC3A8ED8(&OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item, (void (*)(_QWORD))type metadata accessor for UDCRecentItem, &OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
}

id sub_1BC3A8ED8(_QWORD *a1, void (*a2)(_QWORD), _QWORD *a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  BOOL v15;
  double Width;
  id v17;
  _QWORD v19[2];
  _BYTE v20[24];
  uint64_t v21;
  CGRect v22;

  v7 = v3;
  v8 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v8);
  v10 = (id *)((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (uint64_t)v7 + *a1;
  swift_beginAccess();
  sub_1BC3A9BF4(v11, (uint64_t)v20, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (v21)
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    a2(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BC3AA02C(v19[1] + *a3, (uint64_t)v10);
      swift_release();
      v12 = v10[1];
      sub_1BC348D78((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      v13 = objc_msgSend(v12, sel_educationContent);
      if (v13)
      {
        v14 = v13;
        v15 = sub_1BC62467C();

        if (v15)
        {
          objc_msgSend(v7, sel_frame);
          Width = CGRectGetWidth(v22);
          v17 = objc_allocWithZone((Class)type metadata accessor for EducationPreviewViewController());
          return sub_1BC624CB8(v12, Width);
        }
      }

    }
  }
  else
  {
    sub_1BC3801D0((uint64_t)v20, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
  }
  return 0;
}

void sub_1BC3A90B8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v3 = v2;
  v5 = a1 & 1;
  sub_1BC384E68(0, &qword_1EF42BC10, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)aBlock - v7;
  if (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode) != v5)
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode) = v5;
    v9 = sub_1BC3A616C();
    sub_1BC3A645C();
    static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
    v10 = sub_1BC62CF98();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
    sub_1BC62CFB0();

    if ((a2 & 1) != 0)
    {
      v11 = (void *)objc_opt_self();
      v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1BC3AA18C;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC39BE70;
      aBlock[3] = &block_descriptor_14;
      v13 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v11, sel_animateWithDuration_animations_, v13, 0.25);
      _Block_release(v13);
    }
    else
    {
      sub_1BC3A6B98();
    }
  }
}

void sub_1BC3A924C(char a1, char a2)
{
  sub_1BC3A90B8(a1, a2);
}

id sub_1BC3A926C()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;

  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if ((sub_1BC3A645C() & 1) != 0)
    v1 = sub_1BC3AA1B4((uint64_t)sub_1BC3AA1AC, v0);
  else
    v1 = sub_1BC3AA3D0((uint64_t)sub_1BC3AA1AC, v0);
  v2 = v1;
  v3 = (void *)sub_1BC62C86C();
  v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v4);
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(v5 + 32) = v2;
  sub_1BC62C890();
  sub_1BC34B6A0(0, &qword_1EF42BC18);
  v6 = v2;
  v7 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v7);
  swift_release();

  return v8;
}

void sub_1BC3A93FC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = a5 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCF37A4](v6);
  if (v7)
  {
    v8 = (void *)v7;
    sub_1BC3A8220(2);
    ((void (*)(uint64_t))a3)(1);

  }
  else
  {
    a3();
  }
}

id sub_1BC3A947C()
{
  return sub_1BC3A926C();
}

uint64_t sub_1BC3A949C()
{
  id v0;
  uint64_t v1;

  if ((sub_1BC3A645C() & 1) != 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
  }
  else if (qword_1ED6A4888 != -1)
  {
    swift_once();
  }
  v0 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v1;
}

id sub_1BC3A95D0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  id (*v13)(uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;

  v1 = v0;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4 = (void *)objc_opt_self();
  v15 = sub_1BC3AA63C;
  v16 = v2;
  v5 = MEMORY[0x1E0C809B0];
  v11 = MEMORY[0x1E0C809B0];
  v12 = 1107296256;
  v13 = sub_1BC3A9D48;
  v14 = &block_descriptor_20_0;
  v6 = _Block_copy(&v11);
  v7 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  v15 = sub_1BC3AA674;
  v16 = v3;
  v11 = v5;
  v12 = 1107296256;
  v13 = sub_1BC3A9D80;
  v14 = &block_descriptor_23;
  v8 = _Block_copy(&v11);
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v4, sel_configurationWithIdentifier_previewProvider_actionProvider_, 0, v6, v8);
  swift_release();
  swift_release();
  _Block_release(v8);
  _Block_release(v6);
  swift_release();
  return v9;
}

uint64_t sub_1BC3A9764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCF37A4](v2);
  if (!v3)
    return 0;
  v4 = (void *)v3;
  v5 = v3 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  sub_1BC3A9BF4(v5, (uint64_t)v25, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (v25[3])
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    type metadata accessor for UDCAlphabeticalItem();
    if ((swift_dynamicCast() & 1) == 0
      || ((v6 = *(_QWORD *)(v24 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration),
           swift_release(),
           v6 <= 4)
        ? (v7 = ((1 << v6) & 0x13) == 0)
        : (v7 = 1),
          v7))
    {

      return 0;
    }
    else
    {
      sub_1BC3A949C();
      sub_1BC3A645C();
      v9 = (void *)sub_1BC62C650();
      v10 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v9);

      sub_1BC34B6A0(0, &qword_1EF42BC28);
      v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v23 = v11;
      v12 = (void *)sub_1BC62CEE4();
      v13 = MEMORY[0x1E0DED1E8];
      sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1BC6398E0;
      *(_QWORD *)(v14 + 32) = 0xD000000000000013;
      *(_QWORD *)(v14 + 40) = 0x80000001BC650BC0;
      *(_QWORD *)(v14 + 48) = 0x73657250676E6F4CLL;
      *(_QWORD *)(v14 + 56) = 0xE900000000000073;
      v15 = v12;
      v16 = sub_1BC3A645C();
      v17 = 0x6F697463416E6950;
      if ((v16 & 1) != 0)
        v17 = 0x7463416E69706E55;
      v18 = 0xE90000000000006ELL;
      if ((v16 & 1) != 0)
        v18 = 0xEB000000006E6F69;
      *(_QWORD *)(v14 + 64) = v17;
      *(_QWORD *)(v14 + 72) = v18;
      v19 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v20 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v15, sel_setAccessibilityIdentifier_, v20, 0, 0, 0, sub_1BC3AA67C, v23);
      sub_1BC34B6A0(0, &qword_1EF42BC30);
      sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))v13);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1BC6396B0;
      *(_QWORD *)(v21 + 32) = v15;
      v25[0] = v21;
      sub_1BC62C890();
      v8 = sub_1BC62CDE8();

    }
  }
  else
  {

    sub_1BC3801D0((uint64_t)v25, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
    return 0;
  }
  return v8;
}

void sub_1BC3A9B80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCF37A4](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1BC3A8220(1);

  }
}

id sub_1BC3A9BD4()
{
  return sub_1BC3A95D0();
}

uint64_t sub_1BC3A9BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

void sub_1BC3A9C44(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC35817C(255, a3);
    v4 = sub_1BC62CFE0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC3A9C98(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  void (*v6)(id, id, uint64_t (*)(char), uint64_t);
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  v10 = a2;
  v9 = a3;
  v6(v10, v9, sub_1BC3AA604, v8);
  swift_release();
  swift_release();

}

id sub_1BC3A9D48(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = (void *)v1(v2);
  swift_release();
  return v3;
}

id sub_1BC3A9D80(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_1BC34B6A0(0, &qword_1EF42BC20);
  v2 = sub_1BC62C878();
  swift_retain();
  v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

void sub_1BC3A9DF8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BC61E298(*(void **)(v1 + 16), a1);
}

unint64_t sub_1BC3A9E00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A4B90;
  if (!qword_1ED6A4B90)
  {
    v1 = sub_1BC62AA6C();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D2D480], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A4B90);
  }
  return result;
}

uint64_t sub_1BC3A9E48(uint64_t a1, void *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  _QWORD v17[2];

  v4 = sub_1BC62A760();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4EA0, v5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - v10;
  sub_1BC397AF4(a1, (uint64_t)v17 - v10, (unint64_t *)&qword_1ED6A4EA0, v5);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v4);
    v13 = objc_msgSend(a2, sel_utcDateFormatter);
    v14 = (void *)sub_1BC62A700();
    v15 = objc_msgSend(v13, sel_relativeStringFromDate_, v14);

    v12 = sub_1BC62C680();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  }
  return v12;
}

uint64_t sub_1BC3A9FD8()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC3AA02C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UserDomainConceptViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC3AA070(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BC61E570(*(void **)(v1 + 24), a1);
}

uint64_t sub_1BC3AA078(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v6;

  sub_1BC3A9C44(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BC3AA0C8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC384E68(0, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC3AA114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC384E68(0, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC3AA168()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC3AA18C()
{
  uint64_t v0;

  sub_1BC3A6B1C(v0);
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

void sub_1BC3AA1AC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_1BC3A93FC(a1, a2, a3, a4, v4);
}

id sub_1BC3AA1B4(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  _QWORD aBlock[6];

  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  swift_retain();
  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3A9C98;
  aBlock[3] = &block_descriptor_7_0;
  v6 = _Block_copy(aBlock);
  v7 = objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v5, v6, 0xE000000000000000);

  _Block_release(v6);
  swift_release();
  v8 = (void *)sub_1BC62C650();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v8);

  objc_msgSend(v7, sel_setImage_, v9);
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v10);

  return v7;
}

id sub_1BC3AA3D0(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  _QWORD aBlock[6];

  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  swift_retain();
  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3A9C98;
  aBlock[3] = &block_descriptor_13_0;
  v6 = _Block_copy(aBlock);
  v7 = objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v5, v6, 0xE000000000000000);

  _Block_release(v6);
  swift_release();
  v8 = (void *)sub_1BC62C650();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v8);

  objc_msgSend(v7, sel_setImage_, v9);
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v10);

  return v7;
}

uint64_t sub_1BC3AA5E0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BC3AA604(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_1BC3AA618()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC3AA63C()
{
  return sub_1BC3A8ED8(&OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item, (void (*)(_QWORD))type metadata accessor for UDCAlphabeticalItem, &OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
}

uint64_t sub_1BC3AA674(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC3A9764(a1, v1);
}

void sub_1BC3AA67C(uint64_t a1)
{
  uint64_t v1;

  sub_1BC3A9B80(a1, v1);
}

uint64_t sub_1BC3AA684()
{
  return sub_1BC3A8220(0);
}

uint64_t sub_1BC3AA6D4(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t result;
  id v12;
  _QWORD v13[6];
  uint64_t v14;
  char v15;
  id v16;

  v14 = 0;
  v15 = 1;
  v16 = 0;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = &v14;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = a3;
  v6[6] = &v16;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1BC3AAB90;
  *(_QWORD *)(v7 + 24) = v6;
  v13[4] = sub_1BC3AABB0;
  v13[5] = v7;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1BC4E2FD0;
  v13[3] = &block_descriptor_15;
  v8 = _Block_copy(v13);
  swift_retain();
  v9 = a3;
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlockAndWait_, v8);
  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v16)
    {
      v12 = v16;
      swift_willThrow();

      swift_release();
      return isEscapingClosureAtFileLocation;
    }
    if ((v15 & 1) == 0)
    {
      isEscapingClosureAtFileLocation = v14;
      swift_release();
      return isEscapingClosureAtFileLocation;
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3AA884(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3, uint64_t a4)
{
  _QWORD *result;
  uint64_t v6;

  result = a2(&v6, a4);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_1BC3AA8F4()
{
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    return sub_1BC62A9D0();
  else
    return sub_1BC62A9DC();
}

uint64_t sub_1BC3AA958(unsigned __int8 *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v11[4];
  unsigned __int8 v12;

  v2 = *a1;
  sub_1BC62AC10();
  v3 = (void *)MEMORY[0x1BCCEFEBC]();
  v12 = v2;
  v4 = (void *)sub_1BC62AA90();
  v5 = static FeedItem.predicateForHealthRecordsData(categoryKind:sourceProfile:)(&v12, v4);

  objc_msgSend(v3, sel_setPredicate_, v5);
  v6 = (void *)sub_1BC3AA8F4();
  v11[2] = v3;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1BC3AAB00;
  *(_QWORD *)(v7 + 24) = v11;
  v8 = sub_1BC3AA6D4((uint64_t)sub_1BC3AAB28, v7, v6);
  if (v1)
  {

    swift_release();
    return v8;
  }
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
    return v8;
  __break(1u);
  return result;
}

uint64_t sub_1BC3AAAAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  sub_1BC62AC10();
  result = sub_1BC62CD34();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1BC3AAB00@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC3AAAAC(a1);
}

uint64_t sub_1BC3AAB18()
{
  return swift_deallocObject();
}

_QWORD *sub_1BC3AAB28@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t sub_1BC3AAB64()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

_QWORD *sub_1BC3AAB90()
{
  uint64_t v0;

  return sub_1BC3AA884(*(_QWORD *)(v0 + 16), *(_QWORD *(**)(uint64_t *__return_ptr, uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BC3AABA0()
{
  return swift_deallocObject();
}

uint64_t sub_1BC3AABB0()
{
  uint64_t v0;

  return sub_1BC39BEC0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t type metadata accessor for TipsDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1BC3AABF0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v41 = a5;
  v40 = a4;
  v34 = a3;
  v38 = a1;
  v44 = sub_1BC62B12C();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  v37 = *a2;
  v36 = *((_QWORD *)a2 + 1);
  sub_1BC62AC10();
  v10 = (void *)MEMORY[0x1BCCEFEBC]();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v39 = v11;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC639580;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  sub_1BC38DB44(0, (unint64_t *)&qword_1ED6A4E70, (void (*)(uint64_t))sub_1BC36446C);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC6395A0;
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1BC3644C0();
  strcpy((char *)(v13 + 32), "pluginPackage");
  *(_WORD *)(v13 + 46) = -4864;
  *(_QWORD *)(v13 + 96) = v14;
  *(_QWORD *)(v13 + 104) = v15;
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 72) = 0xD000000000000025;
  *(_QWORD *)(v13 + 80) = 0x80000001BC654E10;
  *(_QWORD *)(v12 + 32) = sub_1BC62CA64();
  sub_1BC38DB44(0, &qword_1EF42BCE0, (void (*)(uint64_t))MEMORY[0x1E0D2D5B0]);
  v16 = sub_1BC62AA78();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = swift_allocObject();
  v35 = xmmword_1BC639590;
  *(_OWORD *)(v19 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x1E0D2D510], v16);
  sub_1BC62AB2C();
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v35;
  *(_QWORD *)(v20 + 32) = sub_1BC62AA90();
  v21 = sub_1BC62ABC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 40) = v21;
  if (v36)
    v22 = v37;
  else
    v22 = 11;
  LOBYTE(v45) = v22;
  *(_QWORD *)(v12 + 48) = _s14HealthPlatform8FeedItemC0A9RecordsUIE015predicateForTipC5Items4uuid12categoryKind13sourceProfileSo11NSPredicateC10Foundation4UUIDVSg_AD15DisplayCategoryV0M0OSgAA06SourceO0OtFZ_0(v38, (unsigned __int8 *)&v45);
  v45 = v12;
  sub_1BC62C890();
  v23 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v23);

  objc_msgSend(v10, sel_setPredicate_, v24);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BC6396B0;
  v26 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v27 = (void *)sub_1BC62C650();
  v28 = objc_msgSend(v26, sel_initWithKey_ascending_selector_, v27, 1, sel_localizedStandardCompare_);

  *(_QWORD *)(v25 + 32) = v28;
  v45 = v25;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v29 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setSortDescriptors_, v29);

  if ((v40 & 1) == 0)
    objc_msgSend(v10, sel_setFetchLimit_, v34);
  v30 = objc_allocWithZone(MEMORY[0x1E0C97B68]);
  objc_msgSend(v30, sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v10, v41, 0, 0);
  sub_1BC379AA4();
  sub_1BC62B0FC();
  sub_1BC62B09C();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v44);
  v31 = sub_1BC62AF34();

  sub_1BC347F0C((unint64_t *)&qword_1EF42A240, (uint64_t (*)(uint64_t))sub_1BC379AA4, MEMORY[0x1E0D2B7F8]);
  return v31;
}

id MedicalRecordTimelineAccountUpgradeTileDataSource.profile.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

uint64_t sub_1BC3AB120()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCF37A4](v0 + 56);
}

void sub_1BC3AB160(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*sub_1BC3AB1AC(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCF37A4](v1 + 56);
  return sub_1BC3AB214;
}

void sub_1BC3AB214(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

uint64_t sub_1BC3AB27C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3AB2D8()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC3AB30C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC3AB350())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *sub_1BC3AB38C(void *a1, void *a2, void *a3)
{
  _QWORD *v3;
  uint64_t v7;
  id v8;
  id v9;
  _QWORD *v10;
  id v11;

  swift_unknownObjectWeakInit();
  v7 = MEMORY[0x1E0DEE9D8];
  v3[8] = MEMORY[0x1E0DEE9D8];
  v3[9] = 0;
  v3[5] = a1;
  v3[6] = a2;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v8 = a2;
  v9 = a1;
  v10 = ConceptsDataSource.init(arrangedSections:isHidden:)(v7, 0);
  if (!a2)
  {
    swift_retain();
    goto LABEL_7;
  }
  v11 = v8;
  swift_retain();
  if (objc_msgSend(v11, sel_categoryType) != (id)10 || !a3)
  {

LABEL_7:
    swift_retain();
    sub_1BC546A60(1);
    swift_release_n();
    goto LABEL_8;
  }
  sub_1BC3AB4AC();
  swift_release();

  v9 = v11;
  v8 = v11;
LABEL_8:

  return v10;
}

uint64_t sub_1BC3AB4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v31 - v2;
  sub_1BC3AB8AC();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3AB9E8();
  v10 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  v33 = v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(v0 + 40);
  type metadata accessor for ClinicalAccountManager();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x1E0DEE9E8];
  v14[5] = 0;
  v14[6] = 0;
  v14[4] = v15;
  v14[2] = v13;
  v16 = v13;
  v14[3] = objc_msgSend(v16, sel_clinicalAccountStore);
  v17 = objc_msgSend(v16, sel_healthStore);
  type metadata accessor for AccountStatusSummaryTileSettingsManager();
  v18 = swift_allocObject();
  v19 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = v19;
  v20 = v17;
  sub_1BC5DF494();

  v21 = MEMORY[0x1E0C960D8];
  sub_1BC3ABAB8(0, (unint64_t *)&qword_1EF42BCF0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC3AB9A8(&qword_1EF42BD00, (unint64_t *)&qword_1EF42BCF0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v21, MEMORY[0x1E0C96108]);
  swift_retain();
  sub_1BC62BF78();
  sub_1BC379B20(&qword_1EF42BD20, 255, (uint64_t (*)(uint64_t))sub_1BC3AB8AC, MEMORY[0x1E0C96148]);
  v22 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v35 = v22;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v34 = (id)sub_1BC62CC74();
  v23 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v3, 1, 1, v23);
  v24 = MEMORY[0x1E0C95D78];
  sub_1BC3ABAB8(0, &qword_1EF42BD10, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC3AB9A8(&qword_1EF42BD18, &qword_1EF42BD10, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v24, MEMORY[0x1E0C95D90]);
  sub_1BC3ABB20();
  sub_1BC62C080();
  sub_1BC377E3C((uint64_t)v3, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  swift_release();
  v25 = swift_allocObject();
  v26 = v31[1];
  swift_weakInit();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v25;
  *(_QWORD *)(v27 + 24) = v18;
  sub_1BC379B20(&qword_1EF42BD28, 255, (uint64_t (*)(uint64_t))sub_1BC3AB9E8, MEMORY[0x1E0C95CB8]);
  swift_retain();
  v28 = v32;
  v29 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v28);
  *(_QWORD *)(v26 + 72) = v29;
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1BC3AB8AC()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF42BCE8)
  {
    v0 = MEMORY[0x1E0C960D8];
    sub_1BC3ABAB8(255, (unint64_t *)&qword_1EF42BCF0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC3AB9A8(&qword_1EF42BD00, (unint64_t *)&qword_1EF42BCF0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x1E0C96108]);
    v1 = sub_1BC62BF84();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF42BCE8);
  }
}

void sub_1BC3AB944()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42BCF8)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1EF431480);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42BCF8);
  }
}

uint64_t sub_1BC3AB9A8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC3ABAB8(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC3AB9E8()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF42BD08)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC3ABAB8(255, &qword_1EF42BD10, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC3AB9A8(&qword_1EF42BD18, &qword_1EF42BD10, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x1E0C95D90]);
    sub_1BC3ABB20();
    v1 = sub_1BC62BE70();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF42BD08);
  }
}

void sub_1BC3ABAB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC3AB944();
    v7 = a3(a1, v6, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BC3ABB20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A4E00;
  if (!qword_1ED6A4E00)
  {
    v1 = sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A4E00);
  }
  return result;
}

uint64_t sub_1BC3ABB78(unint64_t *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v33 = sub_1BC62A7B4();
  v38 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC62B918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    v40 = MEMORY[0x1E0DEE9D8];
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0D2EDC0], v4);
    v11 = sub_1BC5E0674((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v36 = v8;
    v32 = v10;
    if (v8 >> 62)
      goto LABEL_38;
    v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v13 = v33;
    while (v12)
    {
      v14 = 0;
      v37 = v36 & 0xC000000000000001;
      v39 = v11[2];
      v34 = v36 + 32;
      v35 = v36 & 0xFFFFFFFFFFFFFF8;
      v31 = v11 + 9;
      while (1)
      {
        if (v37)
        {
          v15 = (id)MEMORY[0x1BCCF24CC](v14, v36);
        }
        else
        {
          if (v14 >= *(_QWORD *)(v35 + 16))
            goto LABEL_36;
          v15 = *(id *)(v34 + 8 * v14);
        }
        v16 = v15;
        if (__OFADD__(v14++, 1))
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        v18 = objc_msgSend(v15, sel_identifier);
        sub_1BC62A79C();

        v19 = sub_1BC62A778();
        v21 = v20;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v3, v13);
        if (!v39)
          goto LABEL_17;
        if ((v11[4] != v19 || v11[5] != v21) && (sub_1BC62D574() & 1) == 0)
        {
          if (v39 == 1)
            goto LABEL_17;
          if ((v11[6] != v19 || v11[7] != v21) && (sub_1BC62D574() & 1) == 0)
            break;
        }

        swift_bridgeObjectRelease();
LABEL_6:
        if (v14 == v12)
          goto LABEL_39;
      }
      if (v39 == 2)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        v22 = v16;
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();

        goto LABEL_6;
      }
      v23 = v31;
      v24 = 2;
      while (1)
      {
        v25 = v24 + 1;
        if (__OFADD__(v24, 1))
          break;
        v26 = *(v23 - 1) == v19 && *v23 == v21;
        if (v26 || (sub_1BC62D574() & 1) != 0)
        {

          swift_bridgeObjectRelease();
          v13 = v33;
          goto LABEL_6;
        }
        v23 += 2;
        ++v24;
        v26 = v25 == v39;
        v13 = v33;
        if (v26)
          goto LABEL_17;
      }
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      v12 = sub_1BC62D3B8();
      v13 = v33;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v40;
    v28 = v32;
    swift_beginAccess();
    *(_QWORD *)(v28 + 64) = v27;
    swift_bridgeObjectRelease();
    v29 = *(_QWORD *)(v28 + 64);
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      v30 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_retain();
    if (v30)
    {
      sub_1BC546A60(0);
      swift_release();
      sub_1BC3AC250();
    }
    else
    {
      sub_1BC546A60(1);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void MedicalRecordTimelineAccountUpgradeTileDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicalRecordTimelineAccountUpgradeTileDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC3AC01C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t MedicalRecordTimelineAccountUpgradeTileDataSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t MedicalRecordTimelineAccountUpgradeTileDataSource.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC3AC0F0()
{
  MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeTileDataSource);
  return sub_1BC62B834();
}

Swift::Void __swiftcall MedicalRecordTimelineAccountUpgradeTileDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell();
  sub_1BC379B20(&qword_1EF42BD30, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeTileItemCell);
  sub_1BC62CB48();
}

uint64_t sub_1BC3AC198()
{
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell();
  sub_1BC379B20(&qword_1EF42BD30, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeTileItemCell);
  return sub_1BC62CB48();
}

uint64_t sub_1BC3AC1F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC5CBCA4(a1);
}

uint64_t sub_1BC3AC1F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC3AC21C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC3AC248(unint64_t *a1)
{
  return sub_1BC3ABB78(a1);
}

uint64_t sub_1BC3AC250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25[2];
  _BYTE v26[40];
  _QWORD *v27;
  __int128 v28;
  _QWORD v29[5];

  v1 = sub_1BC62A7B4();
  v21 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = xmmword_1BC639590;
  v28 = xmmword_1BC639590;
  if (qword_1EF4287E0 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_1EF438CA0 == 1)
  {
    swift_beginAccess();
    v4 = *(_QWORD *)(v0 + 64);
    v5 = type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    v6 = (_QWORD *)swift_allocObject();
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell();
    sub_1BC379B20(&qword_1EF42BD30, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeTileItemCell);
    swift_bridgeObjectRetain();
    swift_retain();
    v6[4] = sub_1BC62ADA8();
    v6[5] = v7;
    v6[2] = v4;
    v6[3] = v0;
    v8 = sub_1BC379B20(&qword_1EF42BEB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeTileItem);
  }
  else
  {
    v5 = 0;
    v8 = 0;
    v6 = 0;
    v29[1] = 0;
    v29[2] = 0;
  }
  v29[3] = v5;
  v29[4] = v8;
  v29[0] = v6;
  sub_1BC62AF4C();
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  *(_OWORD *)(swift_allocObject() + 16) = v20;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC37ADB0((uint64_t)v29, (uint64_t)v26);
  sub_1BC3AC824((uint64_t)v26, (uint64_t)&v22);
  if (v23)
  {
    *(_QWORD *)&v20 = v29;
    sub_1BC34E718(&v22, (uint64_t)v25);
    sub_1BC34E718(v25, (uint64_t)&v22);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1BC3B5CEC(0, v9[2] + 1, 1, v9);
      v27 = v9;
    }
    v12 = v9[2];
    v11 = v9[3];
    if (v12 >= v11 >> 1)
      v27 = sub_1BC3B5CEC((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
    v13 = v23;
    v14 = v24;
    v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v22, v23);
    MEMORY[0x1E0C80A78](v15);
    v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v17);
    sub_1BC5EE8E8(v12, (uint64_t)v17, (uint64_t *)&v27, v13, v14);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
  }
  else
  {
    sub_1BC377E3C((uint64_t)&v22, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
  }
  sub_1BC357158(0, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayDestroy();
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v1);
  sub_1BC62B270();
  sub_1BC62B2D0();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3AC67C(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF42BD38, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeTileDataSource, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeTileDataSource);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountUpgradeTileDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1BC3AC6C8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 56;
  swift_beginAccess();
  result = MEMORY[0x1BCCF37A4](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1BC3AC714()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1BC3AC760@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for MedicalRecordTimelineAccountUpgradeTileDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.presentingViewController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.presentingViewController.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.presentingViewController.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.accounts.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.accounts.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.accounts.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.determineUpgradableAccounts()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.layout(for:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.reloadSection(upgradableAccounts:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t sub_1BC3AC824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC357158(0, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::String __swiftcall String.removingPrefix(_:)(Swift::String a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  BOOL v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  Swift::String result;

  v3 = v2;
  v4 = v1;
  v5 = sub_1BC62C7B8();
  swift_bridgeObjectRetain();
  if ((v5 & 1) != 0)
  {
    v6 = sub_1BC62C74C();
    v7 = sub_1BC62C74C();
    v9 = __OFSUB__(v6, v7);
    v10 = v6 - v7;
    if (v9)
    {
      __break(1u);
      goto LABEL_6;
    }
    v11 = sub_1BC3ACA10(v10, v4, v3);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1BCCF19D4](v11, v13, v15, v17);
    v3 = v18;
    swift_bridgeObjectRelease();
  }
  v10 = v4;
  v8 = (void *)v3;
LABEL_6:
  result._object = v8;
  result._countAndFlagsBits = v10;
  return result;
}

Swift::Void __swiftcall String.removePrefix(_:)(Swift::String a1)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v3 = *v1;
  v2 = v1[1];
  if ((sub_1BC62C7B8() & 1) == 0)
    goto LABEL_4;
  swift_bridgeObjectRetain();
  v4 = sub_1BC62C74C();
  v5 = sub_1BC62C74C();
  v6 = __OFSUB__(v4, v5);
  v7 = v4 - v5;
  if (!v6)
  {
    v8 = sub_1BC3ACA10(v7, v3, v2);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x1BCCF19D4](v8, v10, v12, v14);
    v16 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v16;
LABEL_4:
    *v1 = v3;
    v1[1] = v2;
    return;
  }
  __break(1u);
}

unint64_t sub_1BC3ACA10(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_1BC62C758();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_1BC62C7D0();
  }
  __break(1u);
  return result;
}

uint64_t MedicalRecordTimelineAccountUpgradeItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC3ACAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  _QWORD v7[2];

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7[0] = 0x55746E756F636341;
  v7[1] = 0xEF2E656461726770;
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t static MedicalRecordTimelineAccountUpgradeItem.== infix(_:_:)()
{
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  return sub_1BC62CEB4() & 1;
}

void sub_1BC3ACC24()
{
  uint64_t v0;
  id v1;

  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + 16);
  sub_1BC62CEC0();

}

uint64_t MedicalRecordTimelineAccountUpgradeItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineAccountUpgradeItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC3ACCF4()
{
  sub_1BC62D670();
  sub_1BC62C740();
  sub_1BC62CEC0();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC3ACD40()
{
  sub_1BC62D670();
  sub_1BC62C740();
  sub_1BC62CEC0();
  return sub_1BC62D6AC();
}

void sub_1BC3ACD90()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1BC62C740();
  v2 = *(id *)(v1 + 16);
  sub_1BC62CEC0();

}

uint64_t sub_1BC3ACDE0()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  sub_1BC62D670();
  v1 = *v0;
  sub_1BC62C740();
  v2 = *(id *)(v1 + 16);
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

uint64_t sub_1BC3ACE38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC3ACE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  _QWORD v7[2];

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7[0] = 0x55746E756F636341;
  v7[1] = 0xEF2E656461726770;
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t sub_1BC3ACF5C()
{
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  return sub_1BC62CEB4() & 1;
}

uint64_t sub_1BC3AD098(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC3AD108();
  return sub_1BC37AE60((uint64_t)v5);
}

uint64_t sub_1BC3AD108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  double v11;
  void (*v12)(uint64_t *, _QWORD);
  void *v13;
  id v14;
  void (*v15)(uint64_t *, _QWORD);
  id v16;
  void (*v17)(uint64_t *, _QWORD);
  id v18;
  void (*v19)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22[3];
  uint64_t v23;
  uint64_t v24;

  v1 = sub_1BC62BD98();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  v5 = v0 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v5, (uint64_t)v22);
  if (!v23)
    return sub_1BC37AE60((uint64_t)v22);
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v7 = swift_release();
    v21 = v0;
    MEMORY[0x1BCCF201C](v7);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v8 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC62BD74();
    v9 = (void *)objc_opt_self();
    v10 = *MEMORY[0x1E0DC4B10];
    v11 = *MEMORY[0x1E0DC1440];
    result = (uint64_t)objc_msgSend(v9, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B10], *MEMORY[0x1E0DC1440]);
    if (result)
    {
      v12 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
      sub_1BC62BCC0();
      v12(v22, 0);
      v13 = (void *)objc_opt_self();
      v14 = objc_msgSend(v13, sel_labelColor);
      v15 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
      sub_1BC62BCCC();
      v15(v22, 0);
      v16 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      sub_1BC62BC9C();
      result = (uint64_t)objc_msgSend(v9, sel__preferredFontForTextStyle_weight_, v10, v11);
      if (result)
      {
        v17 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
        sub_1BC62BCC0();
        v17(v22, 0);
        v18 = objc_msgSend(v13, sel_systemBlueColor);
        v19 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
        sub_1BC62BCCC();
        v19(v22, 0);
        v23 = v1;
        v24 = MEMORY[0x1E0DC2398];
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
        (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(boxed_opaque_existential_1, v4, v1);
        MEMORY[0x1BCCF1FC8](v22);
        return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC3AD4D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC3AD524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC3AD108();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC3AD590(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC3AD5D8;
}

uint64_t sub_1BC3AD5D8(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC3AD108();
  return result;
}

uint64_t sub_1BC3AD608(uint64_t a1, void *a2)
{
  return sub_1BC3AD6C0(a2);
}

uint64_t sub_1BC3AD610@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 1;
  v2 = *MEMORY[0x1E0D2B168];
  v3 = sub_1BC62B30C();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

id MedicalRecordTimelineAccountUpgradeItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC3AD69C(uint64_t a1, void *a2)
{
  return sub_1BC3AD6C0(a2);
}

uint64_t sub_1BC3AD6C0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];

  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - v4;
  v6 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v6, (uint64_t)v23);
  if (!v23[3])
    return sub_1BC37AE60((uint64_t)v23);
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v8 = v22;
    if (qword_1ED6A4878 != -1)
      result = swift_once();
    v22 = *(_QWORD *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
    MEMORY[0x1E0C80A78](result);
    *(&v21 - 2) = v9;
    sub_1BC62AA6C();
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
    sub_1BC379B20((unint64_t *)&qword_1ED6A4B90, 255, v10, MEMORY[0x1E0D2D480]);
    swift_retain();
    sub_1BC62B888();
    swift_release();
    v11 = (void *)v23[0];
    type metadata accessor for ClinicalAccountManager();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DEE9E8];
    v12[5] = 0;
    v12[6] = 0;
    v12[4] = v13;
    v12[2] = v11;
    v14 = v11;
    v12[3] = objc_msgSend(v14, sel_clinicalAccountStore);
    v15 = *(void **)(v8 + 16);
    type metadata accessor for ClinicalAccountUpgradeManager();
    swift_allocObject();
    v16 = v15;
    swift_retain();
    v17 = a1;
    v18 = sub_1BC54FA50(v16, (uint64_t)v12, v17);
    swift_release();

    v19 = sub_1BC62C95C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 1, 1, v19);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = v18;
    sub_1BC5C2784((uint64_t)v5, (uint64_t)&unk_1EF42BFB8, (uint64_t)v20);
    swift_release();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC3AD9DC(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF42BEC0, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeItem);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountUpgradeItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC3ADA28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineAccountUpgradeItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t method lookup function for MedicalRecordTimelineAccountUpgradeItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItemCell.didSelectCell(_:in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItemCell.deselectionBehavior.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t sub_1BC3ADB48()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC3ADB74()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BC377F18;
  return sub_1BC5CB3CC();
}

uint64_t sub_1BC3ADBE0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC378004(a1, (uint64_t)v5, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC3AE030();
  return sub_1BC377E3C((uint64_t)v5, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC3ADC78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item;
  swift_beginAccess();
  return sub_1BC378004(v3, a1, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC3ADCD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC3AE030();
  return sub_1BC377E3C(a1, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t (*sub_1BC3ADD54(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC3ADD9C;
}

uint64_t sub_1BC3ADD9C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC3AE030();
  return result;
}

id ClinicalSharingSelectableAuthorizationCategoryCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id ClinicalSharingSelectableAuthorizationCategoryCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  objc_super v16;

  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_switchTrailingMargin] = 0x4034000000000000;
  v10 = OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3D18]);
  v12 = v4;
  v13 = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 1);
  *(_QWORD *)&v4[v10] = v13;

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  v14 = objc_msgSendSuper2(&v16, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC3AE778();

  return v14;
}

uint64_t sub_1BC3AE030()
{
  char *v0;
  char *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  void (*v27)(uint64_t *, char *, uint64_t);
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  _QWORD v57[2];
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68[3];
  uint64_t v69;
  uint64_t v70;

  v1 = v0;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v67 = (char *)v57 - v4;
  v5 = sub_1BC62BBB8();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62BB94();
  v65 = *(_QWORD *)(v8 - 8);
  v66 = v8;
  MEMORY[0x1E0C80A78](v8);
  v64 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC62BD98();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, v2);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v57 - v15;
  v17 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t)&v1[OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item];
  swift_beginAccess();
  sub_1BC378004(v21, (uint64_t)v68, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
  if (!v69)
  {
    sub_1BC377E3C((uint64_t)v68, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    return sub_1BC377E3C((uint64_t)v16, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  }
  sub_1BC37AE0C();
  v22 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, v22 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return sub_1BC377E3C((uint64_t)v16, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  v61 = v11;
  v23 = sub_1BC3AFDE0((uint64_t)v16, (uint64_t)v20);
  MEMORY[0x1BCCF201C](v23);
  v24 = *((_QWORD *)v20 + 8);
  swift_bridgeObjectRetain();
  sub_1BC62BD74();
  if (*((_QWORD *)v20 + 10))
  {
    swift_bridgeObjectRetain();
    sub_1BC62BC9C();
    v25 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
    sub_1BC62BCA8();
    v25(v68, 0);
  }
  v69 = v10;
  v70 = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v68);
  v27 = *(void (**)(uint64_t *, char *, uint64_t))(v61 + 16);
  v60 = v10;
  v27(boxed_opaque_existential_1, v13, v10);
  MEMORY[0x1BCCF1FC8](v68);
  swift_bridgeObjectRetain();
  v28 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v28, sel_removeSpecialCharactersAndWhiteSpaces);

  v30 = sub_1BC62C680();
  v32 = v31;

  if (v24)
  {
    swift_bridgeObjectRetain();
    v33 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v34 = objc_msgSend(v33, sel_removeSpecialCharactersAndWhiteSpaces);

    v35 = sub_1BC62C680();
    v37 = v36;

  }
  else
  {
    v37 = 0xEB000000006D6574;
    v35 = 0x496E776F6E6B6E55;
  }
  v39 = objc_msgSend(v1, sel_contentView);
  sub_1BC359F44();
  v59 = v40;
  v41 = swift_allocObject();
  v58 = xmmword_1BC6398E0;
  *(_OWORD *)(v41 + 16) = xmmword_1BC6398E0;
  v57[1] = CFSTR("UIA.Health.Sharing");
  *(_QWORD *)(v41 + 32) = sub_1BC62C680();
  *(_QWORD *)(v41 + 40) = v42;
  *(_QWORD *)(v41 + 48) = v30;
  *(_QWORD *)(v41 + 56) = v32;
  *(_QWORD *)(v41 + 64) = v35;
  *(_QWORD *)(v41 + 72) = v37;
  swift_bridgeObjectRetain();
  v43 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v44 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v39, sel_setAccessibilityIdentifier_, v44);
  if (v20[48] == 1)
  {
    sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC62BBC4();
    v57[0] = v35;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
    v45 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch];
    sub_1BC37805C();
    v47 = (uint64_t (**)())&v7[*(int *)(v46 + 48)];
    v48 = *MEMORY[0x1E0DC1C20];
    v49 = sub_1BC62BB64();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v7, v48, v49);
    *v47 = sub_1BC37A6E4;
    v47[1] = 0;
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v7, *MEMORY[0x1E0DC1D18], v63);
    v50 = sub_1BC62BB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v67, 1, 1, v50);
    v51 = v45;
    v52 = v64;
    sub_1BC62BB88();
    sub_1BC62BB58();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v52, v66);
    sub_1BC62CD40();
    objc_msgSend(v51, sel_setOn_, v20[49]);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = v58;
    *(_QWORD *)(v53 + 32) = sub_1BC62C680();
    *(_QWORD *)(v53 + 40) = v54;
    *(_QWORD *)(v53 + 48) = v57[0];
    *(_QWORD *)(v53 + 56) = v37;
    *(_QWORD *)(v53 + 64) = 0x686374697773;
    *(_QWORD *)(v53 + 72) = 0xE600000000000000;
    v55 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v56 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v51, sel_setAccessibilityIdentifier_, v56);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1BC62CD40();
  }
  (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v60);
  return sub_1BC3AFE68((uint64_t)v20);
}

uint64_t type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell()
{
  return objc_opt_self();
}

id ClinicalSharingSelectableAuthorizationCategoryCell.selectionSwitch.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch));
}

id sub_1BC3AE778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  id v10;
  uint64_t v13[5];

  sub_1BC357158(0, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v13[-1] - v6;
  MEMORY[0x1BCCF1FD4](v5);
  v8 = sub_1BC62BC78();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130];
    sub_1BC378004((uint64_t)v7, (uint64_t)v4, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130]);
    MEMORY[0x1BCCF1FE0](v4);
    sub_1BC377E3C((uint64_t)v7, &qword_1EF42C0C8, v9);
  }
  else
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    sub_1BC62BC3C();
    MEMORY[0x1BCCF1FE0](v7);
  }
  v13[3] = sub_1BC62BD98();
  v13[4] = MEMORY[0x1E0DC2398];
  __swift_allocate_boxed_opaque_existential_1(v13);
  MEMORY[0x1BCCF201C]();
  MEMORY[0x1BCCF1FC8](v13);
  return objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch), sel_addTarget_action_forControlEvents_, v0, sel_switchUpdated, 4096);
}

uint64_t sub_1BC3AE910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  void (*v11)(uint64_t, id);
  void *v12;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  _BYTE v17[24];
  _BYTE v18[24];
  uint64_t v19;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v17[-v2];
  v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v0 + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item;
  swift_beginAccess();
  sub_1BC378004(v8, (uint64_t)v18, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
  if (!v19)
  {
    sub_1BC377E3C((uint64_t)v18, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    return sub_1BC377E3C((uint64_t)v3, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  }
  sub_1BC37AE0C();
  v9 = swift_dynamicCast();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_1BC377E3C((uint64_t)v3, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  sub_1BC3AFDE0((uint64_t)v3, (uint64_t)v7);
  v10 = *(_QWORD *)&v7[*(int *)(v4 + 52)];
  v11 = (void (*)(uint64_t, id))*((_QWORD *)v7 + 4);
  if (v10)
  {
    v12 = *(void **)(v0
                   + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch);
    swift_bridgeObjectRetain();
    swift_retain();
    v11(v10, objc_msgSend(v12, sel_isOn));
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    sub_1BC357158(0, &qword_1EF42C0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BC639590;
    sub_1BC3AFE24((uint64_t)v7, v15 + v14);
    v16 = *(void **)(v0
                   + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch);
    swift_retain();
    v11(v15, objc_msgSend(v16, sel_isOn));
    swift_release();
    swift_bridgeObjectRelease();
  }
  return sub_1BC3AFE68((uint64_t)v7);
}

id ClinicalSharingSelectableAuthorizationCategoryCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.reuseIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t sub_1BC3AED44(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = sub_1BC3AFEC8;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.selectionStateDidUpdate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.selectionStateDidUpdate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.selectionStateDidUpdate.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.isSelectable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.isSelectable.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.isSelectable.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.isSelected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.isSelected.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 49) = result;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.isSelected.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.name.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.category.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.category.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.category.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.authorizationIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() + 48);
  v4 = sub_1BC62B8C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem()
{
  uint64_t result;

  result = qword_1EF42C060;
  if (!qword_1EF42C060)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.authorizationIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() + 48);
  v4 = sub_1BC62B8C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.authorizationIdentifier.modify())()
{
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.associatedItems.getter()
{
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  return swift_bridgeObjectRetain();
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.associatedItems.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() + 52);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.associatedItems.modify())()
{
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.init(name:subtitle:category:authorizationIdentifier:associatedItems:isSelectable:isSelected:reuseIdentifier:selectionStateDidUpdate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v19 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v20 = *(int *)(v19 + 52);
  *(_QWORD *)a9 = a12;
  *(_QWORD *)(a9 + 8) = a13;
  sub_1BC62C764();
  *(_QWORD *)(a9 + 16) = 0xD000000000000033;
  *(_QWORD *)(a9 + 24) = 0x80000001BC654FE0;
  v21 = a9 + *(int *)(v19 + 48);
  v22 = sub_1BC62B8C4();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a7, v22);
  *(_QWORD *)(a9 + v20) = a8;
  *(_QWORD *)(a9 + 88) = a5;
  *(_QWORD *)(a9 + 96) = a6;
  *(_QWORD *)(a9 + 56) = a1;
  *(_QWORD *)(a9 + 64) = a2;
  *(_QWORD *)(a9 + 72) = a3;
  *(_QWORD *)(a9 + 80) = a4;
  *(_BYTE *)(a9 + 48) = a10;
  *(_BYTE *)(a9 + 49) = a11;
  *(_QWORD *)(a9 + 32) = a14;
  *(_QWORD *)(a9 + 40) = a15;
  return result;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  return swift_bridgeObjectRelease();
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62C740();
  sub_1BC62C740();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC3AF2FC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC3AF328()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC3AF354()
{
  sub_1BC62D670();
  sub_1BC62C740();
  sub_1BC62C740();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC3AF3A0()
{
  sub_1BC62C740();
  return sub_1BC62C740();
}

uint64_t sub_1BC3AF3CC()
{
  sub_1BC62D670();
  sub_1BC62C740();
  sub_1BC62C740();
  return sub_1BC62D6AC();
}

uint64_t _s15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  char v11;
  char v12;
  uint64_t v15;

  v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v15 - v8);
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
  {
    sub_1BC3AFE24(a1, (uint64_t)&v15 - v8);
    sub_1BC3AFE24(a2, (uint64_t)v7);
  }
  else
  {
    v11 = sub_1BC62D574();
    sub_1BC3AFE24(a1, (uint64_t)v9);
    sub_1BC3AFE24(a2, (uint64_t)v7);
    v12 = 0;
    if ((v11 & 1) == 0)
      goto LABEL_14;
  }
  if (*v9 == *v7 && v9[1] == v7[1])
    v12 = 1;
  else
    v12 = sub_1BC62D574();
LABEL_14:
  sub_1BC3AFE68((uint64_t)v9);
  sub_1BC3AFE68((uint64_t)v7);
  return v12 & 1;
}

unint64_t sub_1BC3AF538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42BFD8;
  if (!qword_1EF42BFD8)
  {
    v1 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryItem, v1);
    atomic_store(result, (unint64_t *)&qword_1EF42BFD8);
  }
  return result;
}

uint64_t sub_1BC3AF580@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item;
  swift_beginAccess();
  return sub_1BC378004(v3, a2, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC3AF5E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_1BC3AFF00;
  a2[1] = v5;
  return swift_retain();
}

uint64_t method lookup function for ClinicalSharingSelectableAuthorizationCategoryCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClinicalSharingSelectableAuthorizationCategoryCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ClinicalSharingSelectableAuthorizationCategoryCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ClinicalSharingSelectableAuthorizationCategoryCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

_QWORD *initializeBufferWithCopyOfBuffer for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    v8 = a2[5];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_QWORD *)(a1 + 40) = v8;
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v9;
    v10 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v10;
    v11 = a2[12];
    v12 = *(int *)(a3 + 48);
    v17 = (uint64_t)a2 + v12;
    v18 = a1 + v12;
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v11;
    v13 = sub_1BC62B8C4();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v18, v17, v13);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 52)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 52));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_1BC62B8C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(int *)(a3 + 48);
  v15 = a1 + v10;
  v11 = a2 + v10;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  v12 = sub_1BC62B8C4();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v15, v11, v12);
  *(_QWORD *)(a1 + *(int *)(a3 + 52)) = *(_QWORD *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 48);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BC62B8C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 52)) = *(_QWORD *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(int *)(a3 + 48);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v10 = sub_1BC62B8C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 52)) = *(_QWORD *)(a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t assignWithTake for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 48);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1BC62B8C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  *(_QWORD *)(a1 + *(int *)(a3 + 52)) = *(_QWORD *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingSelectableAuthorizationCategoryItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC3AFC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC62B8C4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingSelectableAuthorizationCategoryItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC3AFCC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC62B8C4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC3AFD3C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62B8C4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC3AFDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC3AFE24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC3AFE68(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC3AFEA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC3AFEC8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *, char *);
  char v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *, char *))(v2 + 16);
  v6 = a1;
  v5 = a2;
  return v3(&v6, &v5);
}

uint64_t sub_1BC3AFF00(_QWORD *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2);
}

uint64_t type metadata accessor for FeedItemListViewController()
{
  uint64_t result;

  result = qword_1EF42C0E8;
  if (!qword_1EF42C0E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC3AFF68()
{
  return swift_initClassMetadata2();
}

void sub_1BC3AFFC4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC3AFFF0()
{
  void *v0;
  void (*v1)(void);
  id v2;

  sub_1BC62B7EC();
  v1 = (void (*)(void))sub_1BC62B7F8();
  v1();
  v2 = objc_msgSend(v0, sel_collectionView);
  if (v2)
  {
    sub_1BC62AD6C();
    sub_1BC62CB48();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC3B006C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;

  v3 = *(_QWORD *)(v1 + qword_1EF42C0E0);
  v4 = *(id *)(v1 + qword_1EF42C0D8);
  swift_bridgeObjectRetain();
  sub_1BC62CB90();
  v5 = type metadata accessor for FeedItemListViewDataSourceProvider();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  sub_1BC34E718(&v9, v6 + 32);
  a1[3] = v5;
  result = sub_1BC379B20(&qword_1EF42C1F8, v7, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemListViewDataSourceProvider, (uint64_t)&unk_1BC63BBA4);
  a1[4] = result;
  *a1 = v6;
  return result;
}

void sub_1BC3B0124()
{
  sub_1BC62D394();
  __break(1u);
}

void sub_1BC3B017C()
{
  sub_1BC62D394();
  __break(1u);
}

void sub_1BC3B01D4()
{
  _QWORD *v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  objc_super v9;
  _QWORD v10[5];

  v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 0);

  (*(void (**)(_QWORD *__return_ptr))(qword_1EF459B58 + (*MEMORY[0x1E0DEEDD8] & *v0) + 24))(v10);
  sub_1BC62B7E0();
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FeedItemListViewController();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = (void *)objc_opt_self();
    v5 = objc_msgSend(v4, sel_systemGroupedBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v5);

    v6 = objc_msgSend(v0, sel_collectionView);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v4, sel_systemGroupedBackgroundColor);
      objc_msgSend(v7, sel_setBackgroundColor_, v8);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC3B0340(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC3B01D4();

}

void sub_1BC3B0374(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for FeedItemListViewController();
  v4 = v5.receiver;
  objc_msgSendSuper2(&v5, sel_viewWillAppear_, a3);
  sub_1BC62CDAC();

}

void sub_1BC3B03D8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC3B0408()
{
  uint64_t v0;

  return swift_bridgeObjectRelease();
}

id sub_1BC3B0444()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedItemListViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC3B0478(uint64_t a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3B04C0()
{
  return type metadata accessor for FeedItemListViewController();
}

uint64_t sub_1BC3B04C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1BC62A9C4();
  result = sub_1BC62A9B8();
  v4 = MEMORY[0x1E0D2D2C8];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_1BC3B0504()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))(qword_1EF459B58 + (*MEMORY[0x1E0DEEDD8] & **v0) + 32))();
}

uint64_t sub_1BC3B0548()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;

  v1 = v0;
  v2 = sub_1BC62B12C();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC62AC10();
  v3 = (void *)MEMORY[0x1BCCEFEBC]();
  objc_msgSend(v3, sel_setPredicate_, v1[2]);
  sub_1BC3B0774();
  v4 = (void *)sub_1BC62C86C();
  objc_msgSend(v3, sel_setSortDescriptors_, v4);

  __swift_project_boxed_opaque_existential_1Tm(v1 + 4, v1[7]);
  v5 = v3;
  v6 = (void *)sub_1BC62A9D0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v5, v6, 0, 0);

  sub_1BC379AA4();
  sub_1BC62B0FC();
  v7 = sub_1BC62AF34();

  sub_1BC379B20((unint64_t *)&qword_1EF42A240, 255, (uint64_t (*)(uint64_t))sub_1BC379AA4, MEMORY[0x1E0D2B7F8]);
  return v7;
}

uint64_t sub_1BC3B06D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedItemListViewDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BC3B0728()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC3792D8();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v0 + 32) = sub_1BC3B0548();
  *(_QWORD *)(v0 + 40) = v1;
  return v0;
}

unint64_t sub_1BC3B0774()
{
  unint64_t result;

  result = qword_1ED6A53B0;
  if (!qword_1ED6A53B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A53B0);
  }
  return result;
}

uint64_t ListConceptManager.togglePinState(for:onCommitHandler:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  char v25;
  id v26;
  NSObject *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  NSObject *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  id v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  os_log_t v62;
  uint64_t v63;
  uint64_t v65;
  int v66;
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v5 = v4;
  v74 = a2;
  v75 = a3;
  v73 = a4;
  v68 = sub_1BC62A7B4();
  v76 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3B14B0();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v65 - v13;
  v15 = sub_1BC62BB34();
  v69 = *(_QWORD *)(v15 - 8);
  v70 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v65 - v19;
  v21 = sub_1BC62BABC();
  v71 = *(_QWORD *)(v21 - 8);
  v72 = v21;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BA20();
  v24 = sub_1BC62BAB0();
  v25 = sub_1BC3B132C((uint64_t)a1, v24, (uint64_t)&unk_1EF42C208);
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
  {
    sub_1BC62BAF8();
    swift_retain_n();
    v26 = a1;
    v27 = sub_1BC62BB28();
    v28 = sub_1BC62CADC();
    if (os_log_type_enabled(v27, (os_log_type_t)v28))
    {
      v66 = v28;
      v67 = v27;
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v65 = v30;
      *(_DWORD *)v29 = 136446722;
      v77 = *v5;
      v78 = v30;
      sub_1BC3B1504();
      v31 = sub_1BC62C6E0();
      v77 = sub_1BC4991F0(v31, v32, &v78);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      sub_1BC62BA38();
      v33 = v68;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v14, 1, v68) == 1)
      {
        v34 = 0x6E776F6E6B6E55;
        sub_1BC3B153C((uint64_t)v14);
        v35 = 0xE700000000000000;
      }
      else
      {
        v34 = sub_1BC62A778();
        v35 = v46;
        (*(void (**)(char *, uint64_t))(v76 + 8))(v14, v33);
      }
      v77 = sub_1BC4991F0(v34, v35, &v78);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2082;
      v47 = objc_msgSend(v26, sel_UUID);
      v48 = v8;
      sub_1BC62A79C();

      v49 = sub_1BC62A778();
      v51 = v50;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v48, v68);
      v77 = sub_1BC4991F0(v49, v51, &v78);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      v52 = v67;
      _os_log_impl(&dword_1BC30A000, v67, (os_log_type_t)v66, "[%{public}s] List UDC with identifier '%{public}s' is unpinning concept '%{public}s'", (uint8_t *)v29, 0x20u);
      v53 = v65;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v53, -1, -1);
      MEMORY[0x1BCCF36A8](v29, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v20, v70);
    v54 = v72;
    v55 = v71;
    sub_1BC62BA8C();
  }
  else
  {
    sub_1BC62BAF8();
    swift_retain_n();
    v36 = a1;
    v37 = sub_1BC62BB28();
    v38 = sub_1BC62CADC();
    if (os_log_type_enabled(v37, (os_log_type_t)v38))
    {
      v66 = v38;
      v67 = v37;
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v65 = v40;
      *(_DWORD *)v39 = 136446722;
      v77 = *v5;
      v78 = v40;
      sub_1BC3B1504();
      v41 = sub_1BC62C6E0();
      v77 = sub_1BC4991F0(v41, v42, &v78);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2082;
      sub_1BC62BA38();
      v43 = v68;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v12, 1, v68) == 1)
      {
        v44 = 0x6E776F6E6B6E55;
        sub_1BC3B153C((uint64_t)v12);
        v45 = 0xE700000000000000;
      }
      else
      {
        v44 = sub_1BC62A778();
        v45 = v56;
        (*(void (**)(char *, uint64_t))(v76 + 8))(v12, v43);
      }
      v77 = sub_1BC4991F0(v44, v45, &v78);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 22) = 2082;
      v57 = objc_msgSend(v36, sel_UUID);
      v58 = v8;
      sub_1BC62A79C();

      v59 = sub_1BC62A778();
      v61 = v60;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v58, v68);
      v77 = sub_1BC4991F0(v59, v61, &v78);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      v62 = v67;
      _os_log_impl(&dword_1BC30A000, v67, (os_log_type_t)v66, "[%{public}s] List UDC with identifier '%{public}s' is pinning concept '%{public}s'", (uint8_t *)v39, 0x20u);
      v63 = v65;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v63, -1, -1);
      MEMORY[0x1BCCF36A8](v39, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v18, v70);
    v54 = v72;
    v55 = v71;
    sub_1BC62BA98();
  }
  sub_1BC62BA44();
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v23, v54);
}

uint64_t sub_1BC3B0F38(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  int v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  char v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  id v25;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v4 = *(unsigned __int8 *)a1;
  v22 = a1[3];
  v20 = a1[2];
  v21 = a1[4];
  v18 = a1[6];
  v19 = a1[5];
  v17 = a1[7];
  swift_bridgeObjectRetain();
  v5 = (uint64_t *)(a2 + 48);
  v23 = v4;
  do
  {
    if (*((unsigned __int8 *)v5 - 16) == v4)
    {
      v6 = (void *)*(v5 - 1);
      v24 = *v5;
      v8 = v5[1];
      v7 = v5[2];
      v9 = v5[3];
      v10 = v5[4];
      v11 = v5[5];
      v12 = (void *)v5[6];
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = v12;
      v25 = v6;
      if ((sub_1BC62CEB4() & 1) == 0)
        goto LABEL_3;
      if (v8)
      {
        if (!v22 || (v24 != v20 || v8 != v22) && (sub_1BC62D574() & 1) == 0)
          goto LABEL_3;
      }
      else if (v22)
      {
        goto LABEL_3;
      }
      if ((v7 != v21 || v9 != v19) && (sub_1BC62D574() & 1) == 0
        || (sub_1BC3ED4CC(v10, v18) & 1) == 0
        || (sub_1BC3ED4CC(v11, v17) & 1) == 0)
      {
LABEL_3:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v4 = v23;

        goto LABEL_4;
      }
      v14 = sub_1BC62CEB4();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v4 = v23;
      if ((v14 & 1) != 0)
      {
        v16 = 1;
        goto LABEL_22;
      }
    }
LABEL_4:
    v5 += 9;
    --v2;
  }
  while (v2);
  v16 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BC3B11F0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3B1254(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1BC62D574();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1BC62D574() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3B1318(uint64_t a1, unint64_t a2)
{
  return sub_1BC3B132C(a1, a2, (uint64_t)&qword_1ED6A48A0);
}

uint64_t sub_1BC3B132C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v10;
  char v11;
  unint64_t v12;
  char v13;

  if (a2 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1BC62D3B8())
  {
    v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v7 = (id)MEMORY[0x1BCCF24CC](0, a2);
LABEL_5:
      v8 = v7;
      sub_1BC34B6A0(0, (unint64_t *)a3);
      a3 = sub_1BC62CEB4();

      if ((a3 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1)
        goto LABEL_18;
      if (v6)
        break;
      v6 = 5;
      while (1)
      {
        v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        v13 = sub_1BC62CEB4();

        if ((v13 & 1) != 0)
          goto LABEL_6;
        ++v6;
        if (v12 == v5)
          goto LABEL_18;
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      MEMORY[0x1BCCF24CC](a3, a2);
      v10 = a3 + 1;
      if (__OFADD__(a3, 1))
        break;
      v11 = sub_1BC62CEB4();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++a3;
      if (v10 == v5)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1BC3B14B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42B210)
  {
    sub_1BC62A7B4();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42B210);
  }
}

unint64_t sub_1BC3B1504()
{
  unint64_t result;

  result = qword_1EF42C200;
  if (!qword_1EF42C200)
  {
    sub_1BC62BA74();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42C200);
  }
  return result;
}

uint64_t sub_1BC3B153C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC3B14B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC3B1578(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  return sub_1BC3B1720(a1, a2, a3);
}

uint64_t sub_1BC3B158C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  if (a3 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    if (!v6)
      return v7;
    v17 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC3BDA2C(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
      break;
    v9 = 0;
    v7 = v17;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v10 = MEMORY[0x1BCCF24CC](v9, a3);
      }
      else
      {
        v10 = *(_QWORD *)(a3 + 8 * v9 + 32);
        swift_retain();
      }
      v15 = v10;
      a1(&v16, &v15);
      if (v4)
      {
        swift_release();
        swift_release();
        return v7;
      }
      v4 = 0;
      swift_release();
      v11 = v16;
      v17 = v7;
      v13 = *(_QWORD *)(v7 + 16);
      v12 = *(_QWORD *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BC3BDA2C(v12 > 1, v13 + 1, 1);
        v7 = v17;
      }
      ++v9;
      *(_QWORD *)(v7 + 16) = v13 + 1;
      *(_QWORD *)(v7 + 8 * v13 + 32) = v11;
      if (v6 == v9)
        return v7;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v6 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3B1720(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v6)
      break;
    v13 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1BCCF24CC](v8, a3);
      else
        v9 = *(id *)(a3 + 8 * v8 + 32);
      v10 = v9;
      v11 = v9;
      a1(&v12, &v11);

      if (v3)
        return swift_release();
      ++v8;
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      if (v6 == v8)
        return v13;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v6 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC3B1888(void (*a1)(_QWORD *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  _QWORD v28[5];
  char v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BDC64(0, v5, 0);
    v6 = v34;
    v8 = (_BYTE *)(a3 + 72);
    while (1)
    {
      v9 = *((_QWORD *)v8 - 4);
      v10 = *((_QWORD *)v8 - 3);
      v11 = *((_QWORD *)v8 - 2);
      v12 = *((_QWORD *)v8 - 1);
      v13 = *v8;
      v28[0] = *((_QWORD *)v8 - 5);
      v28[1] = v9;
      v28[2] = v10;
      v28[3] = v11;
      v28[4] = v12;
      v29 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(v30, v28);
      if (v4)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v30[0];
      v15 = v30[1];
      v17 = v30[2];
      v16 = v31;
      v18 = v32;
      v19 = v33;
      v34 = v6;
      v21 = *(_QWORD *)(v6 + 16);
      v20 = *(_QWORD *)(v6 + 24);
      if (v21 >= v20 >> 1)
      {
        v23 = v31;
        v26 = v32;
        v25 = v33;
        sub_1BC3BDC64(v20 > 1, v21 + 1, 1);
        v19 = v25;
        v18 = v26;
        v16 = v23;
        v6 = v34;
      }
      v8 += 48;
      *(_QWORD *)(v6 + 16) = v21 + 1;
      v22 = v6 + 48 * v21;
      *(_QWORD *)(v22 + 32) = v14;
      *(_QWORD *)(v22 + 40) = v15;
      *(_QWORD *)(v22 + 48) = v17;
      *(_QWORD *)(v22 + 56) = v16;
      *(_QWORD *)(v22 + 64) = v18;
      *(_BYTE *)(v22 + 72) = v19;
      --v5;
      v4 = 0;
      if (!v5)
        return v6;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

void BrowseCategory.queryDescriptors.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1BC62A7B4();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC3B226C(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)&loc_1BC3B1AE8 + *((int *)qword_1BC3B1ED0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BC3B1AF8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1BC3B1B1C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;

  v2 = *v0;
  v3 = sub_1BC55B770();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1BC558FD8(v2), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(v3 + 56) + 72 * v4;
    v7 = *(void **)(v6 + 8);
    v8 = *(void **)(v6 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = v8;
    v10 = v7;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = objc_msgSend((id)objc_opt_self(), sel_unknownRecordCategory);
    if (!v11)
    {
      __break(1u);
      JUMPOUT(0x1BC3B1ED0);
    }
    sub_1BC4FC8D8(v11, v1 - 168);
    v10 = *(id *)(v1 - 160);
    v9 = *(id *)(v1 - 104);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_1BC3B1AF8();
}

void sub_1BC3B1EF4(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v3 = *a1;
  v4 = (void *)objc_opt_self();
  v5 = v3;
  v6 = (void *)sub_1BC62A784();
  v7 = objc_msgSend(v4, sel_predicateForRecordsFromClinicalAccountIdentifier_, v6);

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A88]), sel_initWithSampleType_predicate_, v5, v7);
  *a2 = v8;
}

uint64_t BrowseCategory.makeQueryDescriptors(additionalPredicate:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  BrowseCategory.queryDescriptors.getter();
  v7 = v1;
  v8 = a1;
  v4 = sub_1BC3B1720((void (*)(uint64_t *__return_ptr, id *))sub_1BC3B22CC, (uint64_t)&v6, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BC3B2008@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v8 = type metadata accessor for BrowseCategory();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - v12;
  v14 = *a1;
  sub_1BC3B226C(a2, (uint64_t)&v27 - v12);
  v15 = objc_msgSend(v14, sel_sampleType);
  v16 = objc_msgSend(v14, sel_predicate);
  if (v16)
  {
    v17 = v16;
    if (a3)
    {
      sub_1BC34D844();
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1BC639570;
      *(_QWORD *)(v18 + 32) = v17;
      *(_QWORD *)(v18 + 40) = a3;
      v29 = v18;
      sub_1BC62C890();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
      v28 = a4;
      v19 = a3;
      v20 = v17;
      v21 = v19;
      v22 = v20;
      v23 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v23);

      a4 = v28;
    }
  }
  else if (a3)
  {
    v17 = a3;
  }
  else
  {
    v17 = 0;
  }
  sub_1BC3B226C((uint64_t)v13, (uint64_t)v11);
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A88]), sel_initWithSampleType_predicate_, v15, v17);

  sub_1BC3B22E8((uint64_t)v13);
  type metadata accessor for CategoryRecordQueryDescription();
  v25 = swift_allocObject();
  result = sub_1BC35F080((uint64_t)v11, v25 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_category);
  *(_QWORD *)(v25 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor) = v24;
  *a4 = v25;
  return result;
}

uint64_t sub_1BC3B226C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BrowseCategory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC3B22B0(void **a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1BC3B1EF4(a1, a2);
}

uint64_t sub_1BC3B22CC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC3B2008(a1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_1BC3B22E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BrowseCategory();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC3B232C()
{
  _BYTE *v0;

  if (*v0)
    return 0x736D657469;
  else
    return 0x656C746974;
}

uint64_t sub_1BC3B2358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC3B3440(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC3B237C()
{
  sub_1BC3B2C70();
  return sub_1BC62D700();
}

uint64_t sub_1BC3B23A4()
{
  sub_1BC3B2C70();
  return sub_1BC62D70C();
}

uint64_t sub_1BC3B23CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InternalStateSection()
{
  return objc_opt_self();
}

uint64_t sub_1BC3B2418(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v3 = v1;
  sub_1BC3B2CF8(0, &qword_1EF42C3D0, (uint64_t (*)(void))sub_1BC3B2C70, (uint64_t)&type metadata for InternalStateSection.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC3B2C70();
  sub_1BC62D6F4();
  v14 = 0;
  sub_1BC62D4D8();
  if (!v2)
  {
    v12[1] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BC3B3098(0, &qword_1EF42C3A0, v10, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC3B2D54(&qword_1EF42C3D8, &qword_1EF42C3E0, (uint64_t)&unk_1BC63BC94, MEMORY[0x1E0DEAF10]);
    sub_1BC62D4FC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BC3B25A4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;
  char v15;

  sub_1BC3B2CF8(0, &qword_1EF42C390, (uint64_t (*)(void))sub_1BC3B2C70, (uint64_t)&type metadata for InternalStateSection.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v13 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC3B2C70();
  sub_1BC62D6DC();
  if (v1)
  {
    v8 = v13[0];
    type metadata accessor for InternalStateSection();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v15 = 0;
    v9 = sub_1BC62D46C();
    v8 = v13[0];
    *(_QWORD *)(v13[0] + 16) = v9;
    *(_QWORD *)(v8 + 24) = v10;
    sub_1BC3B3098(0, &qword_1EF42C3A0, v11, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v14 = 1;
    sub_1BC3B2D54(&qword_1EF42C3A8, &qword_1EF42C3B0, (uint64_t)&unk_1BC63BCBC, MEMORY[0x1E0DEAF40]);
    sub_1BC62D490();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_QWORD *)(v8 + 32) = v13[1];
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v8;
}

uint64_t sub_1BC3B27AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC3B2BEC(a1, (void (*)(void))type metadata accessor for InternalStateSection, (uint64_t (*)(uint64_t))sub_1BC3B25A4, a2);
}

uint64_t sub_1BC3B27D4(_QWORD *a1)
{
  return sub_1BC3B2418(a1);
}

uint64_t sub_1BC3B27F4()
{
  _BYTE *v0;

  if (*v0)
    return 0x65756C6176;
  else
    return 0x656C746974;
}

uint64_t sub_1BC3B2820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC3B3520(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC3B2844()
{
  sub_1BC3B2CB4();
  return sub_1BC62D700();
}

uint64_t sub_1BC3B286C()
{
  sub_1BC3B2CB4();
  return sub_1BC62D70C();
}

uint64_t sub_1BC3B2894()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InternalStateItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC3B28E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;

  sub_1BC3B2CF8(0, &qword_1EF42C3C8, (uint64_t (*)(void))sub_1BC3B2CB4, (uint64_t)&type metadata for InternalStateItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC3B2CB4();
  sub_1BC62D6F4();
  v11 = 0;
  sub_1BC62D4D8();
  if (!v1)
  {
    v10 = 1;
    sub_1BC62D4D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

_QWORD *sub_1BC3B2A10(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  char v18;

  sub_1BC3B2CF8(0, &qword_1EF42C3B8, (uint64_t (*)(void))sub_1BC3B2CB4, (uint64_t)&type metadata for InternalStateItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC3B2CB4();
  sub_1BC62D6DC();
  if (v1)
  {
    v8 = v16;
    type metadata accessor for InternalStateItem();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v18 = 0;
    v9 = sub_1BC62D46C();
    v8 = v16;
    v16[2] = v9;
    v8[3] = v10;
    v17 = 1;
    v12 = sub_1BC62D46C();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v8[4] = v12;
    v8[5] = v14;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v8;
}

uint64_t sub_1BC3B2BC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC3B2BEC(a1, (void (*)(void))type metadata accessor for InternalStateItem, (uint64_t (*)(uint64_t))sub_1BC3B2A10, a2);
}

uint64_t sub_1BC3B2BEC@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  a2();
  v8 = swift_allocObject();
  result = a3(a1);
  if (!v4)
    *a4 = v8;
  return result;
}

uint64_t sub_1BC3B2C50(_QWORD *a1)
{
  return sub_1BC3B28E0(a1);
}

unint64_t sub_1BC3B2C70()
{
  unint64_t result;

  result = qword_1EF42C398;
  if (!qword_1EF42C398)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63BF00, &type metadata for InternalStateSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF42C398);
  }
  return result;
}

unint64_t sub_1BC3B2CB4()
{
  unint64_t result;

  result = qword_1EF42C3C0;
  if (!qword_1EF42C3C0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63BEB0, &type metadata for InternalStateItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF42C3C0);
  }
  return result;
}

void sub_1BC3B2CF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_1BC3B2D54(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BC3B3098(255, &qword_1EF42C3A0, a3, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BC3B2DE4(a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC3B2DE4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for InternalStateItem();
    result = MEMORY[0x1BCCF35C4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1BC3B2E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;
  uint64_t v16;

  sub_1BC3B3098(0, (unint64_t *)&qword_1EF434570, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - v5;
  v7 = sub_1BC4D9BC8();
  v8 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  sub_1BC3B30F0();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC639590;
  v10 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v9 + 64) = v10;
  *(_QWORD *)(v9 + 32) = v7;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v11 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v12 = sub_1BC62C6A4();
  v14 = v13;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v6);
  type metadata accessor for InternalStateItem();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = v12;
  result[5] = v14;
  return result;
}

void sub_1BC3B3098(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = a4(a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC3B30F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4E70)
  {
    sub_1BC35817C(255, (unint64_t *)&qword_1ED6A4E90);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4E70);
  }
}

uint64_t sub_1BC3B3154(uint64_t a1)
{
  uint64_t v2;

  sub_1BC3B3098(0, (unint64_t *)&qword_1EF434570, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for InternalStateItem.CodingKeys()
{
  return &type metadata for InternalStateItem.CodingKeys;
}

uint64_t _s15HealthRecordsUI17InternalStateItemC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC3B3210 + 4 * byte_1BC63BC35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC3B3244 + 4 * byte_1BC63BC30[v4]))();
}

uint64_t sub_1BC3B3244(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC3B324C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC3B3254);
  return result;
}

uint64_t sub_1BC3B3260(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC3B3268);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC3B326C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC3B3274(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InternalStateSection.CodingKeys()
{
  return &type metadata for InternalStateSection.CodingKeys;
}

unint64_t sub_1BC3B3294()
{
  unint64_t result;

  result = qword_1EF42C3E8;
  if (!qword_1EF42C3E8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63BDD0, &type metadata for InternalStateSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF42C3E8);
  }
  return result;
}

unint64_t sub_1BC3B32DC()
{
  unint64_t result;

  result = qword_1EF42C3F0;
  if (!qword_1EF42C3F0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63BE88, &type metadata for InternalStateItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF42C3F0);
  }
  return result;
}

unint64_t sub_1BC3B3324()
{
  unint64_t result;

  result = qword_1EF42C3F8;
  if (!qword_1EF42C3F8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63BDF8, &type metadata for InternalStateItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF42C3F8);
  }
  return result;
}

unint64_t sub_1BC3B336C()
{
  unint64_t result;

  result = qword_1EF42C400;
  if (!qword_1EF42C400)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63BE20, &type metadata for InternalStateItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF42C400);
  }
  return result;
}

unint64_t sub_1BC3B33B4()
{
  unint64_t result;

  result = qword_1EF42C408;
  if (!qword_1EF42C408)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63BD40, &type metadata for InternalStateSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF42C408);
  }
  return result;
}

unint64_t sub_1BC3B33FC()
{
  unint64_t result;

  result = qword_1EF42C410;
  if (!qword_1EF42C410)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63BD68, &type metadata for InternalStateSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF42C410);
  }
  return result;
}

uint64_t sub_1BC3B3440(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC3B3520(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC3B3690(void *a1)
{
  id v2;
  void *v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t result;
  id v17;

  v2 = objc_msgSend(a1, sel_keyColor);
  if (v2)
  {
    v3 = v2;
    v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartSeries()), sel_init);
    objc_msgSend(v4, sel_setWantsRoundingDuringYRangeExpansion_, 0);
    v5 = (void *)objc_opt_self();
    v6 = objc_msgSend(v5, sel_strokeStyleWithColor_lineWidth_, v3, 8.0);
    v7 = OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_selectedStrokeStyle;
    v8 = *(void **)&v4[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_selectedStrokeStyle];
    *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_selectedStrokeStyle] = v6;

    v9 = objc_msgSend((id)objc_opt_self(), sel_hk_chartInactiveSeriesColor);
    v10 = objc_msgSend(v5, sel_strokeStyleWithColor_lineWidth_, v9, 8.0);

    v11 = OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_unselectedStrokeStyle;
    v12 = *(void **)&v4[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_unselectedStrokeStyle];
    *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_unselectedStrokeStyle] = v10;

    v13 = *(void **)&v4[v7];
    if (v13)
      objc_msgSend(v13, sel_setLineCap_, 1);
    v14 = *(void **)&v4[v11];
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v15, sel_setLineCap_, 1);

    }
    return (uint64_t)v4;
  }
  else
  {
    sub_1BC62D1D8();
    swift_bridgeObjectRelease();
    sub_1BC62D718();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    v17 = objc_msgSend(a1, sel_description);
    sub_1BC62C680();

    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    result = sub_1BC62D394();
    __break(1u);
  }
  return result;
}

uint64_t SingleValueDataTransformer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SingleValueDataTransformer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1BC3B39F8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  id v19;
  id v20;
  objc_class *v21;
  char *v22;
  id v23;
  id v24;
  char *v25;
  id v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v33;
  objc_super v34;
  uint64_t v35;

  v33 = a2;
  v7 = sub_1BC62A760();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - v12;
  v14 = objc_msgSend(a1, sel_date);
  sub_1BC62A724();

  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  v15 = 9;
  v16 = 9;
  if (a3 == 2)
  {
    v16 = 6;
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  if (a3 == 4)
    v17 = 0;
  else
    v15 = v16;
  if (a3 == 1)
  {
    v18 = 0;
  }
  else
  {
    a3 = v15;
    v18 = v17;
  }
  objc_allocWithZone((Class)type metadata accessor for SingleValueChartData());
  v19 = a1;
  v20 = SingleValueChartData.init(chartableQuantitySet:date:dateFormat:hasTime:partOfOutOfRangeSeries:)(v19, (uint64_t)v11, a3, v18, a4 == 1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v21 = (objc_class *)type metadata accessor for MedicalRecordChartPoint();
  v22 = (char *)objc_allocWithZone(v21);
  *(_QWORD *)&v22[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet] = v19;
  v23 = v19;
  v24 = v33;
  v25 = v22;
  v26 = objc_msgSend(v23, sel_quantities);
  sub_1BC3B3DC8();
  v27 = sub_1BC62C878();

  v28 = v24;
  v29 = sub_1BC4C7990(v27, (uint64_t)v28);
  swift_bridgeObjectRelease();

  v35 = v29;
  swift_bridgeObjectRetain();
  sub_1BC4C702C(&v35);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues] = v35;
  *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo] = v20;
  v30 = v20;

  v34.receiver = v25;
  v34.super_class = v21;
  v31 = objc_msgSendSuper2(&v34, sel_init);

  return v31;
}

id sub_1BC3B3C84(void *a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v2 = objc_msgSend(objc_allocWithZone((Class)HRInteractiveChartMedicalRecordFormatter), sel_init);
  v3 = objc_allocWithZone(MEMORY[0x1E0D2F770]);
  v4 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v3, sel_initWithGraphSeries_displayName_unitName_valueFormatter_dataTypeCode_, v4, v5, v6, v2, 152);

  return v7;
}

uint64_t type metadata accessor for SingleValueDataTransformer()
{
  return objc_opt_self();
}

uint64_t method lookup function for SingleValueDataTransformer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SingleValueDataTransformer.chartPoint(for:in:with:dataSourceType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of SingleValueDataTransformer.graphSeries(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of SingleValueDataTransformer.chartDisplayType(with:displayName:unitName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

unint64_t sub_1BC3B3DC8()
{
  unint64_t result;

  result = qword_1EF432A70;
  if (!qword_1EF432A70)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF432A70);
  }
  return result;
}

BOOL LocalizationContext.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

_QWORD *sub_1BC3B3E28@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

BOOL HKConcept.isNull.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_identifier);
  v2 = objc_msgSend(v1, sel_rawIdentifier);

  return v2 == 0;
}

uint64_t sub_1BC3B3EA8(void *a1)
{
  id v1;
  id v2;
  id v3;
  unsigned int v5;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_identifier);
  v3 = objc_msgSend(v2, sel_rawIdentifier);

  if (v3 && (objc_msgSend(v1, sel_isUndefined) & 1) == 0)
  {
    v5 = objc_msgSend(v1, sel_isInMemory);

    return v5 ^ 1;
  }
  else
  {

    return 0;
  }
}

uint64_t HKConcept.isQualifiedForConceptRoom.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_identifier);
  v2 = objc_msgSend(v1, sel_rawIdentifier);

  if (v2 && (objc_msgSend(v0, sel_isUndefined) & 1) == 0)
    return objc_msgSend(v0, sel_isInMemory) ^ 1;
  else
    return 0;
}

uint64_t sub_1BC3B3FC0()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;

  if (objc_msgSend(v0, sel_isAdHoc))
  {
    v1 = objc_msgSend(v0, sel_attributes);
    sub_1BC3B4238();
    v2 = sub_1BC62C878();

    if (v2 >> 62)
      goto LABEL_18;
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v3; v3 = sub_1BC62D3B8())
    {
      v4 = 4;
      while (1)
      {
        v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF24CC](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
        v6 = v5;
        v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        if (objc_msgSend(v5, sel_type) == (id)2)
        {
          swift_bridgeObjectRelease_n();

          goto LABEL_13;
        }

        ++v4;
        if (v7 == v3)
          goto LABEL_11;
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
LABEL_13:
  v8 = objc_msgSend(v0, sel_localizedPreferredName);
  if (!v8)
    return 0;
  v9 = v8;
  v10 = sub_1BC62C680();

  return v10;
}

id static HKQuery.predicateForSamples(conceptId:keyPath:)(uint64_t a1, uint64_t a2)
{
  void *ObjCClassFromMetadata;
  id v5;
  id v6;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB64B0]), sel_initWithRawIdentifier_, a1);
  v6 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForSamplesWithConceptIdentifier_keyPath_, v5, a2);

  return v6;
}

unint64_t sub_1BC3B41E4()
{
  unint64_t result;

  result = qword_1EF42C4D0;
  if (!qword_1EF42C4D0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for LocalizationContext, &type metadata for LocalizationContext);
    atomic_store(result, (unint64_t *)&qword_1EF42C4D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationContext()
{
  return &type metadata for LocalizationContext;
}

unint64_t sub_1BC3B4238()
{
  unint64_t result;

  result = qword_1EF42C4D8;
  if (!qword_1EF42C4D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42C4D8);
  }
  return result;
}

uint64_t static SharedFeedItemIdentifierFactory.make(for:categoryKind:feedItemKind:profile:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  void *v11;
  unint64_t v12;
  id v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  __int128 v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v6 = sub_1BC62A7B4();
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a3;
  v10 = *a4;
  v47 = xmmword_1BC63C060;
  v11 = (void *)sub_1BC62AA84();
  v45 = 0;
  v46 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v45 = 0xD000000000000016;
  v46 = 0x80000001BC655370;
  LOBYTE(v44) = v10;
  FeedItemKind.rawValue.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v12 = v45;
  if (v11)
  {
    v45 = 0x656C69666F72505BLL;
    v46 = 0xE90000000000003ALL;
    v41 = v12;
    v13 = v11;
    v14 = objc_msgSend(v13, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v43);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v15 = v45;
    v16 = v46;
  }
  else
  {
    v15 = 0xD000000000000013;
    v16 = 0x80000001BC655390;
  }
  v45 = v15;
  v46 = v16;
  sub_1BC62C764();

  swift_bridgeObjectRelease();
  v48 = v45;
  v49 = v46;
  v50 = 0xD000000000000014;
  v51 = 0x80000001BC6553B0;
  v45 = 0x676E69726168535BLL;
  v46 = 0xEB000000003A4449;
  sub_1BC62C764();
  sub_1BC62C764();
  v52 = v45;
  v53 = v46;
  v45 = 0;
  v46 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v45 = 0xD000000000000010;
  v46 = 0x80000001BC6553D0;
  v44 = v9;
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v54 = v45;
  v55 = v46;
  v17 = v49;
  if (v49)
  {
    v18 = v48;
    swift_bridgeObjectRetain();
    v19 = sub_1BC3B5060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v21 = v19[2];
    v20 = v19[3];
    if (v21 >= v20 >> 1)
      v19 = sub_1BC3B5060((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
    v19[2] = v21 + 1;
    v22 = &v19[2 * v21];
    v22[4] = v18;
    v22[5] = v17;
  }
  else
  {
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v23 = v51;
  if (v51)
  {
    v24 = v50;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v19 = sub_1BC3B5060(0, v19[2] + 1, 1, v19);
    v26 = v19[2];
    v25 = v19[3];
    if (v26 >= v25 >> 1)
      v19 = sub_1BC3B5060((_QWORD *)(v25 > 1), v26 + 1, 1, v19);
    v19[2] = v26 + 1;
    v27 = &v19[2 * v26];
    v27[4] = v24;
    v27[5] = v23;
  }
  v28 = v53;
  if (v53)
  {
    v29 = v52;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v19 = sub_1BC3B5060(0, v19[2] + 1, 1, v19);
    v31 = v19[2];
    v30 = v19[3];
    if (v31 >= v30 >> 1)
      v19 = sub_1BC3B5060((_QWORD *)(v30 > 1), v31 + 1, 1, v19);
    v19[2] = v31 + 1;
    v32 = &v19[2 * v31];
    v32[4] = v29;
    v32[5] = v28;
  }
  v33 = v55;
  if (v55)
  {
    v34 = v54;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v19 = sub_1BC3B5060(0, v19[2] + 1, 1, v19);
    v36 = v19[2];
    v35 = v19[3];
    if (v36 >= v35 >> 1)
      v19 = sub_1BC3B5060((_QWORD *)(v35 > 1), v36 + 1, 1, v19);
    v19[2] = v36 + 1;
    v37 = &v19[2 * v36];
    v37[4] = v34;
    v37[5] = v33;
  }
  v38 = MEMORY[0x1E0DEA968];
  sub_1BC34B508(0, (unint64_t *)&qword_1EF4290E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayDestroy();
  v45 = (unint64_t)v19;
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A52C0, v38, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v39 = sub_1BC62C5D8();
  swift_bridgeObjectRelease();
  return v39;
}

unint64_t static SharedFeedItemIdentifierFactory.makePrefixComponent(feedItemKind:)()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  FeedItemKind.rawValue.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return 0xD000000000000016;
}

uint64_t sub_1BC3B4864(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  unint64_t v12;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v11 = 0x656C69666F72505BLL;
    v12 = 0xE90000000000003ALL;
    v6 = a1;
    v7 = objc_msgSend(v6, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v8 = v11;
    v9 = v12;
  }
  else
  {
    v9 = 0x80000001BC655390;
    v8 = 0xD000000000000013;
  }
  v11 = v8;
  v12 = v9;
  sub_1BC62C764();
  return v11;
}

unint64_t static SharedFeedItemIdentifierFactory.makeTagComponentForSnippetItem()()
{
  return 0xD000000000000014;
}

uint64_t static SharedFeedItemIdentifierFactory.makeComponent(sharingId:)()
{
  sub_1BC62C764();
  sub_1BC62C764();
  return 0x676E69726168535BLL;
}

unint64_t static SharedFeedItemIdentifierFactory.makeComponent(categoryKind:)()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return 0xD000000000000010;
}

uint64_t static SharedFeedItemIdentifierFactory.makeComboItemIdentifier(for:feedItemKind:profile:)(unsigned __int8 *a1, char *a2, uint64_t a3)
{
  return sub_1BC3B4B14(a1, a2, a3, 0xD000000000000012, 0x80000001BC6553F0);
}

unint64_t static SharedFeedItemIdentifierFactory.makeTagComponentForComboItem()()
{
  return 0xD000000000000012;
}

uint64_t static SharedFeedItemIdentifierFactory.makeNewRecordsItemIdentifier(for:feedItemKind:profile:)(unsigned __int8 *a1, char *a2, uint64_t a3)
{
  return sub_1BC3B4B14(a1, a2, a3, 0xD000000000000019, 0x80000001BC655410);
}

uint64_t sub_1BC3B4B14(unsigned __int8 *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  void *v13;
  unint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;

  v37 = a4;
  v38 = a5;
  v7 = sub_1BC62A7B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = *a2;
  v13 = (void *)sub_1BC62AA84();
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v40 = 0xD000000000000016;
  v41 = 0x80000001BC655370;
  LOBYTE(v39) = v12;
  FeedItemKind.rawValue.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v14 = v40;
  if (v13)
  {
    v40 = 0x656C69666F72505BLL;
    v41 = 0xE90000000000003ALL;
    v36 = v14;
    v15 = v13;
    v16 = objc_msgSend(v15, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v17 = v40;
    v18 = v41;
  }
  else
  {
    v17 = 0xD000000000000013;
    v18 = 0x80000001BC655390;
  }
  v40 = v17;
  v41 = v18;
  sub_1BC62C764();

  swift_bridgeObjectRelease();
  v20 = v40;
  v19 = v41;
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v40 = 0xD000000000000010;
  v41 = 0x80000001BC6553D0;
  v39 = v11;
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v22 = v40;
  v21 = v41;
  swift_bridgeObjectRetain();
  v23 = sub_1BC3B5060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v25 = v23[2];
  v24 = v23[3];
  v26 = v24 >> 1;
  v27 = v25 + 1;
  if (v24 >> 1 <= v25)
  {
    v23 = sub_1BC3B5060((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
    v24 = v23[3];
    v26 = v24 >> 1;
  }
  v23[2] = v27;
  v28 = &v23[2 * v25];
  v28[4] = v20;
  v28[5] = v19;
  if (v26 < (uint64_t)(v25 + 2))
    v23 = sub_1BC3B5060((_QWORD *)(v24 > 1), v25 + 2, 1, v23);
  v23[2] = v25 + 2;
  v29 = &v23[2 * v27];
  v30 = v38;
  v29[4] = v37;
  v29[5] = v30;
  v31 = v23[2];
  v32 = v23[3];
  swift_bridgeObjectRetain();
  if (v31 >= v32 >> 1)
    v23 = sub_1BC3B5060((_QWORD *)(v32 > 1), v31 + 1, 1, v23);
  v23[2] = v31 + 1;
  v33 = &v23[2 * v31];
  v33[4] = v22;
  v33[5] = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = (unint64_t)v23;
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A52C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v34 = sub_1BC62C5D8();
  swift_bridgeObjectRelease();
  return v34;
}

unint64_t static SharedFeedItemIdentifierFactory.makeTagComponentForNotificationItem()()
{
  return 0xD000000000000019;
}

unint64_t sub_1BC3B4EE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A52C8;
  if (!qword_1ED6A52C8)
  {
    sub_1BC34B508(255, (unint64_t *)&qword_1ED6A52C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A52C8);
  }
  return result;
}

_QWORD *sub_1BC3B4F44(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC3B9AAC();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4])
          memmove(v12, a4 + 4, 80 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B735C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B5060(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B7564(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SharedFeedItemIdentifierFactory()
{
  return &type metadata for SharedFeedItemIdentifierFactory;
}

uint64_t sub_1BC3B5190(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC3B7140(a1, a2, a3, a4, &qword_1EF42C0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
}

_QWORD *sub_1BC3B51A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC3B9548(0, (unint64_t *)&qword_1EF42A0F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B7A64(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3B52BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC3B7140(a1, a2, a3, a4, &qword_1EF42C4E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8]);
}

_QWORD *sub_1BC3B52D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC357158(0, &qword_1EF42C5A0, (uint64_t (*)(uint64_t))sub_1BC3B9180, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B7654(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B540C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC34B508(0, &qword_1EF42C598, (uint64_t)&_s16FormattedSectionVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B7D88(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B5540(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC3B9260();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B7F9C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B5648(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC3B9478();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4])
          memmove(v12, a4 + 4, 72 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B7E7C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B576C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC3B940C();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 120);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[15 * v8 + 4])
          memmove(v12, a4 + 4, 120 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B80B4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B5888(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC3B93A0();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4])
          memmove(v12, a4 + 4, 96 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B81D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B59A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC3B9334();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B82F4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B5AB0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC3B92C8();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 95;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 7);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B8410(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B5BB8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC34B508(0, &qword_1EF42C4E0, (uint64_t)&type metadata for ClinicalAccountLoginUpgradeAction.Action, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B852C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3B5CD8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC3B7140(a1, a2, a3, a4, &qword_1EF42C670, (uint64_t (*)(uint64_t))sub_1BC37BB78);
}

_QWORD *sub_1BC3B5CEC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3B5D24(a1, a2, a3, a4, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0);
}

_QWORD *sub_1BC3B5D08(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3B5D24(a1, a2, a3, a4, &qword_1EF42C5F8, (unint64_t *)&qword_1EF42C600);
}

_QWORD *sub_1BC3B5D24(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      sub_1BC3B98BC(0, a5, a6);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B8620(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B5E64(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC357158(0, &qword_1EF42C608, (uint64_t (*)(uint64_t))sub_1BC3B9960, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B775C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3B5F84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC3B7140(a1, a2, a3, a4, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090]);
}

_QWORD *sub_1BC3B5F98(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC357158(0, &qword_1EF42C650, (uint64_t (*)(uint64_t))sub_1BC3780CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B8734(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3B60B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC3B7140(a1, a2, a3, a4, &qword_1EF42C658, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData);
}

char *sub_1BC3B60CC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BC3B6108(a1, a2, a3, a4, &qword_1EF42C640, (uint64_t)&type metadata for SettingsSection);
}

_QWORD *sub_1BC3B60E0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3B6A0C(a1, a2, a3, a4, &qword_1EF42C5E0, (uint64_t (*)(uint64_t))sub_1BC3B95B4);
}

char *sub_1BC3B60F4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BC3B6108(a1, a2, a3, a4, &qword_1EF42C5D8, (uint64_t)&type metadata for NavigationType);
}

char *sub_1BC3B6108(char *result, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  char *v12;
  size_t v13;
  char *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = *((_QWORD *)a4 + 3);
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = *((_QWORD *)a4 + 2);
    if (v9 <= v10)
      v11 = *((_QWORD *)a4 + 2);
    else
      v11 = v9;
    if (v11)
    {
      sub_1BC34B508(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (char *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      *((_QWORD *)v12 + 2) = v10;
      *((_QWORD *)v12 + 3) = 2 * v13 - 64;
      v14 = v12 + 32;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[v10 + 32])
          memmove(v14, a4 + 32, v10);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (char *)MEMORY[0x1E0DEE9D8];
      v14 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B95D0(0, v10, v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B620C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3B6A0C(a1, a2, a3, a4, &qword_1EF42C660, (uint64_t (*)(uint64_t))sub_1BC3B9A48);
}

_QWORD *sub_1BC3B6220(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC34B508(0, &qword_1EF42C5D0, (uint64_t)&type metadata for UserDomainConceptFeedItemViewData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4])
          memmove(v12, a4 + 4, 104 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B7860(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B6358(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3B640C(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BC3B9078, &qword_1EF42C588, (uint64_t (*)(void))sub_1BC3B913C, (uint64_t)&_s23FormattedRecordMetadataVN);
}

_QWORD *sub_1BC3B637C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3B640C(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BC3B8FC8, &qword_1EF42C570, (uint64_t (*)(void))sub_1BC3B9034, (uint64_t)&_s22FormattedRecord3ValuesVN);
}

_QWORD *sub_1BC3B63A0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3B640C(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BC3B8F18, &qword_1EF42C558, (uint64_t (*)(void))sub_1BC3B8F84, (uint64_t)&_s27FormattedRecordValueInRangeVN);
}

_QWORD *sub_1BC3B63C4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3B640C(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BC3B8E68, &qword_1EF42C540, (uint64_t (*)(void))sub_1BC3B8ED4, (uint64_t)&_s20FormattedRecordValueVN);
}

_QWORD *sub_1BC3B63E8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3B640C(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BC3B8DB8, &qword_1EF42C528, (uint64_t (*)(void))sub_1BC3B8E24, (uint64_t)&_s15FormattedRecordVN);
}

_QWORD *sub_1BC3B640C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), unint64_t *a6, uint64_t (*a7)(void), uint64_t a8)
{
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  size_t v18;
  _QWORD *v19;

  v12 = (char)result;
  if ((a3 & 1) == 0)
  {
    v14 = a2;
    goto LABEL_8;
  }
  v13 = a4[3];
  v14 = v13 >> 1;
  if ((uint64_t)(v13 >> 1) >= a2)
    goto LABEL_8;
  if (v14 + 0x4000000000000000 >= 0)
  {
    v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v13 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v14 = a2;
LABEL_8:
    v15 = a4[2];
    if (v14 <= v15)
      v16 = a4[2];
    else
      v16 = v14;
    if (v16)
    {
      a5(0);
      v17 = (_QWORD *)swift_allocObject();
      v18 = _swift_stdlib_malloc_size(v17);
      v17[2] = v15;
      v17[3] = 2 * ((uint64_t)(v18 - 32) / 40);
      v19 = v17 + 4;
      if ((v12 & 1) != 0)
      {
LABEL_13:
        if (v17 != a4 || v19 >= &a4[5 * v15 + 4])
          memmove(v19, a4 + 4, 40 * v15);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v19 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B7950(0, v15, (unint64_t)v19, (uint64_t)a4, a6, a7, a8);
LABEL_22:
    swift_bridgeObjectRelease();
    return v17;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B6550(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC3B94E4();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B8838(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1BC3B6658(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BC3B6108(a1, a2, a3, a4, &qword_1EF42C5B8, (uint64_t)&type metadata for RecordCategoryViewController.ModeSegment);
}

uint64_t sub_1BC3B666C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC3B7140(a1, a2, a3, a4, &qword_1EF42C4F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

_QWORD *sub_1BC3B6680(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC34B508(0, &qword_1ED6A3708, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B747C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B67A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC34B508(0, &qword_1EF42C648, (uint64_t)&type metadata for RecordTitleWithSubtitleItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4])
          memmove(v12, a4 + 4, 72 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B8968(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B68D8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC34B508(0, &qword_1EF42C518, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B747C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B69F8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3B6A0C(a1, a2, a3, a4, &qword_1EF42C630, (uint64_t (*)(uint64_t))sub_1BC3B99D4);
}

_QWORD *sub_1BC3B6A0C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      sub_1BC357158(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B7B7C(0, v11, (unint64_t)v16, (uint64_t)a4, (void (*)(_QWORD))a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B6B34(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC34B508(0, &qword_1EF42C628, (uint64_t)&type metadata for GatewayIdentifiedClinicalAccount, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B8A5C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B6C54(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC357158(0, &qword_1EF42C620, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B8B4C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B6D74(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC357158(0, &qword_1EF42C4F8, (uint64_t (*)(uint64_t))sub_1BC3B894C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B8C34(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3B6EAC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC357158(0, &qword_1EF42C508, (uint64_t (*)(uint64_t))sub_1BC3B8D3C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC3B7C80(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1BC3B6FE4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BC3B6108(a1, a2, a3, a4, &qword_1ED6A5318, (uint64_t)&type metadata for DisplayCategory.Kind);
}

_QWORD *sub_1BC3B6FF8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC34B508(0, &qword_1EF42C618, (uint64_t)&type metadata for IconTextListView.ListItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC3B96B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3B7118(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC3B7140(a1, a2, a3, a4, &qword_1ED6A53B8, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory);
}

uint64_t sub_1BC3B712C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC3B7140(a1, a2, a3, a4, &qword_1EF42C5E8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordKind);
}

uint64_t sub_1BC3B7140(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BC357158(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1BC62D388();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BC3B97A4(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_1BC3B735C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      sub_1BC36F18C(0, &qword_1ED6A4EE0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

char *sub_1BC3B747C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B7564(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B7654(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_1BC3B9180(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B775C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BC3B9960();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B7860(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 104 * a1 + 32;
    v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B7950(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = a4 + 40 * a1 + 32;
    v9 = a3 + 40 * v7;
    if (v8 >= v9 || v8 + 40 * v7 <= a3)
    {
      sub_1BC3B90E4(0, a5, a6, a7);
      swift_arrayInitWithCopy();
      return v9;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B7A64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BC3B9914(0, (unint64_t *)&qword_1EF42A0F8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B7B7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      a5(0);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B7C80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1BC3B8D3C();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B7D88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B7E7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      sub_1BC36F18C(0, &qword_1EF429BE0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B7F9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1BC36F18C(0, (unint64_t *)&qword_1EF429B28);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B80B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 120 * a1 + 32;
    v6 = a3 + 120 * v4;
    if (v5 >= v6 || v5 + 120 * v4 <= a3)
    {
      sub_1BC36F18C(0, &qword_1EF429BA8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B81D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 96 * a1 + 32;
    v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      sub_1BC36F18C(0, &qword_1EF429B80);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B82F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_1BC36F18C(0, &qword_1EF429B60);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B8410(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 7) + 32;
    v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      sub_1BC36F18C(0, &qword_1EF429B38);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B852C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B8620(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_1BC3B9914(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B8734(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BC3780CC();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B8838(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BC3B9548(0, (unint64_t *)&qword_1EF42C5C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

void sub_1BC3B894C(uint64_t a1)
{
  sub_1BC3B919C(a1, &qword_1EF42C500, (void (*)(uint64_t))type metadata accessor for MedicalRecordChartDataSource);
}

uint64_t sub_1BC3B8968(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B8A5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

char *sub_1BC3B8B4C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B8C34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1BC3B894C(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

void sub_1BC3B8D3C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF435750)
  {
    sub_1BC357158(255, &qword_1EF42C510, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordChartDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF435750);
  }
}

void sub_1BC3B8DB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C520)
  {
    sub_1BC3B90E4(255, &qword_1EF42C528, (uint64_t (*)(void))sub_1BC3B8E24, (uint64_t)&_s15FormattedRecordVN);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C520);
  }
}

unint64_t sub_1BC3B8E24()
{
  unint64_t result;

  result = qword_1EF42C530;
  if (!qword_1EF42C530)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E8A4, &_s15FormattedRecordVN);
    atomic_store(result, (unint64_t *)&qword_1EF42C530);
  }
  return result;
}

void sub_1BC3B8E68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C538)
  {
    sub_1BC3B90E4(255, &qword_1EF42C540, (uint64_t (*)(void))sub_1BC3B8ED4, (uint64_t)&_s20FormattedRecordValueVN);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C538);
  }
}

unint64_t sub_1BC3B8ED4()
{
  unint64_t result;

  result = qword_1EF42C548;
  if (!qword_1EF42C548)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E888, &_s20FormattedRecordValueVN);
    atomic_store(result, (unint64_t *)&qword_1EF42C548);
  }
  return result;
}

void sub_1BC3B8F18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C550)
  {
    sub_1BC3B90E4(255, &qword_1EF42C558, (uint64_t (*)(void))sub_1BC3B8F84, (uint64_t)&_s27FormattedRecordValueInRangeVN);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C550);
  }
}

unint64_t sub_1BC3B8F84()
{
  unint64_t result;

  result = qword_1EF42C560;
  if (!qword_1EF42C560)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E86C, &_s27FormattedRecordValueInRangeVN);
    atomic_store(result, (unint64_t *)&qword_1EF42C560);
  }
  return result;
}

void sub_1BC3B8FC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C568)
  {
    sub_1BC3B90E4(255, &qword_1EF42C570, (uint64_t (*)(void))sub_1BC3B9034, (uint64_t)&_s22FormattedRecord3ValuesVN);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C568);
  }
}

unint64_t sub_1BC3B9034()
{
  unint64_t result;

  result = qword_1EF42C578;
  if (!qword_1EF42C578)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E850, &_s22FormattedRecord3ValuesVN);
    atomic_store(result, (unint64_t *)&qword_1EF42C578);
  }
  return result;
}

void sub_1BC3B9078()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C580)
  {
    sub_1BC3B90E4(255, &qword_1EF42C588, (uint64_t (*)(void))sub_1BC3B913C, (uint64_t)&_s23FormattedRecordMetadataVN);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C580);
  }
}

void sub_1BC3B90E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3();
    v9 = _s12SortedRecordVMa(a1, a4, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC3B913C()
{
  unint64_t result;

  result = qword_1EF42C590;
  if (!qword_1EF42C590)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E834, &_s23FormattedRecordMetadataVN);
    atomic_store(result, (unint64_t *)&qword_1EF42C590);
  }
  return result;
}

void sub_1BC3B9180(uint64_t a1)
{
  sub_1BC3B919C(a1, &qword_1EF42C5A8, (void (*)(uint64_t))sub_1BC3B9200);
}

void sub_1BC3B919C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BC3B9200()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C5B0)
  {
    v0 = sub_1BC62C59C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C5B0);
  }
}

void sub_1BC3B9260()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429B20)
  {
    sub_1BC36F18C(255, (unint64_t *)&qword_1EF429B28);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429B20);
  }
}

void sub_1BC3B92C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429B30)
  {
    sub_1BC36F18C(255, &qword_1EF429B38);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429B30);
  }
}

void sub_1BC3B9334()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429B58)
  {
    sub_1BC36F18C(255, &qword_1EF429B60);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429B58);
  }
}

void sub_1BC3B93A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429B78)
  {
    sub_1BC36F18C(255, &qword_1EF429B80);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429B78);
  }
}

void sub_1BC3B940C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429BA0)
  {
    sub_1BC36F18C(255, &qword_1EF429BA8);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429BA0);
  }
}

void sub_1BC3B9478()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429BD8)
  {
    sub_1BC36F18C(255, &qword_1EF429BE0);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429BD8);
  }
}

void sub_1BC3B94E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C5C0)
  {
    sub_1BC3B9548(255, (unint64_t *)&qword_1EF42C5C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C5C0);
  }
}

void sub_1BC3B9548(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC3B9914(255, (unint64_t *)&qword_1EF42A0F8);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC3B95B4(uint64_t a1)
{
  sub_1BC357158(a1, &qword_1EF4296E0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

char *sub_1BC3B95D0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B96B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3B97A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

void sub_1BC3B98BC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC3B9914(255, a3);
    v4 = sub_1BC62D538();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC3B9914(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1BC3B9960()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42C610)
  {
    sub_1BC34B6A0(255, &qword_1EF429110);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42C610);
  }
}

void sub_1BC3B99D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C638)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A4E60);
    v0 = sub_1BC62C59C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C638);
  }
}

void sub_1BC3B9A48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C668)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1EF4299F0);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C668);
  }
}

void sub_1BC3B9AAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A5320)
  {
    sub_1BC36F18C(255, &qword_1ED6A4EE0);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A5320);
  }
}

uint64_t MedicalRecordTimelineAccountHeaderItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC3B9B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  _QWORD v7[2];

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  strcpy((char *)v7, "AccountHeader.");
  HIBYTE(v7[1]) = -18;
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t static MedicalRecordTimelineAccountHeaderItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  v6 = v4;
  v7 = v5;
  LOBYTE(v5) = sub_1BC62CEB4();

  return v5 & 1;
}

void sub_1BC3B9CB0()
{
  uint64_t v0;
  id v1;

  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + 16);
  sub_1BC62CEC0();

}

uint64_t MedicalRecordTimelineAccountHeaderItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineAccountHeaderItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC3B9D70()
{
  uint64_t v0;
  id v1;

  sub_1BC62D670();
  sub_1BC62C740();
  v1 = *(id *)(v0 + 16);
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

uint64_t sub_1BC3B9DC8()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1BC62D670();
  sub_1BC62C740();
  v2 = *(id *)(v1 + 16);
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

void sub_1BC3B9E24()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1BC62C740();
  v2 = *(id *)(v1 + 16);
  sub_1BC62CEC0();

}

uint64_t sub_1BC3B9E74()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  sub_1BC62D670();
  v1 = *v0;
  sub_1BC62C740();
  v2 = *(id *)(v1 + 16);
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

uint64_t sub_1BC3B9ECC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC3B9EFC()
{
  return sub_1BC3B9B44();
}

uint64_t sub_1BC3B9F1C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  char v7;

  v2 = *a1;
  v3 = *a2;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  v4 = *(void **)(v3 + 16);
  v5 = *(id *)(v2 + 16);
  v6 = v4;
  v7 = sub_1BC62CEB4();

  return v7 & 1;
}

char *sub_1BC3B9F94(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  objc_super v38;

  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item];
  v10 = (objc_class *)type metadata accessor for AccountView2(0);
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v11 = objc_allocWithZone(v10);
  v12 = v4;
  v13 = objc_msgSend(v11, sel_init);
  *(_QWORD *)&v12[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_accountView] = v13;
  v14 = v13;
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v38.receiver = v12;
  v38.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell();
  v15 = (char *)objc_msgSendSuper2(&v38, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = objc_msgSend(v15, sel_contentView);
  v17 = OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_accountView;
  objc_msgSend(v16, sel_addSubview_, *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_accountView]);

  sub_1BC34D844();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC63A3D0;
  v19 = objc_msgSend(*(id *)&v15[v17], sel_leadingAnchor);
  v20 = objc_msgSend(v15, sel_contentView);
  v21 = objc_msgSend(v20, sel_leadingAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, 14.0);
  *(_QWORD *)(v18 + 32) = v22;
  v23 = objc_msgSend(*(id *)&v15[v17], sel_trailingAnchor);
  v24 = objc_msgSend(v15, sel_contentView);
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, -16.0);
  *(_QWORD *)(v18 + 40) = v26;
  v27 = objc_msgSend(*(id *)&v15[v17], sel_topAnchor);
  v28 = objc_msgSend(v15, sel_contentView);
  v29 = objc_msgSend(v28, sel_topAnchor);

  v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v29, 16.0);
  *(_QWORD *)(v18 + 48) = v30;
  v31 = objc_msgSend(v15, sel_contentView);
  v32 = objc_msgSend(v31, sel_bottomAnchor);

  v33 = objc_msgSend(*(id *)&v15[v17], sel_bottomAnchor);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, 16.0);

  *(_QWORD *)(v18 + 56) = v34;
  sub_1BC62C890();
  v35 = (void *)objc_opt_self();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v36 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_activateConstraints_, v36);

  return v15;
}

id sub_1BC3BA350(void *a1)
{
  char *v1;
  char *v3;
  objc_class *v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item];
  v4 = (objc_class *)type metadata accessor for AccountView2(0);
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  v5 = objc_allocWithZone(v4);
  v6 = v1;
  v7 = objc_msgSend(v5, sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_accountView] = v7;
  v8 = v7;
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell();
  v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

uint64_t sub_1BC3BA434(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC3BA4B4();
  return sub_1BC384EB4((uint64_t)v5, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC3BA4B4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[5];

  v1 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1EF42B7C8, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - v6;
  v42 = sub_1BC62A7B4();
  v8 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AccountViewData(0);
  v43 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v0[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item];
  swift_beginAccess();
  sub_1BC37ADB0(v14, (uint64_t)v45);
  if (!v45[3])
  {
    sub_1BC384EB4((uint64_t)v45, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    goto LABEL_7;
  }
  v41 = v0;
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineAccountHeaderItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
    v0 = v41;
LABEL_7:
    sub_1BC62BAF8();
    v25 = v0;
    v26 = sub_1BC62BB28();
    v27 = sub_1BC62CAC4();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v43 = v2;
      v44 = v29;
      v30 = v29;
      *(_DWORD *)v28 = 136446210;
      v42 = v1;
      sub_1BC37ADB0(v14, (uint64_t)v45);
      sub_1BC384E68(0, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
      v31 = sub_1BC62C6F8();
      v45[0] = sub_1BC4991F0(v31, v32, &v44);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v26, v27, "Incorrect view model for MedicalRecordTimelineAccountHeaderItem: %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v30, -1, -1);
      MEMORY[0x1BCCF36A8](v28, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v4, v42);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  v15 = v44;
  v16 = objc_msgSend(*(id *)(v44 + 16), sel_identifier);
  sub_1BC62A79C();

  v17 = objc_msgSend(*(id *)(v15 + 16), sel_title);
  v18 = sub_1BC62C680();
  v39 = v19;
  v40 = v18;

  v20 = objc_msgSend(*(id *)(v15 + 16), sel_subtitle);
  if (v20)
  {
    v21 = v20;
    v22 = sub_1BC62C680();
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  v34 = v41;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v10, v42);
  v35 = &v13[*(int *)(v11 + 20)];
  v36 = v39;
  *(_QWORD *)v35 = v40;
  *((_QWORD *)v35 + 1) = v36;
  v37 = (uint64_t *)&v13[*(int *)(v11 + 24)];
  *v37 = v22;
  v37[1] = v24;
  v38 = *(void **)&v34[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_accountView];
  sub_1BC3A3454((uint64_t)v13, (uint64_t)v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v7, 0, 1, v11);
  sub_1BC3A1130((uint64_t)v7);
  sub_1BC384EB4((uint64_t)v7, &qword_1EF42B7C8, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  objc_msgSend(v38, sel_setNeedsDisplay);
  swift_release();
  return sub_1BC3A2E24((uint64_t)v13);
}

uint64_t sub_1BC3BA91C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC3BA96C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC3BA4B4();
  return sub_1BC384EB4(a1, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t (*sub_1BC3BA9E8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC3BAA30;
}

uint64_t sub_1BC3BAA30(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC3BA4B4();
  return result;
}

uint64_t sub_1BC3BAA60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  v2 = *MEMORY[0x1E0D2B168];
  v3 = sub_1BC62B30C();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

id MedicalRecordTimelineAccountHeaderItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell()
{
  return objc_opt_self();
}

unint64_t sub_1BC3BAAFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42C680;
  if (!qword_1EF42C680)
  {
    v1 = type metadata accessor for MedicalRecordTimelineAccountHeaderItem();
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordTimelineAccountHeaderItem, v1);
    atomic_store(result, (unint64_t *)&qword_1EF42C680);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountHeaderItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC3BABAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineAccountHeaderItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t method lookup function for MedicalRecordTimelineAccountHeaderItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItemCell.didSelectCell(_:in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItemCell.deselectionBehavior.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

void sub_1BC3BACCC(unint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  _QWORD *v34;
  int64_t v35;
  unint64_t v36;
  _QWORD v37[5];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v36 = 0;
    v1 = 0;
    v2 = 0;
    v3 = sub_1BC62D2F8() | 0x8000000000000000;
  }
  else
  {
    v4 = -1 << *(_BYTE *)(a1 + 32);
    v1 = ~v4;
    v36 = a1 + 64;
    v5 = -v4;
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v2 = v6 & *(_QWORD *)(a1 + 64);
    v3 = a1;
  }
  swift_bridgeObjectRetain();
  v7 = 0;
  v35 = (unint64_t)(v1 + 64) >> 6;
  v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v8 = v7;
    if ((v3 & 0x8000000000000000) == 0)
      break;
    v11 = sub_1BC62D364();
    if (!v11)
      goto LABEL_38;
    v13 = v12;
    v40 = v11;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = (id)v37[0];
    swift_unknownObjectRelease();
    v40 = v13;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5920);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v15 = (id)v37[0];
    swift_unknownObjectRelease();
    if (!v14)
      goto LABEL_38;
LABEL_31:
    v21 = objc_msgSend(v14, sel_integerValue);
    if ((unint64_t)v21 <= 0xA)
    {
      v22 = (char)v21;
      v23 = v15;
      sub_1BC4FC8D8(v23, (uint64_t)v37);

      v31 = v37[0];
      v24 = v37[1];
      v25 = v37[2];
      v29 = v37[4];
      v30 = v37[3];
      v32 = v39;
      v33 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_1BC3B4F44(0, v34[2] + 1, 1, v34);
      v27 = v34[2];
      v26 = v34[3];
      if (v27 >= v26 >> 1)
        v34 = sub_1BC3B4F44((_QWORD *)(v26 > 1), v27 + 1, 1, v34);
      v34[2] = v27 + 1;
      v28 = &v34[10 * v27];
      *((_BYTE *)v28 + 32) = v22;
      *((_BYTE *)v28 + 40) = v31;
      v28[6] = v24;
      v28[7] = v25;
      v28[8] = v30;
      v28[9] = v29;
      *((_OWORD *)v28 + 5) = v33;
      *((_OWORD *)v28 + 6) = v32;
    }
    else
    {

    }
  }
  if (v2)
  {
    v9 = __clz(__rbit64(v2));
    v2 &= v2 - 1;
    v10 = v9 | (v7 << 6);
LABEL_30:
    v19 = 8 * v10;
    v20 = *(void **)(*(_QWORD *)(v3 + 56) + v19);
    v14 = *(id *)(*(_QWORD *)(v3 + 48) + v19);
    v15 = v20;
    if (!v14)
      goto LABEL_38;
    goto LABEL_31;
  }
  v16 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v16 >= v35)
      goto LABEL_38;
    v17 = *(_QWORD *)(v36 + 8 * v16);
    ++v7;
    if (!v17)
    {
      v7 = v8 + 2;
      if (v8 + 2 >= v35)
        goto LABEL_38;
      v17 = *(_QWORD *)(v36 + 8 * v7);
      if (!v17)
      {
        v7 = v8 + 3;
        if (v8 + 3 >= v35)
          goto LABEL_38;
        v17 = *(_QWORD *)(v36 + 8 * v7);
        if (!v17)
        {
          v7 = v8 + 4;
          if (v8 + 4 >= v35)
            goto LABEL_38;
          v17 = *(_QWORD *)(v36 + 8 * v7);
          if (!v17)
          {
            v7 = v8 + 5;
            if (v8 + 5 >= v35)
              goto LABEL_38;
            v17 = *(_QWORD *)(v36 + 8 * v7);
            if (!v17)
            {
              v18 = v8 + 6;
              while (v35 != v18)
              {
                v17 = *(_QWORD *)(v36 + 8 * v18++);
                if (v17)
                {
                  v7 = v18 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              sub_1BC3583F4();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    v2 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v7 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t sub_1BC3BB0AC(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DA3D4);
}

uint64_t sub_1BC3BB0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BC3B5060(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BB208(unint64_t a1)
{
  return sub_1BC3BBA68(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1BC3DA85C, (void (*)(_QWORD))sub_1BC3B9A48);
}

uint64_t sub_1BC3BB21C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BC3B51A4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  sub_1BC3B9914(0, (unint64_t *)&qword_1EF42A0F8);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BB398(uint64_t a1)
{
  return sub_1BC3BB5B4(a1, (uint64_t (*)(void))sub_1BC3B5190, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
}

uint64_t sub_1BC3BB3AC(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DACE4);
}

uint64_t sub_1BC3BB3B8(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DAF28);
}

uint64_t sub_1BC3BB3C4(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DAF4C);
}

uint64_t sub_1BC3BB3D0(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DAF70);
}

uint64_t sub_1BC3BB3DC(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DAF94);
}

uint64_t sub_1BC3BB3E8(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DAFB8);
}

uint64_t sub_1BC3BB3F4(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DB41C);
}

uint64_t sub_1BC3BB400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BC3B5CEC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  sub_1BC3B9914(0, (unint64_t *)&qword_1EF42ADC0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BB578(uint64_t a1)
{
  return sub_1BC3BB5B4(a1, (uint64_t (*)(void))sub_1BC3B60B8, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
}

uint64_t sub_1BC3BB58C(uint64_t a1)
{
  return sub_1BC3BB5B4(a1, (uint64_t (*)(void))sub_1BC3B52BC, (uint64_t (*)(_QWORD))MEMORY[0x1E0D2BEF8]);
}

uint64_t sub_1BC3BB5A0(uint64_t a1)
{
  return sub_1BC3BB5B4(a1, (uint64_t (*)(void))sub_1BC3B5F84, (uint64_t (*)(_QWORD))MEMORY[0x1E0D2B090]);
}

uint64_t sub_1BC3BB5B4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

void sub_1BC3BB72C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_1BC3B620C(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    v8 = v3[3] >> 1;
  }
  v10 = v3[2];
  v11 = v8 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
    if (!v2)
    {
LABEL_19:
      swift_bridgeObjectRelease();
      if (v12 != v11)
      {
LABEL_20:
        *(_QWORD *)v1 = v3;
        return;
      }
LABEL_23:
      sub_1BC357158(0, &qword_1EF42CAC0, (uint64_t (*)(uint64_t))sub_1BC3B9A48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      goto LABEL_20;
    }
    goto LABEL_22;
  }
  if (v11 < (uint64_t)v12)
  {
    __break(1u);
    goto LABEL_25;
  }
  v13 = (unint64_t)&v3[v10 + 4];
  if (a1 + 32 < v13 + 8 * v12 && v13 < a1 + 32 + 8 * v12)
    goto LABEL_26;
  sub_1BC3B9A48();
  swift_arrayInitWithCopy();
  if (v12 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v15 = v3[2];
  v16 = __OFADD__(v15, v12);
  v17 = v15 + v12;
  if (!v16)
  {
    v3[2] = v17;
    goto LABEL_19;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  sub_1BC62D418();
  __break(1u);
}

uint64_t sub_1BC3BB8C0(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DB660);
}

uint64_t sub_1BC3BB8CC(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DA618);
}

uint64_t sub_1BC3BB8D8(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DB684);
}

uint64_t sub_1BC3BB8E4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BC3B6EAC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[3 * v9 + 4];
  if (a1 + 32 < v10 + 24 * v8 && v10 < a1 + 32 + 24 * v8)
    goto LABEL_24;
  sub_1BC3B8D3C();
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BBA54(unint64_t a1)
{
  return sub_1BC3BBA68(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1BC3DB8C8, (void (*)(_QWORD))sub_1BC3CCC8C);
}

uint64_t sub_1BC3BBA68(unint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unint64_t), void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    v9 = v24 + v7;
    if (!__OFADD__(v24, v7))
      goto LABEL_5;
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 + v7;
  if (__OFADD__(v8, v7))
    goto LABEL_24;
LABEL_5:
  v10 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v10;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    v13 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v12 = 1;
  }
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 <= v9)
    v14 = v9;
  swift_bridgeObjectRetain();
  v15 = MEMORY[0x1BCCF24D8](v12, v14, 1, v10);
  swift_bridgeObjectRelease();
  *v3 = v15;
  v13 = v15 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (*(_QWORD *)(v13 + 24) >> 1) - v16;
  result = a2(v13 + 8 * v16 + 32, v17, a1);
  if (v19 < v7)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v20 = v19;
  if (v19 < 1)
    goto LABEL_19;
  v21 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v22 = __OFADD__(v21, v19);
  v23 = v21 + v19;
  if (!v22)
  {
    *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v23;
LABEL_19:
    swift_bridgeObjectRelease();
    if (v20 != v17)
      return sub_1BC62C890();
LABEL_26:
    a3(0);
    return sub_1BC62C890();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3BBC4C(unint64_t a1)
{
  return sub_1BC3BBC58(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DBD50);
}

uint64_t sub_1BC3BBC58(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1BCCF24D8](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1BC62C890();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3BBE14(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_1BC3B7118(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for BrowseCategory();
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t static RecordLookupError.== infix(_:_:)()
{
  return 1;
}

uint64_t RecordLookupError.hash(into:)()
{
  return sub_1BC62D67C();
}

uint64_t RecordLookupError.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t HKHealthStore.addObserver(following:sampleTypes:handler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v9 = objc_allocWithZone(MEMORY[0x1E0CB6F58]);
  sub_1BC34B6A0(0, &qword_1ED6A58D8);
  swift_bridgeObjectRetain();
  v10 = a1;
  swift_retain();
  v11 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v19[4] = sub_1BC3BC27C;
  v19[5] = v8;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1BC3BD5D0;
  v19[3] = &block_descriptor_16;
  v12 = _Block_copy(v19);
  v13 = objc_msgSend(v9, sel_initWithTypes_anchor_resultsHandler_, v11, v10, v12);

  _Block_release(v12);
  swift_release();
  v14 = v13;
  v15 = (void *)sub_1BC62C650();
  objc_msgSend(v14, sel_setDebugIdentifier_, v15);

  objc_msgSend(v4, sel_executeQuery_, v14);
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v14;
  type metadata accessor for CancellationToken();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = sub_1BC3BD740;
  *(_QWORD *)(result + 32) = v17;
  return result;
}

void sub_1BC3BC1EC(int a1, void *a2, int a3, id a4, void (*a5)(id, BOOL))
{
  id v7;
  id v9;
  id v10;

  v7 = a4;
  if (!a4)
  {
    v9 = a2;
    v7 = a2;
  }
  v10 = a4;
  a5(v7, a4 != 0);
  sub_1BC3CD7D8(v7);
}

uint64_t sub_1BC3BC258()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC3BC27C(int a1, void *a2, int a3, void *a4)
{
  uint64_t v4;

  sub_1BC3BC1EC(a1, a2, a3, a4, *(void (**)(id, BOOL))(v4 + 16));
}

void sub_1BC3BC284(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1BCCF37A4](v3);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_stopQuery_, a2);

  }
}

uint64_t HKHealthStore.fetchRecord(recordId:categoryKind:completion:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  int v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;
  BOOL v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  void *v43;
  uint64_t (*v44)(uint64_t, void *, uint64_t, void *, void *);
  void *v45;
  void (*v46)(uint64_t, unint64_t, uint64_t, void *);
  id v47;
  id v48;
  __int128 v49;
  __int128 v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t result;
  void *v65;
  id v66;
  id v69;
  int64_t v70;
  char *v71;
  unsigned int v72;
  id v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  id v85;
  _QWORD *v86;
  uint64_t aBlock;
  unint64_t v88;
  uint64_t (*v89)(uint64_t, void *, uint64_t, void *, void *);
  void *v90;
  void (*v91)(uint64_t, unint64_t, uint64_t, void *);
  __int128 v92;
  __int128 v93;
  uint64_t v94;

  v4 = *a2;
  if (v4 == 11)
  {
    v5 = (char *)&unk_1E74D2610;
    v6 = 11;
  }
  else
  {
    sub_1BC34B508(0, &qword_1ED6A5318, (uint64_t)&type metadata for DisplayCategory.Kind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BC639590;
    *(_BYTE *)(v7 + 32) = v4;
    v5 = (char *)v7;
    v6 = 1;
  }
  v94 = MEMORY[0x1E0DEE9D8];
  sub_1BC3BD764(0, v6, 0);
  v8 = v94;
  v73 = (id)objc_opt_self();
  v9 = 0;
  v70 = v6;
  v71 = v5 + 32;
  while (1)
  {
    v74 = v9;
    v10 = v71[v9];
    v11 = objc_msgSend(v73, sel_supportedRecordCategoriesByCategoryType);
    if (v11)
      break;
    v16 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    if (!*(_QWORD *)(MEMORY[0x1E0DEE9E0] + 16))
      goto LABEL_24;
LABEL_22:
    v39 = sub_1BC558FD8(v10);
    if ((v40 & 1) != 0)
    {
      v41 = v16[7] + 72 * v39;
      v42 = *(_BYTE *)v41;
      v43 = *(void **)(v41 + 8);
      v44 = *(uint64_t (**)(uint64_t, void *, uint64_t, void *, void *))(v41 + 16);
      v45 = *(void **)(v41 + 24);
      v46 = *(void (**)(uint64_t, unint64_t, uint64_t, void *))(v41 + 32);
      v80 = *(_OWORD *)(v41 + 56);
      v83 = *(_OWORD *)(v41 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47 = *((id *)&v80 + 1);
      v48 = v43;
      swift_bridgeObjectRelease();
      v50 = v80;
      v49 = v83;
      LOBYTE(aBlock) = v42;
      v88 = (unint64_t)v48;
      v89 = v44;
      v90 = v45;
      v91 = v46;
      v92 = v83;
      v93 = v80;
      goto LABEL_26;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    v51 = objc_msgSend(v73, sel_unknownRecordCategory);
    if (!v51)
      goto LABEL_38;
    sub_1BC4FC8D8(v51, (uint64_t)&aBlock);
    v42 = aBlock;
    v48 = (id)v88;
    v44 = v89;
    v45 = v90;
    v46 = v91;
    v49 = v92;
    v50 = v93;
LABEL_26:
    v52 = v74;
    v94 = v8;
    v54 = *(_QWORD *)(v8 + 16);
    v53 = *(_QWORD *)(v8 + 24);
    if (v54 >= v53 >> 1)
    {
      v81 = v50;
      v84 = v49;
      sub_1BC3BD764(v53 > 1, v54 + 1, 1);
      v50 = v81;
      v49 = v84;
      v52 = v74;
      v8 = v94;
    }
    *(_QWORD *)(v8 + 16) = v54 + 1;
    v55 = v8 + 72 * v54;
    *(_BYTE *)(v55 + 32) = v42;
    v9 = v52 + 1;
    *(_QWORD *)(v55 + 40) = v48;
    *(_QWORD *)(v55 + 48) = v44;
    *(_QWORD *)(v55 + 56) = v45;
    *(_QWORD *)(v55 + 64) = v46;
    *(_OWORD *)(v55 + 72) = v49;
    *(_OWORD *)(v55 + 88) = v50;
    if (v9 == v6)
    {
      swift_bridgeObjectRelease();
      aBlock = MEMORY[0x1E0DEE9D8];
      v56 = *(_QWORD *)(v8 + 16);
      if (v56)
      {
        swift_bridgeObjectRetain();
        v57 = 80;
        do
        {
          v58 = swift_bridgeObjectRetain();
          sub_1BC3BBC58(v58, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BC3DACE4);
          v57 += 72;
          --v56;
        }
        while (v56);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v59 = swift_allocObject();
      *(_QWORD *)(v59 + 16) = a3;
      *(_QWORD *)(v59 + 24) = a4;
      v60 = objc_allocWithZone(MEMORY[0x1E0CB6AE8]);
      sub_1BC34B6A0(0, &qword_1ED6A48A0);
      swift_retain();
      v61 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v91 = sub_1BC3CB9BC;
      *(_QWORD *)&v92 = v59;
      aBlock = MEMORY[0x1E0C809B0];
      v88 = 1107296256;
      v89 = sub_1BC3BD514;
      v90 = &block_descriptor_12;
      v62 = _Block_copy(&aBlock);
      v63 = objc_msgSend(v60, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v61, 0, 0, 0, 0, 1, v62);

      _Block_release(v62);
      swift_release();
      objc_msgSend(v69, sel_executeQuery_, v63);
      return (uint64_t)v63;
    }
  }
  v12 = v11;
  v72 = v10;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5920);
  sub_1BC35E2D8((unint64_t *)&qword_1ED6A52F0, (unint64_t *)&qword_1ED6A5990);
  v13 = sub_1BC62C548();

  sub_1BC3BACCC(v13);
  v15 = v14;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    v16 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_21:
    swift_bridgeObjectRelease_n();
    v6 = v70;
    v10 = v72;
    if (!v16[2])
      goto LABEL_24;
    goto LABEL_22;
  }
  sub_1BC35F4F0();
  v16 = (_QWORD *)sub_1BC62D400();
  v17 = *(_QWORD *)(v15 + 16);
  v86 = v16;
  swift_bridgeObjectRetain();
  v77 = v17;
  if (!v17)
    goto LABEL_21;
  v18 = 0;
  v19 = 0;
  v76 = v15;
  while (v19 < *(_QWORD *)(v15 + 16))
  {
    v20 = v15 + v18;
    v79 = *(_OWORD *)(v15 + v18 + 80);
    v82 = *(_OWORD *)(v15 + v18 + 96);
    v21 = *(_BYTE *)(v15 + v18 + 40);
    v22 = *(unsigned __int8 *)(v15 + v18 + 32);
    v24 = *(_QWORD *)(v15 + v18 + 64);
    v23 = *(_QWORD *)(v15 + v18 + 72);
    v25 = *(void **)(v15 + v18 + 48);
    v26 = *(_QWORD *)(v20 + 56);
    v78 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = *((id *)&v82 + 1);
    if (!v25)
      goto LABEL_21;
    v75 = v27;
    v28 = sub_1BC558FD8(v22);
    v30 = v16[2];
    v31 = (v29 & 1) == 0;
    v32 = __OFADD__(v30, v31);
    v33 = v30 + v31;
    if (v32)
      goto LABEL_36;
    v34 = v29;
    if (v16[3] < v33)
    {
      sub_1BC3C1D38(v33, 1);
      v16 = v86;
      v28 = sub_1BC558FD8(v22);
      if ((v34 & 1) != (v35 & 1))
        goto LABEL_41;
    }
    if ((v34 & 1) != 0)
      goto LABEL_39;
    v16[(v28 >> 6) + 8] |= 1 << v28;
    *(_BYTE *)(v16[6] + v28) = v22;
    v36 = v16[7] + 72 * v28;
    *(_BYTE *)v36 = v21;
    *(_QWORD *)(v36 + 8) = v78;
    *(_QWORD *)(v36 + 16) = v26;
    *(_QWORD *)(v36 + 24) = v24;
    *(_QWORD *)(v36 + 32) = v23;
    *(_OWORD *)(v36 + 40) = v79;
    *(_OWORD *)(v36 + 56) = v82;
    v37 = v16[2];
    v32 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v32)
      goto LABEL_37;
    ++v19;
    v16[2] = v38;
    v18 += 80;
    v15 = v76;
    if (v77 == v19)
      goto LABEL_21;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  v65 = (void *)swift_allocError();
  swift_willThrow();
  v85 = v65;
  v66 = v65;
  sub_1BC3B9914(0, (unint64_t *)&qword_1ED6A59C0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    aBlock = 0;
    v88 = 0xE000000000000000;
    sub_1BC62D1D8();
    sub_1BC62C764();
    sub_1BC62D2D4();
    sub_1BC62C764();
    sub_1BC62D394();
    __break(1u);
LABEL_41:
    sub_1BC62D5EC();
    __break(1u);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_1BC3BCAE0(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;

  v7 = a2;
  if (!a2)
    goto LABEL_11;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1BC62D3B8())
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
    v7 = 0;
    goto LABEL_11;
  }
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_10;
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v9 = (id)MEMORY[0x1BCCF24CC](0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v9 = *(id *)(v7 + 32);
  }
  v10 = v9;
  swift_bridgeObjectRelease();
  objc_opt_self();
  v7 = swift_dynamicCastObjCClass();
  if (!v7)

LABEL_11:
  sub_1BC3CD704();
  v11 = (void *)swift_allocError();
  v12 = v11;
  if (a4)
  {
    v13 = a4;

    v14 = 1;
  }
  else if (v7)
  {

    v14 = 0;
    a4 = (void *)v7;
  }
  else
  {
    v14 = 1;
    a4 = v11;
  }
  a5(a4, v14);
  sub_1BC3CD7D8(a4);
}

uint64_t HKHealthStore.fetchRecords(for:with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  id v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  id v47;
  _QWORD aBlock[6];

  v5 = v4;
  v10 = objc_msgSend((id)objc_opt_self(), sel_allSupportedSampleTypes);
  v11 = MEMORY[0x1E0DEE9E8];
  if (v10)
  {
    v12 = v10;
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    v13 = sub_1BC62C878();

    v14 = sub_1BC58C1DC(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = MEMORY[0x1E0DEE9E8];
  }
  v15 = MEMORY[0x1E0DEE9B0];
  if ((v14 & 0xC000000000000001) == 0)
  {
    v11 = sub_1BC3CB608(v14);
    goto LABEL_31;
  }
  aBlock[0] = v11;
  sub_1BC62D0DC();
  if (!sub_1BC62D13C())
    goto LABEL_29;
  v46 = a2;
  sub_1BC34B6A0(0, &qword_1ED6A58D8);
  do
  {
    swift_dynamicCast();
    v16 = objc_msgSend(v47, sel_identifier);
    v17 = sub_1BC62C680();
    v19 = v18;

    if (v17 == sub_1BC62C680() && v19 == v20)
    {
      swift_bridgeObjectRelease_n();
LABEL_8:

      continue;
    }
    v22 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
      goto LABEL_8;
    v23 = aBlock[0];
    v24 = *(_QWORD *)(aBlock[0] + 16);
    if (*(_QWORD *)(aBlock[0] + 24) <= v24)
    {
      sub_1BC3CA964(v24 + 1, (void (*)(_QWORD))sub_1BC3CD674);
      v23 = aBlock[0];
    }
    result = sub_1BC62CEA8();
    v26 = v23 + 56;
    v27 = -1 << *(_BYTE *)(v23 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v23 + 56 + 8 * (v28 >> 6))) != 0)
    {
      v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v23 + 56 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        v33 = v29 == v32;
        if (v29 == v32)
          v29 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v26 + 8 * v29);
      }
      while (v34 == -1);
      v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(_QWORD *)(v26 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    *(_QWORD *)(*(_QWORD *)(v23 + 48) + 8 * v30) = v47;
    ++*(_QWORD *)(v23 + 16);
  }
  while (sub_1BC62D13C());
  v11 = aBlock[0];
  a2 = v46;
  v15 = MEMORY[0x1E0DEE9B0];
LABEL_29:
  swift_release();
LABEL_31:
  v35 = objc_msgSend((id)objc_opt_self(), sel_predicateForSamplesWithConceptIdentifier_keyPath_, a1, a2);
  sub_1BC3CB9C4(v11, (uint64_t)v35);
  swift_release();

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, v15 + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1BC6396B0;
  sub_1BC62C680();
  v37 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v38 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v39 = objc_msgSend(v37, sel_initWithKey_ascending_, v38, 0);

  *(_QWORD *)(v36 + 32) = v39;
  sub_1BC62C890();
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = a3;
  *(_QWORD *)(v40 + 24) = a4;
  v41 = objc_allocWithZone(MEMORY[0x1E0CB6AE8]);
  sub_1BC34B6A0(0, &qword_1ED6A48A0);
  swift_retain();
  v42 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v43 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1BC3CBBF8;
  aBlock[5] = v40;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3BD514;
  aBlock[3] = &block_descriptor_18;
  v44 = _Block_copy(aBlock);
  v45 = objc_msgSend(v41, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v42, v43, 0, 0, 0, 0, v44);

  _Block_release(v44);
  swift_release();
  objc_msgSend(v5, sel_executeQuery_, v45);

  return (uint64_t)v45;
}

void sub_1BC3BD19C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t))
{
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;

  if (a2)
    v7 = sub_1BC349FEC(a2);
  else
    v7 = 0;
  sub_1BC3CD704();
  v8 = (void *)swift_allocError();
  v9 = v8;
  if (a4)
  {
    v10 = a4;

    swift_bridgeObjectRelease();
    v11 = 1;
  }
  else if (v7)
  {

    v11 = 0;
    a4 = (void *)v7;
  }
  else
  {
    v11 = 1;
    a4 = v8;
  }
  a5(a4, v11);
  sub_1BC3CD668(a4, v11);
}

uint64_t HKHealthStore.fetchRecordsForObjC(for:keyPath:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  swift_retain();

  return swift_release();
}

void sub_1BC3BD2DC(id a1, char a2, void (*a3)(uint64_t, id))
{
  uint64_t v5;
  id v6;
  id v7;

  if ((a2 & 1) != 0)
  {
    v6 = a1;
    sub_1BC3B9914(0, (unint64_t *)&qword_1ED6A59C0);
    swift_willThrowTypedImpl();
    v7 = a1;
    a3(MEMORY[0x1E0DEE9D8], a1);
    sub_1BC3CD668(a1, 1);
    sub_1BC3CD668(a1, 1);
  }
  else
  {
    v5 = swift_bridgeObjectRetain();
    a3(v5, 0);
    sub_1BC3CD668(a1, 0);
  }
}

uint64_t sub_1BC3BD3AC(void *a1, int a2, void *a3, void *a4, void *aBlock)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;

  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1BC3CCA30;
  *(_QWORD *)(v10 + 24) = v9;
  v11 = a3;
  v12 = a4;
  v13 = a1;
  swift_retain();
  v14 = (void *)HKHealthStore.fetchRecords(for:with:completion:)((uint64_t)v11, (uint64_t)v12, (uint64_t)sub_1BC3CD884, v10);

  swift_release();
  return swift_release();
}

void sub_1BC3BD484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  sub_1BC34B6A0(0, &qword_1ED6A52D8);
  v5 = (void *)sub_1BC62C86C();
  if (a2)
    v6 = sub_1BC62A550();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

uint64_t sub_1BC3BD514(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7;
  void (*v9)(id, uint64_t, void *, void *);
  id v10;
  id v11;
  id v12;

  v7 = a3;
  v9 = *(void (**)(id, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC34B6A0(0, &qword_1ED6A52E8);
    v7 = sub_1BC62C878();
  }
  swift_retain();
  v10 = a2;
  v11 = a4;
  v12 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3BD5D0(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  void (*v9)(id, void *, uint64_t, void *);
  id v10;
  id v11;
  id v12;

  v6 = a4;
  v9 = *(void (**)(id, void *, uint64_t, void *))(a1 + 32);
  if (a4)
  {
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    sub_1BC34B6A0(0, &qword_1ED6A52E0);
    sub_1BC35E2D8((unint64_t *)&qword_1ED6A58E0, &qword_1ED6A58D8);
    v6 = sub_1BC62C548();
  }
  swift_retain();
  v10 = a2;
  v11 = a3;
  v12 = a5;
  v9(v10, a3, v6, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t sub_1BC3BD6F0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC3BD714()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BC3BD740()
{
  uint64_t v0;

  sub_1BC3BC284(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC3BD748(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3BDF38(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BD764(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3BE0B4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BD780(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BE250(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD79C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0700(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD7C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3BE3F8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BD7E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BE57C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD800(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3BE710(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BD81C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BE8A8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD838(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BEA60(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD854(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3BEC0C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BD870(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BED9C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD88C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BEF44(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD8A8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3BF0F0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BD8C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BF288(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD8E0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BF43C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD8FC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3BF5CC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BD918(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BF748(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD934(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BF8E0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD950(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3BFA8C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BD96C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BFC20(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD988(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BFDB8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD9A4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C11F0(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0, MEMORY[0x1E0D2A060]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD9D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3BFF60(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BD9F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C00F8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDA10(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3C02B0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BDA2C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3C0420(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BDA48(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C16DC(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BC3CCFB0, (unint64_t *)&qword_1ED6A52C0, MEMORY[0x1E0DEA968]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDA7C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C11F0(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C5F8, (unint64_t *)&qword_1EF42C600, (uint64_t)&protocol descriptor for LocalizedEducationSection);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDAB0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3C0590(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BDACC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C11F0(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C958, (unint64_t *)&qword_1EF42C960, (uint64_t)&protocol descriptor for MedicalRecordChartPointRepresentable);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDB00(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0700(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C4E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDB2C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3C08F0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BDB48(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3C13BC(a1, a2, a3, *v3, &qword_1EF42C640, (uint64_t)&type metadata for SettingsSection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BDB74(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0700(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDBA0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0A6C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDBBC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0C04(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDBD8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C11F0(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42CA30, &qword_1EF42CA38, (uint64_t)&protocol descriptor for TestResultValueDisplayable);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDC0C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0700(a1, a2, a3, (_QWORD *)*v3, &qword_1ED6A53B8, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDC38(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0700(a1, a2, a3, (_QWORD *)*v3, &qword_1ED6A5310, (uint64_t (*)(uint64_t))sub_1BC3CD4D4);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDC64(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3C0DB0(a1, a2, a3, *v3, &qword_1EF42C820, (uint64_t)&_s13SortedSectionVN);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BDC90(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0F84(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C888, &qword_1EF42C890, &qword_1EF429BF0, (uint64_t)&_s23FormattedRecordMetadataVN);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDCCC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0F84(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C870, &qword_1EF42C878, &qword_1EF429B48, (uint64_t)&_s22FormattedRecord3ValuesVN);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDD08(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0F84(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C858, &qword_1EF42C860, &qword_1EF429BB8, (uint64_t)&_s27FormattedRecordValueInRangeVN);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDD44(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0F84(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C840, &qword_1EF42C848, &qword_1EF429B90, (uint64_t)&_s20FormattedRecordValueVN);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDD80(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0F84(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C828, &qword_1EF42C830, &qword_1EF429B70, (uint64_t)&_s15FormattedRecordVN);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDDBC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0700(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42CA68, (uint64_t (*)(uint64_t))type metadata accessor for CategoryCount);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDDE8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C11F0(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C968, (unint64_t *)&qword_1EF42C970, (uint64_t)&protocol descriptor for TestResultRepresentable);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDE1C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3C13BC(a1, a2, a3, *v3, &qword_1ED6A5318, (uint64_t)&type metadata for DisplayCategory.Kind);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BDE48(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3C1A14(a1, a2, a3, *v3, &qword_1EF42C620, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BDE74(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C1528(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDE90(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C16DC(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BC3CC160, &qword_1EF42C800, MEMORY[0x1E0DEF040]);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDEC4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC3C1A14(a1, a2, a3, *v3, &qword_1EF42C7C0, (uint64_t (*)(uint64_t))type metadata accessor for CGSize);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC3BDEF0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C1B7C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDF0C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC3C0700(a1, a2, a3, (_QWORD *)*v3, &qword_1EF42C5E8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordKind);
  *v3 = result;
  return result;
}

uint64_t sub_1BC3BDF38(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BE0B4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A59B0, (uint64_t)&type metadata for DisplayCategory, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8])
      memmove(v12, v13, 72 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[72 * v8] || v12 >= &v13[72 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BE250(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3792D8();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1BC3B9914(0, (unint64_t *)&qword_1EF42A0F8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BE3E4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3C0700(a1, a2, a3, a4, &qword_1EF42C0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
}

uint64_t sub_1BC3BE3F8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, &qword_1EF431470, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BE57C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3B9260();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1BC36F18C(0, (unint64_t *)&qword_1EF429B28);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BE710(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, &qword_1EF42C898, (uint64_t)&_s23FormattedRecordMetadataVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BE8A8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3B9478();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 72 * v8)
      memmove(v10 + 4, a4 + 4, 72 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 72 * v8 || v12 >= v13 + 72 * v8)
  {
    sub_1BC36F18C(0, &qword_1EF429BE0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BEA60(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3CC790();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 104 * v8)
      memmove(v10 + 4, a4 + 4, 104 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 104 * v8 || v12 >= v13 + 104 * v8)
  {
    sub_1BC3CC7F4(0, &qword_1EF42C950);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BEC0C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, &qword_1EF42C868, (uint64_t)&_s27FormattedRecordValueInRangeVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 72 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BED9C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3B940C();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 15 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1BC36F18C(0, &qword_1EF429BA8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BEF44(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3CC6C0();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 152 * v8)
      memmove(v10 + 4, a4 + 4, 152 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 152 * v8 || v12 >= v13 + 152 * v8)
  {
    sub_1BC3CC7F4(0, &qword_1EF42C930);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BF0F0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, &qword_1EF42C850, (uint64_t)&_s20FormattedRecordValueVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BF288(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3B93A0();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 96 * v8)
      memmove(v10 + 4, a4 + 4, 96 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 96 * v8 || v12 >= v13 + 96 * v8)
  {
    sub_1BC36F18C(0, &qword_1EF429B80);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BF43C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3CC5F0();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 95;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 7);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v10 + 4, a4 + 4, v8 << 7);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    sub_1BC3CC7F4(0, &qword_1EF42C910);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BF5CC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, &qword_1EF42C838, (uint64_t)&_s15FormattedRecordVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BF748(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3B9334();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v10 + 4, a4 + 4, v8 << 6);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_1BC36F18C(0, &qword_1EF429B60);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BF8E0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3CC520();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 96 * v8)
      memmove(v10 + 4, a4 + 4, 96 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 96 * v8 || v12 >= v13 + 96 * v8)
  {
    sub_1BC3CC7F4(0, &qword_1EF42C8F0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BFA8C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, &qword_1EF42C880, (uint64_t)&_s22FormattedRecord3ValuesVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8])
      memmove(v12, v13, 80 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BFC20(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3B92C8();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 95;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 7);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v10 + 4, a4 + 4, v8 << 7);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    sub_1BC36F18C(0, &qword_1EF429B38);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BFDB8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3CC450();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 160 * v8)
      memmove(v10 + 4, a4 + 4, 160 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 160 * v8 || v12 >= v13 + 160 * v8)
  {
    sub_1BC3CC7F4(0, &qword_1EF42C8D0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3BFF60(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3CC054();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1BC36F18C(0, &qword_1EF42C7E8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C00F8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC357158(0, &qword_1EF42C7F0, (uint64_t (*)(uint64_t))sub_1BC3CC0C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8)
      memmove(v10 + 4, a4 + 4, 56 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    sub_1BC3CC0C0();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C02B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, &qword_1ED6A3708, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C0420(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, &qword_1EF42C518, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C0590(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, &qword_1EF42CAF8, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C0700(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BC357158(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C08F0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC34B508(0, &qword_1EF42C628, (uint64_t)&type metadata for GatewayIdentifiedClinicalAccount, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C0A6C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC357158(0, &qword_1EF42C988, (uint64_t (*)(uint64_t))sub_1BC3CC98C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1BC3CC98C();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C0C04(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC357158(0, &qword_1EF42C660, (uint64_t (*)(uint64_t))sub_1BC3B9A48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1BC3B9A48();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C0D9C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BC3C0DB0(a1, a2, a3, a4, &qword_1EF42C598, (uint64_t)&_s16FormattedSectionVN);
}

uint64_t sub_1BC3C0DB0(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BC34B508(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 48);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  v16 = 48 * v10;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C0F3C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3C0F84(a1, a2, a3, a4, &qword_1EF42C888, &qword_1EF42C890, &qword_1EF429BF0, (uint64_t)&_s23FormattedRecordMetadataVN);
}

uint64_t sub_1BC3C0F60(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3C0F84(a1, a2, a3, a4, &qword_1EF42C870, &qword_1EF42C878, &qword_1EF429B48, (uint64_t)&_s22FormattedRecord3ValuesVN);
}

uint64_t sub_1BC3C0F84(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, unint64_t *a7, uint64_t a8)
{
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  size_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v13 = a4[3];
    v14 = v13 >> 1;
    if ((uint64_t)(v13 >> 1) < a2)
    {
      if (v14 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v13 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v14 = a2;
    }
  }
  else
  {
    v14 = a2;
  }
  v15 = a4[2];
  if (v14 <= v15)
    v16 = a4[2];
  else
    v16 = v14;
  if (v16)
  {
    sub_1BC3CC23C(0, a5, a6, a7, a8);
    v17 = (_QWORD *)swift_allocObject();
    v18 = _swift_stdlib_malloc_size(v17);
    v17[2] = v15;
    v17[3] = 2 * ((uint64_t)(v18 - 32) / 56);
  }
  else
  {
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v19 = (unint64_t)(v17 + 4);
  v20 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v17 != a4 || v19 >= v20 + 56 * v15)
      memmove(v17 + 4, a4 + 4, 56 * v15);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v20 >= v19 + 56 * v15 || v19 >= v20 + 56 * v15)
  {
    sub_1BC3CC1CC(0, a6, a7, a8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C115C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3C0F84(a1, a2, a3, a4, &qword_1EF42C858, &qword_1EF42C860, &qword_1EF429BB8, (uint64_t)&_s27FormattedRecordValueInRangeVN);
}

uint64_t sub_1BC3C1180(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3C0F84(a1, a2, a3, a4, &qword_1EF42C840, &qword_1EF42C848, &qword_1EF429B90, (uint64_t)&_s20FormattedRecordValueVN);
}

uint64_t sub_1BC3C11A4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3C0F84(a1, a2, a3, a4, &qword_1EF42C828, &qword_1EF42C830, &qword_1EF429B70, (uint64_t)&_s15FormattedRecordVN);
}

uint64_t sub_1BC3C11C8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3C0700(a1, a2, a3, a4, &qword_1EF42CA70, (uint64_t (*)(uint64_t))sub_1BC3CD250);
}

uint64_t sub_1BC3C11DC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3C0700(a1, a2, a3, a4, &qword_1EF42C658, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData);
}

uint64_t sub_1BC3C11F0(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v10 = a4[3];
    v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v11 = a2;
    }
  }
  else
  {
    v11 = a2;
  }
  v12 = a4[2];
  if (v11 <= v12)
    v13 = a4[2];
  else
    v13 = v11;
  if (v13)
  {
    sub_1BC3CC864(0, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = (_QWORD *)swift_allocObject();
    v15 = _swift_stdlib_malloc_size(v14);
    v14[2] = v12;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v16 = (unint64_t)(v14 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v12)
      memmove(v14 + 4, a4 + 4, 40 * v12);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v12 || v16 >= v17 + 40 * v12)
  {
    sub_1BC3B9914(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C13BC(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BC34B508(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v10])
      memmove(v14, v15, v10);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v10] || v14 >= &v15[v10])
  {
    memcpy(v14, v15, v10);
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C1514(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC3C0700(a1, a2, a3, a4, &qword_1EF42C798, (uint64_t (*)(uint64_t))type metadata accessor for AttachmentContext);
}

uint64_t sub_1BC3C1528(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC357158(0, &qword_1EF42C508, (uint64_t (*)(uint64_t))sub_1BC3B8D3C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1BC3B8D3C();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C16DC(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), unint64_t *a6, uint64_t a7)
{
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v11 = a4[3];
    v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v12 = a2;
    }
  }
  else
  {
    v12 = a2;
  }
  v13 = a4[2];
  if (v12 <= v13)
    v14 = a4[2];
  else
    v14 = v12;
  if (v14)
  {
    a5(0);
    v15 = (_QWORD *)swift_allocObject();
    v16 = _swift_stdlib_malloc_size(v15);
    v17 = v16 - 32;
    if (v16 < 32)
      v17 = v16 - 25;
    v15[2] = v13;
    v15[3] = 2 * (v17 >> 3);
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v18 = (unint64_t)(v15 + 4);
  v19 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v15 != a4 || v18 >= v19 + 8 * v13)
      memmove(v15 + 4, a4 + 4, 8 * v13);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v19 >= v18 + 8 * v13 || v18 >= v19 + 8 * v13)
  {
    sub_1BC34B508(0, a6, a7, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v15;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C187C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC357158(0, (unint64_t *)&qword_1EF42C7C8, (uint64_t (*)(uint64_t))sub_1BC3CBFF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1BC3CBFF0();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C1A14(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BC357158(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 17;
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 4);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[16 * v10])
      memmove(v15, v16, 16 * v10);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[16 * v10] || v15 >= &v16[16 * v10])
  {
    memcpy(v15, v16, 16 * v10);
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C1B7C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC3CCCF0();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1BC34B508(0, (unint64_t *)&qword_1EF4290E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3C1D14(uint64_t a1, char a2)
{
  return sub_1BC3C2C48(a1, a2, (unint64_t *)&qword_1EF429758, &qword_1ED6A58D8, 0x1E0CB6B00, (unint64_t *)&qword_1ED6A58E0);
}

uint64_t sub_1BC3C1D38(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v3 = v2;
  v5 = *v2;
  sub_1BC35F4F0();
  v37 = a2;
  result = sub_1BC62D3E8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v36 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v35)
          goto LABEL_33;
        v21 = v36[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v35)
            goto LABEL_33;
          v21 = v36[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v5 + 32);
              if (v34 >= 64)
                bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v34;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v35)
                  goto LABEL_33;
                v21 = v36[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v19);
      v28 = *(_QWORD *)(v5 + 56) + 72 * v19;
      v29 = *(_BYTE *)v28;
      v30 = *(void **)(v28 + 8);
      v31 = *(_QWORD *)(v28 + 16);
      v40 = *(_OWORD *)(v28 + 40);
      v38 = *(_OWORD *)(v28 + 24);
      v39 = *(_OWORD *)(v28 + 56);
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32 = *((id *)&v39 + 1);
        v33 = v30;
      }
      sub_1BC62D670();
      sub_1BC62D67C();
      result = sub_1BC62D6AC();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 72 * v16;
      *(_BYTE *)v17 = v29;
      *(_QWORD *)(v17 + 8) = v30;
      *(_QWORD *)(v17 + 16) = v31;
      *(_OWORD *)(v17 + 24) = v38;
      *(_OWORD *)(v17 + 40) = v40;
      *(_OWORD *)(v17 + 56) = v39;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C208C(uint64_t a1, char a2)
{
  return sub_1BC3C2414(a1, a2, &qword_1EF4297D0, &qword_1ED6A47E8, (uint64_t)off_1E74D01B8);
}

uint64_t sub_1BC3C20A8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v3 = v2;
  v5 = *v2;
  sub_1BC35EB5C();
  v44 = a2;
  v6 = sub_1BC62D3E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v43 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v41 = v2;
  v42 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_22;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v42)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v43 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v42)
        goto LABEL_34;
      v24 = *(_QWORD *)(v43 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v42)
        {
LABEL_34:
          swift_release();
          v3 = v41;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = *(_QWORD *)(v43 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v13 >= v42)
              goto LABEL_34;
            v24 = *(_QWORD *)(v43 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v13 = v25;
      }
    }
LABEL_21:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v5 + 56) + 72 * v21;
    if ((v44 & 1) != 0)
    {
      v45 = *(_OWORD *)v29;
      v30 = *(_OWORD *)(v29 + 16);
      v31 = *(_OWORD *)(v29 + 32);
      v32 = *(_OWORD *)(v29 + 48);
      v49 = *(_QWORD *)(v29 + 64);
      v47 = v31;
      v48 = v32;
      v46 = v30;
    }
    else
    {
      sub_1BC3CCF04(v29, (uint64_t)&v45);
      swift_bridgeObjectRetain();
    }
    sub_1BC62D670();
    sub_1BC62C740();
    result = sub_1BC62D6AC();
    v33 = -1 << *(_BYTE *)(v7 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v11 + 8 * (v34 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v11 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v11 + 8 * v35);
      }
      while (v39 == -1);
      v14 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v28;
    v15[1] = v27;
    v16 = *(_QWORD *)(v7 + 56) + 72 * v14;
    *(_OWORD *)v16 = v45;
    v17 = v46;
    v18 = v47;
    v19 = v48;
    *(_QWORD *)(v16 + 64) = v49;
    *(_OWORD *)(v16 + 32) = v18;
    *(_OWORD *)(v16 + 48) = v19;
    *(_OWORD *)(v16 + 16) = v17;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v41;
  v23 = (_QWORD *)(v5 + 64);
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v5 + 32);
  if (v40 >= 64)
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v40;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C23F8(uint64_t a1, char a2)
{
  return sub_1BC3C2414(a1, a2, &qword_1EF4297B8, (unint64_t *)&qword_1ED6A47F8, 0x1E0DC3870);
}

uint64_t sub_1BC3C2414(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;

  v6 = v5;
  v8 = *v5;
  sub_1BC35EAA4(0, a3, a4, a5, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t))MEMORY[0x1E0DECD58]);
  result = sub_1BC62D3E8();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v37 = v6;
    v11 = 0;
    v12 = (uint64_t *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    v35 = -1 << v13;
    v36 = v13;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & *(_QWORD *)(v8 + 64);
    v38 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v22 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v23 = v22 | (v11 << 6);
      }
      else
      {
        v24 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v24 >= v38)
          goto LABEL_33;
        v25 = v12[v24];
        ++v11;
        if (!v25)
        {
          v11 = v24 + 1;
          if (v24 + 1 >= v38)
            goto LABEL_33;
          v25 = v12[v11];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v38)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v6 = v37;
                goto LABEL_40;
              }
              if (v36 >= 64)
                bzero((void *)(v8 + 64), 8 * v38);
              else
                *v12 = v35;
              v6 = v37;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v25 = v12[v26];
            if (!v25)
            {
              while (1)
              {
                v11 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_42;
                if (v11 >= v38)
                  goto LABEL_33;
                v25 = v12[v11];
                ++v26;
                if (v25)
                  goto LABEL_30;
              }
            }
            v11 = v26;
          }
        }
LABEL_30:
        v15 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v11 << 6);
      }
      v31 = 8 * v23;
      v32 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + v31);
      v33 = *(void **)(*(_QWORD *)(v8 + 56) + v31);
      if ((a2 & 1) == 0)
        v34 = v33;
      result = sub_1BC62D664();
      v17 = -1 << *(_BYTE *)(v10 + 32);
      v18 = result & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v16 + 8 * (v18 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v16 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v19 == v28;
          if (v19 == v28)
            v19 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v16 + 8 * v19);
        }
        while (v30 == -1);
        v20 = __clz(__rbit64(~v30)) + (v19 << 6);
      }
      *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = 8 * v20;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + v21) = v32;
      *(_QWORD *)(*(_QWORD *)(v10 + 56) + v21) = v33;
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v6 = v10;
  return result;
}

unint64_t sub_1BC3C26DC(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;

  v3 = v2;
  v5 = *v2;
  sub_1BC35D700();
  v28 = (_QWORD *)sub_1BC62D3E8();
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = 1 << *(_BYTE *)(v5 + 32);
    v26 = v2;
    v27 = (_QWORD *)(v5 + 64);
    v7 = -1;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    v8 = v7 & *(_QWORD *)(v5 + 64);
    v9 = (unint64_t)(v6 + 63) >> 6;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v8)
      {
        v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v13 = v12 | (v11 << 6);
      }
      else
      {
        v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v14 >= v9)
          goto LABEL_22;
        v15 = v27[v14];
        ++v11;
        if (!v15)
        {
          v11 = v14 + 1;
          if (v14 + 1 >= v9)
            goto LABEL_22;
          v15 = v27[v11];
          if (!v15)
          {
            v16 = v14 + 2;
            if (v16 >= v9)
            {
LABEL_22:
              swift_release();
              v3 = v26;
              if ((a2 & 1) != 0)
              {
                v25 = 1 << *(_BYTE *)(v5 + 32);
                if (v25 > 63)
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v27 = -1 << v25;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v15 = v27[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_29;
                if (v11 >= v9)
                  goto LABEL_22;
                v15 = v27[v11];
                ++v16;
                if (v15)
                  goto LABEL_19;
              }
            }
            v11 = v16;
          }
        }
LABEL_19:
        v8 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v11 << 6);
      }
      v17 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v13);
      v19 = *v17;
      v18 = v17[1];
      v21 = (void *)v17[2];
      v20 = (void *)v17[3];
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v13);
      if ((a2 & 1) == 0)
      {
        v23 = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v24 = v21;
      }
      result = sub_1BC3C9038(v19, v18, v21, v20, v22, v28);
    }
  }
  result = swift_release();
  *v3 = v28;
  return result;
}

uint64_t sub_1BC3C28F4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1BC3CBCF0(0, (unint64_t *)&qword_1EF4296D8, (uint64_t)&qword_1EF4296E0, (uint64_t)type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC357158);
  v36 = a2;
  v6 = sub_1BC62D3E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BC62D670();
    sub_1BC62C740();
    result = sub_1BC62D6AC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C2C24(uint64_t a1, char a2)
{
  return sub_1BC3C2C48(a1, a2, &qword_1EF429740, &qword_1EF429748, 0x1E0CB6868, &qword_1EF429750);
}

uint64_t sub_1BC3C2C48(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;

  v7 = v6;
  v9 = *v6;
  sub_1BC35E318(0, a3, a4, a5, a6);
  v10 = sub_1BC62D3E8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_40;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v40 = v6;
  v41 = v9 + 64;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  else
    v13 = -1;
  v14 = v13 & *(_QWORD *)(v9 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v14)
    {
      v24 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v25 = v24 | (v18 << 6);
      goto LABEL_31;
    }
    v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v15)
      break;
    v27 = (_QWORD *)(v9 + 64);
    v28 = *(_QWORD *)(v41 + 8 * v26);
    ++v18;
    if (!v28)
    {
      v18 = v26 + 1;
      if (v26 + 1 >= v15)
        goto LABEL_33;
      v28 = *(_QWORD *)(v41 + 8 * v18);
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v15)
        {
LABEL_33:
          swift_release();
          v7 = v40;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = *(_QWORD *)(v41 + 8 * v29);
        if (!v28)
        {
          while (1)
          {
            v18 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v18 >= v15)
              goto LABEL_33;
            v28 = *(_QWORD *)(v41 + 8 * v18);
            ++v29;
            if (v28)
              goto LABEL_30;
          }
        }
        v18 = v29;
      }
    }
LABEL_30:
    v14 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v18 << 6);
LABEL_31:
    v34 = 8 * v25;
    v35 = *(void **)(*(_QWORD *)(v9 + 48) + v34);
    v36 = *(void **)(*(_QWORD *)(v9 + 56) + v34);
    if ((a2 & 1) == 0)
    {
      v37 = v35;
      v38 = v36;
    }
    result = sub_1BC62CEA8();
    v19 = -1 << *(_BYTE *)(v11 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v16 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v16 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v32 = v21 == v31;
        if (v21 == v31)
          v21 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v21);
      }
      while (v33 == -1);
      v22 = __clz(__rbit64(~v33)) + (v21 << 6);
    }
    *(_QWORD *)(v16 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = 8 * v22;
    *(_QWORD *)(*(_QWORD *)(v11 + 48) + v23) = v35;
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + v23) = v36;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v7 = v40;
  v27 = (_QWORD *)(v9 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v39 = 1 << *(_BYTE *)(v9 + 32);
  if (v39 >= 64)
    bzero(v27, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v39;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v7 = v11;
  return result;
}

uint64_t sub_1BC3C2F24(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  sub_1BC35EDEC(0, (unint64_t *)&qword_1EF429798);
  v42 = a2;
  v6 = sub_1BC62D3E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BC62D670();
    sub_1BC62C740();
    result = sub_1BC62D6AC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C3260(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1BC3CC294(0, &qword_1EF42C8A0, (void (*)(uint64_t))sub_1BC3CC2F8);
  v36 = a2;
  v6 = sub_1BC62D3E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BC62D670();
    sub_1BC62C740();
    result = sub_1BC62D6AC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1BC3C3590(uint64_t a1, char a2)
{
  sub_1BC3C35F4(a1, a2, &qword_1EF42C938, (void (*)(uint64_t))sub_1BC3CC724);
}

void sub_1BC3C35A4(uint64_t a1, char a2)
{
  sub_1BC3C35F4(a1, a2, &qword_1EF42C918, (void (*)(uint64_t))sub_1BC3CC654);
}

void sub_1BC3C35B8(uint64_t a1, char a2)
{
  sub_1BC3C35F4(a1, a2, &qword_1EF42C8F8, (void (*)(uint64_t))sub_1BC3CC584);
}

void sub_1BC3C35CC(uint64_t a1, char a2)
{
  sub_1BC3C35F4(a1, a2, &qword_1EF42C8D8, (void (*)(uint64_t))sub_1BC3CC4B4);
}

void sub_1BC3C35E0(uint64_t a1, char a2)
{
  sub_1BC3C35F4(a1, a2, &qword_1EF42C8B0, (void (*)(uint64_t))sub_1BC3CC360);
}

void sub_1BC3C35F4(uint64_t a1, char a2, unint64_t *a3, void (*a4)(uint64_t))
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  __int128 v28;
  _QWORD *v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v5 = v4;
  v7 = *v4;
  sub_1BC3CBD60(0, a3, a4, (void (*)(void))sub_1BC36E268);
  v29 = (_QWORD *)sub_1BC62D3E8();
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = 1 << *(_BYTE *)(v7 + 32);
    v26 = v4;
    v27 = (_QWORD *)(v7 + 64);
    v9 = -1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    v10 = v9 & *(_QWORD *)(v7 + 64);
    v11 = (unint64_t)(v8 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v15 >= v11)
          goto LABEL_22;
        v16 = v27[v15];
        ++v12;
        if (!v16)
        {
          v12 = v15 + 1;
          if (v15 + 1 >= v11)
            goto LABEL_22;
          v16 = v27[v12];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_22:
              swift_release();
              v5 = v26;
              if ((a2 & 1) != 0)
              {
                v25 = 1 << *(_BYTE *)(v7 + 32);
                if (v25 > 63)
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v27 = -1 << v25;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v16 = v27[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_29;
                if (v12 >= v11)
                  goto LABEL_22;
                v16 = v27[v12];
                ++v17;
                if (v16)
                  goto LABEL_19;
              }
            }
            v12 = v17;
          }
        }
LABEL_19:
        v10 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      v18 = *(_QWORD *)(v7 + 48) + 48 * v14;
      v19 = *(_OWORD *)v18;
      v20 = *(_QWORD *)(v18 + 16);
      v21 = *(_BYTE *)(v18 + 24);
      v23 = *(_QWORD *)(v18 + 32);
      v22 = *(_QWORD *)(v18 + 40);
      v24 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14);
      if ((a2 & 1) == 0)
      {
        v28 = *(_OWORD *)v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = v28;
      }
      v30 = v19;
      v31 = v20;
      v32 = v21;
      v33 = v23;
      v34 = v22;
      sub_1BC3C91A0((uint64_t)&v30, v24, v29);
    }
  }
  swift_release();
  *v5 = v29;
}

uint64_t sub_1BC3C383C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned __int8 v32;
  id v33;
  unsigned __int8 *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  char *v54;
  uint64_t v55;

  v3 = v2;
  v5 = sub_1BC62A7B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1BC35E648();
  v49 = a2;
  v10 = sub_1BC62D3E8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v54 = v8;
  v55 = v5;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v46 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v44 = v2;
  v45 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v47 = v9;
  v48 = v6;
  while (1)
  {
    if (v15)
    {
      v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v23 = v22 | (v18 << 6);
      goto LABEL_22;
    }
    v24 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v45)
      break;
    v25 = v46;
    v26 = v46[v24];
    ++v18;
    if (!v26)
    {
      v18 = v24 + 1;
      if (v24 + 1 >= v45)
        goto LABEL_34;
      v26 = v46[v18];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v45)
        {
LABEL_34:
          swift_release();
          v3 = v44;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v46[v27];
        if (!v26)
        {
          while (1)
          {
            v18 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v18 >= v45)
              goto LABEL_34;
            v26 = v46[v18];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v18 = v27;
      }
    }
LABEL_21:
    v15 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v18 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v6 + 72);
    v29 = *(_QWORD *)(v9 + 48) + v28 * v23;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v54, v29, v55);
      v30 = (unsigned __int8 *)(*(_QWORD *)(v9 + 56) + 48 * v23);
      v53 = *v30;
      v31 = *((_QWORD *)v30 + 1);
      v51 = *((_QWORD *)v30 + 2);
      v52 = v31;
      v50 = *((_QWORD *)v30 + 3);
      v32 = v30[32];
      v33 = (id)*((_QWORD *)v30 + 5);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v54, v29, v55);
      v34 = (unsigned __int8 *)(*(_QWORD *)(v9 + 56) + 48 * v23);
      v53 = *v34;
      v35 = *((_QWORD *)v34 + 1);
      v51 = *((_QWORD *)v34 + 2);
      v52 = v35;
      v50 = *((_QWORD *)v34 + 3);
      v32 = v34[32];
      v33 = *((id *)v34 + 5);
    }
    sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1BC62C5C0();
    v36 = -1 << *(_BYTE *)(v11 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v16 + 8 * (v37 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v16 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      v6 = v48;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      v6 = v48;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v16 + 8 * v38);
      }
      while (v42 == -1);
      v19 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v28 * v19, v54, v55);
    v20 = *(_QWORD *)(v11 + 56) + 48 * v19;
    *(_BYTE *)v20 = v53;
    v21 = v51;
    *(_QWORD *)(v20 + 8) = v52;
    *(_QWORD *)(v20 + 16) = v21;
    *(_QWORD *)(v20 + 24) = v50;
    *(_BYTE *)(v20 + 32) = v32;
    *(_QWORD *)(v20 + 40) = v33;
    ++*(_QWORD *)(v11 + 16);
    v9 = v47;
  }
  swift_release();
  v3 = v44;
  v25 = v46;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v9 + 32);
  if (v43 >= 64)
    bzero(v25, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v43;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BC3C3C54(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t *v33;
  __int128 v34;

  v3 = v2;
  v5 = *v2;
  sub_1BC35EDEC(0, (unint64_t *)&qword_1EF42C7D8);
  result = sub_1BC62D3E8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v9;
    v31 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v31 >= 64)
                  bzero(v33, 8 * v32);
                else
                  *v33 = v30;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 24 * v19;
      v29 = *(_QWORD *)v28;
      v34 = *(_OWORD *)(v28 + 8);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1BC62D664();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_QWORD *)v17 = v29;
      *(_OWORD *)(v17 + 8) = v34;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C3F38(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  sub_1BC35EDEC(0, (unint64_t *)&qword_1EF429780);
  v6 = a2;
  v7 = sub_1BC62D3E8();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v14 << 6);
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34)
          goto LABEL_34;
        v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          v14 = v19 + 1;
          if (v19 + 1 >= v34)
            goto LABEL_34;
          v20 = v35[v14];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                v14 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v14 >= v34)
                  goto LABEL_34;
                v20 = v35[v14];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v14 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      v25 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((v6 & 1) != 0)
      {
        sub_1BC35E088(v25, v36);
      }
      else
      {
        sub_1BC375540((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1BC62D670();
      sub_1BC62C740();
      result = sub_1BC62D6AC();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
      *v16 = v24;
      v16[1] = v23;
      result = (uint64_t)sub_1BC35E088(v36, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1BC3C4258(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1BC3CCC08();
  v36 = a2;
  v6 = sub_1BC62D3E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BC62D670();
    sub_1BC62C740();
    result = sub_1BC62D6AC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C4568(uint64_t a1, char a2)
{
  return sub_1BC3C6AD8(a1, a2, &qword_1EF42C9B8, &qword_1EF42C9C0);
}

uint64_t sub_1BC3C4584(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v3 = v2;
  v5 = *v2;
  sub_1BC3CC294(0, &qword_1EF42CAE0, (void (*)(uint64_t))type metadata accessor for MedicalRecordChartableSeriesCollector);
  v6 = a2;
  v7 = sub_1BC62D3E8();
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v39 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_34;
      v23 = *(_QWORD *)(v39 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v6 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v39 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v38)
              goto LABEL_34;
            v23 = *(_QWORD *)(v39 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((v6 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v42 = *(_QWORD *)(v25 + 32);
      v40 = v26;
      v41 = v27;
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    }
    else
    {
      sub_1BC3CD62C(v25, (uint64_t)&v40);
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
      swift_retain();
    }
    result = sub_1BC62D16C();
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v8 + 48) + 40 * v15;
    v17 = v40;
    v18 = v41;
    *(_QWORD *)(v16 + 32) = v42;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v15) = v28;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v37;
  v22 = (_QWORD *)(v5 + 64);
  if ((v6 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1BC3C48B4(uint64_t a1, char a2)
{
  return sub_1BC3C48C0(a1, a2, (void (*)(_QWORD))sub_1BC3CCDF4);
}

uint64_t sub_1BC3C48C0(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v7 = sub_1BC62D3E8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v3;
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v38 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v38 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      v35 = v33;
    }
    result = sub_1BC62CEA8();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v37;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1BC3C4B8C(uint64_t a1, char a2)
{
  return sub_1BC3C7EB4(a1, a2, (void (*)(_QWORD))sub_1BC3CCD5C);
}

uint64_t sub_1BC3C4B98(uint64_t a1, char a2)
{
  return sub_1BC3C8A2C(a1, a2, (void (*)(_QWORD))sub_1BC3CC8C8);
}

uint64_t sub_1BC3C4BA4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  sub_1BC35E004();
  v35 = a2;
  v6 = sub_1BC62D3E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_1BC35E088(v22, v36);
    }
    else
    {
      sub_1BC375540((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_1BC62C680();
    sub_1BC62D670();
    sub_1BC62C740();
    v24 = sub_1BC62D6AC();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_1BC35E088(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C4ED8(uint64_t a1, char a2)
{
  return sub_1BC3C6AD8(a1, a2, &qword_1EF4296C0, (unint64_t *)&qword_1EF429090);
}

uint64_t sub_1BC3C4EF4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;

  v3 = v2;
  v5 = type metadata accessor for BrowseCategory();
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1BC3CD01C(0, (unint64_t *)&qword_1ED6A3228, (void (*)(uint64_t))sub_1BC3CD538);
  v40 = a2;
  v9 = sub_1BC62D3E8();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v38 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v36 = v2;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37)
      break;
    v22 = v38;
    v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v37)
        goto LABEL_34;
      v23 = v38[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v17 >= v37)
              goto LABEL_34;
            v23 = v38[v17];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v17 = v24;
      }
    }
LABEL_21:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v39 + 72);
    v26 = *(_QWORD *)(v8 + 48) + v25 * v20;
    if ((v40 & 1) != 0)
    {
      sub_1BC375724(v26, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      v27 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_1BC35EBE0(v26, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      v27 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
      swift_bridgeObjectRetain();
    }
    sub_1BC62D670();
    BrowseCategory.rawValue.getter();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    result = sub_1BC62D6AC();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = sub_1BC375724((uint64_t)v7, *(_QWORD *)(v10 + 48) + v25 * v18, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v36;
  v22 = v38;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v8 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1BC3C5298(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;

  v3 = v2;
  v5 = type metadata accessor for BrowseCategory();
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1BC35F470();
  v40 = a2;
  v9 = sub_1BC62D3E8();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v38 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v36 = v2;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37)
      break;
    v22 = v38;
    v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v37)
        goto LABEL_34;
      v23 = v38[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v17 >= v37)
              goto LABEL_34;
            v23 = v38[v17];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v17 = v24;
      }
    }
LABEL_21:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v39 + 72);
    v26 = *(_QWORD *)(v8 + 48) + v25 * v20;
    if ((v40 & 1) != 0)
      sub_1BC375724(v26, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    else
      sub_1BC35EBE0(v26, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v27 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
    sub_1BC62D670();
    BrowseCategory.rawValue.getter();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    result = sub_1BC62D6AC();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = sub_1BC375724((uint64_t)v7, *(_QWORD *)(v10 + 48) + v25 * v18, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v36;
  v22 = v38;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v8 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1BC3C561C(uint64_t a1, int a2)
{
  return sub_1BC3C5C84(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (void (*)(_QWORD, __n128))sub_1BC35F1F8, (unint64_t *)&qword_1ED6A4E38, MEMORY[0x1E0CB09C8]);
}

uint64_t sub_1BC3C5640(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1BC3CC294(0, &qword_1ED6A36F0, (void (*)(uint64_t))sub_1BC3CD2B8);
  v36 = a2;
  v6 = sub_1BC62D3E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1BC62D670();
    sub_1BC62C740();
    result = sub_1BC62D6AC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C5970(uint64_t a1, char a2)
{
  return sub_1BC3C6AD8(a1, a2, &qword_1ED6A36F8, &qword_1ED6A36E8);
}

uint64_t sub_1BC3C598C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v3 = v2;
  v5 = *v2;
  sub_1BC3CD158();
  result = sub_1BC62D3E8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v32 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v31 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v31)
          goto LABEL_33;
        v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v31)
            goto LABEL_33;
          v21 = v32[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v30;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v31)
                  goto LABEL_33;
                v21 = v32[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = 8 * v19;
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v27);
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v27);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1BC62D670();
      sub_1BC62D67C();
      result = sub_1BC62D6AC();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v28;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v17) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C5C60(uint64_t a1, int a2)
{
  return sub_1BC3C5C84(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (void (*)(_QWORD, __n128))sub_1BC3CD0B4, &qword_1EF4288B8, MEMORY[0x1E0CB08A8]);
}

uint64_t sub_1BC3C5C84(uint64_t a1, int a2, uint64_t (*a3)(uint64_t), void (*a4)(_QWORD, __n128), unint64_t *a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t i;
  uint64_t (*v47)(uint64_t);
  unint64_t *v48;
  uint64_t v49;
  int v50;

  v48 = a5;
  v49 = a6;
  v8 = v6;
  v47 = a3;
  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v43 - v13;
  v15 = *v6;
  a4(0, v12);
  v50 = a2;
  v16 = sub_1BC62D3E8();
  v17 = v16;
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_41;
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = *(_QWORD *)(v15 + 64);
  v45 = (_QWORD *)(v15 + 64);
  if (v18 < 64)
    v20 = ~(-1 << v18);
  else
    v20 = -1;
  v21 = v20 & v19;
  v43 = v6;
  v44 = (unint64_t)(v18 + 63) >> 6;
  v22 = v16 + 64;
  result = swift_retain();
  v24 = 0;
  for (i = v15; ; v15 = i)
  {
    if (v21)
    {
      v26 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v27 = v26 | (v24 << 6);
      goto LABEL_22;
    }
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v44)
      break;
    v29 = v45;
    v30 = v45[v28];
    ++v24;
    if (!v30)
    {
      v24 = v28 + 1;
      if (v28 + 1 >= v44)
        goto LABEL_34;
      v30 = v45[v24];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v44)
        {
LABEL_34:
          swift_release();
          v8 = v43;
          if ((v50 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v30 = v45[v31];
        if (!v30)
        {
          while (1)
          {
            v24 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_43;
            if (v24 >= v44)
              goto LABEL_34;
            v30 = v45[v24];
            ++v31;
            if (v30)
              goto LABEL_21;
          }
        }
        v24 = v31;
      }
    }
LABEL_21:
    v21 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v24 << 6);
LABEL_22:
    v32 = *(_QWORD *)(v11 + 72);
    v33 = *(_QWORD *)(v15 + 48) + v32 * v27;
    if ((v50 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v14, v33, v10);
      v34 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v27);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v14, v33, v10);
      v34 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v27);
    }
    sub_1BC347F0C(v48, v47, v49);
    result = sub_1BC62C5C0();
    v35 = -1 << *(_BYTE *)(v17 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v22 + 8 * (v36 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v22 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v22 + 8 * v37);
      }
      while (v41 == -1);
      v25 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v22 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v17 + 48) + v32 * v25, v14, v10);
    *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v25) = v34;
    ++*(_QWORD *)(v17 + 16);
  }
  swift_release();
  v8 = v43;
  v29 = v45;
  if ((v50 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v42 = 1 << *(_BYTE *)(v15 + 32);
  if (v42 >= 64)
    bzero(v29, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v42;
  *(_QWORD *)(v15 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v8 = v17;
  return result;
}

uint64_t sub_1BC3C6010(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  sub_1BC3CD410();
  result = sub_1BC62D3E8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1BC62D670();
      sub_1BC62D67C();
      result = sub_1BC62D6AC();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C62DC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v3 = v2;
  v5 = type metadata accessor for BrowseCategory();
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1BC3CD01C(0, (unint64_t *)&qword_1EF4297F0, sub_1BC35EF8C);
  v47 = a2;
  v9 = sub_1BC62D3E8();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v43 = v2;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v45 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v44 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v23 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v24 = v23 | (v17 << 6);
      goto LABEL_22;
    }
    v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v17;
    if (!v27)
    {
      v17 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v17];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v3 = v43;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v17 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v17 >= v44)
              goto LABEL_34;
            v27 = v45[v17];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v17 = v28;
      }
    }
LABEL_21:
    v14 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v46 + 72);
    v30 = *(_QWORD *)(v8 + 48) + v29 * v24;
    if ((v47 & 1) != 0)
    {
      sub_1BC375724(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      v31 = *(_QWORD *)(v8 + 56) + 72 * v24;
      v33 = *(_OWORD *)(v31 + 16);
      v32 = *(_OWORD *)(v31 + 32);
      v34 = *(_QWORD *)(v31 + 64);
      v51 = *(_OWORD *)(v31 + 48);
      v52 = v34;
      v48 = *(_OWORD *)v31;
      v49 = v33;
      v50 = v32;
    }
    else
    {
      sub_1BC35EBE0(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      sub_1BC35EBE0(*(_QWORD *)(v8 + 56) + 72 * v24, (uint64_t)&v48, (uint64_t (*)(_QWORD))sub_1BC35EF8C);
    }
    sub_1BC62D670();
    BrowseCategory.rawValue.getter();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    result = sub_1BC62D6AC();
    v35 = -1 << *(_BYTE *)(v10 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v15 + 8 * (v36 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v15 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v15 + 8 * v37);
      }
      while (v41 == -1);
      v18 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = sub_1BC375724((uint64_t)v7, *(_QWORD *)(v10 + 48) + v29 * v18, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v19 = *(_QWORD *)(v10 + 56) + 72 * v18;
    v20 = v49;
    v21 = v50;
    v22 = v51;
    *(_QWORD *)(v19 + 64) = v52;
    *(_OWORD *)(v19 + 32) = v21;
    *(_OWORD *)(v19 + 48) = v22;
    *(_OWORD *)(v19 + 16) = v20;
    *(_OWORD *)v19 = v48;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v42 = 1 << *(_BYTE *)(v8 + 32);
  if (v42 >= 64)
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v42;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1BC3C66E4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char v43;
  int64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;

  v3 = v2;
  v5 = *v2;
  sub_1BC35EE94();
  v43 = a2;
  result = sub_1BC62D3E8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v39 = v2;
    v8 = 0;
    v41 = (_QWORD *)(v5 + 64);
    v42 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v40 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v44 = v8;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        result = (uint64_t)v41;
        if (v18 >= v40)
          goto LABEL_35;
        v19 = v41[v18];
        v20 = v8 + 1;
        if (!v19)
        {
          v20 = v18 + 1;
          if (v18 + 1 >= v40)
            goto LABEL_35;
          v19 = v41[v20];
          if (!v19)
          {
            v21 = v18 + 2;
            if (v21 >= v40)
            {
LABEL_35:
              if ((v43 & 1) == 0)
              {
                result = swift_release();
                v3 = v39;
                goto LABEL_42;
              }
              v38 = 1 << *(_BYTE *)(v5 + 32);
              if (v38 >= 64)
                bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v41 = -1 << v38;
              v3 = v39;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v41[v21];
            if (!v19)
            {
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_44;
                if (v20 >= v40)
                  goto LABEL_35;
                v19 = v41[v20];
                ++v21;
                if (v19)
                  goto LABEL_21;
              }
            }
            v20 = v21;
          }
        }
LABEL_21:
        v11 = (v19 - 1) & v19;
        v44 = v20;
        v17 = __clz(__rbit64(v19)) + (v20 << 6);
      }
      v22 = *(_QWORD *)(v5 + 48) + 32 * v17;
      v24 = *(_QWORD *)v22;
      v23 = *(_QWORD *)(v22 + 8);
      v25 = *(_QWORD *)(v22 + 16);
      v26 = *(unsigned __int8 *)(v22 + 24);
      v27 = *(_QWORD *)(v5 + 56) + 48 * v17;
      v28 = *(void **)v27;
      v29 = *(_QWORD *)(v27 + 24);
      v45 = *(void **)(v27 + 8);
      v46 = *(_QWORD *)(v27 + 16);
      v30 = *(_QWORD *)(v27 + 32);
      v47 = *(void **)(v27 + 40);
      if ((v43 & 1) == 0)
        sub_1BC35EEF4(v28, v45, v46, v29, v30, v47);
      sub_1BC62D670();
      sub_1BC62D67C();
      if (!v26)
      {
        sub_1BC62D6A0();
        sub_1BC62D6A0();
        sub_1BC62D6A0();
      }
      result = sub_1BC62D6AC();
      v31 = -1 << *(_BYTE *)(v7 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v12 + 8 * (v32 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v12 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v12 + 8 * v33);
        }
        while (v37 == -1);
        v13 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v7 + 48) + 32 * v13;
      *(_QWORD *)v14 = v24;
      *(_QWORD *)(v14 + 8) = v23;
      *(_QWORD *)(v14 + 16) = v25;
      *(_BYTE *)(v14 + 24) = v26;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 48 * v13);
      *v15 = v28;
      v15[1] = v45;
      v15[2] = v46;
      v15[3] = v29;
      v8 = v44;
      v15[4] = v30;
      v15[5] = v47;
      ++*(_QWORD *)(v7 + 16);
      v5 = v42;
    }
  }
  result = swift_release();
LABEL_42:
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C6ABC(uint64_t a1, char a2)
{
  return sub_1BC3C6AD8(a1, a2, &qword_1ED6A4808, (unint64_t *)&qword_1ED6A4E60);
}

uint64_t sub_1BC3C6AD8(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;

  v5 = v4;
  v7 = *v4;
  sub_1BC35D594(0, a3, a4);
  v40 = a2;
  v8 = sub_1BC62D3E8();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_40;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v39 = v7 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v7 + 64);
  v37 = v4;
  v38 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v38)
      break;
    v24 = (_QWORD *)(v7 + 64);
    v25 = *(_QWORD *)(v39 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_33;
      v25 = *(_QWORD *)(v39 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_33:
          swift_release();
          v5 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v38)
              goto LABEL_33;
            v25 = *(_QWORD *)(v39 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v22);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v35 = v34;
    }
    sub_1BC62D670();
    sub_1BC62C740();
    result = sub_1BC62D6AC();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release();
  v5 = v37;
  v24 = (_QWORD *)(v7 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v7 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v5 = v9;
  return result;
}

uint64_t sub_1BC3C6DEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1BC3CBCF0(0, &qword_1EF42CA10, (uint64_t)&qword_1EF42CA18, (uint64_t)&type metadata for GatewayIdentifiedClinicalAccount, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_1BC34B508);
  v36 = a2;
  v6 = sub_1BC62D3E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BC62D670();
    sub_1BC62C740();
    result = sub_1BC62D6AC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C711C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  int v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_1BC62A7B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1BC35ED08();
  v47 = a2;
  v10 = sub_1BC62D3E8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v46 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v44 = v2;
  v45 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v24 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v25 = v24 | (v18 << 6);
      goto LABEL_22;
    }
    v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v45)
      break;
    v27 = v46;
    v28 = v46[v26];
    ++v18;
    if (!v28)
    {
      v18 = v26 + 1;
      if (v26 + 1 >= v45)
        goto LABEL_34;
      v28 = v46[v18];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v45)
        {
LABEL_34:
          swift_release();
          v3 = v44;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v46[v29];
        if (!v28)
        {
          while (1)
          {
            v18 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v18 >= v45)
              goto LABEL_34;
            v28 = v46[v18];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v18 = v29;
      }
    }
LABEL_21:
    v15 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v18 << 6);
LABEL_22:
    v30 = *(_QWORD *)(v6 + 72);
    v31 = *(_QWORD *)(v9 + 48) + v30 * v25;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v31, v5);
      v32 = *(_QWORD *)(v9 + 56) + 72 * v25;
      v34 = *(_OWORD *)(v32 + 16);
      v33 = *(_OWORD *)(v32 + 32);
      v35 = *(_QWORD *)(v32 + 64);
      v51 = *(_OWORD *)(v32 + 48);
      v52 = v35;
      v48 = *(_OWORD *)v32;
      v49 = v34;
      v50 = v33;
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v31, v5);
      sub_1BC35EBE0(*(_QWORD *)(v9 + 56) + 72 * v25, (uint64_t)&v48, (uint64_t (*)(_QWORD))sub_1BC35ECA8);
    }
    sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1BC62C5C0();
    v36 = -1 << *(_BYTE *)(v11 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v16 + 8 * (v37 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v16 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v16 + 8 * v38);
      }
      while (v42 == -1);
      v19 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v30 * v19, v8, v5);
    v20 = *(_QWORD *)(v11 + 56) + 72 * v19;
    v21 = v49;
    v22 = v50;
    v23 = v51;
    *(_QWORD *)(v20 + 64) = v52;
    *(_OWORD *)(v20 + 32) = v22;
    *(_OWORD *)(v20 + 48) = v23;
    *(_OWORD *)(v20 + 16) = v21;
    *(_OWORD *)v20 = v48;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v44;
  v27 = v46;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v9 + 32);
  if (v43 >= 64)
    bzero(v27, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v43;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BC3C74F8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char *v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  char v45;

  v3 = v2;
  v5 = *v2;
  sub_1BC35EA00();
  v41 = a2;
  result = sub_1BC62D3E8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v39 = (_QWORD *)(v5 + 64);
    v40 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v38 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v18 >= v38)
          goto LABEL_35;
        v19 = v39[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v38)
            goto LABEL_35;
          v19 = v39[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v38)
            {
LABEL_35:
              if ((v41 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_42;
              }
              v37 = 1 << *(_BYTE *)(v5 + 32);
              if (v37 >= 64)
                bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v37;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v39[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v8 >= v38)
                  goto LABEL_35;
                v19 = v39[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(v5 + 56);
      v22 = *(_QWORD *)(v5 + 48) + 32 * v17;
      v23 = *(_QWORD *)v22;
      v24 = *(_QWORD *)(v22 + 8);
      v25 = *(_QWORD *)(v22 + 16);
      v26 = *(unsigned __int8 *)(v22 + 24);
      v27 = (char *)(v21 + 48 * v17);
      v42 = *v27;
      v43 = *(_OWORD *)(v27 + 8);
      v44 = *((_QWORD *)v27 + 3);
      v45 = v27[32];
      v28 = (void *)*((_QWORD *)v27 + 5);
      if ((v41 & 1) == 0)
        v29 = v28;
      sub_1BC62D670();
      sub_1BC62D67C();
      if (!v26)
      {
        sub_1BC62D6A0();
        sub_1BC62D6A0();
        sub_1BC62D6A0();
      }
      result = sub_1BC62D6AC();
      v30 = -1 << *(_BYTE *)(v7 + 32);
      v31 = result & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v12 + 8 * (v31 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v12 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v12 + 8 * v32);
        }
        while (v36 == -1);
        v13 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v7 + 48) + 32 * v13;
      *(_QWORD *)v14 = v23;
      *(_QWORD *)(v14 + 8) = v24;
      *(_QWORD *)(v14 + 16) = v25;
      *(_BYTE *)(v14 + 24) = v26;
      v15 = *(_QWORD *)(v7 + 56) + 48 * v13;
      *(_BYTE *)v15 = v42;
      *(_OWORD *)(v15 + 8) = v43;
      *(_QWORD *)(v15 + 24) = v44;
      *(_BYTE *)(v15 + 32) = v45;
      *(_QWORD *)(v15 + 40) = v28;
      ++*(_QWORD *)(v7 + 16);
      v5 = v40;
    }
  }
  result = swift_release();
LABEL_42:
  *v3 = v7;
  return result;
}

unint64_t sub_1BC3C78BC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t result;
  int64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t i;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t j;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;
  int64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void *v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;

  v4 = *v2;
  sub_1BC3CBD60(0, &qword_1ED6A59A0, (void (*)(uint64_t))type metadata accessor for CategoryCountProvider, (void (*)(void))sub_1BC35E728);
  v50 = a2;
  v5 = sub_1BC62D3E8();
  v6 = (_QWORD *)v5;
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_55;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v47 = (_QWORD *)(v4 + 64);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v4 + 64);
  v46 = (unint64_t)(v7 + 63) >> 6;
  v49 = v5 + 64;
  result = swift_retain();
  v11 = 0;
  v48 = v4;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v53 = v11;
      v15 = v14 | (v11 << 6);
      goto LABEL_21;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_58;
    if (v16 >= v46)
      break;
    v17 = v47;
    v18 = v47[v16];
    v19 = v11 + 1;
    if (!v18)
    {
      v19 = v11 + 2;
      if (v11 + 2 >= v46)
        goto LABEL_48;
      v18 = v47[v19];
      if (!v18)
      {
        v20 = v11 + 3;
        if (v11 + 3 >= v46)
        {
LABEL_48:
          swift_release();
          if ((v50 & 1) == 0)
            goto LABEL_55;
          goto LABEL_51;
        }
        v18 = v47[v20];
        if (!v18)
        {
          while (1)
          {
            v19 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_59;
            if (v19 >= v46)
              goto LABEL_48;
            v18 = v47[v19];
            ++v20;
            if (v18)
              goto LABEL_20;
          }
        }
        v19 = v11 + 3;
      }
    }
LABEL_20:
    v9 = (v18 - 1) & v18;
    v53 = v19;
    v15 = __clz(__rbit64(v18)) + (v19 << 6);
LABEL_21:
    v21 = *(_QWORD *)(v4 + 48) + 72 * v15;
    v22 = *(_BYTE *)v21;
    v23 = *(void **)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v26 = *(_QWORD *)(v21 + 24);
    v25 = *(_QWORD *)(v21 + 32);
    v27 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15);
    v55 = *(_OWORD *)(v21 + 56);
    v56 = *(_OWORD *)(v21 + 40);
    v28 = *(_QWORD *)(v21 + 48);
    v29 = *(void **)(v21 + 64);
    if ((v50 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = v29;
      swift_retain();
      v31 = v23;
    }
    v51 = v29;
    sub_1BC62D670();
    sub_1BC62D67C();
    v32 = v23;
    sub_1BC62CEC0();

    sub_1BC62D688();
    if (v26)
    {
      swift_bridgeObjectRetain();
      sub_1BC62C740();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    v52 = v25;
    v54 = v24;
    v33 = v27;
    if (v28 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      sub_1BC62D67C();
      swift_bridgeObjectRetain();
      v34 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (!v34)
        goto LABEL_34;
    }
    else
    {
      swift_bridgeObjectRetain();
      result = sub_1BC62D67C();
      v34 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v34)
        goto LABEL_34;
    }
    if (v34 < 1)
    {
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      return result;
    }
    if ((v28 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v34; ++i)
      {
        MEMORY[0x1BCCF24CC](i, v28);
        sub_1BC62CEC0();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v36 = 0;
      do
      {
        v37 = *(void **)(v28 + 8 * v36++ + 32);
        v38 = v37;
        sub_1BC62CEC0();

      }
      while (v34 != v36);
    }
LABEL_34:
    swift_bridgeObjectRelease();
    if ((unint64_t)v55 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      sub_1BC62D67C();
      swift_bridgeObjectRetain();
      v39 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (!v39)
        goto LABEL_6;
    }
    else
    {
      swift_bridgeObjectRetain();
      result = sub_1BC62D67C();
      v39 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v39)
        goto LABEL_6;
    }
    if (v39 < 1)
      goto LABEL_57;
    if ((v55 & 0xC000000000000001) != 0)
    {
      for (j = 0; j != v39; ++j)
      {
        MEMORY[0x1BCCF24CC](j, v55);
        sub_1BC62CEC0();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v41 = 0;
      do
      {
        v42 = *(void **)(v55 + 8 * v41++ + 32);
        v43 = v42;
        sub_1BC62CEC0();

      }
      while (v39 != v41);
    }
LABEL_6:
    swift_bridgeObjectRelease();
    v4 = v48;
    v12 = v51;
    sub_1BC62CEC0();

    sub_1BC62D6AC();
    result = sub_1BC62D0C4();
    *(_QWORD *)(v49 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v13 = v6[6] + 72 * result;
    v11 = v53;
    *(_BYTE *)v13 = v22;
    *(_QWORD *)(v13 + 8) = v32;
    *(_QWORD *)(v13 + 16) = v54;
    *(_QWORD *)(v13 + 24) = v26;
    *(_QWORD *)(v13 + 32) = v52;
    *(_OWORD *)(v13 + 40) = v56;
    *(_OWORD *)(v13 + 56) = v55;
    *(_QWORD *)(v6[7] + 8 * result) = v33;
    ++v6[2];
  }
  swift_release();
  v17 = v47;
  if ((v50 & 1) == 0)
    goto LABEL_55;
LABEL_51:
  v44 = 1 << *(_BYTE *)(v4 + 32);
  if (v44 >= 64)
    bzero(v17, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v17 = -1 << v44;
  *(_QWORD *)(v4 + 16) = 0;
LABEL_55:
  result = swift_release();
  *v45 = v6;
  return result;
}

uint64_t sub_1BC3C7EA8(uint64_t a1, char a2)
{
  return sub_1BC3C7EB4(a1, a2, (void (*)(_QWORD))sub_1BC3CBE38);
}

uint64_t sub_1BC3C7EB4(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v7 = sub_1BC62D3E8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v3;
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
      v34 = v32;
    result = sub_1BC62CEA8();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

unint64_t sub_1BC3C817C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t result;
  int64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t i;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t j;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  void *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;

  v4 = *v2;
  sub_1BC35E6C8();
  v48 = a2;
  v5 = sub_1BC62D3E8();
  v6 = (_QWORD *)v5;
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_55;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v45 = (_QWORD *)(v4 + 64);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v4 + 64);
  v44 = (unint64_t)(v7 + 63) >> 6;
  v47 = v5 + 64;
  result = swift_retain();
  v11 = 0;
  v46 = v4;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_21;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_58;
    if (v16 >= v44)
      break;
    v17 = v45;
    v18 = v45[v16];
    ++v11;
    if (!v18)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v44)
        goto LABEL_48;
      v18 = v45[v11];
      if (!v18)
      {
        v19 = v16 + 2;
        if (v19 >= v44)
        {
LABEL_48:
          swift_release();
          if ((v48 & 1) == 0)
            goto LABEL_55;
          goto LABEL_51;
        }
        v18 = v45[v19];
        if (!v18)
        {
          while (1)
          {
            v11 = v19 + 1;
            if (__OFADD__(v19, 1))
              goto LABEL_59;
            if (v11 >= v44)
              goto LABEL_48;
            v18 = v45[v11];
            ++v19;
            if (v18)
              goto LABEL_20;
          }
        }
        v11 = v19;
      }
    }
LABEL_20:
    v9 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_21:
    v20 = *(_QWORD *)(v4 + 56);
    v21 = *(_QWORD *)(v4 + 48) + 72 * v15;
    v22 = *(_BYTE *)v21;
    v23 = *(void **)(v21 + 8);
    v52 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v24 = *(_QWORD *)(v21 + 32);
    v26 = *(_QWORD *)(v20 + 8 * v15);
    v53 = *(_OWORD *)(v21 + 56);
    v54 = *(_OWORD *)(v21 + 40);
    v27 = *(_QWORD *)(v21 + 48);
    v28 = *(void **)(v21 + 64);
    if ((v48 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v28;
      v30 = v23;
    }
    v49 = v28;
    sub_1BC62D670();
    v51 = v22;
    sub_1BC62D67C();
    v31 = v23;
    sub_1BC62CEC0();

    sub_1BC62D688();
    if (v25)
    {
      swift_bridgeObjectRetain();
      sub_1BC62C740();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    v50 = v24;
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      sub_1BC62D67C();
      swift_bridgeObjectRetain();
      v32 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (!v32)
        goto LABEL_34;
    }
    else
    {
      swift_bridgeObjectRetain();
      result = sub_1BC62D67C();
      v32 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v32)
        goto LABEL_34;
    }
    if (v32 < 1)
    {
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      return result;
    }
    if ((v27 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v32; ++i)
      {
        MEMORY[0x1BCCF24CC](i, v27);
        sub_1BC62CEC0();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v34 = 0;
      do
      {
        v35 = *(void **)(v27 + 8 * v34++ + 32);
        v36 = v35;
        sub_1BC62CEC0();

      }
      while (v32 != v34);
    }
LABEL_34:
    swift_bridgeObjectRelease();
    if ((unint64_t)v53 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      sub_1BC62D67C();
      swift_bridgeObjectRetain();
      v37 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (!v37)
        goto LABEL_6;
    }
    else
    {
      swift_bridgeObjectRetain();
      result = sub_1BC62D67C();
      v37 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v37)
        goto LABEL_6;
    }
    if (v37 < 1)
      goto LABEL_57;
    if ((v53 & 0xC000000000000001) != 0)
    {
      for (j = 0; j != v37; ++j)
      {
        MEMORY[0x1BCCF24CC](j, v53);
        sub_1BC62CEC0();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v39 = 0;
      do
      {
        v40 = *(void **)(v53 + 8 * v39++ + 32);
        v41 = v40;
        sub_1BC62CEC0();

      }
      while (v37 != v39);
    }
LABEL_6:
    swift_bridgeObjectRelease();
    v4 = v46;
    v12 = v49;
    sub_1BC62CEC0();

    sub_1BC62D6AC();
    result = sub_1BC62D0C4();
    *(_QWORD *)(v47 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v13 = v6[6] + 72 * result;
    *(_BYTE *)v13 = v51;
    *(_QWORD *)(v13 + 8) = v31;
    *(_QWORD *)(v13 + 16) = v52;
    *(_QWORD *)(v13 + 24) = v25;
    *(_QWORD *)(v13 + 32) = v50;
    *(_OWORD *)(v13 + 40) = v54;
    *(_OWORD *)(v13 + 56) = v53;
    *(_QWORD *)(v6[7] + 8 * result) = v26;
    ++v6[2];
  }
  swift_release();
  v17 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_55;
LABEL_51:
  v42 = 1 << *(_BYTE *)(v4 + 32);
  if (v42 >= 64)
    bzero(v17, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v17 = -1 << v42;
  *(_QWORD *)(v4 + 16) = 0;
LABEL_55:
  result = swift_release();
  *v43 = v6;
  return result;
}

uint64_t sub_1BC3C8734(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  sub_1BC3CBD60(0, (unint64_t *)&qword_1EF4296F8, (void (*)(uint64_t))sub_1BC3CBDD4, (void (*)(void))sub_1BC35DFC0);
  result = sub_1BC62D3E8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1BC62D670();
      sub_1BC62D67C();
      result = sub_1BC62D6AC();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C8A20(uint64_t a1, char a2)
{
  return sub_1BC3C8A2C(a1, a2, (void (*)(_QWORD))sub_1BC3CCB88);
}

uint64_t sub_1BC3C8A2C(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v4 = v3;
  v6 = *v3;
  a3(0);
  result = sub_1BC62D3E8();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v31 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v30 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v20 >= v30)
          goto LABEL_33;
        v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v30)
            goto LABEL_33;
          v21 = v31[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v6 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v9 >= v30)
                  goto LABEL_33;
                v21 = v31[v9];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v9 = v22;
          }
        }
LABEL_30:
        v12 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v19);
      v28 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1BC62D670();
      sub_1BC62D67C();
      result = sub_1BC62D6AC();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v17) = v27;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_1BC3C8CF8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  __int128 *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  sub_1BC3CCA38();
  v6 = sub_1BC62D3E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
    v31 = (__int128 *)(*(_QWORD *)(v5 + 56) + 48 * v21);
    v38 = v31[1];
    v39 = *v31;
    v37 = v31[2];
    if ((a2 & 1) == 0)
    {
      v32 = v30;
      v33 = (id)v39;
      swift_retain();
      swift_retain();
      v34 = *((id *)&v38 + 1);
      swift_retain();
      swift_retain();
    }
    result = sub_1BC62CEA8();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v30;
    v19 = (_OWORD *)(*(_QWORD *)(v7 + 56) + 48 * v18);
    *v19 = v39;
    v19[1] = v38;
    v19[2] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC3C902C(uint64_t a1, char a2)
{
  return sub_1BC3C48C0(a1, a2, (void (*)(_QWORD))sub_1BC3CCAD0);
}

unint64_t sub_1BC3C9038(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, _QWORD *a6)
{
  id v12;
  id v13;
  unint64_t result;
  _QWORD *v15;

  sub_1BC62D670();
  if (a2)
  {
    sub_1BC62D688();
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    if (a3)
      goto LABEL_3;
LABEL_6:
    sub_1BC62D688();
    if (a4)
      goto LABEL_4;
LABEL_7:
    sub_1BC62D688();
    goto LABEL_8;
  }
  sub_1BC62D688();
  if (!a3)
    goto LABEL_6;
LABEL_3:
  sub_1BC62D688();
  v12 = a3;
  sub_1BC62CEC0();

  if (!a4)
    goto LABEL_7;
LABEL_4:
  sub_1BC62D688();
  v13 = a4;
  sub_1BC62CEC0();

LABEL_8:
  sub_1BC62D6AC();
  result = sub_1BC62D0C4();
  *(_QWORD *)((char *)a6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v15 = (_QWORD *)(a6[6] + 32 * result);
  *v15 = a1;
  v15[1] = a2;
  v15[2] = a3;
  v15[3] = a4;
  *(_QWORD *)(a6[7] + 8 * result) = a5;
  ++a6[2];
  return result;
}

__n128 sub_1BC3C91A0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v6;
  uint64_t v7;
  __n128 result;
  __int128 v9;
  _BYTE v10[32];
  uint64_t v11;
  char v12;

  sub_1BC62D670();
  sub_1BC3CC3CC(a1, (uint64_t)v10);
  sub_1BC3CC3CC((uint64_t)v10, (uint64_t)&v11);
  if ((v12 & 1) == 0)
  {
    sub_1BC62D688();
    sub_1BC62D67C();
    sub_1BC62D67C();
    sub_1BC62D67C();
    if (*(_QWORD *)(a1 + 40))
      goto LABEL_3;
LABEL_5:
    sub_1BC62D688();
    goto LABEL_6;
  }
  sub_1BC62D688();
  if (!*(_QWORD *)(a1 + 40))
    goto LABEL_5;
LABEL_3:
  sub_1BC62D688();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  sub_1BC3CC428(a1);
LABEL_6:
  sub_1BC62D6AC();
  v6 = sub_1BC62D0C4();
  *(_QWORD *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  v7 = a3[6] + 48 * v6;
  v9 = *(_OWORD *)(a1 + 16);
  result = *(__n128 *)(a1 + 32);
  *(_OWORD *)v7 = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 16) = v9;
  *(__n128 *)(v7 + 32) = result;
  *(_QWORD *)(a3[7] + 8 * v6) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_1BC3C9318()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t i;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t j;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  __int128 v40;
  __int128 v41;

  v1 = *v0;
  sub_1BC3CCEAC(0, (unint64_t *)&qword_1EF42C9A8, (void (*)(void))sub_1BC35E728);
  v2 = sub_1BC62D19C();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v35 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v36 = (unint64_t)(v4 + 63) >> 6;
    v38 = v2 + 56;
    result = swift_retain();
    v8 = 0;
    v37 = v1;
    while (1)
    {
      if (v6)
      {
        v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v12 = v11 | (v8 << 6);
      }
      else
      {
        v13 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_55;
        if (v13 >= v36)
        {
LABEL_48:
          swift_release();
          v33 = 1 << *(_BYTE *)(v1 + 32);
          if (v33 > 63)
            bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v35 = -1 << v33;
          *(_QWORD *)(v1 + 16) = 0;
          break;
        }
        v14 = v35[v13];
        ++v8;
        if (!v14)
        {
          v8 = v13 + 1;
          if (v13 + 1 >= v36)
            goto LABEL_48;
          v14 = v35[v8];
          if (!v14)
          {
            v8 = v13 + 2;
            if (v13 + 2 >= v36)
              goto LABEL_48;
            v14 = v35[v8];
            if (!v14)
            {
              v15 = v13 + 3;
              if (v15 >= v36)
                goto LABEL_48;
              v14 = v35[v15];
              if (!v14)
              {
                while (1)
                {
                  v8 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_56;
                  if (v8 >= v36)
                    goto LABEL_48;
                  v14 = v35[v8];
                  ++v15;
                  if (v14)
                    goto LABEL_22;
                }
              }
              v8 = v15;
            }
          }
        }
LABEL_22:
        v6 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v8 << 6);
      }
      v16 = *(_QWORD *)(v1 + 48) + 72 * v12;
      v17 = *(_BYTE *)v16;
      v18 = *(void **)(v16 + 8);
      v19 = *(_QWORD *)(v16 + 16);
      v20 = *(_QWORD *)(v16 + 24);
      v21 = *(_QWORD *)(v16 + 32);
      v40 = *(_OWORD *)(v16 + 56);
      v41 = *(_OWORD *)(v16 + 40);
      sub_1BC62D670();
      sub_1BC62D67C();
      v22 = v18;
      sub_1BC62CEC0();

      sub_1BC62D688();
      if (v20)
      {
        swift_bridgeObjectRetain();
        sub_1BC62C740();
        swift_bridgeObjectRelease();
      }
      v39 = v8;
      swift_bridgeObjectRetain();
      sub_1BC62C740();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v41 + 1) >> 62)
      {
        swift_bridgeObjectRetain_n();
        sub_1BC62D3B8();
        swift_bridgeObjectRelease();
        sub_1BC62D67C();
        swift_bridgeObjectRetain();
        v23 = sub_1BC62D3B8();
        result = swift_bridgeObjectRelease();
        if (!v23)
          goto LABEL_34;
      }
      else
      {
        swift_bridgeObjectRetain();
        result = sub_1BC62D67C();
        v23 = *(_QWORD *)((*((_QWORD *)&v41 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v23)
          goto LABEL_34;
      }
      if (v23 < 1)
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        return result;
      }
      if ((*((_QWORD *)&v41 + 1) & 0xC000000000000001) != 0)
      {
        for (i = 0; i != v23; ++i)
        {
          MEMORY[0x1BCCF24CC](i, *((_QWORD *)&v41 + 1));
          sub_1BC62CEC0();
          swift_unknownObjectRelease();
        }
      }
      else
      {
        v25 = 0;
        do
        {
          v26 = *(void **)(*((_QWORD *)&v41 + 1) + 8 * v25++ + 32);
          v27 = v26;
          sub_1BC62CEC0();

        }
        while (v23 != v25);
      }
LABEL_34:
      swift_bridgeObjectRelease();
      if ((unint64_t)v40 >> 62)
      {
        swift_bridgeObjectRetain_n();
        sub_1BC62D3B8();
        swift_bridgeObjectRelease();
        sub_1BC62D67C();
        swift_bridgeObjectRetain();
        v28 = sub_1BC62D3B8();
        result = swift_bridgeObjectRelease();
        if (!v28)
          goto LABEL_6;
      }
      else
      {
        swift_bridgeObjectRetain();
        result = sub_1BC62D67C();
        v28 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v28)
          goto LABEL_6;
      }
      if (v28 < 1)
        goto LABEL_54;
      if ((v40 & 0xC000000000000001) != 0)
      {
        for (j = 0; j != v28; ++j)
        {
          MEMORY[0x1BCCF24CC](j, v40);
          sub_1BC62CEC0();
          swift_unknownObjectRelease();
        }
      }
      else
      {
        v30 = 0;
        do
        {
          v31 = *(void **)(v40 + 8 * v30++ + 32);
          v32 = v31;
          sub_1BC62CEC0();

        }
        while (v28 != v30);
      }
LABEL_6:
      swift_bridgeObjectRelease();
      v1 = v37;
      v8 = v39;
      v9 = *((id *)&v40 + 1);
      sub_1BC62CEC0();

      sub_1BC62D6AC();
      result = sub_1BC62D0C4();
      *(_QWORD *)(v38 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v10 = *(_QWORD *)(v3 + 48) + 72 * result;
      *(_BYTE *)v10 = v17;
      *(_QWORD *)(v10 + 8) = v22;
      *(_QWORD *)(v10 + 16) = v19;
      *(_QWORD *)(v10 + 24) = v20;
      *(_QWORD *)(v10 + 32) = v21;
      *(_OWORD *)(v10 + 40) = v41;
      *(_OWORD *)(v10 + 56) = v40;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v34 = v3;
  return result;
}

uint64_t sub_1BC3C98B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v35 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1BC3CD7E4(0, &qword_1EF42C998, v6, &qword_1EF42C9A0, (uint64_t)&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryItem);
  v7 = sub_1BC62D19C();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = v0;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v10 = *(_QWORD *)(v5 + 56);
    v34 = (_QWORD *)(v5 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v33 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v33)
          goto LABEL_33;
        v20 = v34[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v33)
            goto LABEL_33;
          v20 = v34[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v33)
              goto LABEL_33;
            v20 = v34[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v33)
              {
LABEL_33:
                swift_release();
                v1 = v32;
                v30 = 1 << *(_BYTE *)(v5 + 32);
                if (v30 > 63)
                  bzero(v34, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v30;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v20 = v34[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v15 >= v33)
                    goto LABEL_33;
                  v20 = v34[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_23:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_QWORD *)(v35 + 72);
      sub_1BC375724(*(_QWORD *)(v5 + 48) + v22 * v18, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC62D670();
      sub_1BC62C740();
      sub_1BC62C740();
      result = sub_1BC62D6AC();
      v23 = -1 << *(_BYTE *)(v8 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      result = sub_1BC375724((uint64_t)v4, *(_QWORD *)(v8 + 48) + v16 * v22, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_1BC3C9C28(uint64_t a1)
{
  return sub_1BC3C9C70(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], &qword_1EF42C7A0, &qword_1EF42C7A8, MEMORY[0x1E0D2BF08]);
}

uint64_t sub_1BC3C9C4C(uint64_t a1)
{
  return sub_1BC3C9C70(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], &qword_1EF42CB00, &qword_1EF42CB08, MEMORY[0x1E0CB11D0]);
}

uint64_t sub_1BC3C9C70(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  unint64_t *v48;
  uint64_t v49;

  v10 = v5;
  v11 = a2(0);
  v46 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - v12;
  v14 = *v5;
  v47 = a2;
  v48 = a4;
  v49 = a5;
  sub_1BC3CD7E4(0, a3, a2, a4, a5);
  v15 = sub_1BC62D19C();
  v16 = v15;
  if (*(_QWORD *)(v14 + 16))
  {
    v17 = 1 << *(_BYTE *)(v14 + 32);
    v18 = *(_QWORD *)(v14 + 56);
    v45 = (_QWORD *)(v14 + 56);
    if (v17 < 64)
      v19 = ~(-1 << v17);
    else
      v19 = -1;
    v20 = v19 & v18;
    v43 = v5;
    v44 = (unint64_t)(v17 + 63) >> 6;
    v21 = v15 + 56;
    result = swift_retain();
    v23 = 0;
    while (1)
    {
      if (v20)
      {
        v25 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        v26 = v25 | (v23 << 6);
      }
      else
      {
        v27 = v23 + 1;
        if (__OFADD__(v23, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v27 >= v44)
          goto LABEL_33;
        v28 = v45[v27];
        ++v23;
        if (!v28)
        {
          v23 = v27 + 1;
          if (v27 + 1 >= v44)
            goto LABEL_33;
          v28 = v45[v23];
          if (!v28)
          {
            v23 = v27 + 2;
            if (v27 + 2 >= v44)
              goto LABEL_33;
            v28 = v45[v23];
            if (!v28)
            {
              v29 = v27 + 3;
              if (v29 >= v44)
              {
LABEL_33:
                swift_release();
                v10 = v43;
                v41 = 1 << *(_BYTE *)(v14 + 32);
                if (v41 > 63)
                  bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v41;
                *(_QWORD *)(v14 + 16) = 0;
                break;
              }
              v28 = v45[v29];
              if (!v28)
              {
                while (1)
                {
                  v23 = v29 + 1;
                  if (__OFADD__(v29, 1))
                    goto LABEL_39;
                  if (v23 >= v44)
                    goto LABEL_33;
                  v28 = v45[v23];
                  ++v29;
                  if (v28)
                    goto LABEL_23;
                }
              }
              v23 = v29;
            }
          }
        }
LABEL_23:
        v20 = (v28 - 1) & v28;
        v26 = __clz(__rbit64(v28)) + (v23 << 6);
      }
      v30 = v14;
      v31 = *(_QWORD *)(v14 + 48);
      v32 = *(_QWORD *)(v46 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 32);
      v33(v13, v31 + v32 * v26, v11);
      sub_1BC347F0C(v48, v47, v49);
      result = sub_1BC62C5C0();
      v34 = -1 << *(_BYTE *)(v16 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6))) != 0)
      {
        v24 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v21 + 8 * v36);
        }
        while (v40 == -1);
        v24 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v33)(*(_QWORD *)(v16 + 48) + v24 * v32, v13, v11);
      ++*(_QWORD *)(v16 + 16);
      v14 = v30;
    }
  }
  result = swift_release();
  *v10 = v16;
  return result;
}

uint64_t sub_1BC3C9FEC(uint64_t a1)
{
  return sub_1BC3CA964(a1, (void (*)(_QWORD))sub_1BC3CBF60);
}

uint64_t sub_1BC3C9FF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  sub_1BC3CCF68(0, &qword_1EF42C818);
  result = sub_1BC62D19C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_1BC62D664();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC3CA28C(uint64_t a1)
{
  return sub_1BC3CA964(a1, (void (*)(_QWORD))sub_1BC3CD674);
}

uint64_t sub_1BC3CA298(uint64_t a1)
{
  return sub_1BC3CA964(a1, (void (*)(_QWORD))sub_1BC3CD59C);
}

uint64_t sub_1BC3CA2A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v1 = v0;
  v2 = *v0;
  sub_1BC3CD7E4(0, &qword_1EF42CAB8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription, &qword_1ED6A51D0, (uint64_t)&protocol conformance descriptor for CategoryRecordQueryDescription);
  v3 = sub_1BC62D19C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v29 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v29;
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v28;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_1BC62D670();
      BrowseCategory.rawValue.getter();
      sub_1BC62C740();
      swift_bridgeObjectRelease();
      v20 = *(id *)(v19 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
      sub_1BC62CEC0();

      result = sub_1BC62D6AC();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC3CA5C4(uint64_t a1)
{
  return sub_1BC3CA964(a1, (void (*)(_QWORD))sub_1BC3CBED0);
}

uint64_t sub_1BC3CA5D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for BrowseCategory();
  v35 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1BC3CD7E4(0, &qword_1EF42CAB0, v6, &qword_1ED6A5438, (uint64_t)&protocol conformance descriptor for BrowseCategory);
  v7 = sub_1BC62D19C();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = v0;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v10 = *(_QWORD *)(v5 + 56);
    v34 = (_QWORD *)(v5 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v33 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v33)
          goto LABEL_33;
        v20 = v34[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v33)
            goto LABEL_33;
          v20 = v34[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v33)
              goto LABEL_33;
            v20 = v34[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v33)
              {
LABEL_33:
                swift_release();
                v1 = v32;
                v30 = 1 << *(_BYTE *)(v5 + 32);
                if (v30 > 63)
                  bzero(v34, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v30;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v20 = v34[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v15 >= v33)
                    goto LABEL_33;
                  v20 = v34[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_23:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_QWORD *)(v35 + 72);
      sub_1BC375724(*(_QWORD *)(v5 + 48) + v22 * v18, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      sub_1BC62D670();
      BrowseCategory.rawValue.getter();
      sub_1BC62C740();
      swift_bridgeObjectRelease();
      result = sub_1BC62D6AC();
      v23 = -1 << *(_BYTE *)(v8 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      result = sub_1BC375724((uint64_t)v4, *(_QWORD *)(v8 + 48) + v16 * v22, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_1BC3CA958(uint64_t a1)
{
  return sub_1BC3CA964(a1, (void (*)(_QWORD))sub_1BC3CD380);
}

uint64_t sub_1BC3CA964(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  a2(0);
  v5 = sub_1BC62D19C();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_1BC62CEA8();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1BC3CABFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD *v26;
  int64_t v27;

  v1 = v0;
  v2 = type metadata accessor for UserDomainConceptViewData();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_1BC3CD7E4(0, &qword_1EF42CAA0, v7, &qword_1EF42CAA8, (uint64_t)&protocol conformance descriptor for UserDomainConceptViewData);
  v8 = sub_1BC62D19C();
  v9 = v8;
  if (*(_QWORD *)(v6 + 16))
  {
    v10 = 1 << *(_BYTE *)(v6 + 32);
    v11 = *(_QWORD *)(v6 + 56);
    v25 = v0;
    v26 = (_QWORD *)(v6 + 56);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v27 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 56;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v21 >= v27)
          goto LABEL_23;
        v22 = v26[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v27)
            goto LABEL_23;
          v22 = v26[v16];
          if (!v22)
          {
            v16 = v21 + 2;
            if (v21 + 2 >= v27)
              goto LABEL_23;
            v22 = v26[v16];
            if (!v22)
            {
              v23 = v21 + 3;
              if (v23 >= v27)
              {
LABEL_23:
                swift_release();
                v24 = 1 << *(_BYTE *)(v6 + 32);
                if (v24 > 63)
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v24;
                v1 = v25;
                *(_QWORD *)(v6 + 16) = 0;
                break;
              }
              v22 = v26[v23];
              if (!v22)
              {
                while (1)
                {
                  v16 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_29;
                  if (v16 >= v27)
                    goto LABEL_23;
                  v22 = v26[v16];
                  ++v23;
                  if (v22)
                    goto LABEL_22;
                }
              }
              v16 = v23;
            }
          }
        }
LABEL_22:
        v13 = (v22 - 1) & v22;
        v18 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v19 = *(_QWORD *)(v3 + 72);
      sub_1BC375724(*(_QWORD *)(v6 + 48) + v19 * v18, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      sub_1BC62D670();
      UserDomainConceptViewData.hash(into:)();
      sub_1BC62D6AC();
      v20 = sub_1BC62D0C4();
      *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      result = sub_1BC375724((uint64_t)v5, *(_QWORD *)(v9 + 48) + v20 * v19, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
  *v1 = v9;
  return result;
}

uint64_t sub_1BC3CAEEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1BC3CCF68(0, &qword_1EF42CA20);
  v3 = sub_1BC62D19C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1BC62D670();
      sub_1BC62C740();
      result = sub_1BC62D6AC();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC3CB1DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_1BC3CCEAC(0, &qword_1EF42CA08, (void (*)(void))sub_1BC35DFC0);
  result = sub_1BC62D19C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_1BC62D670();
      sub_1BC62D67C();
      result = sub_1BC62D6AC();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_1BC3CB49C(uint64_t a1, uint64_t a2)
{
  id v4;
  unint64_t result;

  sub_1BC62D670();
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v4 = *(id *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  sub_1BC62CEC0();

  sub_1BC62D6AC();
  result = sub_1BC62D0C4();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1BC3CB588(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1BC62CEA8();
  result = sub_1BC62D0C4();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1BC3CB608(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_1BC3CB764((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v6 = sub_1BC3CB764((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x1BCCF36A8](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_1BC3CB764(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  int64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v23 = (unint64_t *)result;
  v4 = 0;
  v5 = 0;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v26 = (unint64_t)(v6 + 63) >> 6;
LABEL_4:
  v24 = v4;
  while (v8)
  {
    v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v10 = v9 | (v5 << 6);
LABEL_19:
    v14 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v10);
    v15 = objc_msgSend(v14, sel_identifier);
    v16 = sub_1BC62C680();
    v18 = v17;

    if (v16 == sub_1BC62C680() && v18 == v19)
    {

      result = swift_bridgeObjectRelease_n();
    }
    else
    {
      v21 = sub_1BC62D574();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        *(unint64_t *)((char *)v23 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v4 = v24 + 1;
        if (!__OFADD__(v24, 1))
          goto LABEL_4;
        __break(1u);
LABEL_32:
        swift_retain();
        return sub_1BC3FCD80(v23, a2, v24, a3);
      }
    }
  }
  if (__OFADD__(v5++, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v5 >= v26)
    goto LABEL_32;
  v12 = *(_QWORD *)(v25 + 8 * v5);
  if (v12)
  {
LABEL_18:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v5 << 6);
    goto LABEL_19;
  }
  v13 = v5 + 1;
  if (v5 + 1 >= v26)
    goto LABEL_32;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v5 + 2;
  if (v5 + 2 >= v26)
    goto LABEL_32;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v5 + 3;
  if (v5 + 3 >= v26)
    goto LABEL_32;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
  {
LABEL_17:
    v5 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v5 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v5 >= v26)
      goto LABEL_32;
    v12 = *(_QWORD *)(v25 + 8 * v5);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_1BC3CB9BC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  sub_1BC3BCAE0(a1, a2, a3, a4, *(void (**)(void *, uint64_t))(v4 + 16));
}

uint64_t sub_1BC3CB9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void (*v19)(_BYTE *, _QWORD);
  unint64_t v20;
  _BYTE v21[32];
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;

  v20 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = sub_1BC62D118();
    result = MEMORY[0x1E0DEE9D8];
    if (!v4)
      return result;
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    v22 = sub_1BC62D0D0();
    v23 = v6;
    v24 = 1;
    if ((v4 & 0x8000000000000000) == 0)
      goto LABEL_9;
    __break(1u);
  }
  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    v22 = sub_1BC582634(a1);
    v23 = v7;
    v24 = v8 & 1;
    while (1)
    {
LABEL_9:
      while (1)
      {
        v14 = v22;
        v15 = v23;
        v16 = v24;
        sub_1BC5823AC(v22, v23, v24, a1);
        v18 = v17;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A88]), sel_initWithSampleType_predicate_, v17, a2);

        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        result = sub_1BC62D274();
        if (v20)
          break;
        v9 = sub_1BC5822C4(v14, v15, v16, a1);
        v11 = v10;
        v13 = v12;
        sub_1BC3583DC(v14, v15, v16);
        v22 = v9;
        v23 = v11;
        v24 = v13 & 1;
        if (!--v4)
          goto LABEL_14;
      }
      if ((v16 & 1) == 0)
        break;
      if (sub_1BC62D0E8())
        swift_isUniquelyReferenced_nonNull_native();
      sub_1BC3CD748();
      v19 = (void (*)(_BYTE *, _QWORD))sub_1BC62CA04();
      sub_1BC62D160();
      v19(v21, 0);
      if (!--v4)
      {
LABEL_14:
        sub_1BC3583DC(v22, v23, v24);
        return v25;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_1BC3CBBF8(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  sub_1BC3BD19C(a1, a2, a3, a4, *(void (**)(void *, uint64_t))(v4 + 16));
}

void sub_1BC3CBC00(void *a1, char a2)
{
  uint64_t v2;

  sub_1BC3BD2DC(a1, a2 & 1, *(void (**)(uint64_t, id))(v2 + 16));
}

unint64_t sub_1BC3CBC10()
{
  unint64_t result;

  result = qword_1EF42C790;
  if (!qword_1EF42C790)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for RecordLookupError, &type metadata for RecordLookupError);
    atomic_store(result, (unint64_t *)&qword_1EF42C790);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RecordLookupError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC3CBC94 + 4 * byte_1BC63C280[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC3CBCB4 + 4 * byte_1BC63C285[v4]))();
}

_BYTE *sub_1BC3CBC94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC3CBCB4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC3CBCBC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC3CBCC4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC3CBCCC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC3CBCD4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RecordLookupError()
{
  return &type metadata for RecordLookupError;
}

void sub_1BC3CBCF0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4, MEMORY[0x1E0DEAEC8]);
    v6 = sub_1BC62D40C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC3CBD60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BC62D40C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC3CBDD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429700)
  {
    sub_1BC34B6A0(255, &qword_1ED6A52D8);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429700);
  }
}

void sub_1BC3CBE38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4E20)
  {
    sub_1BC34B6A0(255, &qword_1ED6A48A0);
    sub_1BC35E2D8((unint64_t *)&qword_1ED6A4920, &qword_1ED6A48A0);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4E20);
  }
}

void sub_1BC3CBED0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4928)
  {
    sub_1BC34B6A0(255, &qword_1ED6A48A0);
    sub_1BC35E2D8((unint64_t *)&qword_1ED6A4920, &qword_1ED6A48A0);
    v0 = sub_1BC62D1C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4928);
  }
}

void sub_1BC3CBF60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C7B0)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1EF431480);
    sub_1BC35E2D8(&qword_1EF42C7B8, (unint64_t *)&qword_1EF431480);
    v0 = sub_1BC62D1C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C7B0);
  }
}

void sub_1BC3CBFF0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42C7D0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42C7D0);
  }
}

void sub_1BC3CC054()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C7E0)
  {
    sub_1BC36F18C(255, &qword_1EF42C7E8);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C7E0);
  }
}

void sub_1BC3CC0C0()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF42C7F8)
  {
    sub_1BC34B508(255, &qword_1EF42C800, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC3B9914(255, &qword_1EF42C808);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF42C7F8);
  }
}

void sub_1BC3CC160()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C810)
  {
    sub_1BC34B508(255, &qword_1EF42C800, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C810);
  }
}

void sub_1BC3CC1CC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC34B508(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BC3CC23C(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BC3CC1CC(255, a3, a4, a5);
    v6 = sub_1BC62D538();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC3CC294(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC62D40C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC3CC2F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C8A8)
  {
    sub_1BC36F18C(255, (unint64_t *)&qword_1EF429B28);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C8A8);
  }
}

void sub_1BC3CC360()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C8B8)
  {
    sub_1BC36F18C(255, &qword_1EF429B38);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C8B8);
  }
}

uint64_t sub_1BC3CC3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC34B508(0, &qword_1EF42C8C0, (uint64_t)&_s22FormattedRecordKeyDateVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC3CC428(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BC3CC450()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C8C8)
  {
    sub_1BC3CC7F4(255, &qword_1EF42C8D0);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C8C8);
  }
}

void sub_1BC3CC4B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C8E0)
  {
    sub_1BC36F18C(255, &qword_1EF429B60);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C8E0);
  }
}

void sub_1BC3CC520()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C8E8)
  {
    sub_1BC3CC7F4(255, &qword_1EF42C8F0);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C8E8);
  }
}

void sub_1BC3CC584()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C900)
  {
    sub_1BC36F18C(255, &qword_1EF429B80);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C900);
  }
}

void sub_1BC3CC5F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C908)
  {
    sub_1BC3CC7F4(255, &qword_1EF42C910);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C908);
  }
}

void sub_1BC3CC654()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C920)
  {
    sub_1BC36F18C(255, &qword_1EF429BA8);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C920);
  }
}

void sub_1BC3CC6C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C928)
  {
    sub_1BC3CC7F4(255, &qword_1EF42C930);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C928);
  }
}

void sub_1BC3CC724()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C940)
  {
    sub_1BC36F18C(255, &qword_1EF429BE0);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C940);
  }
}

void sub_1BC3CC790()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C948)
  {
    sub_1BC3CC7F4(255, &qword_1EF42C950);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C948);
  }
}

void sub_1BC3CC7F4(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v4)
      atomic_store(TupleTypeMetadata, a2);
  }
}

