void sub_1BC3CC864(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC3B9914(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC3CC8C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C978)
  {
    sub_1BC357158(255, &qword_1EF42BAD8, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC3CC948();
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C978);
  }
}

unint64_t sub_1BC3CC948()
{
  unint64_t result;

  result = qword_1EF42C980;
  if (!qword_1EF42C980)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63FA30, &type metadata for RecentSection);
    atomic_store(result, (unint64_t *)&qword_1EF42C980);
  }
  return result;
}

void sub_1BC3CC98C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42C990)
  {
    sub_1BC357158(255, &qword_1EF42BAD8, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42C990);
  }
}

uint64_t sub_1BC3CCA0C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1BC3CCA30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC3BD484(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1BC3CCA38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4980)
  {
    sub_1BC34B6A0(255, &qword_1ED6A5900);
    sub_1BC35E2D8(&qword_1ED6A5908, &qword_1ED6A5900);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4980);
  }
}

void sub_1BC3CCAD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A59A8)
  {
    sub_1BC34B6A0(255, &qword_1ED6A5900);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A5998);
    sub_1BC35E2D8(&qword_1ED6A5908, &qword_1ED6A5900);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A59A8);
  }
}

void sub_1BC3CCB88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C9B0)
  {
    sub_1BC357158(255, &qword_1ED6A52B8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordKind, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35DFC0();
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C9B0);
  }
}

void sub_1BC3CCC08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C9C8)
  {
    sub_1BC3CC864(255, (unint64_t *)&qword_1EF42C9D0, (unint64_t *)&qword_1EF42C600, (uint64_t)&protocol descriptor for LocalizedEducationSection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C9C8);
  }
}

void sub_1BC3CCC8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C9D8)
  {
    sub_1BC34B6A0(255, &qword_1EF429570);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C9D8);
  }
}

void sub_1BC3CCCF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C9E0)
  {
    sub_1BC34B508(255, (unint64_t *)&qword_1EF4290E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C9E0);
  }
}

void sub_1BC3CCD5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C9E8)
  {
    sub_1BC34B6A0(255, &qword_1EF429110);
    sub_1BC35E2D8(&qword_1EF42C9F0, &qword_1EF429110);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C9E8);
  }
}

void sub_1BC3CCDF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C9F8)
  {
    sub_1BC34B6A0(255, &qword_1EF429110);
    sub_1BC34B6A0(255, &qword_1EF42CA00);
    sub_1BC35E2D8(&qword_1EF42C9F0, &qword_1EF429110);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C9F8);
  }
}

void sub_1BC3CCEAC(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1BC62D1C0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC3CCF04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC35EAA4(0, (unint64_t *)&qword_1ED6A4278, (unint64_t *)&qword_1ED6A47F8, 0x1E0DC3870, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC3CCF68(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC62D1C0();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1BC3CCFB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42CA28)
  {
    sub_1BC34B508(255, (unint64_t *)&qword_1ED6A52C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42CA28);
  }
}

void sub_1BC3CD01C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    type metadata accessor for BrowseCategory();
    a3(255);
    sub_1BC347F0C(&qword_1ED6A5438, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t)&protocol conformance descriptor for BrowseCategory);
    v5 = sub_1BC62D40C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC3CD0B4()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF42CA40)
  {
    sub_1BC62A760();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BC34B6A0(255, &qword_1EF42CA48);
    sub_1BC347F0C(&qword_1EF4288B8, v0, MEMORY[0x1E0CB08A8]);
    v1 = sub_1BC62D40C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF42CA40);
  }
}

void sub_1BC3CD158()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42CA50)
  {
    type metadata accessor for HKTimeScope(255);
    sub_1BC3CD1EC();
    sub_1BC347F0C(&qword_1EF42CA60, (uint64_t (*)(uint64_t))type metadata accessor for HKTimeScope, (uint64_t)&unk_1BC637D04);
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42CA50);
  }
}

void sub_1BC3CD1EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42CA58)
  {
    sub_1BC34B6A0(255, &qword_1EF42CA48);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42CA58);
  }
}

void sub_1BC3CD250()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42CA78)
  {
    type metadata accessor for BrowseCategory();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42CA78);
  }
}

void sub_1BC3CD2B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A3608)
  {
    sub_1BC3CD31C();
    v0 = sub_1BC62BE94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A3608);
  }
}

void sub_1BC3CD31C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A36D0)
  {
    sub_1BC34B6A0(255, &qword_1ED6A36C8);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A36D0);
  }
}

void sub_1BC3CD380()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42CA80)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A5990);
    sub_1BC35E2D8((unint64_t *)&qword_1ED6A52F0, (unint64_t *)&qword_1ED6A5990);
    v0 = sub_1BC62D1C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42CA80);
  }
}

void sub_1BC3CD410()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42CA88)
  {
    sub_1BC357158(255, &qword_1EF42CA90, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC3CD490();
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42CA88);
  }
}

unint64_t sub_1BC3CD490()
{
  unint64_t result;

  result = qword_1EF42CA98;
  if (!qword_1EF42CA98)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC643F6C, &type metadata for LabsListViewDataProvider.ItemState);
    atomic_store(result, (unint64_t *)&qword_1EF42CA98);
  }
  return result;
}

void sub_1BC3CD4D4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6A4EC0)
  {
    type metadata accessor for BrowseCategory();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6A4EC0);
  }
}

void sub_1BC3CD538()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A3220)
  {
    sub_1BC34B6A0(255, &qword_1ED6A48A0);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A3220);
  }
}

void sub_1BC3CD59C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42CAC8)
  {
    sub_1BC34B6A0(255, &qword_1EF42CAD0);
    sub_1BC35E2D8(&qword_1EF42CAD8, &qword_1EF42CAD0);
    v0 = sub_1BC62D1C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42CAC8);
  }
}

uint64_t sub_1BC3CD62C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

void sub_1BC3CD668(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void sub_1BC3CD674()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A3F60)
  {
    sub_1BC34B6A0(255, &qword_1ED6A58D8);
    sub_1BC35E2D8((unint64_t *)&qword_1ED6A58E0, &qword_1ED6A58D8);
    v0 = sub_1BC62D1C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A3F60);
  }
}

unint64_t sub_1BC3CD704()
{
  unint64_t result;

  result = qword_1EF42CAE8;
  if (!qword_1EF42CAE8)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for RecordLookupError, &type metadata for RecordLookupError);
    atomic_store(result, (unint64_t *)&qword_1EF42CAE8);
  }
  return result;
}

void sub_1BC3CD748()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42CAF0)
  {
    sub_1BC34B6A0(255, &qword_1ED6A58D8);
    sub_1BC35E2D8((unint64_t *)&qword_1ED6A58E0, &qword_1ED6A58D8);
    v0 = sub_1BC62CA10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42CAF0);
  }
}

void sub_1BC3CD7D8(id a1)
{

}

void sub_1BC3CD7E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BC347F0C(a4, a3, a5);
    v9 = sub_1BC62D1C0();
    if (!v10)
      atomic_store(v9, a2);
  }
}

id sub_1BC3CD888()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setBackgroundColor_, 0);
  objc_msgSend(v0, sel_setOpaque_, 0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTextAlignment_, 1);
  objc_msgSend(v0, sel_setLineBreakMode_, 0);
  v2 = objc_msgSend((id)objc_opt_self(), sel_boldSystemFontOfSize_, 24.0);
  objc_msgSend(v0, sel_setFont_, v2);

  return v0;
}

char *sub_1BC3CD9A0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char *v14;
  char *v15;
  void *v16;
  id v17;
  objc_super v19;

  v5 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3438]);
  v7 = v2;
  v8 = objc_msgSend(v6, sel_initWithActivityIndicatorStyle_, 101);
  v9 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v8, sel_setColor_, v9);

  *(_QWORD *)&v2[v5] = v8;
  v10 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel;
  *(_QWORD *)&v7[v10] = sub_1BC3CD888();
  v11 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_backgroundEffect;
  v12 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 20);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v12);

  *(_QWORD *)&v7[v11] = v13;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_fontSize] = 0x4038000000000000;
  v14 = &v7[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_text];
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = a2;

  swift_bridgeObjectRelease();
  v19.receiver = v7;
  v19.super_class = (Class)type metadata accessor for ProgressHUD();
  v15 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, sel_setOpaque_, 0);
  objc_msgSend(v15, sel_setNeedsDisplayOnBoundsChange_, 1);
  v16 = *(void **)&v15[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_backgroundEffect];
  objc_msgSend(v16, sel_setAutoresizingMask_, 18);
  objc_msgSend(v15, sel_bounds);
  objc_msgSend(v16, sel_setFrame_);
  objc_msgSend(v15, sel_addSubview_, v16);
  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator]);
  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel]);
  v17 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC62CDF4();

  return v15;
}

id sub_1BC3CDC10()
{
  char *v0;
  id result;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t inited;
  void *v20;
  id v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  void *v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  double v49;
  double v50;
  double v51;
  CGFloat v52;
  double v53;
  double v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;

  result = objc_msgSend(v0, sel_superview);
  if (!result)
    return result;
  v2 = result;
  objc_msgSend(result, sel_bounds);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  objc_msgSend((id)objc_opt_self(), sel_defaultSizeForStyle_, 101);
  v55.origin.x = v4;
  v55.origin.y = v6;
  v55.size.width = v8;
  v55.size.height = v10;
  v56 = CGRectInset(v55, 20.0, 20.0);
  x = v56.origin.x;
  y = v56.origin.y;
  width = v56.size.width;
  height = v56.size.height;
  objc_msgSend(v0, sel_frame);
  v54 = 0.0;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_text + 8])
    goto LABEL_7;
  v15 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel];
  swift_bridgeObjectRetain();
  v16 = objc_msgSend(v15, sel_font);
  if (!v16)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v53 = 0.0;
    goto LABEL_8;
  }
  v17 = v16;
  v18 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  sub_1BC34B54C();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC639590;
  v20 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 64) = sub_1BC3CE1CC();
  *(_QWORD *)(inited + 40) = v17;
  v21 = v20;
  v22 = v17;
  sub_1BC35B6B4(inited);
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v23 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_sizeWithAttributes_, v23);
  v25 = v24;
  v54 = v26;

  v57.origin.x = x;
  v57.origin.y = y;
  v57.size.width = width;
  v57.size.height = height;
  v53 = v25;
  CGRectGetWidth(v57);
  v58.origin.x = x;
  v58.origin.y = y;
  v58.size.width = width;
  v58.size.height = height;
  CGRectGetHeight(v58);

LABEL_8:
  UIRectCenteredIntegralRect();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  objc_msgSend(v0, sel_setFrame_);
  v35 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator];
  objc_msgSend(v35, sel_frame);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v52 = v28;
  v59.origin.x = v28;
  v59.origin.y = v30;
  v59.size.width = v32;
  v59.size.height = v34;
  v44 = CGRectGetWidth(v59);
  v60.origin.x = v37;
  v60.origin.y = v39;
  v60.size.width = v41;
  v60.size.height = v43;
  v45 = CGRectGetWidth(v60);
  v46 = CGRound((v44 - v45) * 0.5);
  objc_msgSend(v35, sel_setFrame_, v46, 26.0, v41, v43);
  if (v53 == 0.0 && v54 == 0.0)
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel], sel_setFrame_, 0.0, 0.0, 0.0, 0.0);
  v61.origin.x = v52;
  v61.origin.y = v30;
  v61.size.width = v32;
  v61.size.height = v34;
  v47 = CGRectGetWidth(v61);
  v51 = CGRound((v47 - v53) * 0.5);
  v62.origin.y = 26.0;
  v62.origin.x = v46;
  v62.size.width = v41;
  v62.size.height = v43;
  v48 = CGRectGetHeight(v62);
  v63.origin.x = v52;
  v63.origin.y = v30;
  v63.size.width = v32;
  v63.size.height = v34;
  v49 = CGRectGetWidth(v63) + -20.0;
  if (v49 >= v53)
    v50 = v53;
  else
    v50 = v49;
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel], sel_setFrame_, v51, v48 + 26.0 + 8.0, v50, v54);
}

id sub_1BC3CE118()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressHUD();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ProgressHUD()
{
  return objc_opt_self();
}

double CGRound(double a1)
{
  return round(a1);
}

unint64_t sub_1BC3CE1CC()
{
  unint64_t result;

  result = qword_1EF435B40;
  if (!qword_1EF435B40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF435B40);
  }
  return result;
}

void sub_1BC3CE208()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  char *v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 101);
  v3 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v2, sel_setColor_, v3);

  *(_QWORD *)&v0[v1] = v2;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel;
  *(_QWORD *)&v0[v4] = sub_1BC3CD888();
  v5 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_backgroundEffect;
  v6 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 20);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v6);

  *(_QWORD *)&v0[v5] = v7;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_fontSize] = 0x4038000000000000;
  v8 = &v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_text];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;

  sub_1BC62D394();
  __break(1u);
}

id ConditionRecordFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store);
}

uint64_t ConditionRecordFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context);
}

id ConditionRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id ConditionRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ConditionRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ConditionRecordFormatter()
{
  return objc_opt_self();
}

unint64_t sub_1BC3CE448(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC3CE6C4(a1);
  if (!v2)
    return sub_1BC3CE4A8(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC3CE4A8(void *a1)
{
  uint64_t v1;
  uint64_t inited;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t i;
  void *v17;
  id v18;
  uint64_t v20;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B398, (uint64_t (*)(uint64_t))sub_1BC39CBC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC63C410;
  *(_QWORD *)(inited + 32) = sub_1BC441744(a1);
  *(_QWORD *)(inited + 40) = sub_1BC441954(a1);
  sub_1BC39CBE4();
  v4 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store);
  v5 = a1;
  v6 = sub_1BC506E3C(v5);

  v7 = Array<A>.newlineJoined.getter(v6);
  v9 = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = sub_1BC4A8EA8(v7, v9);
  *(_QWORD *)(inited + 56) = sub_1BC3CEC04(v5);
  *(_QWORD *)(inited + 64) = sub_1BC3CEDE4(v5);
  *(_QWORD *)(inited + 72) = sub_1BC3CEF40(v5);
  *(_QWORD *)(inited + 80) = sub_1BC3CF340(v5);
  v10 = v5;
  v11 = v4;
  v12 = sub_1BC50701C(v10);

  v13 = Array<A>.newlineJoined.getter(v12);
  v15 = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 88) = sub_1BC4A907C(v13, v15);
  *(_QWORD *)(inited + 96) = sub_1BC52CE74(v10);
  *(_QWORD *)(inited + 104) = sub_1BC546064(v10);
  sub_1BC62C890();
  v20 = MEMORY[0x1E0DEE9D8];
  for (i = 32; i != 112; i += 8)
  {
    v17 = *(void **)(inited + i);
    if (v17)
    {
      v18 = v17;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }
  }
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t sub_1BC3CE6C4(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  id v13;
  unint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v3 = sub_1BC3CEC04(a1);
  sub_1BC39CBE4();
  v4 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store);
  v5 = a1;
  v6 = v4;
  v7 = sub_1BC50701C(v5);

  v8 = Array<A>.newlineJoined.getter(v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = sub_1BC4A907C(v8, v10);
  v22 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v12 = v3;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v11)
  {
    v13 = v11;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v14 = v22;

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v20 >= 2)
      goto LABEL_15;
  }
  else if (*(uint64_t *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
    goto LABEL_15;
  }
  v15 = (void *)sub_1BC546064(v5);
  if (v15)
  {
    v16 = v15;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    v14 = v22;
  }
LABEL_15:
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v21 > 1)
      return v14;
  }
  else if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    return v14;
  }
  v17 = (void *)sub_1BC52CE74(v5);
  if (v17)
  {
    v18 = v17;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    return v22;
  }
  return v14;
}

id ConditionRecordFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ConditionRecordFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConditionRecordFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConditionRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC3CEA68()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store);
}

uint64_t sub_1BC3CEA7C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context);
}

id sub_1BC3CEA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for ConditionRecordFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

unint64_t sub_1BC3CEB00(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t result;

  v2 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC3CE6C4(a1);
  if (!v2)
    return sub_1BC3CE4A8(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

unint64_t sub_1BC3CEB6C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC3CEB90();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC3CEB90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42CBB0;
  if (!qword_1EF42CBB0)
  {
    v1 = type metadata accessor for ConditionRecordFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42CBB0);
  }
  return result;
}

uint64_t method lookup function for ConditionRecordFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConditionRecordFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ConditionRecordFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

id sub_1BC3CEC04(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v1 = a1;
  v2 = sub_1BC506DF0(v1);
  v4 = v3;

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v7 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1BC3CEDE4(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC39CBE4();
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_recordedDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1BC3CEF40(void *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v31[4];
  _QWORD v32[4];
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t *v38;
  unint64_t v39;

  v2 = objc_msgSend(a1, sel_onset);
  if (!v2)
    return 0;
  v3 = v2;
  if (objc_msgSend(v2, sel_valueType) == (id)3)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v4 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v5 = sub_1BC62A4A8();
    v7 = v6;
    swift_bridgeObjectRelease();

    v8 = objc_msgSend(v3, sel_medicalDateIntervalValue);
    v39 = sub_1BC39CBE4();
    v37 = objc_msgSend(v8, sel_startDate);
    v9 = objc_msgSend(v8, sel_endDate);
    v38 = &v36;
    v10 = MEMORY[0x1E0C80A78](v9);
    v34 = v5;
    v35 = v7;
    v11 = MEMORY[0x1E0C80A78](v10);
    v32[2] = v5;
    v32[3] = v7;
    MEMORY[0x1E0C80A78](v11);
    v31[2] = v5;
    v31[3] = v7;
    v12 = objc_msgSend(a1, sel_meaningfulDateTitle);
    v13 = sub_1BC62C680();
    v15 = v14;

    v16 = sub_1BC4AA920(v37, v9, sub_1BC3AF328, (uint64_t)&v33, sub_1BC3CF6AC, (uint64_t)v32, (void (*)(id))sub_1BC3CF6AC, (uint64_t)v31, v13, v15);
    swift_bridgeObjectRelease();

  }
  else
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v17 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v34 = 0xE000000000000000;
    v18 = sub_1BC62A4A8();
    v20 = v19;
    swift_bridgeObjectRelease();

    v21 = objc_msgSend(a1, sel_meaningfulDateTitle);
    v22 = sub_1BC62C680();
    v24 = v23;

    if (v18 == v22 && v20 == v24)
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    else
    {
      v25 = sub_1BC62D574();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {

        swift_bridgeObjectRelease();
        return 0;
      }
      else
      {
        sub_1BC39CBE4();
        swift_bridgeObjectRetain();
        v26 = objc_msgSend(v3, sel_displayString);
        v27 = sub_1BC62C680();
        v29 = v28;

        v16 = sub_1BC4AB450(v27, v29);
        swift_bridgeObjectRelease_n();
      }
    }
  }
  return v16;
}

id sub_1BC3CF340(void *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v27[4];
  _QWORD v28[4];
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t *v34;
  unint64_t v35;

  v2 = objc_msgSend(a1, sel_abatement);
  if (!v2)
    return 0;
  v3 = v2;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v30 = 0xE000000000000000;
  v5 = sub_1BC62A4A8();
  v7 = v6;
  swift_bridgeObjectRelease();

  if (objc_msgSend(v3, sel_valueType) == (id)3)
  {
    v8 = objc_msgSend(v3, sel_medicalDateIntervalValue);
    v35 = sub_1BC39CBE4();
    v33 = objc_msgSend(v8, sel_startDate);
    v9 = objc_msgSend(v8, sel_endDate);
    v34 = &v32;
    v10 = MEMORY[0x1E0C80A78](v9);
    v30 = v5;
    v31 = v7;
    v11 = MEMORY[0x1E0C80A78](v10);
    v28[2] = v5;
    v28[3] = v7;
    MEMORY[0x1E0C80A78](v11);
    v27[2] = v5;
    v27[3] = v7;
    v12 = objc_msgSend(a1, sel_meaningfulDateTitle);
    v13 = sub_1BC62C680();
    v15 = v14;

    v16 = sub_1BC4AA920(v33, v9, sub_1BC3CF6AC, (uint64_t)&v29, sub_1BC3CF6AC, (uint64_t)v28, (void (*)(id))sub_1BC3CF6AC, (uint64_t)v27, v13, v15);
    swift_bridgeObjectRelease();

  }
  else
  {
    v17 = objc_msgSend(a1, sel_meaningfulDateTitle);
    v18 = sub_1BC62C680();
    v20 = v19;

    if (v5 == v18 && v7 == v20)
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    else
    {
      v21 = sub_1BC62D574();
      swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
      {

        swift_bridgeObjectRelease();
        return 0;
      }
      else
      {
        sub_1BC39CBE4();
        swift_bridgeObjectRetain();
        v22 = objc_msgSend(v3, sel_displayString);
        v23 = sub_1BC62C680();
        v25 = v24;

        v16 = sub_1BC4AB450(v23, v25);
        swift_bridgeObjectRelease_n();
      }
    }
  }
  return v16;
}

void sub_1BC3CF6B0()
{
  qword_1EF42CBE0 = 0x4028000000000000;
}

uint64_t sub_1BC3CF744()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___HRTimelineHeaderView_delegate;
  swift_beginAccess();
  return MEMORY[0x1BCCF37A4](v1);
}

uint64_t sub_1BC3CF7DC()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1BC3CF834(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRTimelineHeaderView_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCF37A4](v5);
  return sub_1BC3CF8A4;
}

void sub_1BC3CF8A4(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1BC3CF954()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden);
  swift_beginAccess();
  return *v1;
}

void sub_1BC3CFA14(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  id v4;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden);
  swift_beginAccess();
  *v3 = a1;
  v4 = sub_1BC3CFE94();
  objc_msgSend(v4, sel_setHidden_, *v3);

}

void sub_1BC3CFA80(unsigned __int8 *a1, _QWORD *a2)
{
  unsigned __int8 v2;
  unsigned __int8 *v3;
  id v4;

  v2 = *a1;
  v3 = (unsigned __int8 *)(*a2 + OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden);
  swift_beginAccess();
  *v3 = v2;
  v4 = sub_1BC3CFE94();
  objc_msgSend(v4, sel_setHidden_, *v3);

}

void (*sub_1BC3CFAF0(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC3CFB48;
}

void sub_1BC3CFB48(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = v3[4];
    v6 = sub_1BC3CFE94();
    objc_msgSend(v6, sel_setHidden_, *(unsigned __int8 *)(v4 + v5));

  }
  free(v3);
}

id sub_1BC3CFBA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR___HRTimelineHeaderView____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___titleLabel);
LABEL_5:
    v8 = v2;
    return v3;
  }
  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E0DC4B58], 1024, *MEMORY[0x1E0DC48F0]);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v3, sel_setFont_, v5);
    objc_msgSend(v3, sel_setNumberOfLines_, 1);
    objc_msgSend(v3, sel_setTextColor_, v6);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_1BC3CFCC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR___HRTimelineHeaderView____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___subtitleLabel);
LABEL_5:
    v8 = v2;
    return v3;
  }
  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E0DC4AB8], 1024, *MEMORY[0x1E0DC48F0]);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v3, sel_setFont_, v5);
    objc_msgSend(v3, sel_setNumberOfLines_, 0);
    objc_msgSend(v3, sel_setTextColor_, v6);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_1BC3CFDE8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR___HRTimelineHeaderView____lazy_storage___backgroundEffectView;
  v2 = *(void **)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___backgroundEffectView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___backgroundEffectView);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 10);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v4);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC3CFE94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR___HRTimelineHeaderView____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___separatorView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    v5 = objc_msgSend((id)objc_opt_self(), sel_opaqueSeparatorColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id TimelineHeaderView.__allocating_init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(objc_allocWithZone(v2), sel_initWithReuseIdentifier_, v3);

  return v4;
}

id TimelineHeaderView.init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  void *v4;
  id v5;
  id v6;
  objc_super v8;

  swift_unknownObjectWeakInit();
  v2[OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___backgroundEffectView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___separatorView] = 0;
  if (a2)
  {
    v4 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for TimelineHeaderView();
  v5 = objc_msgSendSuper2(&v8, sel_initWithReuseIdentifier_, v4);

  v6 = v5;
  sub_1BC3D01F8();

  return v6;
}

uint64_t type metadata accessor for TimelineHeaderView()
{
  return objc_opt_self();
}

id TimelineHeaderView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TimelineHeaderView.init(coder:)(void *a1)
{
  _BYTE *v1;
  id v3;
  id v4;
  id v5;
  objc_super v7;

  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___backgroundEffectView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___separatorView] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for TimelineHeaderView();
  v3 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);
  v4 = v3;
  if (v3)
  {
    v5 = v3;
    sub_1BC3D01F8();

  }
  return v4;
}

void sub_1BC3D01F8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = sub_1BC3CFDE8();
  objc_msgSend(v1, sel_setHidden_, objc_msgSend(v0, sel_floating) ^ 1);

  v2 = sub_1BC3CFDE8();
  objc_msgSend(v0, sel_setBackgroundView_, v2);

  v3 = objc_msgSend(v0, sel_contentView);
  v4 = sub_1BC3CFBA0();
  objc_msgSend(v3, sel_addSubview_, v4);

  v5 = objc_msgSend(v0, sel_contentView);
  v6 = sub_1BC3CFCC4();
  objc_msgSend(v5, sel_addSubview_, v6);

  v7 = objc_msgSend(v0, sel_contentView);
  v8 = sub_1BC3CFE94();
  objc_msgSend(v7, sel_addSubview_, v8);

}

void sub_1BC3D0328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  id v8;
  void *v9;

  v6 = sub_1BC3CFBA0();
  v7 = (void *)sub_1BC62C650();
  objc_msgSend(v6, sel_setText_, v7);

  v8 = sub_1BC3CFCC4();
  sub_1BC36E2AC();
  sub_1BC62D01C();
  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setText_, v9, a3, a4);

}

void sub_1BC3D0468(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = sub_1BC3CFDE8();
  if (a1 && (v3 = objc_msgSend(a1, sel__backdropViewLayerGroupName)) != 0)
  {
    v4 = v3;
    sub_1BC62C680();

    v6 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v5 = v6;
  }
  else
  {
    v5 = 0;
  }
  v7 = v5;
  objc_msgSend(v2, sel__setGroupName_);

}

void sub_1BC3D05D8()
{
  char *v0;
  unsigned __int8 *v1;
  id v2;
  id v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for TimelineHeaderView();
  objc_msgSendSuper2(&v4, sel_prepareForReuse);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  objc_msgSend(v0, sel_setFloating_, 0);
  v1 = (unsigned __int8 *)&v0[OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden];
  swift_beginAccess();
  *v1 = 0;
  v2 = sub_1BC3CFE94();
  objc_msgSend(v2, sel_setHidden_, *v1);

  v3 = sub_1BC3CFDE8();
  objc_msgSend(v3, sel__setGroupName_, 0);

}

id sub_1BC3D07A4(char a1)
{
  char *v1;
  int v2;
  id result;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  unsigned int v9;
  char *v10;
  void *v11;
  char **v12;

  v2 = a1 & 1;
  result = objc_msgSend(v1, sel_floating);
  if ((_DWORD)result != v2)
  {
    v4 = sub_1BC3CFBA0();
    result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E0DC4B58], 1024, *MEMORY[0x1E0DC48F0]);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v5 = result;
    objc_msgSend(v4, sel_setFont_, result);

    v6 = sub_1BC3CFCC4();
    objc_msgSend(v6, sel_setNumberOfLines_, objc_msgSend(v1, sel_floating));

    v7 = objc_msgSend(v1, sel_backgroundView);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_setHidden_, objc_msgSend(v1, sel_floating) ^ 1);

    }
    objc_msgSend(v1, sel_setNeedsLayout);
    v9 = objc_msgSend(v1, sel_floating);
    v10 = &v1[OBJC_IVAR___HRTimelineHeaderView_delegate];
    if (v9)
    {
      swift_beginAccess();
      result = (id)MEMORY[0x1BCCF37A4](v10);
      if (!result)
        return result;
      v11 = result;
      v12 = &selRef_headerViewDidBeginFloating_;
    }
    else
    {
      swift_beginAccess();
      result = (id)MEMORY[0x1BCCF37A4](v10);
      if (!result)
        return result;
      v11 = result;
      v12 = &selRef_headerViewDidEndFloating_;
    }
    objc_msgSend(v11, *v12, v1);
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

void sub_1BC3D0960()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  double Width;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  double v16;
  id v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  double MaxY;
  id v24;
  double v25;
  double v26;
  id v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  id v36;
  id v37;
  unsigned __int8 v38;
  id v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  id v50;
  objc_super v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;

  v1 = sub_1BC62D55C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for TimelineHeaderView();
  v51.receiver = v0;
  v51.super_class = v5;
  objc_msgSendSuper2(&v51, sel_layoutSubviews);
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v52);
  objc_msgSend(v0, sel_layoutMargins);
  v8 = v7;
  objc_msgSend(v0, sel_layoutMargins);
  v10 = v9;
  objc_msgSend(v0, sel_layoutMargins);
  v12 = v11;
  if (qword_1EF4283E8 != -1)
    swift_once();
  v13 = *(double *)&qword_1EF42CBE0;
  v14 = sub_1BC3CFBA0();
  v15 = objc_msgSend(v14, sel_font);

  if (v15)
  {
    v16 = Width - v8 - v10;
    objc_msgSend(v15, sel_lineHeight);

    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DED500], v1);
    v17 = objc_msgSend(v0, sel_traitCollection);
    sub_1BC62A9A0();
    v19 = v18;

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v20 = sub_1BC3CFBA0();
    objc_msgSend(v20, sel_setFrame_, v12, v13, v16, v19);

    objc_msgSend(v0, sel_layoutMargins);
    v22 = v21;
    v53.origin.x = v12;
    v53.origin.y = v13;
    v53.size.width = v16;
    v53.size.height = v19;
    MaxY = CGRectGetMaxY(v53);
    v24 = sub_1BC3CFCC4();
    objc_msgSend(v24, sel_sizeThatFits_, v16, 1.79769313e308);
    v26 = v25;

    v27 = sub_1BC3CFCC4();
    objc_msgSend(v27, sel_setFrame_, v22, MaxY, v16, v26);

    v28 = objc_msgSend(v0, sel_traitCollection);
    objc_msgSend(v28, sel_displayPixel);
    v30 = v29;

    v31 = 0.0;
    if ((objc_msgSend(v0, sel_floating) & 1) == 0)
    {
      objc_msgSend(v0, sel_layoutMargins);
      v31 = v32;
    }
    v54.origin.x = v22;
    v54.origin.y = MaxY;
    v54.size.width = v16;
    v54.size.height = v26;
    v33 = CGRectGetMaxY(v54);
    v34 = *(double *)&qword_1EF42CBE0;
    if (objc_msgSend(v0, sel_floating))
    {
      objc_msgSend(v0, sel_bounds);
      v16 = CGRectGetWidth(v55);
    }
    v35 = v33 + v34 - v30;
    v36 = sub_1BC3CFE94();
    objc_msgSend(v36, sel_setFrame_, v31, v35, v16, v30);

    v37 = sub_1BC3CFDE8();
    v38 = objc_msgSend(v37, sel_isHidden);

    if ((v38 & 1) == 0)
    {
      v39 = sub_1BC3CFDE8();
      objc_msgSend(v39, sel_frame);
      v41 = v40;
      v43 = v42;
      v45 = v44;
      v47 = v46;

      v56.origin.x = v31;
      v56.origin.y = v35;
      v56.size.width = v16;
      v56.size.height = v30;
      v48 = CGRectGetMaxY(v56);
      if (v48 >= v47)
        v49 = v47;
      else
        v49 = v48;
      v50 = sub_1BC3CFDE8();
      objc_msgSend(v50, sel_setFrame_, v41, v43, v45, v49);

    }
  }
  else
  {
    __break(1u);
  }
}

double sub_1BC3D0D50(double a1)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  id v9;

  objc_msgSend(v1, sel_layoutMargins);
  v4 = v3;
  objc_msgSend(v1, sel_layoutMargins);
  v6 = v5;
  if (qword_1EF4283E8 != -1)
    swift_once();
  v7 = a1 - v4 - v6;
  v8 = sub_1BC3CFBA0();
  objc_msgSend(v8, sel_sizeThatFits_, v7, 1.79769313e308);

  v9 = sub_1BC3CFCC4();
  objc_msgSend(v9, sel_sizeThatFits_, v7, 1.79769313e308);

  return a1;
}

void sub_1BC3D0E90(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  id v22;
  double v23;
  double v24;
  objc_super v25;

  v25.receiver = v1;
  v25.super_class = (Class)type metadata accessor for TimelineHeaderView();
  objc_msgSendSuper2(&v25, sel_traitCollectionDidChange_, a1);
  if (a1)
    v3 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  else
    v3 = 0;
  v4 = objc_msgSend(v1, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  if (!v3)
  {

    goto LABEL_12;
  }
  v6 = sub_1BC62C680();
  v8 = v7;
  if (v6 == sub_1BC62C680() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    if (a1)
      goto LABEL_16;
LABEL_18:
    v21 = 0.0;
    goto LABEL_19;
  }
  v11 = sub_1BC62D574();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
LABEL_12:
    v12 = sub_1BC3CFBA0();
    v13 = (void *)objc_opt_self();
    v14 = *MEMORY[0x1E0DC48F0];
    v15 = objc_msgSend(v13, sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E0DC4B58], 1024, *MEMORY[0x1E0DC48F0]);
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v12, sel_setFont_, v15);

      v17 = sub_1BC3CFCC4();
      v18 = objc_msgSend(v13, sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E0DC4AB8], 1024, v14);
      if (v18)
      {
        v19 = v18;
        objc_msgSend(v17, sel_setFont_, v18);

        objc_msgSend(v1, sel_setNeedsLayout);
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_15:
  if (!a1)
    goto LABEL_18;
LABEL_16:
  objc_msgSend(a1, sel_displayScale);
  v21 = v20;
LABEL_19:
  v22 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v22, sel_displayScale);
  v24 = v23;

  if (!a1 || v21 != v24)
    objc_msgSend(v1, sel_setNeedsLayout);
}

id TimelineHeaderView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TimelineHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC3D1204@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR___HRTimelineHeaderView_delegate;
  swift_beginAccess();
  result = MEMORY[0x1BCCF37A4](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1BC3D1258()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1BC3D12AC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t method lookup function for TimelineHeaderView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static TimelineHeaderView.reuseIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of TimelineHeaderView.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TimelineHeaderView.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TimelineHeaderView.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of TimelineHeaderView.separatorViewHidden.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TimelineHeaderView.separatorViewHidden.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TimelineHeaderView.separatorViewHidden.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of TimelineHeaderView.apply(title:subtitle:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of TimelineHeaderView.applyStyle(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

_QWORD *TextItem.init(labelText:font:textColor:backgroundColor:accessories:accessibilityIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v17;

  type metadata accessor for TextItemCell();
  sub_1BC379B20(&qword_1EF429AF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&protocol conformance descriptor for TextItemCell);
  v8[10] = sub_1BC62ADA8();
  v8[11] = v17;
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  v8[6] = a5;
  v8[7] = a6;
  v8[8] = a7;
  v8[9] = a8;
  return v8;
}

id *TextItem.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1BC3D14EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = v0;
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v2 = *(void **)(v0 + 32);
  if (v2)
  {
    sub_1BC62D688();
    v3 = v2;
    sub_1BC62CEC0();

    v4 = *(void **)(v1 + 40);
    if (v4)
    {
LABEL_3:
      sub_1BC62D688();
      v5 = v4;
      sub_1BC62CEC0();

      return;
    }
  }
  else
  {
    sub_1BC62D688();
    v4 = *(void **)(v0 + 40);
    if (v4)
      goto LABEL_3;
  }
  sub_1BC62D688();
}

uint64_t sub_1BC3D15F4()
{
  sub_1BC62D670();
  sub_1BC3D14EC();
  return sub_1BC62D6AC();
}

uint64_t TextItem.labelText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void *TextItem.labelFont.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void *TextItem.labelTextColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

void *TextItem.backgroundColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

uint64_t TextItem.accessories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TextItem.accessibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *TextItem.__allocating_init(labelText:font:textColor:backgroundColor:accessories:accessibilityIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v16;
  uint64_t v17;

  v16 = (_QWORD *)swift_allocObject();
  type metadata accessor for TextItemCell();
  sub_1BC379B20(&qword_1EF429AF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&protocol conformance descriptor for TextItemCell);
  v16[10] = sub_1BC62ADA8();
  v16[11] = v17;
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  v16[6] = a5;
  v16[7] = a6;
  v16[8] = a7;
  v16[9] = a8;
  return v16;
}

uint64_t TextItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static TextItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1BC62D574();
}

uint64_t TextItem.__deallocating_deinit()
{
  TextItem.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC3D1834()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 160))();
}

void sub_1BC3D185C()
{
  sub_1BC3D14EC();
}

uint64_t sub_1BC3D187C(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF42CC40, a2, (uint64_t (*)(uint64_t))type metadata accessor for TextItem, (uint64_t)&protocol conformance descriptor for TextItem);
}

uint64_t type metadata accessor for TextItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC3D18C8()
{
  sub_1BC62D670();
  sub_1BC3D14EC();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC3D1904()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC3D1934()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC3D1964(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16)
    && *(_QWORD *)(*(_QWORD *)a1 + 24) == *(_QWORD *)(*(_QWORD *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_1BC62D574();
  }
}

uint64_t method lookup function for TextItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TextItem.__allocating_init(labelText:font:textColor:backgroundColor:accessories:accessibilityIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of TextItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of TextItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of TextItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_1BC3D19CC(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;

  v4 = a3;
  v19 = MEMORY[0x1E0DEE9D8];
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v16 = v4 & 0xFFFFFFFFFFFFFF8;
      v17 = v4 & 0xC000000000000001;
      v15 = v4;
      while (v17)
      {
        v9 = (id)MEMORY[0x1BCCF24CC](v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v18 = v9;
        v12 = a2;
        v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          sub_1BC62D268();
          sub_1BC62D298();
          v4 = v15;
          sub_1BC62D2A4();
          sub_1BC62D274();
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_1BC62D3B8();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC3D1B70(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v18 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BD780(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v6 = MEMORY[0x1E0D2B148];
      do
      {
        v7 = MEMORY[0x1BCCF24CC](v5, a1);
        v9 = *(_QWORD *)(v18 + 16);
        v8 = *(_QWORD *)(v18 + 24);
        if (v9 >= v8 >> 1)
          sub_1BC3BD780(v8 > 1, v9 + 1, 1);
        ++v5;
        *(_QWORD *)(v18 + 16) = v9 + 1;
        v10 = v18 + 16 * v9;
        *(_QWORD *)(v10 + 32) = v7;
        *(_QWORD *)(v10 + 40) = v6;
      }
      while (v2 != v5);
    }
    else
    {
      v11 = (uint64_t *)(a1 + 32);
      v12 = *(_QWORD *)(v18 + 16);
      v13 = 16 * v12;
      v14 = MEMORY[0x1E0D2B148];
      do
      {
        v15 = *v11;
        v16 = *(_QWORD *)(v18 + 24);
        swift_retain();
        if (v12 >= v16 >> 1)
          sub_1BC3BD780(v16 > 1, v12 + 1, 1);
        *(_QWORD *)(v18 + 16) = v12 + 1;
        v17 = v18 + v13;
        *(_QWORD *)(v17 + 32) = v15;
        *(_QWORD *)(v17 + 40) = v14;
        v13 += 16;
        ++v11;
        ++v12;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3D1D10(unint64_t a1)
{
  return sub_1BC3D2B94(a1, type metadata accessor for AccountLoginItem, &qword_1EF42CF00, (uint64_t)&unk_1BC64C5C8);
}

uint64_t sub_1BC3D1D2C(unint64_t a1)
{
  return sub_1BC3D2B94(a1, type metadata accessor for TitleSubtitleDetailItem, &qword_1EF42B7C0, (uint64_t)&unk_1BC63DA50);
}

uint64_t sub_1BC3D1D48(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BDA7C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x1BCCF24CC](v5, a1);
        v17 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1BC3BDA7C(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42CFD0);
        v16 = &protocol witness table for HKOntologyLocalizedEducationContentSection;
        *(_QWORD *)&v14 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_1BC34E718(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v12 = *(_QWORD *)(v3 + 16);
        v11 = *(_QWORD *)(v3 + 24);
        v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1BC3BDA7C(v11 > 1, v12 + 1, 1);
          v3 = v17;
        }
        v15 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42CFD0);
        v16 = &protocol witness table for HKOntologyLocalizedEducationContentSection;
        *(_QWORD *)&v14 = v13;
        *(_QWORD *)(v3 + 16) = v12 + 1;
        sub_1BC34E718(&v14, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3D1F38(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BDACC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x1BCCF24CC](v5, a1);
        v17 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1BC3BDACC(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = sub_1BC34B6A0(0, &qword_1ED6A52D8);
        v16 = &protocol witness table for HKMedicalRecord;
        *(_QWORD *)&v14 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_1BC34E718(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v12 = *(_QWORD *)(v3 + 16);
        v11 = *(_QWORD *)(v3 + 24);
        v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1BC3BDACC(v11 > 1, v12 + 1, 1);
          v3 = v17;
        }
        v15 = sub_1BC34B6A0(0, &qword_1ED6A52D8);
        v16 = &protocol witness table for HKMedicalRecord;
        *(_QWORD *)&v14 = v13;
        *(_QWORD *)(v3 + 16) = v12 + 1;
        sub_1BC34E718(&v14, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3D2128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD9A4(0, v6, 0);
    v7 = v17;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1BC3AFE24(v8, (uint64_t)v5);
      v17 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BC3BD9A4(v10 > 1, v11 + 1, 1);
        v7 = v17;
      }
      v15 = v2;
      v16 = sub_1BC347F0C(&qword_1EF42CF20, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t)&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_1BC3AFE24((uint64_t)v5, (uint64_t)boxed_opaque_existential_1);
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_1BC34E718(&v14, v7 + 40 * v11 + 32);
      sub_1BC3AFE68((uint64_t)v5);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1BC3D2294(unint64_t a1)
{
  return sub_1BC3D2B94(a1, (uint64_t (*)(uint64_t))type metadata accessor for ChartItem, &qword_1EF42CFA0, (uint64_t)&protocol conformance descriptor for ChartItem);
}

uint64_t sub_1BC3D22B0(unint64_t a1)
{
  return sub_1BC3D2B94(a1, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, &qword_1EF42CFC8, (uint64_t)&protocol conformance descriptor for UDCRecentItem);
}

uint64_t sub_1BC3D22CC(unint64_t a1)
{
  return sub_1BC3D2B94(a1, (uint64_t (*)(uint64_t))type metadata accessor for NavigationItem, &qword_1EF42CFB8, (uint64_t)&unk_1BC641E00);
}

uint64_t sub_1BC3D22E8(unint64_t a1)
{
  return sub_1BC3D2B94(a1, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem, &qword_1EF42CFC0, (uint64_t)&protocol conformance descriptor for UDCAlphabeticalItem);
}

uint64_t sub_1BC3D2304(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BDBD8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x1BCCF24CC](v5, a1);
        v17 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1BC3BDBD8(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42CFF8);
        v16 = &protocol witness table for HKCodedValue;
        *(_QWORD *)&v14 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_1BC34E718(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v12 = *(_QWORD *)(v3 + 16);
        v11 = *(_QWORD *)(v3 + 24);
        v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1BC3BDBD8(v11 > 1, v12 + 1, 1);
          v3 = v17;
        }
        v15 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42CFF8);
        v16 = &protocol witness table for HKCodedValue;
        *(_QWORD *)&v14 = v13;
        *(_QWORD *)(v3 + 16) = v12 + 1;
        sub_1BC34E718(&v14, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3D24F4(unint64_t a1)
{
  return sub_1BC3D2B94(a1, (uint64_t (*)(uint64_t))type metadata accessor for EducationItem, &qword_1EF42CFB0, (uint64_t)&protocol conformance descriptor for EducationItem);
}

uint64_t sub_1BC3D2510(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  ValueMetadata *v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD9A4(0, v1, 0);
    v2 = v21;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 1);
      v6 = v4[1];
      v16 = *v4;
      v17 = *(v4 - 2);
      v7 = v4[3];
      v8 = v4[5];
      v14 = v4[4];
      v15 = v4[2];
      v13 = *((_BYTE *)v4 + 48);
      v9 = *(_QWORD *)(v2 + 16);
      v10 = *(_QWORD *)(v2 + 24);
      v21 = v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
      {
        sub_1BC3BD9A4(v10 > 1, v9 + 1, 1);
        v2 = v21;
      }
      v19 = &type metadata for RecordTitleWithSubtitleItem;
      v20 = sub_1BC3DD9FC();
      v11 = swift_allocObject();
      *(_QWORD *)&v18 = v11;
      *(_QWORD *)(v11 + 16) = v17;
      *(_QWORD *)(v11 + 24) = v5;
      *(_QWORD *)(v11 + 32) = v16;
      *(_QWORD *)(v11 + 40) = v6;
      *(_QWORD *)(v11 + 48) = v15;
      *(_QWORD *)(v11 + 56) = v7;
      *(_QWORD *)(v11 + 64) = v14;
      *(_QWORD *)(v11 + 72) = v8;
      *(_BYTE *)(v11 + 80) = v13;
      *(_QWORD *)(v2 + 16) = v9 + 1;
      sub_1BC34E718(&v18, v2 + 40 * v9 + 32);
      v4 += 9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC3D2678(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD7C8(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC3BD7C8(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BC3BD7C8(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1BC35E088(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC3D2798(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BDDE8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x1BCCF24CC](v5, a1);
        v17 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1BC3BDDE8(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42CFA8);
        v16 = &protocol witness table for HKDiagnosticTestResult;
        *(_QWORD *)&v14 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_1BC34E718(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v12 = *(_QWORD *)(v3 + 16);
        v11 = *(_QWORD *)(v3 + 24);
        v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1BC3BDDE8(v11 > 1, v12 + 1, 1);
          v3 = v17;
        }
        v15 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42CFA8);
        v16 = &protocol witness table for HKDiagnosticTestResult;
        *(_QWORD *)&v14 = v13;
        *(_QWORD *)(v3 + 16) = v12 + 1;
        sub_1BC34E718(&v14, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3D2988(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BDACC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x1BCCF24CC](v5, a1);
        v17 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1BC3BDACC(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42CFA8);
        v16 = &protocol witness table for HKMedicalRecord;
        *(_QWORD *)&v14 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_1BC34E718(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v12 = *(_QWORD *)(v3 + 16);
        v11 = *(_QWORD *)(v3 + 24);
        v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1BC3BDACC(v11 > 1, v12 + 1, 1);
          v3 = v17;
        }
        v15 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42CFA8);
        v16 = &protocol witness table for HKMedicalRecord;
        *(_QWORD *)&v14 = v13;
        *(_QWORD *)(v3 + 16) = v12 + 1;
        sub_1BC34E718(&v14, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3D2B78(unint64_t a1)
{
  return sub_1BC3D2B94(a1, (uint64_t (*)(uint64_t))type metadata accessor for WalletIntegrationItem, &qword_1EF42CF08, (uint64_t)&unk_1BC64D2C4);
}

uint64_t sub_1BC3D2B94(unint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v8)
    return v9;
  v22 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BD9A4(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v9 = v22;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v11 = 0;
      do
      {
        v12 = MEMORY[0x1BCCF24CC](v11, a1);
        v22 = v9;
        v14 = *(_QWORD *)(v9 + 16);
        v13 = *(_QWORD *)(v9 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_1BC3BD9A4(v13 > 1, v14 + 1, 1);
          v9 = v22;
        }
        ++v11;
        v20 = a2(0);
        v21 = sub_1BC347F0C(a3, a2, a4);
        *(_QWORD *)&v19 = v12;
        *(_QWORD *)(v9 + 16) = v14 + 1;
        sub_1BC34E718(&v19, v9 + 40 * v14 + 32);
      }
      while (v8 != v11);
    }
    else
    {
      v15 = (uint64_t *)(a1 + 32);
      do
      {
        v16 = *v15;
        v22 = v9;
        v18 = *(_QWORD *)(v9 + 16);
        v17 = *(_QWORD *)(v9 + 24);
        swift_retain();
        if (v18 >= v17 >> 1)
        {
          sub_1BC3BD9A4(v17 > 1, v18 + 1, 1);
          v9 = v22;
        }
        v20 = a2(0);
        v21 = sub_1BC347F0C(a3, a2, a4);
        *(_QWORD *)&v19 = v16;
        *(_QWORD *)(v9 + 16) = v18 + 1;
        sub_1BC34E718(&v19, v9 + 40 * v18 + 32);
        ++v15;
        --v8;
      }
      while (v8);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t MedicalRecordChartabilityResult.configuration.getter()
{
  return swift_unknownObjectRetain();
}

id MedicalRecordChartabilityResult.masterDataSource.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_masterDataSource);
}

uint64_t MedicalRecordChartabilityResult.seriesDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

void *MedicalRecordChartabilityResult.outOfRangeDataSource.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource);
  v2 = v1;
  return v1;
}

void *MedicalRecordChartabilityResult.noRangeDataSource.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource);
  v2 = v1;
  return v1;
}

uint64_t MedicalRecordChartabilityResult.latestChartableDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC3462D8(v1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_latestChartableDate, a1);
}

BOOL sub_1BC3D3034()
{
  uint64_t v0;
  unint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource)
    || *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource))
  {
    return 1;
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v3 > 1;
}

id MedicalRecordChartabilityResult.__allocating_init(configuration:masterDataSource:seriesDataSources:outOfRangeDataSource:noRangeDataSource:latestChartableDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  char *v13;
  id v14;
  objc_super v16;

  v13 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_configuration] = a1;
  *(_QWORD *)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_masterDataSource] = a2;
  *(_QWORD *)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources] = a3;
  *(_QWORD *)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource] = a4;
  *(_QWORD *)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource] = a5;
  sub_1BC3462D8(a6, (uint64_t)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_latestChartableDate]);
  v16.receiver = v13;
  v16.super_class = v6;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  sub_1BC36D71C(a6);
  return v14;
}

id MedicalRecordChartabilityResult.init(configuration:masterDataSource:seriesDataSources:outOfRangeDataSource:noRangeDataSource:latestChartableDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  id v8;
  objc_super v10;

  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_configuration] = a1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_masterDataSource] = a2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources] = a3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource] = a4;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource] = a5;
  sub_1BC3462D8(a6, (uint64_t)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_latestChartableDate]);
  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for MedicalRecordChartabilityResult();
  v8 = objc_msgSendSuper2(&v10, sel_init);
  sub_1BC36D71C(a6);
  return v8;
}

uint64_t type metadata accessor for MedicalRecordChartabilityResult()
{
  uint64_t result;

  result = qword_1EF42CDA8;
  if (!qword_1EF42CDA8)
    return swift_getSingletonMetadata();
  return result;
}

void MedicalRecordChartabilityResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicalRecordChartabilityResult.__deallocating_deinit()
{
  return sub_1BC3D6614(0, type metadata accessor for MedicalRecordChartabilityResult);
}

uint64_t sub_1BC3D3350(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC3D34A4(a1, a2, a3, a4, (unint64_t *)&qword_1EF4294F8, 0x1E0CB64A0, (uint64_t)&protocol witness table for HKConcept);
}

uint64_t sub_1BC3D3488(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC3D34A4(a1, a2, a3, a4, (unint64_t *)&qword_1ED6A4938, 0x1E0CB6870, (uint64_t)&protocol witness table for HKMedicalUserDomainConcept);
}

uint64_t sub_1BC3D34A4(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  id v13;
  uint64_t v14;
  _QWORD v16[5];

  v16[3] = sub_1BC34B6A0(0, a5);
  v16[4] = a7;
  v16[0] = a1;
  v13 = a1;
  v14 = sub_1BC3D1F38(a2);
  (*(void (**)(_QWORD *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x60))(v16, v14, 2, 0, a3, a4);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
}

void sub_1BC3D3670(_QWORD *a1, uint64_t a2, id a3, int a4, void (*a5)(id), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint8_t *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id *v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  BOOL v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  id v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char **v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  void *v85;
  unint64_t v86;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  _QWORD *v91;
  char *v92;
  _QWORD *v93;
  unint64_t v94;
  id v95;
  id v96;
  unint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  unsigned int v101;
  _QWORD *v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  objc_class *v115;
  char *v116;
  void *v117;
  void *v118;
  id v119;
  id v120;
  _QWORD *v121;
  id v122;
  unint64_t v123;
  id v124;
  id v125;
  _QWORD *v126;
  void (*v127)(unint64_t);
  _QWORD *v128;
  id v129;
  char *v130;
  void *v131;
  unint64_t v132;
  id v133;
  void *v134;
  id v135;
  unint64_t v136;
  uint64_t v137;
  id v138;
  void *v139;
  uint64_t v140;
  unint64_t v141;
  id v142;
  id v143;
  id v144;
  id v145;
  void (*v146)(unint64_t);
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  Class v153;
  void *v154;
  id v155;
  id v156;
  id v157;
  id v158;
  _QWORD *v159;
  _QWORD *v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  id v164;
  id v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(id);
  char *v175;
  uint64_t v176;
  unint64_t v177;
  objc_super v178;
  unint64_t v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;

  LODWORD(v177) = a4;
  sub_1BC3B3098(0, (unint64_t *)&qword_1ED6A4EA0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v149 - v12;
  v168 = sub_1BC62A760();
  v167 = *(_QWORD *)(v168 - 8);
  MEMORY[0x1E0C80A78](v168);
  v169 = (uint64_t)&v149 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC62BB34();
  v176 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v175 = (char *)&v149 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v149 - v18;
  sub_1BC62BAE0();
  sub_1BC34E674((uint64_t)a1, (uint64_t)&v184);
  v20 = sub_1BC62BB28();
  v21 = sub_1BC62CAB8();
  v22 = os_log_type_enabled(v20, v21);
  v174 = a5;
  v173 = a6;
  v166 = v13;
  v172 = v15;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v170 = a2;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc();
    v183 = v25;
    v171 = a1;
    *(_DWORD *)v24 = 136446210;
    v164 = v24 + 4;
    sub_1BC34E674((uint64_t)&v184, (uint64_t)&v180);
    sub_1BC34E674((uint64_t)&v180, (uint64_t)&v179);
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42CD58);
    sub_1BC62D5D4();
    v26 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v27 = sub_1BC62C6E0();
    v165 = a3;
    v28 = v15;
    v30 = v29;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v180);
    *(_QWORD *)&v180 = sub_1BC4991F0(v27, v30, &v183);
    a1 = v171;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v184);
    _os_log_impl(&dword_1BC30A000, v20, v21, "Determining chartability for concept %{public}s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v25, -1, -1);
    v31 = v24;
    a2 = v170;
    MEMORY[0x1BCCF36A8](v31, -1, -1);

    v32 = *(void (**)(char *, uint64_t))(v176 + 8);
    v33 = v28;
    a3 = v165;
    v32(v19, v33);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v184);

    v32 = *(void (**)(char *, uint64_t))(v176 + 8);
    v32(v19, v15);
  }
  if ((v177 & 1) != 0)
    v34 = 2;
  else
    v34 = (uint64_t)a3;
  v35 = a1[3];
  v36 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v35);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36) & 1) != 0)
    v37 = (objc_class *)type metadata accessor for BloodPressureChartConfiguration();
  else
    v37 = (objc_class *)type metadata accessor for SingleValueChartConfiguration();
  v38 = objc_msgSend(objc_allocWithZone(v37), sel_init);
  v39 = 0;
  v40 = (uint64_t)sub_1BC3DD134(a2, v34);
  v170 = (uint64_t)v32;
  v171 = a1;
  v165 = v38;
  type metadata accessor for MedicalRecordUnitCollector();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = MEMORY[0x1E0DEE9E0];
  if ((unint64_t)v40 >> 62)
  {
    if (v40 < 0)
      v38 = (id)v40;
    else
      v38 = (id)(v40 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v42 = sub_1BC62D3B8();
    if (!v42)
      goto LABEL_22;
  }
  else
  {
    v42 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v42)
      goto LABEL_22;
  }
  if (v42 < 1)
  {
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  v43 = 0;
  do
  {
    if ((v40 & 0xC000000000000001) != 0)
      MEMORY[0x1BCCF24CC](v43, v40);
    else
      swift_retain();
    ++v43;
    v44 = sub_1BC3D550C();
    sub_1BC5A17F4(v44);
    swift_release();
    swift_bridgeObjectRelease();
  }
  while (v42 != v43);
LABEL_22:
  swift_bridgeObjectRelease();
  v39 = 0;
  v38 = (id)sub_1BC5A1E84();
  v45 = sub_1BC3DCA40((char *)v40, v38);

  v177 = v45;
  v161 = v45 >> 62;
  if (!(v45 >> 62))
  {
    v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v47 = v46;
    goto LABEL_24;
  }
LABEL_146:
  swift_bridgeObjectRetain();
  v47 = sub_1BC62D3B8();
LABEL_24:
  v163 = inited;
  v176 = v47;
  v162 = v39;
  v164 = v38;
  if (!v47)
  {
    v49 = 0;
LABEL_37:
    swift_bridgeObjectRelease();
    if (v49 < v34)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC3DD57C();
      v56 = (void *)swift_allocError();
      *(_QWORD *)v57 = v49;
      *(_BYTE *)(v57 + 8) = 0;
      swift_willThrow();

      swift_setDeallocating();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      v58 = (uint64_t)v171;
      v59 = v175;
      v60 = (void (*)(char *, uint64_t))v170;
      sub_1BC62BAE0();
      sub_1BC34E674(v58, (uint64_t)&v184);
      v61 = v56;
      v62 = v56;
      v63 = sub_1BC62BB28();
      v64 = sub_1BC62CAC4();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = swift_slowAlloc();
        v66 = swift_slowAlloc();
        v183 = v66;
        *(_DWORD *)v65 = 136446466;
        v170 = (uint64_t)v60;
        sub_1BC34E674((uint64_t)&v184, (uint64_t)&v180);
        sub_1BC34E674((uint64_t)&v180, (uint64_t)&v179);
        sub_1BC35817C(0, (unint64_t *)&qword_1EF42CD58);
        sub_1BC62D5D4();
        v67 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_1BC62D088();
        swift_unknownObjectRelease();
        v68 = sub_1BC62C6E0();
        v70 = v69;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v180);
        *(_QWORD *)&v180 = sub_1BC4991F0(v68, v70, &v183);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v184);
        *(_WORD *)(v65 + 12) = 2082;
        *(_QWORD *)&v180 = v56;
        v71 = v56;
        sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
        v72 = sub_1BC62C6E0();
        *(_QWORD *)&v180 = sub_1BC4991F0(v72, v73, &v183);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC30A000, v63, v64, "Cannot chart concept: %{public}s because: %{public}s", (uint8_t *)v65, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v66, -1, -1);
        MEMORY[0x1BCCF36A8](v65, -1, -1);

        ((void (*)(char *, uint64_t))v170)(v175, v172);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v184);

        v60(v59, v172);
      }
      v174(0);

      return;
    }
    v34 = (uint64_t)v171;
    if (v42)
    {
      if ((v40 & 0xC000000000000001) != 0)
        goto LABEL_150;
      if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v74 = *(_QWORD *)(v40 + 32);
        swift_retain();
        goto LABEL_46;
      }
LABEL_152:
      __break(1u);
      goto LABEL_153;
    }
    swift_bridgeObjectRelease();
    v76 = 0;
    v75 = (char **)v165;
LABEL_48:
    sub_1BC34E674(v34, (uint64_t)&v184);
    v78 = objc_msgSend(v75, sel_dataTransformer);
    v153 = (Class)type metadata accessor for MedicalRecordChartDataSource();
    v79 = objc_allocWithZone(v153);
    v80 = v76;
    v81 = v164;
    v154 = v76;
    v160 = sub_1BC4B811C((uint64_t)&v184, (uint64_t)v78, v81, v76, 1, 0);
    swift_unknownObjectRelease();
    v156 = v81;

    v157 = v80;
    v39 = MEMORY[0x1E0DEE9D8];
    v184 = MEMORY[0x1E0DEE9D8];
    if (v176)
    {
      if (v176 < 1)
      {
        __break(1u);
        goto LABEL_152;
      }
      v82 = v177 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      v83 = 0;
      do
      {
        if (v82)
          v84 = (char *)MEMORY[0x1BCCF24CC](v83, v177);
        else
          v84 = (char *)*(id *)(v177 + 8 * v83 + 32);
        v85 = v84;
        ++v83;
        v86 = *(_QWORD *)&v84[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
        swift_bridgeObjectRetain();

        sub_1BC3BB3F4(v86);
      }
      while (v176 != v83);
      swift_bridgeObjectRelease();
      v39 = v184;
      v75 = (char **)v165;
    }
    (*(void (**)(unint64_t))((*MEMORY[0x1E0DEEDD8] & *v160) + 0x168))(v39);
    swift_bridgeObjectRelease();
    v87 = objc_msgSend(v75, sel_shouldShowOutOfRangeOverlay);
    sub_1BC34E674(v34, (uint64_t)&v184);
    if ((v87 & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v184);
LABEL_93:
      v102 = 0;
      v159 = 0;
      goto LABEL_94;
    }
    v88 = v185;
    v89 = v186;
    __swift_project_boxed_opaque_existential_1Tm(&v184, v185);
    v90 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 24))(v88, v89);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v184);
    if ((v90 & 1) != 0)
      goto LABEL_93;
    v39 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v180 = MEMORY[0x1E0DEE9D8];
    if (!v176)
      goto LABEL_100;
    v155 = (id)(v177 & 0xC000000000000001);
    v152 = (char *)(v177 + 32);
    swift_bridgeObjectRetain();
    v91 = 0;
    v75 = &selRef_titleLabel;
    while (1)
    {
      if (v155)
      {
        v92 = (char *)MEMORY[0x1BCCF24CC](v91, v177);
        v55 = __OFADD__(v91, 1);
        v93 = (_QWORD *)((char *)v91 + 1);
        if (v55)
          goto LABEL_148;
      }
      else
      {
        v92 = (char *)*(id *)&v152[8 * (_QWORD)v91];
        v55 = __OFADD__(v91, 1);
        v93 = (_QWORD *)((char *)v91 + 1);
        if (v55)
          goto LABEL_148;
      }
      v159 = v93;
      v158 = v92;
      v94 = *(_QWORD *)&v92[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
      v179 = v39;
      if (v94 >> 62)
      {
        swift_bridgeObjectRetain();
        v38 = (id)sub_1BC62D3B8();
        if (v38)
        {
LABEL_69:
          v39 = 0;
          v175 = (char *)(v94 & 0xC000000000000001);
          v170 = v94 & 0xFFFFFFFFFFFFFF8;
          v164 = (id)(v94 + 32);
          v172 = v94;
          v171 = v38;
          while (1)
          {
            if (v175)
            {
              v95 = (id)MEMORY[0x1BCCF24CC](v39, v94);
            }
            else
            {
              if (v39 >= *(_QWORD *)(v170 + 16))
                goto LABEL_143;
              v95 = *((id *)v164 + v39);
            }
            v34 = (uint64_t)v95;
            v55 = __OFADD__(v39++, 1);
            if (v55)
            {
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
              goto LABEL_145;
            }
            v96 = objc_msgSend(v95, sel_quantities);
            sub_1BC34B6A0(0, (unint64_t *)&qword_1EF432A70);
            v97 = sub_1BC62C878();

            if (v97 >> 62)
            {
              swift_bridgeObjectRetain();
              v98 = sub_1BC62D3B8();
              if (v98)
              {
LABEL_79:
                v40 = v97 & 0xC000000000000001;
                inited = 4;
                while (1)
                {
                  v99 = v40 ? (id)MEMORY[0x1BCCF24CC](inited - 4, v97) : *(id *)(v97 + 8 * inited);
                  v100 = v99;
                  v42 = inited - 3;
                  if (__OFADD__(inited - 4, 1))
                    break;
                  v101 = objc_msgSend(v99, sel_isInRange);

                  if (!v101)
                  {
                    swift_bridgeObjectRelease_n();
                    sub_1BC62D268();
                    sub_1BC62D298();
                    sub_1BC62D2A4();
                    sub_1BC62D274();
                    goto LABEL_71;
                  }
                  ++inited;
                  if (v42 == v98)
                    goto LABEL_70;
                }
                __break(1u);
LABEL_100:
                v123 = v39;
LABEL_102:
                v182 = 0;
                v180 = 0u;
                v181 = 0u;
                v124 = objc_msgSend(v75, sel_dataTransformer);
                v125 = objc_allocWithZone(v153);
                v34 = (uint64_t)v156;
                v40 = (uint64_t)v157;
                v126 = sub_1BC4B811C((uint64_t)&v180, (uint64_t)v124, (void *)v34, v154, 1, 1);
                swift_unknownObjectRelease();

                v127 = *(void (**)(unint64_t))((*MEMORY[0x1E0DEEDD8] & *v126) + 0x168);
                v159 = v126;
                v128 = v126;
                v127(v39);

                swift_bridgeObjectRelease();
                *(_QWORD *)&v180 = v123;
                v39 = v123;
                if (!v176)
                  goto LABEL_138;
                v149 = v40;
                v150 = v34;
                v152 = (char *)(v177 & 0xC000000000000001);
                v151 = (char *)(v177 + 32);
                swift_bridgeObjectRetain();
                v129 = 0;
                v42 = (uint64_t)&selRef_viewIsAppearing_;
                while (1)
                {
                  v130 = v152
                       ? (char *)MEMORY[0x1BCCF24CC](v129, v177)
                       : (char *)*(id *)&v151[8 * (_QWORD)v129];
                  v55 = __OFADD__(v129, 1);
                  v131 = (char *)v129 + 1;
                  if (v55)
                    break;
                  v158 = v131;
                  v155 = v130;
                  v132 = *(_QWORD *)&v130[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
                  v179 = v39;
                  if (v132 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    v38 = (id)sub_1BC62D3B8();
                    if (v38)
                    {
LABEL_112:
                      v39 = 0;
                      v175 = (char *)(v132 & 0xC000000000000001);
                      v170 = v132 & 0xFFFFFFFFFFFFFF8;
                      v164 = (id)(v132 + 32);
                      v172 = v132;
                      v171 = v38;
                      while (1)
                      {
                        if (v175)
                        {
                          v133 = (id)MEMORY[0x1BCCF24CC](v39, v132);
                        }
                        else
                        {
                          if (v39 >= *(_QWORD *)(v170 + 16))
                            goto LABEL_144;
                          v133 = *((id *)v164 + v39);
                        }
                        v134 = v133;
                        v55 = __OFADD__(v39++, 1);
                        if (v55)
                          goto LABEL_142;
                        v135 = objc_msgSend(v133, sel_quantities);
                        sub_1BC34B6A0(0, (unint64_t *)&qword_1EF432A70);
                        v136 = sub_1BC62C878();

                        if (v136 >> 62)
                        {
                          swift_bridgeObjectRetain();
                          v34 = sub_1BC62D3B8();
                          if (v34)
                          {
LABEL_122:
                            inited = v136 & 0xC000000000000001;
                            v137 = 4;
                            while (1)
                            {
                              v138 = inited
                                   ? (id)MEMORY[0x1BCCF24CC](v137 - 4, v136)
                                   : *(id *)(v136 + 8 * v137);
                              v139 = v138;
                              v140 = v137 - 3;
                              if (__OFADD__(v137 - 4, 1))
                                break;
                              v40 = (uint64_t)objc_msgSend(v138, sel_hasRange);

                              if (!(_DWORD)v40)
                              {
                                swift_bridgeObjectRelease_n();
                                sub_1BC62D268();
                                sub_1BC62D298();
                                sub_1BC62D2A4();
                                sub_1BC62D274();
                                goto LABEL_114;
                              }
                              ++v137;
                              if (v140 == v34)
                                goto LABEL_113;
                            }
                            __break(1u);
                            goto LABEL_136;
                          }
                        }
                        else
                        {
                          v34 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFF8) + 0x10);
                          swift_bridgeObjectRetain();
                          if (v34)
                            goto LABEL_122;
                        }
LABEL_113:
                        swift_bridgeObjectRelease_n();

LABEL_114:
                        v38 = v171;
                        v132 = v172;
                        if ((_QWORD *)v39 == v171)
                        {
                          swift_bridgeObjectRelease();
                          v39 = v179;
                          goto LABEL_105;
                        }
                      }
                    }
                  }
                  else
                  {
                    v38 = *(id *)((v132 & 0xFFFFFFFFFFFFF8) + 0x10);
                    swift_bridgeObjectRetain();
                    if (v38)
                      goto LABEL_112;
                  }
                  swift_bridgeObjectRelease();
LABEL_105:

                  sub_1BC3BB3F4(v39);
                  v129 = v158;
                  v39 = MEMORY[0x1E0DEE9D8];
                  if (v158 == (id)v176)
                    goto LABEL_137;
                }
LABEL_149:
                __break(1u);
LABEL_150:
                v74 = MEMORY[0x1BCCF24CC](0, v40);
LABEL_46:
                v75 = (char **)v165;
                swift_bridgeObjectRelease();
                v76 = *(void **)(v74 + 56);
                v77 = v76;
                swift_release();
                goto LABEL_48;
              }
            }
            else
            {
              v98 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v98)
                goto LABEL_79;
            }
LABEL_70:
            swift_bridgeObjectRelease_n();

LABEL_71:
            v38 = v171;
            v94 = v172;
            if ((_QWORD *)v39 == v171)
            {
              swift_bridgeObjectRelease();
              v39 = v179;
              goto LABEL_61;
            }
          }
        }
      }
      else
      {
        v38 = *(id *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v38)
          goto LABEL_69;
      }
      swift_bridgeObjectRelease();
LABEL_61:

      sub_1BC3BB3F4(v39);
      v91 = v159;
      v39 = MEMORY[0x1E0DEE9D8];
      if (v159 == (_QWORD *)v176)
      {
        swift_bridgeObjectRelease();
        v123 = v39;
        v39 = v180;
        v75 = (char **)v165;
        goto LABEL_102;
      }
    }
  }
  v48 = (id *)v177;
  if (v47 < 1)
  {
    __break(1u);
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  v39 = 0;
  v49 = 0;
  v50 = v177 & 0xC000000000000001;
  inited = (uint64_t)&OBJC_METACLASS____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell.info;
  while (1)
  {
    v51 = v50 ? (char *)MEMORY[0x1BCCF24CC](v39, v48) : (char *)v48[v39 + 4];
    v52 = v51;
    v53 = *(_QWORD *)&v51[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
    if (v53 >> 62)
    {
      swift_bridgeObjectRetain();
      v54 = sub_1BC62D3B8();

      swift_bridgeObjectRelease();
    }
    else
    {
      v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);

    }
    v55 = __OFADD__(v49, v54);
    v49 += v54;
    v48 = (id *)v177;
    if (v55)
      break;
    if (v176 == ++v39)
      goto LABEL_37;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  swift_bridgeObjectRelease();
  v39 = v180;
  v34 = v150;
  v40 = v149;
LABEL_138:
  if (v39 >> 62)
  {
LABEL_153:
    swift_bridgeObjectRetain();
    v148 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v148)
      goto LABEL_140;
LABEL_154:
    swift_bridgeObjectRelease();
    v102 = 0;
    goto LABEL_94;
  }
  if (!*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_154;
LABEL_140:
  v182 = 0;
  v180 = 0u;
  v181 = 0u;
  v141 = v39;
  v142 = objc_msgSend(v165, sel_dataTransformer);
  v143 = objc_allocWithZone(v153);
  v144 = (id)v34;
  v145 = (id)v40;
  v102 = sub_1BC4B811C((uint64_t)&v180, (uint64_t)v142, v144, v154, 1, 2);
  swift_unknownObjectRelease();

  v146 = *(void (**)(unint64_t))((*MEMORY[0x1E0DEEDD8] & *v102) + 0x168);
  v147 = v102;
  v146(v141);

  swift_bridgeObjectRelease();
LABEL_94:
  v103 = v161;
  sub_1BC62A6A0();
  if (v103)
  {
    v105 = swift_bridgeObjectRetain();
    v104 = (unint64_t)sub_1BC3D6844(v105, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DB1FC);
    swift_bridgeObjectRelease();
  }
  else
  {
    v104 = v177 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v106 = v162;
  *(_QWORD *)&v180 = v104;
  sub_1BC3D668C((uint64_t *)&v180, (uint64_t (*)(uint64_t))sub_1BC5048DC, sub_1BC3D74E4);
  if (v106)
  {
    swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v107 = v180;
    v108 = v156;
    v177 = (unint64_t)v108;
    v109 = v165;
    swift_unknownObjectRetain();
    v110 = v169;
    v111 = sub_1BC3DC73C(v107, v109, v108, v169);
    swift_release();
    swift_unknownObjectRelease();

    v112 = v167;
    v113 = (uint64_t)v166;
    v114 = v168;
    (*(void (**)(char *, uint64_t, uint64_t))(v167 + 16))(v166, v110, v168);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v112 + 56))(v113, 0, 1, v114);
    v115 = (objc_class *)type metadata accessor for MedicalRecordChartabilityResult();
    v116 = (char *)objc_allocWithZone(v115);
    *(_QWORD *)&v116[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_configuration] = v109;
    v117 = v160;
    *(_QWORD *)&v116[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_masterDataSource] = v160;
    *(_QWORD *)&v116[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources] = v111;
    v118 = v159;
    *(_QWORD *)&v116[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource] = v159;
    *(_QWORD *)&v116[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource] = v102;
    sub_1BC3462D8(v113, (uint64_t)&v116[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_latestChartableDate]);
    v178.receiver = v116;
    v178.super_class = v115;
    swift_unknownObjectRetain();
    v119 = v117;
    v120 = v118;
    v121 = v102;
    v122 = objc_msgSendSuper2(&v178, sel_init);
    sub_1BC36D71C(v113);
    v174(v122);

    swift_release();
    swift_unknownObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v110, v114);
  }
}

uint64_t sub_1BC3D4D64@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  id *v23;
  id v24;
  void *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t result;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  _BYTE v39[40];

  v36 = a4;
  v38 = a5;
  sub_1BC3B3098(0, (unint64_t *)&qword_1ED6A4EA0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - v9;
  v11 = sub_1BC62A760();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v37 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v35 = (char *)&v34 - v15;
  v16 = *a1;
  sub_1BC34E674(*a1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining, (uint64_t)v39);
  v17 = objc_msgSend(a2, sel_dataTransformer);
  v18 = *(void **)(v16 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors);
  v19 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartDataSource());
  v20 = v18;
  v21 = a3;
  v22 = sub_1BC4B811C((uint64_t)v39, (uint64_t)v17, v21, v18, 1, 0);
  swift_unknownObjectRelease();

  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v22) + 0x168))(*(_QWORD *)(v16
                                                                                       + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets));
  v23 = (id *)((char *)v22 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange);
  swift_beginAccess();
  v24 = objc_msgSend(*v23, sel_maxValue);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_6;
  }
  v25 = v24;
  v26 = v37;
  sub_1BC62A724();

  v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v27(v10, v26, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_6:
    result = sub_1BC36D71C((uint64_t)v10);
    goto LABEL_7;
  }
  v28 = v35;
  v27(v35, v10, v11);
  v29 = v36;
  v30 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v37, v36, v11);
  v31 = sub_1BC62A70C();
  v32 = *(void (**)(char *, uint64_t))(v12 + 8);
  v32(v30, v11);
  if ((v31 & 1) != 0)
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 40))(v29, v28, v11);
  else
    result = ((uint64_t (*)(char *, uint64_t))v32)(v28, v11);
LABEL_7:
  *v38 = v22;
  return result;
}

uint64_t *MedicalRecordChartableSeriesCollector.__allocating_init(chartDefining:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_1BC3DD5C0(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

id MedicalRecordChartabilityDeterminer.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordChartabilityDeterminer();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MedicalRecordChartabilityDeterminer.__deallocating_deinit(uint64_t a1)
{
  return sub_1BC3D6614(a1, type metadata accessor for MedicalRecordChartabilityDeterminer);
}

uint64_t *MedicalRecordChartableSeriesCollector.init(chartDefining:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_1BC3DC668((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v9;
}

void sub_1BC3D51C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  _BYTE v30[40];
  _QWORD v31[5];
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9);
  if (v10)
  {
    v11 = (void *)v10;
    swift_beginAccess();
    v12 = v11;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((*(_QWORD *)(v1 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v1 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    swift_endAccess();
    v13 = *(void **)(v1 + 56);
    sub_1BC34E674((uint64_t)a1, (uint64_t)v33);
    v14 = v13;
    if (!v13)
    {
      v15 = v34;
      v16 = v35;
      __swift_project_boxed_opaque_existential_1Tm(v33, v34);
      v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
      v14 = HKMedicalRecordCategoryType.categoryColors()(v17);
    }
    v18 = v13;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
    v19 = *(void **)(v2 + 56);
    *(_QWORD *)(v2 + 56) = v14;

  }
  else
  {
    sub_1BC62BAE0();
    sub_1BC34E674((uint64_t)a1, (uint64_t)v33);
    v20 = sub_1BC62BB28();
    v21 = sub_1BC62CAAC();
    if (os_log_type_enabled(v20, v21))
    {
      v29 = v4;
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v32 = v23;
      *(_DWORD *)v22 = 136446210;
      v28 = v22 + 4;
      sub_1BC34E674((uint64_t)v33, (uint64_t)v31);
      sub_1BC34E674((uint64_t)v31, (uint64_t)v30);
      sub_1BC35817C(0, (unint64_t *)&qword_1EF42C960);
      sub_1BC62D5D4();
      v24 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v25 = sub_1BC62C6E0();
      v27 = v26;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
      v31[0] = sub_1BC4991F0(v25, v27, &v32);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
      _os_log_impl(&dword_1BC30A000, v20, v21, "There are no chartable coded quantities in record %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v23, -1, -1);
      MEMORY[0x1BCCF36A8](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v29);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_1BC3D550C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 64);
  v22 = MEMORY[0x1E0DEE9D8];
  if (v1 >> 62)
    goto LABEL_23;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; v2 = sub_1BC62D3B8())
  {
    v3 = 0;
    v19 = v1;
    v20 = v1 & 0xC000000000000001;
    v17 = v1 + 32;
    v18 = v2;
    while (1)
    {
      v5 = v20 ? (id)MEMORY[0x1BCCF24CC](v3, v1) : *(id *)(v17 + 8 * v3);
      v6 = v5;
      if (__OFADD__(v3++, 1))
        break;
      v8 = objc_msgSend(v5, sel_quantities);
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF432A70);
      v9 = sub_1BC62C878();

      if (v9 >> 62)
      {
        swift_bridgeObjectRetain();
        v10 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
        if (!v10)
        {
LABEL_19:

          swift_bridgeObjectRelease();
          v4 = MEMORY[0x1E0DEE9D8];
          goto LABEL_5;
        }
      }
      else
      {
        v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v10)
          goto LABEL_19;
      }
      v21 = MEMORY[0x1E0DEE9D8];
      sub_1BC62D28C();
      if (v10 < 0)
        goto LABEL_22;
      v11 = 0;
      do
      {
        if ((v9 & 0xC000000000000001) != 0)
          v12 = (id)MEMORY[0x1BCCF24CC](v11, v9);
        else
          v12 = *(id *)(v9 + 8 * v11 + 32);
        v13 = v12;
        ++v11;
        v14 = objc_msgSend(v12, sel_quantity, v17);
        v15 = objc_msgSend(v14, sel__unit);

        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
      }
      while (v10 != v11);
      v4 = v21;

      swift_bridgeObjectRelease();
      v2 = v18;
      v1 = v19;
LABEL_5:
      sub_1BC3BB3E8(v4);
      if (v3 == v2)
      {
        swift_bridgeObjectRelease_n();
        return v22;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain_n();
  }
  swift_bridgeObjectRelease_n();
  return MEMORY[0x1E0DEE9D8];
}

id sub_1BC3D57C0(void *a1)
{
  uint64_t v1;
  id v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  objc_class *v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  objc_super v13;
  _BYTE v14[48];

  swift_beginAccess();
  v3 = a1;
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BC3DC8A8(v4, (uint64_t)v3);
  swift_bridgeObjectRelease();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_3;
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_1BC34E674(v1 + 16, (uint64_t)v14);
  v6 = *(void **)(v1 + 56);
  v7 = (objc_class *)type metadata accessor for MedicalRecordChartableSeries();
  v8 = (char *)objc_allocWithZone(v7);
  sub_1BC34E674((uint64_t)v14, (uint64_t)&v8[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining]);
  *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets] = v5;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors] = v6;
  v13.receiver = v8;
  v13.super_class = v7;
  v9 = v6;
  v10 = objc_msgSendSuper2(&v13, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v10;
}

id sub_1BC3D5900@<X0>(void **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  id result;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  id v24;
  id v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  os_log_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  os_log_t v34;
  int v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40[2];

  v40[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v40[0] = 0;
  v11 = objc_msgSend(v10, sel_chartableCodedQuantitySetConvertedToUnit_error_, a2, v40);
  v12 = v40[0];
  if (v11)
  {
    *a3 = v11;
    return v12;
  }
  else
  {
    v14 = v40[0];
    v15 = (void *)sub_1BC62A55C();

    swift_willThrow();
    sub_1BC62BAE0();
    v16 = v10;
    v17 = v15;
    v18 = v16;
    v19 = v15;
    v20 = sub_1BC62BB28();
    v21 = sub_1BC62CAAC();
    v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v23 = swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      v36 = (void *)swift_slowAlloc();
      v39 = (uint64_t)v18;
      v40[0] = v36;
      *(_DWORD *)v23 = 138543618;
      v38 = v6;
      v35 = v22;
      v34 = v20;
      v24 = v18;
      v37 = v7;
      v25 = v24;
      sub_1BC62CFF8();
      v26 = v33;
      *v33 = v18;

      *(_WORD *)(v23 + 12) = 2082;
      v39 = (uint64_t)v15;
      v27 = v15;
      sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
      v28 = sub_1BC62C6E0();
      v39 = sub_1BC4991F0(v28, v29, (uint64_t *)v40);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      v30 = v34;
      _os_log_impl(&dword_1BC30A000, v34, (os_log_type_t)v35, "Unable to convert chartable coded quantity set %{public}@: %{public}s", (uint8_t *)v23, 0x16u);
      sub_1BC3DD918(0, (unint64_t *)&qword_1ED6A4B80, (unint64_t *)&qword_1ED6A4E60, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v26, -1, -1);
      v31 = v36;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v31, -1, -1);
      MEMORY[0x1BCCF36A8](v23, -1, -1);

      result = (id)(*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v9, v38);
    }
    else
    {

      result = (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    *a3 = 0;
  }
  return result;
}

id MedicalRecordChartableSeries.__allocating_init(chartDefining:chartableQuantities:unit:preferredColors:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  id v10;
  objc_super v12;

  v9 = (char *)objc_allocWithZone(v4);
  sub_1BC34E674(a1, (uint64_t)&v9[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining]);
  *(_QWORD *)&v9[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets] = a2;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors] = a4;
  v12.receiver = v9;
  v12.super_class = v4;
  v10 = objc_msgSendSuper2(&v12, sel_init);

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v10;
}

uint64_t MedicalRecordChartableSeriesCollector.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordChartableSeriesCollector.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC3D5D88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets);
  if ((v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v4 = (uint64_t)sub_1BC3D6844(v3, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DB41C);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  v13 = v4;
  sub_1BC3D668C(&v13, (uint64_t (*)(uint64_t))sub_1BC505EE8, sub_1BC3D861C);
  swift_bridgeObjectRelease();
  v5 = v13;
  if (v13 < 0 || (v13 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC62D3B8();
    swift_release();
    if (v11)
      goto LABEL_7;
LABEL_13:
    swift_release();
    v12 = sub_1BC62A760();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_13;
LABEL_7:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1BCCF24CC](0, v5);
    goto LABEL_10;
  }
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = *(id *)(v5 + 32);
LABEL_10:
    v7 = v6;
    swift_release();
    v8 = objc_msgSend(v7, sel_date);

    sub_1BC62A724();
    v9 = sub_1BC62A760();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

id MedicalRecordChartableSeries.init(chartDefining:chartableQuantities:unit:preferredColors:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  char *v4;
  id v9;
  objc_super v11;

  sub_1BC34E674(a1, (uint64_t)&v4[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining]);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets] = a2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors] = a4;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for MedicalRecordChartableSeries();
  v9 = objc_msgSendSuper2(&v11, sel_init);

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v9;
}

_QWORD *sub_1BC3D5FB0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  id v8;
  id v9;
  _QWORD *v10;
  _BYTE v12[40];

  v3 = v2;
  sub_1BC34E674(v3 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining, (uint64_t)v12);
  v6 = objc_msgSend(a1, sel_dataTransformer);
  v7 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartDataSource());
  v8 = v7;
  v9 = a2;
  v10 = sub_1BC4B811C((uint64_t)v12, (uint64_t)v6, v9, v7, 1, 0);
  swift_unknownObjectRelease();

  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x168))(*(_QWORD *)(v3
                                                                                       + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets));
  return v10;
}

uint64_t sub_1BC3D60B0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets);
  v21 = MEMORY[0x1E0DEE9D8];
  if (v1 >> 62)
    goto LABEL_28;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1BC62D3B8())
  {
    v3 = 0;
    v19 = v2;
    v20 = v1 & 0xC000000000000001;
    v17 = v1 & 0xFFFFFFFFFFFFFF8;
    v18 = v1;
    v16 = v1 + 32;
    while (1)
    {
      if (v20)
      {
        v4 = (id)MEMORY[0x1BCCF24CC](v3, v18);
      }
      else
      {
        if (v3 >= *(_QWORD *)(v17 + 16))
          goto LABEL_27;
        v4 = *(id *)(v16 + 8 * v3);
      }
      v5 = v4;
      if (__OFADD__(v3++, 1))
        break;
      v7 = objc_msgSend(v4, sel_quantities);
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF432A70);
      v8 = sub_1BC62C878();

      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        v9 = sub_1BC62D3B8();
        if (v9)
        {
LABEL_13:
          v1 = v8 & 0xC000000000000001;
          v10 = 4;
          while (1)
          {
            v11 = v1 ? (id)MEMORY[0x1BCCF24CC](v10 - 4, v8) : *(id *)(v8 + 8 * v10);
            v12 = v11;
            v13 = v10 - 3;
            if (__OFADD__(v10 - 4, 1))
              break;
            v14 = objc_msgSend(v11, sel_isInRange);

            if (!v14)
            {
              swift_bridgeObjectRelease_n();
              sub_1BC62D268();
              sub_1BC62D298();
              sub_1BC62D2A4();
              sub_1BC62D274();
              goto LABEL_5;
            }
            ++v10;
            if (v13 == v9)
              goto LABEL_4;
          }
          __break(1u);
          break;
        }
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v9)
          goto LABEL_13;
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

LABEL_5:
      if (v3 == v19)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC3D6320()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets);
  v21 = MEMORY[0x1E0DEE9D8];
  if (v1 >> 62)
    goto LABEL_28;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1BC62D3B8())
  {
    v3 = 0;
    v19 = v2;
    v20 = v1 & 0xC000000000000001;
    v17 = v1 & 0xFFFFFFFFFFFFFF8;
    v18 = v1;
    v16 = v1 + 32;
    while (1)
    {
      if (v20)
      {
        v4 = (id)MEMORY[0x1BCCF24CC](v3, v18);
      }
      else
      {
        if (v3 >= *(_QWORD *)(v17 + 16))
          goto LABEL_27;
        v4 = *(id *)(v16 + 8 * v3);
      }
      v5 = v4;
      if (__OFADD__(v3++, 1))
        break;
      v7 = objc_msgSend(v4, sel_quantities);
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF432A70);
      v8 = sub_1BC62C878();

      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        v9 = sub_1BC62D3B8();
        if (v9)
        {
LABEL_13:
          v1 = v8 & 0xC000000000000001;
          v10 = 4;
          while (1)
          {
            v11 = v1 ? (id)MEMORY[0x1BCCF24CC](v10 - 4, v8) : *(id *)(v8 + 8 * v10);
            v12 = v11;
            v13 = v10 - 3;
            if (__OFADD__(v10 - 4, 1))
              break;
            v14 = objc_msgSend(v11, sel_hasRange);

            if (!v14)
            {
              swift_bridgeObjectRelease_n();
              sub_1BC62D268();
              sub_1BC62D298();
              sub_1BC62D2A4();
              sub_1BC62D274();
              goto LABEL_5;
            }
            ++v10;
            if (v13 == v9)
              goto LABEL_4;
          }
          __break(1u);
          break;
        }
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v9)
          goto LABEL_13;
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

LABEL_5:
      if (v3 == v19)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

id MedicalRecordChartableSeries.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicalRecordChartableSeries.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicalRecordChartableSeries.__deallocating_deinit(uint64_t a1)
{
  return sub_1BC3D6614(a1, type metadata accessor for MedicalRecordChartableSeries);
}

id sub_1BC3D6614(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1BC3D668C(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(_QWORD *))
{
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD v10[2];

  v6 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = a2(v6);
    *a1 = v6;
  }
  v8 = *(_QWORD *)(v6 + 16);
  v10[0] = v6 + 32;
  v10[1] = v8;
  a3(v10);
  return sub_1BC62D274();
}

_QWORD *sub_1BC3D6714(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1BC3DBD74((unint64_t)(v3 + 4), v2, v1, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableDatatypesDataSource, &qword_1EF42CF10, &qword_1EF42CF18, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1BC3DA118);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1BC3D6838(unint64_t a1)
{
  return sub_1BC3D6844(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DA618);
}

_QWORD *sub_1BC3D6844(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

size_t sub_1BC3D6954(uint64_t a1)
{
  return sub_1BC3D6D90(a1, &qword_1EF42C0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(_QWORD *, char *, uint64_t, uint64_t))sub_1BC4DF584, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC3DDB68);
}

_QWORD *sub_1BC3D6978(unint64_t a1)
{
  return sub_1BC3D6844(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DAAA0);
}

uint64_t sub_1BC3D6984(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BC3D699C(a1, a2, a3, a4, (void (*)(_QWORD))_s11SizedRecordCMa);
}

uint64_t sub_1BC3D6990(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BC3D699C(a1, a2, a3, a4, (void (*)(_QWORD))_s12SizedSectionCMa);
}

uint64_t sub_1BC3D699C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6)
      return MEMORY[0x1E0DEE9D8];
    v10 = v6;
    if (v6 <= 0)
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0)
          goto LABEL_19;
        v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8)
          goto LABEL_19;
        a5(0);
        swift_arrayInitWithCopy();
        return (uint64_t)v11;
      }
    }
    else
    {
      sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3D6B38(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BC3D699C(a1, a2, a3, a4, (void (*)(_QWORD))_s15SizedValueGroupCMa);
}

uint64_t sub_1BC3D6B44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1BC3D699C(a1, a2, a3, a4, (void (*)(_QWORD))_s10SizedValueCMa);
}

_QWORD *sub_1BC3D6B50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A59B0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 72);
  v5 = sub_1BC4DF840(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1BC3583F4();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1BC3D6C54(uint64_t a1)
{
  return sub_1BC3D6C60(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1BC4DFAEC);
}

_QWORD *sub_1BC3D6C60(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v2;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
  v5 = (_QWORD *)swift_allocObject();
  v6 = _swift_stdlib_malloc_size(v5);
  v7 = v6 - 32;
  if (v6 < 32)
    v7 = v6 - 17;
  v5[2] = v2;
  v5[3] = 2 * (v7 >> 4);
  v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1BC3583F4();
  if (v8 != v2)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

_QWORD *sub_1BC3D6D54(unint64_t a1)
{
  return sub_1BC3D6844(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DB41C);
}

uint64_t sub_1BC3D6D60(uint64_t a1)
{
  return sub_1BC3D6FC8(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1BC4DFEE4);
}

size_t sub_1BC3D6D6C(uint64_t a1)
{
  return sub_1BC3D6D90(a1, &qword_1EF42C4E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], (uint64_t (*)(_QWORD *, char *, uint64_t, uint64_t))sub_1BC4DFF00, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC3DDB68);
}

size_t sub_1BC3D6D90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(_QWORD *, char *, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  sub_1BC3B3098(0, a2, 255, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = *(_QWORD *)(a3(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v13);
  if (v11)
  {
    if (result - v12 != 0x8000000000000000 || v11 != -1)
    {
      v13[2] = v5;
      v13[3] = 2 * ((uint64_t)(result - v12) / v11);
      v16 = a4(v22, (char *)v13 + v12, v5, a1);
      v17 = v22[0];
      v18 = v22[1];
      v19 = v22[2];
      v20 = v22[3];
      v21 = v22[4];
      swift_bridgeObjectRetain();
      a5(v17, v18, v19, v20, v21);
      if (v16 == v5)
        return (size_t)v13;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC3D6EC0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC3B3098(0, &qword_1EF42C988, 255, (uint64_t (*)(uint64_t))sub_1BC3CC98C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1BC4E01C8((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1BC3583F4();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BC3D6FBC(uint64_t a1)
{
  return sub_1BC3D6FC8(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1BC4E03C8);
}

uint64_t sub_1BC3D6FC8(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = sub_1BC62D118();
    if (v4)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v4 <= 0)
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
    v5 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 25;
    v5[2] = v4;
    v5[3] = (2 * (v7 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v8 = a2(&v10, v5 + 4, v4, a1);
  result = sub_1BC3583F4();
  if (v8 == v4)
    return (uint64_t)v5;
  __break(1u);
  return result;
}

uint64_t sub_1BC3D70DC(uint64_t result, int64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v5;
  int64_t *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }
  v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v2 == -1)
    return MEMORY[0x1E0DEE9D8];
  v5 = result;
  if (v3 <= 0)
  {
    v6 = (int64_t *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BC379A60(0, &qword_1ED6A3708);
    v6 = (int64_t *)swift_allocObject();
    v7 = _swift_stdlib_malloc_size(v6);
    v8 = v7 - 32;
    if (v7 < 32)
      v8 = v7 - 25;
    v6[2] = v3;
    v6[3] = 2 * (v8 >> 3);
  }
  result = sub_1BC4E06DC((uint64_t)&v9, v6 + 4, v3, v5, a2);
  if (result == v3)
    return (uint64_t)v6;
LABEL_14:
  __break(1u);
  return result;
}

_QWORD *sub_1BC3D71B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC3DD978();
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_1BC4E080C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BC3583F4();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

size_t sub_1BC3D7298(uint64_t a1)
{
  return sub_1BC3D6D90(a1, &qword_1EF42CA70, (uint64_t (*)(uint64_t))sub_1BC3CD250, (uint64_t (*)(_QWORD *, char *, uint64_t, uint64_t))sub_1BC4E0A04, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC3583F4);
}

_QWORD *sub_1BC3D72BC(uint64_t a1)
{
  return sub_1BC3D72C8(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1BC4E0CF4);
}

_QWORD *sub_1BC3D72C8(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v2;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v5 = (_QWORD *)swift_allocObject();
  v6 = _swift_stdlib_malloc_size(v5);
  v7 = v6 - 32;
  if (v6 < 32)
    v7 = v6 - 25;
  v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1BC3583F4();
  if (v8 != v2)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

_QWORD *sub_1BC3D73C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1BC4E0EEC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BC3583F4();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1BC3D74B4(unint64_t a1)
{
  return sub_1BC3D6844(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DBB0C);
}

_QWORD *sub_1BC3D74C0(unint64_t a1)
{
  return sub_1BC3D6844(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DBF9C);
}

_QWORD *sub_1BC3D74CC(unint64_t a1)
{
  return sub_1BC3D6844(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DC1E0);
}

_QWORD *sub_1BC3D74D8(unint64_t a1)
{
  return sub_1BC3D6844(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DC424);
}

void sub_1BC3D74E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  void **v53;
  void *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  id v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  int v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char **v102;
  char *v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  id v109;
  void *v110;
  id v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  void *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char v132;
  char *v133;
  char v134;
  void (*v135)(char *, uint64_t);
  uint64_t v136;
  char *v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  char *v141;
  char *v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  unint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  BOOL v164;
  uint64_t v165;
  char v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  BOOL v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  unint64_t v188;
  char *v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  char *v196;
  unint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  char *v209;
  void (*v210)(char *, uint64_t);
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  id *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227[2];
  uint64_t v228;

  v2 = v1;
  sub_1BC3B3098(0, (unint64_t *)&qword_1ED6A4EA0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v199 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v221 = (char *)&v199 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v199 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v212 = (char *)&v199 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v199 - v16;
  MEMORY[0x1E0C80A78](v15);
  v205 = (uint64_t)&v199 - v18;
  v19 = sub_1BC62A760();
  v225 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v220 = (char *)&v199 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v224 = (char *)&v199 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v199 - v25;
  v27 = MEMORY[0x1E0C80A78](v24);
  v217 = (char *)&v199 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v204 = (char *)&v199 - v30;
  MEMORY[0x1E0C80A78](v29);
  v207 = (char *)&v199 - v31;
  v32 = a1[1];
  v206 = sub_1BC62D520();
  if (v206 >= v32)
  {
    if ((v32 & 0x8000000000000000) == 0)
    {
      if (v32)
        sub_1BC3D8F08(0, v32, 1, a1);
      return;
    }
    goto LABEL_210;
  }
  if (v32 >= 0)
    v33 = v32;
  else
    v33 = v32 + 1;
  if (v32 < -1)
    goto LABEL_219;
  v208 = v26;
  v203 = v17;
  v209 = v12;
  v214 = v32;
  v200 = a1;
  if (v32 < 2)
  {
    v36 = (char *)MEMORY[0x1E0DEE9D8];
    v228 = MEMORY[0x1E0DEE9D8];
    v216 = (id *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v32 != 1)
    {
      v140 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_172:
      v218 = v36;
      if (v140 < 2)
      {
LABEL_183:
        swift_bridgeObjectRelease();
        *(_QWORD *)((v228 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_1BC62C890();
        swift_bridgeObjectRelease();
        return;
      }
      v190 = *v200;
      while (1)
      {
        v191 = v140 - 2;
        if (v140 < 2)
          goto LABEL_204;
        if (!v190)
          goto LABEL_217;
        v192 = *(_QWORD *)&v218[16 * v191 + 32];
        v193 = *(_QWORD *)&v218[16 * v140 + 24];
        sub_1BC3D9628((char *)(v190 + 8 * v192), (id *)(v190 + 8 * *(_QWORD *)&v218[16 * v140 + 16]), (id *)(v190 + 8 * v193), v216);
        if (v2)
          goto LABEL_183;
        if (v193 < v192)
          goto LABEL_205;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v218 = sub_1BC504414((uint64_t)v218);
        v194 = v218;
        if (v191 >= *((_QWORD *)v218 + 2))
          goto LABEL_206;
        v195 = v218 + 32;
        v196 = &v218[16 * v191 + 32];
        *(_QWORD *)v196 = v192;
        *((_QWORD *)v196 + 1) = v193;
        v197 = *((_QWORD *)v194 + 2);
        if (v140 > v197)
          goto LABEL_207;
        v198 = v194;
        memmove(&v195[16 * v140 - 16], &v195[16 * v140], 16 * (v197 - v140));
        *((_QWORD *)v198 + 2) = v197 - 1;
        v140 = v197 - 1;
        if (v197 <= 2)
          goto LABEL_183;
      }
    }
  }
  else
  {
    v34 = v33 >> 1;
    type metadata accessor for MedicalRecordChartableSeries();
    v35 = sub_1BC62C8CC();
    *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) = v34;
    v216 = (id *)((v35 & 0xFFFFFFFFFFFFFF8) + 32);
    v228 = v35;
  }
  v226 = v19;
  v37 = 0;
  v38 = *a1;
  v202 = *a1 + 16;
  v201 = v38 - 8;
  v36 = (char *)MEMORY[0x1E0DEE9D8];
  v219 = v7;
  v39 = v214;
  v222 = v38;
LABEL_13:
  v40 = v37++;
  v218 = v36;
  v211 = v40;
  if (v37 >= v39)
  {
    v47 = v206;
    goto LABEL_69;
  }
  v41 = *(void **)(v38 + 8 * v40);
  v42 = *(id *)(v38 + 8 * v37);
  v43 = v41;
  v44 = v205;
  sub_1BC3D5D88(v205);
  v45 = v225;
  v46 = v226;
  v215 = *(char **)(v225 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v215)(v44, 1, v226) == 1)
  {
    sub_1BC62A6A0();
    sub_1BC36D71C(v44);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v207, v44, v46);
  }
  v48 = (uint64_t)v203;
  sub_1BC3D5D88((uint64_t)v203);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v215)(v48, 1, v46) == 1)
  {
    v49 = v204;
    sub_1BC62A6A0();
    sub_1BC36D71C(v48);
    v50 = v225;
  }
  else
  {
    v50 = v225;
    v49 = v204;
    (*(void (**)(char *, uint64_t, uint64_t))(v225 + 32))(v204, v48, v46);
  }
  v51 = v207;
  LODWORD(v213) = sub_1BC62A70C();
  v52 = *(void (**)(char *, uint64_t))(v50 + 8);
  v52(v49, v46);
  v210 = v52;
  v52(v51, v46);

  v40 = v211;
  v37 = v211 + 2;
  if (v211 + 2 >= v39)
    goto LABEL_61;
  v53 = (void **)(v202 + 8 * v211);
  while (1)
  {
    v223 = v37;
    v55 = (char *)*(v53 - 1);
    v54 = *v53;
    v56 = *(_QWORD *)((char *)*v53
                    + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets);
    if ((v56 & 0x8000000000000000) != 0 || (v56 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n();
      v70 = v54;
      v71 = v55;
      v57 = (uint64_t)sub_1BC3D6844(v56, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DB41C);
      swift_bridgeObjectRelease();
    }
    else
    {
      v57 = v56 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
      v58 = v54;
      v59 = v55;
    }
    v60 = v225;
    v227[0] = v57;
    sub_1BC3D668C(v227, (uint64_t (*)(uint64_t))sub_1BC505EE8, sub_1BC3D861C);
    if (v2)
      goto LABEL_218;
    swift_bridgeObjectRelease();
    v61 = v227[0];
    if (v227[0] < 0 || (v227[0] & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v72 = sub_1BC62D3B8();
      swift_release();
      if (!v72)
      {
LABEL_37:
        swift_release();
        v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56);
        v66 = (uint64_t)v212;
        v69(v212, 1, 1, v226);
LABEL_38:
        sub_1BC62A6A0();
        sub_1BC36D71C(v66);
        goto LABEL_39;
      }
    }
    else if (!*(_QWORD *)(v227[0] + 16))
    {
      goto LABEL_37;
    }
    if ((v61 & 0xC000000000000001) != 0)
    {
      v62 = (id)MEMORY[0x1BCCF24CC](0, v61);
    }
    else
    {
      if (!*(_QWORD *)(v61 + 16))
        goto LABEL_201;
      v62 = *(id *)(v61 + 32);
    }
    v63 = v62;
    swift_release();
    v64 = objc_msgSend(v63, sel_date);

    v65 = v212;
    sub_1BC62A724();

    v66 = (uint64_t)v65;
    v68 = v225;
    v67 = v226;
    v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v225 + 56);
    v69((char *)v66, 0, 1, v226);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v215)(v66, 1, v67) == 1)
      goto LABEL_38;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v217, v66, v67);
LABEL_39:
    v73 = *(_QWORD *)&v55[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
    if ((v73 & 0x8000000000000000) != 0 || (v73 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n();
      v74 = (uint64_t)sub_1BC3D6844(v73, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DB41C);
      swift_bridgeObjectRelease();
    }
    else
    {
      v74 = v73 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
    }
    v227[0] = v74;
    sub_1BC3D668C(v227, (uint64_t (*)(uint64_t))sub_1BC505EE8, sub_1BC3D861C);
    v2 = 0;
    swift_bridgeObjectRelease();
    v75 = v227[0];
    if (v227[0] < 0 || (v227[0] & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v84 = sub_1BC62D3B8();
      swift_release();
      if (!v84)
      {
LABEL_52:
        swift_release();
        v80 = (uint64_t)v209;
        v69(v209, 1, 1, v226);
        goto LABEL_53;
      }
    }
    else if (!*(_QWORD *)(v227[0] + 16))
    {
      goto LABEL_52;
    }
    if ((v75 & 0xC000000000000001) != 0)
    {
      v76 = (id)MEMORY[0x1BCCF24CC](0, v75);
    }
    else
    {
      if (!*(_QWORD *)(v75 + 16))
        goto LABEL_202;
      v76 = *(id *)(v75 + 32);
    }
    v77 = v76;
    swift_release();
    v78 = objc_msgSend(v77, sel_date);

    v79 = (uint64_t)v209;
    sub_1BC62A724();

    v80 = v79;
    v81 = v79;
    v82 = v226;
    v69((char *)v81, 0, 1, v226);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v215)(v80, 1, v82) != 1)
    {
      v83 = v208;
      (*(void (**)(char *, uint64_t, uint64_t))(v225 + 32))(v208, v80, v226);
      goto LABEL_54;
    }
LABEL_53:
    v83 = v208;
    sub_1BC62A6A0();
    sub_1BC36D71C(v80);
LABEL_54:
    v85 = v217;
    v36 = v218;
    v86 = sub_1BC62A70C();
    v87 = v83;
    v88 = v226;
    v89 = v210;
    v210(v87, v226);
    v89(v85, v88);

    if (((v213 ^ v86) & 1) != 0)
      break;
    v37 = v223 + 1;
    ++v53;
    v39 = v214;
    if (v214 == v223 + 1)
    {
      v37 = v214;
      goto LABEL_60;
    }
  }
  v39 = v214;
  v37 = v223;
LABEL_60:
  v40 = v211;
LABEL_61:
  v47 = v206;
  if ((v213 & 1) == 0)
  {
LABEL_69:
    if (v37 >= v39)
      goto LABEL_120;
    if (__OFSUB__(v37, v40))
      goto LABEL_209;
    if (v37 - v40 >= v47)
      goto LABEL_120;
    if (__OFADD__(v40, v47))
      goto LABEL_211;
    if (v40 + v47 >= v39)
      v95 = v39;
    else
      v95 = v40 + v47;
    v96 = v222;
    if (v95 < v40)
      goto LABEL_212;
    if (v37 == v95)
      goto LABEL_120;
    v97 = (char *)(v201 + 8 * v37);
    v98 = v225;
    v213 = v95;
LABEL_81:
    v100 = *(char **)(v96 + 8 * v37);
    v101 = v40;
    v215 = v97;
    v102 = (char **)v97;
    v223 = v37;
    while (1)
    {
      v103 = *v102;
      v104 = *(_QWORD *)&v100[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
      if ((v104 & 0x8000000000000000) != 0 || (v104 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        v117 = v100;
        v118 = v103;
        v105 = (uint64_t)sub_1BC3D6844(v104, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DB41C);
        swift_bridgeObjectRelease();
      }
      else
      {
        v105 = v104 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n();
        v106 = v100;
        v107 = v103;
      }
      v227[0] = v105;
      sub_1BC3D668C(v227, (uint64_t (*)(uint64_t))sub_1BC505EE8, sub_1BC3D861C);
      if (v2)
        goto LABEL_218;
      swift_bridgeObjectRelease();
      v108 = v227[0];
      if (v227[0] < 0 || (v227[0] & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        v119 = sub_1BC62D3B8();
        swift_release();
        if (!v119)
        {
LABEL_96:
          swift_release();
          v115 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56);
          v113 = (uint64_t)v221;
          v115(v221, 1, 1, v226);
LABEL_97:
          sub_1BC62A6A0();
          sub_1BC36D71C(v113);
          goto LABEL_98;
        }
      }
      else if (!*(_QWORD *)(v227[0] + 16))
      {
        goto LABEL_96;
      }
      if ((v108 & 0xC000000000000001) != 0)
      {
        v109 = (id)MEMORY[0x1BCCF24CC](0, v108);
      }
      else
      {
        if (!*(_QWORD *)(v108 + 16))
        {
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
          goto LABEL_208;
        }
        v109 = *(id *)(v108 + 32);
      }
      v110 = v109;
      swift_release();
      v111 = objc_msgSend(v110, sel_date);

      v112 = v221;
      sub_1BC62A724();

      v113 = (uint64_t)v112;
      v114 = v98;
      v115 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56);
      v116 = v226;
      v115((char *)v113, 0, 1, v226);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v113, 1, v116) == 1)
        goto LABEL_97;
      (*(void (**)(char *, uint64_t, uint64_t))(v114 + 32))(v224, v113, v116);
LABEL_98:
      v120 = *(_QWORD *)&v103[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
      if ((v120 & 0x8000000000000000) != 0 || (v120 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        v121 = (uint64_t)sub_1BC3D6844(v120, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DB41C);
        swift_bridgeObjectRelease();
      }
      else
      {
        v121 = v120 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n();
      }
      v227[0] = v121;
      sub_1BC3D668C(v227, (uint64_t (*)(uint64_t))sub_1BC505EE8, sub_1BC3D861C);
      v2 = 0;
      swift_bridgeObjectRelease();
      v122 = v227[0];
      if (v227[0] < 0 || (v227[0] & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        v130 = sub_1BC62D3B8();
        swift_release();
        if (!v130)
        {
LABEL_111:
          swift_release();
          v126 = (uint64_t)v219;
          v115(v219, 1, 1, v226);
          v128 = v225;
          goto LABEL_112;
        }
      }
      else if (!*(_QWORD *)(v227[0] + 16))
      {
        goto LABEL_111;
      }
      if ((v122 & 0xC000000000000001) != 0)
      {
        v123 = (id)MEMORY[0x1BCCF24CC](0, v122);
      }
      else
      {
        if (!*(_QWORD *)(v122 + 16))
          goto LABEL_186;
        v123 = *(id *)(v122 + 32);
      }
      v124 = v123;
      swift_release();
      v125 = objc_msgSend(v124, sel_date);

      v126 = (uint64_t)v219;
      sub_1BC62A724();

      v127 = v226;
      v115((char *)v126, 0, 1, v226);
      v128 = v225;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v225 + 48))(v126, 1, v127) != 1)
      {
        v129 = v220;
        (*(void (**)(char *, uint64_t, uint64_t))(v128 + 32))(v220, v126, v226);
        goto LABEL_113;
      }
LABEL_112:
      v129 = v220;
      sub_1BC62A6A0();
      sub_1BC36D71C(v126);
LABEL_113:
      v131 = v224;
      v132 = sub_1BC62A70C();
      v133 = v129;
      v134 = v132;
      v135 = *(void (**)(char *, uint64_t))(v128 + 8);
      v136 = v226;
      v135(v133, v226);
      v135(v131, v136);

      if ((v134 & 1) == 0)
      {
        v96 = v222;
        v99 = v223;
        v98 = v225;
LABEL_80:
        v37 = v99 + 1;
        v97 = v215 + 8;
        v40 = v211;
        if (v37 != v213)
          goto LABEL_81;
        v37 = v213;
        v36 = v218;
LABEL_120:
        if (v37 >= v40)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v36 = sub_1BC503AB4(0, *((_QWORD *)v36 + 2) + 1, 1, v36);
          v139 = *((_QWORD *)v36 + 2);
          v138 = *((_QWORD *)v36 + 3);
          v140 = v139 + 1;
          v38 = v222;
          if (v139 >= v138 >> 1)
          {
            v189 = sub_1BC503AB4((char *)(v138 > 1), v139 + 1, 1, v36);
            v38 = v222;
            v36 = v189;
          }
          *((_QWORD *)v36 + 2) = v140;
          v141 = v36 + 32;
          v142 = &v36[16 * v139 + 32];
          *(_QWORD *)v142 = v40;
          *((_QWORD *)v142 + 1) = v37;
          if (!v139)
          {
            v140 = 1;
LABEL_169:
            v39 = v214;
            if (v37 >= v214)
              goto LABEL_172;
            goto LABEL_13;
          }
          v218 = v36;
          while (2)
          {
            v143 = v140 - 1;
            if (v140 >= 4)
            {
              v148 = &v141[16 * v140];
              v149 = *((_QWORD *)v148 - 8);
              v150 = *((_QWORD *)v148 - 7);
              v154 = __OFSUB__(v150, v149);
              v151 = v150 - v149;
              if (v154)
                goto LABEL_191;
              v153 = *((_QWORD *)v148 - 6);
              v152 = *((_QWORD *)v148 - 5);
              v154 = __OFSUB__(v152, v153);
              v146 = v152 - v153;
              v147 = v154;
              if (v154)
                goto LABEL_192;
              v155 = v140 - 2;
              v156 = &v141[16 * v140 - 32];
              v158 = *(_QWORD *)v156;
              v157 = *((_QWORD *)v156 + 1);
              v154 = __OFSUB__(v157, v158);
              v159 = v157 - v158;
              if (v154)
                goto LABEL_194;
              v154 = __OFADD__(v146, v159);
              v160 = v146 + v159;
              if (v154)
                goto LABEL_197;
              if (v160 >= v151)
              {
                v178 = &v141[16 * v143];
                v180 = *(_QWORD *)v178;
                v179 = *((_QWORD *)v178 + 1);
                v154 = __OFSUB__(v179, v180);
                v181 = v179 - v180;
                if (v154)
                  goto LABEL_203;
                v171 = v146 < v181;
              }
              else
              {
LABEL_140:
                if ((v147 & 1) != 0)
                  goto LABEL_193;
                v155 = v140 - 2;
                v161 = &v141[16 * v140 - 32];
                v163 = *(_QWORD *)v161;
                v162 = *((_QWORD *)v161 + 1);
                v164 = __OFSUB__(v162, v163);
                v165 = v162 - v163;
                v166 = v164;
                if (v164)
                  goto LABEL_196;
                v167 = &v141[16 * v143];
                v169 = *(_QWORD *)v167;
                v168 = *((_QWORD *)v167 + 1);
                v154 = __OFSUB__(v168, v169);
                v170 = v168 - v169;
                if (v154)
                  goto LABEL_199;
                if (__OFADD__(v165, v170))
                  goto LABEL_200;
                if (v165 + v170 < v146)
                  goto LABEL_152;
                v171 = v146 < v170;
              }
              if (v171)
                v143 = v155;
            }
            else
            {
              if (v140 == 3)
              {
                v145 = *((_QWORD *)v36 + 4);
                v144 = *((_QWORD *)v36 + 5);
                v154 = __OFSUB__(v144, v145);
                v146 = v144 - v145;
                v147 = v154;
                goto LABEL_140;
              }
              v172 = *((_QWORD *)v36 + 4);
              v173 = *((_QWORD *)v36 + 5);
              v154 = __OFSUB__(v173, v172);
              v165 = v173 - v172;
              v166 = v154;
LABEL_152:
              if ((v166 & 1) != 0)
                goto LABEL_195;
              v174 = &v141[16 * v143];
              v176 = *(_QWORD *)v174;
              v175 = *((_QWORD *)v174 + 1);
              v154 = __OFSUB__(v175, v176);
              v177 = v175 - v176;
              if (v154)
                goto LABEL_198;
              if (v177 < v165)
                goto LABEL_169;
            }
            v182 = v143 - 1;
            if (v143 - 1 >= v140)
              goto LABEL_187;
            if (!v38)
              goto LABEL_215;
            v183 = &v141[16 * v182];
            v184 = *(_QWORD *)v183;
            v185 = &v141[16 * v143];
            v186 = *((_QWORD *)v185 + 1);
            sub_1BC3D9628((char *)(v38 + 8 * *(_QWORD *)v183), (id *)(v38 + 8 * *(_QWORD *)v185), (id *)(v38 + 8 * v186), v216);
            if (v2)
              goto LABEL_183;
            if (v186 < v184)
              goto LABEL_188;
            v187 = v218;
            if (v143 > *((_QWORD *)v218 + 2))
              goto LABEL_189;
            *(_QWORD *)v183 = v184;
            *(_QWORD *)&v141[16 * v182 + 8] = v186;
            v188 = *((_QWORD *)v187 + 2);
            if (v143 >= v188)
              goto LABEL_190;
            v36 = v187;
            v140 = v188 - 1;
            memmove(&v141[16 * v143], v185 + 16, 16 * (v188 - 1 - v143));
            *((_QWORD *)v36 + 2) = v188 - 1;
            v38 = v222;
            if (v188 <= 2)
              goto LABEL_169;
            continue;
          }
        }
LABEL_208:
        __break(1u);
LABEL_209:
        __break(1u);
LABEL_210:
        __break(1u);
LABEL_211:
        __break(1u);
LABEL_212:
        __break(1u);
        goto LABEL_213;
      }
      v96 = v222;
      if (!v222)
        goto LABEL_214;
      v137 = *v102;
      v100 = v102[1];
      *v102 = v100;
      v102[1] = v137;
      --v102;
      ++v101;
      v99 = v223;
      v98 = v225;
      if (v223 == v101)
        goto LABEL_80;
    }
  }
  if (v37 >= v40)
  {
    if (v40 < v37)
    {
      v90 = (uint64_t *)(v201 + 8 * v37);
      v91 = v37;
      v92 = v40;
      v93 = (uint64_t *)(v222 + 8 * v40);
      while (1)
      {
        if (v92 != --v91)
        {
          if (!v222)
            goto LABEL_216;
          v94 = *v93;
          *v93 = *v90;
          *v90 = v94;
        }
        ++v92;
        --v90;
        ++v93;
        if (v92 >= v91)
          goto LABEL_69;
      }
    }
    goto LABEL_69;
  }
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  swift_release();
  __break(1u);
LABEL_219:
  sub_1BC62D388();
  __break(1u);
}

void sub_1BC3D861C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  void *v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  char v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v131 = sub_1BC62A760();
  v129 = *(_QWORD *)(v131 - 8);
  v2 = MEMORY[0x1E0C80A78](v131);
  v130 = (char *)&v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v117 - v4;
  v6 = a1[1];
  v7 = sub_1BC62D520();
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_134;
    if (v6)
      sub_1BC3D9460(0, v6, 1, a1);
    return;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_142;
  v122 = v7;
  v119 = a1;
  if (v6 < 2)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    v133 = MEMORY[0x1E0DEE9D8];
    v127 = (id *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_101:
      v109 = v128;
      if (v15 >= 2)
      {
        v110 = *v119;
        do
        {
          v111 = v15 - 2;
          if (v15 < 2)
            goto LABEL_129;
          if (!v110)
            goto LABEL_141;
          v112 = v11;
          v113 = *(_QWORD *)&v11[16 * v111 + 32];
          v114 = *(_QWORD *)&v11[16 * v15 + 24];
          sub_1BC3D9C58((void **)(v110 + 8 * v113), (id *)(v110 + 8 * *(_QWORD *)&v11[16 * v15 + 16]), (id *)(v110 + 8 * v114), v127);
          if (v109)
            break;
          if (v114 < v113)
            goto LABEL_130;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v112 = sub_1BC504414((uint64_t)v112);
          if (v111 >= *((_QWORD *)v112 + 2))
            goto LABEL_131;
          v115 = &v112[16 * v111 + 32];
          *(_QWORD *)v115 = v113;
          *((_QWORD *)v115 + 1) = v114;
          v116 = *((_QWORD *)v112 + 2);
          if (v15 > v116)
            goto LABEL_132;
          memmove(&v112[16 * v15 + 16], &v112[16 * v15 + 32], 16 * (v116 - v15));
          v11 = v112;
          *((_QWORD *)v112 + 2) = v116 - 1;
          v15 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BC62C890();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v9 = v8 >> 1;
    sub_1BC34B6A0(0, &qword_1EF42CA48);
    v10 = sub_1BC62C8CC();
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    v127 = (id *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v133 = v10;
  }
  v12 = 0;
  v13 = *a1;
  v14 = *a1 + 16;
  v120 = *a1 - 8;
  v121 = v14;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v125 = v6;
  v132 = v13;
  while (1)
  {
    v16 = v12 + 1;
    v124 = v12;
    if (v12 + 1 < v6)
    {
      v17 = v11;
      v18 = *(void **)(v13 + 8 * v12);
      v19 = *(id *)(v13 + 8 * v16);
      v20 = v18;
      v21 = objc_msgSend(v19, sel_date);
      sub_1BC62A724();

      v22 = objc_msgSend(v20, sel_date);
      v23 = v130;
      sub_1BC62A724();

      LODWORD(v126) = sub_1BC62A70C();
      v24 = *(void (**)(char *, uint64_t))(v129 + 8);
      v25 = v23;
      v26 = v131;
      v24(v25, v131);
      v24(v5, v26);

      v6 = v125;
      v16 = v12 + 2;
      if (v12 + 2 < v6)
      {
        v27 = (id *)(v121 + 8 * v12);
        while (1)
        {
          v28 = v16;
          v29 = *(v27 - 1);
          v30 = *v27;
          v31 = v29;
          v32 = objc_msgSend(v30, sel_date);
          sub_1BC62A724();

          v33 = objc_msgSend(v31, sel_date);
          v34 = v130;
          sub_1BC62A724();

          LODWORD(v33) = sub_1BC62A70C();
          v35 = v34;
          v36 = v131;
          v24(v35, v131);
          v24(v5, v36);

          if (((v126 ^ v33) & 1) != 0)
            break;
          v16 = v28 + 1;
          ++v27;
          v6 = v125;
          if (v125 == v28 + 1)
          {
            v16 = v125;
            goto LABEL_22;
          }
        }
        v6 = v125;
        v16 = v28;
LABEL_22:
        v12 = v124;
      }
      v11 = v17;
      v13 = v132;
      if ((v126 & 1) != 0)
      {
        if (v16 < v12)
          goto LABEL_135;
        if (v12 < v16)
        {
          v37 = (uint64_t *)(v120 + 8 * v16);
          v38 = v16;
          v39 = v12;
          v40 = (uint64_t *)(v132 + 8 * v12);
          do
          {
            if (v39 != --v38)
            {
              if (!v13)
                goto LABEL_140;
              v41 = *v40;
              *v40 = *v37;
              *v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v16 < v6)
    {
      if (__OFSUB__(v16, v12))
        goto LABEL_133;
      if (v16 - v12 < v122)
        break;
    }
LABEL_50:
    if (v16 < v12)
      goto LABEL_128;
    v56 = v11;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v11 = v56;
    else
      v11 = sub_1BC503AB4(0, *((_QWORD *)v56 + 2) + 1, 1, v56);
    v58 = *((_QWORD *)v11 + 2);
    v57 = *((_QWORD *)v11 + 3);
    v15 = v58 + 1;
    v13 = v132;
    if (v58 >= v57 >> 1)
    {
      v108 = sub_1BC503AB4((char *)(v57 > 1), v58 + 1, 1, v11);
      v13 = v132;
      v11 = v108;
    }
    *((_QWORD *)v11 + 2) = v15;
    v59 = v11 + 32;
    v60 = &v11[16 * v58 + 32];
    *(_QWORD *)v60 = v12;
    *((_QWORD *)v60 + 1) = v16;
    v126 = v16;
    if (v58)
    {
      while (1)
      {
        v61 = v15 - 1;
        if (v15 >= 4)
        {
          v66 = &v59[16 * v15];
          v67 = *((_QWORD *)v66 - 8);
          v68 = *((_QWORD *)v66 - 7);
          v72 = __OFSUB__(v68, v67);
          v69 = v68 - v67;
          if (v72)
            goto LABEL_117;
          v71 = *((_QWORD *)v66 - 6);
          v70 = *((_QWORD *)v66 - 5);
          v72 = __OFSUB__(v70, v71);
          v64 = v70 - v71;
          v65 = v72;
          if (v72)
            goto LABEL_118;
          v73 = v15 - 2;
          v74 = &v59[16 * v15 - 32];
          v76 = *(_QWORD *)v74;
          v75 = *((_QWORD *)v74 + 1);
          v72 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          if (v72)
            goto LABEL_120;
          v72 = __OFADD__(v64, v77);
          v78 = v64 + v77;
          if (v72)
            goto LABEL_123;
          if (v78 >= v69)
          {
            v96 = &v59[16 * v61];
            v98 = *(_QWORD *)v96;
            v97 = *((_QWORD *)v96 + 1);
            v72 = __OFSUB__(v97, v98);
            v99 = v97 - v98;
            if (v72)
              goto LABEL_127;
            v89 = v64 < v99;
            goto LABEL_87;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v90 = *((_QWORD *)v11 + 4);
            v91 = *((_QWORD *)v11 + 5);
            v72 = __OFSUB__(v91, v90);
            v83 = v91 - v90;
            v84 = v72;
            goto LABEL_81;
          }
          v63 = *((_QWORD *)v11 + 4);
          v62 = *((_QWORD *)v11 + 5);
          v72 = __OFSUB__(v62, v63);
          v64 = v62 - v63;
          v65 = v72;
        }
        if ((v65 & 1) != 0)
          goto LABEL_119;
        v73 = v15 - 2;
        v79 = &v59[16 * v15 - 32];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v82 = __OFSUB__(v80, v81);
        v83 = v80 - v81;
        v84 = v82;
        if (v82)
          goto LABEL_122;
        v85 = &v59[16 * v61];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v72 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v72)
          goto LABEL_125;
        if (__OFADD__(v83, v88))
          goto LABEL_126;
        if (v83 + v88 >= v64)
        {
          v89 = v64 < v88;
LABEL_87:
          if (v89)
            v61 = v73;
          goto LABEL_89;
        }
LABEL_81:
        if ((v84 & 1) != 0)
          goto LABEL_121;
        v92 = &v59[16 * v61];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v72 = __OFSUB__(v93, v94);
        v95 = v93 - v94;
        if (v72)
          goto LABEL_124;
        if (v95 < v83)
          goto LABEL_14;
LABEL_89:
        v100 = v61 - 1;
        if (v61 - 1 >= v15)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13)
          goto LABEL_139;
        v101 = v11;
        v102 = &v59[16 * v100];
        v103 = *(_QWORD *)v102;
        v104 = &v59[16 * v61];
        v105 = *((_QWORD *)v104 + 1);
        v106 = v128;
        sub_1BC3D9C58((void **)(v13 + 8 * *(_QWORD *)v102), (id *)(v13 + 8 * *(_QWORD *)v104), (id *)(v13 + 8 * v105), v127);
        v128 = v106;
        if (v106)
          goto LABEL_112;
        if (v105 < v103)
          goto LABEL_114;
        if (v61 > *((_QWORD *)v101 + 2))
          goto LABEL_115;
        *(_QWORD *)v102 = v103;
        *(_QWORD *)&v59[16 * v100 + 8] = v105;
        v107 = *((_QWORD *)v101 + 2);
        if (v61 >= v107)
          goto LABEL_116;
        v15 = v107 - 1;
        memmove(&v59[16 * v61], v104 + 16, 16 * (v107 - 1 - v61));
        v11 = v101;
        *((_QWORD *)v101 + 2) = v107 - 1;
        v13 = v132;
        if (v107 <= 2)
          goto LABEL_14;
      }
    }
    v15 = 1;
LABEL_14:
    v6 = v125;
    v12 = v126;
    if (v126 >= v125)
      goto LABEL_101;
  }
  if (__OFADD__(v12, v122))
    goto LABEL_136;
  if (v12 + v122 >= v6)
    v42 = v6;
  else
    v42 = v12 + v122;
  if (v42 >= v12)
  {
    if (v16 != v42)
    {
      v118 = v11;
      v43 = v120 + 8 * v16;
      v123 = v42;
      do
      {
        v44 = v16;
        v45 = *(void **)(v13 + 8 * v16);
        v126 = v43;
        while (1)
        {
          v46 = *(void **)v43;
          v47 = v45;
          v48 = v46;
          v49 = objc_msgSend(v47, sel_date);
          sub_1BC62A724();

          v50 = objc_msgSend(v48, sel_date);
          v51 = v130;
          sub_1BC62A724();

          LOBYTE(v50) = sub_1BC62A70C();
          v52 = *(void (**)(char *, uint64_t))(v129 + 8);
          v53 = v51;
          v54 = v131;
          v52(v53, v131);
          v52(v5, v54);

          if ((v50 & 1) == 0)
            break;
          v13 = v132;
          if (!v132)
            goto LABEL_138;
          v55 = *(void **)v43;
          v45 = *(void **)(v43 + 8);
          *(_QWORD *)v43 = v45;
          *(_QWORD *)(v43 + 8) = v55;
          v43 -= 8;
          if (v44 == ++v12)
            goto LABEL_43;
        }
        v13 = v132;
LABEL_43:
        v16 = v44 + 1;
        v43 = v126 + 8;
        v12 = v124;
      }
      while (v44 + 1 != v123);
      v16 = v123;
      v11 = v118;
    }
    goto LABEL_50;
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  sub_1BC62D388();
  __break(1u);
}

void sub_1BC3D8F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __objc2_class_ro **p_info;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  id v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;

  v5 = v4;
  v56 = a1;
  sub_1BC3B3098(0, (unint64_t *)&qword_1ED6A4EA0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v60 = (char *)&v54 - v12;
  v13 = sub_1BC62A760();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v58 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v64 = (char *)&v54 - v17;
  v55 = a2;
  if (a3 != a2)
  {
    v61 = *a4;
    v18 = v61 + 8 * a3 - 8;
    p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell
                                 + 32);
    v63 = v14;
LABEL_6:
    v62 = a3;
    v21 = *(void **)(v61 + 8 * a3);
    v22 = v56;
    v57 = v18;
    while (1)
    {
      v23 = *(char **)v18;
      v24 = *(_QWORD *)((char *)&p_info[428]->flags + (_QWORD)v21);
      if ((v24 & 0x8000000000000000) != 0 || (v24 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        v36 = v21;
        v37 = v23;
        v25 = (uint64_t)sub_1BC3D6844(v24, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DB41C);
        swift_bridgeObjectRelease();
      }
      else
      {
        v25 = v24 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n();
        v26 = v21;
        v27 = v23;
      }
      v66 = v25;
      sub_1BC3D668C(&v66, (uint64_t (*)(uint64_t))sub_1BC505EE8, sub_1BC3D861C);
      if (v5)
      {
LABEL_47:
        swift_release();
        __break(1u);
        return;
      }
      swift_bridgeObjectRelease();
      v28 = v66;
      if (v66 < 0 || (v66 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        v38 = sub_1BC62D3B8();
        swift_release();
        v65 = v23;
        if (!v38)
        {
LABEL_21:
          swift_release();
          v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56);
          v33 = (uint64_t)v60;
          v35(v60, 1, 1, v13);
LABEL_22:
          sub_1BC62A6A0();
          sub_1BC36D71C(v33);
          goto LABEL_23;
        }
      }
      else
      {
        v29 = *(_QWORD *)(v66 + 16);
        v65 = v23;
        if (!v29)
          goto LABEL_21;
      }
      if ((v28 & 0xC000000000000001) != 0)
      {
        v30 = (id)MEMORY[0x1BCCF24CC](0, v28);
      }
      else
      {
        if (!*(_QWORD *)(v28 + 16))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        v30 = *(id *)(v28 + 32);
      }
      v31 = v30;
      swift_release();
      v32 = objc_msgSend(v31, sel_date);

      v33 = (uint64_t)v60;
      sub_1BC62A724();

      v34 = v63;
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56);
      v35((char *)v33, 0, 1, v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v33, 1, v13) == 1)
        goto LABEL_22;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v64, v33, v13);
LABEL_23:
      v39 = *(_QWORD *)((char *)&p_info[428]->flags + (_QWORD)v65);
      if ((v39 & 0x8000000000000000) != 0 || (v39 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        v40 = (uint64_t)sub_1BC3D6844(v39, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1BC3DB41C);
        swift_bridgeObjectRelease();
      }
      else
      {
        v40 = v39 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n();
      }
      v66 = v40;
      sub_1BC3D668C(&v66, (uint64_t (*)(uint64_t))sub_1BC505EE8, sub_1BC3D861C);
      v5 = 0;
      swift_bridgeObjectRelease();
      v41 = v66;
      if (v66 < 0 || (v66 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        v48 = sub_1BC62D3B8();
        swift_release();
        if (!v48)
        {
LABEL_36:
          swift_release();
          v45 = (uint64_t)v59;
          v35(v59, 1, 1, v13);
          v46 = v63;
          goto LABEL_37;
        }
      }
      else if (!*(_QWORD *)(v66 + 16))
      {
        goto LABEL_36;
      }
      if ((v41 & 0xC000000000000001) != 0)
      {
        v42 = (id)MEMORY[0x1BCCF24CC](0, v41);
      }
      else
      {
        if (!*(_QWORD *)(v41 + 16))
          goto LABEL_45;
        v42 = *(id *)(v41 + 32);
      }
      v43 = v42;
      swift_release();
      v44 = objc_msgSend(v43, sel_date);

      v45 = (uint64_t)v59;
      sub_1BC62A724();

      v35((char *)v45, 0, 1, v13);
      v46 = v63;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v45, 1, v13) != 1)
      {
        v47 = v58;
        (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v58, v45, v13);
        goto LABEL_38;
      }
LABEL_37:
      v47 = v58;
      sub_1BC62A6A0();
      sub_1BC36D71C(v45);
LABEL_38:
      v49 = v64;
      v50 = sub_1BC62A70C();
      v51 = v47;
      v52 = *(void (**)(char *, uint64_t))(v46 + 8);
      v52(v51, v13);
      v52(v49, v13);

      if ((v50 & 1) == 0)
      {
        v20 = v62;
        p_info = &OBJC_METACLASS____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell.info;
LABEL_5:
        a3 = v20 + 1;
        v18 = v57 + 8;
        if (a3 == v55)
          return;
        goto LABEL_6;
      }
      v20 = v62;
      p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell
                                   + 32);
      if (!v61)
        goto LABEL_46;
      v53 = *(char **)v18;
      v21 = *(void **)(v18 + 8);
      *(_QWORD *)v18 = v21;
      *(_QWORD *)(v18 + 8) = v53;
      v18 -= 8;
      if (v20 == ++v22)
        goto LABEL_5;
    }
  }
}

void sub_1BC3D9460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a1;
  v7 = sub_1BC62A760();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v30 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - v10;
  v27 = a2;
  if (a3 != a2)
  {
    v33 = *a4;
    v12 = v33 + 8 * a3 - 8;
LABEL_5:
    v13 = *(void **)(v33 + 8 * a3);
    v14 = v28;
    v29 = v12;
    while (1)
    {
      v15 = *(void **)v12;
      v16 = v13;
      v17 = v15;
      v18 = objc_msgSend(v16, sel_date);
      sub_1BC62A724();

      v19 = objc_msgSend(v17, sel_date);
      v20 = v30;
      sub_1BC62A724();

      LOBYTE(v19) = sub_1BC62A70C();
      v21 = a3;
      v22 = *(void (**)(char *, uint64_t))(v31 + 8);
      v23 = v20;
      v24 = v32;
      v22(v23, v32);
      v22(v11, v24);
      a3 = v21;

      if ((v19 & 1) == 0)
      {
LABEL_4:
        a3 = v21 + 1;
        v12 = v29 + 8;
        if (v21 + 1 == v27)
          return;
        goto LABEL_5;
      }
      if (!v33)
        break;
      v25 = *(void **)v12;
      v13 = *(void **)(v12 + 8);
      *(_QWORD *)v12 = v13;
      *(_QWORD *)(v12 + 8) = v25;
      v12 -= 8;
      if (v21 == ++v14)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BC3D9628(char *a1, id *a2, id *a3, id *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  char *v31;
  char *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char v44;
  void (*v45)(char *, uint64_t);
  unint64_t v46;
  char *v47;
  id *v48;
  unint64_t v49;
  id *v50;
  id *v51;
  id *v52;
  void *v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  char *v62;
  unint64_t v63;
  char *v64;
  char v65;
  void (*v66)(char *, uint64_t);
  id *v67;
  uint64_t result;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  id *v73;
  void **v74;
  unint64_t v75;
  id *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  void **v83;
  id *v84;

  sub_1BC3B3098(0, (unint64_t *)&qword_1ED6A4EA0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v72 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v71 = (uint64_t)&v69 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v75 = (unint64_t)&v69 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v69 - v15;
  v78 = sub_1BC62A760();
  v80 = *(_QWORD *)(v78 - 8);
  v17 = MEMORY[0x1E0C80A78](v78);
  v70 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v77 = (char *)&v69 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v21);
  v79 = (char *)&v69 - v23;
  v24 = (char *)a2 - a1;
  v25 = (char *)a2 - a1 + 7;
  if ((char *)a2 - a1 >= 0)
    v25 = (char *)a2 - a1;
  v26 = v25 >> 3;
  v76 = a3;
  v27 = (char *)a3 - (char *)a2;
  v28 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v28 = (char *)a3 - (char *)a2;
  v29 = v28 >> 3;
  v81 = a1;
  v84 = (id *)a1;
  v73 = a4;
  v83 = a4;
  if (v26 >= v28 >> 3)
  {
    if (v27 >= -7)
    {
      v48 = v73;
      if (v73 != a2 || &a2[v29] <= v73)
        memmove(v73, a2, 8 * v29);
      v49 = (unint64_t)&v48[v29];
      v82 = v49;
      v84 = a2;
      if (v27 >= 8 && v81 < (char *)a2)
      {
        v50 = v76 - 1;
        v51 = a2;
        do
        {
          v76 = a2;
          v52 = (id *)(v49 - 8);
          v53 = *--v51;
          v54 = (void **)*(id *)(v49 - 8);
          v79 = v53;
          v55 = v71;
          v74 = v54;
          sub_1BC3D5D88(v71);
          v56 = v80;
          v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
          v58 = v78;
          if (v57(v55, 1, v78) == 1)
          {
            sub_1BC62A6A0();
            sub_1BC36D71C(v55);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v77, v55, v58);
          }
          v59 = (uint64_t)v72;
          sub_1BC3D5D88((uint64_t)v72);
          v60 = v59;
          v61 = v57(v59, 1, v58);
          v75 = v49;
          v62 = v70;
          if (v61 == 1)
          {
            sub_1BC62A6A0();
            sub_1BC36D71C(v60);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v70, v60, v58);
          }
          v63 = (unint64_t)(v50 + 1);
          v64 = v77;
          v65 = sub_1BC62A70C();
          v66 = *(void (**)(char *, uint64_t))(v56 + 8);
          v66(v62, v58);
          v66(v64, v58);

          if ((v65 & 1) != 0)
          {
            v49 = v75;
            v67 = v73;
            if ((id *)v63 != v76 || v50 >= v76)
              *v50 = *v51;
            v84 = v51;
          }
          else
          {
            v82 = (unint64_t)v52;
            v51 = v76;
            v67 = v73;
            if (v63 < v75 || (unint64_t)v50 >= v75 || v63 != v75)
              *v50 = *v52;
            v49 = (unint64_t)v52;
          }
          if (v49 <= (unint64_t)v67)
            break;
          --v50;
          a2 = v51;
        }
        while (v51 > (id *)v81);
      }
      goto LABEL_55;
    }
  }
  else if (v24 >= -7)
  {
    v30 = v73;
    v31 = v81;
    v77 = v22;
    if (v73 != (id *)v81 || &v81[8 * v26] <= (char *)v73)
      memmove(v73, v81, 8 * v26);
    v74 = &v30[v26];
    v82 = (unint64_t)v74;
    if (v24 >= 8 && a2 < v76)
    {
      v72 = v16;
      do
      {
        v81 = v31;
        v32 = (char *)a2;
        v33 = *v30;
        v34 = *a2;
        v35 = v33;
        sub_1BC3D5D88((uint64_t)v16);
        v36 = v80;
        v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
        v38 = v78;
        if (v37(v16, 1, v78) == 1)
        {
          sub_1BC62A6A0();
          sub_1BC36D71C((uint64_t)v16);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v79, v16, v38);
        }
        v39 = v38;
        v40 = v75;
        sub_1BC3D5D88(v75);
        if (v37((char *)v40, 1, v38) == 1)
        {
          v41 = v77;
          sub_1BC62A6A0();
          sub_1BC36D71C(v40);
          v42 = v80;
        }
        else
        {
          v42 = v80;
          v41 = v77;
          (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v77, v40, v38);
        }
        v43 = v79;
        v44 = sub_1BC62A70C();
        v45 = *(void (**)(char *, uint64_t))(v42 + 8);
        v45(v41, v39);
        v45(v43, v39);

        v16 = v72;
        if ((v44 & 1) != 0)
        {
          v46 = (unint64_t)(v32 + 8);
          v47 = v81;
          if (v81 < v32 || (unint64_t)v81 >= v46 || v81 != v32)
            *(_QWORD *)v81 = *(_QWORD *)v32;
        }
        else
        {
          v47 = v81;
          if (v81 != (char *)v30)
            *(_QWORD *)v81 = *v30;
          v83 = ++v30;
          v46 = (unint64_t)v32;
        }
        v31 = v47 + 8;
        v84 = (id *)v31;
        if (v30 >= v74)
          break;
        a2 = (id *)v46;
      }
      while (v46 < (unint64_t)v76);
    }
LABEL_55:
    sub_1BC503C80(&v84, &v83, &v82);
    return 1;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3D9C58(void **a1, id *a2, id *a3, id *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  id *v28;
  id *v29;
  unint64_t v30;
  id *v31;
  id *v32;
  unint64_t v33;
  id *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  id *v45;
  uint64_t result;
  uint64_t v47;
  void **v48;
  id *v49;
  unint64_t v50;
  void **v51;
  id *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void **v58;
  id *v59;

  v8 = sub_1BC62A760();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v54 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v52 = a3;
  v53 = (char *)&v47 - v11;
  v12 = (char *)a2 - (char *)a1;
  v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v13 = (char *)a2 - (char *)a1;
  v14 = v13 >> 3;
  v15 = (char *)a3 - (char *)a2;
  v16 = v15 / 8;
  v59 = a1;
  v49 = a4;
  v58 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_43;
    v29 = v49;
    if (v49 != a2 || &a2[v16] <= v49)
      memmove(v49, a2, 8 * v16);
    v30 = (unint64_t)&v29[v16];
    v57 = (_QWORD *)v30;
    v59 = a2;
    if (v15 < 8 || a1 >= a2)
      goto LABEL_42;
    v31 = v52 - 1;
    v32 = a2;
    v48 = a1;
    while (1)
    {
      v52 = a2;
      v50 = v30;
      v51 = v31 + 1;
      v34 = (id *)(v30 - 8);
      v35 = *--v32;
      v36 = *(id *)(v30 - 8);
      v37 = v35;
      v38 = objc_msgSend(v36, sel_date);
      v39 = v53;
      sub_1BC62A724();

      v40 = objc_msgSend(v37, sel_date);
      v41 = v54;
      sub_1BC62A724();

      LOBYTE(v40) = sub_1BC62A70C();
      v42 = *(void (**)(char *, uint64_t))(v55 + 8);
      v43 = v41;
      v44 = v56;
      v42(v43, v56);
      v42(v39, v44);

      if ((v40 & 1) != 0)
        break;
      v57 = v34;
      v32 = v52;
      if ((unint64_t)v51 < v50 || (unint64_t)v31 >= v50)
      {
        *v31 = *v34;
        v30 = (unint64_t)v34;
        goto LABEL_30;
      }
      v33 = (unint64_t)v48;
      v45 = v49;
      if (v51 != (void **)v50)
        *v31 = *v34;
      v30 = (unint64_t)v34;
      if (v34 <= v45)
        goto LABEL_42;
LABEL_31:
      --v31;
      a2 = v32;
      if ((unint64_t)v32 <= v33)
        goto LABEL_42;
    }
    v30 = v50;
    if (v51 != v52 || v31 >= v52)
      *v31 = *v32;
    v59 = v32;
LABEL_30:
    v33 = (unint64_t)v48;
    if (v30 <= (unint64_t)v49)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    v17 = v49;
    if (v49 != a1 || &a1[v14] <= v49)
      memmove(v49, a1, 8 * v14);
    v51 = &v17[v14];
    v57 = v51;
    if (v12 >= 8 && a2 < v52)
    {
      v18 = v53;
      do
      {
        v19 = *v17;
        v20 = *a2;
        v21 = v19;
        v22 = objc_msgSend(v20, sel_date);
        sub_1BC62A724();

        v23 = objc_msgSend(v21, sel_date);
        v24 = v54;
        sub_1BC62A724();

        LOBYTE(v23) = sub_1BC62A70C();
        v25 = *(void (**)(char *, uint64_t))(v55 + 8);
        v26 = v24;
        v27 = v56;
        v25(v26, v56);
        v25(v18, v27);

        if ((v23 & 1) != 0)
        {
          v28 = a2 + 1;
          if (a1 < a2 || a1 >= v28 || a1 != a2)
            *a1 = *a2;
        }
        else
        {
          if (a1 != v17)
            *a1 = *v17;
          v58 = ++v17;
          v28 = a2;
        }
        v59 = ++a1;
        if (v17 >= v51)
          break;
        a2 = v28;
      }
      while (v28 < v52);
    }
LABEL_42:
    sub_1BC503C80(&v59, &v58, &v57);
    return 1;
  }
LABEL_43:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t (*sub_1BC3DA0C0(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC3DA214(v6, a2, a3);
  return sub_1BC3DA114;
}

uint64_t (*sub_1BC3DA118(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC3DA280(v6, a2, a3);
  return sub_1BC3DA114;
}

uint64_t (*sub_1BC3DA16C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC3DA2EC(v6, a2, a3);
  return sub_1BC3DA114;
}

uint64_t (*sub_1BC3DA1C0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC3DA360(v6, a2, a3);
  return sub_1BC3DA114;
}

uint64_t (*sub_1BC3DA214(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCF24CC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s15HealthRecordsUI28HealthRecordsSupportedChangeVwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1BC3DA280(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCF24CC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return j__s15HealthRecordsUI12RegistryListVwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1BC3DA2EC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCF24CC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return destroy for RegistryList;
  }
  __break(1u);
  return result;
}

uint64_t destroy for RegistryList()
{
  return swift_release();
}

void (*sub_1BC3DA360(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCF24CC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for HealthRecordsSupportedChange;
  }
  __break(1u);
  return result;
}

void destroy for HealthRecordsSupportedChange(id *a1)
{

}

uint64_t sub_1BC3DA3D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, &qword_1EF42D068, (unint64_t *)&qword_1EF4290A0, 0x1E0CB3718, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42D070, &qword_1EF42D068, (unint64_t *)&qword_1EF4290A0, 0x1E0CB3718);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DA618(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, (unint64_t *)&qword_1EF429700, &qword_1ED6A52D8, 0x1E0CB6858, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42CF40, (unint64_t *)&qword_1EF429700, &qword_1ED6A52D8, 0x1E0CB6858);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, &qword_1ED6A52D8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DA85C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, (unint64_t *)&qword_1EF42C668, (unint64_t *)&qword_1EF4299F0, (uint64_t)off_1E74D0698, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42CF58, (unint64_t *)&qword_1EF42C668, (unint64_t *)&qword_1EF4299F0, (uint64_t)off_1E74D0698);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DAAA0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, &qword_1EF42D048, &qword_1EF42D040, 0x1E0CB68A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42D050, &qword_1EF42D048, &qword_1EF42D040, 0x1E0CB68A0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, &qword_1EF42D040);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DACE4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, (unint64_t *)&qword_1ED6A3220, &qword_1ED6A48A0, 0x1E0CB6A88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(qword_1EF42D0A0, (unint64_t *)&qword_1ED6A3220, &qword_1ED6A48A0, 0x1E0CB6A88);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DAF28(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1BC3DBD74(a1, a2, a3, (uint64_t (*)(uint64_t))_s12SizedSectionCMa, &qword_1EF42CF70, &qword_1EF42CF78, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1BC3DA118);
}

uint64_t sub_1BC3DAF4C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1BC3DBD74(a1, a2, a3, (uint64_t (*)(uint64_t))_s11SizedRecordCMa, &qword_1EF42CF80, (unint64_t *)&qword_1EF42CF88, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1BC3DA118);
}

uint64_t sub_1BC3DAF70(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1BC3DBD74(a1, a2, a3, (uint64_t (*)(uint64_t))_s15SizedValueGroupCMa, &qword_1EF42CF90, (unint64_t *)&qword_1EF42CF98, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1BC3DA118);
}

uint64_t sub_1BC3DAF94(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1BC3DBD74(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateSection, &qword_1EF432430, &qword_1EF42D028, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1BC3DA16C);
}

uint64_t sub_1BC3DAFB8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, &qword_1EF42D078, &qword_1EF429110, 0x1E0CB6CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42D080, &qword_1EF42D078, &qword_1EF429110, 0x1E0CB6CD0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, &qword_1EF429110);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DB1FC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t i;
  uint64_t (*v14)();
  id *v15;
  id v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3B3098(0, &qword_1EF42D088, v11, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordChartableSeries, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DD8D0(&qword_1EF42D090, &qword_1EF42D088, v12, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordChartableSeries);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v14 = sub_1BC3DA1C0(v18, i, a3);
          v16 = *v15;
          ((void (*)(void (**)(id *), _QWORD))v14)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v16;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for MedicalRecordChartableSeries();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DB41C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, (unint64_t *)&qword_1EF42CA58, &qword_1EF42CA48, 0x1E0CB63A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42D020, (unint64_t *)&qword_1EF42CA58, &qword_1EF42CA48, 0x1E0CB63A0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, &qword_1EF42CA48);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DB660(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1BC3DBD74(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription, &qword_1EF42D058, &qword_1EF42D060, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1BC3DA118);
}

uint64_t sub_1BC3DB684(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, &qword_1EF42D030, &qword_1EF42C208, 0x1E0CB6CE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42D038, &qword_1EF42D030, &qword_1EF42C208, 0x1E0CB6CE8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, &qword_1EF42C208);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DB8C8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, (unint64_t *)&qword_1EF42C9D8, &qword_1EF429570, 0x1E0DC3F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42CFD8, (unint64_t *)&qword_1EF42C9D8, &qword_1EF429570, 0x1E0DC3F20);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, &qword_1EF429570);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DBB0C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, (unint64_t *)&qword_1EF42BCF8, (unint64_t *)&qword_1EF431480, 0x1E0D2EE90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42CF50, (unint64_t *)&qword_1EF42BCF8, (unint64_t *)&qword_1EF431480, 0x1E0D2EE90);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DBD50(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1BC3DBD74(a1, a2, a3, (uint64_t (*)(uint64_t))_s10SizedValueCMa, &qword_1EF42CF60, (unint64_t *)&qword_1EF42CF68, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1BC3DA118);
}

uint64_t sub_1BC3DBD74(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, unint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  void (*v23)(_BYTE *, _QWORD);
  uint64_t *v24;
  uint64_t v25;
  uint64_t result;
  _BYTE v27[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        sub_1BC3B3098(0, a5, 255, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        v20 = v19;
        v21 = sub_1BC3DD8D0(a6, a5, 255, a4);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v23 = (void (*)(_BYTE *, _QWORD))a7(v27, i, a3, v20, v21);
          v25 = *v24;
          swift_retain();
          v23(v27, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DBF9C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, &qword_1EF42D008, (unint64_t *)&qword_1EF42D000, 0x1E0CB69B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42D010, &qword_1EF42D008, (unint64_t *)&qword_1EF42D000, 0x1E0CB69B0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42D000);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DC1E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, &qword_1EF42CF30, (unint64_t *)&qword_1EF42CF28, 0x1E0CB6BC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42CF38, &qword_1EF42CF30, (unint64_t *)&qword_1EF42CF28, 0x1E0CB6BC8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42CF28);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC3DC424(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC3DD918(0, &qword_1EF42CFE8, &qword_1EF42CFE0, 0x1E0CB6BC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC3DDB20(&qword_1EF42CFF0, &qword_1EF42CFE8, &qword_1EF42CFE0, 0x1E0CB6BC0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC3DA0C0(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC34B6A0(0, &qword_1EF42CFE0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t *sub_1BC3DC668(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;

  a2[5] = a3;
  a2[6] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  v8 = MEMORY[0x1E0DEE9D8];
  a2[7] = 0;
  a2[8] = v8;
  return a2;
}

uint64_t sub_1BC3DC6C4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1BC34E718(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1BC3DC73C(unint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  id v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v7)
      break;
    v16 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    v9 = 0;
    while (v7 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1BCCF24CC](v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      v14 = v10;
      sub_1BC3D4D64((uint64_t *)&v14, a2, a3, a4, &v15);

      if (v4)
        return swift_release();
      ++v9;
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      if (v7 == v9)
        return v16;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC3DC8A8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1BC62D3B8())
  {
    for (i = 4; ; ++i)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF24CC](i - 4, a1) : *(id *)(a1 + 8 * i);
      v7 = v6;
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v12 = v6;
      sub_1BC3D5900(&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v11)
      {
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC3DCA40(char *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char **v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  NSObject *v28;
  char *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  void *v41;
  objc_class *v42;
  char *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  void *v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  void *v66;
  objc_super v67;
  uint64_t v68;
  _QWORD v69[5];
  id v70[5];

  v70[4] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1BC62BB34();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  MEMORY[0x1E0C80A78](v4);
  v58 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0DEE9D8];
  v68 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)a1 >> 62)
    goto LABEL_40;
  v7 = *(_QWORD *)(((unint64_t)a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_1BC62D3B8())
  {
    v9 = 0;
    v52 = (unint64_t)a1 & 0xC000000000000001;
    v49 = a1 + 32;
    v10 = &selRef_viewIsAppearing_;
    *(_QWORD *)&v8 = 138543618;
    v56 = v8;
    v55 = MEMORY[0x1E0DEE9B8] + 8;
    v57 = a2;
    v50 = a1;
    v51 = v7;
    while (1)
    {
      if (v52)
      {
        v11 = v9;
        v54 = MEMORY[0x1BCCF24CC](v9, a1);
        v12 = v9 + 1;
        if (__OFADD__(v11, 1))
          goto LABEL_39;
      }
      else
      {
        v54 = *(_QWORD *)&v49[8 * v9];
        swift_retain();
        v13 = __OFADD__(v9, 1);
        v12 = v9 + 1;
        if (v13)
          goto LABEL_39;
      }
      v53 = v12;
      v14 = v54;
      swift_beginAccess();
      v15 = *(_QWORD *)(v14 + 64);
      v69[0] = v6;
      if (v15 >> 62)
        break;
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      v17 = a2;
      if (v16)
        goto LABEL_13;
LABEL_29:
      swift_bridgeObjectRelease();
      v38 = v6;
LABEL_30:
      swift_bridgeObjectRelease();

      if (v38 >> 62)
      {
        swift_bridgeObjectRetain();
        v46 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
        if (v46)
        {
LABEL_32:
          v40 = v54;
          sub_1BC34E674(v54 + 16, (uint64_t)v69);
          v41 = *(void **)(v40 + 56);
          v42 = (objc_class *)type metadata accessor for MedicalRecordChartableSeries();
          v43 = (char *)objc_allocWithZone(v42);
          sub_1BC34E674((uint64_t)v69, (uint64_t)&v43[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining]);
          *(_QWORD *)&v43[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets] = v38;
          *(_QWORD *)&v43[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors] = v41;
          v67.receiver = v43;
          v67.super_class = v42;
          v44 = v41;
          objc_msgSendSuper2(&v67, sel_init);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v69);
          v45 = swift_release();
          MEMORY[0x1BCCF1B30](v45);
          if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          sub_1BC62C8D8();
          sub_1BC62C890();
          a2 = v57;
          goto LABEL_5;
        }
      }
      else if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_32;
      }
      swift_release();
      swift_bridgeObjectRelease();
LABEL_5:
      v9 = v53;
      if (v53 == v51)
      {
        swift_bridgeObjectRelease();
        return v68;
      }
    }
    swift_bridgeObjectRetain_n();
    v39 = a2;
    v16 = sub_1BC62D3B8();
    if (!v16)
      goto LABEL_29;
LABEL_13:
    v65 = v15 & 0xC000000000000001;
    v6 = 4;
    a1 = v58;
    v63 = v16;
    v64 = v15;
    while (1)
    {
      v18 = v65 ? (id)MEMORY[0x1BCCF24CC](v6 - 4, v15) : *(id *)(v15 + 8 * v6);
      v19 = v18;
      v20 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v70[0] = 0;
      if (objc_msgSend(v18, v10[228], a2, v70))
      {
        v21 = v70[0];

        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v69[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v69[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();
      }
      else
      {
        v22 = v70[0];
        v23 = (void *)sub_1BC62A55C();

        swift_willThrow();
        sub_1BC62BAE0();
        v24 = v19;
        v25 = v23;
        v26 = v24;
        v27 = v23;
        v28 = sub_1BC62BB28();
        v29 = a1;
        v30 = sub_1BC62CAAC();
        if (os_log_type_enabled(v28, v30))
        {
          v31 = swift_slowAlloc();
          v60 = 0;
          v32 = v31;
          v33 = (_QWORD *)swift_slowAlloc();
          v59 = (void *)swift_slowAlloc();
          v70[0] = v59;
          *(_DWORD *)v32 = v56;
          *(_QWORD *)(v32 + 4) = v26;
          *v33 = v26;

          *(_WORD *)(v32 + 12) = 2082;
          v66 = v23;
          v34 = v23;
          sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
          v35 = sub_1BC62C6E0();
          *(_QWORD *)(v32 + 14) = sub_1BC4991F0(v35, v36, (uint64_t *)v70);
          a2 = v57;
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1BC30A000, v28, v30, "Unable to convert chartable coded quantity set %{public}@: %{public}s", (uint8_t *)v32, 0x16u);
          sub_1BC3DD918(0, (unint64_t *)&qword_1ED6A4B80, (unint64_t *)&qword_1ED6A4E60, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v33, -1, -1);
          v37 = v59;
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v37, -1, -1);
          MEMORY[0x1BCCF36A8](v32, -1, -1);

          a1 = v58;
          (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v62);

        }
        else
        {

          (*(void (**)(char *, uint64_t))(v61 + 8))(v29, v62);
          a1 = v29;
        }
        v10 = &selRef_viewIsAppearing_;
      }
      v15 = v64;
      ++v6;
      if (v20 == v63)
      {
        swift_bridgeObjectRelease();
        v38 = v69[0];
        a1 = v50;
        v6 = MEMORY[0x1E0DEE9D8];
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1BC3DD134(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[5];
  __int128 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v41[0] = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v6 = a1 + 32;
    do
    {
      sub_1BC34E674(v6, (uint64_t)&v42);
      v7 = v44;
      v8 = v45;
      __swift_project_boxed_opaque_existential_1Tm(&v42, v44);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8))
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v42);
      }
      else
      {
        sub_1BC34E718(&v42, (uint64_t)v48);
        v9 = v41[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC3BDACC(0, *(_QWORD *)(v9 + 16) + 1, 1);
          v9 = v41[0];
        }
        v11 = *(_QWORD *)(v9 + 16);
        v10 = *(_QWORD *)(v9 + 24);
        if (v11 >= v10 >> 1)
          sub_1BC3BDACC(v10 > 1, v11 + 1, 1);
        v12 = v49;
        v13 = v50;
        v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v48, v49);
        MEMORY[0x1E0C80A78](v14);
        v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v17 + 16))(v16);
        sub_1BC3DC6C4(v11, (uint64_t)v16, v41, v12, v13);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      }
      v6 += 40;
      --v5;
    }
    while (v5);
    v4 = (_QWORD *)v41[0];
  }
  swift_bridgeObjectRelease();
  v18 = v4[2];
  if (v18 >= a2)
  {
    if (v18)
    {
      v38[1] = v4;
      v20 = (uint64_t)(v4 + 4);
      v51 = MEMORY[0x1E0DEE9E0];
      do
      {
        v39 = v20;
        v40 = v18;
        sub_1BC34E674(v20, (uint64_t)v48);
        v25 = v49;
        v26 = v50;
        __swift_project_boxed_opaque_existential_1Tm(v48, v49);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 16))(&v42, v25, v26);
        v27 = v42;
        v28 = v43;
        v29 = v44;
        v30 = v45;
        v31 = v46;
        v32 = v47;
        v33 = sub_1BC3DDA7C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BC62D184();
        v34 = v51;
        if (*(_QWORD *)(v51 + 16) && (sub_1BC559254((uint64_t)v41), v34 = v51, (v35 & 1) != 0))
        {
          swift_retain();
          sub_1BC3DDAC0((uint64_t)v41);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1BC3DDAC0((uint64_t)v41);
          type metadata accessor for MedicalRecordChartableSeriesCollector();
          v21 = swift_allocObject();
          v51 = v33;
          v22 = (_QWORD *)v21;
          *(_QWORD *)(v21 + 40) = &type metadata for TransientConceptForChart;
          *(_QWORD *)(v21 + 48) = &protocol witness table for TransientConceptForChart;
          v23 = swift_allocObject();
          v22[2] = v23;
          *(_OWORD *)(v23 + 16) = v27;
          *(_BYTE *)(v23 + 32) = v28;
          *(_QWORD *)(v23 + 40) = v29;
          *(_QWORD *)(v23 + 48) = v30;
          *(_BYTE *)(v23 + 56) = v31;
          *(_BYTE *)(v23 + 57) = v32;
          v22[7] = 0;
          v22[8] = MEMORY[0x1E0DEE9D8];
          v42 = v27;
          v43 = v28;
          v44 = v29;
          v45 = v30;
          v46 = v31;
          v47 = v32;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1BC62D184();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v42 = v34;
          sub_1BC48C8A0((uint64_t)v22, (uint64_t)v41, isUniquelyReferenced_nonNull_native);
          v51 = v42;
          swift_bridgeObjectRelease();
          sub_1BC3DDAC0((uint64_t)v41);
        }
        sub_1BC3D51C4(v48);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
        v20 = v39 + 40;
        v18 = v40 - 1;
      }
      while (v40 != 1);
    }
    swift_release();
    v36 = swift_bridgeObjectRetain();
    v4 = sub_1BC3D72C8(v36, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1BC4DFCEC);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_release();
    sub_1BC3DD57C();
    swift_allocError();
    *(_QWORD *)v19 = 0;
    *(_BYTE *)(v19 + 8) = 1;
    swift_willThrow();
  }
  return v4;
}

unint64_t sub_1BC3DD57C()
{
  unint64_t result;

  result = qword_1EF42CD68;
  if (!qword_1EF42CD68)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordChartingError, &type metadata for MedicalRecordChartingError);
    atomic_store(result, (unint64_t *)&qword_1EF42CD68);
  }
  return result;
}

uint64_t *sub_1BC3DD5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  uint64_t v14;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicalRecordChartableSeriesCollector();
  v10 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v10[5] = a3;
  v10[6] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v9, a3);
  v12 = MEMORY[0x1E0DEE9D8];
  v10[7] = 0;
  v10[8] = v12;
  return v10;
}

uint64_t type metadata accessor for MedicalRecordChartabilityDeterminer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MedicalRecordChartableSeries()
{
  return objc_opt_self();
}

uint64_t sub_1BC3DD6B8()
{
  return type metadata accessor for MedicalRecordChartabilityResult();
}

void sub_1BC3DD6C0()
{
  unint64_t v0;

  sub_1BC3B3098(319, (unint64_t *)&qword_1ED6A4EA0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MedicalRecordChartabilityResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordChartabilityResult.shouldProduceAtLeastOneOverlay.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordChartabilityResult.__allocating_init(configuration:masterDataSource:seriesDataSources:outOfRangeDataSource:noRangeDataSource:latestChartableDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for MedicalRecordChartabilityDeterminer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordChartabilityDeterminer.determineChartability(for:records:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MedicalRecordChartabilityDeterminer.determineChartability(for:chartPointRepresentables:chartSetSize:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x60))(a1, a2, a3, a4 & 1);
}

uint64_t type metadata accessor for MedicalRecordChartableSeriesCollector()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedicalRecordChartableSeriesCollector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordChartableSeriesCollector.__allocating_init(chartDefining:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeriesCollector.collect(record:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeriesCollector.allUnits.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeriesCollector.chartDataSourceSeries(compatibleWith:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t method lookup function for MedicalRecordChartableSeries()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordChartableSeries.__allocating_init(chartDefining:chartableQuantities:unit:preferredColors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeries.createDataSource(with:unit:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeries.outOfRangeQuantitySets()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeries.noRangeQuantitySets()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t sub_1BC3DD8D0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC3B3098(255, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF50], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC3DD918(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC34B6A0(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC3DD978()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42CF48)
  {
    sub_1BC3DD918(255, (unint64_t *)&qword_1EF429700, &qword_1ED6A52D8, 0x1E0CB6858, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42CF48);
  }
}

uint64_t sub_1BC3DD9EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

unint64_t sub_1BC3DD9FC()
{
  unint64_t result;

  result = qword_1EF42D018;
  if (!qword_1EF42D018)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for RecordTitleWithSubtitleItem, &type metadata for RecordTitleWithSubtitleItem);
    atomic_store(result, (unint64_t *)&qword_1EF42D018);
  }
  return result;
}

uint64_t sub_1BC3DDA40()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BC3DDA7C()
{
  unint64_t result;

  result = qword_1EF42D098;
  if (!qword_1EF42D098)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for TransientConceptForChart, &type metadata for TransientConceptForChart);
    atomic_store(result, (unint64_t *)&qword_1EF42D098);
  }
  return result;
}

uint64_t sub_1BC3DDAC0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1BC3DDAF4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC3DDB20(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC3DD918(255, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF50], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t UnboundedCache.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  objc_class *v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t result;
  __int128 v26;
  __int128 v27;

  v8 = sub_1BC62C59C();
  type metadata accessor for Box(0, v8, v9, v10);
  swift_getTupleTypeMetadata2();
  sub_1BC62C8C0();
  *(_QWORD *)&v26 = sub_1BC62C56C();
  *a4 = Box.__allocating_init(value:)((uint64_t)&v26);
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = v11;
  v13 = (void *)*MEMORY[0x1E0DC4778];
  v26 = 0u;
  v27 = 0u;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BC3DE4D0;
  *(_QWORD *)(v14 + 24) = v12;
  v15 = (void *)objc_opt_self();
  swift_retain();
  v16 = v13;
  swift_retain();
  v17 = objc_msgSend(v15, sel_defaultCenter);
  v18 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  v19 = sub_1BC3DE508(v16, (uint64_t)&v26, v17, (uint64_t)sub_1BC3DE500, v14, (char *)objc_allocWithZone(v18));

  swift_release();
  a4[4] = (uint64_t)v18;
  a4[1] = (uint64_t)v19;
  v20 = (void *)*MEMORY[0x1E0DC4768];
  v26 = 0u;
  v27 = 0u;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1BC3DE4D0;
  *(_QWORD *)(v21 + 24) = v12;
  swift_retain();
  v22 = v20;
  v23 = objc_msgSend(v15, sel_defaultCenter);
  v24 = sub_1BC3DE508(v22, (uint64_t)&v26, v23, (uint64_t)sub_1BC3DE6D8, v21, (char *)objc_allocWithZone(v18));

  swift_release();
  a4[8] = (uint64_t)v18;
  swift_release();
  result = swift_release();
  a4[5] = (uint64_t)v24;
  return result;
}

uint64_t sub_1BC3DDDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  _QWORD v8[7];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    MEMORY[0x1E0C80A78](result);
    v8[2] = a2;
    v8[3] = a3;
    v8[4] = a4;
    Box.write<A>(with:)((uint64_t)sub_1BC3DE794, (uint64_t)v8, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEE9C0]);
    return swift_release();
  }
  return result;
}

uint64_t UnboundedCache.subscript.getter()
{
  sub_1BC62CFE0();
  return Box.read<A>(with:)();
}

uint64_t UnboundedCache.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1BC3DE6F4(a1, a2, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 8))(a2);
  v6 = sub_1BC62CFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
}

uint64_t sub_1BC3DDF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = sub_1BC62CFE0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a3, v7);
  sub_1BC62C59C();
  return sub_1BC62C5B4();
}

void (*UnboundedCache.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD **a1, char a2)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = malloc(0xC0uLL);
  *a1 = v6;
  v6[7] = a3;
  v7 = *(_QWORD *)(a3 + 24);
  v6[15] = v3;
  v6[16] = v7;
  v8 = sub_1BC62CFE0();
  v6[17] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[18] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v6[19] = malloc(v10);
  v11 = malloc(v10);
  v12 = *(_QWORD *)(a3 + 16);
  v6[20] = v11;
  v6[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[22] = v13;
  v6[23] = malloc(*(_QWORD *)(v13 + 64));
  (*(void (**)(void))(v13 + 16))();
  UnboundedCache.subscript.getter();
  return sub_1BC3DE148;
}

void sub_1BC3DE148(_QWORD **a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = (void *)v2[23];
    v18 = v2[22];
    v4 = (void *)v2[20];
    v5 = v2[21];
    v7 = v2[18];
    v6 = (void *)v2[19];
    v9 = v2[16];
    v8 = v2[17];
    v10 = v2[7];
    (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v6, v4, v8);
    v2[2] = v5;
    v2[3] = v9;
    v2[4] = *(_QWORD *)(v10 + 32);
    v2[5] = v3;
    v2[6] = v6;
    Box.write<A>(with:)((uint64_t)sub_1BC3DEC48, (uint64_t)v2, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEE9C0]);
    (*(void (**)(void *, uint64_t))(v18 + 8))(v3, v5);
    v11 = *(void (**)(void *, uint64_t))(v7 + 8);
    v11(v6, v8);
    v11(v4, v8);
  }
  else
  {
    v12 = v2[22];
    v3 = (void *)v2[23];
    v4 = (void *)v2[20];
    v13 = v2[21];
    v14 = v2[18];
    v6 = (void *)v2[19];
    v15 = v2[16];
    v16 = v2[17];
    v17 = v2[7];
    v2[10] = v13;
    v2[11] = v15;
    v2[12] = *(_QWORD *)(v17 + 32);
    v2[13] = v3;
    v2[14] = v4;
    Box.write<A>(with:)((uint64_t)sub_1BC3DEC48, (uint64_t)(v2 + 8), MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEE9C0]);
    (*(void (**)(void *, uint64_t))(v12 + 8))(v3, v13);
    (*(void (**)(void *, uint64_t))(v14 + 8))(v4, v16);
  }
  free(v3);
  free(v4);
  free(v6);
  free(v2);
}

uint64_t UnboundedCache.removeValue(forKey:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a2[3];
  v5 = sub_1BC62CFE0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-v7];
  v11 = a2[2];
  v12 = v4;
  v13 = a2[4];
  v14 = a1;
  Box.write<A>(with:)((uint64_t)sub_1BC3DE748, (uint64_t)v10, v5, (uint64_t)&v10[-v7]);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Void __swiftcall UnboundedCache.removeAll()()
{
  uint64_t v0;
  _OWORD v1[2];
  uint64_t v2;

  v1[1] = *(_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  Box.write<A>(with:)((uint64_t)sub_1BC3DE794, (uint64_t)v1, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEE9C0]);
}

uint64_t sub_1BC3DE3B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return UnboundedCache.init()(a1[2], a1[3], a1[4], a2);
}

uint64_t sub_1BC3DE3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1BC3DE6F4(a1, a2, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 8))(a2);
  v6 = sub_1BC62CFE0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
}

void (*sub_1BC3DE424(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = UnboundedCache.subscript.modify(v6, a2, a3);
  return sub_1BC383B18;
}

uint64_t sub_1BC3DE488()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC3DE4AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC3DE4D0()
{
  uint64_t *v0;

  return sub_1BC3DDDFC(v0[5], v0[2], v0[3], v0[4]);
}

uint64_t sub_1BC3DE4DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC3DE500(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC3707D8(a1, *(uint64_t (**)(void))(v1 + 16));
}

id sub_1BC3DE508(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char *a6)
{
  char *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  _QWORD v26[3];
  uint64_t v27;
  objc_super v28;
  _BYTE v29[24];
  ValueMetadata *v30;
  _UNKNOWN **v31;

  v30 = &type metadata for SyncTaskScheduler;
  v31 = &protocol witness table for SyncTaskScheduler;
  swift_unknownObjectWeakInit();
  sub_1BC34E674((uint64_t)v29, (uint64_t)&a6[OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_scheduler]);
  v12 = &a6[OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_block];
  *(_QWORD *)v12 = a4;
  *((_QWORD *)v12 + 1) = a5;
  swift_unknownObjectWeakAssign();
  v28.receiver = a6;
  v28.super_class = (Class)type metadata accessor for WeakNotificationObserver();
  swift_retain();
  v13 = objc_msgSendSuper2(&v28, sel_init);
  sub_1BC39BE10(a2, (uint64_t)v26);
  v14 = v27;
  if (v27)
  {
    v15 = __swift_project_boxed_opaque_existential_1Tm(v26, v27);
    v16 = *(_QWORD *)(v14 - 8);
    MEMORY[0x1E0C80A78](v15);
    v18 = (char *)&v26[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v16 + 16))(v18);
    v19 = v13;
    v20 = a1;
    v21 = sub_1BC62D568();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v14);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  }
  else
  {
    v22 = v13;
    v23 = a1;
    v21 = 0;
  }
  objc_msgSend(a3, sel_addObserver_selector_name_object_, v13, sel_didReceiveWithNotification_, a1, v21);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  sub_1BC39BD2C(a2);
  return v13;
}

uint64_t sub_1BC3DE6D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC3707F8(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1BC3DE6E0()
{
  JUMPOUT(0x1BCCF1878);
}

uint64_t sub_1BC3DE6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD v4[2];
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[1] = *(_OWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 32);
  v6 = a2;
  v7 = a1;
  return Box.write<A>(with:)((uint64_t)sub_1BC3DEC48, (uint64_t)v4, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEE9C0]);
}

uint64_t sub_1BC3DE748()
{
  sub_1BC62C59C();
  return sub_1BC62C560();
}

uint64_t sub_1BC3DE798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for UnboundedCache(0, *(_QWORD *)(a3 + a2 - 24), *(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(a3 + a2 - 8));
  return UnboundedCache.subscript.getter();
}

uint64_t sub_1BC3DE7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  v6 = type metadata accessor for UnboundedCache(0, *(_QWORD *)(a4 + a3 - 24), *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
  return sub_1BC3DE6F4(a1, a3, v6);
}

uint64_t sub_1BC3DE838()
{
  return 24;
}

__n128 sub_1BC3DE844(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t dispatch thunk of Cache.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Cache.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of Cache.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of Cache.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of Cache.removeValue(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of Cache.removeAll()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1BC3DE888()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC3DE890(uint64_t a1)
{
  uint64_t v2;

  v2 = a1 + 40;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  return __swift_destroy_boxed_opaque_existential_1Tm(v2);
}

_QWORD *sub_1BC3DE8C8(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v7;

  *a1 = *a2;
  v4 = a2 + 1;
  v5 = a2[4];
  a1[4] = v5;
  v6 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v5 - 8);
  swift_retain();
  v6(a1 + 1, v4, v5);
  v7 = a2[8];
  a1[8] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  return a1;
}

_QWORD *sub_1BC3DE94C(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;

  v4 = a2 + 5;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_0(a1 + 1, a2 + 1);
  __swift_assign_boxed_opaque_existential_0(a1 + 5, v4);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BC3DEB40(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_1BC3DEBA4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BC3DEBEC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for UnboundedCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnboundedCache);
}

uint64_t sub_1BC3DEC48(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BC3DDF70(a1, v1[5], v1[6], v1[2]);
}

uint64_t sub_1BC3DEC58()
{
  sub_1BC62C59C();
  return sub_1BC62C590();
}

uint64_t sub_1BC3DEC98()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC3DECEC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1EF42D0F8);
}

uint64_t sub_1BC3DECFC(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1EF42D0F8) = result;
  return result;
}

void sub_1BC3DED0C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BC3DF6F4();
}

void sub_1BC3DED30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  objc_super v11;

  v5 = (objc_class *)type metadata accessor for UDCListCollectionViewController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + qword_1EF459B70), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + qword_1EF459B70 + 8), a4);
  v11.receiver = v4;
  v11.super_class = v5;
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  v6 = objc_msgSend(v4, sel_view);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

    v9 = objc_msgSend(v4, sel_collectionView);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel_setPreservesSuperviewLayoutMargins_, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC3DEE34(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_1BC3DED30((uint64_t)v4, v1, v2, v3);

}

uint64_t sub_1BC3DEE68(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  objc_class *v7;
  uint64_t result;
  uint64_t v9;
  objc_super v10;

  v5 = v4;
  v7 = (objc_class *)type metadata accessor for UDCListCollectionViewController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v5) + qword_1EF459B70), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v5) + qword_1EF459B70 + 8), a4);
  v10.receiver = v5;
  v10.super_class = v7;
  result = (uint64_t)objc_msgSendSuper2(&v10, sel_viewDidAppear_, a1 & 1);
  v9 = qword_1EF42D0F8;
  if (*((_BYTE *)v5 + qword_1EF42D0F8) == 1 && *((_BYTE *)v5 + qword_1EF42D0F0) == 2)
  {
    if (qword_1ED6A3198 != -1)
      swift_once();
    result = sub_1BC4E4704(0, 0);
    v9 = qword_1EF42D0F8;
  }
  *((_BYTE *)v5 + v9) = 0;
  return result;
}

void sub_1BC3DEF48(void *a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = a1;
  sub_1BC3DEE68(a3, (uint64_t)v6, v4, v5);

}

void sub_1BC3DEF88(char a1, char a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  __int128 v26[2];
  uint64_t v27;
  id v28;
  _QWORD v29[4];
  objc_super v30;

  v7 = (objc_class *)type metadata accessor for UDCListCollectionViewController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + qword_1EF459B70), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + qword_1EF459B70 + 8), a4);
  v30.receiver = v4;
  v30.super_class = v7;
  objc_msgSendSuper2(&v30, sel_setEditing_animated_, a1 & 1, a2 & 1);
  v8 = objc_msgSend(v4, sel_collectionView);
  if (!v8)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v9 = v8;
  objc_msgSend(v8, sel_setEditing_, a1 & 1);

  v10 = objc_msgSend(v4, sel_collectionView);
  if (!v10)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = v10;
  objc_msgSend(v10, sel_setAllowsSelection_, 1);

  v12 = objc_msgSend(v4, sel_collectionView);
  if (!v12)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v13 = v12;
  objc_msgSend(v12, sel_setAllowsMultipleSelection_, a1 & 1);

  v14 = objc_msgSend(v4, sel_collectionView);
  if (!v14)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v15 = v14;
  objc_msgSend(v14, sel_setAllowsMultipleSelectionDuringEditing_, a1 & 1);

  v16 = objc_msgSend(v4, sel_collectionView);
  if (!v16)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_preparedCells);

  if (v18)
  {
    sub_1BC3658C0();
    v19 = sub_1BC62C878();

    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      v20 = sub_1BC62D3B8();
      if (v20)
        goto LABEL_9;
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v20)
      {
LABEL_9:
        if (v20 >= 1)
        {
          v21 = 0;
          v22 = v19 & 0xC000000000000001;
          do
          {
            if (v22)
              v23 = (id)MEMORY[0x1BCCF24CC](v21, v19);
            else
              v23 = *(id *)(v19 + 8 * v21 + 32);
            v24 = v23;
            v28 = v23;
            sub_1BC35817C(0, &qword_1EF42D180);
            v25 = v24;
            if (swift_dynamicCast())
            {
              sub_1BC34E718(v26, (uint64_t)v29);
              __swift_project_boxed_opaque_existential_1Tm(v29, v29[3]);
              v22 = v19 & 0xC000000000000001;
              sub_1BC62B150();
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
            }
            else
            {
              v27 = 0;
              memset(v26, 0, sizeof(v26));
              sub_1BC3DF8C4((uint64_t)v26, &qword_1EF42D188, &qword_1EF42D180);
            }

            ++v21;
          }
          while (v20 != v21);
          goto LABEL_19;
        }
        __break(1u);
        goto LABEL_21;
      }
    }
LABEL_19:
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_26:
  __break(1u);
}

void sub_1BC3DF2DC(void *a1, uint64_t a2, char a3, char a4)
{
  uint64_t v6;
  id v7;

  v7 = a1;
  sub_1BC3DEF88(a3, a4, (uint64_t)v7, v6);

}

void sub_1BC3DF324(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  __int128 v6[2];
  uint64_t v7;
  id v8;
  _QWORD v9[4];

  v2 = (void *)sub_1BC62A928();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_1BC62A928();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    v8 = v4;
    sub_1BC3658C0();
    sub_1BC35817C(0, &qword_1EF429AE0);
    v5 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BC34E718(v6, (uint64_t)v9);
      __swift_project_boxed_opaque_existential_1Tm(v9, v9[3]);
      sub_1BC62B1BC();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    }
    else
    {
      v7 = 0;
      memset(v6, 0, sizeof(v6));

      sub_1BC3DF8C4((uint64_t)v6, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
    }
  }
}

uint64_t sub_1BC3DF478(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC62A970();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v9 = a3;
  v10 = a1;
  sub_1BC3DF324(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC3DF528(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v7 = sub_1BC62A970();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v11 = a3;
  v12 = a4;
  v13 = a1;
  sub_1BC3DF760(v11);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1BC3DF61C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC3DF648(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BC3DF898();
}

id sub_1BC3DF690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for UDCListCollectionViewController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + qword_1EF459B70), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + qword_1EF459B70 + 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t type metadata accessor for UDCListCollectionViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UDCListCollectionViewController);
}

void sub_1BC3DF6F4()
{
  _BYTE *v0;

  v0[qword_1EF42D0F8] = 1;

  sub_1BC62D394();
  __break(1u);
}

void sub_1BC3DF760(void *a1)
{
  void *v2;
  id v3;
  id v4;
  __int128 v5[2];
  uint64_t v6;
  id v7;
  _QWORD v8[4];

  v2 = (void *)sub_1BC62A928();
  v3 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v2);

  if (v3)
  {
    v7 = v3;
    sub_1BC3658C0();
    sub_1BC35817C(0, &qword_1EF42D180);
    v4 = v3;
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BC34E718(v5, (uint64_t)v8);
      __swift_project_boxed_opaque_existential_1Tm(v8, v8[3]);
      objc_msgSend(a1, sel_isEditing);
      sub_1BC62B150();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
    }
    else
    {
      v6 = 0;
      memset(v5, 0, sizeof(v5));

      sub_1BC3DF8C4((uint64_t)v5, &qword_1EF42D188, &qword_1EF42D180);
    }
  }
}

void sub_1BC3DF898()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC3DF8C4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_1BC3A9C44(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t HKChartableCodedQuantitySet.hasOutOfRangeQuantities.getter()
{
  return sub_1BC3DF918((SEL *)&selRef_isInRange);
}

uint64_t HKChartableCodedQuantitySet.hasNoRangeQuantities.getter()
{
  return sub_1BC3DF918((SEL *)&selRef_hasRange);
}

uint64_t sub_1BC3DF918(SEL *a1)
{
  void *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v3 = objc_msgSend(v1, sel_quantities);
  sub_1BC3B3DC8();
  v4 = sub_1BC62C878();

  if (v4 >> 62)
    goto LABEL_12;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1BC62D3B8())
  {
    v6 = 4;
    while (1)
    {
      v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF24CC](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_msgSend(v7, *a1);

      if (v10)
      {
        ++v6;
        if (v9 != v5)
          continue;
      }
      v11 = v10 ^ 1;
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  v11 = 0;
LABEL_14:
  swift_bridgeObjectRelease_n();
  return v11;
}

uint64_t type metadata accessor for RecordAttachmentsDataSource()
{
  uint64_t result;

  result = qword_1EF42D1B0;
  if (!qword_1EF42D1B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC3DFA78()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC3DFAD0(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v17[6];

  v6 = (_QWORD *)(v3 + qword_1EF42D1A8);
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)(v3 + qword_1EF42D190) = a1;
  *(_QWORD *)(v3 + qword_1EF42D198) = a2;
  *(_QWORD *)(v3 + qword_1EF42D1A0) = a3;
  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = sub_1BC62B678();
  v11 = *(void **)(v10 + qword_1EF42D190);
  v12 = *(_QWORD *)(v10 + qword_1EF42D198);
  v13 = *(_QWORD *)(v10 + qword_1EF42D1A0);
  v17[4] = sub_1BC3E0974;
  v17[5] = v10;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1BC3E0630;
  v17[3] = &block_descriptor_17;
  v14 = _Block_copy(v17);
  swift_retain_n();
  v15 = v11;
  swift_release();
  objc_msgSend(v15, sel_fetchAttachmentItemsWithHealthRecordsStore_conceptStore_completion_, v12, v13, v14);
  _Block_release(v14);
  swift_release();

  return v10;
}

uint64_t sub_1BC3DFC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62[2];
  void *v63;
  _QWORD *v64;

  v46 = a2;
  v7 = sub_1BC62A7B4();
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x1E0C80A78](v7);
  v52 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62B288();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v56 = (char *)&v43 - v14;
  v51 = *(_QWORD *)(a1 + 16);
  if (!v51)
  {
LABEL_28:
    v41 = (_QWORD *)(a4 + qword_1EF42D1A8);
    *v41 = v46;
    v41[1] = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BC62B2D0();
    return swift_bridgeObjectRelease();
  }
  v44 = a3;
  v45 = a4;
  v50 = a1 + 32;
  v43 = a1;
  swift_bridgeObjectRetain();
  v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v16 = 0;
  v57 = MEMORY[0x1E0DEE9D8];
  v49 = v9;
  v48 = v10;
  v47 = v12;
  while (1)
  {
    v55 = v16;
    v17 = *(_QWORD *)(v50 + 8 * v16);
    v64 = v15;
    if (v17 >> 62)
      break;
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v18)
      goto LABEL_5;
LABEL_20:
    swift_bridgeObjectRelease_n();
LABEL_21:
    v34 = v52;
    sub_1BC62A7A8();
    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v34, v54);
    v35 = v56;
    sub_1BC62B270();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v35, v9);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v36 = v57;
    else
      v36 = sub_1BC3B5F84(0, *(_QWORD *)(v57 + 16) + 1, 1, v57);
    v38 = *(_QWORD *)(v36 + 16);
    v37 = *(_QWORD *)(v36 + 24);
    if (v38 >= v37 >> 1)
      v36 = sub_1BC3B5F84(v37 > 1, v38 + 1, 1, v36);
    v39 = v55 + 1;
    *(_QWORD *)(v36 + 16) = v38 + 1;
    v40 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v57 = v36;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v36 + v40 + *(_QWORD *)(v10 + 72) * v38, v12, v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v56, v9);
    v16 = v39;
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v39 == v51)
    {
      swift_bridgeObjectRelease();
      a4 = v45;
      a3 = v44;
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRetain_n();
  v18 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_20;
LABEL_5:
  v58 = v17 & 0xC000000000000001;
  v19 = 4;
  while (1)
  {
    v20 = v58 ? (id)MEMORY[0x1BCCF24CC](v19 - 4, v17) : *(id *)(v17 + 8 * v19);
    v21 = v20;
    v22 = v19 - 3;
    if (__OFADD__(v19 - 4, 1))
      break;
    v63 = v20;
    sub_1BC3E0140(&v63, (uint64_t)&v59);

    if (v60)
    {
      sub_1BC34E718(&v59, (uint64_t)v62);
      sub_1BC34E718(v62, (uint64_t)&v59);
      v23 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v23 = sub_1BC3B5CEC(0, v23[2] + 1, 1, v23);
        v64 = v23;
      }
      v24 = v18;
      v26 = v23[2];
      v25 = v23[3];
      if (v26 >= v25 >> 1)
        v64 = sub_1BC3B5CEC((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
      v27 = v60;
      v28 = v61;
      v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v59, v60);
      v30 = MEMORY[0x1E0C80A78](v29);
      v32 = (char *)&v43 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v33 + 16))(v32, v30);
      sub_1BC5EE8E8(v26, (uint64_t)v32, (uint64_t *)&v64, v27, v28);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v59);
      v18 = v24;
    }
    else
    {
      sub_1BC37AE60((uint64_t)&v59);
    }
    ++v19;
    if (v22 == v18)
    {
      swift_bridgeObjectRelease_n();
      v9 = v49;
      v10 = v48;
      v12 = v47;
      goto LABEL_21;
    }
  }
  __break(1u);
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

id sub_1BC3E0140@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = *a1;
  sub_1BC359F44();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v4 + 32) = sub_1BC62C680();
  *(_QWORD *)(v4 + 40) = v5;
  result = objc_msgSend(v3, sel_title);
  if (!result)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v7 = result;
  v8 = objc_msgSend(result, sel_removeSpecialCharactersAndWhiteSpaces);

  v9 = sub_1BC62C680();
  v11 = v10;

  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + 48) = v9;
  *(_QWORD *)(v4 + 56) = v11;
  v12 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v13 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v13)
  {
    v14 = sub_1BC62C680();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v17 = objc_msgSend(v3, sel_displayItemType);
  if (v17 != (id)17)
  {
    if (v17 != (id)15)
    {
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return (id)swift_bridgeObjectRelease();
    }
    result = objc_msgSend(v3, sel_title);
    if (result)
    {
      v18 = result;
      v19 = v16;
      v20 = sub_1BC62C680();
      v22 = v21;

      v23 = objc_msgSend(v3, sel_subtitle);
      if (v23)
      {
        v24 = v23;
        v25 = v14;
        v26 = sub_1BC62C680();
        v28 = v27;

      }
      else
      {
        v25 = v14;
        v26 = 0;
        v28 = 0;
      }
      v48 = type metadata accessor for TitleSubtitleDetailItem(0);
      v49 = (_QWORD *)swift_allocObject();
      sub_1BC62A7A8();
      v49[2] = v20;
      v49[3] = v22;
      v50 = MEMORY[0x1E0DEE9D8];
      v49[4] = v26;
      v49[5] = v28;
      v49[6] = 0;
      v49[7] = v50;
      v49[8] = v25;
      v49[9] = v19;
      *(_QWORD *)(a2 + 24) = v48;
      result = (id)sub_1BC347F0C(&qword_1EF42B7C0, type metadata accessor for TitleSubtitleDetailItem, (uint64_t)&unk_1BC63DA50);
      *(_QWORD *)(a2 + 32) = result;
      *(_QWORD *)a2 = v49;
      return result;
    }
    goto LABEL_24;
  }
  v29 = objc_msgSend(v3, sel_showSpinner);
  result = objc_msgSend(v3, sel_title);
  v30 = result;
  v57 = v14;
  if (v29)
  {
    if (result)
    {
      v31 = sub_1BC62C680();
      v33 = v32;

      result = objc_msgSend(v3, sel_attributedSubtitle);
      if (result)
      {
        v34 = result;
        v35 = objc_msgSend(result, sel_string);

        v36 = sub_1BC62C680();
        v38 = v37;

        v39 = type metadata accessor for TitleSubtitleDetailItemWithSpinner(0);
        v40 = (_QWORD *)swift_allocObject();
        sub_1BC62A7A8();
        v40[2] = v31;
        v40[3] = v33;
        v40[4] = v36;
        v40[5] = v38;
        v40[6] = v57;
        v40[7] = v16;
        *(_QWORD *)(a2 + 24) = v39;
        result = (id)sub_1BC347F0C(&qword_1EF42D200, type metadata accessor for TitleSubtitleDetailItemWithSpinner, (uint64_t)&unk_1BC63D9C0);
        *(_QWORD *)(a2 + 32) = result;
        *(_QWORD *)a2 = v40;
        return result;
      }
      goto LABEL_26;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (!result)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  v41 = sub_1BC62C680();
  v55 = v42;

  v43 = objc_msgSend(v3, sel_subtitle);
  if (v43)
  {
    v44 = v43;
    v45 = sub_1BC62C680();
    v47 = v46;

  }
  else
  {
    v45 = 0;
    v47 = 0;
  }
  v51 = objc_msgSend(v3, sel_attributedSubtitle, v55);
  v52 = type metadata accessor for TitleSubtitleDetailItem(0);
  v53 = (_QWORD *)swift_allocObject();
  sub_1BC62A7A8();
  v53[2] = v41;
  v53[3] = v56;
  v54 = MEMORY[0x1E0DEE9D8];
  v53[4] = v45;
  v53[5] = v47;
  v53[6] = v51;
  v53[7] = v54;
  v53[8] = v57;
  v53[9] = v16;
  *(_QWORD *)(a2 + 24) = v52;
  result = (id)sub_1BC347F0C(&qword_1EF42B7C0, type metadata accessor for TitleSubtitleDetailItem, (uint64_t)&unk_1BC63DA50);
  *(_QWORD *)(a2 + 32) = result;
  *(_QWORD *)a2 = v53;
  return result;
}

void sub_1BC3E05D8()
{
  sub_1BC3E0608();
}

void sub_1BC3E05F0()
{
  sub_1BC3E0608();
}

void sub_1BC3E0608()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC3E0630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  sub_1BC357158(0, (unint64_t *)&qword_1EF42C668, (uint64_t (*)(uint64_t))sub_1BC39CBE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v5 = sub_1BC62C878();
  if (a3)
  {
    v6 = sub_1BC62C680();
    a3 = v7;
  }
  else
  {
    v6 = 0;
  }
  swift_retain();
  v4(v5, v6, a3);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3E06DC()
{
  uint64_t v0;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3E072C()
{
  uint64_t v0;

  v0 = sub_1BC62B69C();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC3E079C()
{
  return type metadata accessor for RecordAttachmentsDataSource();
}

uint64_t sub_1BC3E07A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v3);
  if (!*(_QWORD *)(v1 + qword_1EF42D1A8 + 8))
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v4 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRetain();
  sub_1BC62BD38();
  v5 = sub_1BC62AD3C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v7 = sub_1BC62AD24();
  a1[3] = v5;
  result = sub_1BC347F0C((unint64_t *)&qword_1ED6A4108, v6, MEMORY[0x1E0D2A8A0]);
  a1[4] = result;
  *a1 = v7;
  return result;
}

uint64_t sub_1BC3E0954@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC3E07A4(a1);
}

uint64_t sub_1BC3E0974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BC3DFC40(a1, a2, a3, v3);
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t MedicalRecordTimelineAccountReconnectItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC3E09C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  _QWORD v7[2];

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7[0] = 0xD000000000000011;
  v7[1] = 0x80000001BC655FF0;
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t static MedicalRecordTimelineAccountReconnectItem.== infix(_:_:)()
{
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  return sub_1BC62CEB4() & 1;
}

uint64_t MedicalRecordTimelineAccountReconnectItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineAccountReconnectItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC3E0B58()
{
  return sub_1BC3E09C0();
}

uint64_t sub_1BC3E0C60(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC3E0CD0();
  return sub_1BC37AE60((uint64_t)v5);
}

uint64_t sub_1BC3E0CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  double v11;
  void (*v12)(uint64_t *, _QWORD);
  void *v13;
  id v14;
  void (*v15)(uint64_t *, _QWORD);
  id v16;
  void (*v17)(uint64_t *, _QWORD);
  id v18;
  void (*v19)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;

  v1 = sub_1BC62BD98();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v5, (uint64_t)v25);
  if (!v26)
    return sub_1BC37AE60((uint64_t)v25);
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineAccountReconnectItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v22[1] = v24;
    v7 = objc_msgSend(*(id *)(v24 + 16), sel_state);
    MEMORY[0x1BCCF201C]();
    v23 = v2;
    if (v7 == (id)6)
    {
      if (qword_1ED6A4888 == -1)
      {
LABEL_8:
        v8 = (id)qword_1ED6A5528;
        swift_bridgeObjectRetain();
        sub_1BC62A4A8();
        swift_bridgeObjectRelease();

        sub_1BC62BD74();
        v9 = (void *)objc_opt_self();
        v10 = *MEMORY[0x1E0DC4B10];
        v11 = *MEMORY[0x1E0DC1440];
        result = (uint64_t)objc_msgSend(v9, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B10], *MEMORY[0x1E0DC1440]);
        if (!result)
        {
          __break(1u);
          goto LABEL_19;
        }
        v12 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
        sub_1BC62BCC0();
        v12(v25, 0);
        v13 = (void *)objc_opt_self();
        v14 = objc_msgSend(v13, sel_labelColor);
        v15 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
        sub_1BC62BCCC();
        v15(v25, 0);
        if (v7 == (id)6)
        {
          if (qword_1ED6A4888 == -1)
          {
LABEL_13:
            v16 = (id)qword_1ED6A5528;
            swift_bridgeObjectRetain();
            sub_1BC62A4A8();
            swift_bridgeObjectRelease();

            sub_1BC62BC9C();
            result = (uint64_t)objc_msgSend(v9, sel__preferredFontForTextStyle_weight_, v10, v11);
            if (result)
            {
              v17 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
              sub_1BC62BCC0();
              v17(v25, 0);
              v18 = objc_msgSend(v13, sel_systemBlueColor);
              v19 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
              sub_1BC62BCCC();
              v19(v25, 0);
              v26 = v1;
              v27 = MEMORY[0x1E0DC2398];
              boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
              v21 = v23;
              (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 16))(boxed_opaque_existential_1, v4, v1);
              MEMORY[0x1BCCF1FC8](v25);
              swift_release();
              return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v4, v1);
            }
LABEL_19:
            __break(1u);
            return result;
          }
        }
        else if (qword_1ED6A4888 == -1)
        {
          goto LABEL_13;
        }
        swift_once();
        goto LABEL_13;
      }
    }
    else if (qword_1ED6A4888 == -1)
    {
      goto LABEL_8;
    }
    swift_once();
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BC3E11C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC3E1214(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC3E0CD0();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC3E1280(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC3E12C8;
}

uint64_t sub_1BC3E12C8(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC3E0CD0();
  return result;
}

void sub_1BC3E12F8(uint64_t a1, void *a2)
{
  sub_1BC3E14AC(a2);
}

uint64_t sub_1BC3E1300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_1BC62C944();
  v6[5] = sub_1BC62C938();
  v6[6] = sub_1BC62C908();
  v6[7] = v7;
  return swift_task_switch();
}

uint64_t sub_1BC3E1370()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[3] + 16);
  v2 = (_QWORD *)swift_task_alloc();
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_1BC3E13CC;
  return ClinicalAccountManager.startRelogin(to:from:)(v1, v0[4]);
}

uint64_t sub_1BC3E13CC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC3E1418()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id MedicalRecordTimelineAccountReconnectItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC3E1488(uint64_t a1, void *a2)
{
  sub_1BC3E14AC(a2);
}

void sub_1BC3E14AC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];

  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - v4;
  v6 = v1 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v6, (uint64_t)v22);
  if (v22[3])
  {
    sub_1BC37AE0C();
    type metadata accessor for MedicalRecordTimelineAccountReconnectItem();
    v7 = swift_dynamicCast();
    if ((v7 & 1) != 0)
    {
      v8 = v21;
      if (qword_1ED6A4878 != -1)
        v7 = swift_once();
      v21 = *(_QWORD *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
      MEMORY[0x1E0C80A78](v7);
      *(&v20 - 2) = v9;
      sub_1BC62AA6C();
      v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
      sub_1BC379B20((unint64_t *)&qword_1ED6A4B90, 255, v10, MEMORY[0x1E0D2D480]);
      swift_retain();
      sub_1BC62B888();
      swift_release();
      v11 = (void *)v22[0];
      type metadata accessor for ClinicalAccountManager();
      v12 = (_QWORD *)swift_allocObject();
      v13 = MEMORY[0x1E0DEE9E8];
      v12[5] = 0;
      v12[6] = 0;
      v12[4] = v13;
      v12[2] = v11;
      v14 = v11;
      v12[3] = objc_msgSend(v14, sel_clinicalAccountStore);
      v15 = sub_1BC62C95C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v5, 1, 1, v15);
      sub_1BC62C944();
      swift_retain();
      swift_retain();
      v16 = a1;
      v17 = sub_1BC62C938();
      v18 = (_QWORD *)swift_allocObject();
      v19 = MEMORY[0x1E0DF06E8];
      v18[2] = v17;
      v18[3] = v19;
      v18[4] = v12;
      v18[5] = v8;
      v18[6] = v16;
      sub_1BC5C2784((uint64_t)v5, (uint64_t)&unk_1EF42D310, (uint64_t)v18);
      swift_release();
      swift_release();
      swift_release();

    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v22);
  }
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC3E17A0(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF42D210, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountReconnectItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountReconnectItem);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountReconnectItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC3E17EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineAccountReconnectItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t method lookup function for MedicalRecordTimelineAccountReconnectItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItemCell.didSelectCell(_:in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItemCell.deselectionBehavior.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t sub_1BC3E190C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC3E1948(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1BC377F18;
  return sub_1BC3E1300(a1, v4, v5, v6, v7, v8);
}

void __swiftcall UILabel.init(font:numberOfLines:textColor:)(UILabel *__return_ptr retstr, UIFont_optional font, Swift::Int numberOfLines, UIColor textColor)
{
  uint64_t v5;
  Class isa;
  id v7;

  v5 = *(_QWORD *)&font.is_nil;
  isa = font.value.super.isa;
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v7, sel_setFont_, isa);
  objc_msgSend(v7, sel_setNumberOfLines_, v5);
  objc_msgSend(v7, sel_setTextColor_, numberOfLines);

}

BOOL UILabel.isEmpty.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_text);
  if (!v1)
    return 1;
  v2 = v1;
  v3 = sub_1BC62C680();
  v5 = v4;

  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  return v6 == 0;
}

uint64_t type metadata accessor for UDCOlderOtherLabsDataSource()
{
  uint64_t result;

  result = qword_1EF42D318;
  if (!qword_1EF42D318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC3E1B20()
{
  return swift_initClassMetadata2();
}

void sub_1BC3E1B5C(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  sub_1BC357158(0, &qword_1EF42D368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v3 = *a1;
  sub_1BC62AC10();
  MEMORY[0x1BCCEFEBC]();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC6395A0;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1BC3644C0();
  strcpy((char *)(v5 + 32), "pluginPackage");
  *(_WORD *)(v5 + 46) = -4864;
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = v7;
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 72) = 0xD000000000000025;
  *(_QWORD *)(v5 + 80) = 0x80000001BC654E10;
  sub_1BC62CA64();
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], v4);
  v8 = sub_1BC62AA78();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x1E0D2D510], v8);
  __asm { BR              X9 }
}

uint64_t sub_1BC3E1D64()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;

  v5 = sub_1BC62AB5C();
  v7 = v6;
  v8 = sub_1BC62A31C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v4 - 144);
  *(_QWORD *)(v9 + 32) = v1;
  v10 = v1;
  v11 = (void *)MEMORY[0x1BCCEFEA4](v0, v5, v7, v2, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3E23B8(v2);
  v12 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE035predicateForPinnedUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0O0OSg_AA06SourceQ0OtFZ_0();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_notPredicateWithSubpredicate_, v12);

  *(_QWORD *)(v4 - 88) = MEMORY[0x1E0DEE9D8];
  v15 = *(id *)(v4 - 128);
  v16 = v3;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*(_QWORD *)(v4 - 88) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v4 - 88) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v17 = v11;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*(_QWORD *)(v4 - 88) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v4 - 88) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v18 = v14;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*(_QWORD *)(v4 - 88) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v4 - 88) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v19 = v15;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*(_QWORD *)(v4 - 88) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v4 - 88) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();

  v20 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v13, sel_andPredicateWithSubpredicates_, v20);

  v22 = *(void **)(v4 - 112);
  objc_msgSend(v22, sel_setPredicate_, v21);

  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BC6396B0;
  v24 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v25 = (void *)sub_1BC62C650();
  v26 = objc_msgSend(v24, sel_initWithKey_ascending_selector_, v25, 1, sel_localizedStandardCompare_);

  *(_QWORD *)(v23 + 32) = v26;
  *(_QWORD *)(v4 - 88) = v23;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v27 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setSortDescriptors_, v27);

  v28 = objc_allocWithZone(MEMORY[0x1E0C97B68]);
  v29 = *(void **)(v4 - 96);
  objc_msgSend(v28, sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v22, v29, 0, 0);
  v30 = sub_1BC62B6E4();

  return v30;
}

void sub_1BC3E2180()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC3E21AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UDCOlderOtherLabsDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC3E21E0()
{
  return type metadata accessor for UDCOlderOtherLabsDataSource();
}

void sub_1BC3E21E8()
{
  sub_1BC3E21FC();
}

void sub_1BC3E21FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[2];

  v0 = sub_1BC62B12C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC62AE74();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_features);

  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v11 = objc_msgSend(v10, sel_stanley);

  if (v11)
  {
    sub_1BC62AE5C();
    v12 = v15[1];
    v13 = sub_1BC62AE50();
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      v14 = (void *)v13;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      objc_msgSend(v14, sel_setContentInsets_, 20.0, 0.0, 0.0, 0.0);
    }
  }
  else
  {
    sub_1BC62B0F0();
    sub_1BC62B090();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t sub_1BC3E23B8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC357158(0, &qword_1EF42D368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id SingleValueChartConfiguration.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

unint64_t sub_1BC3E2444()
{
  return sub_1BC3E244C();
}

unint64_t sub_1BC3E244C()
{
  unint64_t result;

  result = qword_1EF42D370;
  if (!qword_1EF42D370)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42D370);
  }
  return result;
}

uint64_t sub_1BC3E24B4()
{
  type metadata accessor for SingleValueDataTransformer();
  return swift_allocObject();
}

id SingleValueChartConfiguration.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueChartConfiguration();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SingleValueChartConfiguration()
{
  return objc_opt_self();
}

id SingleValueChartConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueChartConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for SingleValueChartConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SingleValueChartConfiguration.chartControllerClass.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of SingleValueChartConfiguration.shouldShowOutOfRangeOverlay.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of SingleValueChartConfiguration.dataTransformer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t type metadata accessor for ClinicalSharingOnboardingSelectedDataTypesDataSource()
{
  uint64_t result;

  result = qword_1EF42D3A8;
  if (!qword_1EF42D3A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC3E262C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC3E2678(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    result = sub_1BC5B1500(v1);
    v5 = result;
    v6 = 0;
    v7 = v1 + 64;
    v24 = v1 + 80;
    v25 = v2;
    v27 = v1 + 64;
    v28 = v1;
    v26 = v4;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v1 + 32))
    {
      v9 = (unint64_t)v5 >> 6;
      if ((*(_QWORD *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0)
        goto LABEL_27;
      if (*(_DWORD *)(v1 + 36) != v4)
        goto LABEL_28;
      v29 = v6;
      v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 32 * v5);
      v11 = v10[1];
      v12 = (void *)v10[2];
      v13 = (void *)v10[3];
      v14 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v5);
      if (v11)
        v15 = *v10;
      else
        v15 = 0;
      v16 = 0xE000000000000000;
      if (v11)
        v16 = v11;
      v30 = v16;
      type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
      swift_allocObject();
      v17 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = v12;
      sub_1BC3E4874(v15, v30, v12, v13, v14, 0, 0, 0);
      sub_1BC62D268();
      sub_1BC62D298();
      v1 = v28;
      sub_1BC62D2A4();
      result = sub_1BC62D274();
      v8 = 1 << *(_BYTE *)(v28 + 32);
      if (v5 >= v8)
        goto LABEL_29;
      v7 = v27;
      v19 = *(_QWORD *)(v27 + 8 * v9);
      if ((v19 & (1 << v5)) == 0)
        goto LABEL_30;
      v4 = v26;
      if (*(_DWORD *)(v28 + 36) != v26)
        goto LABEL_31;
      v20 = v19 & (-2 << (v5 & 0x3F));
      if (v20)
      {
        v8 = __clz(__rbit64(v20)) | v5 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v21 = v9 + 1;
        v22 = (unint64_t)(v8 + 63) >> 6;
        if (v9 + 1 < v22)
        {
          v23 = *(_QWORD *)(v27 + 8 * v21);
          if (v23)
          {
LABEL_23:
            v8 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v9)
            {
              v23 = *(_QWORD *)(v24 + 8 * v9++);
              if (v23)
              {
                v21 = v9 + 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
      v6 = v29 + 1;
      v5 = v8;
      if (v29 + 1 == v25)
        return v31;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC3E28DC(void *a1, uint64_t a2)
{
  void **v2;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;

  v5 = *v2;
  v6 = (void *)objc_opt_self();
  swift_retain();
  v7 = objc_msgSend(v6, sel_sharedInstanceForHealthStore_, a1);
  v20 = sub_1BC35BA04(MEMORY[0x1E0DEE9D8]);
  v8 = *(_QWORD *)(a2 + 16);
  if (v8)
  {
    v9 = *(_QWORD *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() - 8);
    v10 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BC3E2B94(v10, (uint64_t)v7, (uint64_t *)&v20, v5);
      v10 += v11;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1BC3E2678(v12);
  swift_bridgeObjectRelease();
  *(void **)((char *)v2 + qword_1EF42D3A0) = (void *)v13;
  if ((v13 & 0x8000000000000000) != 0 || (v13 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v14 = (unint64_t)sub_1BC3D6714(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  v19 = v14;
  sub_1BC3E3424((uint64_t *)&v19);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BC3D1B70(v19);
  swift_release();
  v15 = sub_1BC62B504();
  v16 = *(_QWORD *)(v15 + qword_1EF42D3A0);
  if (!(v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v17)
      goto LABEL_11;
LABEL_16:
    swift_bridgeObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();
    return v15;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  if (!sub_1BC62D3B8())
    goto LABEL_16;
LABEL_11:
  if ((v16 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1BCCF24CC](0, v16);
    goto LABEL_14;
  }
  if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_14:
    swift_bridgeObjectRelease();
    type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
    sub_1BC62B00C();
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    return v15;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BC3E2B94(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v52 = a4;
  v7 = sub_1BC62BB34();
  v53 = *(id *)(v7 - 8);
  v54 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v50 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v50 - v18;
  sub_1BC3AFE24(a1, (uint64_t)&v50 - v18);
  v19[48] = 0;
  if (a2 && (v20 = sub_1BC5ACA50(a1 + *(int *)(v10 + 48)), v21 != 1))
  {
    v33 = v21;
    v53 = v22;
    v54 = v20;
    v34 = *a3;
    v35 = *(_QWORD *)(*a3 + 16);
    v51 = v23;
    if (v35)
    {
      v36 = v23;
      v52 = v23;
      swift_bridgeObjectRetain();
      v37 = v53;
      v38 = v53;
      v39 = sub_1BC5590AC(v54, v33, v37, v36);
      if ((v40 & 1) != 0)
      {
        v41 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v39);
        swift_bridgeObjectRetain();
      }
      else
      {
        v41 = MEMORY[0x1E0DEE9D8];
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      v41 = MEMORY[0x1E0DEE9D8];
    }
    sub_1BC3AFE24((uint64_t)v19, (uint64_t)v14);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v41 = sub_1BC3B5190(0, *(_QWORD *)(v41 + 16) + 1, 1, v41);
    v43 = *(_QWORD *)(v41 + 16);
    v42 = *(_QWORD *)(v41 + 24);
    if (v43 >= v42 >> 1)
      v41 = sub_1BC3B5190(v42 > 1, v43 + 1, 1, v41);
    *(_QWORD *)(v41 + 16) = v43 + 1;
    sub_1BC3AFDE0((uint64_t)v14, v41+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v43);
    v44 = v51;
    v45 = v51;
    swift_bridgeObjectRetain();
    v46 = v53;
    v47 = v53;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v55 = *a3;
    *a3 = 0x8000000000000000;
    sub_1BC48C344(v41, v54, v33, v46, v44, isUniquelyReferenced_nonNull_native);
    *a3 = v55;

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC62BAF8();
    sub_1BC3AFE24(a1, (uint64_t)v17);
    v24 = sub_1BC62BB28();
    v25 = sub_1BC62CADC();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v57 = v27;
      *(_DWORD *)v26 = 136315394;
      v28 = sub_1BC62D718();
      v55 = sub_1BC4991F0(v28, v29, &v57);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      v30 = *((_QWORD *)v17 + 8);
      v55 = *((_QWORD *)v17 + 7);
      v56 = v30;
      sub_1BC3E4394();
      swift_bridgeObjectRetain();
      v31 = sub_1BC62C6E0();
      v55 = sub_1BC4991F0(v31, v32, &v57);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      sub_1BC3AFE68((uint64_t)v17);
      _os_log_impl(&dword_1BC30A000, v24, v25, "[%s] Could not get display configuration for identifier: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v27, -1, -1);
      MEMORY[0x1BCCF36A8](v26, -1, -1);

    }
    else
    {

      sub_1BC3AFE68((uint64_t)v17);
    }
    (*((void (**)(char *, uint64_t))v53 + 1))(v9, v54);
  }
  return sub_1BC3AFE68((uint64_t)v19);
}

uint64_t sub_1BC3E3000(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char **v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  char **v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t *v48;

  v2 = *a2;
  v3 = (uint64_t *)(*a1 + qword_1EF42D410);
  v5 = *v3;
  v4 = v3[1];
  v48 = v3;
  v6 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v7 = &selRef_viewIsAppearing_;
  v8 = objc_msgSend(v6, sel_categoryWithID_, 15);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_displayName);

    v11 = sub_1BC62C680();
    v13 = v12;

    if (v5 == v11 && v4 == v13)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    v15 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = &selRef_viewIsAppearing_;
    if ((v15 & 1) != 0)
      return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v16 = (uint64_t *)(v2 + qword_1EF42D410);
  v18 = *v16;
  v17 = v16[1];
  swift_bridgeObjectRetain();
  v19 = objc_msgSend(v6, v7[241], 14);
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, sel_displayName);

    v22 = sub_1BC62C680();
    v24 = v23;

    if (v18 == v22 && v17 == v24)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    v26 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = &selRef_viewIsAppearing_;
    if ((v26 & 1) != 0)
      return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v29 = *v16;
  v28 = v16[1];
  swift_bridgeObjectRetain();
  v30 = objc_msgSend(v6, v7[241], 15);
  if (v30)
  {
    v31 = v30;
    v32 = v7;
    v33 = objc_msgSend(v30, sel_displayName);

    v34 = sub_1BC62C680();
    v36 = v35;

    if (v29 == v34 && v28 == v36)
      goto LABEL_31;
    v38 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    v7 = v32;
    if ((v38 & 1) != 0)
      return result;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v40 = *v48;
  v39 = v48[1];
  swift_bridgeObjectRetain();
  v41 = objc_msgSend(v6, v7[241], 14);
  if (v41)
  {
    v42 = v41;
    v43 = objc_msgSend(v41, sel_displayName);

    v44 = sub_1BC62C680();
    v46 = v45;

    if (v40 == v44 && v39 == v46)
    {
LABEL_31:
      swift_bridgeObjectRelease_n();
      return 0;
    }
    v47 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v47 & 1) != 0)
      return result;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (*v48 == *v16 && v48[1] == v16[1])
    return 0;
  else
    return sub_1BC62D574() & 1;
}

void sub_1BC3E33A4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC3E33D0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3E33E0()
{
  sub_1BC62B4F8();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC3E341C()
{
  return type metadata accessor for ClinicalSharingOnboardingSelectedDataTypesDataSource();
}

uint64_t sub_1BC3E3424(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC505EE8();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BC3E349C(v6);
  return sub_1BC62D274();
}

uint64_t sub_1BC3E349C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t *v18;
  uint64_t v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t *__dst;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  _QWORD v148[2];
  uint64_t v149;

  v2 = v1;
  v4 = a1[1];
  result = sub_1BC62D520();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_167;
    if (v4)
      return sub_1BC3E3F48(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_176;
  v136 = result;
  v133 = a1;
  if (v4 < 2)
  {
    v9 = (char *)MEMORY[0x1E0DEE9D8];
    v149 = MEMORY[0x1E0DEE9D8];
    __dst = (uint64_t *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v76 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      goto LABEL_132;
    }
  }
  else
  {
    v7 = v6 >> 1;
    type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
    v8 = sub_1BC62C8CC();
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    __dst = (uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v149 = v8;
  }
  v10 = 0;
  v11 = *a1;
  v135 = *a1 + 16;
  v9 = (char *)MEMORY[0x1E0DEE9D8];
  v134 = *a1 - 8;
  v12 = v4;
  v138 = v4;
  v145 = *a1;
  do
  {
    v13 = v10;
    v14 = v10 + 1;
    v139 = v10;
    if (v10 + 1 < v12)
    {
      v15 = *(_QWORD *)(v11 + 8 * v14);
      v147 = *(_QWORD *)(v11 + 8 * v10);
      v148[0] = v15;
      swift_retain();
      swift_retain();
      v16 = sub_1BC3E3000(v148, &v147);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_145;
      }
      v17 = v16;
      swift_release();
      swift_release();
      v14 = v13 + 2;
      if (v13 + 2 < v138)
      {
        v18 = (uint64_t *)(v135 + 8 * v13);
        while (1)
        {
          v19 = *v18;
          v147 = *(v18 - 1);
          v148[0] = v19;
          swift_retain();
          swift_retain();
          v20 = sub_1BC3E3000(v148, &v147);
          swift_release();
          swift_release();
          if (((v17 ^ v20) & 1) != 0)
            break;
          ++v14;
          ++v18;
          if (v138 == v14)
          {
            v14 = v138;
            break;
          }
        }
        v13 = v139;
      }
      if ((v17 & 1) != 0)
      {
        if (v14 < v13)
          goto LABEL_171;
        v12 = v138;
        if (v13 < v14)
        {
          v21 = (uint64_t *)(v134 + 8 * v14);
          v22 = v14;
          v23 = v13;
          v24 = (uint64_t *)(v145 + 8 * v13);
          do
          {
            if (v23 != --v22)
            {
              if (!v145)
                goto LABEL_174;
              v25 = *v24;
              *v24 = *v21;
              *v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
      else
      {
        v12 = v138;
      }
    }
    if (v14 >= v12)
      goto LABEL_81;
    if (__OFSUB__(v14, v13))
      goto LABEL_168;
    if (v14 - v13 >= v136)
      goto LABEL_81;
    if (__OFADD__(v13, v136))
      goto LABEL_169;
    if (v13 + v136 >= v12)
      v26 = v12;
    else
      v26 = v13 + v136;
    if (v26 < v13)
    {
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      result = sub_1BC62D388();
      __break(1u);
      return result;
    }
    if (v14 == v26)
      goto LABEL_81;
    v131 = v9;
    v132 = v2;
    v27 = objc_opt_self();
    v28 = v145;
    v146 = (void *)v27;
    v29 = (_QWORD *)(v134 + 8 * v14);
    v137 = v26;
    while (2)
    {
      v31 = *(_QWORD *)(v28 + 8 * v14);
      v140 = v29;
      v143 = v14;
      while (1)
      {
        v32 = *v29;
        v33 = (uint64_t *)(v31 + qword_1EF42D410);
        v35 = *(_QWORD *)(v31 + qword_1EF42D410);
        v34 = *(_QWORD *)(v31 + qword_1EF42D410 + 8);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        v36 = objc_msgSend(v146, sel_categoryWithID_, 15);
        if (v36)
        {
          v37 = v36;
          v38 = objc_msgSend(v36, sel_displayName);

          v39 = sub_1BC62C680();
          v41 = v40;

          if (v35 == v39 && v34 == v41)
          {
LABEL_59:
            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
            goto LABEL_76;
          }
          v43 = sub_1BC62D574();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v43 & 1) != 0)
          {
LABEL_58:
            swift_release();
            swift_release();
            goto LABEL_76;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v45 = *(_QWORD *)(v32 + qword_1EF42D410);
        v44 = *(_QWORD *)(v32 + qword_1EF42D410 + 8);
        v142 = (uint64_t *)(v32 + qword_1EF42D410);
        swift_bridgeObjectRetain();
        v46 = objc_msgSend(v146, sel_categoryWithID_, 14);
        if (v46)
        {
          v47 = v46;
          v48 = objc_msgSend(v46, sel_displayName);

          v49 = sub_1BC62C680();
          v51 = v50;

          if (v45 == v49 && v44 == v51)
            goto LABEL_59;
          v53 = sub_1BC62D574();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v53 & 1) != 0)
            goto LABEL_58;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v55 = *v142;
        v54 = v142[1];
        swift_bridgeObjectRetain();
        v56 = objc_msgSend(v146, sel_categoryWithID_, 15);
        if (v56)
          break;
        swift_bridgeObjectRelease();
LABEL_67:
        v64 = *v33;
        v63 = v33[1];
        swift_bridgeObjectRetain();
        v65 = objc_msgSend(v146, sel_categoryWithID_, 14);
        if (v65)
        {
          v66 = v65;
          v67 = objc_msgSend(v65, sel_displayName);

          v68 = sub_1BC62C680();
          v70 = v69;

          if (v64 == v68 && v63 == v70)
            goto LABEL_79;
          v71 = sub_1BC62D574();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v71 & 1) != 0)
            goto LABEL_40;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        if (*v33 == *v142 && v33[1] == v142[1])
        {
LABEL_40:
          swift_release();
          swift_release();
          goto LABEL_41;
        }
        v72 = sub_1BC62D574();
        swift_release();
        swift_release();
        if ((v72 & 1) == 0)
          goto LABEL_41;
LABEL_76:
        v28 = v145;
        if (!v145)
          goto LABEL_172;
        v73 = *v29;
        v31 = v29[1];
        *v29 = v31;
        v29[1] = v73;
        --v29;
        ++v13;
        v30 = v143;
        if (v143 == v13)
          goto LABEL_42;
      }
      v57 = v56;
      v58 = objc_msgSend(v56, sel_displayName);

      v59 = sub_1BC62C680();
      v61 = v60;

      if (v55 != v59 || v54 != v61)
      {
        v62 = sub_1BC62D574();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v62 & 1) != 0)
          goto LABEL_40;
        goto LABEL_67;
      }
LABEL_79:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
LABEL_41:
      v30 = v143;
      v28 = v145;
LABEL_42:
      v14 = v30 + 1;
      v13 = v139;
      v29 = v140 + 1;
      if (v14 != v137)
        continue;
      break;
    }
    v14 = v137;
    v9 = v131;
    v2 = v132;
LABEL_81:
    if (v14 < v13)
      goto LABEL_166;
    v144 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_1BC503AB4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v75 = *((_QWORD *)v9 + 2);
    v74 = *((_QWORD *)v9 + 3);
    v76 = v75 + 1;
    v11 = v145;
    if (v75 >= v74 >> 1)
    {
      v124 = sub_1BC503AB4((char *)(v74 > 1), v75 + 1, 1, v9);
      v11 = v145;
      v9 = v124;
    }
    *((_QWORD *)v9 + 2) = v76;
    v77 = v9 + 32;
    v78 = &v9[16 * v75 + 32];
    *(_QWORD *)v78 = v139;
    *((_QWORD *)v78 + 1) = v144;
    if (v75)
    {
      while (2)
      {
        v79 = v76 - 1;
        if (v76 >= 4)
        {
          v84 = &v77[16 * v76];
          v85 = *((_QWORD *)v84 - 8);
          v86 = *((_QWORD *)v84 - 7);
          v90 = __OFSUB__(v86, v85);
          v87 = v86 - v85;
          if (v90)
            goto LABEL_151;
          v89 = *((_QWORD *)v84 - 6);
          v88 = *((_QWORD *)v84 - 5);
          v90 = __OFSUB__(v88, v89);
          v82 = v88 - v89;
          v83 = v90;
          if (v90)
            goto LABEL_152;
          v91 = v76 - 2;
          v92 = &v77[16 * v76 - 32];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v90 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          if (v90)
            goto LABEL_154;
          v90 = __OFADD__(v82, v95);
          v96 = v82 + v95;
          if (v90)
            goto LABEL_157;
          if (v96 >= v87)
          {
            v114 = &v77[16 * v79];
            v116 = *(_QWORD *)v114;
            v115 = *((_QWORD *)v114 + 1);
            v90 = __OFSUB__(v115, v116);
            v117 = v115 - v116;
            if (v90)
              goto LABEL_161;
            v107 = v82 < v117;
          }
          else
          {
LABEL_100:
            if ((v83 & 1) != 0)
              goto LABEL_153;
            v91 = v76 - 2;
            v97 = &v77[16 * v76 - 32];
            v99 = *(_QWORD *)v97;
            v98 = *((_QWORD *)v97 + 1);
            v100 = __OFSUB__(v98, v99);
            v101 = v98 - v99;
            v102 = v100;
            if (v100)
              goto LABEL_156;
            v103 = &v77[16 * v79];
            v105 = *(_QWORD *)v103;
            v104 = *((_QWORD *)v103 + 1);
            v90 = __OFSUB__(v104, v105);
            v106 = v104 - v105;
            if (v90)
              goto LABEL_159;
            if (__OFADD__(v101, v106))
              goto LABEL_160;
            if (v101 + v106 < v82)
              goto LABEL_112;
            v107 = v82 < v106;
          }
          if (v107)
            v79 = v91;
        }
        else
        {
          if (v76 == 3)
          {
            v81 = *((_QWORD *)v9 + 4);
            v80 = *((_QWORD *)v9 + 5);
            v90 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            v83 = v90;
            goto LABEL_100;
          }
          v108 = *((_QWORD *)v9 + 4);
          v109 = *((_QWORD *)v9 + 5);
          v90 = __OFSUB__(v109, v108);
          v101 = v109 - v108;
          v102 = v90;
LABEL_112:
          if ((v102 & 1) != 0)
            goto LABEL_155;
          v110 = &v77[16 * v79];
          v112 = *(_QWORD *)v110;
          v111 = *((_QWORD *)v110 + 1);
          v90 = __OFSUB__(v111, v112);
          v113 = v111 - v112;
          if (v90)
            goto LABEL_158;
          if (v113 < v101)
            goto LABEL_129;
        }
        v118 = v79 - 1;
        if (v79 - 1 >= v76)
        {
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
          goto LABEL_170;
        }
        if (!v11)
          goto LABEL_173;
        v119 = &v77[16 * v118];
        v120 = *(_QWORD *)v119;
        v121 = &v77[16 * v79];
        v122 = *((_QWORD *)v121 + 1);
        sub_1BC3E403C((uint64_t *)(v11 + 8 * *(_QWORD *)v119), (uint64_t *)(v11 + 8 * *(_QWORD *)v121), v11 + 8 * v122, __dst);
        if (v2)
          goto LABEL_143;
        if (v122 < v120)
          goto LABEL_148;
        if (v79 > *((_QWORD *)v9 + 2))
          goto LABEL_149;
        *(_QWORD *)v119 = v120;
        *(_QWORD *)&v77[16 * v118 + 8] = v122;
        v123 = *((_QWORD *)v9 + 2);
        if (v79 >= v123)
          goto LABEL_150;
        v76 = v123 - 1;
        memmove(&v77[16 * v79], v121 + 16, 16 * (v123 - 1 - v79));
        *((_QWORD *)v9 + 2) = v123 - 1;
        v11 = v145;
        if (v123 <= 2)
          goto LABEL_129;
        continue;
      }
    }
    v76 = 1;
LABEL_129:
    v12 = v138;
    v10 = v144;
  }
  while (v144 < v138);
LABEL_132:
  if (v76 >= 2)
  {
    v125 = *v133;
    do
    {
      v126 = v76 - 2;
      if (v76 < 2)
        goto LABEL_162;
      if (!v125)
        goto LABEL_175;
      v127 = *(_QWORD *)&v9[16 * v126 + 32];
      v128 = *(_QWORD *)&v9[16 * v76 + 24];
      sub_1BC3E403C((uint64_t *)(v125 + 8 * v127), (uint64_t *)(v125 + 8 * *(_QWORD *)&v9[16 * v76 + 16]), v125 + 8 * v128, __dst);
      if (v2)
        break;
      if (v128 < v127)
        goto LABEL_163;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_1BC504414((uint64_t)v9);
      if (v126 >= *((_QWORD *)v9 + 2))
        goto LABEL_164;
      v129 = &v9[16 * v126 + 32];
      *(_QWORD *)v129 = v127;
      *((_QWORD *)v129 + 1) = v128;
      v130 = *((_QWORD *)v9 + 2);
      if (v76 > v130)
        goto LABEL_165;
      memmove(&v9[16 * v76 + 16], &v9[16 * v76 + 32], 16 * (v130 - v76));
      *((_QWORD *)v9 + 2) = v130 - 1;
      v76 = v130 - 1;
    }
    while (v130 > 2);
  }
LABEL_143:
  swift_bridgeObjectRelease();
LABEL_145:
  *(_QWORD *)((v149 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1BC62C890();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3E3F48(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  if (a3 != a2)
  {
    v5 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 8 * a3 - 8;
    v13 = result;
LABEL_4:
    v9 = *(_QWORD *)(v7 + 8 * v5);
    v10 = (uint64_t *)v8;
    while (1)
    {
      v16 = v9;
      v15 = *v10;
      swift_retain();
      swift_retain();
      v11 = sub_1BC3E3000(&v16, &v15);
      swift_release();
      result = swift_release();
      if (v4)
        break;
      if ((v11 & 1) != 0)
      {
        if (!v7)
        {
          __break(1u);
          return result;
        }
        v12 = *v10;
        v9 = v10[1];
        *v10 = v9;
        v10[1] = v12;
        --v10;
        if (v5 != ++v6)
          continue;
      }
      ++v5;
      v8 += 8;
      v6 = v13;
      if (v5 != a2)
        goto LABEL_4;
      return result;
    }
  }
  return result;
}

uint64_t sub_1BC3E403C(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  uint64_t v4;
  uint64_t *v6;
  uint64_t *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  char v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t *v37;

  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v37 = __src;
  v36 = __dst;
  v32 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      v19 = v4;
      if (__dst != a2 || &a2[v13] <= __dst)
      {
        memmove(__dst, a2, 8 * v13);
        __dst = v32;
      }
      v20 = &__dst[v13];
      v35 = v20;
      v37 = v6;
      if (v7 >= v6 || v11 < 8)
        goto LABEL_48;
      v21 = (uint64_t *)(a3 - 8);
      v22 = v6;
      v31 = v7;
      while (1)
      {
        v23 = v20;
        v24 = *--v20;
        v34 = v24;
        v25 = *--v22;
        v33 = v25;
        swift_retain();
        swift_retain();
        v26 = sub_1BC3E3000(&v34, &v33);
        if (v19)
          goto LABEL_47;
        v27 = v26;
        v28 = v21 + 1;
        swift_release();
        swift_release();
        if ((v27 & 1) != 0)
        {
          v29 = v32;
          if (v28 != v6 || v21 >= v6)
            *v21 = *v22;
          v37 = v22;
          v19 = 0;
          v20 = v23;
        }
        else
        {
          v35 = v20;
          v29 = v32;
          if (v28 < v23 || v21 >= v23 || v28 != v23)
            *v21 = *v20;
          v22 = v6;
          v19 = 0;
        }
        if (v22 > v31)
        {
          --v21;
          v6 = v22;
          if (v20 > v29)
            continue;
        }
        goto LABEL_48;
      }
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
    {
      memmove(__dst, __src, 8 * v10);
      __dst = v32;
    }
    v14 = &__dst[v10];
    v35 = v14;
    if ((unint64_t)v6 >= a3 || v8 < 8)
      goto LABEL_48;
    while (1)
    {
      v34 = *v6;
      v15 = __dst;
      v33 = *__dst;
      swift_retain();
      swift_retain();
      v16 = sub_1BC3E3000(&v34, &v33);
      if (v4)
        break;
      v17 = v16;
      swift_release();
      swift_release();
      if ((v17 & 1) != 0)
      {
        v18 = v6 + 1;
        if (v7 < v6 || v7 >= v18 || v7 != v6)
          *v7 = *v6;
        __dst = v15;
      }
      else
      {
        if (v7 != v15)
          *v7 = *v15;
        __dst = v15 + 1;
        v36 = v15 + 1;
        v18 = v6;
      }
      v37 = ++v7;
      if (__dst < v14)
      {
        v6 = v18;
        if ((unint64_t)v18 < a3)
          continue;
      }
      goto LABEL_48;
    }
LABEL_47:
    swift_release();
    swift_release();
LABEL_48:
    sub_1BC503C80(&v37, &v36, &v35);
    return 1;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

void sub_1BC3E4394()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4290E0)
  {
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4290E0);
  }
}

uint64_t type metadata accessor for ClinicalSharingSelectableDatatypesDataSource()
{
  uint64_t result;

  result = qword_1EF42D448;
  if (!qword_1EF42D448)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC3E4424()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC3E4498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_1BC62B8C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v16[1] = v1;
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BDB00(0, v7, 0);
    v8 = v19;
    v9 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v17 = *(_QWORD *)(v10 + 72);
    v18 = v9;
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v12(v6, v11 + *(int *)(v18 + 48), v3);
      v19 = v8;
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BC3BDB00(v13 > 1, v14 + 1, 1);
        v8 = v19;
      }
      *(_QWORD *)(v8 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v14, v6, v3);
      v11 += v17;
      --v7;
    }
    while (v7);
  }
  return v8;
}

void sub_1BC3E4608()
{
  qword_1EF42D3F8 = 0x4024000000000000;
}

_QWORD *sub_1BC3E4618()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;

  v1 = qword_1EF42D440;
  if (*(_QWORD *)(v0 + qword_1EF42D440))
  {
    v2 = *(_QWORD **)(v0 + qword_1EF42D440);
  }
  else
  {
    v3 = v0;
    v4 = v0 + qword_1EF42D410;
    v5 = *(_QWORD *)(v0 + qword_1EF42D410);
    v6 = *(_QWORD *)(v4 + 8);
    if (*(_BYTE *)(v3 + qword_1EF42D430) == 1)
    {
      swift_bridgeObjectRetain();
      v7 = 0;
    }
    else
    {
      v8 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v7 = objc_msgSend(v8, sel_secondarySystemBackgroundColor);
    }
    type metadata accessor for ShowAllItem();
    swift_allocObject();
    swift_retain();
    v2 = sub_1BC3E6814(v5, v6, (uint64_t)v7, (uint64_t)sub_1BC3E74C0, v3);
    swift_release();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_1BC3E4734(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;

  v2 = *(_QWORD *)(a2 + qword_1EF42D438);
  if (v2)
  {
    v5 = *(_QWORD *)(a2 + qword_1EF42D410);
    v6 = *(_QWORD *)(a2 + qword_1EF42D410 + 8);
    v7 = *(_QWORD *)(a2 + qword_1EF42D428);
    v8 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingAllItemsOnboardingViewController(0));
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v9 = sub_1BC477D1C(v5, v6, v7, v2, (uint64_t)sub_1BC3E74C8, a2);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v9);
    objc_msgSend(v10, sel_setModalPresentationStyle_, 2);
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v10, 1, 0);
    swift_release();

  }
}

uint64_t sub_1BC3E4874(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, int a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  int v34;
  id v35;
  id v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  v9 = v8;
  v34 = a6;
  v33 = sub_1BC62A7B4();
  v17 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v9 + qword_1EF42D400) = 0;
  *(_QWORD *)(v9 + qword_1EF42D408) = 0;
  v20 = qword_1EF42D428;
  *(_QWORD *)(v9 + qword_1EF42D428) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + qword_1EF42D440) = 0;
  v21 = (_QWORD *)(v9 + qword_1EF42D410);
  *v21 = a1;
  v21[1] = a2;
  *(_QWORD *)(v9 + qword_1EF42D418) = a3;
  *(_QWORD *)(v9 + qword_1EF42D420) = a4;
  *(_QWORD *)(v9 + v20) = a5;
  v36 = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  v35 = a3;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + qword_1EF42D438) = a8;
  *(_BYTE *)(v9 + qword_1EF42D430) = a7;
  v37 = a8;
  swift_retain();
  swift_release();
  *(_QWORD *)&v38 = 0;
  *((_QWORD *)&v38 + 1) = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  strcpy((char *)&v38, "MutableArray<");
  HIWORD(v38) = -4864;
  sub_1BC62A7A8();
  sub_1BC62A778();
  v22 = *(void (**)(char *, uint64_t))(v17 + 8);
  v23 = v33;
  v22(v19, v33);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v25 = sub_1BC62B2B8();
  v41 = v24;
  swift_retain();
  v26 = sub_1BC3D2128(a5);
  swift_bridgeObjectRelease();
  sub_1BC3BB400(v26);
  if ((v34 & 1) != 0)
  {
    v27 = sub_1BC3E4618();
    v28 = v41;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_1BC3B5CEC(0, v28[2] + 1, 1, v28);
    v30 = v28[2];
    v29 = v28[3];
    if (v30 >= v29 >> 1)
      v28 = sub_1BC3B5CEC((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
    v39 = type metadata accessor for ShowAllItem();
    v40 = sub_1BC347F0C(&qword_1EF42D5A8, (uint64_t (*)(uint64_t))type metadata accessor for ShowAllItem, (uint64_t)&protocol conformance descriptor for TextItem);
    *(_QWORD *)&v38 = v27;
    v28[2] = v30 + 1;
    sub_1BC34E718(&v38, (uint64_t)&v28[5 * v30 + 4]);
    v41 = v28;
  }
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
  swift_retain();
  sub_1BC62A7A8();
  sub_1BC62A778();
  v22(v19, v23);
  sub_1BC62B270();
  sub_1BC62B2D0();
  swift_bridgeObjectRelease();
  swift_release_n();

  swift_release();
  return v25;
}

uint64_t sub_1BC3E4C54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  _QWORD *v21;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v20 = 0;
  v19 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BC3E7370(v6, a1, &v19, &v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1BC3D6954(v8);
  swift_bridgeObjectRelease();
  sub_1BC5DD6DC(v9, 1);
  swift_release();
  v10 = sub_1BC3D2128(v7);
  swift_bridgeObjectRelease();
  sub_1BC3BB400(v10);
  if (v20)
  {
    v11 = sub_1BC3E4618();
    v12 = v21;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1BC3B5CEC(0, v12[2] + 1, 1, v12);
    v14 = v12[2];
    v13 = v12[3];
    if (v14 >= v13 >> 1)
      v12 = sub_1BC3B5CEC((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
    v17 = type metadata accessor for ShowAllItem();
    v18 = sub_1BC347F0C(&qword_1EF42D5A8, (uint64_t (*)(uint64_t))type metadata accessor for ShowAllItem, (uint64_t)&protocol conformance descriptor for TextItem);
    *(_QWORD *)&v16 = v11;
    v12[2] = v14 + 1;
    sub_1BC34E718(&v16, (uint64_t)&v12[5 * v14 + 4]);
    v21 = v12;
  }
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1BC62B270();
  sub_1BC62B2D0();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3E4F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, BOOL *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, unint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(char *, unint64_t, uint64_t);
  char v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, unint64_t, uint64_t);
  void (*v82)(uint64_t, uint64_t);
  uint64_t *v83;

  v76 = a4;
  v83 = a3;
  v8 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v64 - v12;
  v14 = sub_1BC62B8C4();
  v78 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v73 = (char *)&v64 - v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v64 - v20;
  v77 = a5;
  result = sub_1BC3AFE24(a1, a5);
  v75 = v8;
  v23 = *(int *)(v8 + 52);
  v79 = a1;
  v24 = *(_QWORD *)(a1 + v23);
  if (!v24)
  {
    v72 = v13;
    v73 = v11;
    v82 = *(void (**)(uint64_t, uint64_t))(a2 + 16);
    if (v82)
    {
      v74 = v23;
      v36 = v78;
      v37 = v77 + *(int *)(v75 + 48);
      v38 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
      v81 = *(void (**)(char *, unint64_t, uint64_t))(v78 + 16);
      v81(v21, a2 + v38, v14);
      sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
      swift_bridgeObjectRetain();
      v75 = v37;
      v39 = sub_1BC62C644();
      v40 = *(void (**)(char *, uint64_t))(v36 + 8);
      v40(v21, v14);
      if ((v39 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v34 = v79;
        v35 = v76;
LABEL_42:
        v62 = (uint64_t)v72;
        v61 = (uint64_t)v73;
        v63 = v77;
        *(_BYTE *)(v77 + 49) = 1;
        sub_1BC3AFE24(v63, v61);
        sub_1BC48E218(v62, v61);
        result = sub_1BC3AFE68(v62);
        goto LABEL_39;
      }
      if (v82 != (void (*)(uint64_t, uint64_t))1)
      {
        v55 = *(_QWORD *)(v36 + 72);
        v69 = a2;
        v56 = a2 + v55 + v38;
        v57 = 1;
        while (1)
        {
          result = ((uint64_t (*)(char *, unint64_t, uint64_t))v81)(v21, v56, v14);
          v58 = (void (*)(uint64_t, uint64_t))(v57 + 1);
          if (__OFADD__(v57, 1))
            break;
          v59 = sub_1BC62C644();
          v40(v21, v14);
          if ((v59 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v35 = v76;
            v34 = v79;
            goto LABEL_42;
          }
          ++v57;
          v56 += v55;
          if (v58 == v82)
          {
            result = swift_bridgeObjectRelease();
            v35 = v76;
            v34 = v79;
            goto LABEL_39;
          }
        }
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      result = swift_bridgeObjectRelease();
      v34 = v79;
      v23 = v74;
      v35 = v76;
    }
    else
    {
      v34 = v79;
      v35 = v76;
    }
LABEL_40:
    *v35 = *(_QWORD *)(v34 + v23) != 0;
    return result;
  }
  v74 = v23;
  swift_bridgeObjectRetain();
  v25 = v24;
  v26 = v80;
  v27 = sub_1BC3E69EC(v25, a2, v83);
  swift_bridgeObjectRelease();
  v72 = (char *)v27;
  v28 = sub_1BC3E4498(v27);
  if (!*(_QWORD *)(v28 + 16))
  {
    swift_bridgeObjectRelease();
    v35 = v76;
    v41 = v77;
    v42 = v75;
    v43 = v72;
    v34 = v79;
LABEL_38:
    v60 = *(int *)(v42 + 52);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v41 + v60) = v43;
LABEL_39:
    v23 = v74;
    goto LABEL_40;
  }
  v70 = *(_QWORD *)(v28 + 16);
  v29 = v78;
  v30 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  v31 = *(uint64_t **)(v78 + 16);
  v32 = (uint64_t)v73;
  v71 = v28 + v30;
  v83 = v31;
  ((void (*)(char *))v31)(v73);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = sub_1BC3E5DE0(v32, a2);
  v82 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v82(v32, v14);
  if ((v33 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v79;
LABEL_5:
    v35 = v76;
LABEL_36:
    swift_bridgeObjectRelease();
    v41 = v77;
    *(_BYTE *)(v77 + 49) = 1;
LABEL_37:
    v42 = v75;
    v43 = v72;
    goto LABEL_38;
  }
  v67 = v28;
  v69 = a2;
  v44 = v70;
  if (v70 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v79;
LABEL_12:
    v35 = v76;
    swift_bridgeObjectRelease();
    v41 = v77;
    goto LABEL_37;
  }
  v45 = *(void (**)(char *, unint64_t, uint64_t))(v69 + 16);
  v80 = v26;
  v81 = v45;
  v46 = *(_QWORD *)(v29 + 72);
  v68 = v69 + v30;
  v78 = v46;
  v65 = v69 + v30 + 2 * v46;
  v66 = v69 + v30 + v46;
  v47 = 1;
  v34 = v79;
  while (1)
  {
    result = ((uint64_t (*)(uint64_t, unint64_t, uint64_t))v83)(v32, v71 + v78 * v47, v14);
    if (__OFADD__(v47++, 1))
      break;
    if (v81)
    {
      ((void (*)(char *, unint64_t, uint64_t))v83)(v17, v68, v14);
      sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
      swift_bridgeObjectRetain();
      v49 = sub_1BC62C644();
      v82((uint64_t)v17, v14);
      if ((v49 & 1) != 0)
        goto LABEL_43;
      if (v81 != (void (*)(char *, unint64_t, uint64_t))1)
      {
        ((void (*)(char *, uint64_t, uint64_t))v83)(v17, v66, v14);
        v50 = sub_1BC62C644();
        v82((uint64_t)v17, v14);
        v34 = v79;
        if ((v50 & 1) != 0)
        {
LABEL_43:
          swift_bridgeObjectRelease();
          v82(v32, v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        if (v81 != (void (*)(char *, unint64_t, uint64_t))2)
        {
          v51 = v65;
          v52 = 2;
          while (1)
          {
            result = ((uint64_t (*)(char *, unint64_t, uint64_t))v83)(v17, v51, v14);
            v53 = (void (*)(char *, unint64_t, uint64_t))(v52 + 1);
            if (__OFADD__(v52, 1))
              break;
            v54 = sub_1BC62C644();
            v82((uint64_t)v17, v14);
            if ((v54 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v82(v32, v14);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v35 = v76;
              v34 = v79;
              goto LABEL_36;
            }
            ++v52;
            v51 += v78;
            if (v53 == v81)
              goto LABEL_17;
          }
          __break(1u);
          goto LABEL_46;
        }
      }
LABEL_17:
      swift_bridgeObjectRelease();
      v34 = v79;
      v44 = v70;
    }
    v82(v32, v14);
    if (v47 == v44)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1BC3E55E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BC3E74D0(v6, a1);
  swift_bridgeObjectRelease();
  swift_release();
  v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v8 = sub_1BC3D2128(v7);
  swift_bridgeObjectRelease();
  v9 = sub_1BC3BB400(v8);
  v10 = sub_1BC3E4618(v9);
  v11 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_1BC3B5CEC(0, v11[2] + 1, 1, v11);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_1BC3B5CEC((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v17 = type metadata accessor for ShowAllItem();
  v18 = sub_1BC347F0C(&qword_1EF42D5A8, (uint64_t (*)(uint64_t))type metadata accessor for ShowAllItem, (uint64_t)&protocol conformance descriptor for TextItem);
  *(_QWORD *)&v16 = v10;
  v11[2] = v13 + 1;
  sub_1BC34E718(&v16, (uint64_t)&v11[5 * v13 + 4]);
  v19 = v11;
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1BC62B270();
  sub_1BC62B2D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3E5844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(uint64_t, unint64_t, uint64_t);
  char v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[3];
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t (*v58)(uint64_t, unint64_t, uint64_t);

  v54 = a2;
  v4 = sub_1BC62B8C4();
  v55 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v56 = (char *)v44 - v8;
  v9 = sub_1BC62BB34();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v51 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v53 = (uint64_t)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3AFE24(a1, v53);
  v52 = v13;
  v15 = *(_QWORD *)(a1 + *(int *)(v13 + 52));
  if (v15)
  {
    v16 = sub_1BC3E4498(v15);
    swift_beginAccess();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_1BC3E4498(v17);
    swift_bridgeObjectRelease();
    v49 = *(_QWORD *)(v16 + 16);
    if (!v49)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = v51;
      v29 = v52;
      v24 = v54;
LABEL_11:
      v31 = v53;
LABEL_29:
      sub_1BC3AFDE0(v31, v24);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v24, 0, 1, v29);
    }
    v19 = v55;
    v20 = (uint64_t)v56;
    v21 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    v22 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v55 + 16);
    v50 = v16 + v21;
    v58 = v22;
    ((void (*)(char *))v22)(v56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_1BC3E5DE0(v20, v18);
    v57 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v57(v20, v4);
    v24 = v54;
    if ((v23 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_28:
      v30 = v51;
      v29 = v52;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v31 = v53;
      *(_BYTE *)(v53 + 49) = 1;
      goto LABEL_29;
    }
    v48 = v18;
    if (v49 == 1)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      v30 = v51;
      v29 = v52;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_11;
    }
    v44[1] = v16;
    v44[2] = v2;
    v32 = *(_QWORD *)(v55 + 72);
    v33 = v48;
    v34 = v49;
    v47 = v48 + v21;
    v55 = v32;
    v45 = v48 + v21 + 2 * v32;
    v46 = v48 + v21 + v32;
    v35 = 1;
    while (1)
    {
      result = v58(v20, v50 + v55 * v35, v4);
      if (__OFADD__(v35++, 1))
        break;
      v37 = *(_QWORD *)(v33 + 16);
      if (v37)
      {
        v58((uint64_t)v7, v47, v4);
        sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
        swift_bridgeObjectRetain();
        v38 = sub_1BC62C644();
        v57((uint64_t)v7, v4);
        if ((v38 & 1) != 0)
          goto LABEL_27;
        if (v37 != 1)
        {
          v58((uint64_t)v7, v46, v4);
          v39 = sub_1BC62C644();
          v57((uint64_t)v7, v4);
          if ((v39 & 1) != 0)
          {
LABEL_27:
            swift_bridgeObjectRelease();
            v57(v20, v4);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_28;
          }
          if (v37 != 2)
          {
            v40 = v45;
            v41 = 2;
            while (1)
            {
              result = v58((uint64_t)v7, v40, v4);
              v42 = v41 + 1;
              if (__OFADD__(v41, 1))
                break;
              v43 = sub_1BC62C644();
              v57((uint64_t)v7, v4);
              if ((v43 & 1) != 0)
              {
                swift_bridgeObjectRelease();
                v57((uint64_t)v56, v4);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v24 = v54;
                goto LABEL_28;
              }
              ++v41;
              v40 += v55;
              if (v42 == v37)
              {
                v33 = v48;
                swift_bridgeObjectRelease();
                v24 = v54;
                v20 = (uint64_t)v56;
                v34 = v49;
                goto LABEL_14;
              }
            }
            __break(1u);
            break;
          }
        }
        v33 = v48;
        swift_bridgeObjectRelease();
      }
LABEL_14:
      v57(v20, v4);
      if (v35 == v34)
        goto LABEL_10;
    }
    __break(1u);
  }
  else
  {
    sub_1BC62BAF8();
    v25 = sub_1BC62BB28();
    v26 = sub_1BC62CADC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1BC30A000, v25, v26, "Returning from all items view with an item that does not have associated items. This should not happen.", v27, 2u);
      MEMORY[0x1BCCF36A8](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1BC3AFE68(v53);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v54, 1, 1, v52);
  }
  return result;
}

uint64_t sub_1BC3E5DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);

  v4 = sub_1BC62B8C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  if (!v8)
    return 0;
  v18[0] = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = a2 + v18[0];
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v20(v7, a2 + v18[0], v4);
  sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
  swift_bridgeObjectRetain();
  v10 = sub_1BC62C644();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  if ((v10 & 1) != 0)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v8 == 1)
    goto LABEL_11;
  v19 = *(_QWORD *)(v5 + 72);
  v20(v7, v9 + v19, v4);
  v12 = sub_1BC62C644();
  v11(v7, v4);
  if ((v12 & 1) != 0)
    goto LABEL_5;
  if (v8 == 2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  v18[1] = a1;
  v14 = a2 + v18[0] + 2 * v19;
  v15 = 2;
  while (1)
  {
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v7, v14, v4);
    v16 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    v17 = sub_1BC62C644();
    v11(v7, v4);
    if ((v17 & 1) != 0)
      goto LABEL_5;
    ++v15;
    v14 += v19;
    if (v16 == v8)
      goto LABEL_11;
  }
  __break(1u);
  return result;
}

void sub_1BC3E5FCC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC3E5FF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC3E6088()
{
  uint64_t v0;

  v0 = sub_1BC62B300();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1BC3E6130()
{
  sub_1BC3E6088();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC3E614C()
{
  return type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
}

uint64_t sub_1BC3E6154()
{
  sub_1BC62B714();
  sub_1BC62CB60();
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  sub_1BC347F0C((unint64_t *)&qword_1EF4299A8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell, (uint64_t)&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryCell);
  sub_1BC62CB48();
  sub_1BC62AEEC();
  sub_1BC62CB48();
  sub_1BC62B408();
  return sub_1BC62CB60();
}

uint64_t sub_1BC3E61F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  void *v17;
  id v18;
  id v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1BC62B444();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62B420();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1EF42D598, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - v14;
  if (*(_BYTE *)(v1 + qword_1EF42D430) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v15, 1, 1, v8);
    a1[3] = v4;
    a1[4] = sub_1BC347F0C(&qword_1EF42D5A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B338], MEMORY[0x1E0D2B310]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRetain();
    return sub_1BC62B438();
  }
  else
  {
    v25 = v5;
    v17 = *(void **)(v1 + qword_1EF42D418);
    if (v17)
    {
      v18 = *(id *)(v1 + qword_1EF42D420);
      v19 = v17;
      sub_1BC62B414();
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v15, 0, 1, v8);
      sub_1BC62B42C();
      sub_1BC377E3C((uint64_t)v15, &qword_1EF42D598, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B320]);
      a1[3] = v4;
      a1[4] = sub_1BC347F0C(&qword_1EF42D5A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B338], MEMORY[0x1E0D2B310]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 32))(boxed_opaque_existential_1, v7, v4);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BC62BD44();
      v21 = sub_1BC62AD3C();
      v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
      swift_allocObject();
      v23 = sub_1BC62AD24();
      a1[3] = v21;
      result = sub_1BC347F0C((unint64_t *)&qword_1ED6A4108, v22, MEMORY[0x1E0D2A8A0]);
      a1[4] = result;
      *a1 = v23;
    }
  }
  return result;
}

uint64_t sub_1BC3E6584@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC3E61F0(a1);
}

uint64_t sub_1BC3E65A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _QWORD);
  uint64_t v9;
  void (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t);
  _BYTE v15[32];

  v0 = sub_1BC62B3C0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v2);
  v6 = &v15[-v5];
  sub_1BC62B330();
  if (qword_1EF4283F0 != -1)
    swift_once();
  v7 = qword_1EF42D3F8;
  v8 = (void (*)(_BYTE *, _QWORD))sub_1BC62B384();
  *(_QWORD *)(v9 + 8) = v7;
  v8(v15, 0);
  v10 = (void (*)(_BYTE *, _QWORD))sub_1BC62B384();
  *(_QWORD *)(v11 + 24) = v7;
  v10(v15, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v4, v6, v0);
  v12 = sub_1BC62B3B4();
  v13 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v13(v4, v0);
  v13(v6, v0);
  return v12;
}

uint64_t sub_1BC3E66EC()
{
  MEMORY[0x1BCCF35C4](&unk_1BC63CC7C);
  return sub_1BC62B834();
}

void sub_1BC3E6738()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC3E6764()
{
  return swift_release();
}

uint64_t sub_1BC3E676C()
{
  TextItem.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShowAllItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC3E67C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 96))(a2);
}

uint64_t sub_1BC3E67E8()
{
  return sub_1BC347F0C(&qword_1EF42D590, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableDatatypesDataSource, (uint64_t)&unk_1BC63CC4C);
}

_QWORD *sub_1BC3E6814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v6 = v5;
  v6[12] = a4;
  v6[13] = a5;
  v10 = qword_1ED6A3308;
  swift_retain();
  if (v10 != -1)
    swift_once();
  v11 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1BC3644C0();
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  v13 = sub_1BC62C6B0();
  v15 = v14;
  swift_bridgeObjectRelease();
  v16 = objc_msgSend((id)objc_opt_self(), sel_linkColor, 0xE000000000000000);
  type metadata accessor for TextItemCell();
  sub_1BC347F0C(&qword_1EF429AF8, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&protocol conformance descriptor for TextItemCell);
  v6[10] = sub_1BC62ADA8();
  v6[11] = v17;
  v6[2] = v13;
  v6[3] = v15;
  v18 = MEMORY[0x1E0DEE9D8];
  v6[4] = 0;
  v6[5] = v16;
  v6[6] = a3;
  v6[7] = v18;
  v6[8] = 0;
  v6[9] = 0;
  return v6;
}

uint64_t sub_1BC3E69EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char v51;
  BOOL v52;
  char v53;
  _QWORD *v54;
  uint64_t *v55;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char *v74;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t result;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  unint64_t v96;
  int64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, unint64_t, uint64_t);
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v95 = a3;
  v101 = sub_1BC62B8C4();
  v94 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v7 = *(_QWORD *)(v92 - 8);
  v8 = MEMORY[0x1E0C80A78](v92);
  v109 = (uint64_t *)((char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x1E0C80A78](v8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v89 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v89 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v89 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v107 = (uint64_t)&v89 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v89 - v24;
  MEMORY[0x1E0C80A78](v23);
  v102 = (uint64_t)&v89 - v28;
  v29 = *(_QWORD *)(a1 + 16);
  v30 = MEMORY[0x1E0DEE9D8];
  if (!v29)
    return v30;
  v110 = (_QWORD *)v27;
  v108 = (_QWORD *)v26;
  v113 = MEMORY[0x1E0DEE9D8];
  v97 = v29;
  sub_1BC3BD79C(0, v29, 0);
  v31 = 0;
  v96 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v98 = a1 + v96;
  v104 = *(_QWORD *)(a2 + 16);
  v32 = *(_QWORD *)(v7 + 72);
  v33 = v102;
  v34 = a2;
  v99 = a2;
  v100 = v6;
  v90 = v16;
  v91 = v20;
  v111 = v32;
  while (2)
  {
    v103 = v31;
    sub_1BC3AFE24(v98 + v32 * v31, v33);
    if (!v104)
      goto LABEL_55;
    v35 = (_QWORD *)(v33 + *(int *)(v92 + 48));
    v36 = v34;
    v37 = v94;
    v38 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
    v39 = v36 + v38;
    v40 = v101;
    v106 = *(void (**)(char *, unint64_t, uint64_t))(v94 + 16);
    v106(v6, v36 + v38, v101);
    v41 = sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
    swift_bridgeObjectRetain();
    v105 = v41;
    LOBYTE(v36) = sub_1BC62C644();
    v42 = *(void (**)(char *, uint64_t))(v37 + 8);
    v43 = v40;
    v44 = v35;
    v42(v6, v43);
    if ((v36 & 1) == 0)
    {
      if (v104 == 1)
        goto LABEL_21;
      v93 = *(_QWORD *)(v94 + 72);
      v59 = v39 + v93;
      v60 = v100;
      v61 = v101;
      v106(v100, v59, v101);
      v62 = sub_1BC62C644();
      v42(v60, v61);
      if ((v62 & 1) == 0)
      {
        if (v104 == 2)
        {
LABEL_21:
          v34 = v99;
          swift_bridgeObjectRelease();
          v6 = v100;
          goto LABEL_55;
        }
        v63 = v99 + v38 + 2 * v93;
        v64 = 2;
        v6 = v100;
        while (1)
        {
          v65 = v101;
          v106(v6, v63, v101);
          v58 = v64 + 1;
          if (__OFADD__(v64, 1))
            break;
          v66 = sub_1BC62C644();
          v67 = v6;
          v68 = v66;
          v42(v67, v65);
          if ((v68 & 1) != 0)
            goto LABEL_5;
          ++v64;
          v63 += v93;
          v6 = v100;
          if (v58 == v104)
          {
            v34 = v99;
            swift_bridgeObjectRelease();
            goto LABEL_55;
          }
        }
        __break(1u);
        goto LABEL_63;
      }
    }
LABEL_5:
    swift_bridgeObjectRelease();
    v45 = v102;
    *(_BYTE *)(v102 + 49) = 1;
    sub_1BC3AFE24(v45, (uint64_t)v25);
    v46 = *v95;
    sub_1BC62D670();
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    sub_1BC62C740();
    v47 = sub_1BC62D6AC();
    v48 = -1 << *(_BYTE *)(v46 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v46 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      v55 = v95;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1BC3AFE24((uint64_t)v25, v107);
      v112 = *v55;
      v57 = v112;
      *v55 = 0x8000000000000000;
      v58 = (uint64_t)v91;
      if (*(_QWORD *)(v57 + 24) > *(_QWORD *)(v57 + 16))
      {
        v6 = v100;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BC3FAF50();
          v57 = v112;
        }
        goto LABEL_51;
      }
      v44 = v90;
      if (isUniquelyReferenced_nonNull_native)
        sub_1BC3C98B0();
      else
        sub_1BC4936A0();
      v57 = v112;
      sub_1BC62D670();
      sub_1BC62C740();
      sub_1BC62C740();
      v69 = sub_1BC62D6AC();
      v70 = -1 << *(_BYTE *)(v57 + 32);
      v49 = v69 & ~v70;
      v106 = (void (*)(char *, unint64_t, uint64_t))(v57 + 56);
      if (((*(_QWORD *)(v57 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      {
        v6 = v100;
LABEL_51:
        v71 = v107;
        v72 = v111;
LABEL_52:
        *(_QWORD *)(v57 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v49;
        sub_1BC3AFDE0(v71, *(_QWORD *)(v57 + 48) + v49 * v72);
        v78 = *(_QWORD *)(v57 + 16);
        v79 = __OFADD__(v78, 1);
        v80 = v78 + 1;
        if (!v79)
        {
          *(_QWORD *)(v57 + 16) = v80;
          *v95 = v57;
          swift_bridgeObjectRelease();
          sub_1BC3AFE68((uint64_t)v25);
          goto LABEL_54;
        }
LABEL_63:
        __break(1u);
LABEL_64:
        sub_1BC3AFE68((uint64_t)v110);
        sub_1BC3AFE68((uint64_t)v44);
        sub_1BC3AFE68(v58);
LABEL_65:
        result = sub_1BC62D5E0();
        __break(1u);
        return result;
      }
      v105 = ~v70;
      v71 = v107;
      v72 = v111;
      while (1)
      {
        v74 = v25;
        sub_1BC3AFE24(*(_QWORD *)(v57 + 48) + v49 * v72, v58);
        if (*(_QWORD *)(v58 + 16) == *(_QWORD *)(v71 + 16) && *(_QWORD *)(v58 + 24) == *(_QWORD *)(v71 + 24))
          break;
        v76 = sub_1BC62D574();
        v77 = v110;
        sub_1BC3AFE24(v58, (uint64_t)v110);
        sub_1BC3AFE24(v71, (uint64_t)v44);
        if ((v76 & 1) != 0)
          goto LABEL_46;
        sub_1BC3AFE68((uint64_t)v77);
        sub_1BC3AFE68((uint64_t)v44);
        sub_1BC3AFE68(v58);
        v25 = v74;
LABEL_38:
        v49 = (v49 + 1) & v105;
        v71 = v107;
        v72 = v111;
        if (((*(_QWORD *)((char *)v106 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
        {
          v6 = v100;
          goto LABEL_52;
        }
      }
      v77 = v110;
      sub_1BC3AFE24(v58, (uint64_t)v110);
      sub_1BC3AFE24(v71, (uint64_t)v44);
LABEL_46:
      if (*v77 == *v44 && v77[1] == v44[1])
        goto LABEL_64;
      v73 = sub_1BC62D574();
      sub_1BC3AFE68((uint64_t)v110);
      sub_1BC3AFE68((uint64_t)v44);
      sub_1BC3AFE68(v58);
      v25 = v74;
      if ((v73 & 1) != 0)
        goto LABEL_65;
      goto LABEL_38;
    }
    v50 = ~v48;
    while (1)
    {
      sub_1BC3AFE24(*(_QWORD *)(v46 + 48) + v49 * v111, (uint64_t)v13);
      v52 = *((_QWORD *)v13 + 2) == *((_QWORD *)v25 + 2) && *((_QWORD *)v13 + 3) == *((_QWORD *)v25 + 3);
      if (v52)
        break;
      v53 = sub_1BC62D574();
      v44 = v108;
      sub_1BC3AFE24((uint64_t)v13, (uint64_t)v108);
      v54 = v109;
      sub_1BC3AFE24((uint64_t)v25, (uint64_t)v109);
      if ((v53 & 1) != 0)
        goto LABEL_16;
      sub_1BC3AFE68((uint64_t)v44);
      sub_1BC3AFE68((uint64_t)v54);
      sub_1BC3AFE68((uint64_t)v13);
LABEL_8:
      v49 = (v49 + 1) & v50;
      if (((*(_QWORD *)(v46 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
        goto LABEL_22;
    }
    v44 = v108;
    sub_1BC3AFE24((uint64_t)v13, (uint64_t)v108);
    v54 = v109;
    sub_1BC3AFE24((uint64_t)v25, (uint64_t)v109);
LABEL_16:
    if (*v44 != *v54 || v44[1] != v54[1])
    {
      v51 = sub_1BC62D574();
      sub_1BC3AFE68((uint64_t)v44);
      sub_1BC3AFE68((uint64_t)v54);
      sub_1BC3AFE68((uint64_t)v13);
      if ((v51 & 1) != 0)
        goto LABEL_19;
      goto LABEL_8;
    }
    sub_1BC3AFE68((uint64_t)v44);
    sub_1BC3AFE68((uint64_t)v54);
    sub_1BC3AFE68((uint64_t)v13);
LABEL_19:
    swift_bridgeObjectRelease();
    sub_1BC3AFE68((uint64_t)v25);
    v6 = v100;
LABEL_54:
    v34 = v99;
LABEL_55:
    v30 = v113;
    v81 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BC3BD79C(0, *(_QWORD *)(v30 + 16) + 1, 1);
      v30 = v113;
    }
    v82 = v103;
    v83 = v111;
    v85 = *(_QWORD *)(v30 + 16);
    v84 = *(_QWORD *)(v30 + 24);
    if (v85 >= v84 >> 1)
    {
      sub_1BC3BD79C(v84 > 1, v85 + 1, 1);
      v83 = v111;
      v82 = v103;
      v30 = v113;
    }
    *(_QWORD *)(v30 + 16) = v85 + 1;
    v86 = v30 + v96 + v85 * v83;
    v33 = v102;
    v87 = v82 + 1;
    sub_1BC3AFDE0(v102, v86);
    v32 = v111;
    v31 = v87;
    v52 = v87 == v97;
    v34 = v81;
    if (!v52)
      continue;
    return v30;
  }
}

uint64_t sub_1BC3E7370(uint64_t a1, uint64_t a2, uint64_t *a3, BOOL *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  BOOL *v22;
  uint64_t v23;

  v5 = v4;
  v21 = a3;
  v22 = a4;
  v20 = a2;
  v7 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD79C(0, v11, 0);
    v12 = v23;
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v14 = a1 + v13;
    v15 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_1BC3E4F1C(v14, v20, v21, v22, (uint64_t)v10);
      if (v5)
        break;
      v5 = 0;
      v23 = v12;
      v17 = *(_QWORD *)(v12 + 16);
      v16 = *(_QWORD *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BC3BD79C(v16 > 1, v17 + 1, 1);
        v12 = v23;
      }
      *(_QWORD *)(v12 + 16) = v17 + 1;
      sub_1BC3AFDE0((uint64_t)v10, v12 + v13 + v17 * v15);
      v14 += v15;
      if (!--v11)
        return v12;
    }
    swift_release();
  }
  return v12;
}

void sub_1BC3E74C0(void *a1)
{
  uint64_t v1;

  sub_1BC3E4734(a1, v1);
}

uint64_t sub_1BC3E74C8(uint64_t a1)
{
  return sub_1BC3E55E4(a1);
}

unint64_t sub_1BC3E74D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v21 - v6;
  v26 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v8 = *(_QWORD *)(v26 - 8);
  v9 = MEMORY[0x1E0C80A78](v26);
  v25 = (uint64_t)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v24 = (uint64_t)v21 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x1E0DEE9D8];
  v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v21[1] = a1;
  v22 = v13;
  v14 = a1 + v13;
  v15 = *(_QWORD *)(v8 + 72);
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x1E0DEE9D8];
  v23 = a2;
  do
  {
    sub_1BC3E5844(v14, (uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v26) == 1)
    {
      sub_1BC377E3C((uint64_t)v7, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    }
    else
    {
      v17 = v24;
      sub_1BC3AFDE0((uint64_t)v7, v24);
      sub_1BC3AFDE0(v17, v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1BC3B5190(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      if (v19 >= v18 >> 1)
        v16 = sub_1BC3B5190(v18 > 1, v19 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v19 + 1;
      sub_1BC3AFDE0(v25, v16 + v22 + v19 * v15);
    }
    v14 += v15;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v16;
}

void sub_1BC3E771C()
{
  id *v0;
  id v1;
  id v2;
  id v3;

  if (qword_1ED6A4878 != -1)
    swift_once();
  v0 = (id *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_currentProfile);
  swift_beginAccess();
  v1 = *v0;
  v2 = objc_msgSend(v1, sel_healthRecordsStore);

  v3 = objc_msgSend((id)objc_opt_self(), sel_imageManagerWithHealthRecordsStore_, v2);
  qword_1ED6A31B8 = (uint64_t)v3;
}

id static HRBrandImageManager.shared.getter()
{
  if (qword_1ED6A31F8 != -1)
    swift_once();
  return (id)qword_1ED6A31B8;
}

uint64_t HRBrandImageManager.retrieveLogo(for:size:options:completion:)(uint64_t *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v7 = v6;
  v31 = a5;
  v32 = a6;
  v30 = a4;
  v11 = sub_1BC62C47C();
  v35 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC62C4AC();
  v33 = *(_QWORD *)(v14 - 8);
  v34 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  v17 = a1[1];
  v20 = a1[2];
  v19 = a1[3];
  if ((a3 & 1) != 0)
  {
    objc_msgSend((id)swift_getObjCClassFromObject(), sel_defaultLogoDimension);
    v21 = v22;
  }
  else
  {
    v21 = a2;
  }
  sub_1BC35A280();
  v23 = (void *)sub_1BC62CC74();
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = v7;
  v24[3] = v18;
  v24[4] = v17;
  v24[5] = v20;
  v24[6] = v19;
  v24[7] = v21;
  v25 = v31;
  v26 = v32;
  v24[8] = v30;
  v24[9] = v25;
  v24[10] = v26;
  aBlock[4] = sub_1BC3E7C5C;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_18;
  v27 = _Block_copy(aBlock);
  v28 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC370738();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v16, v13, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v34);
}

void sub_1BC3E7AA4(void *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[6];

  v14 = objc_allocWithZone(MEMORY[0x1E0CB63A8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = (void *)sub_1BC62C650();
  v16 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v14, sel_initWithExternalID_batchID_, v15, v16);

  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a8;
  *(_QWORD *)(v18 + 24) = a9;
  v20[4] = sub_1BC3E7D20;
  v20[5] = v18;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 1107296256;
  v20[2] = sub_1BC46FB0C;
  v20[3] = &block_descriptor_6_1;
  v19 = _Block_copy(v20);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_retrieveLogoForBrand_size_options_completion_, v17, a7, v19, a2);
  _Block_release(v19);

}

uint64_t sub_1BC3E7C20()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC3E7C5C()
{
  uint64_t v0;

  sub_1BC3E7AA4(*(void **)(v0 + 16), *(double *)(v0 + 56), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

void sub_1BC3E7C90(void *a1, id a2, void (*a3)(id, BOOL))
{
  id v5;
  id v7;
  id v8;

  v5 = a2;
  if (!a2)
  {
    v7 = a1;
    v5 = a1;
  }
  v8 = a2;
  a3(v5, a2 != 0);
  sub_1BC3CD7D8(v5);
}

uint64_t sub_1BC3E7CFC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC3E7D20(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC3E7C90(a1, a2, *(void (**)(id, BOOL))(v2 + 16));
}

uint64_t sub_1BC3E7D30@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*v1, sel_meaningfulDate);
  if (v3)
  {
    v4 = v3;
    sub_1BC62A724();

    v5 = sub_1BC62A760();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1BC62A760();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

uint64_t sub_1BC3E7DB4()
{
  return sub_1BC38BBC4(&OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText);
}

void sub_1BC3E7DC0(uint64_t a1, uint64_t a2)
{
  sub_1BC3E7E58(a1, a2, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText, (uint64_t (*)(uint64_t))sub_1BC3E8624);
}

void (*sub_1BC3E7DD4(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC3E7E2C;
}

void sub_1BC3E7E2C(_QWORD **a1, char a2)
{
  sub_1BC3E7F78(a1, a2, (uint64_t (*)(uint64_t))sub_1BC3E8624);
}

uint64_t sub_1BC3E7E38()
{
  return sub_1BC38BBC4(&OBJC_IVAR____TtC15HealthRecordsUI8TipsView_subtitleText);
}

void sub_1BC3E7E44(uint64_t a1, uint64_t a2)
{
  sub_1BC3E7E58(a1, a2, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_subtitleText, (uint64_t (*)(uint64_t))sub_1BC3E878C);
}

void sub_1BC3E7E58(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;

  v8 = (_QWORD *)(v4 + *a3);
  swift_beginAccess();
  *v8 = a1;
  v8[1] = a2;
  v9 = swift_bridgeObjectRelease();
  v10 = (void *)a4(v9);
  if (v8[1])
  {
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v10, sel_setText_, v11);

}

void (*sub_1BC3E7F14(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView_subtitleText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC3E7F6C;
}

void sub_1BC3E7F6C(_QWORD **a1, char a2)
{
  sub_1BC3E7F78(a1, a2, (uint64_t (*)(uint64_t))sub_1BC3E878C);
}

void sub_1BC3E7F78(_QWORD **a1, char a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v5 = *a1;
  v6 = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v7 = v5[3] + v5[4];
    v8 = (void *)a3(v6);
    if (*(_QWORD *)(v7 + 8))
    {
      swift_bridgeObjectRetain();
      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = 0;
    }
    objc_msgSend(v8, sel_setText_, v9);

  }
  free(v5);
}

void *sub_1BC3E8018()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1BC3E8064(void *a1)
{
  sub_1BC3E81F8(a1, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText, (uint64_t (*)(void))sub_1BC3E878C, (SEL *)&selRef_setAttributedText_);
}

void (*sub_1BC3E8080(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC3E80D8;
}

void sub_1BC3E80D8(_QWORD **a1, char a2)
{
  sub_1BC3E8300(a1, a2, (uint64_t (*)(uint64_t))sub_1BC3E878C, (SEL *)&selRef_setAttributedText_);
}

void sub_1BC3E80EC(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(void), SEL *a7)
{
  void *v9;
  id *v10;
  id v11;
  id v12;
  void *v13;
  id v14;

  v9 = *a1;
  v10 = (id *)(*a2 + *a5);
  swift_beginAccess();
  v11 = *v10;
  *v10 = v9;
  v12 = v9;

  v13 = (void *)a6();
  v14 = *v10;
  objc_msgSend(v13, *a7, v14);

}

void *sub_1BC3E8190()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1BC3E81DC(void *a1)
{
  sub_1BC3E81F8(a1, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image, (uint64_t (*)(void))sub_1BC3E88EC, (SEL *)&selRef_setImage_);
}

void sub_1BC3E81F8(void *a1, _QWORD *a2, uint64_t (*a3)(void), SEL *a4)
{
  uint64_t v4;
  id *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v8 = (id *)(v4 + *a2);
  swift_beginAccess();
  v9 = *v8;
  *v8 = a1;
  v10 = a1;

  v11 = (void *)a3();
  v12 = *v8;
  objc_msgSend(v11, *a4, v12);

}

void (*sub_1BC3E8294(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC3E82EC;
}

void sub_1BC3E82EC(_QWORD **a1, char a2)
{
  sub_1BC3E8300(a1, a2, (uint64_t (*)(uint64_t))sub_1BC3E88EC, (SEL *)&selRef_setImage_);
}

void sub_1BC3E8300(_QWORD **a1, char a2, uint64_t (*a3)(uint64_t), SEL *a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v7 = *a1;
  v8 = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v9 = v7[3];
    v10 = v7[4];
    v11 = (void *)a3(v8);
    v12 = *(id *)(v9 + v10);
    objc_msgSend(v11, *a4, v12);

  }
  free(v7);
}

id TipsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id TipsView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  objc_super v23;

  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_subtitleText];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___imageView] = 0;
  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for TipsView();
  v11 = objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v12 = v11;
  v13 = sub_1BC3E8624();
  objc_msgSend(v12, sel_addSubview_, v13);

  v14 = v12;
  v15 = sub_1BC3E878C();
  objc_msgSend(v14, sel_addSubview_, v15);

  v16 = v14;
  v17 = sub_1BC3E88EC();
  objc_msgSend(v16, sel_addSubview_, v17);

  sub_1BC3E8A58(v16);
  v18 = sub_1BC3E8D9C(v16);
  v19 = sub_1BC3E90E8(v16);
  v20 = (void *)objc_opt_self();
  sub_1BC3BB0AC(v18);
  sub_1BC3BB0AC(v19);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v21 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_activateConstraints_, v21);

  return v16;
}

id sub_1BC3E8624()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___titleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setLineBreakMode_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v6 = (void *)sub_1BC62CDDC();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    v7 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_1BC3E878C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___subtitleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setLineBreakMode_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v6 = (void *)sub_1BC62CDDC();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    v7 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_1BC3E88EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___imageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___imageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___imageView);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setContentMode_, 1);
    LODWORD(v6) = 1148846080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v6);
    LODWORD(v7) = 1148846080;
    objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
    v8 = (void *)sub_1BC62CE54();
    objc_msgSend(v5, sel_setImage_, v8);

    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

uint64_t type metadata accessor for TipsView()
{
  return objc_opt_self();
}

uint64_t sub_1BC3E8A58(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v21;

  v21 = MEMORY[0x1E0DEE9D8];
  v2 = sub_1BC3E8624();
  v3 = objc_msgSend(v2, sel_leadingAnchor);

  v4 = sub_1BC3E88EC();
  v5 = objc_msgSend(v4, sel_trailingAnchor);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 11.0);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v7 = sub_1BC3E8624();
  v8 = objc_msgSend(v7, sel_trailingAnchor);

  v9 = objc_msgSend(a1, sel_trailingAnchor);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, -13.0);

  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v11 = sub_1BC3E8624();
  v12 = objc_msgSend(v11, sel_topAnchor);

  v13 = objc_msgSend(a1, sel_topAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v15 = sub_1BC3E8624();
  v16 = objc_msgSend(v15, sel_bottomAnchor);

  v17 = sub_1BC3E878C();
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  return v21;
}

uint64_t sub_1BC3E8D9C(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v22;

  v22 = MEMORY[0x1E0DEE9D8];
  v2 = sub_1BC3E878C();
  v3 = objc_msgSend(v2, sel_leadingAnchor);

  v4 = sub_1BC3E8624();
  v5 = objc_msgSend(v4, sel_leadingAnchor);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v7 = sub_1BC3E878C();
  v8 = objc_msgSend(v7, sel_trailingAnchor);

  v9 = sub_1BC3E8624();
  v10 = objc_msgSend(v9, sel_trailingAnchor);

  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v10);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v12 = sub_1BC3E878C();
  v13 = objc_msgSend(v12, sel_topAnchor);

  v14 = sub_1BC3E8624();
  v15 = objc_msgSend(v14, sel_bottomAnchor);

  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v17 = sub_1BC3E878C();
  v18 = objc_msgSend(v17, sel_bottomAnchor);

  v19 = objc_msgSend(a1, sel_bottomAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, -11.0);

  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  return v22;
}

uint64_t sub_1BC3E90E8(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v11;

  v11 = MEMORY[0x1E0DEE9D8];
  v2 = sub_1BC3E88EC();
  v3 = objc_msgSend(v2, sel_topAnchor);

  v4 = objc_msgSend(a1, sel_topAnchor);
  v5 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v4);

  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v6 = sub_1BC3E88EC();
  v7 = objc_msgSend(v6, sel_leadingAnchor);

  v8 = objc_msgSend(a1, sel_leadingAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 13.0);

  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  return v11;
}

void sub_1BC3E9298(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  if (a2)
  {
    v2 = sub_1BC3E8624();
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    v3 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3);

    v4 = sub_1BC3E878C();
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    v6 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v6);

  }
  else
  {
    v5 = sub_1BC3E8624();
    objc_msgSend(v5, sel_setAccessibilityIdentifier_, 0);

    v7 = sub_1BC3E878C();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, 0);

  }
}

id TipsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TipsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC3E94A8(uint64_t a1, uint64_t a2)
{
  sub_1BC3E9298(a1, a2);
}

uint64_t sub_1BC3E94C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText, a2);
}

uint64_t sub_1BC3E94D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC3E7DC0);
}

uint64_t sub_1BC3E94E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_subtitleText, a2);
}

uint64_t sub_1BC3E94EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC3E7E44);
}

uint64_t keypath_setTm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v7 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

id sub_1BC3E9538@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText, a2);
}

void sub_1BC3E9544(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1BC3E80EC(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText, (uint64_t (*)(void))sub_1BC3E878C, (SEL *)&selRef_setAttributedText_);
}

id sub_1BC3E9570@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image, a2);
}

void sub_1BC3E957C(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1BC3E80EC(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image, (uint64_t (*)(void))sub_1BC3E88EC, (SEL *)&selRef_setImage_);
}

uint64_t method lookup function for TipsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TipsView.titleText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TipsView.titleText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TipsView.titleText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of TipsView.subtitleText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TipsView.subtitleText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TipsView.subtitleText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of TipsView.attributedSubtitleText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TipsView.attributedSubtitleText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TipsView.attributedSubtitleText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TipsView.image.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TipsView.image.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of TipsView.image.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of TipsView.updateAutomationIdentifiers(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

void sub_1BC3E9720()
{
  char *v0;
  char *v1;
  char *v2;

  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_subtitleText];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___imageView] = 0;

  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC3E97D8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  *(_QWORD *)(v1 + 112) = result;
  *(_BYTE *)(v1 + 120) = 0;
  if (*(_BYTE *)(v1 + 121) == 1)
  {
    swift_beginAccess();
    v2 = *(_QWORD *)(v1 + 128);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain();
      v4 = v2 + 40;
      do
      {
        v5 = *(void (**)(uint64_t))(v4 - 8);
        v6 = swift_retain();
        v5(v6);
        swift_release();
        v4 += 16;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)(v1 + 128) = MEMORY[0x1E0DEE9D8];
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BC3E9890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  if ((*(_BYTE *)(v0 + 120) & 1) == 0 && *(_BYTE *)(v0 + 121) == 1)
  {
    swift_beginAccess();
    v1 = *(_QWORD *)(v0 + 128);
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain();
      v3 = v1 + 40;
      do
      {
        v4 = *(void (**)(uint64_t))(v3 - 8);
        v5 = swift_retain();
        v4(v5);
        swift_release();
        v3 += 16;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)(v0 + 128) = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
  }
}

void sub_1BC3E9948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  sub_1BC3E9AF4();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v8);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v11 = (_QWORD *)(a2 + 128);
  swift_beginAccess();
  v12 = *(_QWORD **)(a2 + 128);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 128) = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v12 = sub_1BC3B5F98(0, v12[2] + 1, 1, v12);
    *v11 = v12;
  }
  v15 = v12[2];
  v14 = v12[3];
  if (v15 >= v14 >> 1)
  {
    v12 = sub_1BC3B5F98((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
    *v11 = v12;
  }
  v12[2] = v15 + 1;
  v16 = &v12[2 * v15];
  v16[4] = sub_1BC3E9BBC;
  v16[5] = v10;
  swift_endAccess();
  sub_1BC3E9890();
}

uint64_t sub_1BC3E9AB0()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t _s9LoadStateCMa()
{
  return objc_opt_self();
}

void sub_1BC3E9AF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42D740)
  {
    v0 = sub_1BC62C92C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42D740);
  }
}

uint64_t sub_1BC3E9B5C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC3E9AF4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BC3E9BBC()
{
  sub_1BC3E9AF4();
  return sub_1BC62C920();
}

uint64_t sub_1BC3E9BF8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(_QWORD *)(v0 + 32);
  }
  else
  {
    v2 = *(void **)(v0 + 16);
    type metadata accessor for OnboardingTileAppearanceManager();
    v1 = swift_allocObject();
    *(_QWORD *)(v1 + 16) = v2;
    v3 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
    v4 = v2;
    v5 = (void *)sub_1BC62C650();
    v6 = objc_msgSend(v3, sel_initWithCategory_domainName_healthStore_, 0, v5, v4);

    *(_QWORD *)(v1 + 24) = v6;
    *(_QWORD *)(v0 + 32) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1BC3E9CD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v38 = *v0;
  v1 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3EA7C0(0, &qword_1EF42D820, (uint64_t (*)(uint64_t))sub_1BC3EA740, sub_1BC3EA7A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C957D8]);
  v5 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  v33 = v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - v6;
  sub_1BC3EA7C0(0, &qword_1EF42D838, (uint64_t (*)(uint64_t))sub_1BC3EA830, sub_1BC3EA90C, MEMORY[0x1E0C95A28]);
  v9 = v8;
  v31 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v29 - v10;
  sub_1BC3EA928();
  v34 = v12;
  v36 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3EAAC0();
  v35 = v15;
  v37 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v0;
  v40 = v0[3];
  sub_1BC3EA830();
  sub_1BC3EA90C();
  sub_1BC62C044();
  sub_1BC3E9BF8();
  swift_storeEnumTagMultiPayload();
  v18 = sub_1BC373548();
  swift_release();
  sub_1BC348D78((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
  v40 = v18;
  sub_1BC3EA740();
  sub_1BC3EA7A4();
  v19 = sub_1BC62BFFC();
  swift_release();
  v40 = v19;
  v39 = 1;
  sub_1BC62C014();
  swift_release();
  sub_1BC3EA9F0();
  sub_1BC3EAA58();
  v20 = v32;
  sub_1BC62C020();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v20);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v9);
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = swift_allocObject();
  v23 = v38;
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = v23;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_1BC3EAB88;
  *(_QWORD *)(v24 + 24) = v22;
  sub_1BC347F0C(&qword_1EF42D868, (uint64_t (*)(uint64_t))sub_1BC3EA928, MEMORY[0x1E0C95698]);
  v25 = v34;
  sub_1BC62C02C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v25);
  sub_1BC347F0C(&qword_1EF42D870, (uint64_t (*)(uint64_t))sub_1BC3EAAC0, MEMORY[0x1E0C95950]);
  v26 = v35;
  v27 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v26);
  return v27;
}

uint64_t sub_1BC3EA0BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  unint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  v8 = sub_1BC62BB34();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    LODWORD(v13) = _s15HealthRecordsUI34LabsOnboardingTileDisplayEvaluatorC027meetsConditionsToShowPinnedD3Tip9listItems07nonListP0SbSayAA25UserDomainConceptViewDataVG_AItFZ_0(a1);
    sub_1BC62BAF8();
    v14 = sub_1BC62BB28();
    v15 = sub_1BC62CAAC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v28 = v26;
      *(_DWORD *)v16 = 136446722;
      v29 = a5;
      swift_getMetatypeMetadata();
      v17 = sub_1BC62C6E0();
      v27 = v13;
      v29 = sub_1BC4991F0(v17, v18, &v28);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2082;
      if ((v27 & 1) != 0)
        v19 = 1702195828;
      else
        v19 = 0x65736C6166;
      if ((v27 & 1) != 0)
        v20 = 0xE400000000000000;
      else
        v20 = 0xE500000000000000;
      v29 = sub_1BC4991F0(v19, v20, &v28);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2082;
      if ((a3 & 1) != 0)
        v21 = 0x65736C6166;
      else
        v21 = 1702195828;
      if ((a3 & 1) != 0)
        v13 = 0xE500000000000000;
      else
        v13 = 0xE400000000000000;
      v29 = sub_1BC4991F0(v21, v13, &v28);
      sub_1BC62CFF8();
      LOBYTE(v13) = v27;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v14, v15, "[%{public}s]: Conditions for showing tip: meetsConditions: %{public}s, !hasDismissed: %{public}s", (uint8_t *)v16, 0x20u);
      v22 = v26;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v22, -1, -1);
      MEMORY[0x1BCCF36A8](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v23 = v13 & (a3 ^ 1);
  }
  else
  {
    v23 = 0;
  }
  return v23 & 1;
}

uint64_t LabsOnboardingTileDisplayEvaluator.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t LabsOnboardingTileDisplayEvaluator.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t _s15HealthRecordsUI34LabsOnboardingTileDisplayEvaluatorC027meetsConditionsToShowPinnedD3Tip9listItems07nonListP0SbSayAA25UserDomainConceptViewDataVG_AItFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id *v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v29 - v3;
  v5 = sub_1BC62A760();
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v37 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v29 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  v38 = type metadata accessor for UserDomainConceptViewData();
  v12 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v14 = (id *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v29 - v16;
  v40 = a1;
  swift_bridgeObjectRetain();
  v18 = swift_bridgeObjectRetain();
  sub_1BC3BB578(v18);
  v19 = *(_QWORD *)(v40 + 16);
  if (v19)
  {
    v30 = *(_QWORD *)(a1 + 16);
    v31 = v40;
    v20 = v40 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v33 = *(_QWORD *)(v12 + 72);
    swift_bridgeObjectRetain();
    v32 = v19;
    v21 = v19;
    v34 = v4;
    v35 = v17;
    while (1)
    {
      sub_1BC3AA02C(v20, (uint64_t)v17);
      sub_1BC3462D8((uint64_t)&v17[*(int *)(v38 + 36)], (uint64_t)v4);
      sub_1BC3AA02C((uint64_t)v17, (uint64_t)v14);
      v22 = v39;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v4, 1, v5) == 1)
      {
        v23 = objc_msgSend(v14[1], sel_modificationDate);
        sub_1BC62A724();

        sub_1BC36D71C((uint64_t)v4);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v11, v4, v5);
      }
      v24 = v14;
      sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      v25 = v36;
      sub_1BC62A754();
      v26 = v37;
      sub_1BC62A6C4();
      v27 = *(void (**)(char *, uint64_t))(v22 + 8);
      v27(v25, v5);
      LOBYTE(v25) = sub_1BC62A70C();
      v27(v26, v5);
      v27(v11, v5);
      v17 = v35;
      sub_1BC348D78((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      if ((v25 & 1) != 0)
        break;
      v4 = v34;
      v20 += v33;
      --v21;
      v14 = v24;
      if (!v21)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    if (v32 >= 6 && !v30)
      return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t type metadata accessor for LabsOnboardingTileDisplayEvaluator()
{
  return objc_opt_self();
}

uint64_t method lookup function for LabsOnboardingTileDisplayEvaluator()
{
  return swift_lookUpClassMethod();
}

void sub_1BC3EA740()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42D828)
  {
    sub_1BC35E44C();
    v0 = sub_1BC62BE94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42D828);
  }
}

uint64_t sub_1BC3EA7A4()
{
  return sub_1BC347F0C(&qword_1EF42D830, (uint64_t (*)(uint64_t))sub_1BC3EA740, MEMORY[0x1E0C95D90]);
}

void sub_1BC3EA7C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_1BC3EA830()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42D840)
  {
    sub_1BC3EA894();
    v0 = sub_1BC62BE94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42D840);
  }
}

void sub_1BC3EA894()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF431D20)
  {
    sub_1BC357158(255, &qword_1EF42CA90, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF431D20);
  }
}

uint64_t sub_1BC3EA90C()
{
  return sub_1BC347F0C(&qword_1EF431D30, (uint64_t (*)(uint64_t))sub_1BC3EA830, MEMORY[0x1E0C95D90]);
}

void sub_1BC3EA928()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42D848)
  {
    sub_1BC3EA7C0(255, &qword_1EF42D838, (uint64_t (*)(uint64_t))sub_1BC3EA830, sub_1BC3EA90C, MEMORY[0x1E0C95A28]);
    sub_1BC3EA7C0(255, &qword_1EF42D820, (uint64_t (*)(uint64_t))sub_1BC3EA740, sub_1BC3EA7A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C957D8]);
    sub_1BC3EA9F0();
    sub_1BC3EAA58();
    v0 = sub_1BC62BDE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42D848);
  }
}

unint64_t sub_1BC3EA9F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42D850;
  if (!qword_1EF42D850)
  {
    sub_1BC3EA7C0(255, &qword_1EF42D838, (uint64_t (*)(uint64_t))sub_1BC3EA830, sub_1BC3EA90C, MEMORY[0x1E0C95A28]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95A38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42D850);
  }
  return result;
}

unint64_t sub_1BC3EAA58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42D858;
  if (!qword_1EF42D858)
  {
    sub_1BC3EA7C0(255, &qword_1EF42D820, (uint64_t (*)(uint64_t))sub_1BC3EA740, sub_1BC3EA7A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C957D8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C957E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42D858);
  }
  return result;
}

void sub_1BC3EAAC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42D860)
  {
    sub_1BC3EA928();
    sub_1BC347F0C(&qword_1EF42D868, (uint64_t (*)(uint64_t))sub_1BC3EA928, MEMORY[0x1E0C95698]);
    v0 = sub_1BC62BE10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42D860);
  }
}

uint64_t sub_1BC3EAB40()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC3EAB64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC3EAB88(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return sub_1BC3EA0BC(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1BC3EAB90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC3EABB4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  *a2 = result & 1;
  return result;
}

id sub_1BC3EABEC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController____lazy_storage___modePicker;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController____lazy_storage___modePicker);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController____lazy_storage___modePicker);
  }
  else
  {
    v4 = sub_1BC3EAC4C(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC3EAC4C(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = MEMORY[0x1E0DEE9D8];
  sub_1BC3BD7C8(0, 2, 0);
  v1 = 0;
  v2 = 0;
  v3 = v19;
  v4 = MEMORY[0x1E0DEA968];
  do
  {
    v5 = v1;
    if ((*((_BYTE *)&unk_1E74D25C0 + v2 + 32) & 1) != 0)
    {
      if (qword_1ED6A4888 != -1)
        swift_once();
    }
    else if (qword_1ED6A4888 != -1)
    {
      swift_once();
    }
    v6 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v7 = sub_1BC62A4A8();
    v9 = v8;
    swift_bridgeObjectRelease();

    v18 = v4;
    v19 = v3;
    *(_QWORD *)&v17 = v7;
    *((_QWORD *)&v17 + 1) = v9;
    v11 = *(_QWORD *)(v3 + 16);
    v10 = *(_QWORD *)(v3 + 24);
    if (v11 >= v10 >> 1)
    {
      sub_1BC3BD7C8(v10 > 1, v11 + 1, 1);
      v3 = v19;
    }
    *(_QWORD *)(v3 + 16) = v11 + 1;
    sub_1BC35E088(&v17, (_OWORD *)(v3 + 32 * v11 + 32));
    v1 = 1;
    v2 = 1u;
  }
  while ((v5 & 1) == 0);
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3C58]);
  v13 = (void *)sub_1BC62C86C();
  swift_release();
  v14 = objc_msgSend(v12, sel_initWithItems_, v13, 0xE000000000000000);

  objc_msgSend(v14, sel_setSelectedSegmentIndex_, 0);
  objc_msgSend(v14, sel_addTarget_action_forControlEvents_, a1, sel_modePickerDidChange_, 4096);
  objc_msgSend(v14, sel_sizeToFit);
  return v14;
}

char *sub_1BC3EAEC8(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  unint64_t v18;
  char *result;
  char *v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  id v25;
  id v26;
  id v27;
  char *v28;
  uint64_t v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;

  v41 = a2;
  v6 = sub_1BC62CB84();
  v43 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v40 - v13;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_preferredSegment) = 0;
  v15 = OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_additionalPredicate;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_additionalPredicate) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController____lazy_storage___modePicker) = 0;
  v16 = *(void **)(v3 + v15);
  *(_QWORD *)(v3 + v15) = a3;
  v42 = a3;

  v17 = objc_msgSend(a1, sel_categoryTypes);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  v18 = sub_1BC62C878();

  result = (char *)objc_msgSend((id)objc_opt_self(), sel_allSupportedRecordCategories);
  if (result)
  {
    v20 = result;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5920);
    v21 = sub_1BC62C878();

    swift_bridgeObjectRetain();
    v22 = sub_1BC3EBA58(v21, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v23 = sub_1BC62A7B4();
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v24(v14, 1, 1, v23);
    v24(v12, 1, 1, v23);
    v25 = v22;
    v26 = a1;
    v27 = v41;
    v28 = sub_1BC356878(v27, v22, (uint64_t)v14, 0, a1, (uint64_t)v12, 0, 0, 0);

    v29 = qword_1ED6A4888;
    v30 = v28;
    if (v29 != -1)
      swift_once();
    v31 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v32 = sub_1BC62A4A8();
    v34 = v33;
    swift_bridgeObjectRelease();

    v35 = (uint64_t *)&v30[OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle];
    swift_beginAccess();
    *v35 = v32;
    v35[1] = v34;

    swift_bridgeObjectRelease();
    v36 = objc_msgSend(v30, sel_navigationItem);
    v37 = sub_1BC3EABEC();
    v38 = v43;
    (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v8, *MEMORY[0x1E0D2BBE0], v6);
    v39 = (void *)sub_1BC62CB78();

    (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v6);
    return v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC3EB34C()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  id v13;

  v1 = sub_1BC3EABEC();
  v2 = (unint64_t)objc_msgSend(v1, sel_selectedSegmentIndex);

  if (v2 > 1)
  {
    __break(1u);
  }
  else
  {
    v3 = byte_1E74D2A40[v2 + 32];
    v4 = OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_preferredSegment;
    *(_BYTE *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_preferredSegment) = v3;
    v5 = OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider;
    v6 = *(void **)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider);
    if (v6)
    {
      objc_msgSend(v6, sel_setShouldClearPagingCacheOnNextReload_, 1);
      v7 = *(void **)(v0 + v5);
      if (v7)
      {
        v8 = *(_BYTE *)(v0 + v4);
        v9 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_additionalPredicate);
        v10 = v7;
        v11 = v9;
        v12 = sub_1BC3EB4B0(v9, v8);

        if (v12)
        {
          sub_1BC34B6A0(0, &qword_1ED6A58D8);
          sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
          sub_1BC3754E8();
          v13 = (id)sub_1BC62C53C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v13 = 0;
        }
        objc_msgSend(v10, sel_setFilterPredicatesByType_, v13);

      }
    }
  }
}

unint64_t sub_1BC3EB4B0(void *a1, char a2)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t inited;
  id v17;

  if ((a2 & 1) != 0)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_diagnosticTestResultType);
    v9 = objc_msgSend((id)objc_opt_self(), sel_predicateForDiagnosticTestResultWithReferenceRangeStatus_, 2);
    v10 = v9;
    if (a1)
    {
      sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1BC639570;
      *(_QWORD *)(v11 + 32) = v10;
      *(_QWORD *)(v11 + 40) = a1;
      sub_1BC62C890();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
      v12 = a1;
      v13 = v10;
      v14 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v15 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v14);

    }
    else
    {
      v15 = v9;
    }
    sub_1BC357158(0, &qword_1EF42D8E0, (uint64_t (*)(uint64_t))sub_1BC3EBD60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BC639590;
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 40) = v15;
    v17 = v8;
    v7 = sub_1BC35C4C8(inited);

  }
  else if (a1)
  {
    v3 = (void *)objc_opt_self();
    v4 = a1;
    v5 = objc_msgSend(v3, sel_diagnosticTestResultType);
    sub_1BC357158(0, &qword_1EF42D8E0, (uint64_t (*)(uint64_t))sub_1BC3EBD60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v6 = swift_initStackObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v6 + 32) = v5;
    *(_QWORD *)(v6 + 40) = v4;
    return sub_1BC35C4C8(v6);
  }
  else
  {
    return 0;
  }
  return v7;
}

void sub_1BC3EB750()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC3EB77C()
{
  uint64_t v0;

}

id sub_1BC3EB7A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UDCRecordsTableViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC3EB814()
{
  return type metadata accessor for UDCRecordsTableViewController();
}

uint64_t type metadata accessor for UDCRecordsTableViewController()
{
  uint64_t result;

  result = qword_1EF42D8B8;
  if (!qword_1EF42D8B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC3EB858()
{
  return swift_updateClassMetadata2();
}

uint64_t storeEnumTagSinglePayload for UDCRecordsTableViewController.ModeSegment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC3EB8F0 + 4 * byte_1BC63CE65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC3EB924 + 4 * byte_1BC63CE60[v4]))();
}

uint64_t sub_1BC3EB924(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC3EB92C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC3EB934);
  return result;
}

uint64_t sub_1BC3EB940(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC3EB948);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC3EB94C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC3EB954(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UDCRecordsTableViewController.ModeSegment()
{
  return &type metadata for UDCRecordsTableViewController.ModeSegment;
}

unint64_t sub_1BC3EB974()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42D8C8;
  if (!qword_1EF42D8C8)
  {
    sub_1BC34B508(255, &qword_1EF42D8D0, (uint64_t)&type metadata for UDCRecordsTableViewController.ModeSegment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42D8C8);
  }
  return result;
}

_QWORD *sub_1BC3EB9D4@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1BC3EB9F4(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_1BC3EBA00(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E74D2A68;
}

unint64_t sub_1BC3EBA14()
{
  unint64_t result;

  result = qword_1EF42D8D8;
  if (!qword_1EF42D8D8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63CF7C, &type metadata for UDCRecordsTableViewController.ModeSegment);
    atomic_store(result, (unint64_t *)&qword_1EF42D8D8);
  }
  return result;
}

id sub_1BC3EBA58(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint32_t *p_ivar_base_size;
  unint64_t v8;
  void *v9;
  id v10;
  BOOL v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_39;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v4)
  {
    v25 = v3;
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v26 = v3 + 32;
    v27 = v3 & 0xC000000000000001;
    p_ivar_base_size = &HRConceptTitleTableHeaderView__metaData.ivar_base_size;
    v8 = 0x1E0CB3000uLL;
    v28 = a2 & 0xC000000000000001;
    v24 = v4;
    while (1)
    {
      if (v6)
      {
        v10 = (id)MEMORY[0x1BCCF24CC](v5, v3);
        v11 = __OFADD__(v5++, 1);
        if (v11)
          goto LABEL_38;
      }
      else
      {
        v10 = *(id *)(v26 + 8 * v5);
        v11 = __OFADD__(v5++, 1);
        if (v11)
          goto LABEL_38;
      }
      v29 = v10;
      v12 = objc_msgSend(objc_allocWithZone(*(Class *)(v8 + 2024)), sel_initWithInteger_, objc_msgSend(v10, *((SEL *)p_ivar_base_size + 455)));
      if (a2 >> 62)
        break;
      v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13)
        goto LABEL_15;
LABEL_4:

      swift_bridgeObjectRelease();
      v9 = v29;
LABEL_5:

      if (v5 == v4)
        goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    v13 = sub_1BC62D3B8();
    if (!v13)
      goto LABEL_4;
LABEL_15:
    if (v28)
      v14 = (id)MEMORY[0x1BCCF24CC](0, a2);
    else
      v14 = *(id *)(a2 + 32);
    v15 = v14;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    v16 = sub_1BC62CEB4();

    if ((v16 & 1) != 0)
    {
LABEL_33:

      swift_bridgeObjectRelease();
      v22 = v29;
      swift_bridgeObjectRelease();
      return v22;
    }
    if (v13 == 1)
    {

      swift_bridgeObjectRelease();
LABEL_31:
      v6 = v27;
      v9 = v29;
      p_ivar_base_size = (_DWORD *)(&HRConceptTitleTableHeaderView__metaData + 8);
      v8 = 0x1E0CB3000;
      goto LABEL_5;
    }
    if (v28)
    {
      v17 = 1;
      while (1)
      {
        MEMORY[0x1BCCF24CC](v17, a2);
        v18 = v17 + 1;
        if (__OFADD__(v17, 1))
          break;
        v3 = sub_1BC62CEB4();
        swift_unknownObjectRelease();
        if ((v3 & 1) != 0)
          goto LABEL_33;
        ++v17;
        if (v18 == v13)
          goto LABEL_30;
      }
      __break(1u);
    }
    else
    {
      v3 = 5;
      while (1)
      {
        v19 = v3 - 3;
        if (__OFADD__(v3 - 4, 1))
          break;
        v20 = *(id *)(a2 + 8 * v3);
        v21 = sub_1BC62CEB4();

        if ((v21 & 1) != 0)
          goto LABEL_33;
        ++v3;
        if (v19 == v13)
        {
LABEL_30:

          swift_bridgeObjectRelease();
          v3 = v25;
          v4 = v24;
          goto LABEL_31;
        }
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
  }
LABEL_40:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1BC3EBD60()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF4366A0)
  {
    sub_1BC34B6A0(255, &qword_1ED6A58D8);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58C0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF4366A0);
  }
}

uint64_t sub_1BC3EBDEC()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC3EBE34(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  char v6;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData);
  result = swift_beginAccess();
  v5 = *v3;
  *v3 = a1;
  if (v5)
  {
    if (a1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v6 = sub_1BC3EDD84(v5, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0)
        return swift_bridgeObjectRelease();
    }
  }
  else if (!a1)
  {
    return result;
  }
  sub_1BC3EC56C();
  return swift_bridgeObjectRelease();
}

void (*sub_1BC3EBED8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  swift_bridgeObjectRetain();
  return sub_1BC3EBF4C;
}

void sub_1BC3EBF4C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  v2 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_QWORD *)(v4 + v3);
  *(_QWORD *)(v4 + v3) = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v7 = v2[4];
  v6 = v2[5];
  if ((a2 & 1) != 0)
  {
    v8 = *(_QWORD *)(v7 + v6);
    swift_bridgeObjectRetain();
    if (v5)
    {
      if (v8)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v9 = sub_1BC3EDD84(v5, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          goto LABEL_12;
      }
      goto LABEL_11;
    }
    if (v8)
    {
LABEL_11:
      sub_1BC3EC56C();
LABEL_12:
      swift_bridgeObjectRelease();
    }
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v10 = *(_QWORD *)(v7 + v6);
  if (v5)
  {
    if (v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = sub_1BC3EDD84(v5, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (v10)
  {
LABEL_15:
    sub_1BC3EC56C();
    goto LABEL_16;
  }
LABEL_17:
  free(v2);
}

id sub_1BC3EC054()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView____lazy_storage___stackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView____lazy_storage___stackView);
  }
  else
  {
    v4 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
    v5 = (void *)sub_1BC62C86C();
    v6 = objc_msgSend(v4, sel_initWithArrangedSubviews_, v5);

    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v6, sel_setAxis_, 1);
    objc_msgSend(v6, sel_setDistribution_, 3);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id MultiValueView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id MultiValueView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  double v10;
  id v11;
  objc_super v13;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView____lazy_storage___stackView] = 0;
  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for MultiValueView();
  v9 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
  LODWORD(v10) = 1144750080;
  objc_msgSend(v9, sel_setContentCompressionResistancePriority_forAxis_, 1, v10);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v11 = sub_1BC3EC054();
  objc_msgSend(v9, sel_addSubview_, v11);

  sub_1BC3EC314();
  return v9;
}

void sub_1BC3EC314()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v1 = (void *)objc_opt_self();
  sub_1BC34D844();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC63A3D0;
  v3 = sub_1BC3EC054();
  v4 = objc_msgSend(v3, sel_leadingAnchor);

  v5 = objc_msgSend(v0, sel_leadingAnchor);
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  *(_QWORD *)(v2 + 32) = v6;
  v7 = sub_1BC3EC054();
  v8 = objc_msgSend(v7, sel_trailingAnchor);

  v9 = objc_msgSend(v0, sel_trailingAnchor);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(_QWORD *)(v2 + 40) = v10;
  v11 = sub_1BC3EC054();
  v12 = objc_msgSend(v11, sel_topAnchor);

  v13 = objc_msgSend(v0, sel_topAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v2 + 48) = v14;
  v15 = sub_1BC3EC054();
  v16 = objc_msgSend(v15, sel_bottomAnchor);

  v17 = objc_msgSend(v0, sel_bottomAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v2 + 56) = v18;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v19 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v19);

}

uint64_t sub_1BC3EC56C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;
  uint64_t v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  BOOL v28;
  char *v29;
  unint64_t v30;
  id v31;
  double Width;
  double v33;
  double v34;
  id v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  objc_class *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  void *v73;
  void *v74;
  int v75;
  void *v76;
  int v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  int v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  void *v96;
  id v97;
  id v98;
  void *v99;
  id v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  CGRect v111;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData);
  result = swift_beginAccess();
  v3 = *v1;
  if (!*v1)
    return result;
  swift_bridgeObjectRetain();
  v4 = sub_1BC3EC054();
  v5 = objc_msgSend(v4, sel_arrangedSubviews);

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  v6 = sub_1BC62C878();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC62D3B8();
    v7 = result;
    if (result)
      goto LABEL_4;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_4:
      if (v7 < 1)
      {
        __break(1u);
        return result;
      }
      v8 = 0;
      do
      {
        if ((v6 & 0xC000000000000001) != 0)
          v9 = (id)MEMORY[0x1BCCF24CC](v8, v6);
        else
          v9 = *(id *)(v6 + 8 * v8 + 32);
        v10 = v9;
        ++v8;
        v11 = sub_1BC3EC054();
        objc_msgSend(v11, sel_removeArrangedSubview_, v10);

      }
      while (v7 != v8);
    }
  }
  swift_bridgeObjectRelease_n();
  v12 = *(_QWORD *)(v3 + 16);
  if (v12)
  {
    v68 = (objc_class *)type metadata accessor for SingleValueView();
    swift_bridgeObjectRetain();
    v13 = (unsigned __int8 *)(v3 + 132);
    do
    {
      v109 = *(_QWORD *)(v13 - 100);
      v110 = v12;
      v14 = *(_QWORD *)(v13 - 92);
      v15 = *(_QWORD *)(v13 - 76);
      v16 = *(void **)(v13 - 68);
      v17 = *(void **)(v13 - 60);
      v94 = v17;
      v96 = v16;
      v18 = *(void **)(v13 - 52);
      v91 = v18;
      v107 = *(_QWORD *)(v13 - 44);
      v108 = *(_QWORD *)(v13 - 84);
      v19 = *(_QWORD *)(v13 - 36);
      v20 = *(_QWORD *)(v13 - 20);
      v104 = *(_QWORD *)(v13 - 12);
      v106 = *(_QWORD *)(v13 - 28);
      v79 = *(v13 - 4);
      v75 = *(v13 - 3);
      v77 = *(v13 - 2);
      v83 = *(v13 - 1);
      v87 = *v13;
      v21 = objc_allocWithZone(v68);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v102 = v16;
      v100 = v17;
      v98 = v18;
      swift_bridgeObjectRetain();
      v22 = (char *)objc_msgSend(v21, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      v23 = 256;
      if (!v75)
        v23 = 0;
      v24 = v23 | v79;
      v25 = 0x10000;
      if (!v77)
        v25 = 0;
      v26 = 0x1000000;
      if (!v83)
        v26 = 0;
      v27 = v24 | v25 | v26;
      v28 = v87 != 0;
      v29 = &v22[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData];
      swift_beginAccess();
      v84 = *((_QWORD *)v29 + 1);
      v88 = *(_QWORD *)v29;
      v78 = *((_QWORD *)v29 + 3);
      v80 = *((_QWORD *)v29 + 2);
      v74 = (void *)*((_QWORD *)v29 + 5);
      v76 = (void *)*((_QWORD *)v29 + 4);
      v73 = (void *)*((_QWORD *)v29 + 6);
      v72 = *((_OWORD *)v29 + 4);
      v70 = *((_QWORD *)v29 + 11);
      v71 = *((_QWORD *)v29 + 10);
      v30 = *((unsigned int *)v29 + 24) | ((unint64_t)v29[100] << 32);
      *(_QWORD *)v29 = v109;
      *((_QWORD *)v29 + 1) = v14;
      *((_QWORD *)v29 + 2) = v108;
      *((_QWORD *)v29 + 3) = v15;
      *((_QWORD *)v29 + 4) = v96;
      *((_QWORD *)v29 + 5) = v94;
      *((_QWORD *)v29 + 6) = v91;
      *((_QWORD *)v29 + 7) = v107;
      *((_QWORD *)v29 + 8) = v19;
      *((_QWORD *)v29 + 9) = v106;
      *((_QWORD *)v29 + 10) = v20;
      *((_QWORD *)v29 + 11) = v104;
      *((_DWORD *)v29 + 24) = v27;
      v29[100] = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v105 = v102;
      v103 = v100;
      v101 = v98;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC3EDFF4(v88, v84, v80, v78, v76, v74, v73);
      v31 = objc_msgSend(v22, sel_superview, v72, v71, v70, v30);
      if (v31)
      {
        v99 = v31;
        objc_msgSend(v31, sel_bounds);
        Width = CGRectGetWidth(v111);
        if (qword_1EF4285F8 != -1)
          swift_once();
        v33 = *(double *)&qword_1EF459E78;
        v34 = *(double *)&qword_1EF459E88;
        v35 = sub_1BC476648();
        v36 = v35;
        v37 = *((_QWORD *)v29 + 1);
        v69 = v22;
        if (v37)
        {
          v38 = *((unsigned int *)v29 + 24) | ((unint64_t)v29[100] << 32);
          v97 = v35;
          v40 = *((_QWORD *)v29 + 10);
          v39 = *((_QWORD *)v29 + 11);
          v41 = *((_QWORD *)v29 + 9);
          v92 = (void *)*((_QWORD *)v29 + 6);
          v89 = (void *)*((_QWORD *)v29 + 5);
          v81 = *((_QWORD *)v29 + 8);
          v85 = (void *)*((_QWORD *)v29 + 4);
          v43 = *((_QWORD *)v29 + 2);
          v42 = *((_QWORD *)v29 + 3);
          v44 = *(_QWORD *)v29;
          sub_1BC3EE064(*(_QWORD *)v29, v37, v43, v42, v85, v89, v92);
          swift_bridgeObjectRetain();
          v66 = v39;
          v67 = v38;
          v36 = v97;
          v64 = v41;
          v65 = v40;
          v62 = v81;
          v22 = v69;
          sub_1BC3EDFF4(v44, v37, v43, v42, v85, v89, v92);
          v45 = (void *)sub_1BC62C650();
          swift_bridgeObjectRelease();
        }
        else
        {
          v45 = 0;
        }
        objc_msgSend(v36, sel_setText_, v45, v62, v64, v65, v66, v67);

        v46 = *((_QWORD *)v29 + 1);
        if (v46)
        {
          v47 = *((_QWORD *)v29 + 10);
          v82 = *((unsigned int *)v29 + 24) | ((unint64_t)v29[100] << 32);
          v86 = *((_QWORD *)v29 + 11);
          v48 = *((_QWORD *)v29 + 8);
          v50 = (void *)*((_QWORD *)v29 + 4);
          v49 = (void *)*((_QWORD *)v29 + 5);
          v51 = *((_QWORD *)v29 + 3);
          v95 = *((_QWORD *)v29 + 2);
          v90 = *((_QWORD *)v29 + 9);
          v93 = *(_QWORD *)v29;
          v52 = (void *)*((_QWORD *)v29 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v53 = v50;
          v54 = v49;
          v55 = v52;
          swift_bridgeObjectRetain();
          v56 = sub_1BC475C70(Width - v33 - v34);
          v63 = v48;
          v22 = v69;
          sub_1BC3EDFF4(v93, v46, v95, v51, v50, v49, v52);
          v57 = sub_1BC47654C();
          objc_msgSend(v57, sel_setAttributedText_, v56, v63, v90, v47, v86, v82);

        }
        sub_1BC476B44();

      }
      v58 = sub_1BC3EC054();
      objc_msgSend(v58, sel_addArrangedSubview_, v22);

      if (v110 != 1)
      {
        v59 = sub_1BC3EC054();
        v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
        HKUIOnePixel();
        objc_msgSend(v60, sel_setSeparatorThickness_);
        v61 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
        objc_msgSend(v60, sel_setColor_, v61);

        objc_msgSend(v60, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        objc_msgSend(v59, sel_addArrangedSubview_, v60);

      }
      v13 += 104;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v110 - 1;
    }
    while (v110 != 1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

id MultiValueView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MultiValueView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC3ECDE8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1BC62D574(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1BC62D574() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BC3ECEAC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  char v10;
  BOOL v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == a2[2])
  {
    if (!v2 || (_QWORD *)a1 == a2)
      return 1;
    v4 = *(_QWORD *)(a1 + 48);
    v3 = *(_QWORD *)(a1 + 56);
    v5 = *(unsigned __int8 *)(a1 + 72);
    v7 = a2[6];
    v6 = a2[7];
    v8 = *(_QWORD *)(a1 + 32) == a2[4] && *(_QWORD *)(a1 + 40) == a2[5];
    if (v8 || (v9 = a2[7], v10 = sub_1BC62D574(), v6 = v9, (v10 & 1) != 0))
    {
      v11 = v4 == v7 && v3 == v6;
      if (v11 || (sub_1BC62D574() & 1) != 0)
        __asm { BR              X8 }
    }
  }
  return 0;
}

uint64_t sub_1BC3ED1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a1 + 56);
    for (i = (uint64_t *)(a2 + 56); ; i += 10)
    {
      v5 = *(v3 - 1);
      v6 = *v3;
      v7 = v3[1];
      v20 = v3[3];
      v21 = v3[2];
      v14 = v3[5];
      v15 = v3[6];
      v8 = *(i - 1);
      v9 = *i;
      v10 = i[1];
      v11 = i[2];
      v18 = i[3];
      v19 = v3[4];
      v13 = i[5];
      v16 = i[6];
      v17 = i[4];
      if ((*(v3 - 3) != *(i - 3) || *(v3 - 2) != *(i - 2)) && (sub_1BC62D574() & 1) == 0)
        break;
      if ((v5 != v8 || v6 != v9) && (sub_1BC62D574() & 1) == 0
        || (v7 != v10 || v21 != v11) && (sub_1BC62D574() & 1) == 0
        || (v20 != v18 || v19 != v17) && (sub_1BC62D574() & 1) == 0)
      {
        break;
      }
      if (v15)
      {
        if (!v16 || (v14 != v13 || v15 != v16) && (sub_1BC62D574() & 1) == 0)
          return 0;
      }
      else if (v16)
      {
        return 0;
      }
      v3 += 10;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1BC3ED360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  BOOL v21;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1BC62A7B4();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v23 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12 == *(_QWORD *)(a2 + 16))
  {
    if (!v12 || a1 == a2)
    {
      v18 = 1;
    }
    else
    {
      v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v23 = *(_QWORD *)(v8 + 72);
      v24 = v8;
      v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16);
      v15 = v12 - 1;
      do
      {
        v16 = a1;
        v14(v11, a1 + v13, v4, v9);
        v17 = a2;
        ((void (*)(char *, unint64_t, uint64_t))v14)(v6, a2 + v13, v4);
        sub_1BC3EDFAC();
        v18 = sub_1BC62C644();
        v19 = *(void (**)(char *, uint64_t))(v24 + 8);
        v19(v6, v4);
        v19(v11, v4);
        v21 = v15-- != 0;
        if ((v18 & 1) == 0)
          break;
        v13 += v23;
        a2 = v17;
        a1 = v16;
      }
      while (v21);
    }
  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1BC3ED4CC(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  char v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;

  v5 = (void *)((unint64_t)a1 >> 62);
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRetain();
    v23 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v6 == v23)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  v7 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_35;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v8 = a1;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return 1;
  if (v6 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v24 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_41:
    result = MEMORY[0x1BCCF24CC](0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v5 = (void *)result;
  v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_43:
    v13 = (id)MEMORY[0x1BCCF24CC](0, a2);
LABEL_21:
    v14 = v13;
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    v15 = sub_1BC62CEB4();

    if ((v15 & 1) != 0)
    {
      v16 = 1 - v6;
      for (i = 5; ; ++i)
      {
        v6 = v16 + i == 5;
        if (v16 + i == 5)
          return v6;
        v21 = i - 4;
        if (v24)
        {
          v22 = (id)MEMORY[0x1BCCF24CC](i - 4, a1);
          if (v2)
            goto LABEL_23;
        }
        else
        {
          if (v21 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          v22 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_23:
            v18 = (id)MEMORY[0x1BCCF24CC](i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v21 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_39;
        v18 = *(id *)(a2 + 8 * i);
LABEL_24:
        v19 = v18;
        v20 = sub_1BC62CEB4();

        if ((v20 & 1) == 0)
          return v6;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id sub_1BC3ED754(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v30 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v5 == v30)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v31 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v3 + 32); ; result = (id)MEMORY[0x1BCCF24CC](0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)MEMORY[0x1BCCF24CC](0, v2);
LABEL_21:
    v14 = v13;
    sub_1BC34B6A0(0, &qword_1ED6A52D8);
    v15 = sub_1BC62CEB4();

    if ((v15 & 1) == 0)
      goto LABEL_48;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v31)
          v19 = (id)MEMORY[0x1BCCF24CC](v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x1BCCF24CC](v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_53;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = sub_1BC62CEB4();

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_52;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = sub_1BC62CEB4();

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3EDA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  char v22;
  uint64_t v24;

  v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (uint64_t *)((char *)&v24 - v9);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v24 - v12;
  MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v24 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v17 && a1 != a2)
  {
    v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v19 = *(_QWORD *)(v14 + 72);
    do
    {
      sub_1BC3AFE24(a1 + v18, (uint64_t)v16);
      sub_1BC3AFE24(a2 + v18, (uint64_t)v13);
      if (*((_QWORD *)v16 + 2) == *((_QWORD *)v13 + 2) && *((_QWORD *)v16 + 3) == *((_QWORD *)v13 + 3))
      {
        sub_1BC3AFE24((uint64_t)v16, (uint64_t)v10);
        sub_1BC3AFE24((uint64_t)v13, (uint64_t)v7);
      }
      else
      {
        v22 = sub_1BC62D574();
        sub_1BC3AFE24((uint64_t)v16, (uint64_t)v10);
        sub_1BC3AFE24((uint64_t)v13, (uint64_t)v7);
        if ((v22 & 1) == 0)
        {
          sub_1BC3AFE68((uint64_t)v10);
          sub_1BC3AFE68((uint64_t)v7);
          sub_1BC3AFE68((uint64_t)v13);
          sub_1BC3AFE68((uint64_t)v16);
          return 0;
        }
      }
      if (*v10 == *v7 && v10[1] == v7[1])
      {
        sub_1BC3AFE68((uint64_t)v10);
        sub_1BC3AFE68((uint64_t)v7);
        sub_1BC3AFE68((uint64_t)v13);
        sub_1BC3AFE68((uint64_t)v16);
      }
      else
      {
        v20 = sub_1BC62D574();
        sub_1BC3AFE68((uint64_t)v10);
        sub_1BC3AFE68((uint64_t)v7);
        sub_1BC3AFE68((uint64_t)v13);
        sub_1BC3AFE68((uint64_t)v16);
        if ((v20 & 1) == 0)
          return 0;
      }
      v18 += v19;
      --v17;
    }
    while (v17);
  }
  return 1;
}

uint64_t sub_1BC3EDC60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void **v3;
  void **v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (void **)(a1 + 32);
    v4 = (void **)(a2 + 32);
    do
    {
      v6 = *v3++;
      v5 = v6;
      v8 = *v4++;
      v7 = v8;
      switch((unint64_t)v5)
      {
        case 0uLL:
          if (v7)
            return 0;
          break;
        case 1uLL:
          if (v7 != (void *)1)
            return 0;
          break;
        case 2uLL:
          if (v7 != (void *)2)
            return 0;
          break;
        case 3uLL:
          if (v7 != (void *)3)
            return 0;
          break;
        default:
          if ((unint64_t)v7 < 4)
            return 0;
          sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
          sub_1BC377DC8(v7);
          sub_1BC377DC8(v5);
          v9 = sub_1BC62CEB4();
          sub_1BC3781AC(v7);
          sub_1BC3781AC(v5);
          if ((v9 & 1) == 0)
            return 0;
          break;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1BC3EDD84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  __int128 v23;
  __int128 v24;
  char v25;
  BOOL v27;
  _QWORD v29[2];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  _QWORD v40[2];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v25 = 1;
    }
    else
    {
      v5 = 0;
      v6 = v2 - 1;
      do
      {
        v7 = *(_QWORD *)(a1 + v5 + 40);
        v8 = *(_BYTE *)(a1 + v5 + 128);
        v9 = *(_BYTE *)(a1 + v5 + 129);
        v10 = *(_BYTE *)(a1 + v5 + 130);
        v11 = *(_BYTE *)(a1 + v5 + 131);
        v12 = *(_BYTE *)(a1 + v5 + 132);
        v40[0] = *(_QWORD *)(a1 + v5 + 32);
        v40[1] = v7;
        v13 = *(_OWORD *)(a1 + v5 + 64);
        v41 = *(_OWORD *)(a1 + v5 + 48);
        v14 = *(_OWORD *)(a1 + v5 + 80);
        v15 = *(_OWORD *)(a1 + v5 + 96);
        v42 = v13;
        v43 = v14;
        v16 = *(_OWORD *)(a1 + v5 + 112);
        v44 = v15;
        v45 = v16;
        v46 = v8;
        v47 = v9;
        v48 = v10;
        v49 = v11;
        v50 = v12;
        v17 = *(_QWORD *)(a2 + v5 + 40);
        v18 = *(_BYTE *)(a2 + v5 + 128);
        v19 = *(_BYTE *)(a2 + v5 + 129);
        v20 = *(_BYTE *)(a2 + v5 + 130);
        v21 = *(_BYTE *)(a2 + v5 + 131);
        v22 = *(_BYTE *)(a2 + v5 + 132);
        v29[0] = *(_QWORD *)(a2 + v5 + 32);
        v29[1] = v17;
        v23 = *(_OWORD *)(a2 + v5 + 64);
        v30 = *(_OWORD *)(a2 + v5 + 48);
        v31 = v23;
        v24 = *(_OWORD *)(a2 + v5 + 96);
        v32 = *(_OWORD *)(a2 + v5 + 80);
        v33 = v24;
        v34 = *(_OWORD *)(a2 + v5 + 112);
        v35 = v18;
        v36 = v19;
        v37 = v20;
        v38 = v21;
        v39 = v22;
        v25 = _s15HealthRecordsUI33UserDomainConceptFeedItemViewDataV2eeoiySbAC_ACtFZ_0((uint64_t)v40, (uint64_t)v29);
        v27 = v6-- != 0;
        if ((v25 & 1) == 0)
          break;
        v5 += 104;
      }
      while (v27);
    }
  }
  else
  {
    v25 = 0;
  }
  return v25 & 1;
}

uint64_t type metadata accessor for MultiValueView()
{
  return objc_opt_self();
}

uint64_t sub_1BC3EDED0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC3EDF24()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_1BC3EBE34(v0);
}

uint64_t method lookup function for MultiValueView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MultiValueView.viewData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MultiValueView.viewData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MultiValueView.viewData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

unint64_t sub_1BC3EDFAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF429288;
  if (!qword_1EF429288)
  {
    v1 = sub_1BC62A7B4();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CB09D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF429288);
  }
  return result;
}

uint64_t sub_1BC3EDFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC3EE064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  id v10;
  id v11;
  id v12;
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = a5;
    v11 = a6;
    v12 = a7;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_1BC3EE0D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC62A7B4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = *(void **)((char *)a2 + v8);
    if ((unint64_t)v9 >= 4)
      v10 = v9;
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v11 = a3[6];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1BC62A760();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v18 = a3[7];
    v19 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + v18) = (uint64_t)v19;
    v20 = v19;
  }
  return a1;
}

void sub_1BC3EE220(uint64_t a1, int *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = *(void **)(a1 + a2[5]);
  if ((unint64_t)v5 >= 4)

  v6 = a1 + a2[6];
  v7 = sub_1BC62A760();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);

}

uint64_t sub_1BC3EE2C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  if ((unint64_t)v8 >= 4)
    v9 = v8;
  *(_QWORD *)(a1 + v7) = v8;
  v10 = a3[6];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_1BC62A760();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[7];
  v17 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  v18 = v17;
  return a1;
}

uint64_t sub_1BC3EE3E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  if ((unint64_t)v8 < 4)
  {
    if ((unint64_t)v9 >= 4)
    {
      *(_QWORD *)(a1 + v7) = v9;
      v10 = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if ((unint64_t)v9 < 4)
  {

    v9 = *(void **)(a2 + v7);
LABEL_6:
    *(_QWORD *)(a1 + v7) = v9;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + v7) = v9;
  v11 = v9;

LABEL_8:
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = sub_1BC62A760();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_13;
  }
  if (v19)
  {
LABEL_13:
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_14:
  v21 = a3[7];
  v22 = *(void **)(a1 + v21);
  v23 = *(void **)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v23;
  v24 = v23;

  return a1;
}

uint64_t sub_1BC3EE590(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BC62A760();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1BC3EE69C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  v9 = *(_QWORD *)(a2 + v7);
  if ((unint64_t)v8 >= 4)
  {
    if (v9 >= 4)
    {
      *(_QWORD *)(a1 + v7) = v9;

    }
    else
    {

      *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
    }
  }
  else
  {
    *(_QWORD *)(a1 + v7) = v9;
  }
  v10 = a3[6];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1BC62A760();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_11;
  }
  if (v17)
  {
LABEL_11:
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_12:
  v19 = a3[7];
  v20 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);

  return a1;
}

uint64_t sub_1BC3EE834()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC3EE840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_1BC3EE90C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BC3EE918(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_5:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = a2;
}

uint64_t type metadata accessor for ClinicalAccountLoginUpgradeAction()
{
  uint64_t result;

  result = qword_1EF42D978;
  if (!qword_1EF42D978)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC3EEA10()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC62A7B4();
  if (v0 <= 0x3F)
  {
    sub_1BC357158(319, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1BC3EEABC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v25;

  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - v3;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v1);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v13 = 0;
  if (*(_QWORD *)(v0 + *(int *)(v12 + 20)) == 1)
  {
    sub_1BC3462D8(v0 + *(int *)(v12 + 24), (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1BC377E3C((uint64_t)v7, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v14 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      v13 = sub_1BC62A4A8();
      swift_bridgeObjectRelease();

    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      v15 = (void *)objc_opt_self();
      v16 = (void *)sub_1BC62A700();
      v17 = objc_msgSend(v15, sel_localizedStringFromDate_dateStyle_timeStyle_, v16, 1, 0);

      v18 = sub_1BC62C680();
      v20 = v19;

      v21 = sub_1BC62A820();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1BC639590;
      *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v22 + 64) = sub_1BC3644C0();
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v20;
      if (qword_1ED6A4888 != -1)
        swift_once();
      v23 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      v13 = sub_1BC62C6A4();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC377E3C((uint64_t)v4, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return v13;
}

uint64_t sub_1BC3EEE9C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unsigned __int8 v44;
  char *v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  double v64;
  double v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;

  v77 = a2;
  v78 = a4;
  v73 = a3;
  v76 = a5;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v67 - v10;
  v12 = sub_1BC62A760();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v67 - v17;
  v19 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v20 = *(_QWORD *)(v19 - 8);
  v74 = (int *)v19;
  v75 = v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_msgSend(a1, sel_provenance);
  v24 = objc_msgSend(v23, sel_type);

  if (v24)
  {

LABEL_6:
    swift_bridgeObjectRelease();
    v29 = 1;
    v31 = v75;
    v30 = v76;
    v32 = v74;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v31 + 56))(v30, v29, 1, v32);
  }
  v67 = v18;
  v68 = v11;
  v69 = v16;
  v70 = v9;
  v71 = v13;
  v72 = v12;
  v25 = v77;
  v26 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v26, sel_healthAppHiddenOrNotInstalled);

    if ((v28 & 1) != 0)
    {

      goto LABEL_6;
    }
    v34 = (uint64_t)v22;
    v32 = v74;
    if (v25)
    {
      swift_bridgeObjectRelease();
      v35 = 3;
      v36 = a1;
LABEL_23:
      *(_QWORD *)(v34 + v32[5]) = v35;
      v46 = objc_msgSend(v36, sel_identifier);
      sub_1BC62A79C();

      v47 = objc_msgSend(v36, sel_lastFetchDate);
      v31 = v75;
      if (v47)
      {
        v48 = v47;
        v49 = (uint64_t)v70;
        sub_1BC62A724();

        v50 = 0;
      }
      else
      {
        v50 = 1;
        v49 = (uint64_t)v70;
      }
      v51 = v71;

      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v49, v50, 1, v72);
      sub_1BC3EFC38(v49, v34 + v32[6]);
      *(_QWORD *)(v34 + v32[7]) = v25;
      v30 = v76;
      sub_1BC378168(v34, v76);
      v29 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v31 + 56))(v30, v29, 1, v32);
    }
    v36 = a1;
    v37 = objc_msgSend(a1, sel_newerAvailableGateway);
    if (v37)
    {
      v35 = (uint64_t)v37;
      v38 = v78;
      if (!v78)
        goto LABEL_23;
      v39 = objc_msgSend(v37, sel_gatewayID);
      v40 = sub_1BC62C680();
      v42 = v41;

      if (v40 == v73 && v42 == v38)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v43 = sub_1BC62D574();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
          goto LABEL_23;

      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v44 = objc_msgSend(v36, sel_needsRelogin);
    v45 = v69;
    if ((v44 & 1) != 0 || !objc_msgSend(v36, sel_state))
    {
      v35 = 0;
      goto LABEL_23;
    }
    if ((objc_msgSend(v36, sel_needsScopeUpgrade) & 1) != 0)
    {
      v35 = 2;
      goto LABEL_23;
    }
    v52 = objc_msgSend(v36, sel_failedFetchAttemptsCount);
    if (v52)
    {
      v53 = v52;
      if (qword_1EF428400 != -1)
        swift_once();
      if (objc_msgSend((id)qword_1EF459BC0, sel_compare_, v53) != (id)-1)
      {

        goto LABEL_32;
      }
      v54 = objc_msgSend(v36, sel_lastFetchDate);
      if (v54)
      {
        v55 = v54;
        sub_1BC62A724();

        v57 = v71;
        v56 = v72;
        v58 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
        v59 = (uint64_t)v68;
        v58(v68, v45, v72);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v59, 0, 1, v56);
        v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
        v61 = v59;
        if (v60(v59, 1, v56) != 1)
        {
          v62 = v67;
          v63 = v72;
          v58(v67, (char *)v61, v72);
          sub_1BC62A754();
          sub_1BC62A6E8();
          v65 = v64;

          v66 = *(void (**)(char *, uint64_t))(v71 + 8);
          v66(v45, v63);
          v66(v62, v63);
          if (v65 > 604800.0)
          {
            v35 = 1;
            goto LABEL_23;
          }
          goto LABEL_32;
        }
      }
      else
      {
        v61 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v68, 1, 1, v72);
      }

      sub_1BC377E3C(v61, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v35 = 1;
      goto LABEL_23;
    }
LABEL_32:

    v29 = 1;
    v31 = v75;
    v30 = v76;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v31 + 56))(v30, v29, 1, v32);
  }

  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1BC3EF45C()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ClinicalAccountLoginUpgradeAction() + 20));
  if (v1 < 2)
  {
    if (qword_1ED6A4888 == -1)
      goto LABEL_11;
    goto LABEL_12;
  }
  if (v1 == 2)
  {
    if (qword_1ED6A4888 == -1)
      goto LABEL_11;
    goto LABEL_12;
  }
  if (v1 == 3)
  {
    if (qword_1ED6A4888 == -1)
      goto LABEL_11;
    goto LABEL_12;
  }
  if (qword_1ED6A4888 != -1)
LABEL_12:
    swift_once();
LABEL_11:
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v3;
}

unint64_t sub_1BC3EF674(uint64_t a1)
{
  unint64_t result;

  switch(a1)
  {
    case 0:
      result = 0x6E69676F6CLL;
      break;
    case 1:
      result = 0xD000000000000013;
      break;
    case 2:
      result = 0x70752065706F6373;
      break;
    case 3:
      result = 0xD00000000000001FLL;
      break;
    default:
      result = 0x2079617765746167;
      break;
  }
  return result;
}

unint64_t sub_1BC3EF72C()
{
  uint64_t *v0;

  return sub_1BC3EF674(*v0);
}

uint64_t sub_1BC3EF734(void **a1, void **a2)
{
  return sub_1BC3EFB64(*a1, *a2);
}

uint64_t sub_1BC3EF740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v17 - v2;
  v4 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v5 = 0;
  switch(*(_QWORD *)(v0 + *(int *)(v4 + 20)))
  {
    case 0:
      if (qword_1ED6A4888 != -1)
        goto LABEL_14;
      goto LABEL_7;
    case 1:
      return v5;
    case 2:
      if (qword_1ED6A4888 == -1)
        goto LABEL_7;
      goto LABEL_14;
    case 3:
      v8 = *(void **)(v0 + *(int *)(v4 + 28));
      if (!v8)
        return 0;
      v9 = sub_1BC62A820();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1BC639590;
      v11 = v8;
      v12 = objc_msgSend(v11, sel_title);
      v13 = sub_1BC62C680();
      v15 = v14;

      *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v10 + 64) = sub_1BC3644C0();
      *(_QWORD *)(v10 + 32) = v13;
      *(_QWORD *)(v10 + 40) = v15;
      if (qword_1ED6A4888 != -1)
        swift_once();
      v16 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      v5 = sub_1BC62C6A4();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC377E3C((uint64_t)v3, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
      return v5;
    default:
      if (qword_1ED6A4888 == -1)
        goto LABEL_7;
LABEL_14:
      swift_once();
LABEL_7:
      v6 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      v5 = sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      return v5;
  }
}

uint64_t sub_1BC3EFB20()
{
  uint64_t result;

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  result = sub_1BC62CE9C();
  qword_1EF459BC0 = result;
  return result;
}

uint64_t sub_1BC3EFB64(void *a1, void *a2)
{
  char v4;
  uint64_t result;

  switch((unint64_t)a1)
  {
    case 0uLL:
      if (a2)
        goto LABEL_11;
      goto LABEL_7;
    case 1uLL:
      if (a2 == (void *)1)
        goto LABEL_7;
      goto LABEL_11;
    case 2uLL:
      if (a2 != (void *)2)
        goto LABEL_11;
      goto LABEL_7;
    case 3uLL:
      if (a2 != (void *)3)
        goto LABEL_11;
LABEL_7:
      result = 1;
      break;
    default:
      if ((unint64_t)a2 < 4)
      {
LABEL_11:
        result = 0;
      }
      else
      {
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
        sub_1BC377DC8(a1);
        sub_1BC377DC8(a2);
        v4 = sub_1BC62CEB4();
        sub_1BC3781AC(a2);
        sub_1BC3781AC(a1);
        result = v4 & 1;
      }
      break;
  }
  return result;
}

uint64_t sub_1BC3EFC38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for ClinicalAccountLoginUpgradeAction.Action(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for ClinicalAccountLoginUpgradeAction.Action(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for ClinicalAccountLoginUpgradeAction.Action(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for ClinicalAccountLoginUpgradeAction.Action(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalAccountLoginUpgradeAction.Action(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ClinicalAccountLoginUpgradeAction.Action(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 3;
  }
  return result;
}

uint64_t sub_1BC3EFE80(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1BC3EFE98(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountLoginUpgradeAction.Action()
{
  return &type metadata for ClinicalAccountLoginUpgradeAction.Action;
}

void sub_1BC3EFECC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

id sub_1BC3EFF2C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  id v3;
  id v4;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController____lazy_storage___shouldEnableAddAccounts;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController____lazy_storage___shouldEnableAddAccounts);
  if (v2 != 2)
    return (id)(v2 & 1);
  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile), sel_healthStore));
  v4 = objc_msgSend(v3, sel_supportsHealthRecords);

  *(_BYTE *)(v0 + v1) = (_BYTE)v4;
  return v4;
}

id SettingsViewController.__allocating_init(with:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1BC3F40BC(a1);

  return v4;
}

id SettingsViewController.init(with:)(void *a1)
{
  id v2;

  v2 = sub_1BC3F40BC(a1);

  return v2;
}

void sub_1BC3F0010(void *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels] = v2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_researchStudySourceModels] = v2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken] = 0;
  v3 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_factory;
  if (qword_1ED6A31B0 != -1)
    swift_once();
  v4 = (void *)qword_1ED6A4670;
  *(_QWORD *)&v1[v3] = qword_1ED6A4670;
  v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController____lazy_storage___shouldEnableAddAccounts] = 2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountStateCancellable] = 0;
  v5 = v4;

  sub_1BC62D394();
  __break(1u);
}

id SettingsViewController.__deallocating_deinit()
{
  char *v0;
  objc_super v2;

  if (*(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountStateCancellable])
  {
    swift_retain();
    sub_1BC62BEAC();
    swift_release();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SettingsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC3F02B4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  void *v7;
  char **v8;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  char v17;
  char **v18;
  uint64_t v19;
  id v20;
  id v21;
  char **v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t ObjCClassFromMetadata;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD v64[4];
  objc_super v65;

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v64 - v3;
  v5 = (objc_class *)type metadata accessor for SettingsViewController();
  v65.receiver = v0;
  v65.super_class = v5;
  objc_msgSendSuper2(&v65, sel_viewDidLoad);
  if (qword_1ED6A4880 != -1)
    swift_once();
  v6 = (id)qword_1ED6A5510;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v7 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v7);

  v8 = (char **)objc_msgSend(v1, sel_navigationItem);
  v9 = objc_msgSend(v1, sel_navigationController);
  if (!v9)
    goto LABEL_13;
  v10 = v9;
  v11 = objc_msgSend(v9, sel_viewControllers);

  sub_1BC34B6A0(0, &qword_1EF429570);
  v12 = sub_1BC62C878();

  if (!(v12 >> 62))
  {
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v19 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v19)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    v18 = 0;
    goto LABEL_14;
  }
LABEL_6:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x1BCCF24CC](0, v12);
  }
  else
  {
    if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_41;
    }
    v13 = *(id *)(v12 + 32);
  }
  v14 = v13;
  swift_bridgeObjectRelease();
  v15 = v1;
  v16 = v14;
  v17 = sub_1BC62CEB4();

  if ((v17 & 1) == 0)
    goto LABEL_13;
  v18 = (char **)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v15, sel_closeButtonTapped);
LABEL_14:
  v64[3] = v5;
  v64[0] = v1;
  v20 = v1;
  v21 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v64, (uint64_t)sel_tapToRadar_);
  sub_1BC39BD2C((uint64_t)v64);
  v64[0] = MEMORY[0x1E0DEE9D8];
  if (!v18)
    goto LABEL_17;
  v22 = v18;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v64[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v64[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_38;
  while (1)
  {
    sub_1BC62C8D8();
    sub_1BC62C890();
LABEL_17:
    if (v21)
    {
      v23 = v21;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v64[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v64[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }

    sub_1BC34B6A0(0, &qword_1EF4295C8);
    v24 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setRightBarButtonItems_, v24);

    v18 = &selRef_predicateWithFormat_;
    v25 = objc_msgSend(v20, sel_tableView);
    if (!v25)
      break;
    v26 = v25;
    objc_msgSend(v25, sel__setTopPadding_, 0.0);

    v27 = objc_msgSend(v20, sel_tableView);
    if (!v27)
      goto LABEL_42;
    v28 = v27;
    objc_msgSend(v27, sel__setSectionContentInset_, 0.0, 16.0, 0.0, 16.0);

    v29 = objc_msgSend(v20, sel_tableView);
    if (!v29)
      goto LABEL_43;
    v30 = v29;
    objc_msgSend(v29, sel__setSectionCornerRadius_, 10.0);

    v31 = objc_msgSend(v20, sel_tableView);
    if (!v31)
      goto LABEL_44;
    v32 = v31;
    type metadata accessor for StandardTableViewCell();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v34 = (void *)sub_1BC62C650();
    objc_msgSend(v32, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v34);

    v35 = objc_msgSend(v20, sel_tableView);
    if (!v35)
      goto LABEL_45;
    v36 = v35;
    type metadata accessor for NoAppTableViewCell();
    v37 = swift_getObjCClassFromMetadata();
    v38 = (void *)sub_1BC62C650();
    objc_msgSend(v36, sel_registerClass_forCellReuseIdentifier_, v37, v38);

    v39 = objc_msgSend(v20, sel_tableView);
    if (!v39)
      goto LABEL_46;
    v40 = v39;
    type metadata accessor for SourceTableViewCell();
    v41 = swift_getObjCClassFromMetadata();
    v42 = (void *)sub_1BC62C650();
    objc_msgSend(v40, sel_registerClass_forCellReuseIdentifier_, v41, v42);

    v43 = objc_msgSend(v20, sel_tableView);
    if (!v43)
      goto LABEL_47;
    v44 = v43;
    type metadata accessor for AccountTableViewCell();
    v45 = swift_getObjCClassFromMetadata();
    v46 = (void *)sub_1BC62C650();
    objc_msgSend(v44, sel_registerClass_forCellReuseIdentifier_, v45, v46);

    v47 = objc_msgSend(v20, sel_tableView);
    if (!v47)
      goto LABEL_48;
    v48 = v47;
    type metadata accessor for AddAccountTableViewCell();
    v49 = swift_getObjCClassFromMetadata();
    v50 = (void *)sub_1BC62C650();
    objc_msgSend(v48, sel_registerClass_forCellReuseIdentifier_, v49, v50);

    v51 = objc_msgSend(v20, sel_tableView);
    if (!v51)
      goto LABEL_49;
    v52 = v51;
    type metadata accessor for LoadingTableViewCell();
    v53 = swift_getObjCClassFromMetadata();
    v54 = (void *)sub_1BC62C650();
    objc_msgSend(v52, sel_registerClass_forCellReuseIdentifier_, v53, v54);

    v55 = objc_msgSend(v20, sel_tableView);
    if (!v55)
      goto LABEL_50;
    v56 = v55;
    v57 = (void *)sub_1BC62C86C();
    v21 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v56, sel_setAccessibilityIdentifier_, v21);
    sub_1BC3F0B3C();
    v58 = (void *)objc_opt_self();
    v8 = &selRef_viewIsAppearing_;
    if (objc_msgSend(v58, sel_isMainThread))
    {
      if (objc_msgSend(v58, sel_isMainThread))
      {
        if ((*((_BYTE *)v20 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts) & 1) == 0)
        {
          v59 = sub_1BC62C95C();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v4, 1, 1, v59);
          sub_1BC62C944();
          v60 = v20;
          v61 = sub_1BC62C938();
          v62 = (_QWORD *)swift_allocObject();
          v63 = MEMORY[0x1E0DF06E8];
          v62[2] = v61;
          v62[3] = v63;
          v62[4] = v60;
          sub_1BC5C2784((uint64_t)v4, (uint64_t)&unk_1EF42D9D0, (uint64_t)v62);
          swift_release();
        }
        sub_1BC3F2070();
        sub_1BC3F1F6C();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_38:
    sub_1BC62C8B4();
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

uint64_t sub_1BC3F0B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - v3;
  sub_1BC3F44A0();
  v19 = *(_QWORD *)(v5 - 8);
  v20 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A4878 != -1)
    swift_once();
  v8 = qword_1ED6A54F0;
  v9 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile), sel_healthRecordsStore);
  v10 = objc_msgSend(v9, sel_healthStore);

  v11 = objc_msgSend(v10, sel_profileIdentifier);
  v21 = *(id *)(v8 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v12);
  *(&v19 - 2) = v8;
  *(&v19 - 1) = (uint64_t)v11;
  sub_1BC62AA6C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  type metadata accessor for AccountStateProvider();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v13, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();

  swift_release();
  v14 = *(_QWORD *)(v22 + 24);
  swift_retain();
  swift_release();
  v22 = v14;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v21 = (id)sub_1BC62CC74();
  v15 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1BC3583FC();
  sub_1BC347F0C((unint64_t *)&unk_1EF429548, (uint64_t (*)(uint64_t))sub_1BC3583FC, MEMORY[0x1E0C95F48]);
  sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v4);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC347F0C((unint64_t *)&unk_1EF429558, (uint64_t (*)(uint64_t))sub_1BC3F44A0, MEMORY[0x1E0C95CB8]);
  v16 = v20;
  v17 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v16);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountStateCancellable) = v17;
  return swift_release();
}

void sub_1BC3F0EFC(char a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  _QWORD v8[6];
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for SettingsViewController();
  objc_msgSendSuper2(&v9, sel_viewDidAppear_, a1 & 1);
  v3 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile], sel_healthRecordsStore);
  v4 = objc_msgSend(v3, sel_healthStore);

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6938]), sel_initWithHealthStore_, v4);
  v6 = objc_msgSend((id)objc_opt_self(), sel_zeroBadge);
  v8[4] = sub_1BC3F107C;
  v8[5] = 0;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1BC3EFECC;
  v8[3] = &block_descriptor_19;
  v7 = _Block_copy(v8);
  objc_msgSend(v5, sel_setBadge_forDomain_completion_, v6, 3, v7);
  _Block_release(v7);

  if (qword_1ED6A3198 != -1)
    swift_once();
  sub_1BC4E5384(0, 1, 0);

}

uint64_t sub_1BC3F107C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = sub_1BC62BB34();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v8 = a2;
    sub_1BC62BB04();
    v9 = a2;
    v10 = a2;
    v11 = sub_1BC62BB28();
    v12 = sub_1BC62CAC4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v21 = (uint64_t)a2;
      v22 = v20;
      *(_DWORD *)v13 = 136446210;
      v19[1] = v13 + 4;
      v14 = a2;
      sub_1BC35E44C();
      sub_1BC62D5D4();
      v15 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v16 = sub_1BC62C6F8();
      v21 = sub_1BC4991F0(v16, v17, &v22);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v11, v12, "Error clearing badge for health records: %{public}s", v13, 0xCu);
      v18 = v20;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v18, -1, -1);
      MEMORY[0x1BCCF36A8](v13, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

id sub_1BC3F136C()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile), sel_healthRecordsStore);
  v2 = objc_msgSend(v1, sel_healthStore);

  return v2;
}

id sub_1BC3F13C8()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
  v2 = objc_msgSend(v1, sel_clinicalSourcesDataProvider);
  v3 = (void *)sub_1BC62C650();
  v4 = objc_msgSend(v2, sel_appSourceRequestingAuthorizationForClinicalTypeWithBundleIdentifier_, v3);

  if (!v4)
    return 0;
  v5 = objc_msgSend(objc_allocWithZone((Class)WDClinicalAuthorizationSettingsViewController), sel_initWithProfile_source_, v1, v4);
  v6 = objc_msgSend(v0, sel_navigationController);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_pushViewController_animated_, v5, 1);

  }
  return v5;
}

id SettingsViewController.__allocating_init(usingInsetStyling:)(char a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), sel_initWithUsingInsetStyling_, a1 & 1);
}

void SettingsViewController.init(usingInsetStyling:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SettingsViewController.__allocating_init(style:)(uint64_t a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), sel_initWithStyle_, a1);
}

void SettingsViewController.init(style:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SettingsViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void SettingsViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC3F16A8()
{
  _QWORD *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile), sel_healthRecordsStore);
  v2 = objc_msgSend(v1, sel_healthStore);

  return v2;
}

void sub_1BC3F171C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  unint64_t v16;
  void *v17;
  void *v18;
  id v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  char *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void *v69;
  char *v70;
  id v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t ObjectType;
  unint64_t v76;
  unint64_t v77;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v67 - v5;
  v7 = sub_1BC62BB34();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v67 - v12;
  v14 = *(void **)a1;
  v15 = *(void **)(a1 + 8);
  v16 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v17 = (void *)MEMORY[0x1BCCF37A4](a2 + 16);
  if (v17)
  {
    v18 = v17;
    if (!v14)
    {

      return;
    }
    v70 = v11;
    v73 = v7;
    v71 = v14;
    v72 = v15;
    sub_1BC62BB04();
    sub_1BC3F4584(v14, v15);
    v19 = v18;
    sub_1BC3F4584(v14, v15);
    v20 = (char *)v19;
    v21 = sub_1BC62BB28();
    v22 = sub_1BC62CAAC();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = v20;
      v24 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v77 = v67;
      *(_DWORD *)v24 = 136446466;
      v69 = v15;
      ObjectType = swift_getObjectType();
      sub_1BC3F4624();
      v25 = sub_1BC62C6F8();
      v68 = v6;
      ObjectType = sub_1BC4991F0(v25, v26, (uint64_t *)&v77);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      ObjectType = 0;
      v76 = 0xE000000000000000;
      v74 = v16;
      type metadata accessor for HKClinicalAccountStateChangeType(0);
      sub_1BC62D2D4();
      ObjectType = sub_1BC4991F0(ObjectType, v76, (uint64_t *)&v77);
      v6 = v68;
      sub_1BC62CFF8();
      v15 = v69;
      swift_bridgeObjectRelease();
      sub_1BC3584E4(v14, v15);
      sub_1BC3584E4(v14, v15);
      _os_log_impl(&dword_1BC30A000, v21, v22, "%{public}s: accountStateDidChange change: %{public}s)", (uint8_t *)v24, 0x16u);
      v27 = v67;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v27, -1, -1);
      v28 = v24;
      v20 = v23;
      MEMORY[0x1BCCF36A8](v28, -1, -1);
    }
    else
    {

      sub_1BC3584E4(v14, v15);
      sub_1BC3584E4(v14, v15);
    }

    v29 = *(void (**)(char *, uint64_t))(v8 + 8);
    v30 = v73;
    v29(v13, v73);
    if (v16 < 2)
    {
      v38 = (void *)objc_opt_self();
      if (objc_msgSend(v38, sel_isMainThread))
      {
        if (objc_msgSend(v38, sel_isMainThread))
        {
          if ((v20[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] & 1) == 0)
          {
            v39 = sub_1BC62C95C();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v6, 1, 1, v39);
            sub_1BC62C944();
            v40 = v20;
            v41 = sub_1BC62C938();
            v42 = (_QWORD *)swift_allocObject();
            v43 = MEMORY[0x1E0DF06E8];
            v42[2] = v41;
            v42[3] = v43;
            v42[4] = v40;
            v44 = &unk_1EF42DAF0;
LABEL_23:
            sub_1BC5C2784((uint64_t)v6, (uint64_t)v44, (uint64_t)v42);
            swift_release();
          }
LABEL_24:
          sub_1BC3F2070();
          sub_1BC3F1F6C();

          v36 = v14;
          v37 = v15;
          goto LABEL_25;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      if (v16 == 3)
      {
        v45 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
        sub_1BC3F4584(v14, v15);
        v46 = swift_bridgeObjectRetain();
        v47 = sub_1BC3F3E74(v46, (uint64_t)v71, v72);
        sub_1BC3584E4(v14, v15);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v20[v45] = v47;
        swift_bridgeObjectRelease();
        type metadata accessor for ClinicalAccountsDisambiguator();
        swift_allocObject();
        v48 = swift_bridgeObjectRetain();
        v49 = sub_1BC50D430(v48);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v20[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator] = v49;
        swift_release();
        sub_1BC3F1F6C();

        v36 = v14;
        v37 = v15;
        goto LABEL_25;
      }
      if (v16 == 2)
      {
        v31 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
        sub_1BC3F4584(v14, v15);
        v32 = swift_bridgeObjectRetain();
        v33 = sub_1BC3F3C58(v32, (uint64_t)v71, v72);
        sub_1BC3584E4(v14, v15);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v20[v31] = v33;
        swift_bridgeObjectRelease();
        type metadata accessor for ClinicalAccountsDisambiguator();
        swift_allocObject();
        v34 = swift_bridgeObjectRetain();
        v35 = sub_1BC50D430(v34);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v20[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator] = v35;
        swift_release();
        sub_1BC3F1F6C();

        v36 = v14;
        v37 = v15;
LABEL_25:
        sub_1BC3584E4(v36, v37);
        return;
      }
      sub_1BC62BB04();
      v50 = v71;
      v51 = v72;
      v52 = v50;
      v53 = v51;
      v54 = sub_1BC62BB28();
      v55 = sub_1BC62CAC4();
      if (os_log_type_enabled(v54, v55))
      {
        v69 = v15;
        v56 = (uint8_t *)swift_slowAlloc();
        v72 = (id)swift_slowAlloc();
        ObjectType = (uint64_t)v72;
        v68 = v6;
        *(_DWORD *)v56 = 136446210;
        v77 = v16;
        type metadata accessor for HKClinicalAccountStateChangeType(0);
        v57 = sub_1BC62C6F8();
        v77 = sub_1BC4991F0(v57, v58, &ObjectType);
        v6 = v68;
        v15 = v69;
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        sub_1BC3584E4(v14, v15);
        sub_1BC3584E4(v14, v15);
        _os_log_impl(&dword_1BC30A000, v54, v55, "Unexpected state change: %{public}s", v56, 0xCu);
        v59 = v72;
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v59, -1, -1);
        MEMORY[0x1BCCF36A8](v56, -1, -1);

        v60 = v70;
        v61 = v73;
      }
      else
      {
        sub_1BC3584E4(v14, v15);
        sub_1BC3584E4(v14, v15);

        v60 = v70;
        v61 = v30;
      }
      v29(v60, v61);
      v62 = (void *)objc_opt_self();
      if (objc_msgSend(v62, sel_isMainThread))
      {
        if (objc_msgSend(v62, sel_isMainThread))
        {
          if ((v20[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] & 1) == 0)
          {
            v63 = sub_1BC62C95C();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v6, 1, 1, v63);
            sub_1BC62C944();
            v64 = v20;
            v65 = sub_1BC62C938();
            v42 = (_QWORD *)swift_allocObject();
            v66 = MEMORY[0x1E0DF06E8];
            v42[2] = v65;
            v42[3] = v66;
            v42[4] = v64;
            v44 = &unk_1EF42DAE8;
            goto LABEL_23;
          }
          goto LABEL_24;
        }
LABEL_30:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
}

void sub_1BC3F1F6C()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v1 = objc_msgSend(v0, sel_tableView);
  if (v1)
  {
    v2 = v1;
    v3 = -1.0;
    if ((v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] & 1) == 0)
    {
      v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts];
      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        v5 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v3 = 0.0;
      if (!v5)
        v3 = -1.0;
    }
    objc_msgSend(v2, sel__setTopPadding_, v3);

    v6 = objc_msgSend(v0, sel_tableView);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, sel_reloadData);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC3F2070()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  _QWORD v20[6];

  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    v1 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken;
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken), sel_cancel);
    v2 = objc_msgSend(objc_allocWithZone((Class)WDCancellationToken), sel_init);
    v3 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v2;
    v4 = v2;

    v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v4;
    v7 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile);
    v8 = v4;
    v9 = objc_msgSend(v7, sel_healthRecordsStore);
    v10 = objc_msgSend(v9, sel_healthStore);

    v11 = objc_msgSend((id)objc_opt_self(), sel_allTypes);
    sub_1BC34B6A0(0, &qword_1EF42CAD0);
    v12 = sub_1BC62C878();

    v13 = sub_1BC58C200(v12);
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6330]), sel_initWithHealthStore_, v10);
    sub_1BC3F2CA0(v13);
    swift_bridgeObjectRelease();
    sub_1BC34B6A0(0, &qword_1EF42DAB0);
    sub_1BC35839C(&qword_1EF42DAB8, &qword_1EF42DAB0, 0x1E0CB6978, MEMORY[0x1E0DEFCF8]);
    v15 = (void *)sub_1BC62C9D4();
    swift_bridgeObjectRelease();
    v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = sub_1BC3F4338;
    v17[3] = v6;
    v17[4] = v10;
    v17[5] = v16;
    v20[4] = sub_1BC3F4374;
    v20[5] = v17;
    v20[0] = MEMORY[0x1E0C809B0];
    v20[1] = 1107296256;
    v20[2] = sub_1BC3F39C0;
    v20[3] = &block_descriptor_15_0;
    v18 = _Block_copy(v20);
    swift_retain();
    v19 = v10;
    swift_release();
    objc_msgSend(v14, sel_fetchSourcesRequestingAuthorizationForTypes_completion_, v15, v18);
    _Block_release(v18);

    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC3F2374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[22] = a4;
  v5 = sub_1BC62BB34();
  v4[23] = v5;
  v4[24] = *(_QWORD *)(v5 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = sub_1BC62C944();
  v4[27] = sub_1BC62C938();
  return swift_task_switch();
}

uint64_t sub_1BC3F23EC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 224) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC3F244C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[22];
  swift_release();
  v2 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts;
  v0[29] = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts;
  *(_BYTE *)(v1 + v2) = 1;
  sub_1BC3F1F6C();
  v0[30] = sub_1BC62C908();
  v0[31] = v3;
  return swift_task_switch();
}

uint64_t sub_1BC3F24CC()
{
  _QWORD *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = objc_msgSend(*(id *)(v0[22] + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile), sel_healthRecordsStore);
  v2 = objc_msgSend(v1, sel_healthStore);

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EE98]), sel_initWithHealthStore_, v2);
  v0[32] = v3;

  v0[7] = v0 + 19;
  v0[2] = v0;
  v0[3] = sub_1BC3F25D0;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1BC5C4770;
  v5[3] = &block_descriptor_34;
  v5[4] = v4;
  objc_msgSend(v3, sel_fetchAllAccountsWithCompletion_, v5);
  return swift_continuation_await();
}

uint64_t sub_1BC3F25D0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 264) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC3F262C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 152);
  return swift_task_switch();
}

uint64_t sub_1BC3F2648()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 280) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC3F26A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[34];
  v2 = v0[29];
  v3 = v0[22];
  swift_release();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  type metadata accessor for ClinicalAccountsDisambiguator();
  swift_allocObject();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BC50D430(v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator) = v5;
  swift_release();
  *(_BYTE *)(v3 + v2) = 0;
  sub_1BC3F1F6C();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BC3F2774()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3F27B8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 288) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC3F2818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 176);
  swift_release();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  type metadata accessor for ClinicalAccountsDisambiguator();
  swift_allocObject();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BC50D430(v3);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator) = v4;
  swift_release();
  *(_BYTE *)(v2 + v1) = 0;
  sub_1BC3F1F6C();
  return swift_task_switch();
}

uint64_t sub_1BC3F28D0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 264);
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3F2914()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  _QWORD *v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v4 = v0 + 32;
  v3 = (void *)v0[32];
  v2 = (void *)v4[1];
  swift_willThrow();

  sub_1BC62BAF8();
  v5 = v2;
  v6 = v2;
  v7 = sub_1BC62BB28();
  v8 = sub_1BC62CAC4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (void *)v1[33];
    v21 = v1[24];
    v22 = v1[23];
    v23 = v1[25];
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_DWORD *)v10 = 136446210;
    v24 = v11;
    v1[20] = v9;
    v12 = v9;
    sub_1BC35E44C();
    sub_1BC62D5D4();
    v13 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v14 = sub_1BC62C6F8();
    v1[21] = sub_1BC4991F0(v14, v15, &v24);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v7, v8, "Failed to fetch clincial accounts, error: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v11, -1, -1);
    MEMORY[0x1BCCF36A8](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    v16 = (void *)v1[33];
    v18 = v1[24];
    v17 = v1[25];
    v19 = v1[23];

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  return swift_task_switch();
}

void sub_1BC3F2B60(char a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  void *v13;
  id v14;
  void *v15;

  if (!objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    __break(1u);
    goto LABEL_12;
  }
  swift_beginAccess();
  v6 = MEMORY[0x1BCCF37A4](a2 + 16);
  if (!v6)
    return;
  v7 = (char *)v6;
  if ((objc_msgSend(a3, sel_isCancelled) & 1) == 0)
  {
    v8 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken;
    v9 = *(void **)&v7[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken];
    if (v9)
    {
      sub_1BC34B6A0(0, &qword_1EF42DAE0);
      v10 = a3;
      v11 = v9;
      v12 = sub_1BC62CEB4();

      if ((v12 & 1) != 0)
      {
        v13 = *(void **)&v7[v8];
        *(_QWORD *)&v7[v8] = 0;

        if ((a1 & 1) != 0)
        {
          v14 = objc_msgSend(v7, sel_tableView);
          if (v14)
          {
            v15 = v14;
            objc_msgSend(v14, sel_reloadData);

            goto LABEL_9;
          }
LABEL_12:
          __break(1u);
          return;
        }
      }
    }
  }
LABEL_9:

}

uint64_t sub_1BC3F2CA0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1BC62D118())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x1E0DEE9E8];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(v1 + 32);
    v29 = v1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain();
    result = swift_retain();
    v6 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_1BC3F4408();
  v3 = sub_1BC62D1B4();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC62D0DC();
  sub_1BC34B6A0(0, &qword_1EF42CAD0);
  sub_1BC35839C(&qword_1EF42CAD8, &qword_1EF42CAD0, 0x1E0CB63D8, MEMORY[0x1E0DEFCF8]);
  result = sub_1BC62CA1C();
  v1 = v31;
  v29 = v32;
  v5 = v33;
  v6 = v34;
  v7 = v35;
LABEL_11:
  v11 = (unint64_t)(v5 + 64) >> 6;
  v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_1BC62D13C())
      goto LABEL_45;
    sub_1BC34B6A0(0, &qword_1EF42CAD0);
    swift_dynamicCast();
    v16 = v30;
LABEL_36:
    result = sub_1BC62CEA8();
    v22 = -1 << *(_BYTE *)(v3 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  if (v7)
  {
    v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v15 = v14 | (v6 << 6);
LABEL_35:
    v16 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v15);
    v30 = v16;
    v21 = v16;
    goto LABEL_36;
  }
  v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11)
      goto LABEL_45;
    v18 = *(_QWORD *)(v29 + 8 * v17);
    v19 = v6 + 1;
    if (!v18)
    {
      v19 = v6 + 2;
      if (v6 + 2 >= v11)
        goto LABEL_45;
      v18 = *(_QWORD *)(v29 + 8 * v19);
      if (!v18)
      {
        v19 = v6 + 3;
        if (v6 + 3 >= v11)
          goto LABEL_45;
        v18 = *(_QWORD *)(v29 + 8 * v19);
        if (!v18)
        {
          v19 = v6 + 4;
          if (v6 + 4 >= v11)
            goto LABEL_45;
          v18 = *(_QWORD *)(v29 + 8 * v19);
          if (!v18)
          {
            v19 = v6 + 5;
            if (v6 + 5 >= v11)
              goto LABEL_45;
            v18 = *(_QWORD *)(v29 + 8 * v19);
            if (!v18)
            {
              v20 = v6 + 6;
              while (v11 != v20)
              {
                v18 = *(_QWORD *)(v29 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_1BC3583F4();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v19 << 6);
    v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1BC3F3058(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t (*v39)(uint64_t);
  char *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t aBlock;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  void *v67;
  void *v68;
  _QWORD *v69;

  v58 = a3;
  v11 = sub_1BC62C47C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v62 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC62C4AC();
  v60 = *(_QWORD *)(v14 - 8);
  v61 = v14;
  MEMORY[0x1E0C80A78](v14);
  v59 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BC62BB34();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    if (a1)
    {
      v33 = a4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        if (sub_1BC62D118())
        {
LABEL_7:
          sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
          v34 = (void *)sub_1BC62CC74();
          v35 = (_QWORD *)swift_allocObject();
          v35[2] = a5;
          v35[3] = a1;
          v35[4] = a6;
          v68 = sub_1BC3F43FC;
          v69 = v35;
          aBlock = MEMORY[0x1E0C809B0];
          v65 = 1107296256;
          v66 = sub_1BC39BE70;
          v67 = &block_descriptor_27;
          v36 = _Block_copy(&aBlock);
          v37 = a5;
          swift_retain();
          swift_release();
          v38 = v59;
          sub_1BC62C494();
          aBlock = MEMORY[0x1E0DEE9D8];
          v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
          sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
          sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v39, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1BC35811C();
          v40 = v62;
          sub_1BC62D0A0();
          MEMORY[0x1BCCF1F68](0, v38, v40, v36);
          _Block_release(v36);

          goto LABEL_13;
        }
      }
      else
      {
        v45 = *(_QWORD *)(a1 + 16);
        swift_bridgeObjectRetain();
        if (v45)
          goto LABEL_7;
      }
      swift_bridgeObjectRelease();
      a4 = v33;
    }
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v46 = (void *)sub_1BC62CC74();
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = v58;
    *(_QWORD *)(v47 + 24) = a4;
    v68 = sub_1BC3F43A4;
    v69 = (_QWORD *)v47;
    aBlock = MEMORY[0x1E0C809B0];
    v65 = 1107296256;
    v66 = sub_1BC39BE70;
    v67 = &block_descriptor_21_0;
    v48 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v38 = v59;
    sub_1BC62C494();
    aBlock = MEMORY[0x1E0DEE9D8];
    v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v49, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35811C();
    v40 = v62;
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v38, v40, v48);
    _Block_release(v48);

    goto LABEL_13;
  }
  v57 = v12;
  v20 = a2;
  sub_1BC62BB04();
  v21 = a2;
  v22 = a2;
  v23 = sub_1BC62BB28();
  v24 = sub_1BC62CAC4();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v55 = a4;
    v26 = (uint8_t *)v25;
    v54 = swift_slowAlloc();
    v63 = v54;
    aBlock = (uint64_t)a2;
    *(_DWORD *)v26 = 136446210;
    v53[1] = v26 + 4;
    v27 = a2;
    sub_1BC35E44C();
    sub_1BC62D5D4();
    v28 = (id)HKSensitiveLogItem();
    v56 = v11;
    swift_unknownObjectRelease();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v29 = sub_1BC62C6F8();
    aBlock = sub_1BC4991F0(v29, v30, &v63);
    sub_1BC62CFF8();
    v11 = v56;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v23, v24, "Failed to fetch sorted app sources requiring authorization with error: %{public}s", v26, 0xCu);
    v31 = v54;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v31, -1, -1);
    v32 = v26;
    a4 = v55;
    MEMORY[0x1BCCF36A8](v32, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v41 = (void *)sub_1BC62CC74();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v58;
  *(_QWORD *)(v42 + 24) = a4;
  v68 = sub_1BC3F467C;
  v69 = (_QWORD *)v42;
  aBlock = MEMORY[0x1E0C809B0];
  v65 = 1107296256;
  v66 = sub_1BC39BE70;
  v67 = &block_descriptor_33;
  v43 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v38 = v59;
  sub_1BC62C494();
  aBlock = MEMORY[0x1E0DEE9D8];
  v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v44, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  v40 = v62;
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v38, v40, v43);
  _Block_release(v43);

  v12 = v57;
LABEL_13:
  v51 = v60;
  v50 = v61;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v40, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v38, v50);
}

void sub_1BC3F3780(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;

  v3 = a3 + 16;
  v4 = a1;
  v5 = swift_bridgeObjectRetain();
  sub_1BC3D6D60(v5);
  swift_bridgeObjectRelease();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v6 = (void *)sub_1BC62CC74();
  v7 = objc_allocWithZone(MEMORY[0x1E0D2F890]);
  sub_1BC34B6A0(0, &qword_1EF42DAC0);
  v8 = (void *)sub_1BC62C86C();
  swift_release();
  v9 = objc_msgSend(v7, sel_initWithHealthStore_sources_queue_, v4, v8, v6);

  objc_msgSend(v9, sel_setShouldFetchAppIcons_, 1);
  swift_beginAccess();
  v10 = MEMORY[0x1BCCF37A4](v3);
  if (v10)
  {
    v11 = (char *)v10;
    v12 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource;
    v13 = *(char **)(v10 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource);
    *(_QWORD *)(v10 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource) = v9;
    v14 = (char *)v9;
    v15 = v14;
    if (v13)
    {
      if (v14)
      {
        sub_1BC34B6A0(0, &qword_1EF42DAD0);
        v16 = v13;
        v17 = v15;
        v18 = sub_1BC62CEB4();

        if ((v18 & 1) != 0)
          goto LABEL_7;
      }
      objc_msgSend(v13, sel_unregisterObserver_, v11);
      v19 = *(void **)&v11[v12];
      if (!v19)
      {
LABEL_6:
        v16 = v13;
LABEL_7:
        v13 = v15;
        v15 = v11;
LABEL_10:

        goto LABEL_11;
      }
    }
    else
    {
      v19 = v9;
      if (!v15)
        goto LABEL_6;
    }
    objc_msgSend(v19, sel_registerObserver_, v11);
    v16 = v11;
    goto LABEL_10;
  }
LABEL_11:
  swift_beginAccess();
  v20 = MEMORY[0x1BCCF37A4](v3);
  if (v20)
  {
    v21 = (void *)v20;
    v22 = *(id *)(v20 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource);

    objc_msgSend(v22, sel_fetchSources);
  }

}

uint64_t sub_1BC3F39C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BC34B6A0(0, &qword_1EF42DAC0);
    sub_1BC35839C(&qword_1EF42DAC8, &qword_1EF42DAC0, 0x1E0CB6C18, MEMORY[0x1E0DEFCF8]);
    v4 = sub_1BC62C9E0();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void SettingsViewController.sourceListDataSourceDidUpdate(_:)(void *a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;

  v3 = objc_msgSend(a1, sel_sources);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_orderedAppSources);

    sub_1BC34B6A0(0, &qword_1EF42D9F8);
    v6 = sub_1BC62C878();

  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels] = v6;
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a1, sel_sources);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_orderedResearchStudySources);

    sub_1BC34B6A0(0, &qword_1EF42D9F8);
    v10 = sub_1BC62C878();

  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_researchStudySourceModels] = v10;
  swift_bridgeObjectRelease();
  v11 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken] = 0;

  v12 = objc_msgSend(v1, sel_tableView);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_reloadData);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC3F3C58(unint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  id v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void (*v20)(char *, uint64_t);
  void *v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  v7 = sub_1BC62A7B4();
  v25 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v22 - v11;
  if (a1 >> 62)
    goto LABEL_17;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v13)
      break;
    v26 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if (v13 < 0)
    {
      __break(1u);
      return result;
    }
    v15 = 0;
    v22 = v4;
    v23 = a1 & 0xC000000000000001;
    v24 = a1;
    while (v13 != v15)
    {
      if (v23)
        v16 = (id)MEMORY[0x1BCCF24CC](v15, a1);
      else
        v16 = *(id *)(a1 + 8 * v15 + 32);
      v17 = v16;
      ++v15;
      v18 = objc_msgSend(v16, sel_identifier, v22);
      sub_1BC62A79C();

      v19 = objc_msgSend(a3, sel_identifier);
      sub_1BC62A79C();

      LOBYTE(v19) = sub_1BC62A790();
      v20 = *(void (**)(char *, uint64_t))(v25 + 8);
      v20(v10, v7);
      v20(v12, v7);
      if ((v19 & 1) != 0)
        v21 = a3;
      else
        v21 = v17;
      v4 = v21;

      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      a1 = v24;
      if (v13 == v15)
        return v26;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v13 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC3F3E74(unint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  id v14;
  unint64_t v15;
  id v16;
  id v17;
  void (*v18)(char *, uint64_t);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;

  v4 = v3;
  v27 = a3;
  v6 = sub_1BC62A7B4();
  v26 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v25 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v24 = (char *)&v20 - v9;
  v28 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v10)
  {
    while (1)
    {
      v20 = v4;
      v21 = v10;
      v11 = 0;
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
      v23 = a1 & 0xC000000000000001;
      v12 = v24;
      v13 = v25;
      while (v23)
      {
        v14 = (id)MEMORY[0x1BCCF24CC](v11, a1);
LABEL_9:
        v4 = v14;
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
          goto LABEL_15;
        v16 = objc_msgSend(v14, sel_identifier);
        sub_1BC62A79C();

        v17 = objc_msgSend(v27, sel_identifier);
        sub_1BC62A79C();

        sub_1BC347F0C((unint64_t *)&qword_1EF429288, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
        LOBYTE(v17) = sub_1BC62C644();
        v18 = *(void (**)(char *, uint64_t))(v26 + 8);
        v18(v13, v6);
        v18(v12, v6);
        if ((v17 & 1) != 0)
        {

        }
        else
        {
          sub_1BC62D268();
          sub_1BC62D298();
          sub_1BC62D2A4();
          sub_1BC62D274();
        }
        ++v11;
        if (v15 == v21)
          return v28;
      }
      if (v11 < *(_QWORD *)(v22 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v10 = sub_1BC62D3B8();
      if (!v10)
        return MEMORY[0x1E0DEE9D8];
    }
    v14 = *(id *)(a1 + 8 * v11 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

id sub_1BC3F40BC(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels] = v3;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_researchStudySourceModels] = v3;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken] = 0;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_factory;
  v5 = qword_1ED6A31B0;
  v6 = v1;
  if (v5 != -1)
    swift_once();
  v7 = (void *)qword_1ED6A4670;
  *(_QWORD *)&v6[v4] = qword_1ED6A4670;
  v6[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController____lazy_storage___shouldEnableAddAccounts] = 2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountStateCancellable] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile] = a1;
  v8 = v7;
  v9 = a1;

  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for SettingsViewController();
  return objc_msgSendSuper2(&v11, sel_initWithStyle_, 1);
}

uint64_t type metadata accessor for SettingsViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BC3F41FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC3781C0;
  return sub_1BC3F2374(a1, v4, v5, v6);
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t method lookup function for SettingsViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SettingsViewController.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 424))();
}

uint64_t dispatch thunk of SettingsViewController.providedHealthExperienceStore.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of SettingsViewController.providedHealthStore.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of SettingsViewController.pushForAPIAuthorization(forSource:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t sub_1BC3F42E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC3F430C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BC3F4338(char a1)
{
  uint64_t v1;

  sub_1BC3F2B60(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1BC3F4340()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC3F4374(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC3F3058(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BC3F4380()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC3F43A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_1BC3F43C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC3F43FC()
{
  uint64_t v0;

  sub_1BC3F3780(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1BC3F4408()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42DAD8)
  {
    sub_1BC34B6A0(255, &qword_1EF42DAB0);
    sub_1BC35839C(&qword_1EF42DAB8, &qword_1EF42DAB0, 0x1E0CB6978, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC62D1C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42DAD8);
  }
}

void sub_1BC3F44A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429540)
  {
    sub_1BC3583FC();
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC347F0C((unint64_t *)&unk_1EF429548, (uint64_t (*)(uint64_t))sub_1BC3583FC, MEMORY[0x1E0C95F48]);
    sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC62BE70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429540);
  }
}

void sub_1BC3F457C(uint64_t a1)
{
  uint64_t v1;

  sub_1BC3F171C(a1, v1);
}

id sub_1BC3F4584(id result, void *a2)
{
  id v2;

  if (result)
  {
    v2 = result;
    return a2;
  }
  return result;
}

uint64_t sub_1BC3F45B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC377F18;
  return sub_1BC3F2374(a1, v4, v5, v6);
}

unint64_t sub_1BC3F4624()
{
  unint64_t result;

  result = qword_1EF42DAF8;
  if (!qword_1EF42DAF8)
  {
    type metadata accessor for SettingsViewController();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42DAF8);
  }
  return result;
}

double sub_1BC3F4680(uint64_t a1, uint64_t a2, double a3)
{
  double v5;

  v5 = (*(double (**)(void))(a2 + 32))() + a3;
  return v5 + (*(double (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
}

void sub_1BC3F46D4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC3F4700()
{
  uint64_t *v0;
  uint64_t result;

  v0[3] = (uint64_t)&_s15LayoutConstantsV12ChartALayoutVN;
  v0[4] = (uint64_t)&off_1E74D81A0;
  result = swift_allocObject();
  *v0 = result;
  *(_OWORD *)(result + 16) = xmmword_1BC63D180;
  *(_OWORD *)(result + 32) = xmmword_1BC63D190;
  *(_QWORD *)(result + 48) = &unk_1E74D2C08;
  *(_QWORD *)(result + 56) = &unk_1E74D2C38;
  return result;
}

void sub_1BC3F484C()
{
  qword_1EF459BC8 = 0x4083200000000000;
}

void sub_1BC3F4860()
{
  qword_1EF459BD0 = 0x4088C00000000000;
}

void sub_1BC3F4874()
{
  qword_1EF459BD8 = 0x4042000000000000;
}

void sub_1BC3F4884()
{
  qword_1EF459BE0 = 0x4039000000000000;
}

void sub_1BC3F4894()
{
  qword_1EF459BE8 = 0x4034000000000000;
}

void sub_1BC3F48A4()
{
  qword_1EF459BF0 = 0x403E000000000000;
}

void sub_1BC3F48B4()
{
  qword_1EF459BF8 = 0x4077600000000000;
}

void sub_1BC3F48C8()
{
  qword_1EF459C00 = 0x4044000000000000;
}

void sub_1BC3F48D8()
{
  qword_1EF459C08 = 0x3FF0000000000000;
}

void sub_1BC3F48E8()
{
  qword_1EF459C10 = 0x3FF0000000000000;
}

void sub_1BC3F48F8()
{
  qword_1EF459C18 = 0x4034000000000000;
}

void sub_1BC3F4908()
{
  qword_1EF459C20 = 0x4020000000000000;
}

void sub_1BC3F4918()
{
  qword_1EF459C28 = 0x4010000000000000;
}

void sub_1BC3F4928()
{
  qword_1EF459C30 = 0x4034000000000000;
}

double sub_1BC3F4938()
{
  double v0;
  double result;

  if (qword_1EF428408 != -1)
    swift_once();
  v0 = *(double *)&qword_1EF459BC8;
  if (qword_1EF428418 != -1)
    swift_once();
  result = v0 - (*(double *)&qword_1EF459BD8 + *(double *)&qword_1EF459BD8);
  *(double *)&qword_1EF459C38 = result;
  return result;
}

uint64_t sub_1BC3F49C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC3F49EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC3F4A18()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_1BC3F4A44()
{
  double v0;
  double v1;
  double result;

  if (qword_1EF428418 != -1)
    swift_once();
  v0 = *(double *)&qword_1EF459BD8;
  if (qword_1EF428440 != -1)
    swift_once();
  v1 = *(double *)&qword_1EF459C00;
  if (qword_1EF428420 != -1)
    swift_once();
  result = v0 + v1 + *(double *)&qword_1EF459BE0;
  *(double *)&qword_1EF459C40 = result;
  return result;
}

void sub_1BC3F4AFC()
{
  qword_1EF459C48 = 0x4032000000000000;
}

double sub_1BC3F4B0C()
{
  uint64_t v0;

  return *(double *)v0;
}

double sub_1BC3F4B14()
{
  return 0.0;
}

double sub_1BC3F4B1C()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double sub_1BC3F4B24()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double sub_1BC3F4B2C()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t sub_1BC3F4B34()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC3F4B3C()
{
  return swift_bridgeObjectRetain();
}

double sub_1BC3F4B44()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t sub_1BC3F4B4C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

double sub_1BC3F4B54()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

uint64_t sub_1BC3F4B5C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC3F4B64()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC3F4B6C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t sub_1BC3F4B78()
{
  unsigned __int8 *v0;

  return *v0;
}

double sub_1BC3F4B80()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

uint64_t sub_1BC3F4B88()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

double sub_1BC3F4B90()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

uint64_t sub_1BC3F4B98()
{
  return swift_bridgeObjectRetain();
}

void sub_1BC3F4BA0()
{
  qword_1EF459C50 = 0x403C000000000000;
}

double sub_1BC3F4BB0(double a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;

  if (qword_1EF428410 != -1)
    swift_once();
  v2 = *(double *)&qword_1EF459BD0;
  if (qword_1EF428418 != -1)
    swift_once();
  v3 = *(double *)&qword_1EF459BD8;
  if (qword_1EF428440 != -1)
    swift_once();
  v4 = *(double *)&qword_1EF459C00;
  if (qword_1EF428458 != -1)
    swift_once();
  v5 = *(double *)&qword_1EF459C18;
  if (qword_1EF428468 != -1)
    swift_once();
  v6 = *(double *)&qword_1EF459C28;
  if (qword_1EF428420 != -1)
    swift_once();
  v7 = *(double *)&qword_1EF459BE0;
  if (qword_1EF428428 != -1)
    swift_once();
  return v2 - (v3 + v3) - v4 - (v5 + v6 + a1) - v7 - *(double *)&qword_1EF459BE8;
}

uint64_t _s15LayoutConstantsV12ChartALayoutVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s15LayoutConstantsV12ChartALayoutVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s15LayoutConstantsV12ChartALayoutVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s15LayoutConstantsV12ChartALayoutVwta(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15LayoutConstantsV12ChartALayoutVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s15LayoutConstantsV12ChartALayoutVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s15LayoutConstantsV12ChartALayoutVMa()
{
  return &_s15LayoutConstantsV12ChartALayoutVN;
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v4;
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s15LayoutConstantsV12ChartBLayoutVMa()
{
  return &_s15LayoutConstantsV12ChartBLayoutVN;
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v3 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwta(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s15LayoutConstantsV12ChartCLayoutVMa()
{
  return &_s15LayoutConstantsV12ChartCLayoutVN;
}

uint64_t dispatch thunk of AuthorizationIdentifierUpdateObserver.authorizationIdentifiersDidUpdate(didUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource()
{
  uint64_t result;

  result = qword_1EF42DB30;
  if (!qword_1EF42DB30)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC3F5424()
{
  unint64_t v0;

  sub_1BC3F7478();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t sub_1BC3F54E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    v4 = *(_QWORD *)(sub_1BC62B8C4() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_1BC62B8A0();
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v5 += v6;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1BC3F55B4()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  swift_release();
  return v1;
}

id sub_1BC3F5624(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  id result;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  id v71;
  id v72;
  char v73;
  _QWORD *v74;

  v6 = v5;
  v67 = a4;
  v68 = a5;
  v70 = a3;
  v72 = a1;
  v8 = sub_1BC62BB34();
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  MEMORY[0x1E0C80A78](v8);
  v66 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC62A7B4();
  v63 = *(_QWORD *)(v10 - 8);
  v64 = v10;
  MEMORY[0x1E0C80A78](v10);
  v62 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3F7478();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = qword_1EF42DB08;
  *(_QWORD *)(v5 + qword_1EF42DB08) = 0;
  v17 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v5 + qword_1EF42DB10) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v5 + qword_1EF42DB18) = v17;
  v18 = qword_1EF42DB20;
  type metadata accessor for ClinicalSharingSelectedDataTypesContext();
  v19 = swift_allocObject();
  v20 = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(v19 + 32) = 0;
  *(_QWORD *)(v19 + 48) = 0;
  *(_QWORD *)(v19 + 40) = 0;
  *(_QWORD *)(v19 + 16) = v17;
  *(_QWORD *)(v19 + 24) = v20;
  swift_beginAccess();
  v21 = *(_QWORD *)(v19 + 40);
  *(_QWORD *)(v19 + 48) = 0;
  *(_QWORD *)(v19 + 40) = 0;
  swift_retain();
  sub_1BC36D770(v21);
  v69 = v18;
  *(_QWORD *)(v6 + v18) = v19;
  v22 = v6 + qword_1EF42DB28;
  v73 = 0;
  sub_1BC62BF90();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v22, v16, v13);
  *(_QWORD *)(v6 + qword_1EF459C60) = 0;
  *(_BYTE *)(v6 + qword_1EF459C70) = 0;
  *(_QWORD *)(v6 + qword_1EF42DB00) = v72;
  *(_QWORD *)(v6 + qword_1EF459C58) = a2;
  v71 = a2;
  if (a2)
  {
    v23 = v71;
    v24 = v72;
    v25 = v23;
    v26 = objc_msgSend(v25, sel_identifier);
    v27 = v62;
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v27, v64);
    v28 = objc_allocWithZone(MEMORY[0x1E0CB6BB8]);
    v29 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v28, sel_initForClinicalAccountIdentifier_, v29);

    v31 = objc_allocWithZone(MEMORY[0x1E0CB6BA8]);
    v32 = v24;
    v33 = objc_msgSend(v31, sel_initWithHealthStore_recipientIdentifier_, v32, v30);

    v34 = *(void **)(v6 + v65);
    *(_QWORD *)(v6 + v65) = v33;

  }
  else
  {
    v35 = v72;
  }
  v36 = (void *)MEMORY[0x1E0DEE9D8];
  v74 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v37 = v70;
  if ((v70 & 1) != 0)
    goto LABEL_7;
  type metadata accessor for ClinicalSharingTurnOnAllDataTypesDataSource();
  swift_allocObject();
  v38 = sub_1BC401674();
  v39 = sub_1BC3B51A4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v41 = v39[2];
  v40 = v39[3];
  v42 = v41 + 1;
  if (v41 >= v40 >> 1)
    goto LABEL_26;
  while (1)
  {
    v39[2] = v42;
    v43 = MEMORY[0x1E0D2B148];
    v44 = &v39[2 * v41];
    v44[4] = v38;
    v44[5] = v43;
    v74 = v39;
LABEL_7:
    v45 = *(_QWORD *)(v6 + v69);
    type metadata accessor for ClinicalSharingSelectableDataTypesDataSourceProviding();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 32) = v36;
    v47 = v72;
    *(_QWORD *)(v46 + 16) = v72;
    v48 = (void *)objc_opt_self();
    v49 = v47;
    swift_retain();
    result = objc_msgSend(v48, sel_sharedInstanceForHealthStore_, v49);
    if (!result)
      break;
    *(_QWORD *)(v46 + 24) = result;
    *(_QWORD *)(v46 + 48) = v45;
    *(_BYTE *)(v46 + 40) = v37 & 1;
    v51 = sub_1BC62B8AC();
    v52 = sub_1BC5AD538(v51);
    swift_bridgeObjectRelease();
    v36 = &unk_1EF459000;
    *(_QWORD *)(v6 + qword_1EF459C68) = v52;
    v53 = sub_1BC3D1B70(v52);
    sub_1BC3BB21C(v53);
    swift_release();
    v6 = sub_1BC62B504();
    v54 = *(_QWORD *)(v6 + qword_1EF42DB20);
    v41 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    v55 = *(_QWORD *)(v54 + 40);
    *(_QWORD *)(v54 + 40) = sub_1BC3FE504;
    *(_QWORD *)(v54 + 48) = v41;
    swift_retain();
    sub_1BC36D770(v55);
    if ((v37 & 1) != 0)
      sub_1BC3F5D0C(0);
    v38 = *(_QWORD *)(v6 + qword_1EF459C68);
    if ((unint64_t)v38 >> 62)
    {
      if (v38 < 0)
        v41 = *(_QWORD *)(v6 + qword_1EF459C68);
      else
        v41 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v42 = sub_1BC62D3B8();
      if (!v42)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        sub_1BC62BAF8();
        v56 = sub_1BC62BB28();
        v57 = sub_1BC62CADC();
        if (os_log_type_enabled(v56, v57))
        {
          v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v58 = 0;
          _os_log_impl(&dword_1BC30A000, v56, v57, "There was not a first selectable data type data source", v58, 2u);
          MEMORY[0x1BCCF36A8](v58, -1, -1);
        }
        swift_release();
        swift_release();
        sub_1BC36D770(v67);

        (*(void (**)(char *, uint64_t))(v60 + 8))(v66, v61);
        return (id)v6;
      }
    }
    else
    {
      v42 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v42)
        goto LABEL_20;
    }
    if ((v38 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1BCCF24CC](0, v38);
      goto LABEL_15;
    }
    v40 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v40)
    {
      swift_retain();
LABEL_15:
      swift_bridgeObjectRelease();
      type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
      sub_1BC62B00C();
      sub_1BC36D770(v67);
      swift_release();
      swift_release();
      swift_release();

      return (id)v6;
    }
    __break(1u);
LABEL_26:
    v39 = sub_1BC3B51A4((_QWORD *)(v40 > 1), v42, 1, v39);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC3F5CB8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC3F66B0();
    return swift_release();
  }
  return result;
}

void sub_1BC3F5D0C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t aBlock[7];

  v2 = v1;
  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v2 + qword_1EF459C58);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v13, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v15 = objc_allocWithZone(MEMORY[0x1E0CB6BB8]);
    v16 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v15, sel_initForClinicalAccountIdentifier_, v16);

    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6BA8]), sel_initWithHealthStore_recipientIdentifier_, *(_QWORD *)(v2 + qword_1EF42DB00), v17);
    v19 = swift_allocObject();
    swift_weakInit();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v19;
    *(_BYTE *)(v20 + 24) = a1 & 1;
    aBlock[4] = (uint64_t)sub_1BC3FA168;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC3F7DBC;
    aBlock[3] = (uint64_t)&block_descriptor_20;
    v21 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v18, sel_fetchSharingAuthorizationsWithCompletion_, v21);
    _Block_release(v21);

  }
  else
  {
    sub_1BC62BAF8();
    v22 = sub_1BC62BB28();
    v23 = sub_1BC62CAC4();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      aBlock[0] = v25;
      *(_DWORD *)v24 = 136315138;
      v26 = sub_1BC62D718();
      aBlock[6] = sub_1BC4991F0(v26, v27, aBlock);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v22, v23, "%s account was nil", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v25, -1, -1);
      MEMORY[0x1BCCF36A8](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1BC3F6064(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  int isUniquelyReferenced_nonNull_native;
  int64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char v66[48];

  sub_1BC357158(0, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v49 - v4;
  v6 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v65 = (uint64_t)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v49 - v10;
  v12 = sub_1BC62B288();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v63 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v54 = *(_QWORD *)&v1[qword_1EF459C68];
    if (v54 >> 62)
      goto LABEL_62;
    v15 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_4:
    v49[0] = v1;
    if (v15)
    {
      v51 = v15;
      v16 = 0;
      v17 = v54;
      v53 = v54 & 0xC000000000000001;
      v50 = v54 & 0xFFFFFFFFFFFFFF8;
      v49[1] = v54 + 32;
      v18 = MEMORY[0x1E0DEE9D8];
      v56 = v13;
      v57 = v12;
      v64 = v5;
      do
      {
        if (v53)
        {
          v19 = MEMORY[0x1BCCF24CC](v16, v17);
        }
        else
        {
          if (v16 >= *(_QWORD *)(v50 + 16))
            goto LABEL_61;
          v19 = swift_retain();
        }
        v1 = (char *)v19;
        v20 = __OFADD__(v16, 1);
        v21 = v16 + 1;
        if (v20)
          goto LABEL_60;
        v55 = v21;
        v22 = sub_1BC62B2C4();
        v60 = *(_QWORD *)(v22 + 16);
        if (v60)
        {
          v52 = v1;
          v23 = 0;
          v24 = *(unsigned __int8 *)(v13 + 80);
          v58 = v22;
          v59 = v22 + ((v24 + 32) & ~v24);
          do
          {
            if (v23 >= *(_QWORD *)(v22 + 16))
              goto LABEL_59;
            v25 = *(_QWORD *)(v13 + 72);
            v62 = v23;
            v1 = v63;
            (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v63, v59 + v25 * v23, v12);
            v26 = sub_1BC62B264();
            v27 = *(_QWORD *)(v26 + 16);
            if (v27)
            {
              v61 = v26;
              v13 = v26 + 32;
              while (1)
              {
                sub_1BC34E674(v13, (uint64_t)v66);
                sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
                v28 = swift_dynamicCast();
                v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
                if ((v28 & 1) != 0)
                {
                  v29(v5, 0, 1, v6);
                  sub_1BC375724((uint64_t)v5, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
                  v1 = *(char **)&v11[*(int *)(v6 + 52)];
                  if (v1)
                  {
                    v30 = v6;
                    v31 = v7;
                    v32 = (uint64_t)v11;
                    v12 = *((_QWORD *)v1 + 2);
                    v33 = *(_QWORD *)(v18 + 16);
                    v34 = v33 + v12;
                    if (__OFADD__(v33, v12))
                    {
                      __break(1u);
LABEL_55:
                      __break(1u);
LABEL_56:
                      __break(1u);
                      goto LABEL_57;
                    }
                    swift_bridgeObjectRetain();
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    if (!isUniquelyReferenced_nonNull_native || v34 > *(_QWORD *)(v18 + 24) >> 1)
                    {
                      if (v33 <= v34)
                        v36 = v33 + v12;
                      else
                        v36 = v33;
                      v18 = sub_1BC3B5190(isUniquelyReferenced_nonNull_native, v36, 1, v18);
                    }
                    v11 = (char *)v32;
                    v7 = v31;
                    v6 = v30;
                    if (*((_QWORD *)v1 + 2))
                    {
                      v37 = *(_QWORD *)(v18 + 16);
                      v5 = v64;
                      if ((*(_QWORD *)(v18 + 24) >> 1) - v37 < v12)
                        goto LABEL_56;
                      v38 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
                      v39 = *(_QWORD *)(v7 + 72);
                      v40 = v18 + v38 + v39 * v37;
                      if ((unint64_t)&v1[v38] < v40 + v39 * v12 && v40 < (unint64_t)&v1[v38 + v39 * v12])
                      {
                        result = sub_1BC62D418();
                        __break(1u);
                        return result;
                      }
                      swift_arrayInitWithCopy();
                      if (v12)
                      {
                        v42 = *(_QWORD *)(v18 + 16);
                        v20 = __OFADD__(v42, v12);
                        v43 = v42 + v12;
                        if (v20)
                        {
                          __break(1u);
LABEL_59:
                          __break(1u);
LABEL_60:
                          __break(1u);
LABEL_61:
                          __break(1u);
LABEL_62:
                          swift_bridgeObjectRetain();
                          v15 = sub_1BC62D3B8();
                          goto LABEL_4;
                        }
                        *(_QWORD *)(v18 + 16) = v43;
                      }
                    }
                    else
                    {
                      v5 = v64;
                      if (v12)
                        goto LABEL_55;
                    }
                    swift_bridgeObjectRelease();
                    sub_1BC3AFE68(v32);
                  }
                  else
                  {
                    sub_1BC35EBE0((uint64_t)v11, v65, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v18 = sub_1BC3B5190(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
                    v45 = *(_QWORD *)(v18 + 16);
                    v44 = *(_QWORD *)(v18 + 24);
                    v1 = (char *)(v45 + 1);
                    if (v45 >= v44 >> 1)
                      v18 = sub_1BC3B5190(v44 > 1, v45 + 1, 1, v18);
                    *(_QWORD *)(v18 + 16) = v1;
                    sub_1BC375724(v65, v18+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v45, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
                    sub_1BC3AFE68((uint64_t)v11);
                  }
                }
                else
                {
                  v29(v5, 1, 1, v6);
                  sub_1BC377E3C((uint64_t)v5, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
                }
                v13 += 40;
                if (!--v27)
                {
                  swift_bridgeObjectRelease();
                  v13 = v56;
                  v12 = v57;
                  goto LABEL_16;
                }
              }
            }
            swift_bridgeObjectRelease();
LABEL_16:
            v23 = v62 + 1;
            (*(void (**)(char *, uint64_t))(v13 + 8))(v63, v12);
            v22 = v58;
          }
          while (v23 != v60);
          swift_release();
        }
        else
        {
          v1 = (char *)v22;
          swift_release();
        }
        swift_bridgeObjectRelease();
        v16 = v55;
        v17 = v54;
      }
      while (v55 != v51);
LABEL_57:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v18 = MEMORY[0x1E0DEE9D8];
    }
    swift_retain();
    sub_1BC5DD6DC(v18, 0);
  }
  else
  {
    v46 = *(_QWORD *)&v1[qword_1EF42DB20];
    swift_beginAccess();
    v47 = *(_QWORD *)(v46 + 16);
    *(_QWORD *)(v46 + 16) = MEMORY[0x1E0DEE9D8];
    swift_retain();
    sub_1BC5DCB08(v47);
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3F66B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  int isUniquelyReferenced_nonNull_native;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v1 = sub_1BC62C4D0();
  v68 = *(_QWORD *)(v1 - 8);
  v69 = v1;
  MEMORY[0x1E0C80A78](v1);
  v67 = (uint64_t *)((char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BC3E4498(v3);
  swift_bridgeObjectRelease();
  v70 = v0;
  swift_beginAccess();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1BC58BFF8(v5);
  v7 = swift_bridgeObjectRetain();
  v8 = sub_1BC58BFF8(v7);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 16) <= *(_QWORD *)(v6 + 16) >> 3)
  {
    v74 = v6;
    sub_1BC3FD314(v8);
    swift_bridgeObjectRelease();
    v9 = v74;
  }
  else
  {
    v9 = sub_1BC3FD590(v8, v6);
    swift_bridgeObjectRelease();
  }
  v10 = sub_1BC3D6D6C(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1BC58BFF8(v4);
  swift_bridgeObjectRelease();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1BC58BFF8(v12);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v13 + 16) <= *(_QWORD *)(v11 + 16) >> 3)
  {
    v74 = v11;
    sub_1BC3FD314(v13);
    swift_bridgeObjectRelease();
    v14 = v74;
  }
  else
  {
    v14 = sub_1BC3FD590(v13, v11);
    swift_bridgeObjectRelease();
  }
  v15 = sub_1BC3D6D6C(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v10 + 16);
  swift_release();
  if (v16)
  {
    swift_release();
    v17 = 1;
  }
  else
  {
    v18 = *(_QWORD *)(v15 + 16);
    swift_release();
    v17 = v18 != 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v74) = v17;
  v19 = v70;
  swift_retain();
  sub_1BC62BFCC();
  v20 = *(_QWORD *)(v19 + qword_1EF459C68);
  if (v20 >> 62)
    goto LABEL_52;
  v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v21; v21 = sub_1BC62D3B8())
  {
    v22 = 0;
    v65 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v66 = v20 & 0xC000000000000001;
    v61 = v20 & 0xFFFFFFFFFFFFFF8;
    v60 = v20 + 32;
    v64 = *MEMORY[0x1E0DEF740];
    v23 = MEMORY[0x1E0DEE9D8];
    v62 = v20;
    v63 = v21;
    while (1)
    {
      if (v66)
      {
        v24 = MEMORY[0x1BCCF24CC](v22, v20);
        v25 = __OFADD__(v22++, 1);
        if (v25)
          goto LABEL_49;
      }
      else
      {
        if (v22 >= *(_QWORD *)(v61 + 16))
          goto LABEL_51;
        v24 = *(_QWORD *)(v60 + 8 * v22);
        swift_retain();
        v25 = __OFADD__(v22++, 1);
        if (v25)
          goto LABEL_49;
      }
      v73 = v23;
      v74 = v23;
      swift_retain();
      v26 = sub_1BC62B2C4();
      v71 = v24;
      v27 = swift_release();
      MEMORY[0x1E0C80A78](v27);
      v28 = sub_1BC3FE514(v26, sub_1BC3FE640);
      swift_bridgeObjectRelease();
      v29 = v28[2];
      if (v29)
        break;
LABEL_42:
      swift_bridgeObjectRelease();
      v50 = v70;
      swift_retain();
      v51 = sub_1BC3FE0B8(v23, v50);
      swift_bridgeObjectRelease();
      swift_release();
      v52 = sub_1BC3D2128(v51);
      swift_bridgeObjectRelease();
      v72 = v52;
      v53 = swift_bridgeObjectRetain();
      sub_1BC3BB400(v53);
      v54 = sub_1BC62CC74();
      v56 = v67;
      v55 = v68;
      *v67 = v54;
      v57 = v69;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v55 + 104))(v56, v64, v69);
      LOBYTE(v51) = sub_1BC62C4F4();
      (*(void (**)(uint64_t *, uint64_t))(v55 + 8))(v56, v57);
      if ((v51 & 1) == 0)
        goto LABEL_50;
      sub_1BC62B2E8();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = MEMORY[0x1E0DEE9D8];
      if (v22 == v63)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    v30 = 0;
    while (1)
    {
      v20 = v28[v30 + 4];
      v31 = *(_QWORD *)(v20 + 16);
      v32 = *(_QWORD *)(v23 + 16);
      v33 = v32 + v31;
      if (__OFADD__(v32, v31))
        break;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v33 <= *(_QWORD *)(v23 + 24) >> 1)
      {
        if (*(_QWORD *)(v20 + 16))
          goto LABEL_32;
      }
      else
      {
        if (v32 <= v33)
          v35 = v32 + v31;
        else
          v35 = v32;
        v23 = sub_1BC3B5190(isUniquelyReferenced_nonNull_native, v35, 1, v23);
        if (*(_QWORD *)(v20 + 16))
        {
LABEL_32:
          v36 = *(_QWORD *)(v23 + 16);
          v37 = (*(_QWORD *)(v23 + 24) >> 1) - v36;
          v38 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
          if (v37 < v31)
            goto LABEL_47;
          v39 = *(_QWORD *)(v38 - 8);
          v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
          v41 = *(_QWORD *)(v39 + 72);
          v42 = v23 + v40 + v41 * v36;
          v43 = v20 + v40;
          v44 = v41 * v31;
          v45 = v42 + v44;
          v46 = v43 + v44;
          if (v43 < v45 && v42 < v46)
          {
            result = sub_1BC62D418();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v31)
          {
            v48 = *(_QWORD *)(v23 + 16);
            v25 = __OFADD__(v48, v31);
            v49 = v48 + v31;
            if (v25)
              goto LABEL_48;
            *(_QWORD *)(v23 + 16) = v49;
          }
          goto LABEL_22;
        }
      }
      if (v31)
        goto LABEL_46;
LABEL_22:
      swift_bridgeObjectRelease();
      if (v29 == ++v30)
      {
        swift_bridgeObjectRelease();
        v20 = v62;
        goto LABEL_42;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3F6D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, unint64_t, uint64_t);
  char *v64;
  uint64_t v65;

  v7 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v57 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v53 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v50 - v10;
  v12 = sub_1BC62B8C4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v62 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v64 = (char *)&v50 - v16;
  v17 = a1;
  v18 = a3;
  sub_1BC35EBE0(v17, a3, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  v19 = *(_QWORD *)(a3 + *(int *)(v7 + 52));
  if (v19)
  {
    v59 = v7;
    v20 = *(_QWORD *)(a2 + qword_1EF42DB20);
    swift_beginAccess();
    v21 = *(_QWORD *)(v20 + 16);
    v22 = *(_QWORD *)(v21 + 16);
    v51 = v18;
    v52 = v19;
    v50 = v3;
    if (v22)
    {
      v65 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC3BDB00(0, v22, 0);
      v23 = *(unsigned __int8 *)(v57 + 80);
      v61 = v21;
      v24 = v21 + ((v23 + 32) & ~v23);
      v63 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 72);
      v25 = v59;
      v26 = v64;
      do
      {
        sub_1BC35EBE0(v24, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, &v11[*(int *)(v25 + 48)], v12);
        sub_1BC3AFE68((uint64_t)v11);
        v27 = v65;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC3BDB00(0, *(_QWORD *)(v27 + 16) + 1, 1);
          v25 = v59;
          v27 = v65;
        }
        v29 = *(_QWORD *)(v27 + 16);
        v28 = *(_QWORD *)(v27 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1BC3BDB00(v28 > 1, v29 + 1, 1);
          v25 = v59;
          v27 = v65;
        }
        *(_QWORD *)(v27 + 16) = v29 + 1;
        v30 = v27
            + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
            + *(_QWORD *)(v13 + 72) * v29;
        v26 = v64;
        (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v30, v64, v12);
        v65 = v27;
        v24 += (uint64_t)v63;
        --v22;
      }
      while (v22);
      result = swift_bridgeObjectRelease();
      v18 = v51;
      v19 = v52;
    }
    else
    {
      result = swift_bridgeObjectRetain();
      v27 = MEMORY[0x1E0DEE9D8];
      v25 = v59;
    }
    *(_BYTE *)(v18 + 49) = 0;
    v54 = *(_QWORD *)(v19 + 16);
    if (v54)
    {
      v35 = 0;
      v64 = *(char **)(v27 + 16);
      v55 = v19 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
      v36 = v53;
      while (v35 < *(_QWORD *)(v19 + 16))
      {
        sub_1BC35EBE0(v55 + *(_QWORD *)(v57 + 72) * v35, v36, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if (v64)
        {
          v56 = v35;
          v37 = v36 + *(int *)(v25 + 48);
          v38 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
          v39 = v62;
          v63 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
          v63(v62, v27 + v38, v12);
          v40 = sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
          swift_bridgeObjectRetain();
          v60 = v40;
          v61 = v37;
          v41 = sub_1BC62C644();
          v42 = *(void (**)(char *, uint64_t))(v13 + 8);
          v42(v39, v12);
          if ((v41 & 1) != 0)
            goto LABEL_28;
          if (v64 != (char *)1)
          {
            v58 = *(_QWORD *)(v13 + 72);
            v43 = v62;
            v63(v62, v27 + v38 + v58, v12);
            v44 = sub_1BC62C644();
            v42(v43, v12);
            if ((v44 & 1) != 0)
            {
LABEL_28:
              swift_bridgeObjectRelease();
              sub_1BC3AFE68(v53);
              swift_bridgeObjectRelease();
              result = swift_bridgeObjectRelease();
              *(_BYTE *)(v51 + 49) = 1;
              return result;
            }
            if (v64 != (char *)2)
            {
              v45 = v27 + v38 + 2 * v58;
              v46 = 2;
              while (1)
              {
                v47 = v62;
                result = ((uint64_t (*)(char *, uint64_t, uint64_t))v63)(v62, v45, v12);
                v48 = (char *)(v46 + 1);
                if (__OFADD__(v46, 1))
                  break;
                v49 = sub_1BC62C644();
                v42(v47, v12);
                if ((v49 & 1) != 0)
                  goto LABEL_28;
                ++v46;
                v45 += v58;
                if (v48 == v64)
                  goto LABEL_14;
              }
              __break(1u);
              break;
            }
          }
LABEL_14:
          swift_bridgeObjectRelease();
          v25 = v59;
          v19 = v52;
          v36 = v53;
          v35 = v56;
        }
        ++v35;
        result = sub_1BC3AFE68(v36);
        if (v35 == v54)
          goto LABEL_27;
      }
      __break(1u);
    }
    else
    {
LABEL_27:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v32 = a3 + *(int *)(v7 + 48);
    v33 = *(_QWORD *)(*(_QWORD *)(a2 + qword_1EF42DB20) + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    v34 = sub_1BC5DC63C(v32, v33);
    swift_release();
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v18 + 49) = v34 & 1;
  }
  return result;
}

void sub_1BC3F72A4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC3F72D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v1 = v0 + qword_1EF42DB28;
  sub_1BC3F7478();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3F738C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BC62B4F8();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v1 = v0 + qword_1EF42DB28;
  sub_1BC3F7478();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC3F7458()
{
  sub_1BC3F738C();
  return swift_deallocClassInstance();
}

void sub_1BC3F7478()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4968)
  {
    v0 = sub_1BC62BFD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4968);
  }
}

uint64_t sub_1BC3F74CC()
{
  return type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource();
}

uint64_t sub_1BC3F74D4()
{
  return MEMORY[0x1E0D2B4A0];
}

uint64_t sub_1BC3F74E0(unint64_t a1, void *a2, uint64_t a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t (*v38)(uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  uint64_t aBlock[6];
  uint64_t v63;

  v54 = a4;
  v57 = a3;
  sub_1BC357158(0, &qword_1EF42DB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v51 - v7;
  v9 = sub_1BC62B8C4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v61 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v60 = (char *)&v51 - v13;
  v14 = sub_1BC62C47C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1BC62C4AC();
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v55 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC62BB34();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v51 = v17;
    v52 = v15;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      result = sub_1BC62D3B8();
      v24 = result;
    }
    else
    {
      v24 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
    }
    v26 = MEMORY[0x1E0DEE9D8];
    v53 = v14;
    if (!v24)
    {
LABEL_18:
      swift_bridgeObjectRelease_n();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
      v34 = (void *)sub_1BC62CC74();
      v35 = swift_allocObject();
      *(_QWORD *)(v35 + 16) = v57;
      *(_BYTE *)(v35 + 24) = v54 & 1;
      *(_QWORD *)(v35 + 32) = v26;
      aBlock[4] = (uint64_t)sub_1BC3FA1F8;
      aBlock[5] = v35;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1BC39BE70;
      aBlock[3] = (uint64_t)&block_descriptor_9_2;
      v36 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      v37 = v55;
      sub_1BC62C494();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC35811C();
      v39 = v51;
      v40 = v53;
      sub_1BC62D0A0();
      MEMORY[0x1BCCF1F68](0, v37, v39, v36);
      _Block_release(v36);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v40);
      return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v37, v58);
    }
    if (v24 >= 1)
    {
      v27 = 0;
      v28 = a1 & 0xC000000000000001;
      v59 = a1;
      do
      {
        if (v28)
          MEMORY[0x1BCCF24CC](v27, a1);
        else
          v29 = *(id *)(a1 + 8 * v27 + 32);
        sub_1BC62B8D0();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        {
          sub_1BC377E3C((uint64_t)v8, &qword_1EF42DB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8]);
        }
        else
        {
          v30 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
          v31 = v60;
          v30(v60, v8, v9);
          v30(v61, v31, v9);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v26 = sub_1BC3B52BC(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
          v33 = *(_QWORD *)(v26 + 16);
          v32 = *(_QWORD *)(v26 + 24);
          if (v33 >= v32 >> 1)
            v26 = sub_1BC3B52BC(v32 > 1, v33 + 1, 1, v26);
          *(_QWORD *)(v26 + 16) = v33 + 1;
          v30((char *)(v26+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v33), v61, v9);
          a1 = v59;
        }
        ++v27;
      }
      while (v24 != v27);
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
    v41 = v21;
    sub_1BC62BAF8();
    v42 = a2;
    v43 = a2;
    v44 = sub_1BC62BB28();
    v45 = sub_1BC62CAC4();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      *(_DWORD *)v46 = 136315138;
      v61 = (char *)(v46 + 4);
      aBlock[0] = v47;
      v63 = (uint64_t)a2;
      v48 = a2;
      sub_1BC3FA18C(0, (unint64_t *)&unk_1ED6A4E80, (uint64_t)&qword_1ED6A59C0, MEMORY[0x1E0DEDAF0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC35817C);
      v49 = sub_1BC62C6F8();
      v63 = sub_1BC4991F0(v49, v50, aBlock);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v44, v45, "Error fetching selected authorization identifiers: %s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v47, -1, -1);
      MEMORY[0x1BCCF36A8](v46, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v41);
  }
  return result;
}

uint64_t sub_1BC3F7B18(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_1BC62BB34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    sub_1BC62BAF8();
    v9 = sub_1BC62BB28();
    v10 = sub_1BC62CADC();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1BC30A000, v9, v10, "Successfully fetched selected authorization identifiers.", v11, 2u);
      MEMORY[0x1BCCF36A8](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if ((a2 & 1) != 0 || *(_BYTE *)(v8 + qword_1EF459C70) == 1)
    {
      v12 = (_QWORD *)(v8 + qword_1EF42DB10);
      swift_beginAccess();
      *v12 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + qword_1EF459C70) = 0;
    }
    v13 = (uint64_t *)(v8 + qword_1EF42DB10);
    swift_beginAccess();
    v14 = swift_bridgeObjectRetain();
    sub_1BC3BB58C(v14);
    swift_endAccess();
    v15 = *(_QWORD *)(v8 + qword_1EF459C68);
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_1BC62D3B8();
      v16 = result;
      if (result)
        goto LABEL_9;
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v16)
      {
LABEL_9:
        if (v16 < 1)
        {
          __break(1u);
          return result;
        }
        v17 = 0;
        do
        {
          if ((v15 & 0xC000000000000001) != 0)
            MEMORY[0x1BCCF24CC](v17, v15);
          else
            swift_retain();
          ++v17;
          v18 = *v13;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1BC3E4C54(v18);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
        }
        while (v16 != v17);
      }
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC3F7DBC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1BC3F9CD8(a1, a2, a3, &qword_1EF42DB80);
}

uint64_t sub_1BC3F7DD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - v3;
  v5 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v6[5] = v1;
  swift_retain();
  sub_1BC5C2784((uint64_t)v4, (uint64_t)&unk_1EF42DBC8, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_1BC3F7EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v5[4] = a4;
  v5[5] = a5;
  v7 = sub_1BC62BB34();
  v5[6] = v7;
  v5[7] = *(_QWORD *)(v7 - 8);
  v5[8] = swift_task_alloc();
  v8 = (_QWORD *)swift_task_alloc();
  v5[9] = v8;
  *v8 = v5;
  v8[1] = sub_1BC3F7F30;
  v8[9] = a4;
  return swift_task_switch();
}

uint64_t sub_1BC3F7F30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 88) = v3;
    *v3 = v2;
    v3[1] = sub_1BC3F7FC8;
    v4 = **(_QWORD **)(v2 + 32);
    v3[2] = 1;
    v3[3] = v4;
  }
  return swift_task_switch();
}

uint64_t sub_1BC3F7FC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC3F803C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = (void *)v0[10];
  sub_1BC62BAF8();
  v3 = v2;
  v4 = v2;
  v5 = sub_1BC62BB28();
  v6 = sub_1BC62CAC4();
  if (os_log_type_enabled(v5, v6))
  {
    v18 = v0[7];
    v19 = v0[6];
    v20 = v0[8];
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v21 = v17;
    *(_DWORD *)v7 = 136315394;
    v9 = sub_1BC62D718();
    v0[2] = sub_1BC4991F0(v9, v10, &v21);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    v11 = v2;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v12;
    sub_1BC62CFF8();
    *v8 = v12;

    _os_log_impl(&dword_1BC30A000, v5, v6, "%s Failed to persist sharing changes: %@", (uint8_t *)v7, 0x16u);
    sub_1BC3FA18C(0, (unint64_t *)&qword_1ED6A4B80, (uint64_t)&qword_1ED6A4E60, 0x1E0DE7910, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC34B6A0);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v17, -1, -1);
    MEMORY[0x1BCCF36A8](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
  }
  else
  {
    v14 = v0[7];
    v13 = v0[8];
    v15 = v1[6];

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1BC3F82AC()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = (void *)v0[12];
  sub_1BC62BAF8();
  v3 = v2;
  v4 = v2;
  v5 = sub_1BC62BB28();
  v6 = sub_1BC62CAC4();
  if (os_log_type_enabled(v5, v6))
  {
    v18 = v0[7];
    v19 = v0[6];
    v20 = v0[8];
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v21 = v17;
    *(_DWORD *)v7 = 136315394;
    v9 = sub_1BC62D718();
    v0[2] = sub_1BC4991F0(v9, v10, &v21);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    v11 = v2;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v12;
    sub_1BC62CFF8();
    *v8 = v12;

    _os_log_impl(&dword_1BC30A000, v5, v6, "%s Failed to persist sharing changes: %@", (uint8_t *)v7, 0x16u);
    sub_1BC3FA18C(0, (unint64_t *)&qword_1ED6A4B80, (uint64_t)&qword_1ED6A4E60, 0x1E0DE7910, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC34B6A0);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v17, -1, -1);
    MEMORY[0x1BCCF36A8](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
  }
  else
  {
    v14 = v0[7];
    v13 = v0[8];
    v15 = v1[6];

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1BC3F851C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  return swift_task_switch();
}

uint64_t sub_1BC3F8534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  _QWORD *v13;

  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_1BC3E4498(v1);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BC58BFF8(v3);
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1BC58BFF8(v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) <= *(_QWORD *)(v4 + 16) >> 3)
    sub_1BC3FD314(v6);
  else
    v4 = sub_1BC3FD590(v6, v4);
  swift_bridgeObjectRelease();
  v7 = sub_1BC3D6D6C(v4);
  *(_QWORD *)(v0 + 80) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1BC58BFF8(v2);
  swift_bridgeObjectRelease();
  v9 = swift_bridgeObjectRetain();
  v10 = sub_1BC58BFF8(v9);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v10 + 16) <= *(_QWORD *)(v8 + 16) >> 3)
  {
    sub_1BC3FD314(v10);
    swift_bridgeObjectRelease();
    v11 = v8;
  }
  else
  {
    v11 = sub_1BC3FD590(v10, v8);
    swift_bridgeObjectRelease();
  }
  v12 = sub_1BC3D6D6C(v11);
  *(_QWORD *)(v0 + 88) = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 16) || *(_QWORD *)(v12 + 16))
  {
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v13;
    *v13 = v0;
    v13[1] = sub_1BC3F8790;
    return sub_1BC3F8B20(v7);
  }
  else
  {
    swift_release();
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BC3F8790()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  v4 = (_QWORD *)swift_task_alloc();
  v2[14] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_1BC3F882C;
  return sub_1BC3F8E3C(v2[11]);
}

uint64_t sub_1BC3F882C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BC3F8898()
{
  uint64_t v0;

  sub_1BC62C944();
  *(_QWORD *)(v0 + 128) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC3F8900()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release();
  *(_BYTE *)(v1 + qword_1EF459C70) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3F8948()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3F8984()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3F89B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1BC3F89D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[2];
  v1 = v0[3];
  v3 = swift_task_alloc();
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_1BC3F8A74;
  return sub_1BC62D5BC();
}

uint64_t sub_1BC3F8A74()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC3F8AE0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3F8AEC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3F8B20(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  v3 = sub_1BC62BB34();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC3F8B88()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  _QWORD *v6;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(*(_QWORD *)(v0 + 32) + qword_1EF42DB08);
  *(_QWORD *)(v0 + 72) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 24);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v4;
    v4[2] = v1;
    v4[3] = v3;
    v4[4] = v2;
    v5 = v1;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v6;
    *v6 = v0;
    v6[1] = sub_1BC3F8DD0;
    return sub_1BC62D5BC();
  }
  else
  {
    sub_1BC62BAF8();
    v8 = sub_1BC62BB28();
    v9 = sub_1BC62CAC4();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 56);
    v12 = *(_QWORD *)(v0 + 64);
    v13 = *(_QWORD *)(v0 + 48);
    if (v10)
    {
      v18 = *(_QWORD *)(v0 + 64);
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = sub_1BC62D718();
      *(_QWORD *)(v0 + 16) = sub_1BC4991F0(v16, v17, &v19);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v8, v9, "%s authorizationStore was nil", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v15, -1, -1);
      MEMORY[0x1BCCF36A8](v14, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v18, v13);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BC3F8DD0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC3F8E3C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  v3 = sub_1BC62BB34();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC3F8EA4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  _QWORD *v6;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(*(_QWORD *)(v0 + 32) + qword_1EF42DB08);
  *(_QWORD *)(v0 + 72) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 24);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v4;
    v4[2] = v1;
    v4[3] = v3;
    v4[4] = v2;
    v5 = v1;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v6;
    *v6 = v0;
    v6[1] = sub_1BC3F90EC;
    return sub_1BC62D5BC();
  }
  else
  {
    sub_1BC62BAF8();
    v8 = sub_1BC62BB28();
    v9 = sub_1BC62CAC4();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 56);
    v12 = *(_QWORD *)(v0 + 64);
    v13 = *(_QWORD *)(v0 + 48);
    if (v10)
    {
      v18 = *(_QWORD *)(v0 + 64);
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = sub_1BC62D718();
      *(_QWORD *)(v0 + 16) = sub_1BC4991F0(v16, v17, &v19);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v8, v9, "%s authorizationStore was nil", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v15, -1, -1);
      MEMORY[0x1BCCF36A8](v14, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v18, v13);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BC3F90EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC3F9158()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC3F9194()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BC3F91DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, SEL *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  SEL *v23;
  _QWORD aBlock[6];

  v22 = a2;
  v23 = a8;
  v21 = a7;
  sub_1BC3FDFDC();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v12);
  sub_1BC3F54E8(a3);
  sub_1BC34B6A0(0, &qword_1EF42DB80);
  v16 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  *(_QWORD *)(v18 + ((v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = a4;
  aBlock[4] = a6;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3EFECC;
  aBlock[3] = v21;
  v19 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v22, *v23, v16, v19);
  _Block_release(v19);

}

uint64_t sub_1BC3F936C(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v34 - v11;
  if ((a1 & 1) != 0)
  {
    sub_1BC62BAF8();
    v13 = sub_1BC62BB28();
    v14 = sub_1BC62CADC();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v37 = v16;
      v35 = v6;
      *(_DWORD *)v15 = 136315138;
      v17 = sub_1BC62D718();
      v36 = sub_1BC4991F0(v17, v18, &v37);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v13, v14, "[%s] Successfully removed Authorization Identifiers", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v16, -1, -1);
      MEMORY[0x1BCCF36A8](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v35);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    sub_1BC3FDFDC();
    return sub_1BC62C920();
  }
  else
  {
    sub_1BC62BAF8();
    v19 = a2;
    v20 = a2;
    v21 = sub_1BC62BB28();
    v22 = sub_1BC62CADC();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v35 = a3;
      v25 = v24;
      v37 = v24;
      *(_DWORD *)v23 = 136315394;
      v26 = sub_1BC62D718();
      v36 = sub_1BC4991F0(v26, v27, &v37);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v36 = (uint64_t)a2;
      v28 = a2;
      sub_1BC3FA18C(0, (unint64_t *)&unk_1ED6A4E80, (uint64_t)&qword_1ED6A59C0, MEMORY[0x1E0DEDAF0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC35817C);
      v29 = sub_1BC62C6F8();
      v36 = sub_1BC4991F0(v29, v30, &v37);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v21, v22, "[%s] Error removing Authorization Identifiers %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v25, -1, -1);
      MEMORY[0x1BCCF36A8](v23, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v32 = (uint64_t)a2;
    if (!a2)
    {
      type metadata accessor for HKError(0);
      v36 = 0;
      sub_1BC3F9E48(MEMORY[0x1E0DEE9D8]);
      sub_1BC347F0C(&qword_1EF428F78, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC6393A4);
      sub_1BC62A544();
      v32 = v37;
    }
    v37 = v32;
    v33 = a2;
    sub_1BC3FDFDC();
    return sub_1BC62C914();
  }
}

void sub_1BC3F97A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  sub_1BC3FDFDC();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v6);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EEF8]), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(_QWORD *)(v12 + ((v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_1BC3FE058;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3F9CC4;
  aBlock[3] = &block_descriptor_17;
  v13 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v10, sel_shareHealthDataWithOptions_reason_completion_, 0, a2, v13);

  _Block_release(v13);
}

uint64_t sub_1BC3F9918(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v32 - v10;
  if (a2)
  {
    v12 = a2;
    sub_1BC62BAF8();
    v13 = a2;
    v14 = a2;
    v15 = sub_1BC62BB28();
    v16 = sub_1BC62CADC();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v33 = a3;
      v19 = v18;
      v35 = v18;
      *(_DWORD *)v17 = 136315394;
      v20 = sub_1BC62D718();
      v34 = sub_1BC4991F0(v20, v21, &v35);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      v34 = (uint64_t)a2;
      v22 = a2;
      sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
      v23 = sub_1BC62C6F8();
      v34 = sub_1BC4991F0(v23, v24, &v35);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v15, v16, "[%s] Error sharing to clinicalSharingClient: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v19, -1, -1);
      MEMORY[0x1BCCF36A8](v17, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v35 = (uint64_t)a2;
    sub_1BC3FDFDC();
    return sub_1BC62C914();
  }
  else
  {
    sub_1BC62BAF8();
    v25 = sub_1BC62BB28();
    v26 = sub_1BC62CADC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v35 = v28;
      v33 = a3;
      *(_DWORD *)v27 = 136315138;
      v29 = sub_1BC62D718();
      v34 = sub_1BC4991F0(v29, v30, &v35);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v25, v26, "[%s] Successfully shared to clinicalSharingClient", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v28, -1, -1);
      MEMORY[0x1BCCF36A8](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    sub_1BC3FDFDC();
    return sub_1BC62C920();
  }
}

uint64_t sub_1BC3F9CC4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1BC3F9CD8(a1, a2, a3, &qword_1EF42DBA0);
}

uint64_t sub_1BC3F9CD8(uint64_t a1, uint64_t a2, void *a3, unint64_t *a4)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v5 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BC34B6A0(0, a4);
    v5 = sub_1BC62C878();
  }
  swift_retain();
  v7 = a3;
  v6(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3F9D5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC3F9DD8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BC62BFCC();
}

unint64_t sub_1BC3F9E48(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC3FE24C();
  v2 = sub_1BC62D400();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC35EBE0(v6, (uint64_t)&v15, (uint64_t (*)(_QWORD))sub_1BC3FE2B4);
    v7 = v15;
    v8 = v16;
    result = sub_1BC3F9F78(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1BC35E088(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC3F9F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC62D670();
  sub_1BC62C740();
  v4 = sub_1BC62D6AC();
  return sub_1BC3F9FDC(a1, a2, v4);
}

unint64_t sub_1BC3F9FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1BC62D574() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1BC62D574() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1BC62D574() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1BC3FA120()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC3FA144()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC3FA168(unint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC3F74E0(a1, a2, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

void sub_1BC3FA18C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1BC62CFE0();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC3FA1E0()
{
  return objectdestroy_5Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BC3FA1F8()
{
  uint64_t v0;

  return sub_1BC3F7B18(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1BC3FA208@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  char v38;
  void *v39;
  char v40;
  char v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  char v46;
  uint64_t v47;
  id v48;
  void *v49;
  char v50;
  unint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[9];
  _OWORD v81[4];
  uint64_t v82;

  v4 = *v2;
  v5 = *((_OWORD *)a1 + 3);
  v81[2] = *((_OWORD *)a1 + 2);
  v81[3] = v5;
  v82 = *((_QWORD *)a1 + 8);
  v6 = *((_OWORD *)a1 + 1);
  v81[0] = *(_OWORD *)a1;
  v81[1] = v6;
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  DisplayCategory.hash(into:)((uint64_t)v80);
  v7 = sub_1BC62D6AC();
  v8 = -1 << *(_BYTE *)(v4 + 32);
  v9 = v7 & ~v8;
  v10 = v4 + 56;
  if (((*(_QWORD *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_75:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 64) = 0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v11 = ~v8;
  v12 = *a1;
  v78 = v4;
  v72 = *((_QWORD *)a1 + 4);
  v73 = *((_QWORD *)a1 + 3);
  v70 = *((_QWORD *)a1 + 2);
  v71 = *((_QWORD *)a1 + 5);
  *(_QWORD *)&v81[0] = *((_QWORD *)a1 + 6);
  v68 = *((_QWORD *)a1 + 7);
  v65 = v2;
  v76 = ~v8;
  v77 = v4 + 56;
  v75 = v12;
  while (1)
  {
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 72 * v9);
    if (*(unsigned __int8 *)v13 != v12)
      goto LABEL_4;
    v14 = (void *)v13[1];
    v15 = v13[2];
    v16 = v13[3];
    v79 = v13[4];
    v18 = v13[5];
    v17 = v13[6];
    v19 = v13[7];
    v20 = (void *)v13[8];
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = v20;
    v22 = v14;
    if ((sub_1BC62CEB4() & 1) != 0)
    {
      v74 = v19;
      v23 = v16;
      if (v16)
      {
        v24 = v17;
        if (!v73)
          goto LABEL_3;
        v25 = v15 == v70 && v23 == v73;
        if (!v25 && (sub_1BC62D574() & 1) == 0)
          goto LABEL_3;
      }
      else
      {
        v24 = v17;
        if (v73)
          goto LABEL_3;
      }
      v26 = v79 == v72 && v18 == v71;
      if (!v26 && (sub_1BC62D574() & 1) == 0)
        goto LABEL_3;
      if ((unint64_t)v24 >> 62)
      {
        swift_bridgeObjectRetain();
        v54 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
        v27 = v54;
      }
      else
      {
        v27 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v28 = *(_QWORD *)&v81[0];
      v29 = *(_QWORD *)&v81[0] >> 62;
      if (*(_QWORD *)&v81[0] >> 62)
      {
        v64 = v27;
        swift_bridgeObjectRetain();
        v55 = sub_1BC62D3B8();
        sub_1BC3FE9FC((uint64_t)v81);
        v27 = v64;
        if (v64 != v55)
          goto LABEL_3;
      }
      else if (v27 != *(_QWORD *)((*(_QWORD *)&v81[0] & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_3;
      }
      if (v27)
      {
        v30 = v24 & 0xFFFFFFFFFFFFFF8;
        v31 = (v24 & 0xFFFFFFFFFFFFFF8) + 32;
        if (v24 < 0)
          v30 = v24;
        if ((unint64_t)v24 >> 62)
          v31 = v30;
        v32 = v28 & 0xFFFFFFFFFFFFFF8;
        v33 = (v28 & 0xFFFFFFFFFFFFFF8) + 32;
        if (v28 < 0)
          v32 = v28;
        if (v29)
          v33 = v32;
        if (v31 != v33)
        {
          if (v27 < 0)
          {
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
            goto LABEL_85;
          }
          v67 = v24 & 0xC000000000000001;
          v62 = v27;
          if ((v24 & 0xC000000000000001) != 0)
          {
            v34 = (id)MEMORY[0x1BCCF24CC](0, v24);
          }
          else
          {
            if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_79;
            v34 = *(id *)(v24 + 32);
          }
          v35 = v34;
          v66 = v28 & 0xC000000000000001;
          if ((v28 & 0xC000000000000001) != 0)
          {
            v36 = (id)MEMORY[0x1BCCF24CC](0, v28);
          }
          else
          {
            if (!*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_80;
            v36 = *(id *)(v28 + 32);
          }
          v37 = v36;
          sub_1BC34B6A0(0, &qword_1ED6A48A0);
          v38 = sub_1BC62CEB4();
          v39 = v35;
          v40 = v38;

          if ((v40 & 1) == 0)
            goto LABEL_3;
          if (v62 != 1)
          {
            if (v67)
            {
              v42 = (id)MEMORY[0x1BCCF24CC](1, v24);
            }
            else
            {
              if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
                goto LABEL_83;
              v42 = *(id *)(v24 + 40);
            }
            v43 = v42;
            if (v66)
            {
              v44 = (id)MEMORY[0x1BCCF24CC](1, v28);
            }
            else
            {
              if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
                goto LABEL_84;
              v44 = *(id *)(v28 + 40);
            }
            v45 = v44;
            v46 = sub_1BC62CEB4();

            if ((v46 & 1) == 0)
              goto LABEL_3;
            v63 = 2 - v62;
            v47 = 6;
            while (v63 + v47 != 6)
            {
              v51 = v47 - 4;
              if (v67)
              {
                v52 = (id)MEMORY[0x1BCCF24CC](v47 - 4, v24);
              }
              else
              {
                if (v51 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_81;
                v52 = *(id *)(v24 + 8 * v47);
              }
              v53 = v52;
              if (v66)
              {
                v48 = (id)MEMORY[0x1BCCF24CC](v47 - 4, v28);
              }
              else
              {
                if (v51 >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_82;
                v48 = *(id *)(v28 + 8 * v47);
              }
              v49 = v48;
              v50 = sub_1BC62CEB4();

              ++v47;
              if ((v50 & 1) == 0)
                goto LABEL_3;
            }
          }
        }
      }
      if ((sub_1BC3ED4CC(v74, v68) & 1) != 0)
        break;
    }
LABEL_3:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v77;
    v4 = v78;
    v11 = v76;
    v12 = v75;

LABEL_4:
    v9 = (v9 + 1) & v11;
    if (((*(_QWORD *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_75;
  }
  v41 = sub_1BC62CEB4();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v28 = (uint64_t)v65;
  v10 = v77;
  v4 = v78;
  v11 = v76;
  v12 = v75;
  if ((v41 & 1) == 0)
    goto LABEL_4;
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v58 = *v65;
  v80[0] = *v65;
  *v65 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_85:
    sub_1BC3FAD24();
    v58 = v80[0];
  }
  v59 = *(_QWORD *)(v58 + 48) + 72 * v9;
  v60 = *(_QWORD *)(v59 + 8);
  v61 = *(_QWORD *)(v59 + 32);
  *(_BYTE *)a2 = *(_BYTE *)v59;
  *(_QWORD *)(a2 + 8) = v60;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v59 + 16);
  *(_QWORD *)(a2 + 32) = v61;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v59 + 40);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(v59 + 56);
  sub_1BC3FBF2C(v9);
  *(_QWORD *)v28 = v80[0];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC3FA8D4(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_1BC62D148();

    if ((v5 & 1) != 0)
    {
      v6 = sub_1BC3FBD94();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BC62CEA8();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_1BC62CEB4();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_1BC62CEB4();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BC3FB3DC((unint64_t *)&qword_1EF42C7B0, (unint64_t *)&qword_1EF431480, 0x1E0D2EE90, &qword_1EF42C7B8);
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_1BC3FC408(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BC3FAAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1BC62B8C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1BC347F0C(&qword_1EF42C7A8, v11, MEMORY[0x1E0D2BF08]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1BC62C5C0();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
      v19 = sub_1BC62C644();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BC3FAFBC((uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], &qword_1EF42C7A0, &qword_1EF42C7A8, MEMORY[0x1E0D2BF08]);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1BC3FC5A8(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

id sub_1BC3FAD24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  __int128 v27;

  v1 = v0;
  sub_1BC3CCEAC(0, (unint64_t *)&qword_1EF42C9A8, (void (*)(void))sub_1BC35E728);
  v2 = *v0;
  v3 = sub_1BC62D190();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_28;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
      {
        v9 = v24 + 2;
        if (v24 + 2 >= v13)
          goto LABEL_28;
        v25 = *(_QWORD *)(v6 + 8 * v9);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 72 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v19 = *(void **)(v17 + 8);
    v18 = *(_QWORD *)(v17 + 16);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    v21 = *(_OWORD *)(v17 + 24);
    v22 = *(_OWORD *)(v17 + 40);
    v27 = *(_OWORD *)(v17 + 56);
    *(_BYTE *)v20 = *(_BYTE *)v17;
    *(_QWORD *)(v20 + 8) = v19;
    *(_QWORD *)(v20 + 16) = v18;
    *(_OWORD *)(v20 + 24) = v21;
    *(_OWORD *)(v20 + 40) = v22;
    *(_OWORD *)(v20 + 56) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = *((id *)&v27 + 1);
    result = v19;
  }
  v26 = v24 + 3;
  if (v26 >= v13)
    goto LABEL_28;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC3FAF50()
{
  return sub_1BC3FB808((uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, &qword_1EF42C998, &qword_1EF42C9A0, (uint64_t)&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryItem);
}

void *sub_1BC3FAF74()
{
  return sub_1BC3FAFBC((uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], &qword_1EF42C7A0, &qword_1EF42C7A8, MEMORY[0x1E0D2BF08]);
}

void *sub_1BC3FAF98()
{
  return sub_1BC3FAFBC((uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], &qword_1EF42CB00, &qword_1EF42CB08, MEMORY[0x1E0CB11D0]);
}

void *sub_1BC3FAFBC(uint64_t (*a1)(uint64_t), unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *result;
  uint64_t v17;
  unint64_t v18;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;

  v9 = a1(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - v11;
  sub_1BC3CD7E4(0, a2, a1, a3, a4);
  v32 = v4;
  v13 = *v4;
  v14 = sub_1BC62D190();
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v32 = v15;
    return result;
  }
  result = (void *)(v14 + 56);
  v17 = v13 + 56;
  v18 = (unint64_t)((1 << *(_BYTE *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)result >= v13 + 56 + 8 * v18)
    result = memmove(result, (const void *)(v13 + 56), 8 * v18);
  v20 = 0;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v13 + 16);
  v21 = 1 << *(_BYTE *)(v13 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & *(_QWORD *)(v13 + 56);
  v24 = (unint64_t)(v21 + 63) >> 6;
  while (1)
  {
    if (v23)
    {
      v25 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v26 = v25 | (v20 << 6);
      goto LABEL_12;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v24)
      goto LABEL_28;
    v29 = *(_QWORD *)(v17 + 8 * v28);
    ++v20;
    if (!v29)
    {
      v20 = v28 + 1;
      if (v28 + 1 >= v24)
        goto LABEL_28;
      v29 = *(_QWORD *)(v17 + 8 * v20);
      if (!v29)
      {
        v20 = v28 + 2;
        if (v28 + 2 >= v24)
          goto LABEL_28;
        v29 = *(_QWORD *)(v17 + 8 * v20);
        if (!v29)
          break;
      }
    }
LABEL_27:
    v23 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v20 << 6);
LABEL_12:
    v27 = *(_QWORD *)(v10 + 72) * v26;
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, *(_QWORD *)(v13 + 48) + v27, v9);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v15 + 48) + v27, v12, v9);
  }
  v30 = v28 + 3;
  if (v30 >= v24)
    goto LABEL_28;
  v29 = *(_QWORD *)(v17 + 8 * v30);
  if (v29)
  {
    v20 = v30;
    goto LABEL_27;
  }
  while (1)
  {
    v20 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v20 >= v24)
      goto LABEL_28;
    v29 = *(_QWORD *)(v17 + 8 * v20);
    ++v30;
    if (v29)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC3FB1EC()
{
  return sub_1BC3FB3DC((unint64_t *)&qword_1EF42C7B0, (unint64_t *)&qword_1EF431480, 0x1E0D2EE90, &qword_1EF42C7B8);
}

void *sub_1BC3FB210()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1BC3CCF68(0, &qword_1EF42C818);
  v2 = *v0;
  v3 = sub_1BC62D190();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC3FB3B8()
{
  return sub_1BC3FB3DC((unint64_t *)&qword_1ED6A3F60, &qword_1ED6A58D8, 0x1E0CB6B00, (unint64_t *)&qword_1ED6A58E0);
}

id sub_1BC3FB3DC(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v5 = v4;
  sub_1BC3FEA24(0, a1, a2, a3, a4);
  v6 = *v4;
  v7 = sub_1BC62D190();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v5 = v8;
    return result;
  }
  result = (id)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v17)
        goto LABEL_28;
      v23 = *(_QWORD *)(v10 + 8 * v13);
      if (!v23)
      {
        v13 = v22 + 2;
        if (v22 + 2 >= v17)
          goto LABEL_28;
        v23 = *(_QWORD *)(v10 + 8 * v13);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v16 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(void **)(*(_QWORD *)(v6 + 48) + v20);
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v21;
    result = v21;
  }
  v24 = v22 + 3;
  if (v24 >= v17)
    goto LABEL_28;
  v23 = *(_QWORD *)(v10 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC3FB590()
{
  return sub_1BC3FB3DC((unint64_t *)&qword_1EF42CAC8, &qword_1EF42CAD0, 0x1E0CB63D8, &qword_1EF42CAD8);
}

void *sub_1BC3FB5B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1BC3CD7E4(0, &qword_1EF42CAB8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription, &qword_1ED6A51D0, (uint64_t)&protocol conformance descriptor for CategoryRecordQueryDescription);
  v2 = *v0;
  v3 = sub_1BC62D190();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC3FB778()
{
  return sub_1BC3FB3DC((unint64_t *)&qword_1ED6A4928, &qword_1ED6A48A0, 0x1E0CB6A88, (unint64_t *)&qword_1ED6A4920);
}

void *sub_1BC3FB79C()
{
  return sub_1BC3FB808((uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, &qword_1EF42CAB0, &qword_1ED6A5438, (uint64_t)&protocol conformance descriptor for BrowseCategory);
}

id sub_1BC3FB7C0()
{
  return sub_1BC3FB3DC((unint64_t *)&qword_1EF42CA80, (unint64_t *)&qword_1ED6A5990, 0x1E0CB37E8, (unint64_t *)&qword_1ED6A52F0);
}

void *sub_1BC3FB7E4()
{
  return sub_1BC3FB808((uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, &qword_1EF42CAA0, &qword_1EF42CAA8, (uint64_t)&protocol conformance descriptor for UserDomainConceptViewData);
}

void *sub_1BC3FB808(uint64_t (*a1)(uint64_t), unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *result;
  uint64_t v17;
  unint64_t v18;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;

  v9 = a1(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - v11;
  sub_1BC3CD7E4(0, a2, a1, a3, a4);
  v32 = v4;
  v13 = *v4;
  v14 = sub_1BC62D190();
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v32 = v15;
    return result;
  }
  result = (void *)(v14 + 56);
  v17 = v13 + 56;
  v18 = (unint64_t)((1 << *(_BYTE *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)result >= v13 + 56 + 8 * v18)
    result = memmove(result, (const void *)(v13 + 56), 8 * v18);
  v20 = 0;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v13 + 16);
  v21 = 1 << *(_BYTE *)(v13 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & *(_QWORD *)(v13 + 56);
  v24 = (unint64_t)(v21 + 63) >> 6;
  while (1)
  {
    if (v23)
    {
      v25 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v26 = v25 | (v20 << 6);
      goto LABEL_12;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v24)
      goto LABEL_28;
    v29 = *(_QWORD *)(v17 + 8 * v28);
    ++v20;
    if (!v29)
    {
      v20 = v28 + 1;
      if (v28 + 1 >= v24)
        goto LABEL_28;
      v29 = *(_QWORD *)(v17 + 8 * v20);
      if (!v29)
      {
        v20 = v28 + 2;
        if (v28 + 2 >= v24)
          goto LABEL_28;
        v29 = *(_QWORD *)(v17 + 8 * v20);
        if (!v29)
          break;
      }
    }
LABEL_27:
    v23 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v20 << 6);
LABEL_12:
    v27 = *(_QWORD *)(v10 + 72) * v26;
    sub_1BC35EBE0(*(_QWORD *)(v13 + 48) + v27, (uint64_t)v12, a1);
    result = (void *)sub_1BC375724((uint64_t)v12, *(_QWORD *)(v15 + 48) + v27, a1);
  }
  v30 = v28 + 3;
  if (v30 >= v24)
    goto LABEL_28;
  v29 = *(_QWORD *)(v17 + 8 * v30);
  if (v29)
  {
    v20 = v30;
    goto LABEL_27;
  }
  while (1)
  {
    v20 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v20 >= v24)
      goto LABEL_28;
    v29 = *(_QWORD *)(v17 + 8 * v20);
    ++v30;
    if (v29)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC3FBA2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1BC3CCF68(0, &qword_1EF42CA20);
  v2 = *v0;
  v3 = sub_1BC62D190();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC3FBBF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1BC3CCEAC(0, &qword_1EF42CA08, (void (*)(void))sub_1BC35DFC0);
  v2 = *v0;
  v3 = sub_1BC62D190();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BC3FBD94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_1BC62D118();
  v3 = swift_unknownObjectRetain();
  v4 = sub_1BC490330(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_1BC62CEA8();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_1BC62CEB4();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_1BC3FC408(v7);
      if ((sub_1BC62CEB4() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_1BC62CEB4();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1BC3FBF2C(unint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t j;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int64_t v42;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1BC62D0AC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v39 = v4;
      v40 = v3;
      v37 = (v8 + 1) & v7;
      v38 = v7;
      do
      {
        v41 = v6;
        v42 = v2;
        v9 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 72 * v6);
        v10 = (void *)v9[1];
        v11 = v9[3];
        v12 = v9[6];
        v14 = v9[7];
        v13 = (void *)v9[8];
        sub_1BC62D670();
        sub_1BC62D67C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15 = v13;
        v16 = v10;
        sub_1BC62CEC0();

        sub_1BC62D688();
        if (v11)
        {
          swift_bridgeObjectRetain();
          sub_1BC62C740();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRetain();
        sub_1BC62C740();
        swift_bridgeObjectRelease();
        if (v12 >> 62)
        {
          swift_bridgeObjectRetain_n();
          sub_1BC62D3B8();
          swift_bridgeObjectRelease();
          sub_1BC62D67C();
          swift_bridgeObjectRetain();
          v17 = sub_1BC62D3B8();
          result = swift_bridgeObjectRelease();
          if (!v17)
            goto LABEL_17;
        }
        else
        {
          swift_bridgeObjectRetain();
          result = sub_1BC62D67C();
          v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v17)
            goto LABEL_17;
        }
        if (v17 < 1)
        {
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if ((v12 & 0xC000000000000001) != 0)
        {
          for (i = 0; i != v17; ++i)
          {
            MEMORY[0x1BCCF24CC](i, v12);
            sub_1BC62CEC0();
            swift_unknownObjectRelease();
          }
        }
        else
        {
          v19 = 0;
          do
          {
            v20 = *(void **)(v12 + 8 * v19++ + 32);
            v21 = v20;
            sub_1BC62CEC0();

          }
          while (v17 != v19);
        }
LABEL_17:
        swift_bridgeObjectRelease();
        if (v14 >> 62)
        {
          swift_bridgeObjectRetain_n();
          sub_1BC62D3B8();
          swift_bridgeObjectRelease();
          sub_1BC62D67C();
          swift_bridgeObjectRetain();
          v22 = sub_1BC62D3B8();
          result = swift_bridgeObjectRelease();
          if (!v22)
            goto LABEL_26;
        }
        else
        {
          swift_bridgeObjectRetain();
          result = sub_1BC62D67C();
          v22 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v22)
            goto LABEL_26;
        }
        if (v22 < 1)
          goto LABEL_43;
        if ((v14 & 0xC000000000000001) != 0)
        {
          for (j = 0; j != v22; ++j)
          {
            MEMORY[0x1BCCF24CC](j, v14);
            sub_1BC62CEC0();
            swift_unknownObjectRelease();
          }
        }
        else
        {
          v24 = 0;
          do
          {
            v25 = *(void **)(v14 + 8 * v24++ + 32);
            v26 = v25;
            sub_1BC62CEC0();

          }
          while (v22 != v24);
        }
LABEL_26:
        swift_bridgeObjectRelease();
        v27 = v15;
        sub_1BC62CEC0();

        v28 = sub_1BC62D6AC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v29 = v28 & v38;
        v2 = v42;
        v4 = v39;
        if (v42 >= (uint64_t)v37)
        {
          v3 = v40;
          v30 = v41;
          if (v29 < v37)
            goto LABEL_5;
        }
        else
        {
          v3 = v40;
          v30 = v41;
          if (v29 >= v37)
            goto LABEL_31;
        }
        if (v42 >= (uint64_t)v29)
        {
LABEL_31:
          v31 = *(_QWORD *)(v3 + 48);
          v32 = (char *)(v31 + 72 * v42);
          v33 = (char *)(v31 + 72 * v30);
          if (v42 != v30 || (v2 = v30, v32 >= v33 + 72))
          {
            memmove(v32, v33, 0x48uLL);
            v2 = v30;
          }
        }
LABEL_5:
        v6 = (v30 + 1) & v38;
      }
      while (((*(_QWORD *)(v39 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v34 = *(_QWORD *)(v3 + 16);
  v35 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (v35)
    goto LABEL_44;
  *(_QWORD *)(v3 + 16) = v36;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1BC3FC408(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1BC62D0AC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_1BC62CEA8();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1BC3FC5A8(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = sub_1BC62B8C4();
  v28 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_1BC62D0AC();
    v27 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v28 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      do
      {
        v15 = v14 * v10;
        v26(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_1BC347F0C(&qword_1EF42C7A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF08]);
        v16 = sub_1BC62C5C0();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        v20 = v14 * a1;
        if (v14 * a1 < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(v7 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v27 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v27 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
  return result;
}

unint64_t sub_1BC3FC824(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t j;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_6:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1BC3CCEAC(0, (unint64_t *)&qword_1EF42C9A8, (void (*)(void))sub_1BC35E728);
  result = sub_1BC62D1B4();
  v9 = result;
  v37 = a1;
  v38 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v40 = result;
  v41 = result + 56;
  v39 = v4;
  while (1)
  {
    if (v10)
    {
      v42 = (v10 - 1) & v10;
      v43 = v11;
      v12 = __clz(__rbit64(v10)) | (v11 << 6);
      goto LABEL_26;
    }
    v13 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_57;
    if (v13 >= v38)
      goto LABEL_6;
    v14 = v37[v13];
    v15 = v11 + 1;
    if (!v14)
    {
      v15 = v11 + 2;
      if (v11 + 2 >= v38)
        goto LABEL_6;
      v14 = v37[v15];
      if (!v14)
      {
        v15 = v11 + 3;
        if (v11 + 3 >= v38)
          goto LABEL_6;
        v14 = v37[v15];
        if (!v14)
          break;
      }
    }
LABEL_25:
    v42 = (v14 - 1) & v14;
    v43 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_26:
    v17 = *(_QWORD *)(v4 + 48) + 72 * v12;
    v18 = *(_BYTE *)v17;
    v19 = *(void **)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v46 = *(_QWORD *)(v17 + 32);
    v47 = *(_OWORD *)(v17 + 56);
    v48 = *(_OWORD *)(v17 + 40);
    sub_1BC62D670();
    sub_1BC62D67C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44 = *((id *)&v47 + 1);
    v22 = v19;
    sub_1BC62CEC0();

    if (v21)
    {
      sub_1BC62D688();
      swift_bridgeObjectRetain();
      v23 = v20;
      sub_1BC62C740();
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = v20;
      sub_1BC62D688();
    }
    v45 = v18;
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v48 + 1) >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      sub_1BC62D67C();
      swift_bridgeObjectRetain();
      v24 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (!v24)
        goto LABEL_38;
    }
    else
    {
      swift_bridgeObjectRetain();
      result = sub_1BC62D67C();
      v24 = *(_QWORD *)((*((_QWORD *)&v48 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v24)
        goto LABEL_38;
    }
    if (v24 < 1)
      goto LABEL_55;
    if ((*((_QWORD *)&v48 + 1) & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v24; ++i)
      {
        MEMORY[0x1BCCF24CC](i, *((_QWORD *)&v48 + 1));
        sub_1BC62CEC0();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v26 = 0;
      do
      {
        v27 = *(void **)(*((_QWORD *)&v48 + 1) + 8 * v26++ + 32);
        v28 = v27;
        sub_1BC62CEC0();

      }
      while (v24 != v26);
    }
LABEL_38:
    swift_bridgeObjectRelease();
    if ((unint64_t)v47 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      sub_1BC62D67C();
      swift_bridgeObjectRetain();
      v29 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (!v29)
        goto LABEL_47;
    }
    else
    {
      swift_bridgeObjectRetain();
      result = sub_1BC62D67C();
      v29 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v29)
        goto LABEL_47;
    }
    if (v29 < 1)
      goto LABEL_56;
    if ((v47 & 0xC000000000000001) != 0)
    {
      for (j = 0; j != v29; ++j)
      {
        MEMORY[0x1BCCF24CC](j, v47);
        sub_1BC62CEC0();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v31 = 0;
      do
      {
        v32 = *(void **)(v47 + 8 * v31++ + 32);
        v33 = v32;
        sub_1BC62CEC0();

      }
      while (v29 != v31);
    }
LABEL_47:
    swift_bridgeObjectRelease();
    v34 = v44;
    sub_1BC62CEC0();

    sub_1BC62D6AC();
    v9 = v40;
    result = sub_1BC62D0C4();
    *(_QWORD *)(v41 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v35 = *(_QWORD *)(v40 + 48) + 72 * result;
    *(_BYTE *)v35 = v45;
    *(_QWORD *)(v35 + 8) = v22;
    *(_QWORD *)(v35 + 16) = v23;
    *(_QWORD *)(v35 + 24) = v21;
    *(_QWORD *)(v35 + 32) = v46;
    *(_OWORD *)(v35 + 40) = v48;
    *(_OWORD *)(v35 + 56) = v47;
    ++*(_QWORD *)(v40 + 16);
    if (__OFSUB__(v5--, 1))
    {
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    v4 = v39;
    v10 = v42;
    v11 = v43;
    if (!v5)
      goto LABEL_6;
  }
  v16 = v11 + 4;
  if (v11 + 4 >= v38)
    goto LABEL_6;
  v14 = v37[v16];
  if (v14)
  {
    v15 = v11 + 4;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v38)
      goto LABEL_6;
    v14 = v37[v15];
    ++v16;
    if (v14)
      goto LABEL_25;
  }
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_1BC3FCD80(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1BC3FEA24(0, (unint64_t *)&qword_1ED6A3F60, &qword_1ED6A58D8, 0x1E0CB6B00, (unint64_t *)&qword_1ED6A58E0);
  result = sub_1BC62D1B4();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_1BC62CEA8();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1BC3FCFF8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_1BC62B8C4();
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  sub_1BC3CD7E4(0, &qword_1EF42C7A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], &qword_1EF42C7A8, MEMORY[0x1E0D2BF08]);
  result = sub_1BC62D1B4();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_37;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_37;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_37;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_37;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_1BC347F0C(&qword_1EF42C7A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF08]);
    result = sub_1BC62C5C0();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v17 = v38;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      v17 = v38;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BC3FD314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BC357158(0, &qword_1EF42DB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - v4;
  v6 = sub_1BC62B8C4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v25 - v12;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v14 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v18)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v18)
        return swift_release();
      v23 = *(_QWORD *)(v26 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v18)
          return swift_release();
        v23 = *(_QWORD *)(v26 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v18)
            return swift_release();
          v23 = *(_QWORD *)(v26 + 8 * v19);
          if (!v23)
            break;
        }
      }
    }
LABEL_23:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v13, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v21, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v13, v6);
    sub_1BC3FAAC8((uint64_t)v10, (uint64_t)v5);
    sub_1BC377E3C((uint64_t)v5, &qword_1EF42DB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8]);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  v24 = v22 + 4;
  if (v24 >= v18)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v18)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BC3FD590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  void *v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  sub_1BC357158(0, &qword_1EF42DB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - v5;
  v7 = sub_1BC62B8C4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v49 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v56 = a1;
  v57 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v58 = v15;
  v59 = 0;
  v60 = v17 & v14;
  v54 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v50 = v6;
  v53 = a2;
  v51 = v20;
  v52 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = (v20 - 1) & v20;
  v25 = __clz(__rbit64(v20)) | (v23 << 6);
  v26 = v23;
  v27 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
  v28 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v7);
    v56 = v22;
    v57 = v27;
    v58 = v21;
    v59 = v26;
    v60 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1BC3DDB68();
      sub_1BC377E3C((uint64_t)v6, &qword_1EF42DB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8]);
      return v53;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v6, v7);
    v32 = v53;
    sub_1BC347F0C(&qword_1EF42C7A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF08]);
    v33 = sub_1BC62C5C0();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v41(v55, v7);
    v23 = v59;
    v20 = v60;
    v22 = v56;
    v19 = v57;
    v21 = v58;
    v6 = v50;
    v51 = v60;
    v52 = v59;
    if (v60)
      goto LABEL_6;
LABEL_8:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
      goto LABEL_26;
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_11;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_14;
    if (v26 + 2 >= v29)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      v26 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
      if (v30)
      {
        v26 += 2;
        goto LABEL_11;
      }
      v23 = v26 + 3;
      if (v26 + 3 >= v29)
      {
        v24 = 0;
        v28 = 1;
        v26 += 2;
      }
      else
      {
        v30 = *(_QWORD *)(v19 + 8 * v23);
        if (v30)
        {
LABEL_14:
          v26 = v23;
LABEL_11:
          v24 = (v30 - 1) & v30;
          v25 = __clz(__rbit64(v30)) + (v26 << 6);
          goto LABEL_7;
        }
        v26 += 4;
        if (v26 >= v29)
          goto LABEL_26;
        v30 = *(_QWORD *)(v19 + 8 * v26);
        if (v30)
          goto LABEL_11;
        v26 = v29 - 1;
        v31 = v52 + 6;
        while (v29 != v31)
        {
          v30 = *(_QWORD *)(v19 + 8 * v31++);
          if (v30)
          {
            v26 = v31 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v24 = 0;
        v28 = 1;
      }
    }
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v11, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
    v40 = sub_1BC62C644();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v11, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v55, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v45);
    v46 = sub_1BC3FDB64((unint64_t *)((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v56);
    swift_release();
    sub_1BC3DDB68();
  }
  else
  {
    v48 = (void *)swift_slowAlloc();
    memcpy(v48, v54, v45);
    v46 = sub_1BC3FDB64((unint64_t *)v48, v44, v36, v35, &v56);
    swift_release();
    sub_1BC3DDB68();
    MEMORY[0x1BCCF36A8](v48, -1, -1);
  }
  return v46;
}

uint64_t sub_1BC3FDB64(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;

  v49 = a2;
  sub_1BC357158(0, &qword_1EF42DB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - v10;
  v12 = sub_1BC62B8C4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v14);
  v57 = (char *)&v48 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v51 = a1;
  v52 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v55 = a3 + 56;
  v56 = a3;
  v53 = a5;
  while (2)
  {
    v50 = v22;
    do
    {
      while (1)
      {
        v25 = *a5;
        v24 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v54 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v25 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v24 + 8 * v40);
        if (v42)
          goto LABEL_17;
        v45 = v26 + 2;
        if (v26 + 2 >= v41)
          goto LABEL_35;
        v42 = *(_QWORD *)(v24 + 8 * v45);
        if (v42)
          goto LABEL_23;
        if (v26 + 3 >= v41)
          goto LABEL_36;
        v42 = *(_QWORD *)(v24 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v45 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v24 + 8 * v45);
          if (v42)
          {
LABEL_23:
            v40 = v45;
LABEL_17:
            v29 = (v42 - 1) & v42;
            v30 = __clz(__rbit64(v42)) + (v40 << 6);
            v26 = v40;
            goto LABEL_7;
          }
          v40 = v26 + 5;
          if (v26 + 5 < v41)
          {
            v42 = *(_QWORD *)(v24 + 8 * v40);
            if (v42)
              goto LABEL_17;
            v40 = v41 - 1;
            v46 = v26 + 6;
            while (v41 != v46)
            {
              v42 = *(_QWORD *)(v24 + 8 * v46++);
              if (v42)
              {
                v40 = v46 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            v29 = 0;
            v31 = 1;
            v26 = v40;
            goto LABEL_8;
          }
LABEL_36:
          v29 = 0;
          v31 = 1;
          v26 = v45;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v25;
        a5[1] = v24;
        a5[2] = v54;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_1BC377E3C((uint64_t)v11, &qword_1EF42DB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8]);
          v47 = v56;
          swift_retain();
          return sub_1BC3FCFF8(v51, v49, v50, v47);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v57, v11, v12);
        v32 = v56;
        sub_1BC347F0C(&qword_1EF42C7A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF08]);
        v33 = sub_1BC62C5C0();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = v23(v57, v12);
        v11 = v52;
        a5 = v53;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v16, *(_QWORD *)(v56 + 48) + v37 * v35, v12);
        sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
        v39 = sub_1BC62C644();
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      result = v23(v57, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v52;
      v44 = *(unint64_t *)((char *)v51 + v43);
      *(unint64_t *)((char *)v51 + v43) = v44 & ~(1 << v35);
      a5 = v53;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v50 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

void sub_1BC3FDFD4(uint64_t a1)
{
  uint64_t v1;

  sub_1BC3F97A8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BC3FDFDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42DB98)
  {
    sub_1BC35817C(255, (unint64_t *)&qword_1ED6A59C0);
    v0 = sub_1BC62C92C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42DB98);
  }
}

uint64_t sub_1BC3FE058(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_1BC3FDFDC();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_1BC3F9918(a1, a2, v2 + ((v6 + 16) & ~v6));
}

uint64_t sub_1BC3FE0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v18 = a2;
  v5 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD79C(0, v9, 0);
    v10 = v19;
    v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v12 = a1 + v11;
    v13 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_1BC3F6D40(v12, v18, (uint64_t)v8);
      if (v3)
        break;
      v3 = 0;
      v19 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BC3BD79C(v14 > 1, v15 + 1, 1);
        v10 = v19;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      sub_1BC375724((uint64_t)v8, v10 + v11 + v15 * v13, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      v12 += v13;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

void sub_1BC3FE208(uint64_t a1)
{
  uint64_t v1;

  sub_1BC3F91DC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_1E74D83F0, (uint64_t)sub_1BC3FE248, (uint64_t)&block_descriptor_28, (SEL *)&selRef_addSharingAuthorizations_completion_);
}

void sub_1BC3FE24C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429780)
  {
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429780);
  }
}

void sub_1BC3FE2B4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42B220)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, &qword_1EF42B220);
  }
}

void sub_1BC3FE31C(uint64_t a1)
{
  uint64_t v1;

  sub_1BC3F91DC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_1E74D8440, (uint64_t)sub_1BC3FE248, (uint64_t)&block_descriptor_36, (SEL *)&selRef_removeSharingAuthorizations_completion_);
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC3FDFDC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BC3FE3C8(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_1BC3FDFDC();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_1BC3F936C(a1, a2, v2 + ((v6 + 16) & ~v6));
}

uint64_t sub_1BC3FE42C()
{
  return objectdestroy_5Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_5Tm_0(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject();
}

uint64_t sub_1BC3FE48C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC377F18;
  return sub_1BC3F7EA4(a1, v4, v5, v7, v6);
}

uint64_t sub_1BC3FE504()
{
  return sub_1BC3F5CB8();
}

_QWORD *sub_1BC3FE514(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(sub_1BC62B288() - 8);
  v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v7 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v9 = a2(v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1BC3B60E0(0, v8[2] + 1, 1, v8);
    v11 = v8[2];
    v10 = v8[3];
    if (v11 >= v10 >> 1)
      v8 = sub_1BC3B60E0((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
    v8[2] = v11 + 1;
    v8[v11 + 4] = v9;
    v6 += v7;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BC3FE640(uint64_t a1)
{
  uint64_t v1;

  sub_1BC3FE658(a1, *(unint64_t **)(v1 + 16), *(uint64_t **)(v1 + 24));
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BC3FE658(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  char *v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  _BYTE v43[24];
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[40];

  v41 = a2;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v38 - v5;
  v7 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v42 = (uint64_t)v38 - v12;
  v13 = sub_1BC62B264();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v38[1] = v13;
    v39 = v6;
    v15 = v13 + 32;
    v40 = v7;
    do
    {
      sub_1BC34E674(v15, (uint64_t)v46);
      sub_1BC34E674((uint64_t)v46, (uint64_t)v43);
      sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
      v16 = swift_dynamicCast();
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      if ((v16 & 1) != 0)
      {
        v17(v6, 0, 1, v7);
        v18 = v42;
        sub_1BC375724((uint64_t)v6, v42, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC35EBE0(v18, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        v19 = v41;
        v20 = *v41;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v19 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v20 = sub_1BC3B5190(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
          *v41 = v20;
        }
        v23 = *(_QWORD *)(v20 + 16);
        v22 = *(_QWORD *)(v20 + 24);
        if (v23 >= v22 >> 1)
        {
          v20 = sub_1BC3B5190(v22 > 1, v23 + 1, 1, v20);
          *v41 = v20;
        }
        *(_QWORD *)(v20 + 16) = v23 + 1;
        sub_1BC375724((uint64_t)v11, v20+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v23, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC3AFE68(v42);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
      }
      else
      {
        v17(v6, 1, 1, v7);
        sub_1BC377E3C((uint64_t)v6, (unint64_t *)&qword_1EF42C0B8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC34E674((uint64_t)v46, (uint64_t)v43);
        v24 = (_QWORD *)*a3;
        v25 = swift_isUniquelyReferenced_nonNull_native();
        *a3 = (uint64_t)v24;
        if ((v25 & 1) == 0)
        {
          v24 = sub_1BC3B5CEC(0, v24[2] + 1, 1, v24);
          *a3 = (uint64_t)v24;
        }
        v26 = v8;
        v28 = v24[2];
        v27 = v24[3];
        if (v28 >= v27 >> 1)
          *a3 = (uint64_t)sub_1BC3B5CEC((_QWORD *)(v27 > 1), v28 + 1, 1, v24);
        v30 = v44;
        v29 = v45;
        v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
        MEMORY[0x1E0C80A78](v31);
        v33 = a3;
        v34 = (char *)v38 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v35 + 16))(v34);
        v36 = (uint64_t)v34;
        a3 = v33;
        sub_1BC5EE8E8(v28, v36, v33, v30, v29);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
        v8 = v26;
        v6 = v39;
        v7 = v40;
      }
      v15 += 40;
      --v14;
    }
    while (v14);
  }
  swift_bridgeObjectRelease();
  return *v41;
}

uint64_t sub_1BC3FE9FC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BC3FEA24(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    sub_1BC34B6A0(255, a3);
    sub_1BC35E2D8(a5, a3);
    v8 = sub_1BC62D1C0();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t static Deferred.createAutoreleasingDeferredPublisher(createPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a1;
  v8[5] = a2;
  swift_retain();
  return sub_1BC62BF78();
}

uint64_t sub_1BC3FEB50()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC3FEB74()
{
  uint64_t v0;
  void (*v1)(void);
  void *v2;

  v1 = *(void (**)(void))(v0 + 32);
  v2 = (void *)MEMORY[0x1BCCF2DD8]();
  v1();
  objc_autoreleasePoolPop(v2);
}

uint64_t type metadata accessor for RecordSourceDataSource()
{
  uint64_t result;

  result = qword_1EF42DBF8;
  if (!qword_1EF42DBF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC3FEBEC()
{
  return swift_initClassMetadata2();
}

void sub_1BC3FEC48(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  __int128 v24;

  v2 = v1;
  v4 = sub_1BC62C4D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v7 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v9 = qword_1EF42DBE0;
  v10 = *(void **)(v2 + qword_1EF42DBE0);
  if (!v10)
  {
    if (!a1)
      return;
    goto LABEL_8;
  }
  if (!a1)
  {
LABEL_6:
    v14 = *(_QWORD *)(v2 + qword_1EF42DBD0);
    v15 = *(void **)(v2 + qword_1EF42DBE8);
    v16 = type metadata accessor for RecordSourceItem();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v14;
    v17[3] = v10;
    v17[4] = 0;
    v17[5] = v15;
    v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC62B288();
    v19 = swift_allocObject();
    v24 = xmmword_1BC639590;
    *(_OWORD *)(v19 + 16) = xmmword_1BC639590;
    sub_1BC357158(0, &qword_1EF42C5F0, (uint64_t (*)(uint64_t))sub_1BC37AE0C, v18);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = v24;
    *(_QWORD *)(v20 + 56) = v16;
    *(_QWORD *)(v20 + 64) = sub_1BC379B20((unint64_t *)&unk_1EF42DDC0, v21, (uint64_t (*)(uint64_t))type metadata accessor for RecordSourceItem, (uint64_t)&unk_1BC63D454);
    *(_QWORD *)(v20 + 32) = v17;
    swift_retain();
    v22 = v10;
    swift_unknownObjectRetain();
    v23 = v15;
    sub_1BC62B258();
    sub_1BC62B2D0();

    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  sub_1BC34B6A0(0, &qword_1EF42DDA8);
  v11 = a1;
  v12 = v10;
  v13 = sub_1BC62CEB4();

  if ((v13 & 1) == 0)
  {
    v10 = *(void **)(v2 + v9);
    if (v10)
      goto LABEL_6;
LABEL_8:
    sub_1BC62B2D0();
  }
}

uint64_t sub_1BC3FEEFC(void *a1, void *a2)
{
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD v12[6];

  *(_QWORD *)(v2 + qword_1EF42DBD0) = 0;
  *(_QWORD *)(v2 + qword_1EF42DBE0) = 0;
  *(_QWORD *)(v2 + qword_1EF42DBF0) = 0;
  *(_QWORD *)(v2 + qword_1EF42DBD8) = a1;
  *(_QWORD *)(v2 + qword_1EF42DBE8) = a2;
  v4 = a1;
  v5 = a2;
  v6 = sub_1BC62B678();
  v7 = *(void **)(v6 + qword_1EF42DBE8);
  v8 = *(void **)(v6 + qword_1EF42DBD8);
  v12[4] = sub_1BC400060;
  v12[5] = v6;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BC3FF57C;
  v12[3] = &block_descriptor_21;
  v9 = _Block_copy(v12);
  swift_retain_n();
  v10 = v8;
  swift_release();
  objc_msgSend(v7, sel_fetchAccountOwnerForSource_completion_, v10, v9);
  _Block_release(v9);
  swift_release();

  return v6;
}

uint64_t sub_1BC3FF050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_1BC62C4D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(v0 + qword_1EF42DBD0);
  v7 = *(void **)(v1 + qword_1EF42DBF0);
  v8 = *(void **)(v1 + qword_1EF42DBE8);
  v9 = type metadata accessor for RecordSourceItem();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v6;
  v10[3] = 0;
  v10[4] = v7;
  v10[5] = v8;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  swift_unknownObjectRetain();
  v11 = v7;
  v12 = v8;
  *v5 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  LOBYTE(v6) = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    sub_1BC357158(0, &qword_1EF42C5F0, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v14 + 56) = v9;
    *(_QWORD *)(v14 + 64) = sub_1BC379B20((unint64_t *)&unk_1EF42DDC0, v15, (uint64_t (*)(uint64_t))type metadata accessor for RecordSourceItem, (uint64_t)&unk_1BC63D454);
    *(_QWORD *)(v14 + 32) = v10;
    swift_retain();
    sub_1BC62B2E8();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC3FF214(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v4 = sub_1BC62C47C();
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62C4AC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v11 = (void *)sub_1BC62CC74();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_1BC4000AC;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_3_2;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC379B20((unint64_t *)&qword_1ED6A5870, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1BC3FF434(uint64_t a1, unint64_t a2)
{
  char *v4;
  char *v5;
  char *v6;
  void *v7;
  char *v8;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = (char *)sub_1BC62D3B8();
    if (!v4)
      goto LABEL_9;
  }
  else
  {
    v4 = *(char **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      v7 = *(void **)(a1 + qword_1EF42DBE0);
      *(_QWORD *)(a1 + qword_1EF42DBE0) = v4;
      v8 = v4;
      sub_1BC3FEC48(v7);

      return;
    }
  }
  v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    v6 = (char *)MEMORY[0x1BCCF24CC](v5, a2);
    goto LABEL_8;
  }
  if (((unint64_t)v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v5 < *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = (char *)*(id *)(a2 + 8 * (_QWORD)v5 + 32);
LABEL_8:
    v4 = v6;
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1BC3FF524()
{
  sub_1BC3FF554();
}

void sub_1BC3FF53C()
{
  sub_1BC3FF554();
}

void sub_1BC3FF554()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC3FF57C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1BC34B6A0(0, &qword_1EF42DDA8);
  v2 = sub_1BC62C878();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1BC3FF5E8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

}

uint64_t sub_1BC3FF644()
{
  uint64_t v0;

  v0 = sub_1BC62B69C();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC3FF6C0()
{
  return type metadata accessor for RecordSourceDataSource();
}

uint64_t sub_1BC3FF6C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;

  v2 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v2);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v3 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62BD38();
  v4 = sub_1BC62AD3C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v6 = sub_1BC62AD24();
  a1[3] = v4;
  result = sub_1BC379B20((unint64_t *)&qword_1ED6A4108, 255, v5, MEMORY[0x1E0D2A8A0]);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t sub_1BC3FF850@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC3FF6C8(a1);
}

uint64_t sub_1BC3FF864()
{
  uint64_t v1;

  v1 = sub_1BC62D718();
  sub_1BC62C764();
  sub_1BC357158(0, &qword_1EF42DDD0, (uint64_t (*)(uint64_t))sub_1BC4000B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_unknownObjectRetain();
  sub_1BC62C6E0();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BC3FF900()
{
  id *v0;

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RecordSourceItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC3FF95C()
{
  uint64_t v0;

  type metadata accessor for RecordSourceCell();
  sub_1BC379B20(&qword_1EF42DDA0, v0, (uint64_t (*)(uint64_t))type metadata accessor for RecordSourceCell, (uint64_t)&unk_1BC63D3F4);
  return sub_1BC62ADA8();
}

uint64_t sub_1BC3FF9A4()
{
  return sub_1BC3FF864();
}

id sub_1BC3FF9C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell____lazy_storage___brandView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell____lazy_storage___brandView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell____lazy_storage___brandView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordBrandView), sel_initWithFrame_, *MEMORY[0x1E0C9D628], *(double *)(MEMORY[0x1E0C9D628] + 8), *(double *)(MEMORY[0x1E0C9D628] + 16), *(double *)(MEMORY[0x1E0C9D628] + 24));
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC3FFA78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  _QWORD *v15;
  _BYTE v16[24];
  uint64_t v17;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v1, (uint64_t)v16);
  if (v17)
  {
    sub_1BC37AE0C();
    type metadata accessor for RecordSourceItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = (void *)v15[3];
      if (v2)
      {
        v3 = (void *)v15[5];
        v4 = v2;
        v5 = objc_msgSend(v3, sel_nameAndFormattedBirthDateForAccountOwner_, v4);
        v6 = sub_1BC3FF9C4();
        v7 = objc_msgSend(v6, sel_brandDetailLabel);

        objc_msgSend(v7, sel_setText_, v5);
      }
      v8 = (void *)v15[4];
      if (v8)
      {
        v9 = (void *)v15[5];
        v10 = v8;
        v11 = objc_msgSend(v9, sel_nameAndFormattedBirthDateForSignedClinicalDataSubject_, v10);
        v12 = sub_1BC3FF9C4();
        v13 = objc_msgSend(v12, sel_brandDetailLabel);

        objc_msgSend(v13, sel_setText_, v11);
      }
      v14 = sub_1BC3FF9C4();
      objc_msgSend(v14, sel_setBrandable_dataProvider_, v15[2], v15[5]);
      swift_release();

    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v16);
  }
}

id sub_1BC3FFC30(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  objc_super v21;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell____lazy_storage___brandView] = 0;
  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell_item];
  v10 = (objc_class *)type metadata accessor for RecordSourceCell();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v21.receiver = v4;
  v21.super_class = v10;
  v11 = objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  v12 = objc_msgSend(v11, sel_contentView);
  v13 = sub_1BC3FF9C4();
  objc_msgSend(v12, sel_addSubview_, v13);

  v14 = sub_1BC3FF9C4();
  v15 = objc_msgSend(v11, sel_contentView);
  objc_msgSend(v14, sel_hk_alignConstraintsWithView_insets_, v15, 16.0, 16.0, 16.0, 16.0);

  sub_1BC359F44();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v16 + 32) = sub_1BC62C680();
  *(_QWORD *)(v16 + 40) = v17;
  *(_QWORD *)(v16 + 48) = 0xD000000000000010;
  *(_QWORD *)(v16 + 56) = 0x80000001BC63D3C0;
  v18 = (void *)sub_1BC62C86C();
  v19 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v11, sel_setAccessibilityIdentifier_, v19);
  swift_bridgeObjectRelease();

  return v11;
}

id sub_1BC3FFEA4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordSourceCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RecordSourceCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC3FFF2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC3FFF7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC3FFA78();
  return sub_1BC37AE60(a1);
}

void (*sub_1BC3FFFE8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC400030;
}

void sub_1BC400030(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC3FFA78();
}

uint64_t sub_1BC400060(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC3FF214(a1, v1);
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t sub_1BC400080()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC4000AC()
{
  uint64_t v0;

  sub_1BC3FF434(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1BC4000B4()
{
  unint64_t result;

  result = qword_1EF42DDD8;
  if (!qword_1EF42DDD8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42DDD8);
  }
  return result;
}

id sub_1BC400110()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___HRExpandedRangeValueView____lazy_storage___valueLabel;
  v2 = *(void **)(v0 + OBJC_IVAR___HRExpandedRangeValueView____lazy_storage___valueLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRExpandedRangeValueView____lazy_storage___valueLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setNumberOfLines_, 3);
    objc_msgSend(v4, sel_setLineBreakMode_, 4);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC4001BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;

  v3 = *a1 + OBJC_IVAR___HRExpandedRangeValueView_viewData;
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(void **)(v3 + 32);
  v9 = *(void **)(v3 + 40);
  v10 = *(void **)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_QWORD *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  v15 = *(_QWORD *)(v3 + 88);
  v16 = *(_BYTE *)(v3 + 100);
  v17 = *(_DWORD *)(v3 + 96);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v11;
  *(_QWORD *)(a2 + 64) = v12;
  *(_QWORD *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = v14;
  *(_QWORD *)(a2 + 88) = v15;
  *(_BYTE *)(a2 + 100) = v16;
  *(_DWORD *)(a2 + 96) = v17;
  return sub_1BC3EE064(v4, v5, v6, v7, v8, v9, v10);
}

void sub_1BC400258(uint64_t a1, _QWORD *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 16);
  v2 = *(void **)(a1 + 48);
  v11 = *(void **)(a1 + 40);
  v12 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_BYTE *)(a1 + 100);
  v8 = *(_DWORD *)(a1 + 96);
  v9 = *a2 + OBJC_IVAR___HRExpandedRangeValueView_viewData;
  v10 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  v22 = *(_QWORD *)(v9 + 8);
  v23 = *(_QWORD *)v9;
  v20 = *(_QWORD *)(v9 + 24);
  v21 = *(_QWORD *)(v9 + 16);
  v18 = *(void **)(v9 + 40);
  v19 = *(void **)(v9 + 32);
  v17 = *(void **)(v9 + 48);
  *(_QWORD *)v9 = v16;
  *(_QWORD *)(v9 + 8) = v15;
  *(_QWORD *)(v9 + 16) = v14;
  *(_QWORD *)(v9 + 24) = v13;
  *(_QWORD *)(v9 + 32) = v12;
  *(_QWORD *)(v9 + 40) = v11;
  *(_QWORD *)(v9 + 48) = v2;
  *(_QWORD *)(v9 + 56) = v4;
  *(_QWORD *)(v9 + 64) = v3;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v6;
  *(_QWORD *)(v9 + 88) = v10;
  *(_DWORD *)(v9 + 96) = v8;
  *(_BYTE *)(v9 + 100) = v7;
  sub_1BC3EE064(v16, v15, v14, v13, v12, v11, v2);
  sub_1BC3EDFF4(v23, v22, v21, v20, v19, v18, v17);
  sub_1BC400E3C();
}

uint64_t sub_1BC4003D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;

  v3 = v1 + OBJC_IVAR___HRExpandedRangeValueView_viewData;
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(void **)(v3 + 32);
  v9 = *(void **)(v3 + 40);
  v10 = *(void **)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_QWORD *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  v15 = *(_QWORD *)(v3 + 88);
  v16 = *(_BYTE *)(v3 + 100);
  v17 = *(_DWORD *)(v3 + 96);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_BYTE *)(a1 + 100) = v16;
  *(_DWORD *)(a1 + 96) = v17;
  return sub_1BC3EE064(v4, v5, v6, v7, v8, v9, v10);
}

void sub_1BC400468(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[4];
  v19 = *(_OWORD *)(a1 + 5);
  v20 = *((_OWORD *)a1 + 1);
  v5 = a1[7];
  v18 = *((_OWORD *)a1 + 4);
  v6 = a1[10];
  v7 = a1[11];
  v8 = *((_BYTE *)a1 + 100);
  v9 = *((_DWORD *)a1 + 24);
  v10 = v1 + OBJC_IVAR___HRExpandedRangeValueView_viewData;
  swift_beginAccess();
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = *(_QWORD *)(v10 + 24);
  v15 = *(void **)(v10 + 32);
  v16 = *(void **)(v10 + 40);
  v17 = *(void **)(v10 + 48);
  *(_QWORD *)v10 = v2;
  *(_QWORD *)(v10 + 8) = v3;
  *(_OWORD *)(v10 + 16) = v20;
  *(_QWORD *)(v10 + 32) = v4;
  *(_OWORD *)(v10 + 40) = v19;
  *(_QWORD *)(v10 + 56) = v5;
  *(_OWORD *)(v10 + 64) = v18;
  *(_QWORD *)(v10 + 80) = v6;
  *(_QWORD *)(v10 + 88) = v7;
  *(_DWORD *)(v10 + 96) = v9;
  *(_BYTE *)(v10 + 100) = v8;
  sub_1BC3EDFF4(v11, v12, v13, v14, v15, v16, v17);
  sub_1BC400E3C();
}

void (*sub_1BC400560(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC4005A8;
}

void sub_1BC4005A8(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC400E3C();
}

id ExpandedRangeValueView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void sub_1BC40064C(void *a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  if (a1)
  {
    v2 = a1;
    v3 = sub_1BC400110();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v4 = v2;
    v5 = (void *)sub_1BC62CDDC();
    v6 = (void *)sub_1BC62CDDC();
    v7 = sub_1BC34A5FC(v5, v6);

    objc_msgSend(v3, sel_setAttributedText_, v7);
    v8 = v4;
    sub_1BC52EBE8(a1);

  }
  sub_1BC400858();
}

void sub_1BC400858()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = OBJC_IVAR___HRExpandedRangeValueView_activeConstraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  v5 = *(void **)&v1[OBJC_IVAR___HRExpandedRangeValueView_referenceRangeView];
  LODWORD(v4) = objc_msgSend(v5, sel_isHidden);
  sub_1BC34D844();
  v6 = swift_allocObject();
  if ((_DWORD)v4)
  {
    *(_OWORD *)(v6 + 16) = xmmword_1BC63A3D0;
    v7 = sub_1BC400110();
    v8 = objc_msgSend(v7, sel_leadingAnchor);

    v9 = objc_msgSend(v1, sel_leadingAnchor);
    v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

    *(_QWORD *)(v6 + 32) = v10;
    v11 = sub_1BC400110();
    v12 = objc_msgSend(v11, sel_trailingAnchor);

    v13 = objc_msgSend(v1, sel_trailingAnchor);
    v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

    *(_QWORD *)(v6 + 40) = v14;
    v15 = sub_1BC400110();
    v16 = objc_msgSend(v15, sel_topAnchor);

    v17 = objc_msgSend(v1, sel_topAnchor);
    v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

    *(_QWORD *)(v6 + 48) = v18;
    v19 = sub_1BC400110();
    v20 = objc_msgSend(v19, sel_bottomAnchor);

    v21 = objc_msgSend(v1, sel_bottomAnchor);
    v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

    *(_QWORD *)(v6 + 56) = v22;
  }
  else
  {
    *(_OWORD *)(v6 + 16) = xmmword_1BC63B440;
    v23 = sub_1BC400110();
    v24 = objc_msgSend(v23, sel_leadingAnchor);

    v25 = objc_msgSend(v1, (SEL)&selRef_dateCache + 6);
    v48 = v2;
    v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

    *(_QWORD *)(v6 + 32) = v26;
    v27 = sub_1BC400110();
    v28 = objc_msgSend(v27, sel_trailingAnchor);

    v29 = objc_msgSend(v1, (SEL)&selRef_registerReuseIdentifiersWithTableView_);
    v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

    *(_QWORD *)(v6 + 40) = v30;
    v31 = sub_1BC400110();
    v32 = objc_msgSend(v31, sel_topAnchor);

    v33 = objc_msgSend(v1, sel_topAnchor);
    v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

    *(_QWORD *)(v6 + 48) = v34;
    v35 = sub_1BC400110();
    v36 = objc_msgSend(v35, sel_bottomAnchor);

    v37 = objc_msgSend(v5, sel_topAnchor);
    v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v37, -6.0);

    *(_QWORD *)(v6 + 56) = v38;
    v39 = objc_msgSend(v5, sel_leadingAnchor);
    v40 = objc_msgSend(v1, sel_leadingAnchor);
    v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

    *(_QWORD *)(v6 + 64) = v41;
    v42 = objc_msgSend(v5, sel_trailingAnchor);
    v43 = objc_msgSend(v1, sel_trailingAnchor);
    v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

    *(_QWORD *)(v6 + 72) = v44;
    v2 = v48;
    v45 = objc_msgSend(v5, sel_bottomAnchor);
    v46 = objc_msgSend(v1, sel_bottomAnchor);
    v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

    *(_QWORD *)(v6 + 80) = v47;
  }
  sub_1BC62C890();
  *(_QWORD *)&v1[v3] = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v49 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v49);

}

void sub_1BC400E3C()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  double Width;
  id v15;
  id v16;
  id v17;
  char *v18;
  char *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  CGRect v26;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_superview);
  if (v2)
  {
    v3 = v2;
    v4 = &v0[OBJC_IVAR___HRExpandedRangeValueView_viewData];
    swift_beginAccess();
    v5 = *((_QWORD *)v4 + 1);
    if (v5)
    {
      v6 = (void *)*((_QWORD *)v4 + 6);
      v7 = (void *)*((_QWORD *)v4 + 4);
      v8 = *((_QWORD *)v4 + 3);
      v25 = *((_QWORD *)v4 + 2);
      v24 = *(_QWORD *)v4;
      v9 = (void *)*((_QWORD *)v4 + 5);
      v10 = 3;
      if ((*((_DWORD *)v4 + 24) & 0x1000000) != 0)
        v10 = 0;
      v22 = v10;
      v23 = (void *)*((_QWORD *)v4 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = v7;
      v12 = v9;
      v13 = v6;
      swift_bridgeObjectRetain();
      objc_msgSend(v3, sel_bounds);
      Width = CGRectGetWidth(v26);
      sub_1BC52EBE8(v6);
      v15 = sub_1BC475C70(Width);
      v16 = sub_1BC400110();
      objc_msgSend(v16, sel_setAttributedText_, v15);

      v17 = sub_1BC400110();
      objc_msgSend(v17, sel_setNumberOfLines_, v22);

      sub_1BC400858();
      sub_1BC3EDFF4(v24, v5, v25, v8, v7, v23, v6);
    }
    else
    {
      v18 = *(char **)&v1[OBJC_IVAR___HRExpandedRangeValueView_referenceRangeView];
      objc_msgSend(v18, sel_setHidden_, 1);
      v18[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext] = 2;
      sub_1BC52D5CC();
      v18[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] = 3;
      sub_1BC52DB88();
      v19 = &v18[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier];
      *(_QWORD *)v19 = 0;
      v19[8] = 1;
      v20 = *(void **)&v18[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint];
      *(_QWORD *)&v18[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint] = 0;

      v21 = sub_1BC400110();
      objc_msgSend(v21, sel_setAttributedText_, 0);

      sub_1BC400858();
    }

  }
}

id ExpandedRangeValueView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpandedRangeValueView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *_s15HealthRecordsUI22ExpandedRangeValueViewC5frameACSo6CGRectV_tcfc_0()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  char *v4;
  char *v5;
  void *v6;
  id v7;
  objc_super v9;
  char v10;

  *(_QWORD *)&v0[OBJC_IVAR___HRExpandedRangeValueView____lazy_storage___valueLabel] = 0;
  v1 = OBJC_IVAR___HRExpandedRangeValueView_referenceRangeView;
  v10 = 2;
  v2 = objc_allocWithZone((Class)type metadata accessor for RecordRangeView());
  v3 = v0;
  *(_QWORD *)&v0[v1] = RecordRangeView.init(style:)(&v10);
  v4 = &v3[OBJC_IVAR___HRExpandedRangeValueView_viewData];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *((_OWORD *)v4 + 3) = 0u;
  *((_OWORD *)v4 + 4) = 0u;
  *((_OWORD *)v4 + 5) = 0u;
  *(_QWORD *)(v4 + 93) = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRExpandedRangeValueView_activeConstraints] = MEMORY[0x1E0DEE9D8];

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for ExpandedRangeValueView();
  v5 = (char *)objc_msgSendSuper2(&v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v6 = *(void **)&v5[OBJC_IVAR___HRExpandedRangeValueView_referenceRangeView];
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_addSubview_, v6);
  v7 = sub_1BC400110();
  objc_msgSend(v5, sel_addSubview_, v7);

  return v5;
}

uint64_t type metadata accessor for ExpandedRangeValueView()
{
  return objc_opt_self();
}

uint64_t method lookup function for ExpandedRangeValueView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExpandedRangeValueView.viewData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ExpandedRangeValueView.viewData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ExpandedRangeValueView.viewData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ExpandedRangeValueView.update(data:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

void sub_1BC401380()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  char v4;

  *(_QWORD *)&v0[OBJC_IVAR___HRExpandedRangeValueView____lazy_storage___valueLabel] = 0;
  v1 = OBJC_IVAR___HRExpandedRangeValueView_referenceRangeView;
  v4 = 2;
  v2 = objc_allocWithZone((Class)type metadata accessor for RecordRangeView());
  *(_QWORD *)&v0[v1] = RecordRangeView.init(style:)(&v4);
  v3 = &v0[OBJC_IVAR___HRExpandedRangeValueView_viewData];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *(_QWORD *)(v3 + 93) = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRExpandedRangeValueView_activeConstraints] = MEMORY[0x1E0DEE9D8];

  sub_1BC62D394();
  __break(1u);
}

uint64_t type metadata accessor for ClinicalSharingTurnOnAllDataTypesDataSource()
{
  uint64_t result;

  result = qword_1EF42DE50;
  if (!qword_1EF42DE50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC401490()
{
  return swift_initClassMetadata2();
}

void sub_1BC4014CC()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF42DE28 = v1;
  unk_1EF42DE30 = v3;
}

void sub_1BC401598()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF42DE38 = v1;
  unk_1EF42DE40 = v3;
}

void sub_1BC401664()
{
  qword_1EF42DE48 = 0x4024000000000000;
}

uint64_t sub_1BC401674()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v0 = sub_1BC62A7B4();
  v16 = *(_QWORD *)(v0 - 8);
  v17 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  v4 = swift_allocObject();
  v15 = xmmword_1BC639590;
  *(_OWORD *)(v4 + 16) = xmmword_1BC639590;
  sub_1BC357158(0, &qword_1EF42C5F0, (uint64_t (*)(uint64_t))sub_1BC37AE0C, v3);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = v15;
  if (qword_1EF428498 != -1)
    swift_once();
  v6 = qword_1EF42DE28;
  v7 = unk_1EF42DE30;
  v8 = qword_1EF4284A0;
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once();
  v10 = qword_1EF42DE38;
  v9 = unk_1EF42DE40;
  v11 = type metadata accessor for TurnOnAllDataTypesItem();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v6;
  v12[3] = v7;
  v12[4] = v10;
  v12[5] = v9;
  *(_QWORD *)(v5 + 56) = v11;
  *(_QWORD *)(v5 + 64) = sub_1BC379B20(&qword_1EF42DF90, v13, (uint64_t (*)(uint64_t))type metadata accessor for TurnOnAllDataTypesItem, (uint64_t)&unk_1BC63D6A0);
  *(_QWORD *)(v5 + 32) = v12;
  swift_bridgeObjectRetain();
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v17);
  sub_1BC62B270();
  return sub_1BC62B678();
}

uint64_t sub_1BC4018AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _QWORD);
  uint64_t v9;
  void (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t);
  _BYTE v15[32];

  v0 = sub_1BC62B3C0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v2);
  v6 = &v15[-v5];
  sub_1BC62B36C();
  if (qword_1EF4284A8 != -1)
    swift_once();
  v7 = qword_1EF42DE48;
  v8 = (void (*)(_BYTE *, _QWORD))sub_1BC62B384();
  *(_QWORD *)(v9 + 8) = v7;
  v8(v15, 0);
  v10 = (void (*)(_BYTE *, _QWORD))sub_1BC62B384();
  *(_QWORD *)(v11 + 24) = v7;
  v10(v15, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v4, v6, v0);
  v12 = sub_1BC62B3B4();
  v13 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v13(v4, v0);
  v13(v6, v0);
  return v12;
}

void sub_1BC4019F4()
{
  sub_1BC401A24();
}

void sub_1BC401A0C()
{
  sub_1BC401A24();
}

void sub_1BC401A24()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC401A4C()
{
  sub_1BC62B69C();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC401A68()
{
  return type metadata accessor for ClinicalSharingTurnOnAllDataTypesDataSource();
}

uint64_t sub_1BC401A70()
{
  uint64_t v0;

  type metadata accessor for TurnOnAllDataTypesCell();
  sub_1BC379B20(&qword_1EF429B00, v0, (uint64_t (*)(uint64_t))type metadata accessor for TurnOnAllDataTypesCell, (uint64_t)&unk_1BC63D640);
  sub_1BC62CB48();
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  sub_1BC379B20((unint64_t *)&qword_1EF4299A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell, (uint64_t)&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryCell);
  sub_1BC62CB48();
  sub_1BC62B408();
  sub_1BC62CB60();
  sub_1BC62AEEC();
  return sub_1BC62CB48();
}

uint64_t sub_1BC401B2C()
{
  uint64_t v1;

  v1 = sub_1BC62D718();
  sub_1BC62C764();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for TurnOnAllDataTypesItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC401BF4()
{
  uint64_t v0;

  type metadata accessor for TurnOnAllDataTypesCell();
  sub_1BC379B20(&qword_1EF429B00, v0, (uint64_t (*)(uint64_t))type metadata accessor for TurnOnAllDataTypesCell, (uint64_t)&unk_1BC63D640);
  return sub_1BC62ADA8();
}

uint64_t sub_1BC401C3C()
{
  return sub_1BC401B2C();
}

uint64_t sub_1BC401D9C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void (*v19)(uint64_t *, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];
  uint64_t v42;
  uint64_t v43;

  v1 = v0;
  sub_1BC357158(0, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v36 - v3;
  v5 = sub_1BC62BC78();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62BD98();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v13, (uint64_t)v41);
  if (!v42)
    return sub_1BC37AE60((uint64_t)v41);
  sub_1BC37AE0C();
  type metadata accessor for TurnOnAllDataTypesItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v36[0] = v9;
    v15 = v40;
    MEMORY[0x1BCCF201C]();
    v16 = (void *)objc_opt_self();
    v37 = v6;
    v17 = v16;
    v18 = objc_msgSend(v16, sel_systemBlueColor);
    v39 = v5;
    v19 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    v20 = v39;
    sub_1BC62BCCC();
    v19(v41, 0);
    v36[1] = v15;
    v21 = v36[0];
    swift_bridgeObjectRetain();
    sub_1BC62BD74();
    v42 = v21;
    v43 = MEMORY[0x1E0DC2398];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v41);
    v38 = v10;
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v12, v21);
    MEMORY[0x1BCCF1FC8](v41);
    sub_1BC62BC48();
    v23 = v17;
    v24 = v37;
    v25 = objc_msgSend(v23, sel_secondarySystemBackgroundColor);
    sub_1BC62BC3C();
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v4, v8, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v4, 0, 1, v20);
    MEMORY[0x1BCCF1FE0](v4);
    sub_1BC359F44();
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1BC6398E0;
    *(_QWORD *)(v26 + 32) = sub_1BC62C680();
    *(_QWORD *)(v26 + 40) = v27;
    strcpy((char *)(v26 + 48), "ChooseTopics");
    *(_BYTE *)(v26 + 61) = 0;
    *(_WORD *)(v26 + 62) = -5120;
    sub_1BC62BD68();
    v29 = v28;
    if (v28)
    {
      v30 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v31 = objc_msgSend(v30, sel_removeSpecialCharactersAndWhiteSpaces);

      v29 = sub_1BC62C680();
      v33 = v32;

      v20 = v39;
    }
    else
    {
      v33 = 0xE000000000000000;
    }
    *(_QWORD *)(v26 + 64) = v29;
    *(_QWORD *)(v26 + 72) = v33;
    v34 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v35 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v1, sel_setAccessibilityIdentifier_, v35);
    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v12, v21);
  }
  return result;
}

id sub_1BC402194()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TurnOnAllDataTypesCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TurnOnAllDataTypesCell()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of SelectAllItemsDelegate.didSelectAllItems(allSwitchesOn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1BC4021FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC40224C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC401D9C();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC4022B8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC402300;
}

uint64_t sub_1BC402300(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC401D9C();
  return result;
}

void sub_1BC402330(uint64_t a1, void *a2)
{
  sub_1BC402354(a2);
}

void sub_1BC402354(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t ObjectType;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  swift_getObjectType();
  v4 = (_QWORD *)sub_1BC62BB34();
  v5 = *(v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  v8 = swift_conformsToProtocol2();
  if (v8)
    v9 = v8;
  else
    v9 = 0;
  if (v8)
    v10 = a1;
  else
    v10 = 0;
  if (v10)
  {
    ObjectType = swift_getObjectType();
    v12 = OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_allSwitchesOn;
    v13 = (_BYTE *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_allSwitchesOn);
    v14 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_allSwitchesOn);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
    v30 = a1;
    v15(v14, ObjectType, v9);
    *(_BYTE *)(v2 + v12) = (*v13 & 1) == 0;
    sub_1BC401D9C();

  }
  else
  {
    sub_1BC62BAF8();
    v16 = a1;
    v17 = sub_1BC62BB28();
    v18 = sub_1BC62CAC4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v32 = v29;
      *(_DWORD *)v19 = 136315394;
      v30 = v4;
      v20 = sub_1BC62D718();
      v31 = sub_1BC4991F0(v20, v21, &v32);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      v28[1] = v19 + 14;
      v22 = v16;
      v23 = objc_msgSend(v22, sel_description);
      v24 = sub_1BC62C680();
      v26 = v25;

      v31 = sub_1BC4991F0(v24, v26, &v32);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v17, v18, "[%s] Presenting view controller %s does not conform to SelectAllItemsDelegate", (uint8_t *)v19, 0x16u);
      v27 = v29;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v27, -1, -1);
      MEMORY[0x1BCCF36A8](v19, -1, -1);

      (*(void (**)(char *, id))(v5 + 8))(v7, v30);
    }
    else
    {

      (*(void (**)(char *, _QWORD *))(v5 + 8))(v7, v4);
    }
  }
}

id static SignedClinicalDataRecordDetailViewFactory.multiRecordViewController(medicalRecords:profile:)(uint64_t a1, void *a2)
{
  objc_class *v4;
  char *v5;
  id v6;
  id result;
  objc_super v8;

  v4 = (objc_class *)type metadata accessor for SignedClinicalDataMultiRecordViewController();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_medicalRecords] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_profile] = a2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_displayGroups] = MEMORY[0x1E0DEE9D8];
  v8.receiver = v5;
  v8.super_class = v4;
  swift_bridgeObjectRetain();
  v6 = a2;
  result = objc_msgSendSuper2(&v8, sel_initWithUsingInsetStyling_, 1);
  if (!result)
    __break(1u);
  return result;
}

id SignedClinicalDataRecordDetailViewFactory.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SignedClinicalDataRecordDetailViewFactory.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataRecordDetailViewFactory();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SignedClinicalDataRecordDetailViewFactory.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataRecordDetailViewFactory();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC4028EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1BC403B50();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = a1;
  v16 = a2;
  sub_1BC357158(0, &qword_1EF42DFF0, (uint64_t (*)(uint64_t))sub_1BC403BE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC403D28();
  sub_1BC62C2CC();
  if (qword_1EF428588 != -1)
    swift_once();
  v9 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v10 = sub_1BC62A4A8();
  v12 = v11;
  swift_bridgeObjectRelease();

  v17 = v10;
  v18 = v12;
  sub_1BC347F0C(&qword_1EF42E030, (uint64_t (*)(uint64_t))sub_1BC403B50, MEMORY[0x1E0CDD950]);
  sub_1BC36E2AC();
  sub_1BC62C380();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC402AB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v3 = objc_msgSend(a1, sel_mainRecord);
  if (v3)
  {
    v4 = v3;
    if (qword_1EF428588 != -1)
      swift_once();
    v5 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC36E2AC();
    v9 = sub_1BC62C338();
    MEMORY[0x1E0C80A78](v9);
    sub_1BC357158(0, &qword_1EF42E000, (uint64_t (*)(uint64_t))sub_1BC403C60, MEMORY[0x1E0CE0648]);
    sub_1BC404310(&qword_1EF42E028, &qword_1EF42E000, (uint64_t (*)(uint64_t))sub_1BC403C60);
    sub_1BC62C44C();

    sub_1BC403BE4();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 0, 1, v6);
  }
  else
  {
    sub_1BC403BE4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
}

uint64_t sub_1BC402CD4@<X0>(void *a1@<X0>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  void (*v27)(char *, uint64_t);
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;

  v70 = a2;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v66 = (char *)&v55 - v6;
  v7 = sub_1BC62A760();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v57 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v55 - v11;
  if (qword_1EF428588 != -1)
    swift_once();
  v13 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v69 = sub_1BC62A4A8();
  v60 = v14;
  swift_bridgeObjectRelease();

  v15 = objc_msgSend(a1, sel_recordIssuerDisplayName);
  v67 = sub_1BC62C680();
  v59 = v16;

  v17 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v58 = sub_1BC62A4A8();
  v68 = v18;
  swift_bridgeObjectRelease();

  v19 = sub_1BC5D98EC();
  v20 = objc_msgSend(v19, sel_string);

  v64 = sub_1BC62C680();
  v65 = v21;

  v22 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v63 = sub_1BC62A4A8();
  v24 = v23;
  swift_bridgeObjectRelease();

  v25 = objc_msgSend(a1, sel_issuedDate);
  sub_1BC62A724();

  v26 = (void *)sub_1BC62A700();
  v27 = *(void (**)(char *, uint64_t))(v8 + 8);
  v27(v12, v7);
  v28 = objc_msgSend(v70, sel_stringFromDate_, v26);

  v61 = sub_1BC62C680();
  v62 = v29;

  v30 = objc_msgSend(a1, sel_expirationDate);
  if (!v30)
  {
    v33 = (uint64_t)v66;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v66, 1, 1, v7);
    goto LABEL_7;
  }
  v31 = v30;
  sub_1BC62A724();

  v32 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v33 = (uint64_t)v66;
  v32(v66, v12, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v33, 1, v7) == 1)
  {
LABEL_7:
    v34 = v24;
    sub_1BC36D71C(v33);
    v46 = 0;
    v40 = 0;
    v43 = 0;
    v45 = 0;
    goto LABEL_8;
  }
  v56 = v27;
  v34 = v24;
  v35 = v57;
  v32(v57, (char *)v33, v7);
  v36 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v37 = v7;
  v38 = sub_1BC62A4A8();
  v40 = v39;
  swift_bridgeObjectRelease();

  v41 = (void *)sub_1BC62A700();
  v42 = objc_msgSend(v70, sel_stringFromDate_, v41);

  v43 = sub_1BC62C680();
  v45 = v44;

  v56(v35, v37);
  v46 = v38;
LABEL_8:
  v48 = v59;
  v47 = v60;
  v49 = v58;
  v50 = v68;
  *a3 = v69;
  a3[1] = v47;
  a3[2] = v67;
  a3[3] = v48;
  a3[4] = v49;
  a3[5] = v50;
  v51 = v65;
  a3[6] = v64;
  a3[7] = v51;
  v52 = v62;
  a3[8] = v63;
  a3[9] = v34;
  a3[10] = v61;
  a3[11] = v52;
  a3[12] = v46;
  a3[13] = v40;
  a3[14] = v43;
  a3[15] = v45;
  v53 = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC403E40(v53, v40, v43, v45);
  sub_1BC403E70(v53, v40, v43, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC403284()
{
  uint64_t *v0;

  return sub_1BC4028EC(*v0, v0[1]);
}

uint64_t sub_1BC40328C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  if (a1)
  {
    sub_1BC36E2AC();
    swift_bridgeObjectRetain();
    v3 = sub_1BC62C338();
    v5 = v4;
    v7 = v6 & 1;
    sub_1BC62C29C();
    v8 = sub_1BC62C2FC();
    v10 = v9;
    v12 = v11;
    swift_release();
    v13 = v12 & 1;
    sub_1BC4040D0(v3, v5, v7);
    swift_bridgeObjectRelease();
    sub_1BC62C398();
    v14 = sub_1BC62C2F0();
    v16 = v15;
    v18 = v17;
    v20 = v19;
    swift_release();
    sub_1BC4040D0(v8, v10, v13);
    swift_bridgeObjectRelease();
    sub_1BC404110(v14, v16, v18 & 1);
    swift_bridgeObjectRetain();
    v42 = v16;
    v43 = v14;
    v40 = v18 & 1;
    sub_1BC4040D0(v14, v16, v18 & 1);
    v41 = v20;
    swift_bridgeObjectRelease();
    v39 = 0x4020000000000000;
  }
  else
  {
    v42 = 0;
    v43 = 0;
    v40 = 0;
    v41 = 0;
    v39 = 0;
  }
  sub_1BC36E2AC();
  swift_bridgeObjectRetain();
  v21 = sub_1BC62C338();
  v23 = v22;
  v25 = v24 & 1;
  sub_1BC62C29C();
  v26 = sub_1BC62C2FC();
  v28 = v27;
  v30 = v29;
  swift_release();
  sub_1BC4040D0(v21, v23, v25);
  swift_bridgeObjectRelease();
  sub_1BC62C38C();
  v31 = sub_1BC62C2F0();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_release();
  sub_1BC4040D0(v26, v28, v30 & 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v43;
  *(_QWORD *)(a2 + 8) = v42;
  *(_QWORD *)(a2 + 16) = v40;
  *(_QWORD *)(a2 + 24) = v41;
  *(_QWORD *)(a2 + 32) = v39;
  *(_BYTE *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v31;
  *(_QWORD *)(a2 + 56) = v33;
  *(_BYTE *)(a2 + 64) = v35 & 1;
  *(_QWORD *)(a2 + 72) = v37;
  sub_1BC4040E0(v43, v42, v40, v41);
  sub_1BC404110(v31, v33, v35 & 1);
  swift_bridgeObjectRetain();
  sub_1BC4040D0(v31, v33, v35 & 1);
  swift_bridgeObjectRelease();
  return sub_1BC404120(v43, v42, v40, v41);
}

uint64_t sub_1BC403580()
{
  return sub_1BC62C368();
}

__n128 sub_1BC403598@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  __n128 result;
  __int128 v10;
  __int128 v11;
  _OWORD v12[2];
  uint64_t v13;
  char v14;
  __int128 v15;
  char v16;
  uint64_t v17;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = sub_1BC62C1B8();
  sub_1BC40328C(v3, (uint64_t)v12);
  v5 = v13;
  v6 = v14;
  v7 = v16;
  v8 = v17;
  result = (__n128)v12[0];
  v10 = v12[1];
  v11 = v15;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  return result;
}

uint64_t _s15HealthRecordsUI41SignedClinicalDataRecordDetailViewFactoryC06QRCodeI10Controller06signedeF5GroupSo06UIViewL0CSo08HKSignedefN0C_tFZ_0(void *a1)
{
  Class v2;
  id v3;

  sub_1BC357158(0, &qword_1EF42DFC0, (uint64_t (*)(uint64_t))sub_1BC3A0B4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  a1;
  sub_1BC62C3C8();
  sub_1BC403CE4(0, (unint64_t *)&qword_1EF4290E0);
  sub_1BC62C3C8();
  sub_1BC403928(0, &qword_1EF42DFC8, (void (*)(void))sub_1BC4038E4);
  v3 = objc_allocWithZone(v2);
  return sub_1BC62C230();
}

void *_s15HealthRecordsUI41SignedClinicalDataRecordDetailViewFactoryC06issuerhI10Controller06signedeF5GroupSo06UIViewL0CSo08HKSignedefN0C_tFZ_0(void *a1)
{
  id v2;
  id v3;
  Class v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3578]);
  a1;
  v3 = objc_msgSend(v2, sel_init);
  objc_msgSend(v3, sel_setDateStyle_, 2);
  objc_msgSend(v3, sel_setTimeStyle_, 1);

  sub_1BC403928(0, &qword_1EF42DFD8, (void (*)(void))sub_1BC403980);
  v5 = objc_allocWithZone(v4);
  v6 = (void *)sub_1BC62C230();
  v7 = objc_msgSend(v6, sel_navigationItem);
  if (qword_1EF428588 != -1)
    swift_once();
  v8 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setTitle_, v9, 0xE000000000000000);

  return v6;
}

uint64_t type metadata accessor for SignedClinicalDataRecordDetailViewFactory()
{
  return objc_opt_self();
}

unint64_t sub_1BC4038E4()
{
  unint64_t result;

  result = qword_1EF42DFD0;
  if (!qword_1EF42DFD0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6439E0, &type metadata for SignedClinicalDataQRCodeView);
    atomic_store(result, (unint64_t *)&qword_1EF42DFD0);
  }
  return result;
}

void sub_1BC403928(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1BC62C23C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BC403980()
{
  unint64_t result;

  result = qword_1EF42DFE0;
  if (!qword_1EF42DFE0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63D764, &type metadata for SignedClinicalDataIssuerDetailView);
    atomic_store(result, (unint64_t *)&qword_1EF42DFE0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SignedClinicalDataIssuerDetailView(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for AccountStateChange(id *a1)
{

}

uint64_t assignWithCopy for SignedClinicalDataIssuerDetailView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for SignedClinicalDataIssuerDetailView(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for SignedClinicalDataIssuerDetailView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SignedClinicalDataIssuerDetailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataIssuerDetailView()
{
  return &type metadata for SignedClinicalDataIssuerDetailView;
}

uint64_t sub_1BC403B40()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BC403B50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42DFE8)
  {
    sub_1BC357158(255, &qword_1EF42DFF0, (uint64_t (*)(uint64_t))sub_1BC403BE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC403D28();
    v0 = sub_1BC62C2D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42DFE8);
  }
}

void sub_1BC403BE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42DFF8)
  {
    sub_1BC357158(255, &qword_1EF42E000, (uint64_t (*)(uint64_t))sub_1BC403C60, MEMORY[0x1E0CE0648]);
    v0 = sub_1BC62C458();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42DFF8);
  }
}

void sub_1BC403C60()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1EF42E008)
  {
    sub_1BC403CE4(255, &qword_1EF42E010);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EF42E008);
  }
}

void sub_1BC403CE4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC62CFE0();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1BC403D28()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42E018;
  if (!qword_1EF42E018)
  {
    sub_1BC357158(255, &qword_1EF42DFF0, (uint64_t (*)(uint64_t))sub_1BC403BE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = v1;
    v3 = sub_1BC403DA0();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CE0798], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42E018);
  }
  return result;
}

unint64_t sub_1BC403DA0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[3];

  result = qword_1EF42E020;
  if (!qword_1EF42E020)
  {
    sub_1BC403BE4();
    v2 = v1;
    v3 = sub_1BC404310(&qword_1EF42E028, &qword_1EF42E000, (uint64_t (*)(uint64_t))sub_1BC403C60);
    v4[0] = MEMORY[0x1E0CE0400];
    v4[1] = v3;
    v4[2] = MEMORY[0x1E0CDDD58];
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CDFF98], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF42E020);
  }
  return result;
}

uint64_t sub_1BC403E2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC402AB0(*(void **)(v1 + 16), a1);
}

uint64_t sub_1BC403E34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC402CD4(*(void **)(v1 + 16), *(void **)(v1 + 32), a1);
}

uint64_t sub_1BC403E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BC403E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for BylineCell()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for BylineCell(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for BylineCell(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for BylineCell(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BylineCell(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BylineCell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BylineCell()
{
  return &type metadata for BylineCell;
}

uint64_t sub_1BC40404C()
{
  sub_1BC403B50();
  sub_1BC347F0C(&qword_1EF42E030, (uint64_t (*)(uint64_t))sub_1BC403B50, MEMORY[0x1E0CDD950]);
  sub_1BC36E2AC();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BC4040C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BC4040D0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_1BC4040E0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1BC404110(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BC404110(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_1BC404120(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1BC4040D0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC404150()
{
  return sub_1BC347F0C(&qword_1EF42E038, (uint64_t (*)(uint64_t))sub_1BC40417C, MEMORY[0x1E0CDFB10]);
}

void sub_1BC40417C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42E040)
  {
    sub_1BC357158(255, &qword_1EF42E048, (uint64_t (*)(uint64_t))sub_1BC404214, MEMORY[0x1E0CE0648]);
    sub_1BC404310(&qword_1EF42E070, &qword_1EF42E048, (uint64_t (*)(uint64_t))sub_1BC404214);
    v0 = sub_1BC62C404();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42E040);
  }
}

void sub_1BC404214()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42E050)
  {
    sub_1BC357158(255, &qword_1EF42E058, (uint64_t (*)(uint64_t))sub_1BC404290, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42E050);
  }
}

void sub_1BC404290(uint64_t a1)
{
  sub_1BC357158(a1, &qword_1EF42E060, (uint64_t (*)(uint64_t))sub_1BC4042AC, MEMORY[0x1E0CE0648]);
}

void sub_1BC4042AC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42E068)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42E068);
  }
}

uint64_t sub_1BC404310(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC357158(255, a2, a3, MEMORY[0x1E0CE0648]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CE0680], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static NavigationFeedItemIdentifierFactory.make(navigationType:categoryKind:profile:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v4 = sub_1BC62A7B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = *a2;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A53C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC6398E0;
  v11 = (void *)sub_1BC62AA84();
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  if (v11)
  {
    v23 = 0x656C69666F72505BLL;
    v24 = 0xE90000000000003ALL;
    v12 = v11;
    v13 = objc_msgSend(v12, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v14 = v23;
    v15 = v24;
  }
  else
  {
    v14 = 0xD000000000000013;
    v15 = 0x80000001BC655390;
  }
  v23 = v14;
  v24 = v15;
  sub_1BC62C764();

  v16 = v24;
  *(_QWORD *)(v10 + 32) = v23;
  *(_QWORD *)(v10 + 40) = v16;
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v23 = 0xD000000000000010;
  v24 = 0x80000001BC6573A0;
  v22 = v8;
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v17 = v24;
  *(_QWORD *)(v10 + 48) = v23;
  *(_QWORD *)(v10 + 56) = v17;
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v23 = 0xD000000000000014;
  v24 = 0x80000001BC6573C0;
  v22 = v9;
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v18 = v24;
  *(_QWORD *)(v10 + 64) = v23;
  *(_QWORD *)(v10 + 72) = v18;
  v23 = v10;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v19 = sub_1BC62C5D8();
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t static NavigationFeedItemIdentifierFactory.makePrefixComponent(feedItemKind:)()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  FeedItemKind.rawValue.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return 0xD000000000000016;
}

uint64_t static NavigationFeedItemIdentifierFactory.makeComponent(navigationType:)(uint64_t a1)
{
  return sub_1BC404744(a1, 19, 0xD000000000000010);
}

uint64_t static NavigationFeedItemIdentifierFactory.makeComponent(categoryKind:)(uint64_t a1)
{
  return sub_1BC404744(a1, 23, 0xD000000000000014);
}

uint64_t sub_1BC404744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return a3;
}

void sub_1BC4047DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEA968]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for NavigationFeedItemIdentifierFactory()
{
  return &type metadata for NavigationFeedItemIdentifierFactory;
}

uint64_t sub_1BC404834()
{
  return sub_1BC382D7C();
}

uint64_t sub_1BC404840()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  id v10;
  void (*v11)(uint64_t *, _QWORD);
  void *v12;
  id v13;
  void (*v14)(uint64_t *, _QWORD);
  id v15;
  void (*v16)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  void *v18;
  _QWORD v19[2];
  uint64_t v20[3];
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = sub_1BC62BD98();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v6, (uint64_t)v20);
  if (!v21)
    return sub_1BC37AE60((uint64_t)v20);
  sub_1BC37AE0C();
  type metadata accessor for TitleSubtitleDetailItem(0);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v8 = v19[1];
    MEMORY[0x1BCCF201C]();
    swift_bridgeObjectRetain();
    sub_1BC62BD74();
    swift_bridgeObjectRetain();
    sub_1BC62BC9C();
    v9 = *(id *)(v8 + 48);
    sub_1BC62BD14();
    v10 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    v11 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCCC();
    v11(v20, 0);
    v12 = (void *)objc_opt_self();
    v13 = objc_msgSend(v12, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
    v14 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCC0();
    v14(v20, 0);
    v15 = objc_msgSend(v12, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    v16 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
    sub_1BC62BCC0();
    v16(v20, 0);
    v21 = v2;
    v22 = MEMORY[0x1E0DC2398];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
    (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(boxed_opaque_existential_1, v5, v2);
    MEMORY[0x1BCCF1FC8](v20);
    swift_bridgeObjectRetain();
    sub_1BC62CD40();
    if (*(_QWORD *)(v8 + 72))
    {
      swift_bridgeObjectRetain();
      v18 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setAccessibilityIdentifier_, v18);
      swift_release();

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return swift_release();
    }
  }
  return result;
}

id sub_1BC404C14()
{
  return sub_1BC405B94(type metadata accessor for TitleSubtitleDetailCell);
}

uint64_t type metadata accessor for TitleSubtitleDetailCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC404C50@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC405C48(&OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailCell_item, a1);
}

uint64_t sub_1BC404C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC405CA8(a1, a2, a3, &OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailCell_item, (void (*)(uint64_t))sub_1BC404840);
}

uint64_t (*sub_1BC404C70(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC404CB8;
}

uint64_t sub_1BC404CB8(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC404840);
}

uint64_t sub_1BC404CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailItem_uuid;
  v2 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC404D3C()
{
  return type metadata accessor for TitleSubtitleDetailItem(0);
}

uint64_t type metadata accessor for TitleSubtitleDetailItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42E0D0);
}

uint64_t sub_1BC404D58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC404DF4(uint64_t a1, uint64_t a2)
{
  return sub_1BC404F60(a1, a2, (void (*)(void))type metadata accessor for TitleSubtitleDetailCell, &qword_1EF42E2B0, (uint64_t)&unk_1BC63D9F0);
}

uint64_t sub_1BC404E10()
{
  return sub_1BC404834();
}

uint64_t sub_1BC404E30()
{
  return sub_1BC382D7C();
}

uint64_t sub_1BC404E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI34TitleSubtitleDetailItemWithSpinner_uuid;
  v2 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC404EA4()
{
  return type metadata accessor for TitleSubtitleDetailItemWithSpinner(0);
}

uint64_t type metadata accessor for TitleSubtitleDetailItemWithSpinner(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42E1B8);
}

uint64_t sub_1BC404EC0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC404F44(uint64_t a1, uint64_t a2)
{
  return sub_1BC404F60(a1, a2, (void (*)(void))type metadata accessor for TitleSubtitleDetailSpinnerCell, &qword_1EF42E2B8, (uint64_t)&unk_1BC63D960);
}

uint64_t sub_1BC404F60(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, uint64_t a5)
{
  a3();
  sub_1BC405D68(a4, (uint64_t (*)(void))a3, a5);
  return sub_1BC62ADA8();
}

uint64_t sub_1BC404FB4()
{
  return sub_1BC404E30();
}

id sub_1BC404FD4()
{
  return sub_1BC40500C(&OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___titleLabel, (SEL *)&selRef_secondaryLabelColor, MEMORY[0x1E0DC4B10]);
}

id sub_1BC404FF0()
{
  return sub_1BC40500C(&OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___subtitleLabel, (SEL *)&selRef_labelColor, MEMORY[0x1E0DC4A88]);
}

id sub_1BC40500C(uint64_t *a1, SEL *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    v6 = *(id *)(v3 + *a1);
  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v9, sel_setNumberOfLines_, 0);
    v10 = objc_msgSend((id)objc_opt_self(), *a2);
    objc_msgSend(v9, sel_setTextColor_, v10);

    v11 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *a3);
    objc_msgSend(v9, sel_setFont_, v11);

    v12 = *(void **)(v3 + v4);
    *(_QWORD *)(v3 + v4) = v9;
    v6 = v9;

    v5 = 0;
  }
  v13 = v5;
  return v6;
}

id sub_1BC405128()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___spinner;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___spinner);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___spinner);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC4051B0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  _BYTE v18[24];
  uint64_t v19;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v1, (uint64_t)v18);
  if (v19)
  {
    sub_1BC37AE0C();
    type metadata accessor for TitleSubtitleDetailItemWithSpinner(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = sub_1BC404FD4();
      swift_bridgeObjectRetain();
      v3 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setText_, v3);

      v4 = sub_1BC404FF0();
      swift_bridgeObjectRetain();
      v5 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setText_, v5);

      v6 = *(_QWORD *)(v17 + 56);
      if (v6)
      {
        v7 = *(_QWORD *)(v17 + 48);
        swift_bridgeObjectRetain();
        v8 = sub_1BC404FD4();
        sub_1BC359F44();
        v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1BC6395A0;
        *(_QWORD *)(v9 + 32) = v7;
        *(_QWORD *)(v9 + 40) = v6;
        *(_QWORD *)(v9 + 48) = 0x656C746954;
        *(_QWORD *)(v9 + 56) = 0xE500000000000000;
        swift_bridgeObjectRetain();
        v10 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        v11 = (id)HKUIJoinStringsForAutomationIdentifier();

        objc_msgSend(v8, sel_setAccessibilityIdentifier_, v11);
        v12 = sub_1BC404FF0();
        v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_1BC6395A0;
        *(_QWORD *)(v13 + 32) = v7;
        *(_QWORD *)(v13 + 40) = v6;
        *(_QWORD *)(v13 + 48) = 0x656C746974627553;
        *(_QWORD *)(v13 + 56) = 0xE800000000000000;
        v14 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        v15 = (id)HKUIJoinStringsForAutomationIdentifier();

        objc_msgSend(v12, sel_setAccessibilityIdentifier_, v15);
      }
      v16 = sub_1BC405128();
      objc_msgSend(v16, sel_startAnimating);
      swift_release();

    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v18);
  }
}

id sub_1BC405450(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  objc_super v22;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___spinner] = 0;
  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell_item];
  v10 = (objc_class *)type metadata accessor for TitleSubtitleDetailSpinnerCell();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v22.receiver = v4;
  v22.super_class = v10;
  v11 = objc_msgSendSuper2(&v22, sel_initWithFrame_, a1, a2, a3, a4);
  v12 = (void *)objc_opt_self();
  v13 = v11;
  v14 = objc_msgSend(v12, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  v15 = objc_msgSend(v13, sel_contentView);
  v16 = sub_1BC404FD4();
  objc_msgSend(v15, sel_addSubview_, v16);

  v17 = objc_msgSend(v13, sel_contentView);
  v18 = sub_1BC405128();
  objc_msgSend(v17, sel_addSubview_, v18);

  v19 = objc_msgSend(v13, sel_contentView);
  v20 = sub_1BC404FF0();
  objc_msgSend(v19, sel_addSubview_, v20);

  sub_1BC4056DC();
  return v13;
}

void sub_1BC4056DC()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  double v33;
  double v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  double v41;
  double v42;
  id v43;

  v1 = sub_1BC404FD4();
  v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_hk_alignHorizontalConstraintsWithView_margin_, v2, 16.0);

  v3 = sub_1BC404FD4();
  v4 = objc_msgSend(v3, sel_firstBaselineAnchor);

  v5 = objc_msgSend(v0, (SEL)&selRef_invalidate);
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v8, sel__scaledValueForValue_, 25.0);
  v10 = v9;

  v11 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, v10);
  objc_msgSend(v11, sel_setActive_, 1);

  v12 = sub_1BC405128();
  v13 = objc_msgSend(v12, sel_leadingAnchor);

  v14 = objc_msgSend(v0, (SEL)&selRef_invalidate);
  v15 = objc_msgSend(v14, sel_leadingAnchor);

  v16 = objc_msgSend(v13, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v15, 16.0);
  objc_msgSend(v16, sel_setActive_, 1);

  v17 = sub_1BC405128();
  v18 = objc_msgSend(v17, sel_centerYAnchor);

  v19 = sub_1BC404FF0();
  v20 = objc_msgSend(v19, sel_centerYAnchor);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
  objc_msgSend(v21, sel_setActive_, 1);

  v22 = sub_1BC404FF0();
  v23 = objc_msgSend(v22, sel_leadingAnchor);

  v24 = sub_1BC405128();
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = objc_msgSend(v23, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v25, 4.0);
  objc_msgSend(v26, sel_setActive_, 1);

  v27 = sub_1BC404FF0();
  v28 = objc_msgSend(v27, sel_firstBaselineAnchor);

  v29 = sub_1BC404FD4();
  v30 = objc_msgSend(v29, sel_lastBaselineAnchor);

  v31 = *MEMORY[0x1E0DC4A88];
  v32 = objc_msgSend(v7, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v32, sel__scaledValueForValue_, 24.0);
  v34 = v33;

  v35 = objc_msgSend(v28, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v30, v34);
  objc_msgSend(v35, sel_setActive_, 1);

  v36 = sub_1BC404FF0();
  v37 = objc_msgSend(v36, sel_lastBaselineAnchor);

  v38 = objc_msgSend(v0, sel_contentView);
  v39 = objc_msgSend(v38, sel_bottomAnchor);

  v40 = objc_msgSend(v7, sel_preferredFontForTextStyle_, v31);
  objc_msgSend(v40, sel__scaledValueForValue_, 13.0);
  v42 = v41;

  v43 = objc_msgSend(v37, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v39, -v42);
  objc_msgSend(v43, sel_setActive_, 1);

}

id sub_1BC405B88()
{
  return sub_1BC405B94(type metadata accessor for TitleSubtitleDetailSpinnerCell);
}

id sub_1BC405B94(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for TitleSubtitleDetailSpinnerCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC405C3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC405C48(&OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell_item, a1);
}

uint64_t sub_1BC405C48@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a1;
  swift_beginAccess();
  return sub_1BC37ADB0(v4, a2);
}

uint64_t sub_1BC405C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC405CA8(a1, a2, a3, &OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell_item, (void (*)(uint64_t))sub_1BC4051B0);
}

uint64_t sub_1BC405CA8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  v8 = v5 + *a4;
  swift_beginAccess();
  sub_1BC384E14(a1, v8);
  v9 = swift_endAccess();
  a5(v9);
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC405D14(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC405D5C;
}

uint64_t sub_1BC405D5C(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC4051B0);
}

uint64_t sub_1BC405D68(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2();
    result = MEMORY[0x1BCCF35C4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC405DA4(uint64_t a1, uint64_t a2)
{
  id v2;
  uint64_t v3;

  if (((*(uint64_t (**)(void))(a2 + 40))() & 1) != 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
  }
  else if (qword_1ED6A4888 != -1)
  {
    swift_once();
  }
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1BC405EDC(uint64_t a1, uint64_t a2)
{
  id v2;
  uint64_t v3;

  if (((*(uint64_t (**)(void))(a2 + 40))() & 1) != 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
  }
  else if (qword_1ED6A4888 != -1)
  {
    swift_once();
  }
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v3;
}

void sub_1BC406038(uint64_t a1)
{
  void *v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  char v12;
  uint64_t v13;
  void *v14;
  char v15;

  v1 = *(void **)a1;
  v2 = *(_BYTE *)(a1 + 48);
  if ((v2 & 1) != 0)
  {
    v3 = v1;
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 16);
    v13 = *(_QWORD *)(a1 + 8);
    v5 = *(_QWORD *)(a1 + 24);
    v6 = *(_QWORD *)(a1 + 32);
    v7 = *(void **)(a1 + 40);
    v8 = v7;
    v9 = sub_1BC406D84();
    v10 = 0x4008000000000000;
    if ((v6 & 1) == 0)
      v10 = v5;
    if ((v1 & 1) != 0)
      v11 = 0;
    else
      v11 = (void *)v10;
    if ((v1 & 1) != 0)
      v12 = 2;
    else
      v12 = 0;
    objc_msgSend(v9, sel_setImage_, v8);
    v14 = v11;
    v15 = v12;
    UIImageView.applyStyle(_:)((uint64_t)&v14);
    sub_1BC37859C(v11, v12);

    sub_1BC407FDC(v1, v13, v4, v5, v6, v7, 0);
    sub_1BC407FDC(v1, v13, v4, v5, v6, v7, 0);
  }
  sub_1BC407FD0(v1, v2);
}

void sub_1BC406170()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  void *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;

  v1 = v0;
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v2 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v2);

  v3 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v3, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  v4 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v4, sel_setCornerRadius_, 10.0);

  v5 = sub_1BC406D84();
  objc_msgSend(v1, sel_addSubview_, v5);

  v6 = sub_1BC406F1C();
  objc_msgSend(v1, sel_addSubview_, v6);

  v7 = sub_1BC407164();
  objc_msgSend(v1, sel_addSubview_, v7);

  v8 = sub_1BC407368();
  objc_msgSend(v1, sel_addSubview_, v8);

  v9 = sub_1BC407440();
  objc_msgSend(v1, sel_addSubview_, v9);

  v10 = sub_1BC40798C();
  objc_msgSend(v1, sel_addSubview_, v10);

  v98 = (id)objc_opt_self();
  sub_1BC34D844();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC63DAF0;
  v12 = sub_1BC406D84();
  v13 = objc_msgSend(v12, sel_topAnchor);

  v14 = objc_msgSend(v1, sel_topAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, 11.0);

  *(_QWORD *)(v11 + 32) = v15;
  v16 = sub_1BC406D84();
  v17 = objc_msgSend(v16, sel_leadingAnchor);

  v18 = objc_msgSend(v1, (SEL)&selRef_dateCache + 6);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 13.0);

  *(_QWORD *)(v11 + 40) = v19;
  v20 = sub_1BC406F1C();
  v21 = objc_msgSend(v20, sel_topAnchor);

  v22 = objc_msgSend(v1, sel_topAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, 11.0);

  *(_QWORD *)(v11 + 48) = v23;
  v24 = sub_1BC406F1C();
  v25 = objc_msgSend(v24, (SEL)&selRef_dateCache + 6);

  v26 = sub_1BC406D84();
  v27 = objc_msgSend(v26, sel_trailingAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, 11.0);
  *(_QWORD *)(v11 + 56) = v28;
  v29 = sub_1BC40798C();
  v30 = objc_msgSend(v29, (SEL)&selRef_dateCache + 6);

  v31 = sub_1BC406F1C();
  v32 = objc_msgSend(v31, sel_trailingAnchor);

  v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v32, 10.0);
  *(_QWORD *)(v11 + 64) = v33;
  v34 = sub_1BC40798C();
  v35 = objc_msgSend(v34, sel_firstBaselineAnchor);

  v36 = sub_1BC406F1C();
  v37 = objc_msgSend(v36, sel_firstBaselineAnchor);

  v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v37);
  *(_QWORD *)(v11 + 72) = v38;
  v39 = objc_msgSend(v1, sel_trailingAnchor);
  v40 = sub_1BC40798C();
  v41 = objc_msgSend(v40, sel_trailingAnchor);

  v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, v41, 13.0);
  *(_QWORD *)(v11 + 80) = v42;
  v43 = sub_1BC407164();
  v44 = objc_msgSend(v43, sel_topAnchor);

  v45 = sub_1BC406F1C();
  v46 = objc_msgSend(v45, sel_bottomAnchor);

  v47 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v46, 4.0);
  *(_QWORD *)(v11 + 88) = v47;
  v48 = sub_1BC407164();
  v49 = objc_msgSend(v48, sel_leadingAnchor);

  v50 = sub_1BC406F1C();
  v51 = objc_msgSend(v50, sel_leadingAnchor);

  v52 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v51);
  *(_QWORD *)(v11 + 96) = v52;
  v53 = sub_1BC407164();
  v54 = objc_msgSend(v53, sel_trailingAnchor);

  v55 = sub_1BC40798C();
  v56 = objc_msgSend(v55, sel_trailingAnchor);

  v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v56);
  *(_QWORD *)(v11 + 104) = v57;
  v58 = sub_1BC407368();
  v59 = objc_msgSend(v58, sel_topAnchor);

  v60 = sub_1BC407164();
  v61 = objc_msgSend(v60, sel_bottomAnchor);

  v62 = objc_msgSend(v59, sel_constraintEqualToAnchor_constant_, v61, 11.0);
  *(_QWORD *)(v11 + 112) = v62;
  v63 = sub_1BC407368();
  v64 = objc_msgSend(v63, sel_leadingAnchor);

  v65 = sub_1BC407164();
  v66 = objc_msgSend(v65, sel_leadingAnchor);

  v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v66);
  *(_QWORD *)(v11 + 120) = v67;
  v68 = sub_1BC407368();
  v69 = objc_msgSend(v68, sel_trailingAnchor);

  v70 = objc_msgSend(v1, sel_trailingAnchor);
  v71 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v70);

  *(_QWORD *)(v11 + 128) = v71;
  v72 = sub_1BC407440();
  v73 = objc_msgSend(v72, sel_topAnchor);

  v74 = sub_1BC407368();
  v75 = objc_msgSend(v74, sel_bottomAnchor);

  v76 = objc_msgSend(v73, sel_constraintEqualToAnchor_, v75);
  *(_QWORD *)(v11 + 136) = v76;
  v77 = sub_1BC407440();
  v78 = objc_msgSend(v77, sel_bottomAnchor);

  v79 = objc_msgSend(v1, sel_bottomAnchor);
  v80 = objc_msgSend(v78, sel_constraintEqualToAnchor_, v79);

  *(_QWORD *)(v11 + 144) = v80;
  v81 = sub_1BC407440();
  v82 = objc_msgSend(v81, sel_leadingAnchor);

  v83 = sub_1BC406F1C();
  v84 = objc_msgSend(v83, sel_leadingAnchor);

  v85 = objc_msgSend(v82, sel_constraintEqualToAnchor_, v84);
  *(_QWORD *)(v11 + 152) = v85;
  v86 = sub_1BC407440();
  v87 = objc_msgSend(v86, sel_trailingAnchor);

  v88 = sub_1BC406F1C();
  v89 = objc_msgSend(v88, sel_trailingAnchor);

  v90 = objc_msgSend(v87, sel_constraintEqualToAnchor_, v89);
  *(_QWORD *)(v11 + 160) = v90;
  v91 = sub_1BC407440();
  v92 = objc_msgSend(v91, sel_heightAnchor);

  v93 = objc_msgSend(v92, sel_constraintGreaterThanOrEqualToConstant_, 44.0);
  *(_QWORD *)(v11 + 168) = v93;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v94 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v98, sel_activateConstraints_, v94);

  v99 = sub_1BC40798C();
  v95 = &v1[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider];
  v96 = *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 24];
  v97 = *((_QWORD *)v95 + 4);
  __swift_project_boxed_opaque_existential_1Tm(v95, v96);
  objc_msgSend(v99, sel_setHidden_, (*(uint64_t (**)(uint64_t, uint64_t))(v97 + 32))(v96, v97) & 1);

}

id sub_1BC406BD4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon);
  v3 = v2;
  if (v2 == (void *)1)
  {
    v3 = sub_1BC406C3C();
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;
    sub_1BC407EFC(v4);
  }
  sub_1BC407F0C(v2);
  return v3;
}

id sub_1BC406C3C()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 45.0);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_configurationWithFont_, v0);
  v3 = (void *)sub_1BC62C650();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v3, v2);

  if (v4)
  {
    v5 = objc_msgSend(v1, sel_configurationPreferringMulticolor);
    v6 = objc_msgSend(v4, sel_imageByApplyingSymbolConfiguration_, v5);

  }
  else
  {

    return 0;
  }
  return v6;
}

id sub_1BC406D84()
{
  return sub_1BC4079A0(&OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___iconView, (uint64_t (*)(uint64_t))sub_1BC406D98);
}

id sub_1BC406D98()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;

  v0 = sub_1BC406BD4();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v0);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v2 = objc_msgSend(v1, sel_widthAnchor);
  v3 = objc_msgSend(v2, sel_constraintEqualToConstant_, 45.0);

  objc_msgSend(v3, sel_setActive_, 1);
  v4 = objc_msgSend(v1, sel_heightAnchor);
  v5 = objc_msgSend(v4, sel_constraintEqualToConstant_, 45.0);

  objc_msgSend(v5, sel_setActive_, 1);
  LODWORD(v6) = 1148846080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 0, v6);
  LODWORD(v7) = 1148846080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1, v7);
  LODWORD(v8) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, v8);
  LODWORD(v9) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 1, v9);
  return v1;
}

id sub_1BC406F1C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v6 = (void *)sub_1BC62CDDC();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTextAlignment_, 4);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v7 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v8, 0xE000000000000000);

    LODWORD(v9) = 1148846080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 1, v9);
    objc_msgSend(v5, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48C8]);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1BC407164()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  void *v12;
  id v13;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v6 = (void *)sub_1BC62CDDC();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTextAlignment_, 4);
    v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 24);
    v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 32);
    __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider), v7);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v9);

    v10 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v10);

    LODWORD(v11) = 1148846080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 1, v11);
    objc_msgSend(v5, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48C8]);
    v12 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v13 = v2;
  return v3;
}

id sub_1BC407368()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_init);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC407440()
{
  return sub_1BC4079A0(&OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___actionButton, (uint64_t (*)(uint64_t))sub_1BC407454);
}

id sub_1BC407454(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  double v33;
  double v34;
  uint64_t v36;

  v2 = sub_1BC62CF98();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v36 - v7;
  v9 = (_QWORD *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 24);
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 32);
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider), v10);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11) & 1) != 0)
  {
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v12, sel_setAdjustsFontForContentSizeCategory_, 1);
    v13 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
    objc_msgSend(v12, sel_setTextColor_, v13);

    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v14 = (void *)sub_1BC62CDDC();
    objc_msgSend(v12, sel_setFont_, v14);

    objc_msgSend(v12, sel_setNumberOfLines_, 0);
    v15 = v9[3];
    v16 = v9[4];
    __swift_project_boxed_opaque_existential_1Tm(v9, v15);
    (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    v17 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setText_, v17);

    LODWORD(v18) = 1132068864;
    objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 0, v18);
    LODWORD(v19) = 1148846080;
    objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 1, v19);
    objc_msgSend(v12, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48C8]);
    objc_msgSend(v12, sel_setAccessibilityTraits_, *MEMORY[0x1E0DC4660]);
  }
  else
  {
    sub_1BC62CF68();
    sub_1BC62CF20();
    sub_1BC34B6A0(0, &qword_1EF42E328);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v12 = (id)sub_1BC62CFA4();
    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v12, sel_setContentHorizontalAlignment_, 4);
    v20 = objc_msgSend(v12, sel_titleLabel);
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, sel_setAdjustsFontForContentSizeCategory_, 1);

    }
    v22 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
    objc_msgSend(v12, sel_setTitleColor_forState_, v22, 0);

    v23 = objc_msgSend(v12, sel_titleLabel);
    if (v23)
    {
      v24 = v23;
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
      v25 = (void *)sub_1BC62CDDC();
      objc_msgSend(v24, sel_setFont_, v25);

    }
    v26 = objc_msgSend(v12, sel_titleLabel);
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v26, sel_setNumberOfLines_, 0);

    }
    v28 = objc_msgSend(v12, sel_titleLabel);
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v28, sel_setTextAlignment_, 4);

    }
    v30 = v9[3];
    v31 = v9[4];
    __swift_project_boxed_opaque_existential_1Tm(v9, v30);
    (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
    v32 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setTitle_forState_, v32, 0);

    objc_msgSend(v12, sel_addTarget_action_forControlEvents_, a1, sel_upgradeAction, 64);
    LODWORD(v33) = 1132068864;
    objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 0, v33);
    LODWORD(v34) = 1148846080;
    objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 1, v34);
    objc_msgSend(v12, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48C8]);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  return v12;
}

id sub_1BC40798C()
{
  return sub_1BC4079A0(&OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___dismissButton, (uint64_t (*)(uint64_t))sub_1BC4079FC);
}

id sub_1BC4079A0(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

void *sub_1BC4079FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  double v17;
  void *v18;
  double v19;
  double v20;
  uint64_t v22;

  v2 = sub_1BC62CF98();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - v7;
  sub_1BC62CF68();
  sub_1BC62CF20();
  sub_1BC34B6A0(0, &qword_1EF42E328);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  v9 = (void *)sub_1BC62CFA4();
  v10 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v11 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v10);

  v12 = v11;
  v13 = (void *)sub_1BC62C650();
  v14 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v13, v12);

  objc_msgSend(v9, sel_setImage_forState_, v14, 0);
  v15 = objc_msgSend((id)objc_opt_self(), sel_quaternaryLabelColor);
  objc_msgSend(v9, sel_setTintColor_, v15);

  objc_msgSend(v9, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  v16 = objc_msgSend(v9, sel_imageView);
  if (v16)
  {
    v18 = v16;
    objc_msgSend(v16, sel_setContentMode_, 1);

  }
  LODWORD(v17) = 1148846080;
  objc_msgSend(v9, sel_setContentCompressionResistancePriority_forAxis_, 0, v17);
  LODWORD(v19) = 1148846080;
  objc_msgSend(v9, sel_setContentHuggingPriority_forAxis_, 0, v19);
  LODWORD(v20) = 1148846080;
  objc_msgSend(v9, sel_setContentHuggingPriority_forAxis_, 1, v20);
  objc_msgSend(v9, sel_setContentVerticalAlignment_, 0);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v9, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48C8]);
  objc_msgSend(v9, sel_addTarget_action_forControlEvents_, a1, sel_dismissAction, 64);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v9;
}

id sub_1BC407E0C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountUpgradeTileView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AccountUpgradeTileView()
{
  return objc_opt_self();
}

void sub_1BC407EFC(id a1)
{
  if (a1 != (id)1)

}

id sub_1BC407F0C(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void sub_1BC407F1C()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___iconView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___actionButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___dismissButton] = 0;

  sub_1BC62D394();
  __break(1u);
}

void sub_1BC407FD0(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

void sub_1BC407FDC(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char a7)
{
  if ((a7 & 1) != 0)

  else
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.make(for:feedItemKind:categoryKind:listType:sortHint:profile:)(uint64_t a1, _BYTE *a2, unsigned __int8 *a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v56 = a6;
  v54 = a4;
  v52 = a1;
  v9 = 0xD000000000000013;
  v53 = a5 & 1;
  v55 = a7 & 1;
  v10 = sub_1BC62A7B4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  v14 = *a3;
  v59 = xmmword_1BC63DB50;
  v15 = (void *)sub_1BC62AA84();
  v58[0] = 0;
  v58[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v58[0] = 0xD000000000000016;
  v58[1] = 0x80000001BC655370;
  LOBYTE(v57) = (_BYTE)a2;
  FeedItemKind.rawValue.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v16 = v58[0];
  if (v15)
  {
    strcpy((char *)v58, "[Profile:");
    WORD1(v58[1]) = 0;
    HIDWORD(v58[1]) = -385875968;
    v51 = v16;
    v17 = v15;
    v18 = objc_msgSend(v17, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v9 = v58[0];
    v19 = v58[1];
  }
  else
  {
    v19 = 0x80000001BC655390;
  }
  v58[0] = v9;
  v58[1] = v19;
  sub_1BC62C764();

  swift_bridgeObjectRelease();
  v60 = v58[0];
  v61 = v58[1];
  v58[0] = 0;
  v58[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  strcpy((char *)v58, "[UDCCategory:");
  HIWORD(v58[1]) = -4864;
  v57 = v14;
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v20 = v58[0];
  v21 = v58[1];
  v62 = v58[0];
  v63 = v58[1];
  v22 = _s15HealthRecordsUI42UserDomainConceptFeedItemIdentifierFactoryV13makeComponent9conceptIdSSSg10Foundation4UUIDVSg_tFZ_0(v52);
  v24 = v23;
  v64 = v22;
  v65 = v23;
  v66 = sub_1BC408C7C(v54, v53, 0x7473694C4344555BLL);
  v67 = v25;
  v68 = sub_1BC408C7C(v56, v55, 0x74726F534344555BLL);
  v69 = v26;
  v27 = v61;
  if (!v61)
  {
    v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v21)
      goto LABEL_15;
    goto LABEL_10;
  }
  v28 = v60;
  swift_bridgeObjectRetain();
  v29 = sub_1BC3B5060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v31 = v29[2];
  v30 = v29[3];
  if (v31 >= v30 >> 1)
    v29 = sub_1BC3B5060((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
  v29[2] = v31 + 1;
  v32 = &v29[2 * v31];
  v32[4] = v28;
  v32[5] = v27;
  if (v21)
  {
LABEL_10:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1BC3B5060(0, v29[2] + 1, 1, v29);
    v34 = v29[2];
    v33 = v29[3];
    if (v34 >= v33 >> 1)
      v29 = sub_1BC3B5060((_QWORD *)(v33 > 1), v34 + 1, 1, v29);
    v29[2] = v34 + 1;
    v35 = &v29[2 * v34];
    v35[4] = v20;
    v35[5] = v21;
    v22 = v64;
    v24 = v65;
  }
LABEL_15:
  if (v24)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1BC3B5060(0, v29[2] + 1, 1, v29);
    v37 = v29[2];
    v36 = v29[3];
    if (v37 >= v36 >> 1)
      v29 = sub_1BC3B5060((_QWORD *)(v36 > 1), v37 + 1, 1, v29);
    v29[2] = v37 + 1;
    v38 = &v29[2 * v37];
    v38[4] = v22;
    v38[5] = v24;
  }
  v39 = v67;
  if (v67)
  {
    v40 = v66;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1BC3B5060(0, v29[2] + 1, 1, v29);
    v42 = v29[2];
    v41 = v29[3];
    if (v42 >= v41 >> 1)
      v29 = sub_1BC3B5060((_QWORD *)(v41 > 1), v42 + 1, 1, v29);
    v29[2] = v42 + 1;
    v43 = &v29[2 * v42];
    v43[4] = v40;
    v43[5] = v39;
  }
  v44 = v69;
  if (v69)
  {
    v45 = v68;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1BC3B5060(0, v29[2] + 1, 1, v29);
    v47 = v29[2];
    v46 = v29[3];
    if (v47 >= v46 >> 1)
      v29 = sub_1BC3B5060((_QWORD *)(v46 > 1), v47 + 1, 1, v29);
    v29[2] = v47 + 1;
    v48 = &v29[2 * v47];
    v48[4] = v45;
    v48[5] = v44;
  }
  sub_1BC4047DC(0, (unint64_t *)&qword_1EF4290E0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEB940]);
  swift_arrayDestroy();
  v58[0] = v29;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v49 = sub_1BC62C5D8();
  swift_bridgeObjectRelease();
  return v49;
}

unint64_t static UserDomainConceptFeedItemIdentifierFactory.makePrefixComponent(feedItemKind:)()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  FeedItemKind.rawValue.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return 0xD000000000000016;
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.makeComponent(categoryKind:)()
{
  _QWORD v1[2];

  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "[UDCCategory:");
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return v1[0];
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.makeComponent(listType:)(uint64_t a1, char a2)
{
  return sub_1BC408C7C(a1, a2 & 1, 0x7473694C4344555BLL);
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.makeComponent(sortHint:)(uint64_t a1, char a2)
{
  return sub_1BC408C7C(a1, a2 & 1, 0x74726F534344555BLL);
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.make(for:feedItemKind:profile:)(uint64_t a1, uint64_t a2, char *a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  void *v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v30[3];
  char v31;
  unint64_t v32;
  unint64_t v33;

  v5 = 0xD000000000000013;
  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a3;
  v11 = (void *)sub_1BC62AA84();
  v32 = 0;
  v33 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v32 = 0xD000000000000016;
  v33 = 0x80000001BC655370;
  v31 = v10;
  FeedItemKind.rawValue.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v12 = v32;
  if (v11)
  {
    v32 = 0x656C69666F72505BLL;
    v33 = 0xE90000000000003ALL;
    v30[1] = v12;
    v13 = v11;
    v30[2] = a2;
    v14 = v13;
    v15 = objc_msgSend(v13, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v5 = v32;
    v16 = v33;
  }
  else
  {
    v16 = 0x80000001BC655390;
  }
  v32 = v5;
  v33 = v16;
  sub_1BC62C764();

  swift_bridgeObjectRelease();
  v18 = v32;
  v17 = v33;
  v32 = 0x3A64494344555BLL;
  v33 = 0xE700000000000000;
  sub_1BC62C764();
  sub_1BC62C764();
  v20 = v32;
  v19 = v33;
  swift_bridgeObjectRetain();
  v21 = sub_1BC3B5060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v23 = v21[2];
  v22 = v21[3];
  v24 = v23 + 1;
  if (v23 >= v22 >> 1)
    v21 = sub_1BC3B5060((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
  v21[2] = v24;
  v25 = &v21[2 * v23];
  v25[4] = v18;
  v25[5] = v17;
  v26 = v21[3];
  swift_bridgeObjectRetain();
  if (v24 >= v26 >> 1)
    v21 = sub_1BC3B5060((_QWORD *)(v26 > 1), v23 + 2, 1, v21);
  v21[2] = v23 + 2;
  v27 = &v21[2 * v24];
  v27[4] = v20;
  v27[5] = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32 = (unint64_t)v21;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v28 = sub_1BC62C5D8();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.makeComponent(conceptIdString:)()
{
  sub_1BC62C764();
  sub_1BC62C764();
  return 0x3A64494344555BLL;
}

uint64_t _s15HealthRecordsUI42UserDomainConceptFeedItemIdentifierFactoryV13makeComponent9conceptIdSSSg10Foundation4UUIDVSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];

  sub_1BC3B14B0();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62A7B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34EA24(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BC3B153C((uint64_t)v4);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v11[0] = 0x3A64494344555BLL;
    v11[1] = 0xE700000000000000;
    sub_1BC62A778();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    v9 = v11[0];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

uint64_t sub_1BC408C7C(uint64_t a1, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
    return 0;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return a3;
}

ValueMetadata *type metadata accessor for UserDomainConceptFeedItemIdentifierFactory()
{
  return &type metadata for UserDomainConceptFeedItemIdentifierFactory;
}

uint64_t sub_1BC408D3C(uint64_t a1)
{
  uint64_t result;

  result = 0xD000000000000012;
  switch(a1)
  {
    case 0:
    case 10:
      return result;
    case 1:
      result = 0xD000000000000014;
      break;
    case 2:
      result = 0xD00000000000001ELL;
      break;
    case 3:
      result = 0xD000000000000016;
      break;
    case 4:
      result = 0xD000000000000025;
      break;
    case 5:
      result = 0xD000000000000024;
      break;
    case 6:
      result = 0xD000000000000015;
      break;
    case 7:
      result = 0xD000000000000016;
      break;
    case 8:
      result = 0xD000000000000011;
      break;
    case 9:
      result = 0x6E4974704F524849;
      break;
    case 11:
      result = 0x41646574656C6544;
      break;
    case 12:
      result = 0x6465646172677055;
      break;
    default:
      result = sub_1BC62D5C8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t OnboardingFunnelSteps.init(rawValue:)(unint64_t a1)
{
  return sub_1BC409050(a1);
}

unint64_t sub_1BC408EC4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1BC409050(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_1BC408EF4(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 1;
  result = 0x6D6D75536D6F7246;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0x776F72426D6F7246;
      break;
    case 2:
      result = 0x666F72506D6F7246;
      break;
    case 3:
      result = 0x70416E496D6F7246;
      break;
    case 4:
      result = 0x706565446D6F7246;
      break;
    case 5:
      result = 0x726168536D6F7246;
      break;
    case 6:
      result = 0xD000000000000014;
      break;
    case 7:
      result = 0xD000000000000012;
      break;
    case 8:
      result = 0xD000000000000013;
      break;
    default:
      result = 0x436E776F6E6B6E55;
      break;
  }
  return result;
}

unint64_t sub_1BC409050(unint64_t result)
{
  if (result > 0xC)
    return 0;
  return result;
}

unint64_t sub_1BC409064()
{
  unint64_t result;

  result = qword_1EF42E330;
  if (!qword_1EF42E330)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for OnboardingFunnelSteps, &type metadata for OnboardingFunnelSteps);
    atomic_store(result, (unint64_t *)&qword_1EF42E330);
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingFunnelSteps()
{
  return &type metadata for OnboardingFunnelSteps;
}

BOOL static ChartType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ChartType.hash(into:)()
{
  return sub_1BC62D67C();
}

uint64_t ChartType.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

_QWORD *ChartItem.__allocating_init(chartDefining:chartPoints:overlayViewController:healthStore:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;

  v8 = (_QWORD *)swift_allocObject();
  type metadata accessor for ChartCell();
  sub_1BC379B20(&qword_1EF42E338, 255, (uint64_t (*)(uint64_t))type metadata accessor for ChartCell, (uint64_t)&unk_1BC647FFC);
  v8[10] = sub_1BC62ADA8();
  v8[11] = v9;
  sub_1BC34E718(a1, (uint64_t)(v8 + 2));
  v8[7] = a2;
  v8[8] = a3;
  v8[9] = a4;
  return v8;
}

_QWORD *ChartItem.init(chartDefining:chartPoints:overlayViewController:healthStore:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;

  type metadata accessor for ChartCell();
  sub_1BC379B20(&qword_1EF42E338, 255, (uint64_t (*)(uint64_t))type metadata accessor for ChartCell, (uint64_t)&unk_1BC647FFC);
  v4[10] = sub_1BC62ADA8();
  v4[11] = v9;
  sub_1BC34E718(a1, (uint64_t)(v4 + 2));
  v4[7] = a2;
  v4[8] = a3;
  v4[9] = a4;
  return v4;
}

uint64_t ChartItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC409298()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[10];
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1Tm(v0 + 2, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t ChartItem.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ChartItem.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC4093A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(*(_QWORD *)v0 + 16), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v1;
}

_QWORD *ChartDataSource.__allocating_init(chartDefining:chartType:chartPointPublisher:chartSetSize:healthStore:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v6;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v12 = a5 & 1;
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a1, v13);
  v16 = sub_1BC40A128(v15, a2, a3, a4, v12, a6, v6, v13, v14);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v16;
}

_QWORD *ChartDataSource.init(chartDefining:chartType:chartPointPublisher:chartSetSize:healthStore:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v6;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v12 = a5 & 1;
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a1, v13);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  v19 = sub_1BC409D50((uint64_t)v17, a2, a3, a4, v12, a6, v6, v13, v14);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v19;
}

void sub_1BC4095A0(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  char v11;
  id v12;
  _QWORD *v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, _QWORD, void (*)(char *), _QWORD *);
  _QWORD *v15;
  _QWORD v16[3];
  char v17;
  uint64_t v18;
  uint64_t v19;

  v8 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v10 = Strong;
    v11 = a5 & 1;
    v12 = objc_msgSend(*(id *)(Strong + 88), sel_CHRRoomApplicationItems);
    v16[2] = v10;
    v17 = v11;
    v18 = MEMORY[0x1E0C80A78](v12);
    v19 = v8;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, void (*)(char *), _QWORD *))((*MEMORY[0x1E0DEEDD8] & *v13) + 0x60);
    v15 = v13;
    v14(v10 + 40, v8, a3, a4 & 1, sub_1BC40A3CC, v16);
    swift_release();

  }
}

void sub_1BC4096C8(char *a1, uint64_t a2, char a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  id v18;
  id v19;
  uint64_t inited;
  id v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char v31;
  __int128 v32[2];

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - v11;
  if (!a1)
  {
    sub_1BC546A60(1);
    return;
  }
  v13 = a3 & 1;
  if ((a3 & 1) != 0)
  {
    v16 = a1;
    goto LABEL_9;
  }
  if (!*(_QWORD *)&a1[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource]
    && !*(_QWORD *)&a1[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource])
  {
    v26 = *(_QWORD *)&a1[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources];
    if (v26 >> 62)
    {
      v29 = a1;
      swift_bridgeObjectRetain();
      v27 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      v28 = a1;
    }
    if (v27 > 1)
      goto LABEL_6;
LABEL_9:
    v15 = 0;
    goto LABEL_10;
  }
  v14 = a1;
LABEL_6:
  v15 = 1;
LABEL_10:
  sub_1BC34E674(a2 + 40, (uint64_t)v32);
  v31 = v13;
  sub_1BC3462D8((uint64_t)&a1[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_latestChartableDate], (uint64_t)v12);
  objc_allocWithZone((Class)type metadata accessor for ChartOverlayViewController());
  v17 = a1;
  v18 = a4;
  v19 = sub_1BC5257AC((uint64_t)v32, v17, &v31, v15, (uint64_t)v18, (uint64_t)v12);

  sub_1BC34D844();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6396B0;
  sub_1BC34E674(a2 + 40, (uint64_t)v32);
  swift_bridgeObjectRetain();
  v21 = v19;
  v22 = objc_msgSend(v18, sel_healthStore);
  type metadata accessor for ChartItem();
  v23 = (_QWORD *)swift_allocObject();
  type metadata accessor for ChartCell();
  sub_1BC379B20(&qword_1EF42E338, 255, (uint64_t (*)(uint64_t))type metadata accessor for ChartCell, (uint64_t)&unk_1BC647FFC);
  v23[10] = sub_1BC62ADA8();
  v23[11] = v24;
  sub_1BC34E718(v32, (uint64_t)(v23 + 2));
  v23[7] = a5;
  v23[8] = v21;
  v23[9] = v22;
  *(_QWORD *)(inited + 32) = v23;
  *(_QWORD *)&v32[0] = inited;
  sub_1BC62C890();
  v25 = *(_QWORD *)&v32[0];
  sub_1BC62AF4C();
  sub_1BC62B2AC();
  swift_release();
  sub_1BC62AF4C();
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
  sub_1BC3D2294(v25);
  swift_bridgeObjectRelease();
  sub_1BC62B270();
  sub_1BC62B2D0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC546A60(0);

}

uint64_t sub_1BC409A64()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);

  return swift_release();
}

uint64_t ChartDataSource.deinit()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 112))
  {
    swift_retain();
    sub_1BC62BEAC();
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);

  swift_release();
  return v0;
}

uint64_t ChartDataSource.__deallocating_deinit()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 112))
  {
    swift_retain();
    sub_1BC62BEAC();
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC409B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC62B12C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62B108();
  v4 = sub_1BC62B090();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void ChartDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void ChartDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC409C54()
{
  MEMORY[0x1BCCF35C4](&protocol conformance descriptor for ChartDataSource);
  return sub_1BC62B834();
}

Swift::Void __swiftcall ChartDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for ChartCell();
  sub_1BC379B20(&qword_1EF42E338, 255, (uint64_t (*)(uint64_t))type metadata accessor for ChartCell, (uint64_t)&unk_1BC647FFC);
  sub_1BC62CB48();
}

uint64_t sub_1BC409CF8()
{
  type metadata accessor for ChartCell();
  sub_1BC379B20(&qword_1EF42E338, 255, (uint64_t (*)(uint64_t))type metadata accessor for ChartCell, (uint64_t)&unk_1BC647FFC);
  return sub_1BC62CB48();
}

_QWORD *sub_1BC409D50(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v11;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *boxed_opaque_existential_1;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43[5];

  v11 = a6;
  v36 = a3;
  v37 = a6;
  v35 = a4;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v34 - v17;
  sub_1BC40A3DC();
  v20 = *(_QWORD *)(v19 - 8);
  v39 = v19;
  v40 = v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[3] = a8;
  v43[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v43);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1, a1, a8);
  v38 = *a2;
  *(_QWORD *)(a7 + 112) = 0;
  sub_1BC34E674((uint64_t)v43, a7 + 40);
  v24 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartabilityDeterminer());
  swift_retain();
  *(_QWORD *)(a7 + 80) = objc_msgSend(v24, sel_init);
  *(_QWORD *)(a7 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F748]), sel_initWithHealthStore_, v11);
  *(_QWORD *)(a7 + 96) = a4;
  LOBYTE(v11) = a5 & 1;
  *(_BYTE *)(a7 + 104) = a5 & 1;
  swift_release();
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BC639590;
  sub_1BC62B270();
  v26 = ConceptsDataSource.init(arrangedSections:isHidden:)(v25, 0);
  swift_retain();
  sub_1BC546A60(1);
  v42 = v36;
  sub_1BC35A280();
  v41 = (id)sub_1BC62CC74();
  v27 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v18, 1, 1, v27);
  sub_1BC40A4AC();
  sub_1BC379B20(&qword_1EF42E558, 255, (uint64_t (*)(uint64_t))sub_1BC40A4AC, MEMORY[0x1E0C95D90]);
  sub_1BC379B20((unint64_t *)&qword_1ED6A4E00, 255, (uint64_t (*)(uint64_t))sub_1BC35A280, MEMORY[0x1E0DEF7F8]);
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v18);

  v28 = swift_allocObject();
  swift_weakInit();
  v29 = swift_allocObject();
  v30 = v35;
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = v30;
  *(_BYTE *)(v29 + 32) = (_BYTE)v11;
  *(_BYTE *)(v29 + 33) = v38;
  sub_1BC379B20(qword_1EF42E560, 255, (uint64_t (*)(uint64_t))sub_1BC40A3DC, MEMORY[0x1E0C95CB8]);
  v31 = v39;
  v32 = sub_1BC62C0BC();
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v31);
  v26[14] = v32;
  swift_release();
  return v26;
}

_QWORD *sub_1BC40A128(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  void *v21;

  v21 = a6;
  v14 = a5 & 1;
  v15 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ChartDataSource();
  v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, a8);
  return sub_1BC409D50((uint64_t)v17, a2, a3, a4, v14, v21, v18, a8, a9);
}

unint64_t sub_1BC40A20C()
{
  unint64_t result;

  result = qword_1EF42E340;
  if (!qword_1EF42E340)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for ChartType, &type metadata for ChartType);
    atomic_store(result, (unint64_t *)&qword_1EF42E340);
  }
  return result;
}

uint64_t sub_1BC40A250(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF42E348, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChartDataSource, (uint64_t)&protocol conformance descriptor for ChartDataSource);
}

uint64_t type metadata accessor for ChartDataSource()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for ChartType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC40A2E8 + 4 * byte_1BC63DCC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC40A31C + 4 * asc_1BC63DCC0[v4]))();
}

uint64_t sub_1BC40A31C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC40A324(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC40A32CLL);
  return result;
}

uint64_t sub_1BC40A338(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC40A340);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC40A344(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC40A34C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChartType()
{
  return &type metadata for ChartType;
}

uint64_t type metadata accessor for ChartItem()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChartItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChartItem.__allocating_init(chartDefining:chartPoints:overlayViewController:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of ChartItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t method lookup function for ChartDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChartDataSource.__allocating_init(chartDefining:chartType:chartPointPublisher:chartSetSize:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v5 + 216))(a1, a2, a3, a4, a5 & 1);
}

uint64_t dispatch thunk of ChartDataSource.layout(for:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

void sub_1BC40A3CC(char *a1)
{
  uint64_t v1;

  sub_1BC4096C8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_1BC40A3DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42E540)
  {
    sub_1BC40A4AC();
    sub_1BC35A280();
    sub_1BC379B20(&qword_1EF42E558, 255, (uint64_t (*)(uint64_t))sub_1BC40A4AC, MEMORY[0x1E0C95D90]);
    sub_1BC379B20((unint64_t *)&qword_1ED6A4E00, 255, (uint64_t (*)(uint64_t))sub_1BC35A280, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC62BE70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42E540);
  }
}

void sub_1BC40A4AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42E548)
  {
    sub_1BC357158(255, &qword_1EF42E550, (uint64_t (*)(uint64_t))sub_1BC40A528, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC62BE94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42E548);
  }
}

unint64_t sub_1BC40A528()
{
  unint64_t result;

  result = qword_1EF42C960;
  if (!qword_1EF42C960)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42C960);
  }
  return result;
}

uint64_t sub_1BC40A57C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC40A5A0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC40A5C4(uint64_t *a1)
{
  uint64_t v1;

  sub_1BC4095A0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_BYTE *)(v1 + 33));
}

_UNKNOWN **sub_1BC40A5D4()
{
  return &off_1E74D8938;
}

id BloodPressureChartConfiguration.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

unint64_t sub_1BC40A618()
{
  return sub_1BC40A620();
}

unint64_t sub_1BC40A620()
{
  unint64_t result;

  result = qword_1EF42E708;
  if (!qword_1EF42E708)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42E708);
  }
  return result;
}

uint64_t sub_1BC40A68C()
{
  uint64_t result;

  type metadata accessor for BloodPressureDataTransformer();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

id BloodPressureChartConfiguration.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureChartConfiguration();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for BloodPressureChartConfiguration()
{
  return objc_opt_self();
}

id BloodPressureChartConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureChartConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for BloodPressureChartConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BloodPressureChartConfiguration.chartControllerClass.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of BloodPressureChartConfiguration.shouldShowOutOfRangeOverlay.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of BloodPressureChartConfiguration.dataTransformer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t sub_1BC40A7D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  sub_1BC3B2CF8(0, &qword_1EF42E8B0, (uint64_t (*)(void))sub_1BC41335C, (uint64_t)&_s13FormattedDataV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC41335C();
  sub_1BC62D6F4();
  LOBYTE(v13) = 0;
  sub_1BC62D4D8();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1BC62D4D8();
    LOBYTE(v13) = 2;
    sub_1BC62D4C0();
    v13 = *(_QWORD *)(v3 + 48);
    v12 = 3;
    sub_1BC34B508(0, &qword_1EF42E898, (uint64_t)&_s16FormattedSectionVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC41345C();
    sub_1BC62D4FC();
    v13 = *(_QWORD *)(v3 + 56);
    v12 = 4;
    sub_1BC3B9200();
    sub_1BC4130E0(&qword_1EF42E7E0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1BC62D4FC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BC40A9EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC40AA14 + 4 * byte_1BC63E190[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1BC40AA14()
{
  return 0x6942664F65746164;
}

uint64_t sub_1BC40AA34()
{
  return 0x676E615265746164;
}

uint64_t sub_1BC40AA50()
{
  return 0x736E6F6974636573;
}

uint64_t sub_1BC40AA68()
{
  return 0x72656469766F7270;
}

uint64_t sub_1BC40AA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC4104D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC40AAAC(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1BC40AAB8()
{
  sub_1BC41335C();
  return sub_1BC62D700();
}

uint64_t sub_1BC40AAE0()
{
  sub_1BC41335C();
  return sub_1BC62D70C();
}

double sub_1BC40AB08@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1BC410704(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1BC40AB48(_QWORD *a1)
{
  return sub_1BC40A7D0(a1);
}

uint64_t sub_1BC40AB5C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1BC40E530(v7, (uint64_t)v8) & 1;
}

uint64_t sub_1BC40ABA4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12[2];
  char v13;

  v3 = v1;
  sub_1BC3B2CF8(0, &qword_1EF42E7B0, (uint64_t (*)(void))sub_1BC410EF4, (uint64_t)&_s16FormattedSectionV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC410EF4();
  sub_1BC62D6F4();
  v11[0] = 0;
  sub_1BC62D4D8();
  if (!v2)
  {
    v11[0] = 1;
    sub_1BC62D4D8();
    sub_1BC410F7C((uint64_t *)(v3 + 32), (uint64_t)v12);
    sub_1BC410F7C(v12, (uint64_t)v11);
    v13 = 2;
    sub_1BC410F94();
    sub_1BC62D4FC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BC40AD28()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C746974;
  if (*v0 != 1)
    v1 = 0x7364726F636572;
  if (*v0)
    return v1;
  else
    return 0x64496567616D69;
}

uint64_t sub_1BC40AD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC410B30(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC40ADA4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1BC40ADB0()
{
  sub_1BC410EF4();
  return sub_1BC62D700();
}

uint64_t sub_1BC40ADD8()
{
  sub_1BC410EF4();
  return sub_1BC62D70C();
}

double sub_1BC40AE00@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_1BC410C7C(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1BC40AE40(_QWORD *a1)
{
  return sub_1BC40ABA4(a1);
}

uint64_t sub_1BC40AE78(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(__int128 *)((char *)a1 + 25);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)a2 + 25);
  return sub_1BC40E5F8(&v5, &v7) & 1;
}

void sub_1BC40AEC0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[16];
  uint64_t v15;

  v15 = a3;
  v14[13] = a2;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC3B2CF8(0, &qword_1EF42EA90, (uint64_t (*)(void))sub_1BC414034, (uint64_t)&_s16FormattedRecordsO18MetadataCodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v14[11] = *(_QWORD *)(v5 - 8);
  v14[12] = v5;
  MEMORY[0x1E0C80A78](v5);
  v14[10] = (char *)v14 - v6;
  sub_1BC3B2CF8(0, &qword_1EF42EA98, (uint64_t (*)(void))sub_1BC414078, (uint64_t)&_s16FormattedRecordsO21ThreeValuesCodingKeysON, v4);
  v14[8] = *(_QWORD *)(v7 - 8);
  v14[9] = v7;
  MEMORY[0x1E0C80A78](v7);
  v14[7] = (char *)v14 - v8;
  sub_1BC3B2CF8(0, &qword_1EF42EAA0, (uint64_t (*)(void))sub_1BC4140BC, (uint64_t)&_s16FormattedRecordsO22ValueInRangeCodingKeysON, v4);
  v14[5] = *(_QWORD *)(v9 - 8);
  v14[6] = v9;
  MEMORY[0x1E0C80A78](v9);
  v14[4] = (char *)v14 - v10;
  sub_1BC3B2CF8(0, &qword_1EF42EAA8, (uint64_t (*)(void))sub_1BC414100, (uint64_t)&_s16FormattedRecordsO15ValueCodingKeysON, v4);
  v14[2] = *(_QWORD *)(v11 - 8);
  v14[3] = v11;
  MEMORY[0x1E0C80A78](v11);
  sub_1BC3B2CF8(0, &qword_1EF42EAB0, (uint64_t (*)(void))sub_1BC414144, (uint64_t)&_s16FormattedRecordsO15PlainCodingKeysON, v4);
  v14[1] = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1BC3B2CF8(0, &qword_1EF42EAB8, (uint64_t (*)(void))sub_1BC414188, (uint64_t)&_s16FormattedRecordsO10CodingKeysON, v4);
  v14[14] = *(_QWORD *)(v13 - 8);
  v14[15] = v13;
  MEMORY[0x1E0C80A78](v13);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC414188();
  sub_1BC62D6F4();
  __asm { BR              X10 }
}

uint64_t sub_1BC40B140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 72) = 0;
  sub_1BC414144();
  v4 = *(_QWORD *)(v3 - 104);
  sub_1BC62D4B4();
  *(_QWORD *)(v3 - 72) = *(_QWORD *)(v3 - 120);
  sub_1BC4143B0(0, &qword_1EF42EA78, &qword_1EF429B70, (uint64_t)&_s15FormattedRecordVN);
  sub_1BC414C30();
  sub_1BC62D4FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 216) + 8))(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 8))(v0, v4);
}

uint64_t sub_1BC40B490()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC40B4BC + 4 * byte_1BC63E19A[*v0]))(0x6E69616C70, 0xE500000000000000);
}

uint64_t sub_1BC40B4BC()
{
  return 0x65756C6176;
}

uint64_t sub_1BC40B4CC()
{
  return 0x526E4965756C6176;
}

uint64_t sub_1BC40B4EC()
{
  return 0x6C61566565726874;
}

uint64_t sub_1BC40B50C()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1BC40B524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC410FD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC40B548()
{
  sub_1BC414188();
  return sub_1BC62D700();
}

uint64_t sub_1BC40B570()
{
  sub_1BC414188();
  return sub_1BC62D70C();
}

uint64_t sub_1BC40B5A0()
{
  return 12383;
}

void sub_1BC40B5B0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BC40B5BC()
{
  sub_1BC414034();
  return sub_1BC62D700();
}

uint64_t sub_1BC40B5E4()
{
  sub_1BC414034();
  return sub_1BC62D70C();
}

uint64_t sub_1BC40B60C()
{
  sub_1BC414144();
  return sub_1BC62D700();
}

uint64_t sub_1BC40B634()
{
  sub_1BC414144();
  return sub_1BC62D70C();
}

uint64_t sub_1BC40B65C()
{
  sub_1BC414078();
  return sub_1BC62D700();
}

uint64_t sub_1BC40B684()
{
  sub_1BC414078();
  return sub_1BC62D70C();
}

uint64_t sub_1BC40B6AC()
{
  sub_1BC414100();
  return sub_1BC62D700();
}

uint64_t sub_1BC40B6D4()
{
  sub_1BC414100();
  return sub_1BC62D70C();
}

uint64_t sub_1BC40B6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BC62D574();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BC40B778()
{
  sub_1BC4140BC();
  return sub_1BC62D700();
}

uint64_t sub_1BC40B7A0()
{
  sub_1BC4140BC();
  return sub_1BC62D70C();
}

uint64_t sub_1BC40B7C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_1BC411214(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

void sub_1BC40B7F4(_QWORD *a1)
{
  uint64_t v1;

  sub_1BC40AEC0(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_1BC40B810(uint64_t a1)
{
  return sub_1BC40E4AC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1BC40B828(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  v12[0] = a4;
  v12[1] = a3;
  sub_1BC3B2CF8(0, &qword_1EF42E868, (uint64_t (*)(void))sub_1BC4132D4, (uint64_t)&_s22FormattedRecordKeyDateV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v12 - v9;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC4132D4();
  sub_1BC62D6F4();
  v15 = 0;
  sub_1BC62D4F0();
  if (!v4)
  {
    v14 = 1;
    sub_1BC62D4F0();
    v13 = 2;
    sub_1BC62D4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BC40B988()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x68746E6F6DLL;
  if (*v0 != 1)
    v1 = 7954788;
  if (*v0)
    return v1;
  else
    return 1918985593;
}

uint64_t sub_1BC40B9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC4119B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC40B9F4()
{
  sub_1BC4132D4();
  return sub_1BC62D700();
}

uint64_t sub_1BC40BA1C()
{
  sub_1BC4132D4();
  return sub_1BC62D70C();
}

uint64_t sub_1BC40BA44@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1BC411AE4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1BC40BA70(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BC40B828(a1, *v1, v1[1], v1[2]);
}

BOOL sub_1BC40BA8C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1BC40BABC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v6;
  unsigned int v7;

  if (*a1 < *a2)
    return 1;
  v3 = a1[1];
  v4 = a2[1];
  v6 = v3 == v4 && a1[2] < a2[2];
  v7 = v3 < v4 || v6;
  if (*a1 == *a2)
    return v7;
  else
    return 0;
}

uint64_t sub_1BC40BB00(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  _BOOL4 v9;

  if (*a2 < *a1)
    return 0;
  if (*a2 != *a1)
    return 1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a2[1];
  v6 = a2[2];
  if (v5 == v3)
  {
    v8 = __OFSUB__(v6, v4);
    v7 = v6 - v4 < 0;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v9 = v7 == v8;
  return v5 >= v3 && v9;
}

uint64_t sub_1BC40BB44(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  _BOOL4 v9;

  if (*a1 < *a2)
    return 0;
  if (*a1 != *a2)
    return 1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a2[1];
  v6 = a2[2];
  if (v3 == v5)
  {
    v8 = __OFSUB__(v4, v6);
    v7 = v4 - v6 < 0;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v9 = v7 == v8;
  return v3 >= v5 && v9;
}

uint64_t sub_1BC40BB88(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v6;
  unsigned int v7;

  if (*a2 < *a1)
    return 1;
  v3 = a1[1];
  v4 = a2[1];
  v6 = v4 == v3 && a2[2] < a1[2];
  v7 = v4 < v3 || v6;
  if (*a2 == *a1)
    return v7;
  else
    return 0;
}

uint64_t sub_1BC40BBCC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];
  _BYTE v24[32];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int128 v29;

  sub_1BC40BE10();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  v8 = v2[1];
  v10 = v2[2];
  v11 = *((unsigned __int8 *)v2 + 24);
  sub_1BC36EFF0(a1, (uint64_t)v24, &qword_1EF42C8C0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  if (v11 == 1)
  {
    sub_1BC36EFF0((uint64_t)v24, (uint64_t)&v25, &qword_1EF42C8C0, (uint64_t)&_s22FormattedRecordKeyDateVN);
    if (v28 == 1)
      goto LABEL_3;
    return 1;
  }
  sub_1BC36EFF0((uint64_t)v24, (uint64_t)&v25, &qword_1EF42C8C0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  if ((v28 & 1) != 0)
    return -1;
  if (v9 < v25)
    return 1;
  if (v9 != v25)
  {
    if (v25 < v9)
      return -1;
    goto LABEL_3;
  }
  if (v8 < v26 || v8 == v26 && v10 < v27)
    return 1;
  v19 = v8 == v26 && v27 < v10;
  v16 = -1;
  if (v26 >= v8 && !v19)
  {
LABEL_3:
    v13 = v2[4];
    v12 = v2[5];
    sub_1BC36EFF0(a1 + 32, (uint64_t)v23, (unint64_t *)&qword_1EF4290E0, MEMORY[0x1E0DEA968]);
    if (!v12)
    {
      sub_1BC36EFF0((uint64_t)v23, (uint64_t)&v29, (unint64_t *)&qword_1EF4290E0, MEMORY[0x1E0DEA968]);
      return *((_QWORD *)&v29 + 1) != 0;
    }
    sub_1BC36EFF0((uint64_t)v23, (uint64_t)&v29, (unint64_t *)&qword_1EF4290E0, MEMORY[0x1E0DEA968]);
    if (*((_QWORD *)&v29 + 1))
    {
      v20 = v29;
      v21 = v13;
      v22 = v12;
      v14 = sub_1BC62A820();
      v15 = *(_QWORD *)(v14 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v7, a2, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
      sub_1BC36E2AC();
      v16 = sub_1BC62D064();
      sub_1BC3B3154((uint64_t)v7);
      return v16;
    }
    return -1;
  }
  return v16;
}

void sub_1BC40BE10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF434570)
  {
    sub_1BC62A820();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF434570);
  }
}

uint64_t sub_1BC40BE64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[32];
  _BYTE v12[48];

  v3 = v1;
  sub_1BC3B2CF8(0, &qword_1EF42E848, (uint64_t (*)(void))sub_1BC413208, (uint64_t)&_s18FormattedRecordKeyV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC413208();
  sub_1BC62D6F4();
  sub_1BC36EFF0(v3, (uint64_t)v12, &qword_1EF42C8C0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  sub_1BC36EFF0((uint64_t)v12, (uint64_t)v11, &qword_1EF42C8C0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  v12[47] = 0;
  sub_1BC413290();
  sub_1BC62D4CC();
  if (!v2)
  {
    v11[0] = 1;
    sub_1BC62D4C0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BC40BFDC()
{
  uint64_t v0;
  _BYTE v2[32];
  uint64_t v3;
  char v4;

  sub_1BC62D670();
  sub_1BC36EFF0(v0, (uint64_t)v2, &qword_1EF42C8C0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  sub_1BC36EFF0((uint64_t)v2, (uint64_t)&v3, &qword_1EF42C8C0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  if ((v4 & 1) == 0)
  {
    sub_1BC62D688();
    sub_1BC62D67C();
    sub_1BC62D67C();
    sub_1BC62D67C();
    if (*(_QWORD *)(v0 + 40))
      goto LABEL_3;
LABEL_5:
    sub_1BC62D688();
    return sub_1BC62D6AC();
  }
  sub_1BC62D688();
  if (!*(_QWORD *)(v0 + 40))
    goto LABEL_5;
LABEL_3:
  sub_1BC62D688();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  sub_1BC3CC428(v0);
  return sub_1BC62D6AC();
}

uint64_t sub_1BC40C0F8()
{
  _BYTE *v0;

  if (*v0)
    return 0x72656469766F7270;
  else
    return 1702125924;
}

uint64_t sub_1BC40C12C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC411C7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC40C150()
{
  sub_1BC413208();
  return sub_1BC62D700();
}

uint64_t sub_1BC40C178()
{
  sub_1BC413208();
  return sub_1BC62D70C();
}

uint64_t sub_1BC40C1A0()
{
  return sub_1BC40BFDC();
}

uint64_t sub_1BC40C1D8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    sub_1BC62D688();
    if (v1)
    {
LABEL_3:
      sub_1BC62D688();
      swift_bridgeObjectRetain();
      sub_1BC62C740();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1BC62D688();
    sub_1BC62D67C();
    sub_1BC62D67C();
    sub_1BC62D67C();
    if (v1)
      goto LABEL_3;
  }
  return sub_1BC62D688();
}

uint64_t sub_1BC40C28C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  sub_1BC62D670();
  if ((v1 & 1) == 0)
  {
    sub_1BC62D688();
    sub_1BC62D67C();
    sub_1BC62D67C();
    sub_1BC62D67C();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_1BC62D688();
    return sub_1BC62D6AC();
  }
  sub_1BC62D688();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_1BC62D688();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

BOOL sub_1BC40C364(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_1BC40E7A8((uint64_t)v7, (uint64_t)v8);
}

double sub_1BC40C3A8@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1BC411D5C(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1BC40C3E8(_QWORD *a1)
{
  return sub_1BC40BE64(a1);
}

uint64_t sub_1BC40C420(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;

  sub_1BC3B2CF8(0, &qword_1EF42E828, (uint64_t (*)(void))sub_1BC4131C4, (uint64_t)&_s20FormattedRecordValueV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC4131C4();
  sub_1BC62D6F4();
  v12 = 0;
  sub_1BC62D4D8();
  if (!v1)
  {
    v11 = 1;
    sub_1BC62D4D8();
    v10 = 2;
    sub_1BC62D4D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BC40C578()
{
  return 0x656C746974;
}

uint64_t sub_1BC40C58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BC62D574();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BC40C618()
{
  sub_1BC413318();
  return sub_1BC62D700();
}

uint64_t sub_1BC40C640()
{
  sub_1BC413318();
  return sub_1BC62D70C();
}

uint64_t sub_1BC40C668@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;

  v15 = a2;
  sub_1BC3B2CF8(0, &qword_1EF42E870, (uint64_t (*)(void))sub_1BC413318, (uint64_t)&_s15FormattedRecordV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC413318();
  sub_1BC62D6DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v9 = v15;
  v10 = sub_1BC62D46C();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  *v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1BC40C7AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC3B2CF8(0, &qword_1EF42E880, (uint64_t (*)(void))sub_1BC413318, (uint64_t)&_s15FormattedRecordV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC413318();
  sub_1BC62D6F4();
  sub_1BC62D4D8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BC40C8B0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BC62D574();
}

uint64_t sub_1BC40C8E0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65756C6176;
  if (*v0 != 1)
    v1 = 1953066613;
  if (*v0)
    return v1;
  else
    return 0x656C746974;
}

uint64_t sub_1BC40C92C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC411F14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC40C950()
{
  sub_1BC4131C4();
  return sub_1BC62D700();
}

uint64_t sub_1BC40C978()
{
  sub_1BC4131C4();
  return sub_1BC62D70C();
}

double sub_1BC40C9A0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1BC412048(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1BC40C9E0(_QWORD *a1)
{
  return sub_1BC40C420(a1);
}

uint64_t sub_1BC40C9F4(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_1BC40E83C(v7, v8) & 1;
}

uint64_t sub_1BC40CA38(__int128 *a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];
  __int128 v20;
  __int128 v21;

  sub_1BC40BE10();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62C74C();
  result = sub_1BC62C74C();
  if (__OFADD__(v8, result))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + result < 15)
    goto LABEL_5;
  v10 = *((_QWORD *)v2 + 7);
  if ((v10 & 0x2000000000000000) != 0)
  {
    if ((v10 & 0xF00000000000000) != 0)
      goto LABEL_5;
  }
  else if ((v2[3] & 0xFFFFFFFFFFFFLL) != 0)
  {
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  v11 = v2[4] & 1;
LABEL_6:
  v12 = sub_1BC62C74C();
  result = sub_1BC62C74C();
  if (!__OFADD__(v12, result))
  {
    if (v12 + result < 15)
      goto LABEL_10;
    v13 = *((_QWORD *)a1 + 7);
    if ((v13 & 0x2000000000000000) != 0)
    {
      if ((v13 & 0xF00000000000000) != 0)
      {
LABEL_10:
        if ((v11 & 1) != 0)
          return 1;
LABEL_19:
        v15 = *v2;
        v16 = *v2;
        v20 = *a1;
        v21 = v15;
        v19[0] = *a1;
        v19[1] = v16;
        v17 = sub_1BC62A820();
        v18 = *(_QWORD *)(v17 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v7, a2, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v7, 0, 1, v17);
        sub_1BC34B650((uint64_t)&v21);
        sub_1BC34B650((uint64_t)&v20);
        sub_1BC36E2AC();
        v14 = sub_1BC62D064();
        sub_1BC3B3154((uint64_t)v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    else if ((a1[3] & 0xFFFFFFFFFFFFLL) != 0)
    {
      goto LABEL_10;
    }
    if (v11)
    {
      if ((a1[4] & 1) == 0)
        return 1;
    }
    else if ((a1[4] & 1) != 0)
    {
      return -1;
    }
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1BC40CC20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;

  sub_1BC3B2CF8(0, &qword_1EF42E810, (uint64_t (*)(void))sub_1BC413180, (uint64_t)&_s27FormattedRecordValueInRangeV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC413180();
  sub_1BC62D6F4();
  v14 = 0;
  sub_1BC62D4D8();
  if (!v1)
  {
    v13 = 1;
    sub_1BC62D4D8();
    v12 = 2;
    sub_1BC62D4D8();
    v11 = 3;
    sub_1BC62D4D8();
    v10 = 4;
    sub_1BC62D4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BC40CDC8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC40CDF4 + 4 * byte_1BC63E19F[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1BC40CDF4()
{
  return 0x65756C6176;
}

uint64_t sub_1BC40CE04()
{
  return 1953066613;
}

uint64_t sub_1BC40CE14()
{
  return 0x65676E6172;
}

uint64_t sub_1BC40CE24()
{
  return 0x65676E61526E69;
}

uint64_t sub_1BC40CE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC4122A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC40CE60()
{
  sub_1BC413180();
  return sub_1BC62D700();
}

uint64_t sub_1BC40CE88()
{
  sub_1BC413180();
  return sub_1BC62D70C();
}

__n128 sub_1BC40CEB0@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  char v7;

  sub_1BC412494(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_BYTE *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1BC40CF00(_QWORD *a1)
{
  return sub_1BC40CC20(a1);
}

uint64_t sub_1BC40CF14(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  char v8;
  _OWORD v9[4];
  char v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_BYTE *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_BYTE *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1BC40E9EC((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1BC40CF6C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;

  sub_1BC3B2CF8(0, &qword_1EF42E7F8, (uint64_t (*)(void))sub_1BC41313C, (uint64_t)&_s22FormattedRecord3ValuesV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC41313C();
  sub_1BC62D6F4();
  v14 = 0;
  sub_1BC62D4D8();
  if (!v1)
  {
    v13 = 1;
    sub_1BC62D4D8();
    v12 = 2;
    sub_1BC62D4D8();
    v11 = 3;
    sub_1BC62D4D8();
    v10 = 4;
    sub_1BC62D4C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BC40D114()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC40D140 + 4 * byte_1BC63E1A4[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1BC40D140()
{
  return 0x3165756C6176;
}

uint64_t sub_1BC40D154()
{
  return 0x3265756C6176;
}

uint64_t sub_1BC40D168()
{
  return 0x3365756C6176;
}

uint64_t sub_1BC40D17C()
{
  return 0x72656469766F7270;
}

uint64_t sub_1BC40D194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC41281C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC40D1B8()
{
  sub_1BC41313C();
  return sub_1BC62D700();
}

uint64_t sub_1BC40D1E0()
{
  sub_1BC41313C();
  return sub_1BC62D70C();
}

__n128 sub_1BC40D208@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[5];

  sub_1BC412A18(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1BC40D250(_QWORD *a1)
{
  return sub_1BC40CF6C(a1);
}

uint64_t sub_1BC40D264(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_1BC40E8DC(v8, v9) & 1;
}

uint64_t sub_1BC40D2BC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  v13 = a4;
  sub_1BC3B2CF8(0, &qword_1EF42E7D8, (uint64_t (*)(void))sub_1BC41309C, (uint64_t)&_s23FormattedRecordMetadataV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC41309C();
  sub_1BC62D6F4();
  v17 = 0;
  v10 = v14;
  sub_1BC62D4D8();
  if (!v10)
  {
    v15 = v13;
    v16 = 1;
    sub_1BC3B9200();
    sub_1BC4130E0(&qword_1EF42E7E0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1BC62D4FC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BC40D430()
{
  _BYTE *v0;

  if (*v0)
    return 0x617461646174656DLL;
  else
    return 0x656C746974;
}

uint64_t sub_1BC40D468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC412DB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC40D48C()
{
  sub_1BC41309C();
  return sub_1BC62D700();
}

uint64_t sub_1BC40D4B4()
{
  sub_1BC41309C();
  return sub_1BC62D70C();
}

uint64_t sub_1BC40D4DC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1BC412E9C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1BC40D508(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BC40D2BC(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1BC40D524(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1BC62D574() & 1) != 0)
    return sub_1BC40D584(v2, v3);
  else
    return 0;
}

uint64_t sub_1BC40D584(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  char v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v27)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_22:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1BC558D94(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_1BC62D574();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 3;
  if (v13 >= v27)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1BC40D788(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_23;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_22:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_23:
    v15 = *(_QWORD *)(v3 + 48) + 48 * v11;
    v16 = *(_QWORD *)(v15 + 16);
    v17 = *(unsigned __int8 *)(v15 + 24);
    v19 = *(_QWORD *)(v15 + 32);
    v18 = *(_QWORD *)(v15 + 40);
    v20 = *(_QWORD **)(*(_QWORD *)(v3 + 56) + 8 * v11);
    v32 = *(_OWORD *)v15;
    v33 = v16;
    v34 = v17;
    v35 = v19;
    v36 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1BC558DF8((uint64_t *)&v32);
    v23 = v22;
    sub_1BC3CC428((uint64_t)&v32);
    if ((v23 & 1) == 0)
      goto LABEL_48;
    v24 = *(_QWORD **)(*(_QWORD *)(a2 + 56) + 8 * v21);
    v25 = v24[2];
    if (v25 != v20[2])
      goto LABEL_48;
    if (v25)
      v26 = v24 == v20;
    else
      v26 = 1;
    if (!v26)
    {
      v27 = v24[4] == v20[4] && v24[5] == v20[5];
      if (!v27 && (sub_1BC62D574() & 1) == 0)
        goto LABEL_48;
      if (v25 != 1)
      {
        v28 = v24[6] == v20[6] && v24[7] == v20[7];
        if (!v28 && (sub_1BC62D574() & 1) == 0)
          goto LABEL_48;
        v29 = v25 - 2;
        if (v29)
        {
          v30 = 0;
          while (1)
          {
            v31 = v24[v30 + 8] == v20[v30 + 8] && v24[v30 + 9] == v20[v30 + 9];
            if (!v31 && (sub_1BC62D574() & 1) == 0)
              break;
            v30 += 2;
            if (!--v29)
              goto LABEL_6;
          }
LABEL_48:
          swift_bridgeObjectRelease();
          return 0;
        }
      }
    }
LABEL_6:
    result = swift_bridgeObjectRelease();
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1BC40D9FC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  BOOL v39;
  BOOL v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  if (result == a2)
    return 1;
  v2 = a2;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v41 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v42 = (unint64_t)(v5 + 63) >> 6;
  v43 = result;
  while (v7)
  {
    v8 = __clz(__rbit64(v7));
    v9 = (v7 - 1) & v7;
    v10 = v8 | (v4 << 6);
LABEL_23:
    v14 = *(_QWORD *)(v3 + 48) + 48 * v10;
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(unsigned __int8 *)(v14 + 24);
    v18 = *(_QWORD *)(v14 + 32);
    v17 = *(_QWORD *)(v14 + 40);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v10);
    v49 = *(_OWORD *)v14;
    v50 = v15;
    v51 = v16;
    v52 = v18;
    v53 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1BC558DF8((uint64_t *)&v49);
    v22 = v21;
    sub_1BC3CC428((uint64_t)&v49);
    if ((v22 & 1) == 0)
      goto LABEL_48;
    v23 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v20);
    v24 = *(_QWORD *)(v23 + 16);
    if (v24 != *(_QWORD *)(v19 + 16))
      goto LABEL_48;
    v45 = v9;
    v46 = v4;
    if (v24)
      v25 = v23 == v19;
    else
      v25 = 1;
    if (!v25)
    {
      v26 = 0;
      v47 = v23;
      v48 = v19;
      while (1)
      {
        v27 = *(_QWORD *)(v23 + v26 + 48);
        v28 = *(_QWORD *)(v23 + v26 + 56);
        v29 = *(_QWORD *)(v23 + v26 + 64);
        v30 = *(_QWORD *)(v23 + v26 + 72);
        v31 = (_QWORD *)(v19 + v26);
        v32 = *(_QWORD *)(v19 + v26 + 32);
        v33 = *(_QWORD *)(v19 + v26 + 40);
        v35 = *(_QWORD *)(v19 + v26 + 48);
        v34 = v31[7];
        v36 = v31[8];
        v37 = v31[9];
        v38 = *(_QWORD *)(v23 + v26 + 32) == v32 && *(_QWORD *)(v23 + v26 + 40) == v33;
        if (!v38 && (sub_1BC62D574() & 1) == 0)
          break;
        v39 = v27 == v35 && v28 == v34;
        if (!v39 && (sub_1BC62D574() & 1) == 0)
          break;
        v40 = v29 == v36 && v30 == v37;
        if (!v40 && (sub_1BC62D574() & 1) == 0)
          break;
        v26 += 48;
        --v24;
        v23 = v47;
        v19 = v48;
        if (!v24)
          goto LABEL_6;
      }
LABEL_48:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_6:
    result = swift_bridgeObjectRelease();
    v3 = v43;
    v2 = a2;
    v7 = v45;
    v4 = v46;
  }
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v11 >= v42)
    return 1;
  v12 = *(_QWORD *)(v41 + 8 * v11);
  ++v4;
  if (v12)
    goto LABEL_22;
  v4 = v11 + 1;
  if (v11 + 1 >= v42)
    return 1;
  v12 = *(_QWORD *)(v41 + 8 * v4);
  if (v12)
    goto LABEL_22;
  v4 = v11 + 2;
  if (v11 + 2 >= v42)
    return 1;
  v12 = *(_QWORD *)(v41 + 8 * v4);
  if (v12)
  {
LABEL_22:
    v9 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_23;
  }
  v13 = v11 + 3;
  if (v13 >= v42)
    return 1;
  v12 = *(_QWORD *)(v41 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v42)
      return 1;
    v12 = *(_QWORD *)(v41 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1BC40DCC8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  if (result == a2)
    return 1;
  v2 = a2;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v40 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v41 = (unint64_t)(v5 + 63) >> 6;
  v38 = result;
  while (v7)
  {
    v8 = __clz(__rbit64(v7));
    v9 = (v7 - 1) & v7;
    v10 = v8 | (v4 << 6);
LABEL_23:
    v14 = *(_QWORD *)(v3 + 48) + 48 * v10;
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(unsigned __int8 *)(v14 + 24);
    v18 = *(_QWORD *)(v14 + 32);
    v17 = *(_QWORD *)(v14 + 40);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v10);
    v52 = *(_OWORD *)v14;
    v53 = v15;
    v54 = v16;
    v55 = v18;
    v56 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1BC558DF8((uint64_t *)&v52);
    v22 = v21;
    sub_1BC3CC428((uint64_t)&v52);
    if ((v22 & 1) == 0)
      goto LABEL_46;
    v23 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v20);
    v24 = *(_QWORD *)(v23 + 16);
    if (v24 != *(_QWORD *)(v19 + 16))
      goto LABEL_46;
    v42 = v9;
    v43 = v4;
    if (v24)
      v25 = v23 == v19;
    else
      v25 = 1;
    if (!v25)
    {
      v26 = 0;
      v44 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v20);
      v45 = v19;
      while (1)
      {
        v27 = *(_QWORD *)(v23 + v26 + 48);
        v28 = *(_QWORD *)(v23 + v26 + 56);
        v29 = *(_QWORD *)(v23 + v26 + 64);
        v30 = *(_QWORD *)(v23 + v26 + 72);
        v50 = *(_QWORD *)(v23 + v26 + 88);
        v51 = *(_QWORD *)(v23 + v26 + 80);
        v31 = v19 + v26;
        v32 = *(_QWORD *)(v19 + v26 + 32);
        v33 = *(_QWORD *)(v19 + v26 + 40);
        v34 = *(_QWORD *)(v19 + v26 + 48);
        v35 = *(_QWORD *)(v19 + v26 + 56);
        v37 = *(_QWORD *)(v19 + v26 + 64);
        v36 = *(_QWORD *)(v31 + 72);
        v48 = *(_QWORD *)(v31 + 88);
        v49 = *(_QWORD *)(v31 + 80);
        v46 = *(unsigned __int8 *)(v31 + 96);
        v47 = *(unsigned __int8 *)(v23 + v26 + 96);
        if ((*(_QWORD *)(v23 + v26 + 32) != v32 || *(_QWORD *)(v23 + v26 + 40) != v33) && (sub_1BC62D574() & 1) == 0)
          break;
        if ((v27 != v34 || v28 != v35) && (sub_1BC62D574() & 1) == 0)
          break;
        if ((v29 != v37 || v30 != v36) && (sub_1BC62D574() & 1) == 0)
          break;
        if ((v51 != v49 || v50 != v48) && (sub_1BC62D574() & 1) == 0)
          break;
        v19 = v45;
        if (v47 != v46)
          break;
        v26 += 72;
        --v24;
        v23 = v44;
        if (!v24)
          goto LABEL_6;
      }
LABEL_46:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_6:
    result = swift_bridgeObjectRelease();
    v3 = v38;
    v2 = a2;
    v7 = v42;
    v4 = v43;
  }
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v11 >= v41)
    return 1;
  v12 = *(_QWORD *)(v40 + 8 * v11);
  ++v4;
  if (v12)
    goto LABEL_22;
  v4 = v11 + 1;
  if (v11 + 1 >= v41)
    return 1;
  v12 = *(_QWORD *)(v40 + 8 * v4);
  if (v12)
    goto LABEL_22;
  v4 = v11 + 2;
  if (v11 + 2 >= v41)
    return 1;
  v12 = *(_QWORD *)(v40 + 8 * v4);
  if (v12)
  {
LABEL_22:
    v9 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_23;
  }
  v13 = v11 + 3;
  if (v13 >= v41)
    return 1;
  v12 = *(_QWORD *)(v40 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v41)
      return 1;
    v12 = *(_QWORD *)(v40 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1BC40DFFC(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = *(_QWORD *)(v3 + 48) + 48 * v11;
    v16 = *(_QWORD *)(v15 + 16);
    v17 = *(unsigned __int8 *)(v15 + 24);
    v19 = *(_QWORD *)(v15 + 32);
    v18 = *(_QWORD *)(v15 + 40);
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    v25 = *(_OWORD *)v15;
    v26 = v16;
    v27 = v17;
    v28 = v19;
    v29 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1BC558DF8((uint64_t *)&v25);
    v23 = v22;
    sub_1BC3CC428((uint64_t)&v25);
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = sub_1BC3ED1C0(*(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v21), v20);
    result = swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
      return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BC40E1D0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  if (result == a2)
    return 1;
  v2 = a2;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v35 = result + 64;
  v36 = result;
  v34 = v9;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v10 | (v4 << 6); ; i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    v15 = *(_QWORD *)(v3 + 48) + 48 * i;
    v16 = *(_QWORD *)(v15 + 16);
    v17 = *(unsigned __int8 *)(v15 + 24);
    v19 = *(_QWORD *)(v15 + 32);
    v18 = *(_QWORD *)(v15 + 40);
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * i);
    v39 = *(_OWORD *)v15;
    v40 = v16;
    v41 = v17;
    v42 = v19;
    v43 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1BC558DF8((uint64_t *)&v39);
    v23 = v22;
    sub_1BC3CC428((uint64_t)&v39);
    if ((v23 & 1) == 0
      || (v24 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v21), v25 = *(_QWORD *)(v24 + 16), v25 != *(_QWORD *)(v20 + 16)))
    {
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v25)
      v26 = v24 == v20;
    else
      v26 = 1;
    if (!v26)
    {
      v37 = v8;
      v38 = v4;
      result = swift_bridgeObjectRetain();
      v27 = 0;
      v28 = 0;
      while (v28 < *(_QWORD *)(v20 + 16))
      {
        v29 = *(_QWORD *)(v24 + v27 + 48);
        v30 = *(_QWORD *)(v20 + v27 + 48);
        v31 = *(_QWORD *)(v24 + v27 + 32) == *(_QWORD *)(v20 + v27 + 32)
           && *(_QWORD *)(v24 + v27 + 40) == *(_QWORD *)(v20 + v27 + 40);
        if (!v31 && (sub_1BC62D574() & 1) == 0)
          goto LABEL_40;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32 = sub_1BC40D584(v29, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v32 & 1) == 0)
        {
LABEL_40:
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
        ++v28;
        v27 += 24;
        if (v25 == v28)
        {
          swift_bridgeObjectRelease();
          v2 = a2;
          v9 = v34;
          v5 = v35;
          v3 = v36;
          v8 = v37;
          v4 = v38;
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
LABEL_28:
    result = swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_6;
LABEL_7:
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_44;
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_20:
    v8 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1BC40E4AC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1BC40E4C8 + 4 * byte_1BC63E1A9[a2]))();
}

uint64_t sub_1BC40E4C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
    return 0;
  else
    return sub_1BC40D788(a1, a3);
}

uint64_t sub_1BC40E530(_QWORD *a1, uint64_t a2)
{
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1 == *(_QWORD *)a2 && a1[1] == *(_QWORD *)(a2 + 8);
  if (!v4 && (sub_1BC62D574() & 1) == 0)
    return 0;
  v5 = a1[2] == *(_QWORD *)(a2 + 16) && a1[3] == *(_QWORD *)(a2 + 24);
  if (!v5 && (sub_1BC62D574() & 1) == 0)
    return 0;
  v6 = a1[5];
  v7 = *(_QWORD *)(a2 + 40);
  if (v6)
  {
    if (!v7 || (a1[4] != *(_QWORD *)(a2 + 32) || v6 != v7) && (sub_1BC62D574() & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if ((sub_1BC3ECEAC(a1[6], *(_QWORD **)(a2 + 48)) & 1) != 0)
    return sub_1BC40D584(a1[7], *(_QWORD *)(a2 + 56));
  return 0;
}

uint64_t sub_1BC40E5F8(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10[2];
  uint64_t v11;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1BC62D574(), result = 0, (v5 & 1) != 0))
  {
    v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_1BC62D574(), result = 0, (v8 & 1) != 0))
    {
      sub_1BC410F7C(a1 + 4, (uint64_t)v10);
      sub_1BC410F7C(a2 + 4, (uint64_t)&v9);
      sub_1BC410F7C(v10, (uint64_t)&v11);
      __asm { BR              X10 }
    }
  }
  return result;
}

BOOL sub_1BC40E7A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  uint64_t v4;
  uint64_t v5;

  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) == 0)
      return 0;
  }
  else
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
      return 0;
    v2 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
    if (!v2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
  }
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  if (v4)
    return v5 && (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && v4 == v5 || (sub_1BC62D574() & 1) != 0);
  return !v5;
}

uint64_t sub_1BC40E83C(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1BC62D574(), result = 0, (v5 & 1) != 0))
  {
    v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_1BC62D574(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
        return 1;
      else
        return sub_1BC62D574();
    }
  }
  return result;
}

uint64_t sub_1BC40E8DC(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1BC62D574(), result = 0, (v5 & 1) != 0))
  {
    v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_1BC62D574(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5] || (v9 = sub_1BC62D574(), result = 0, (v9 & 1) != 0))
      {
        if (a1[6] == a2[6] && a1[7] == a2[7] || (v10 = sub_1BC62D574(), result = 0, (v10 & 1) != 0))
        {
          v11 = a1[9];
          v12 = a2[9];
          if (v11)
          {
            if (v12 && (a1[8] == a2[8] && v11 == v12 || (sub_1BC62D574() & 1) != 0))
              return 1;
          }
          else if (!v12)
          {
            return 1;
          }
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BC40E9EC(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  char v6;
  BOOL v7;
  char v8;
  char v9;
  char v10;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_1BC62D574(), v6 = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v7 || (v8 = sub_1BC62D574(), v6 = 0, (v8 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v9 = sub_1BC62D574(), v6 = 0, (v9 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v10 = sub_1BC62D574(), v6 = 0, (v10 & 1) != 0))
        {
          v6 = ((*(_BYTE *)(a1 + 64) & 1) == 0) ^ *(_BYTE *)(a2 + 64);
        }
      }
    }
  }
  return v6 & 1;
}

uint64_t sub_1BC40EAC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a5;
  v30 = a6;
  v12 = sub_1BC62A2BC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a1;
  v32 = a2;
  sub_1BC62A2B0();
  sub_1BC36E2AC();
  v16 = sub_1BC62D028();
  v27 = v17;
  v28 = v16;
  v18 = *(void (**)(char *, uint64_t))(v13 + 8);
  v18(v15, v12);
  swift_bridgeObjectRelease();
  v31 = a3;
  v32 = a4;
  sub_1BC62A2B0();
  v19 = sub_1BC62D028();
  v21 = v20;
  v18(v15, v12);
  swift_bridgeObjectRelease();
  v31 = v29;
  v32 = v30;
  sub_1BC62A2B0();
  v22 = sub_1BC62D028();
  v24 = v23;
  result = ((uint64_t (*)(char *, uint64_t))v18)(v15, v12);
  v26 = v27;
  *a7 = v28;
  a7[1] = v26;
  a7[2] = v19;
  a7[3] = v21;
  a7[4] = v22;
  a7[5] = v24;
  return result;
}

uint64_t sub_1BC40EC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;

  v38 = a7;
  v39 = a8;
  v34 = a6;
  v35 = a5;
  v40 = a10;
  v15 = sub_1BC62A2BC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a1;
  v42 = a2;
  sub_1BC62A2B0();
  sub_1BC36E2AC();
  v19 = sub_1BC62D028();
  v36 = v20;
  v37 = v19;
  v21 = *(void (**)(char *, uint64_t))(v16 + 8);
  v21(v18, v15);
  swift_bridgeObjectRelease();
  v41 = a3;
  v42 = a4;
  sub_1BC62A2B0();
  v22 = sub_1BC62D028();
  v33 = v23;
  v21(v18, v15);
  swift_bridgeObjectRelease();
  v41 = v35;
  v42 = v34;
  sub_1BC62A2B0();
  v24 = sub_1BC62D028();
  v26 = v25;
  v21(v18, v15);
  swift_bridgeObjectRelease();
  v41 = v38;
  v42 = v39;
  sub_1BC62A2B0();
  v27 = sub_1BC62D028();
  v29 = v28;
  result = ((uint64_t (*)(char *, uint64_t))v21)(v18, v15);
  v31 = v36;
  *(_QWORD *)a9 = v37;
  *(_QWORD *)(a9 + 8) = v31;
  v32 = v33;
  *(_QWORD *)(a9 + 16) = v22;
  *(_QWORD *)(a9 + 24) = v32;
  *(_QWORD *)(a9 + 32) = v24;
  *(_QWORD *)(a9 + 40) = v26;
  *(_QWORD *)(a9 + 48) = v27;
  *(_QWORD *)(a9 + 56) = v29;
  *(_BYTE *)(a9 + 64) = v40;
  return result;
}

uint64_t sub_1BC40EDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v39 = a5;
  v40 = a7;
  v43 = a8;
  v44 = a11;
  v47 = a10;
  v17 = sub_1BC62A2BC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = a1;
  v49 = a2;
  sub_1BC62A2B0();
  sub_1BC36E2AC();
  v21 = sub_1BC62D028();
  v45 = v22;
  v46 = v21;
  v23 = *(void (**)(char *, uint64_t))(v18 + 8);
  v23(v20, v17);
  swift_bridgeObjectRelease();
  v48 = a3;
  v49 = a4;
  sub_1BC62A2B0();
  v24 = sub_1BC62D028();
  v41 = v25;
  v42 = v24;
  v23(v20, v17);
  swift_bridgeObjectRelease();
  v48 = v39;
  v49 = a6;
  sub_1BC62A2B0();
  v26 = sub_1BC62D028();
  v39 = v27;
  v23(v20, v17);
  swift_bridgeObjectRelease();
  v48 = v40;
  v49 = v43;
  sub_1BC62A2B0();
  v28 = sub_1BC62D028();
  v30 = v29;
  v23(v20, v17);
  result = swift_bridgeObjectRelease();
  if (v44)
  {
    v48 = v47;
    v49 = v44;
    sub_1BC62A2B0();
    v32 = sub_1BC62D028();
    v34 = v33;
    v23(v20, v17);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v34 = 0;
    v32 = v47;
  }
  v35 = v45;
  *a9 = v46;
  a9[1] = v35;
  v36 = v41;
  a9[2] = v42;
  a9[3] = v36;
  v37 = v39;
  a9[4] = v26;
  a9[5] = v37;
  a9[6] = v28;
  a9[7] = v30;
  a9[8] = v32;
  a9[9] = v34;
  return result;
}

uint64_t _s16FormattedSectionVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s16FormattedSectionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16FormattedSectionVwca(uint64_t a1, uint64_t a2)
{
  char v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s16FormattedSectionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16FormattedSectionVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s16FormattedSectionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s16FormattedSectionVMa()
{
  return &_s16FormattedSectionVN;
}

uint64_t _s23FormattedRecordMetadataVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s23FormattedRecordMetadataVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s23FormattedRecordMetadataVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s23FormattedRecordMetadataVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s23FormattedRecordMetadataVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s23FormattedRecordMetadataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s23FormattedRecordMetadataVMa()
{
  return &_s23FormattedRecordMetadataVN;
}

uint64_t _s22FormattedRecord3ValuesVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s22FormattedRecord3ValuesVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s22FormattedRecord3ValuesVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s22FormattedRecord3ValuesVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22FormattedRecord3ValuesVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s22FormattedRecord3ValuesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s22FormattedRecord3ValuesVMa()
{
  return &_s22FormattedRecord3ValuesVN;
}

uint64_t _s27FormattedRecordValueInRangeVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s27FormattedRecordValueInRangeVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s27FormattedRecordValueInRangeVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s27FormattedRecordValueInRangeVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t _s27FormattedRecordValueInRangeVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s27FormattedRecordValueInRangeVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s27FormattedRecordValueInRangeVMa()
{
  return &_s27FormattedRecordValueInRangeVN;
}

uint64_t _s20FormattedRecordValueVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s20FormattedRecordValueVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s20FormattedRecordValueVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s20FormattedRecordValueVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20FormattedRecordValueVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s20FormattedRecordValueVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s20FormattedRecordValueVMa()
{
  return &_s20FormattedRecordValueVN;
}

uint64_t _s18FormattedRecordKeyVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s18FormattedRecordKeyVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18FormattedRecordKeyVwca(uint64_t a1, __int128 *a2)
{
  __int128 v3;

  v3 = *a2;
  *(_OWORD *)(a1 + 9) = *(__int128 *)((char *)a2 + 9);
  *(_OWORD *)a1 = v3;
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18FormattedRecordKeyVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18FormattedRecordKeyVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s18FormattedRecordKeyVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *_s18FormattedRecordKeyVMa()
{
  return &_s18FormattedRecordKeyVN;
}

uint64_t _s22FormattedRecordKeyDateVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s22FormattedRecordKeyDateVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *_s22FormattedRecordKeyDateVMa()
{
  return &_s22FormattedRecordKeyDateVN;
}

_QWORD *_s15FormattedRecordVwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s15FormattedRecordVwxx()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s15FormattedRecordVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s15FormattedRecordVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15FormattedRecordVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s15FormattedRecordVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s15FormattedRecordVMa()
{
  return &_s15FormattedRecordVN;
}

uint64_t _s13FormattedDataVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13FormattedDataVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s13FormattedDataVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s13FormattedDataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13FormattedDataVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13FormattedDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13FormattedDataVMa()
{
  return &_s13FormattedDataVN;
}

unint64_t sub_1BC410108()
{
  unint64_t result;

  result = qword_1EF42E738;
  if (!qword_1EF42E738)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E45C, &_s22FormattedRecordKeyDateVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E738);
  }
  return result;
}

unint64_t sub_1BC410150()
{
  unint64_t result;

  result = qword_1EF42E740;
  if (!qword_1EF42E740)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E524, &_s18FormattedRecordKeyVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E740);
  }
  return result;
}

uint64_t sub_1BC410194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC410418(a1, a2, a3, (uint64_t (*)(void))sub_1BC4101A8, (uint64_t (*)(void))sub_1BC4101EC);
}

unint64_t sub_1BC4101A8()
{
  unint64_t result;

  result = qword_1EF42E748;
  if (!qword_1EF42E748)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E734, &_s23FormattedRecordMetadataVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E748);
  }
  return result;
}

unint64_t sub_1BC4101EC()
{
  unint64_t result;

  result = qword_1EF42E750;
  if (!qword_1EF42E750)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E70C, &_s23FormattedRecordMetadataVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E750);
  }
  return result;
}

uint64_t sub_1BC410230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC410418(a1, a2, a3, (uint64_t (*)(void))sub_1BC410244, (uint64_t (*)(void))sub_1BC410288);
}

unint64_t sub_1BC410244()
{
  unint64_t result;

  result = qword_1EF42E758;
  if (!qword_1EF42E758)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E6AC, &_s22FormattedRecord3ValuesVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E758);
  }
  return result;
}

unint64_t sub_1BC410288()
{
  unint64_t result;

  result = qword_1EF42E760;
  if (!qword_1EF42E760)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E684, &_s22FormattedRecord3ValuesVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E760);
  }
  return result;
}

uint64_t sub_1BC4102CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC410418(a1, a2, a3, (uint64_t (*)(void))sub_1BC4102E0, (uint64_t (*)(void))sub_1BC410324);
}

unint64_t sub_1BC4102E0()
{
  unint64_t result;

  result = qword_1EF42E768;
  if (!qword_1EF42E768)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E624, &_s27FormattedRecordValueInRangeVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E768);
  }
  return result;
}

unint64_t sub_1BC410324()
{
  unint64_t result;

  result = qword_1EF42E770;
  if (!qword_1EF42E770)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E5FC, &_s27FormattedRecordValueInRangeVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E770);
  }
  return result;
}

uint64_t sub_1BC410368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC410418(a1, a2, a3, (uint64_t (*)(void))sub_1BC41037C, (uint64_t (*)(void))sub_1BC4103C0);
}

unint64_t sub_1BC41037C()
{
  unint64_t result;

  result = qword_1EF42E778;
  if (!qword_1EF42E778)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E59C, &_s20FormattedRecordValueVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E778);
  }
  return result;
}

unint64_t sub_1BC4103C0()
{
  unint64_t result;

  result = qword_1EF42E780;
  if (!qword_1EF42E780)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E574, &_s20FormattedRecordValueVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E780);
  }
  return result;
}

uint64_t sub_1BC410404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC410418(a1, a2, a3, (uint64_t (*)(void))sub_1BC410448, (uint64_t (*)(void))sub_1BC41048C);
}

uint64_t sub_1BC410418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC410448()
{
  unint64_t result;

  result = qword_1EF42E788;
  if (!qword_1EF42E788)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E3DC, &_s15FormattedRecordVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E788);
  }
  return result;
}

unint64_t sub_1BC41048C()
{
  unint64_t result;

  result = qword_1EF42E790;
  if (!qword_1EF42E790)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E3B4, &_s15FormattedRecordVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E790);
  }
  return result;
}

uint64_t sub_1BC4104D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6942664F65746164 && a2 == 0xEB00000000687472 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E615265746164 && a2 == 0xE900000000000065 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974636573 && a2 == 0xE800000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72656469766F7270 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BC410704@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  sub_1BC3B2CF8(0, &qword_1EF42E888, (uint64_t (*)(void))sub_1BC41335C, (uint64_t)&_s13FormattedDataV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v19 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC41335C();
  sub_1BC62D6DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v17 = (uint64_t)a1;
  v6 = sub_1BC62D46C();
  v8 = v7;
  swift_bridgeObjectRetain();
  v9 = sub_1BC62D46C();
  v16 = v10;
  v11 = v9;
  LOBYTE(v20) = 2;
  swift_bridgeObjectRetain();
  v15 = sub_1BC62D454();
  v13 = v12;
  sub_1BC34B508(0, &qword_1EF42E898, (uint64_t)&_s16FormattedSectionVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC4133A0();
  swift_bridgeObjectRetain();
  sub_1BC62D490();
  sub_1BC3B9200();
  sub_1BC4130E0(&qword_1EF42E7D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  swift_bridgeObjectRetain();
  sub_1BC62D490();
  (*(void (**)(_QWORD, uint64_t))(v5 + 8))(0, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v6;
  a2[1] = v8;
  a2[2] = v11;
  a2[3] = v16;
  a2[4] = v15;
  a2[5] = v13;
  a2[6] = v20;
  a2[7] = v20;
  return result;
}

uint64_t sub_1BC410B30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64496567616D69 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7364726F636572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC410C7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v24 = a2;
  sub_1BC3B2CF8(0, &qword_1EF42E798, (uint64_t (*)(void))sub_1BC410EF4, (uint64_t)&_s16FormattedSectionV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC410EF4();
  sub_1BC62D6DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v9 = v6;
  v10 = v24;
  v29 = 0;
  v11 = sub_1BC62D46C();
  v13 = v12;
  v23 = v11;
  v28 = 1;
  swift_bridgeObjectRetain();
  v14 = sub_1BC62D46C();
  v16 = v15;
  v21 = v14;
  v27 = 2;
  sub_1BC410F38();
  swift_bridgeObjectRetain();
  v22 = v16;
  sub_1BC62D490();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v17 = v25;
  v18 = v26;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  v19 = v22;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v10 = v23;
  *(_QWORD *)(v10 + 8) = v13;
  *(_QWORD *)(v10 + 16) = v21;
  *(_QWORD *)(v10 + 24) = v19;
  *(_QWORD *)(v10 + 32) = v17;
  *(_BYTE *)(v10 + 40) = v18;
  return result;
}

unint64_t sub_1BC410EF4()
{
  unint64_t result;

  result = qword_1EF42E7A0;
  if (!qword_1EF42E7A0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F23C, &_s16FormattedSectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E7A0);
  }
  return result;
}

unint64_t sub_1BC410F38()
{
  unint64_t result;

  result = qword_1EF42E7A8;
  if (!qword_1EF42E7A8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F214, &_s16FormattedRecordsON);
    atomic_store(result, (unint64_t *)&qword_1EF42E7A8);
  }
  return result;
}

uint64_t sub_1BC410F7C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

unint64_t sub_1BC410F94()
{
  unint64_t result;

  result = qword_1EF42E7B8;
  if (!qword_1EF42E7B8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F1EC, &_s16FormattedRecordsON);
    atomic_store(result, (unint64_t *)&qword_1EF42E7B8);
  }
  return result;
}

uint64_t sub_1BC410FD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69616C70 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x526E4965756C6176 && a2 == 0xEC00000065676E61 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61566565726874 && a2 == 0xEB00000000736575 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BC411214(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v27[16];
  _QWORD *v28;
  uint64_t v29;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC3B2CF8(0, &qword_1EF42E9A0, (uint64_t (*)(void))sub_1BC414034, (uint64_t)&_s16FormattedRecordsO18MetadataCodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v27[7] = v3;
  v27[10] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v27[15] = (char *)v27 - v4;
  sub_1BC3B2CF8(0, &qword_1EF42E9B0, (uint64_t (*)(void))sub_1BC414078, (uint64_t)&_s16FormattedRecordsO21ThreeValuesCodingKeysON, v2);
  v27[5] = v5;
  v27[11] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v27[14] = (char *)v27 - v6;
  sub_1BC3B2CF8(0, &qword_1EF42E9C0, (uint64_t (*)(void))sub_1BC4140BC, (uint64_t)&_s16FormattedRecordsO22ValueInRangeCodingKeysON, v2);
  v27[8] = *(_QWORD *)(v7 - 8);
  v27[9] = v7;
  MEMORY[0x1E0C80A78](v7);
  v27[13] = (char *)v27 - v8;
  sub_1BC3B2CF8(0, &qword_1EF42E9D0, (uint64_t (*)(void))sub_1BC414100, (uint64_t)&_s16FormattedRecordsO15ValueCodingKeysON, v2);
  v27[6] = v9;
  v27[2] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v27[12] = (char *)v27 - v10;
  sub_1BC3B2CF8(0, &qword_1EF42E9E0, (uint64_t (*)(void))sub_1BC414144, (uint64_t)&_s16FormattedRecordsO15PlainCodingKeysON, v2);
  v27[3] = *(_QWORD *)(v11 - 8);
  v27[4] = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v27 - v12;
  sub_1BC3B2CF8(0, &qword_1EF42E9F0, (uint64_t (*)(void))sub_1BC414188, (uint64_t)&_s16FormattedRecordsO10CodingKeysON, v2);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v27 - v17;
  v20 = a1[3];
  v19 = a1[4];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v20);
  sub_1BC414188();
  v21 = v29;
  sub_1BC62D6DC();
  if (!v21)
  {
    v27[1] = v13;
    v29 = v16;
    v22 = sub_1BC62D49C();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      v23 = (char *)&loc_1BC4114D8 + 4 * byte_1BC63E1B3[*(unsigned __int8 *)(v22 + 32)];
      v27[0] = *(unsigned __int8 *)(v22 + 32);
      __asm { BR              X9 }
    }
    v19 = sub_1BC62D238();
    swift_allocError();
    v25 = v24;
    sub_1BC4141CC();
    *v25 = &_s16FormattedRecordsON;
    sub_1BC62D448();
    sub_1BC62D220();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v15);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  return v19;
}

void sub_1BC411668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 72) = 1;
  sub_1BC414100();
  v3 = v0;
  sub_1BC62D43C();
  if (!v1)
  {
    sub_1BC4143B0(0, &qword_1EF42EA60, &qword_1EF429B90, (uint64_t)&_s20FormattedRecordValueVN);
    sub_1BC41461C();
    v4 = *(_QWORD *)(v2 - 176);
    sub_1BC62D490();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 208) + 8))(v3, v4);
    swift_bridgeObjectRelease();
    JUMPOUT(0x1BC411998);
  }
  JUMPOUT(0x1BC41161CLL);
}

void sub_1BC411860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v4 - 72) = 4;
  sub_1BC414034();
  v5 = v1;
  sub_1BC62D43C();
  if (!v0)
  {
    sub_1BC4143B0(0, &qword_1EF42EA10, &qword_1EF429BF0, (uint64_t)&_s23FormattedRecordMetadataVN);
    sub_1BC414274();
    v6 = *(_QWORD *)(v4 - 168);
    sub_1BC62D490();
    v7 = *(_QWORD *)(v4 - 88);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v5, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v2);
    __swift_destroy_boxed_opaque_existential_1Tm(*(_QWORD *)(v4 - 96));
    JUMPOUT(0x1BC411640);
  }
  JUMPOUT(0x1BC41161CLL);
}

uint64_t sub_1BC4119B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1918985593 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x68746E6F6DLL && a2 == 0xE500000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7954788 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC411AE4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;
  char v13;

  sub_1BC3B2CF8(0, &qword_1EF42E858, (uint64_t (*)(void))sub_1BC4132D4, (uint64_t)&_s22FormattedRecordKeyDateV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1Tm(a1, v8);
  sub_1BC4132D4();
  sub_1BC62D6DC();
  if (!v1)
  {
    v13 = 0;
    v8 = sub_1BC62D484();
    v12 = 1;
    sub_1BC62D484();
    v11 = 2;
    sub_1BC62D484();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v8;
}

uint64_t sub_1BC411C7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72656469766F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC411D5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  int v23;
  char v24;

  v18 = a2;
  sub_1BC3B2CF8(0, &qword_1EF42E830, (uint64_t (*)(void))sub_1BC413208, (uint64_t)&_s18FormattedRecordKeyV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC413208();
  sub_1BC62D6DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v9 = v18;
  v24 = 0;
  sub_1BC41324C();
  sub_1BC62D460();
  v10 = v20;
  v16 = v21;
  v17 = v19;
  v23 = v22;
  LOBYTE(v19) = 1;
  v11 = sub_1BC62D454();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  *(_QWORD *)v9 = v17;
  *(_QWORD *)(v9 + 8) = v10;
  *(_QWORD *)(v9 + 16) = v16;
  *(_BYTE *)(v9 + 24) = v23;
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  return result;
}

uint64_t sub_1BC411F14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1953066613 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC412048@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  char v28;
  char v29;

  v26 = a2;
  sub_1BC3B2CF8(0, &qword_1EF42E818, (uint64_t (*)(void))sub_1BC4131C4, (uint64_t)&_s20FormattedRecordValueV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC4131C4();
  sub_1BC62D6DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v9 = v6;
  v10 = v26;
  v29 = 0;
  v11 = sub_1BC62D46C();
  v13 = v12;
  v25 = v11;
  v28 = 1;
  swift_bridgeObjectRetain();
  v14 = sub_1BC62D46C();
  v16 = v15;
  v23 = v14;
  v27 = 2;
  swift_bridgeObjectRetain();
  v24 = v16;
  v17 = sub_1BC62D46C();
  v19 = v18;
  v20 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  v21 = v24;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v10 = v25;
  v10[1] = v13;
  v10[2] = v23;
  v10[3] = v21;
  v10[4] = v20;
  v10[5] = v19;
  return result;
}

uint64_t sub_1BC4122A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1953066613 && a2 == 0xE400000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65676E6172 && a2 == 0xE500000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65676E61526E69 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BC412494@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v34 = a2;
  sub_1BC3B2CF8(0, &qword_1EF42E800, (uint64_t (*)(void))sub_1BC413180, (uint64_t)&_s27FormattedRecordValueInRangeV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC413180();
  sub_1BC62D6DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v33 = a1;
  v9 = v6;
  v39 = 0;
  v10 = v5;
  v11 = sub_1BC62D46C();
  v13 = v12;
  v38 = 1;
  swift_bridgeObjectRetain();
  v14 = sub_1BC62D46C();
  v32 = v15;
  v30 = v14;
  v37 = 2;
  swift_bridgeObjectRetain();
  v29 = sub_1BC62D46C();
  v36 = 3;
  v17 = v16;
  swift_bridgeObjectRetain();
  v18 = sub_1BC62D46C();
  v31 = v17;
  v28 = v18;
  v35 = 4;
  v20 = v19;
  swift_bridgeObjectRetain();
  v21 = sub_1BC62D478();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  swift_bridgeObjectRelease();
  v22 = v31;
  swift_bridgeObjectRelease();
  v23 = v11;
  v24 = v32;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v26 = v34;
  *v34 = v23;
  v26[1] = v13;
  v26[2] = v30;
  v26[3] = v24;
  v26[4] = v29;
  v26[5] = v22;
  v26[6] = v28;
  v26[7] = v20;
  *((_BYTE *)v26 + 64) = v21 & 1;
  return result;
}

uint64_t sub_1BC41281C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x3165756C6176 && a2 == 0xE600000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x3265756C6176 && a2 == 0xE600000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x3365756C6176 && a2 == 0xE600000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72656469766F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BC412A18@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;

  v38 = a2;
  sub_1BC3B2CF8(0, &qword_1EF42E7E8, (uint64_t (*)(void))sub_1BC41313C, (uint64_t)&_s22FormattedRecord3ValuesV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v31 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC41313C();
  sub_1BC62D6DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v9 = v6;
  v43 = 0;
  v10 = v5;
  v11 = sub_1BC62D46C();
  v13 = v12;
  v42 = 1;
  swift_bridgeObjectRetain();
  v14 = sub_1BC62D46C();
  v37 = v15;
  v34 = v14;
  v35 = v11;
  v41 = 2;
  swift_bridgeObjectRetain();
  v33 = sub_1BC62D46C();
  v40 = 3;
  v17 = v16;
  swift_bridgeObjectRetain();
  v18 = sub_1BC62D46C();
  v36 = v17;
  v32 = v18;
  v39 = 4;
  v20 = v19;
  swift_bridgeObjectRetain();
  v21 = sub_1BC62D454();
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25 = v21;
  v24(v8, v10);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v20;
  v27 = v36;
  swift_bridgeObjectRelease();
  v28 = v37;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v30 = v38;
  *v38 = v35;
  v30[1] = v13;
  v30[2] = v34;
  v30[3] = v28;
  v30[4] = v33;
  v30[5] = v27;
  v30[6] = v32;
  v30[7] = v26;
  v30[8] = v25;
  v30[9] = v23;
  return result;
}

uint64_t sub_1BC412DB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC412E9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[32];

  sub_1BC3B2CF8(0, &qword_1EF42E7C0, (uint64_t (*)(void))sub_1BC41309C, (uint64_t)&_s23FormattedRecordMetadataV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v10[-v6];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC41309C();
  sub_1BC62D6DC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    v10[31] = 0;
    v8 = sub_1BC62D46C();
    sub_1BC3B9200();
    v10[30] = 1;
    sub_1BC4130E0(&qword_1EF42E7D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    swift_bridgeObjectRetain();
    sub_1BC62D490();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1BC41309C()
{
  unint64_t result;

  result = qword_1EF42E7C8;
  if (!qword_1EF42E7C8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F19C, &_s23FormattedRecordMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E7C8);
  }
  return result;
}

uint64_t sub_1BC4130E0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    sub_1BC3B9200();
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x1BCCF35C4](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC41313C()
{
  unint64_t result;

  result = qword_1EF42E7F0;
  if (!qword_1EF42E7F0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F14C, &_s22FormattedRecord3ValuesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E7F0);
  }
  return result;
}

unint64_t sub_1BC413180()
{
  unint64_t result;

  result = qword_1EF42E808;
  if (!qword_1EF42E808)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F0FC, &_s27FormattedRecordValueInRangeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E808);
  }
  return result;
}

unint64_t sub_1BC4131C4()
{
  unint64_t result;

  result = qword_1EF42E820;
  if (!qword_1EF42E820)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F0AC, &_s20FormattedRecordValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E820);
  }
  return result;
}

unint64_t sub_1BC413208()
{
  unint64_t result;

  result = qword_1EF42E838;
  if (!qword_1EF42E838)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F05C, &_s18FormattedRecordKeyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E838);
  }
  return result;
}

unint64_t sub_1BC41324C()
{
  unint64_t result;

  result = qword_1EF42E840;
  if (!qword_1EF42E840)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E4AC, &_s22FormattedRecordKeyDateVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E840);
  }
  return result;
}

unint64_t sub_1BC413290()
{
  unint64_t result;

  result = qword_1EF42E850;
  if (!qword_1EF42E850)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E484, &_s22FormattedRecordKeyDateVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E850);
  }
  return result;
}

unint64_t sub_1BC4132D4()
{
  unint64_t result;

  result = qword_1EF42E860;
  if (!qword_1EF42E860)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F00C, &_s22FormattedRecordKeyDateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E860);
  }
  return result;
}

unint64_t sub_1BC413318()
{
  unint64_t result;

  result = qword_1EF42E878;
  if (!qword_1EF42E878)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EFBC, &_s15FormattedRecordV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E878);
  }
  return result;
}

unint64_t sub_1BC41335C()
{
  unint64_t result;

  result = qword_1EF42E890;
  if (!qword_1EF42E890)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EF6C, &_s13FormattedDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E890);
  }
  return result;
}

unint64_t sub_1BC4133A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42E8A0;
  if (!qword_1EF42E8A0)
  {
    sub_1BC34B508(255, &qword_1EF42E898, (uint64_t)&_s16FormattedSectionVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC413418();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42E8A0);
  }
  return result;
}

unint64_t sub_1BC413418()
{
  unint64_t result;

  result = qword_1EF42E8A8;
  if (!qword_1EF42E8A8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E7BC, &_s16FormattedSectionVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E8A8);
  }
  return result;
}

unint64_t sub_1BC41345C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42E8B8;
  if (!qword_1EF42E8B8)
  {
    sub_1BC34B508(255, &qword_1EF42E898, (uint64_t)&_s16FormattedSectionVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC4134D4();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42E8B8);
  }
  return result;
}

unint64_t sub_1BC4134D4()
{
  unint64_t result;

  result = qword_1EF42E8C0;
  if (!qword_1EF42E8C0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E794, &_s16FormattedSectionVN);
    atomic_store(result, (unint64_t *)&qword_1EF42E8C0);
  }
  return result;
}

ValueMetadata *_s13FormattedDataV10CodingKeysOMa()
{
  return &_s13FormattedDataV10CodingKeysON;
}

ValueMetadata *_s15FormattedRecordV10CodingKeysOMa()
{
  return &_s15FormattedRecordV10CodingKeysON;
}

ValueMetadata *_s22FormattedRecordKeyDateV10CodingKeysOMa()
{
  return &_s22FormattedRecordKeyDateV10CodingKeysON;
}

ValueMetadata *_s18FormattedRecordKeyV10CodingKeysOMa()
{
  return &_s18FormattedRecordKeyV10CodingKeysON;
}

ValueMetadata *_s20FormattedRecordValueV10CodingKeysOMa()
{
  return &_s20FormattedRecordValueV10CodingKeysON;
}

ValueMetadata *_s27FormattedRecordValueInRangeV10CodingKeysOMa()
{
  return &_s27FormattedRecordValueInRangeV10CodingKeysON;
}

ValueMetadata *_s22FormattedRecord3ValuesV10CodingKeysOMa()
{
  return &_s22FormattedRecord3ValuesV10CodingKeysON;
}

uint64_t _s18FormattedRecordKeyV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC4135F0 + 4 * byte_1BC63E1BD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC413624 + 4 * byte_1BC63E1B8[v4]))();
}

uint64_t sub_1BC413624(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC41362C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC413634);
  return result;
}

uint64_t sub_1BC413640(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC413648);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC41364C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC413654(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s23FormattedRecordMetadataV10CodingKeysOMa()
{
  return &_s23FormattedRecordMetadataV10CodingKeysON;
}

uint64_t _s22FormattedRecordKeyDateV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC4136BC + 4 * byte_1BC63E1C7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC4136F0 + 4 * byte_1BC63E1C2[v4]))();
}

uint64_t sub_1BC4136F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4136F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC413700);
  return result;
}

uint64_t sub_1BC41370C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC413714);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC413718(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC413720(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s16FormattedSectionV10CodingKeysOMa()
{
  return &_s16FormattedSectionV10CodingKeysON;
}

uint64_t _s16FormattedRecordsOwCP(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16FormattedRecordsOwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s16FormattedRecordsOwca(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16FormattedRecordsOwta(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16FormattedRecordsOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s16FormattedRecordsOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC41387C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1BC413884(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *_s16FormattedRecordsOMa()
{
  return &_s16FormattedRecordsON;
}

unint64_t sub_1BC4138A0()
{
  unint64_t result;

  result = qword_1EF42E8C8;
  if (!qword_1EF42E8C8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E984, &_s16FormattedSectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E8C8);
  }
  return result;
}

unint64_t sub_1BC4138E8()
{
  unint64_t result;

  result = qword_1EF42E8D0;
  if (!qword_1EF42E8D0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EA3C, &_s23FormattedRecordMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E8D0);
  }
  return result;
}

unint64_t sub_1BC413930()
{
  unint64_t result;

  result = qword_1EF42E8D8;
  if (!qword_1EF42E8D8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EAF4, &_s22FormattedRecord3ValuesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E8D8);
  }
  return result;
}

unint64_t sub_1BC413978()
{
  unint64_t result;

  result = qword_1EF42E8E0;
  if (!qword_1EF42E8E0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EBAC, &_s27FormattedRecordValueInRangeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E8E0);
  }
  return result;
}

unint64_t sub_1BC4139C0()
{
  unint64_t result;

  result = qword_1EF42E8E8;
  if (!qword_1EF42E8E8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EC64, &_s20FormattedRecordValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E8E8);
  }
  return result;
}

unint64_t sub_1BC413A08()
{
  unint64_t result;

  result = qword_1EF42E8F0;
  if (!qword_1EF42E8F0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63ED1C, &_s18FormattedRecordKeyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E8F0);
  }
  return result;
}

unint64_t sub_1BC413A50()
{
  unint64_t result;

  result = qword_1EF42E8F8;
  if (!qword_1EF42E8F8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EDD4, &_s22FormattedRecordKeyDateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E8F8);
  }
  return result;
}

unint64_t sub_1BC413A98()
{
  unint64_t result;

  result = qword_1EF42E900;
  if (!qword_1EF42E900)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EE8C, &_s15FormattedRecordV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E900);
  }
  return result;
}

unint64_t sub_1BC413AE0()
{
  unint64_t result;

  result = qword_1EF42E908;
  if (!qword_1EF42E908)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EF44, &_s13FormattedDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E908);
  }
  return result;
}

unint64_t sub_1BC413B28()
{
  unint64_t result;

  result = qword_1EF42E910;
  if (!qword_1EF42E910)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EEB4, &_s13FormattedDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E910);
  }
  return result;
}

unint64_t sub_1BC413B70()
{
  unint64_t result;

  result = qword_1EF42E918;
  if (!qword_1EF42E918)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EEDC, &_s13FormattedDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E918);
  }
  return result;
}

unint64_t sub_1BC413BB8()
{
  unint64_t result;

  result = qword_1EF42E920;
  if (!qword_1EF42E920)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EDFC, &_s15FormattedRecordV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E920);
  }
  return result;
}

unint64_t sub_1BC413C00()
{
  unint64_t result;

  result = qword_1EF42E928;
  if (!qword_1EF42E928)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EE24, &_s15FormattedRecordV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E928);
  }
  return result;
}

unint64_t sub_1BC413C48()
{
  unint64_t result;

  result = qword_1EF42E930;
  if (!qword_1EF42E930)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63ED44, &_s22FormattedRecordKeyDateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E930);
  }
  return result;
}

unint64_t sub_1BC413C90()
{
  unint64_t result;

  result = qword_1EF42E938;
  if (!qword_1EF42E938)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63ED6C, &_s22FormattedRecordKeyDateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E938);
  }
  return result;
}

unint64_t sub_1BC413CD8()
{
  unint64_t result;

  result = qword_1EF42E940;
  if (!qword_1EF42E940)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EC8C, &_s18FormattedRecordKeyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E940);
  }
  return result;
}

unint64_t sub_1BC413D20()
{
  unint64_t result;

  result = qword_1EF42E948;
  if (!qword_1EF42E948)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63ECB4, &_s18FormattedRecordKeyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E948);
  }
  return result;
}

unint64_t sub_1BC413D68()
{
  unint64_t result;

  result = qword_1EF42E950;
  if (!qword_1EF42E950)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EBD4, &_s20FormattedRecordValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E950);
  }
  return result;
}

unint64_t sub_1BC413DB0()
{
  unint64_t result;

  result = qword_1EF42E958;
  if (!qword_1EF42E958)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EBFC, &_s20FormattedRecordValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E958);
  }
  return result;
}

unint64_t sub_1BC413DF8()
{
  unint64_t result;

  result = qword_1EF42E960;
  if (!qword_1EF42E960)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EB1C, &_s27FormattedRecordValueInRangeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E960);
  }
  return result;
}

unint64_t sub_1BC413E40()
{
  unint64_t result;

  result = qword_1EF42E968;
  if (!qword_1EF42E968)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EB44, &_s27FormattedRecordValueInRangeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E968);
  }
  return result;
}

unint64_t sub_1BC413E88()
{
  unint64_t result;

  result = qword_1EF42E970;
  if (!qword_1EF42E970)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EA64, &_s22FormattedRecord3ValuesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E970);
  }
  return result;
}

unint64_t sub_1BC413ED0()
{
  unint64_t result;

  result = qword_1EF42E978;
  if (!qword_1EF42E978)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63EA8C, &_s22FormattedRecord3ValuesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E978);
  }
  return result;
}

unint64_t sub_1BC413F18()
{
  unint64_t result;

  result = qword_1EF42E980;
  if (!qword_1EF42E980)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E9AC, &_s23FormattedRecordMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E980);
  }
  return result;
}

unint64_t sub_1BC413F60()
{
  unint64_t result;

  result = qword_1EF42E988;
  if (!qword_1EF42E988)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E9D4, &_s23FormattedRecordMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E988);
  }
  return result;
}

unint64_t sub_1BC413FA8()
{
  unint64_t result;

  result = qword_1EF42E990;
  if (!qword_1EF42E990)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E8F4, &_s16FormattedSectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E990);
  }
  return result;
}

unint64_t sub_1BC413FF0()
{
  unint64_t result;

  result = qword_1EF42E998;
  if (!qword_1EF42E998)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E91C, &_s16FormattedSectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E998);
  }
  return result;
}

unint64_t sub_1BC414034()
{
  unint64_t result;

  result = qword_1EF42E9A8;
  if (!qword_1EF42E9A8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F8E4, &_s16FormattedRecordsO18MetadataCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E9A8);
  }
  return result;
}

unint64_t sub_1BC414078()
{
  unint64_t result;

  result = qword_1EF42E9B8;
  if (!qword_1EF42E9B8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F894, &_s16FormattedRecordsO21ThreeValuesCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E9B8);
  }
  return result;
}

unint64_t sub_1BC4140BC()
{
  unint64_t result;

  result = qword_1EF42E9C8;
  if (!qword_1EF42E9C8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F844, &_s16FormattedRecordsO22ValueInRangeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E9C8);
  }
  return result;
}

unint64_t sub_1BC414100()
{
  unint64_t result;

  result = qword_1EF42E9D8;
  if (!qword_1EF42E9D8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F7F4, &_s16FormattedRecordsO15ValueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E9D8);
  }
  return result;
}

unint64_t sub_1BC414144()
{
  unint64_t result;

  result = qword_1EF42E9E8;
  if (!qword_1EF42E9E8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F7A4, &_s16FormattedRecordsO15PlainCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E9E8);
  }
  return result;
}

unint64_t sub_1BC414188()
{
  unint64_t result;

  result = qword_1EF42E9F8;
  if (!qword_1EF42E9F8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F754, &_s16FormattedRecordsO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42E9F8);
  }
  return result;
}

void sub_1BC4141CC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42EA00)
  {
    sub_1BC414238();
    sub_1BC62D22C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42EA00);
  }
}

unint64_t sub_1BC414238()
{
  unint64_t result;

  result = qword_1EF42EA08;
  if (!qword_1EF42EA08)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42EA08);
  }
  return result;
}

unint64_t sub_1BC414274()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF42EA18;
  if (!qword_1EF42EA18)
  {
    sub_1BC4143B0(255, &qword_1EF42EA10, &qword_1EF429BF0, (uint64_t)&_s23FormattedRecordMetadataVN);
    v2 = v1;
    v3[0] = sub_1BC4142F4();
    v3[1] = sub_1BC414338();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA0D8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EA18);
  }
  return result;
}

unint64_t sub_1BC4142F4()
{
  unint64_t result;

  result = qword_1EF42EA20;
  if (!qword_1EF42EA20)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E4FC, &_s18FormattedRecordKeyVN);
    atomic_store(result, (unint64_t *)&qword_1EF42EA20);
  }
  return result;
}

unint64_t sub_1BC414338()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42EA28;
  if (!qword_1EF42EA28)
  {
    sub_1BC34B508(255, &qword_1EF429BF0, (uint64_t)&_s23FormattedRecordMetadataVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC4101A8();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EA28);
  }
  return result;
}

void sub_1BC4143B0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC34B508(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC36E268();
    v5 = sub_1BC62C59C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1BC41442C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF42EA38;
  if (!qword_1EF42EA38)
  {
    sub_1BC4143B0(255, &qword_1EF42EA30, &qword_1EF429B48, (uint64_t)&_s22FormattedRecord3ValuesVN);
    v2 = v1;
    v3[0] = sub_1BC4142F4();
    v3[1] = sub_1BC4144AC();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA0D8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EA38);
  }
  return result;
}

unint64_t sub_1BC4144AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42EA40;
  if (!qword_1EF42EA40)
  {
    sub_1BC34B508(255, &qword_1EF429B48, (uint64_t)&_s22FormattedRecord3ValuesVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC410244();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EA40);
  }
  return result;
}

unint64_t sub_1BC414524()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF42EA50;
  if (!qword_1EF42EA50)
  {
    sub_1BC4143B0(255, &qword_1EF42EA48, &qword_1EF429BB8, (uint64_t)&_s27FormattedRecordValueInRangeVN);
    v2 = v1;
    v3[0] = sub_1BC4142F4();
    v3[1] = sub_1BC4145A4();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA0D8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EA50);
  }
  return result;
}

unint64_t sub_1BC4145A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42EA58;
  if (!qword_1EF42EA58)
  {
    sub_1BC34B508(255, &qword_1EF429BB8, (uint64_t)&_s27FormattedRecordValueInRangeVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC4102E0();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EA58);
  }
  return result;
}

unint64_t sub_1BC41461C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF42EA68;
  if (!qword_1EF42EA68)
  {
    sub_1BC4143B0(255, &qword_1EF42EA60, &qword_1EF429B90, (uint64_t)&_s20FormattedRecordValueVN);
    v2 = v1;
    v3[0] = sub_1BC4142F4();
    v3[1] = sub_1BC41469C();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA0D8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EA68);
  }
  return result;
}

unint64_t sub_1BC41469C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42EA70;
  if (!qword_1EF42EA70)
  {
    sub_1BC34B508(255, &qword_1EF429B90, (uint64_t)&_s20FormattedRecordValueVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC41037C();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EA70);
  }
  return result;
}

unint64_t sub_1BC414714()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF42EA80;
  if (!qword_1EF42EA80)
  {
    sub_1BC4143B0(255, &qword_1EF42EA78, &qword_1EF429B70, (uint64_t)&_s15FormattedRecordVN);
    v2 = v1;
    v3[0] = sub_1BC4142F4();
    v3[1] = sub_1BC414794();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA0D8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EA80);
  }
  return result;
}

unint64_t sub_1BC414794()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42EA88;
  if (!qword_1EF42EA88)
  {
    sub_1BC34B508(255, &qword_1EF429B70, (uint64_t)&_s15FormattedRecordVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC410448();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EA88);
  }
  return result;
}

unint64_t sub_1BC41480C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF42EAC0;
  if (!qword_1EF42EAC0)
  {
    sub_1BC4143B0(255, &qword_1EF42EA10, &qword_1EF429BF0, (uint64_t)&_s23FormattedRecordMetadataVN);
    v2 = v1;
    v3[0] = sub_1BC41488C();
    v3[1] = sub_1BC4148D0();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA0B8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EAC0);
  }
  return result;
}

unint64_t sub_1BC41488C()
{
  unint64_t result;

  result = qword_1EF42EAC8;
  if (!qword_1EF42EAC8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63E4D4, &_s18FormattedRecordKeyVN);
    atomic_store(result, (unint64_t *)&qword_1EF42EAC8);
  }
  return result;
}

unint64_t sub_1BC4148D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42EAD0;
  if (!qword_1EF42EAD0)
  {
    sub_1BC34B508(255, &qword_1EF429BF0, (uint64_t)&_s23FormattedRecordMetadataVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC4101EC();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EAD0);
  }
  return result;
}

unint64_t sub_1BC414948()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF42EAD8;
  if (!qword_1EF42EAD8)
  {
    sub_1BC4143B0(255, &qword_1EF42EA30, &qword_1EF429B48, (uint64_t)&_s22FormattedRecord3ValuesVN);
    v2 = v1;
    v3[0] = sub_1BC41488C();
    v3[1] = sub_1BC4149C8();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA0B8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EAD8);
  }
  return result;
}

unint64_t sub_1BC4149C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42EAE0;
  if (!qword_1EF42EAE0)
  {
    sub_1BC34B508(255, &qword_1EF429B48, (uint64_t)&_s22FormattedRecord3ValuesVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC410288();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EAE0);
  }
  return result;
}

unint64_t sub_1BC414A40()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF42EAE8;
  if (!qword_1EF42EAE8)
  {
    sub_1BC4143B0(255, &qword_1EF42EA48, &qword_1EF429BB8, (uint64_t)&_s27FormattedRecordValueInRangeVN);
    v2 = v1;
    v3[0] = sub_1BC41488C();
    v3[1] = sub_1BC414AC0();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA0B8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EAE8);
  }
  return result;
}

unint64_t sub_1BC414AC0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42EAF0;
  if (!qword_1EF42EAF0)
  {
    sub_1BC34B508(255, &qword_1EF429BB8, (uint64_t)&_s27FormattedRecordValueInRangeVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC410324();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EAF0);
  }
  return result;
}

unint64_t sub_1BC414B38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF42EAF8;
  if (!qword_1EF42EAF8)
  {
    sub_1BC4143B0(255, &qword_1EF42EA60, &qword_1EF429B90, (uint64_t)&_s20FormattedRecordValueVN);
    v2 = v1;
    v3[0] = sub_1BC41488C();
    v3[1] = sub_1BC414BB8();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA0B8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EAF8);
  }
  return result;
}

unint64_t sub_1BC414BB8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42EB00;
  if (!qword_1EF42EB00)
  {
    sub_1BC34B508(255, &qword_1EF429B90, (uint64_t)&_s20FormattedRecordValueVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC4103C0();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EB00);
  }
  return result;
}

unint64_t sub_1BC414C30()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF42EB08;
  if (!qword_1EF42EB08)
  {
    sub_1BC4143B0(255, &qword_1EF42EA78, &qword_1EF429B70, (uint64_t)&_s15FormattedRecordVN);
    v2 = v1;
    v3[0] = sub_1BC41488C();
    v3[1] = sub_1BC414CB0();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA0B8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EB08);
  }
  return result;
}

unint64_t sub_1BC414CB0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF42EB10;
  if (!qword_1EF42EB10)
  {
    sub_1BC34B508(255, &qword_1EF429B70, (uint64_t)&_s15FormattedRecordVN, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC41048C();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF42EB10);
  }
  return result;
}

uint64_t _s11ModeSegmentOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13FormattedDataV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BC414E04 + 4 * byte_1BC63E1D1[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BC414E38 + 4 * byte_1BC63E1CC[v4]))();
}

uint64_t sub_1BC414E38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC414E40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC414E48);
  return result;
}

uint64_t sub_1BC414E54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC414E5CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BC414E60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC414E68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s16FormattedRecordsO10CodingKeysOMa()
{
  return &_s16FormattedRecordsO10CodingKeysON;
}

ValueMetadata *_s16FormattedRecordsO15PlainCodingKeysOMa()
{
  return &_s16FormattedRecordsO15PlainCodingKeysON;
}

ValueMetadata *_s16FormattedRecordsO15ValueCodingKeysOMa()
{
  return &_s16FormattedRecordsO15ValueCodingKeysON;
}

ValueMetadata *_s16FormattedRecordsO22ValueInRangeCodingKeysOMa()
{
  return &_s16FormattedRecordsO22ValueInRangeCodingKeysON;
}

ValueMetadata *_s16FormattedRecordsO21ThreeValuesCodingKeysOMa()
{
  return &_s16FormattedRecordsO21ThreeValuesCodingKeysON;
}

uint64_t _s15FormattedRecordV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC414F04 + 4 * byte_1BC63E1D6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC414F24 + 4 * byte_1BC63E1DB[v4]))();
}

_BYTE *sub_1BC414F04(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC414F24(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC414F2C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC414F34(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC414F3C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC414F44(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s16FormattedRecordsO18MetadataCodingKeysOMa()
{
  return &_s16FormattedRecordsO18MetadataCodingKeysON;
}

unint64_t sub_1BC414F64()
{
  unint64_t result;

  result = qword_1EF42EB18;
  if (!qword_1EF42EB18)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F394, &_s16FormattedRecordsO18MetadataCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB18);
  }
  return result;
}

unint64_t sub_1BC414FAC()
{
  unint64_t result;

  result = qword_1EF42EB20;
  if (!qword_1EF42EB20)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F44C, &_s16FormattedRecordsO21ThreeValuesCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB20);
  }
  return result;
}

unint64_t sub_1BC414FF4()
{
  unint64_t result;

  result = qword_1EF42EB28;
  if (!qword_1EF42EB28)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F504, &_s16FormattedRecordsO22ValueInRangeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB28);
  }
  return result;
}

unint64_t sub_1BC41503C()
{
  unint64_t result;

  result = qword_1EF42EB30;
  if (!qword_1EF42EB30)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F5BC, &_s16FormattedRecordsO15ValueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB30);
  }
  return result;
}

unint64_t sub_1BC415084()
{
  unint64_t result;

  result = qword_1EF42EB38;
  if (!qword_1EF42EB38)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F674, &_s16FormattedRecordsO15PlainCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB38);
  }
  return result;
}

unint64_t sub_1BC4150CC()
{
  unint64_t result;

  result = qword_1EF42EB40;
  if (!qword_1EF42EB40)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F72C, &_s16FormattedRecordsO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB40);
  }
  return result;
}

unint64_t sub_1BC415114()
{
  unint64_t result;

  result = qword_1EF42EB48;
  if (!qword_1EF42EB48)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F69C, &_s16FormattedRecordsO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB48);
  }
  return result;
}

unint64_t sub_1BC41515C()
{
  unint64_t result;

  result = qword_1EF42EB50;
  if (!qword_1EF42EB50)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F6C4, &_s16FormattedRecordsO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB50);
  }
  return result;
}

unint64_t sub_1BC4151A4()
{
  unint64_t result;

  result = qword_1EF42EB58;
  if (!qword_1EF42EB58)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F5E4, &_s16FormattedRecordsO15PlainCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB58);
  }
  return result;
}

unint64_t sub_1BC4151EC()
{
  unint64_t result;

  result = qword_1EF42EB60;
  if (!qword_1EF42EB60)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F60C, &_s16FormattedRecordsO15PlainCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB60);
  }
  return result;
}

unint64_t sub_1BC415234()
{
  unint64_t result;

  result = qword_1EF42EB68;
  if (!qword_1EF42EB68)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F52C, &_s16FormattedRecordsO15ValueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB68);
  }
  return result;
}

unint64_t sub_1BC41527C()
{
  unint64_t result;

  result = qword_1EF42EB70;
  if (!qword_1EF42EB70)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F554, &_s16FormattedRecordsO15ValueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB70);
  }
  return result;
}

unint64_t sub_1BC4152C4()
{
  unint64_t result;

  result = qword_1EF42EB78;
  if (!qword_1EF42EB78)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F474, &_s16FormattedRecordsO22ValueInRangeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB78);
  }
  return result;
}

unint64_t sub_1BC41530C()
{
  unint64_t result;

  result = qword_1EF42EB80;
  if (!qword_1EF42EB80)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F49C, &_s16FormattedRecordsO22ValueInRangeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB80);
  }
  return result;
}

unint64_t sub_1BC415354()
{
  unint64_t result;

  result = qword_1EF42EB88;
  if (!qword_1EF42EB88)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F3BC, &_s16FormattedRecordsO21ThreeValuesCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB88);
  }
  return result;
}

unint64_t sub_1BC41539C()
{
  unint64_t result;

  result = qword_1EF42EB90;
  if (!qword_1EF42EB90)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F3E4, &_s16FormattedRecordsO21ThreeValuesCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB90);
  }
  return result;
}

unint64_t sub_1BC4153E4()
{
  unint64_t result;

  result = qword_1EF42EB98;
  if (!qword_1EF42EB98)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F304, &_s16FormattedRecordsO18MetadataCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EB98);
  }
  return result;
}

unint64_t sub_1BC41542C()
{
  unint64_t result;

  result = qword_1EF42EBA0;
  if (!qword_1EF42EBA0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63F32C, &_s16FormattedRecordsO18MetadataCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF42EBA0);
  }
  return result;
}

uint64_t type metadata accessor for RecentLabsDataSource()
{
  uint64_t result;

  result = qword_1EF42EBB0;
  if (!qword_1EF42EBB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC4154C0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC41550C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_1BC62B288();
  v17 = *(_QWORD *)(v4 - 8);
  v18 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BDB74(0, v7, 0);
    v8 = v22;
    v9 = a1 + 40;
    do
    {
      v19 = v7;
      v10 = *(_BYTE *)(v9 - 8);
      v11 = swift_bridgeObjectRetain();
      v21 = sub_1BC420C98(v11);
      swift_getKeyPath();
      sub_1BC357158(0, &qword_1EF42BAD8, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC4196F4();
      v12 = sub_1BC62C7E8();
      v20 = v2;
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BC416DEC(v10);
      sub_1BC3D22B0(v12);
      swift_bridgeObjectRelease();
      sub_1BC416DEC(v10);
      sub_1BC62B270();
      swift_bridgeObjectRelease();
      v22 = v8;
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BC3BDB74(v13 > 1, v14 + 1, 1);
        v8 = v22;
      }
      *(_QWORD *)(v8 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v8+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v14, v6, v18);
      v9 += 16;
      v2 = v20;
      v7 = v19 - 1;
    }
    while (v19 != 1);
  }
  return v8;
}

uint64_t sub_1BC415718(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_11;
  while ((a1 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData + 16) == 1)
      goto LABEL_5;
    if (v2 != 1)
    {
      v4 = 5;
      while (1)
      {
        v5 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        if (*(_QWORD *)(*(_QWORD *)(a1 + 8 * v4) + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData + 16) == 1)
          goto LABEL_5;
        ++v4;
        if (v5 == v2)
          goto LABEL_11;
      }
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
      v2 = sub_1BC62D3B8();
      if (v2)
        continue;
    }
    goto LABEL_11;
  }
  v6 = *(_QWORD *)(MEMORY[0x1BCCF24CC](0, a1) + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData + 16);
  swift_unknownObjectRelease();
  if (v6 == 1)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v7 = 1;
    while (1)
    {
      result = MEMORY[0x1BCCF24CC](v7, a1);
      v8 = v7 + 1;
      if (__OFADD__(v7, 1))
        break;
      v9 = *(_QWORD *)(result + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData + 16);
      swift_unknownObjectRelease();
      if (v9 == 1)
        goto LABEL_5;
      ++v7;
      if (v8 == v2)
        goto LABEL_11;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC415880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  sub_1BC41989C();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(_QWORD *)(v0 + qword_1EF42EBA8);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1BC419948;
  *(_QWORD *)(v6 + 24) = v0;
  sub_1BC3EA830();
  sub_1BC3A451C(0, &qword_1EF42BAD0, &qword_1EF42BAD8, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem);
  sub_1BC347F0C(&qword_1EF431D30, (uint64_t (*)(uint64_t))sub_1BC3EA830, MEMORY[0x1E0C95D90]);
  swift_retain();
  swift_retain();
  sub_1BC62C02C();
  swift_release();
  swift_release();
  sub_1BC347F0C(&qword_1EF42EC60, (uint64_t (*)(uint64_t))sub_1BC41989C, MEMORY[0x1E0C95950]);
  v7 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1BC415A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t *v22;
  id v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a2;
  v5 = type metadata accessor for UserDomainConceptViewData();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v28 = a3;
  if (v9)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    swift_retain();
    sub_1BC62D28C();
    v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    type metadata accessor for RecentUDCCell();
    v30 = (void **)(a3 + qword_1ED6A40E0);
    swift_beginAccess();
    v26 = v6;
    v11 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BC35EBE0(v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      v12 = *v30;
      type metadata accessor for UDCRecentItem();
      v13 = swift_allocObject();
      v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
      sub_1BC347F0C(&qword_1EF42EC00, (uint64_t (*)(uint64_t))type metadata accessor for RecentUDCCell, (uint64_t)&unk_1BC64B8B0);
      v15 = v12;
      *v14 = sub_1BC62ADA8();
      v14[1] = v16;
      sub_1BC375724((uint64_t)v8, v13 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      *(_QWORD *)(v13 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore) = v15;
      *(_QWORD *)(v13 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration) = 0;
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v10 += v11;
      --v9;
    }
    while (v9);
    v27 = v31;
    a3 = v28;
    v6 = v26;
  }
  else
  {
    swift_retain();
    v27 = MEMORY[0x1E0DEE9D8];
  }
  v17 = v29;
  v18 = *(_QWORD *)(v29 + 16);
  if (v18)
  {
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    v19 = v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    type metadata accessor for RecentUDCCell();
    v30 = (void **)(a3 + qword_1ED6A40E0);
    swift_beginAccess();
    v29 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BC35EBE0(v19, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      v20 = *v30;
      type metadata accessor for UDCRecentItem();
      v21 = swift_allocObject();
      v22 = (uint64_t *)(v21 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
      sub_1BC347F0C(&qword_1EF42EC00, (uint64_t (*)(uint64_t))type metadata accessor for RecentUDCCell, (uint64_t)&unk_1BC64B8B0);
      v23 = v20;
      *v22 = sub_1BC62ADA8();
      v22[1] = v24;
      sub_1BC375724((uint64_t)v8, v21 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      *(_QWORD *)(v21 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore) = v23;
      *(_QWORD *)(v21 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration) = 0;
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v19 += v29;
      --v18;
    }
    while (v18);
  }
  swift_release();
  return v27;
}

uint64_t sub_1BC415DB4(unint64_t a1, int64_t a2)
{
  unint64_t v2;
  unint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  _QWORD *v30;
  int64_t v31;
  BOOL v32;
  int v33;
  int v34;
  uint64_t *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t *v39;
  int v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t inited;
  char v45;
  int v46;
  unint64_t v47;
  char *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void **v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  void (*v70)(unint64_t, char *, uint64_t);
  void **v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  id v77;
  char *v78;
  char *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  int64_t v87;
  uint64_t result;
  unsigned __int8 *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  __int128 v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  char *v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  void (*v108)(unint64_t, char *, uint64_t);
  unint64_t v109;
  int64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  _QWORD *v114;
  unint64_t *v115;

  v99 = a1;
  v96 = sub_1BC62A7B4();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v94 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1BC62B624();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v101 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1BC62B288();
  v105 = *(_QWORD *)(v104 - 8);
  v7 = MEMORY[0x1E0C80A78](v104);
  v100 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v98 = (char *)&v93 - v9;
  v10 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = (unint64_t *)MEMORY[0x1E0DEE9E0];
  if ((unint64_t)a2 >> 62)
  {
LABEL_24:
    if (a2 < 0)
      v2 = a2;
    else
      v2 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = sub_1BC62D3B8();
    v110 = a2;
    if (v13)
      goto LABEL_3;
  }
  else
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v110 = a2;
    if (v13)
    {
LABEL_3:
      v109 = a2 & 0xC000000000000001;
      v14 = (unint64_t *)MEMORY[0x1E0DEE9E0];
      v15 = 4;
      v108 = (void (*)(unint64_t, char *, uint64_t))(MEMORY[0x1E0DEE9B0] + 8);
      v107 = xmmword_1BC6396B0;
      while (1)
      {
        v3 = (unint64_t *)(v15 - 4);
        if (v109)
        {
          a2 = MEMORY[0x1BCCF24CC](v15 - 4, a2);
          v2 = v15 - 3;
          if (__OFADD__(v3, 1))
            goto LABEL_21;
        }
        else
        {
          a2 = *(_QWORD *)(a2 + 8 * v15);
          swift_retain();
          v2 = v15 - 3;
          if (__OFADD__(v3, 1))
          {
LABEL_21:
            __break(1u);
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
        }
        sub_1BC35EBE0(a2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
        v16 = sub_1BC418460((uint64_t)v12);
        v3 = v14;
        v18 = sub_1BC558FD8(v16);
        v19 = v14[2];
        v20 = (v17 & 1) == 0;
        v21 = v19 + v20;
        if (__OFADD__(v19, v20))
          goto LABEL_22;
        v22 = v17;
        if ((uint64_t)v14[3] < v21)
        {
          sub_1BC3C4B98(v21, 1);
          v14 = v115;
          v23 = sub_1BC558FD8(v16);
          if ((v22 & 1) != (v24 & 1))
          {
            sub_1BC62D5EC();
            __break(1u);
            goto LABEL_87;
          }
          v18 = v23;
        }
        if ((v22 & 1) != 0)
        {
          v3 = (unint64_t *)(v14[7] + 8 * v18);
          MEMORY[0x1BCCF1B30]();
          if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          sub_1BC62C8D8();
          sub_1BC62C890();
        }
        else
        {
          sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, (uint64_t)v108, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
          v25 = swift_allocObject();
          *(_OWORD *)(v25 + 16) = v107;
          *(_QWORD *)(v25 + 32) = a2;
          v113 = v25;
          v3 = &v113;
          sub_1BC62C890();
          v26 = v113;
          v14[(v18 >> 6) + 8] |= 1 << v18;
          *(_BYTE *)(v14[6] + v18) = v16;
          *(_QWORD *)(v14[7] + 8 * v18) = v26;
          v27 = v14[2];
          v28 = __OFADD__(v27, 1);
          v29 = v27 + 1;
          if (v28)
            goto LABEL_23;
          v14[2] = v29;
        }
        ++v15;
        a2 = v110;
        if (v2 == v13)
        {
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v14 = (unint64_t *)MEMORY[0x1E0DEE9E0];
LABEL_29:
  v30 = sub_1BC3D6EC0((uint64_t)v14);
  swift_release();
  v31 = v30[2];
  if (!v31)
  {
LABEL_35:
    LODWORD(v109) = 4;
    v32 = 1;
    goto LABEL_36;
  }
  if (*((_BYTE *)v30 + 32) != 5)
  {
    if (v31 != 1)
    {
      v89 = (unsigned __int8 *)(v30 + 6);
      v90 = 1;
      while (1)
      {
        v91 = v90 + 1;
        if (__OFADD__(v90, 1))
          break;
        v92 = *v89;
        v32 = v92 != 5;
        if (v92 == 5)
          goto LABEL_32;
        ++v90;
        v89 += 16;
        if (v91 == v31)
        {
          v33 = 4;
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_85:
      swift_once();
      goto LABEL_67;
    }
    goto LABEL_35;
  }
  v32 = 0;
LABEL_32:
  v33 = 1;
LABEL_33:
  LODWORD(v109) = v33;
LABEL_36:
  v34 = 2;
  if ((sub_1BC420B6C(a2) & 1) == 0)
  {
    if ((sub_1BC39D35C(0xD000000000000026, 0x80000001BC6546A0, 0) & 1) != 0)
      v34 = 2;
    else
      v34 = 4;
  }
  v97 = v34;
  v115 = (unint64_t *)sub_1BC4206C4(v99);
  swift_getKeyPath();
  sub_1BC357158(0, &qword_1EF42BAD8, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC4196F4();
  v108 = (void (*)(unint64_t, char *, uint64_t))sub_1BC62C7E8();
  *(_QWORD *)&v107 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  if (v31)
  {
    v35 = v30 + 5;
    v36 = (unint64_t *)MEMORY[0x1E0DEE9D8];
    do
    {
      v40 = *((unsigned __int8 *)v35 - 8);
      if (v40 != 5)
      {
        v41 = *v35;
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v115 = v36;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BC3BDBA0(0, v36[2] + 1, 1);
          v36 = v115;
        }
        v38 = v36[2];
        v37 = v36[3];
        if (v38 >= v37 >> 1)
        {
          sub_1BC3BDBA0(v37 > 1, v38 + 1, 1);
          v36 = v115;
        }
        v36[2] = v38 + 1;
        v39 = &v36[2 * v38];
        *((_BYTE *)v39 + 32) = v40;
        v39[5] = v41;
      }
      v35 += 2;
      --v31;
    }
    while (v31);
  }
  else
  {
    v36 = (unint64_t *)MEMORY[0x1E0DEE9D8];
  }
  swift_release();
  v115 = v36;
  swift_retain();
  v43 = v107;
  sub_1BC417AA0(&v115);
  if (v43)
  {
LABEL_87:
    result = swift_release();
    __break(1u);
    return result;
  }
  swift_release();
  *(_QWORD *)&v107 = sub_1BC41550C((uint64_t)v115);
  swift_release();
  sub_1BC419754();
  inited = swift_initStackObject();
  v93 = xmmword_1BC6395A0;
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  v45 = v109;
  *(_BYTE *)(inited + 32) = v109;
  v46 = v97;
  *(_BYTE *)(inited + 33) = v97;
  v47 = MEMORY[0x1E0DEE9D8];
  v48 = (char *)MEMORY[0x1E0DEE9D8];
  if (!v32)
  {
    v48 = sub_1BC3B60F4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v50 = *((_QWORD *)v48 + 2);
    v49 = *((_QWORD *)v48 + 3);
    if (v50 >= v49 >> 1)
      v48 = sub_1BC3B60F4((char *)(v49 > 1), v50 + 1, 1, v48);
    *((_QWORD *)v48 + 2) = v50 + 1;
    v48[v50 + 32] = v45;
    v46 = *(unsigned __int8 *)(inited + 33);
  }
  if (v46 != 4)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v48 = sub_1BC3B60F4(0, *((_QWORD *)v48 + 2) + 1, 1, v48);
    v52 = *((_QWORD *)v48 + 2);
    v51 = *((_QWORD *)v48 + 3);
    if (v52 >= v51 >> 1)
      v48 = sub_1BC3B60F4((char *)(v51 > 1), v52 + 1, 1, v48);
    *((_QWORD *)v48 + 2) = v52 + 1;
    v48[v52 + 32] = v46;
  }
  swift_bridgeObjectRelease();
  v53 = *((_QWORD *)v48 + 2);
  if (v53)
  {
    v113 = v47;
    v54 = v106;
    swift_retain();
    sub_1BC62D28C();
    type metadata accessor for NavigationCell();
    v55 = (void **)(v54 + qword_1ED6A40E0);
    swift_beginAccess();
    type metadata accessor for NavigationItem();
    v56 = 0;
    do
    {
      v57 = v56 + 1;
      v58 = v48[v56 + 32];
      v59 = *v55;
      v60 = swift_allocObject();
      sub_1BC347F0C(&qword_1EF42EC08, (uint64_t (*)(uint64_t))type metadata accessor for NavigationCell, (uint64_t)&unk_1BC641E78);
      v61 = v59;
      *(_QWORD *)(v60 + 16) = sub_1BC62ADA8();
      *(_QWORD *)(v60 + 24) = v62;
      *(_BYTE *)(v60 + 32) = v58;
      *(_BYTE *)(v60 + 33) = 2;
      *(_QWORD *)(v60 + 40) = v61;
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v56 = v57;
    }
    while (v53 != v57);
    v2 = v113;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v31 = *(_QWORD *)(v105 + 72);
  v63 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
  v3 = (unint64_t *)swift_allocObject();
  *((_OWORD *)v3 + 1) = xmmword_1BC639590;
  v109 = v63;
  if (qword_1ED6A4888 != -1)
    goto LABEL_85;
LABEL_67:
  v64 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC3D22B0((unint64_t)v108);
  swift_bridgeObjectRelease();
  sub_1BC62B270();
  v114 = v3;
  sub_1BC3BB5A0(v107);
  sub_1BC3D22CC(v2);
  swift_bridgeObjectRelease();
  v65 = v98;
  sub_1BC62B270();
  v66 = (unint64_t)v114;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v66 = sub_1BC3B5F84(0, *(_QWORD *)(v66 + 16) + 1, 1, v66);
  v67 = v110;
  v69 = *(_QWORD *)(v66 + 16);
  v68 = *(_QWORD *)(v66 + 24);
  if (v69 >= v68 >> 1)
    v66 = sub_1BC3B5F84(v68 > 1, v69 + 1, 1, v66);
  *(_QWORD *)(v66 + 16) = v69 + 1;
  v70 = *(void (**)(unint64_t, char *, uint64_t))(v105 + 32);
  v70(v66 + v109 + v69 * v31, v65, v104);
  v114 = (_QWORD *)v66;
  if ((sub_1BC415718(v67) & 1) != 0 || (sub_1BC415718(v99) & 1) != 0)
  {
    v108 = v70;
    v110 = v31;
    v71 = (void **)(v106 + qword_1ED6A40E0);
    swift_beginAccess();
    v72 = *v71;
    v73 = type metadata accessor for NavigationItem();
    v74 = swift_allocObject();
    type metadata accessor for NavigationCell();
    sub_1BC347F0C(&qword_1EF42EC08, (uint64_t (*)(uint64_t))type metadata accessor for NavigationCell, (uint64_t)&unk_1BC641E78);
    v75 = v72;
    *(_QWORD *)(v74 + 16) = sub_1BC62ADA8();
    *(_QWORD *)(v74 + 24) = v76;
    *(_WORD *)(v74 + 32) = 515;
    *(_QWORD *)(v74 + 40) = v75;
    v77 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v111 = 0x74497265746F6F46;
    v112 = 0xEB000000005F6D65;
    v78 = v94;
    sub_1BC62A7A8();
    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v78, v96);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v79 = v101;
    sub_1BC62B618();
    v80 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC357158(0, &qword_1EF42C5F0, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = v93;
    *(_QWORD *)(v81 + 56) = v73;
    *(_QWORD *)(v81 + 64) = sub_1BC347F0C(&qword_1EF42CFB8, (uint64_t (*)(uint64_t))type metadata accessor for NavigationItem, (uint64_t)&unk_1BC641E00);
    *(_QWORD *)(v81 + 32) = v74;
    v82 = v103;
    *(_QWORD *)(v81 + 96) = v103;
    *(_QWORD *)(v81 + 104) = sub_1BC347F0C(&qword_1EF42A058, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0], MEMORY[0x1E0D2B6A8]);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v81 + 72));
    (*(void (**)(uint64_t *, char *, uint64_t))(v102 + 16))(boxed_opaque_existential_1, v79, v82);
    swift_retain();
    sub_1BC62B270();
    v84 = (unint64_t)v114;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v84 = sub_1BC3B5F84(0, *(_QWORD *)(v84 + 16) + 1, 1, v84);
    v86 = *(_QWORD *)(v84 + 16);
    v85 = *(_QWORD *)(v84 + 24);
    v87 = v110;
    if (v86 >= v85 >> 1)
      v84 = sub_1BC3B5F84(v85 > 1, v86 + 1, 1, v84);
    *(_QWORD *)(v84 + 16) = v86 + 1;
    v108(v84 + v109 + v86 * v87, v100, v104);
    swift_release();
    v114 = (_QWORD *)v84;
    (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v103);
    return (uint64_t)v114;
  }
  return v66;
}

uint64_t sub_1BC416C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v4 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v4);
  v6 = (id *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  sub_1BC3462D8(a1 + *(int *)(v4 + 36), (uint64_t)&v14 - v8);
  sub_1BC35EBE0(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
  v10 = sub_1BC62A760();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v12 = objc_msgSend(v6[1], sel_modificationDate);
    sub_1BC62A724();

    sub_1BC36D71C((uint64_t)v9);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v9, v10);
  }
  return sub_1BC348D78((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
}

uint64_t sub_1BC416DC4()
{
  return sub_1BC62A70C() & 1;
}

void sub_1BC416DEC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC416E1C()
{
  id v0;
  uint64_t v1;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v0 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_1BC41713C@<X0>(unint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  unsigned int v49;
  id v50;
  id v51;
  char *v52;
  char *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;

  v67 = a2;
  v6 = sub_1BC62B4B0();
  v65 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v64 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1BC62AE74();
  v63 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v62 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62B3C0();
  v70 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62B288();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v59 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (uint64_t)&v59 - v19;
  v72 = v3;
  v21 = sub_1BC62B2C4();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (*(_QWORD *)(v21 + 16) <= a1)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v61 = v6;
  v68 = v9;
  v69 = a3;
  v22 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v23 = *(_QWORD *)(v12 + 72) * a1;
  a3 = *(_QWORD **)(v12 + 16);
  ((void (*)(uint64_t, unint64_t, uint64_t))a3)(v20, v21 + v22 + v23, v11);
  swift_bridgeObjectRelease();
  sub_1BC62B27C();
  v25 = v24;
  v26 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v26(v20, v11);
  swift_bridgeObjectRelease();
  v60 = v25;
  if (v25)
    sub_1BC62B330();
  else
    sub_1BC62B36C();
  sub_1BC62B378();
  v27 = sub_1BC62B2C4();
  if (*(_QWORD *)(v27 + 16) <= a1)
    goto LABEL_28;
  ((void (*)(char *, unint64_t, uint64_t))a3)(v18, v27 + v22 + v23, v11);
  swift_bridgeObjectRelease();
  v28 = sub_1BC62B24C();
  v30 = v29;
  v26((uint64_t)v18, v11);
  if (v28 == 0xD00000000000001BLL && v30 == 0x80000001BC657AD0)
    goto LABEL_9;
  v20 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    goto LABEL_11;
  v43 = sub_1BC62B2C4();
  if (*(_QWORD *)(v43 + 16) <= a1)
    goto LABEL_29;
  ((void (*)(char *, unint64_t, uint64_t))a3)(v15, v43 + v22 + v23, v11);
  swift_bridgeObjectRelease();
  v44 = sub_1BC62B24C();
  v46 = v45;
  v26((uint64_t)v15, v11);
  if (v44 == 0xD000000000000018 && v46 == 0x80000001BC657AF0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_11:
    sub_1BC4179B8();
    v32 = *(int *)(v31 + 48);
    v34 = v69;
    v33 = v70;
    goto LABEL_12;
  }
  v20 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    goto LABEL_11;
  v47 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v47)
    goto LABEL_30;
  v48 = v47;
  v20 = (uint64_t)objc_msgSend(v47, sel_features);

  if (v20)
  {
    v49 = objc_msgSend((id)v20, sel_stanley);

    v34 = v69;
    if (v49)
    {
      v50 = objc_msgSend(v67, sel_traitCollection);
      v51 = objc_msgSend(v50, sel_horizontalSizeClass);

      if (v51 == (id)2)
      {
        v52 = v62;
        sub_1BC62AE5C();
        type metadata accessor for RecentLabsDataSource();
        swift_unknownObjectRetain();
        sub_1BC62B024();
        v53 = v64;
        sub_1BC62B498();
        v54 = (void *)sub_1BC62AE50();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v53, v61);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v52, v66);
        if (v60)
        {
          v55 = (void *)objc_opt_self();
          v56 = v54;
          v57 = objc_msgSend(v55, sel_estimatedDimension_, 100.0);
          v54 = (void *)sub_1BC62CD58();

        }
        (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v68);
        *v34 = v54;
        v39 = (unsigned int *)MEMORY[0x1E0D2B1A8];
        goto LABEL_13;
      }
    }
    sub_1BC4179B8();
    v32 = *(int *)(v58 + 48);
    v33 = v70;
LABEL_12:
    v35 = v71;
    v36 = v68;
    (*(void (**)(_QWORD *, char *, uint64_t))(v33 + 16))(v34, v71, v68);
    v37 = v72 + qword_1ED6A40F8;
    swift_beginAccess();
    v38 = MEMORY[0x1BCCF37A4](v37);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v36);
    *(_QWORD *)((char *)v34 + v32) = v38;
    v39 = (unsigned int *)MEMORY[0x1E0D2B1A0];
LABEL_13:
    v40 = *v39;
    v41 = sub_1BC62B318();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v34, v40, v41);
    sub_1BC62B318();
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v34, 0, 1, v41);
  }
LABEL_31:
  __break(1u);
  (*(void (**)(_QWORD *, uint64_t))(v65 + 8))(a3, v61);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v20, v66);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1BC417794()
{
  sub_1BC62B408();
  sub_1BC62CB48();
  sub_1BC62B60C();
  sub_1BC62CB54();
  type metadata accessor for RecentUDCCell();
  sub_1BC347F0C(&qword_1EF42EC00, (uint64_t (*)(uint64_t))type metadata accessor for RecentUDCCell, (uint64_t)&unk_1BC64B8B0);
  sub_1BC62CB48();
  sub_1BC62CB48();
  type metadata accessor for NavigationCell();
  sub_1BC347F0C(&qword_1EF42EC08, (uint64_t (*)(uint64_t))type metadata accessor for NavigationCell, (uint64_t)&unk_1BC641E78);
  sub_1BC62CB48();
  return sub_1BC62CB48();
}

void sub_1BC417890()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC4178BC()
{
  return swift_release();
}

uint64_t sub_1BC4178CC()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  sub_1BC4C0CC8(v0);
  swift_bridgeObjectRelease();
  v1 = sub_1BC62B300();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC4179B0()
{
  return type metadata accessor for RecentLabsDataSource();
}

void sub_1BC4179B8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42EC10)
  {
    sub_1BC62B3C0();
    sub_1BC357158(255, &qword_1EF42EC18, (uint64_t (*)(uint64_t))sub_1BC417A3C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42EC10);
  }
}

unint64_t sub_1BC417A3C()
{
  unint64_t result;

  result = qword_1EF42EC20;
  if (!qword_1EF42EC20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42EC20);
  }
  return result;
}

unint64_t sub_1BC417A78@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1BC419B48(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC417AA0(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1BC5048F0(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1BC417B08(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BC417B08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned __int8 *__dst;

  v3 = a1[1];
  result = sub_1BC62D520();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v85 = 0;
      v86 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v88 = *(unsigned __int8 *)(v86 + 16 * i);
        v89 = v85;
        do
        {
          if (v88 >= *(unsigned __int8 *)(v86 + v89))
            break;
          if (!v86)
            goto LABEL_140;
          v90 = v86 + v89;
          v91 = *(_QWORD *)(v86 + v89 + 24);
          *(_OWORD *)(v86 + v89 + 16) = *(_OWORD *)(v86 + v89);
          *(_BYTE *)v90 = v88;
          *(_QWORD *)(v90 + 8) = v91;
          v89 -= 16;
        }
        while (v89 != -16);
        v85 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (unsigned __int8 *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v92 = v12;
      v103 = v9;
      if (v13 >= 2)
      {
        v93 = *v101;
        do
        {
          v94 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v93)
            goto LABEL_144;
          v95 = v92;
          v96 = *(_QWORD *)&v92[16 * v94 + 32];
          v97 = *(_QWORD *)&v92[16 * v13 + 24];
          sub_1BC4181E8((unsigned __int8 *)(v93 + 16 * v96), (unsigned __int8 *)(v93 + 16 * *(_QWORD *)&v92[16 * v13 + 16]), v93 + 16 * v97, __dst);
          if (v1)
            break;
          if (v97 < v96)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v95 = sub_1BC504414((uint64_t)v95);
          if (v94 >= *((_QWORD *)v95 + 2))
            goto LABEL_133;
          v98 = &v95[16 * v94 + 32];
          *(_QWORD *)v98 = v96;
          *((_QWORD *)v98 + 1) = v97;
          v99 = *((_QWORD *)v95 + 2);
          if (v13 > v99)
            goto LABEL_134;
          memmove(&v95[16 * v13 + 16], &v95[16 * v13 + 32], 16 * (v99 - v13));
          v92 = v95;
          *((_QWORD *)v95 + 2) = v99 - 1;
          v13 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    sub_1BC3CC98C();
    v8 = sub_1BC62C8CC();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 32;
  v100 = *a1 - 16;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v104 = v6;
  v105 = v3;
  v106 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(unsigned __int8 *)(v11 + 16 * v10);
      v16 = 16 * v14;
      v17 = *(unsigned __int8 *)(v11 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (unsigned __int8 *)(v102 + 16 * v14);
        v19 = v15;
        while (1)
        {
          v21 = *v18;
          v18 += 16;
          v20 = v21;
          if (v15 < v17 == v21 >= v19)
            break;
          ++v10;
          v19 = v20;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v22 = 16 * v10;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_143;
              v25 = v11 + v22;
              v26 = *(_BYTE *)(v11 + v16);
              v27 = *(_QWORD *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v22 - 16);
              *(_BYTE *)(v25 - 16) = v26;
              *(_QWORD *)(v25 - 8) = v27;
            }
            ++v24;
            v22 -= 16;
            v16 += 16;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v28 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v28 >= v3)
      v28 = v3;
    if (v28 < v14)
      break;
    if (v10 != v28)
    {
      v29 = (unsigned __int8 *)(v100 + 16 * v10);
      do
      {
        v30 = *(unsigned __int8 *)(v11 + 16 * v10);
        v31 = v14;
        v32 = v29;
        do
        {
          if (v30 >= *v32)
            break;
          if (!v11)
            goto LABEL_141;
          v33 = *((_QWORD *)v32 + 3);
          *((_OWORD *)v32 + 1) = *(_OWORD *)v32;
          *v32 = v30;
          *((_QWORD *)v32 + 1) = v33;
          v32 -= 16;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 16;
      }
      while (v10 != v28);
      v10 = v28;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1BC503AB4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v35 = *((_QWORD *)v12 + 2);
    v34 = *((_QWORD *)v12 + 3);
    v13 = v35 + 1;
    v11 = v106;
    if (v35 >= v34 >> 1)
    {
      v84 = sub_1BC503AB4((char *)(v34 > 1), v35 + 1, 1, v12);
      v11 = v106;
      v12 = v84;
    }
    *((_QWORD *)v12 + 2) = v13;
    v36 = v12 + 32;
    v37 = &v12[16 * v35 + 32];
    *(_QWORD *)v37 = v14;
    *((_QWORD *)v37 + 1) = v10;
    if (v35)
    {
      while (1)
      {
        v38 = v13 - 1;
        if (v13 >= 4)
        {
          v43 = &v36[16 * v13];
          v44 = *((_QWORD *)v43 - 8);
          v45 = *((_QWORD *)v43 - 7);
          v49 = __OFSUB__(v45, v44);
          v46 = v45 - v44;
          if (v49)
            goto LABEL_119;
          v48 = *((_QWORD *)v43 - 6);
          v47 = *((_QWORD *)v43 - 5);
          v49 = __OFSUB__(v47, v48);
          v41 = v47 - v48;
          v42 = v49;
          if (v49)
            goto LABEL_120;
          v50 = v13 - 2;
          v51 = &v36[16 * v13 - 32];
          v53 = *(_QWORD *)v51;
          v52 = *((_QWORD *)v51 + 1);
          v49 = __OFSUB__(v52, v53);
          v54 = v52 - v53;
          if (v49)
            goto LABEL_122;
          v49 = __OFADD__(v41, v54);
          v55 = v41 + v54;
          if (v49)
            goto LABEL_125;
          if (v55 >= v46)
          {
            v73 = &v36[16 * v38];
            v75 = *(_QWORD *)v73;
            v74 = *((_QWORD *)v73 + 1);
            v49 = __OFSUB__(v74, v75);
            v76 = v74 - v75;
            if (v49)
              goto LABEL_129;
            v66 = v41 < v76;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v67 = *((_QWORD *)v12 + 4);
            v68 = *((_QWORD *)v12 + 5);
            v49 = __OFSUB__(v68, v67);
            v60 = v68 - v67;
            v61 = v49;
            goto LABEL_77;
          }
          v40 = *((_QWORD *)v12 + 4);
          v39 = *((_QWORD *)v12 + 5);
          v49 = __OFSUB__(v39, v40);
          v41 = v39 - v40;
          v42 = v49;
        }
        if ((v42 & 1) != 0)
          goto LABEL_121;
        v50 = v13 - 2;
        v56 = &v36[16 * v13 - 32];
        v58 = *(_QWORD *)v56;
        v57 = *((_QWORD *)v56 + 1);
        v59 = __OFSUB__(v57, v58);
        v60 = v57 - v58;
        v61 = v59;
        if (v59)
          goto LABEL_124;
        v62 = &v36[16 * v38];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v49 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v49)
          goto LABEL_127;
        if (__OFADD__(v60, v65))
          goto LABEL_128;
        if (v60 + v65 >= v41)
        {
          v66 = v41 < v65;
LABEL_83:
          if (v66)
            v38 = v50;
          goto LABEL_85;
        }
LABEL_77:
        if ((v61 & 1) != 0)
          goto LABEL_123;
        v69 = &v36[16 * v38];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v49 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v49)
          goto LABEL_126;
        if (v72 < v60)
          goto LABEL_15;
LABEL_85:
        v77 = v38 - 1;
        if (v38 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v78 = v12;
        v79 = &v36[16 * v77];
        v80 = *(_QWORD *)v79;
        v81 = &v36[16 * v38];
        v82 = *((_QWORD *)v81 + 1);
        sub_1BC4181E8((unsigned __int8 *)(v11 + 16 * *(_QWORD *)v79), (unsigned __int8 *)(v11 + 16 * *(_QWORD *)v81), v11 + 16 * v82, __dst);
        if (v1)
          goto LABEL_93;
        if (v82 < v80)
          goto LABEL_116;
        if (v38 > *((_QWORD *)v78 + 2))
          goto LABEL_117;
        *(_QWORD *)v79 = v80;
        *(_QWORD *)&v36[16 * v77 + 8] = v82;
        v83 = *((_QWORD *)v78 + 2);
        if (v38 >= v83)
          goto LABEL_118;
        v12 = v78;
        v13 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((_QWORD *)v78 + 2) = v83 - 1;
        v11 = v106;
        if (v83 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v104;
    v3 = v105;
    if (v10 >= v105)
    {
      v9 = v103;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC4181E8(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t result;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &v4[16 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v17 = (unsigned __int8 *)(a3 - 16);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 16;
          v20 = *(v18 - 16);
          v18 -= 16;
          if (*(v16 - 16) >= v20)
          {
            v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_OWORD *)v17 = *((_OWORD *)v16 - 1);
            v18 = v6;
            v16 -= 16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_OWORD *)v17 = *(_OWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 16;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1BC503D2C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC418460(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  void (*v73)(char *, uint64_t);
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t result;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  void (*v106)(char *, char *, uint64_t);
  char *v107;
  char *v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  void (*v125)(char *, char *, uint64_t);
  char *v126;
  char *v127;
  void (*v128)(char *, char *, uint64_t);
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  void (*v145)(char *, char *, uint64_t);
  char *v146;
  char *v147;
  void (*v148)(char *, char *, uint64_t);
  uint64_t v149;
  char *v150;
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  char *v153;
  char *v154;
  void (*v155)(char *, uint64_t);
  uint64_t v156;
  char v157;
  void (*v158)(char *, char *, uint64_t);
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  void (*v165)(char *, char *, uint64_t);
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  char *v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  void (*v179)(char *, char *, uint64_t);
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  void (*v197)(char *, char *, uint64_t);
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  char *v209;

  sub_1BC4197C0();
  v204 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v205 = (char *)&v177 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v203 = (char *)&v177 - v5;
  sub_1BC419824();
  v206 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v183 = (uint64_t)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v190 = (uint64_t)&v177 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v185 = (uint64_t)&v177 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v186 = (uint64_t)&v177 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v188 = (uint64_t)&v177 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v189 = (uint64_t)&v177 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v192 = (uint64_t)&v177 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v193 = (uint64_t)&v177 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v195 = (uint64_t)&v177 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v202 = (char *)&v177 - v26;
  MEMORY[0x1E0C80A78](v25);
  v196 = (uint64_t)&v177 - v27;
  v28 = sub_1BC62A8D4();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v177 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v177 - v33;
  v35 = sub_1BC62A760();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = MEMORY[0x1E0C80A78](v35);
  v182 = (char *)&v177 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x1E0C80A78](v37);
  v184 = (char *)&v177 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v187 = (char *)&v177 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v191 = (char *)&v177 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v194 = (char *)&v177 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v49 = (char *)&v177 - v48;
  v50 = MEMORY[0x1E0C80A78](v47);
  v199 = (char *)&v177 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v198 = (char *)&v177 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v200 = (char *)&v177 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v201 = (char *)&v177 - v57;
  v58 = MEMORY[0x1E0C80A78](v56);
  v60 = (char *)&v177 - v59;
  v61 = MEMORY[0x1E0C80A78](v58);
  v208 = (char *)&v177 - v62;
  v63 = MEMORY[0x1E0C80A78](v61);
  v207 = (char *)&v177 - v64;
  v65 = MEMORY[0x1E0C80A78](v63);
  v209 = (char *)&v177 - v66;
  MEMORY[0x1E0C80A78](v65);
  v68 = (char *)&v177 - v67;
  v69 = type metadata accessor for UserDomainConceptViewData();
  sub_1BC3462D8(a1 + *(int *)(v69 + 36), (uint64_t)v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
  {
    sub_1BC348D78(a1, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
    sub_1BC36D71C((uint64_t)v34);
    return 5;
  }
  v197 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v197(v68, v34, v35);
  if (*(_QWORD *)(a1 + 16) == 1)
  {
    sub_1BC348D78(a1, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v68, v35);
    return 6;
  }
  v178 = a1;
  sub_1BC62A8A4();
  sub_1BC62A844();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  v71 = v207;
  sub_1BC62A754();
  v72 = v208;
  sub_1BC62A6DC();
  v73 = *(void (**)(char *, uint64_t))(v36 + 8);
  v73(v71, v35);
  sub_1BC62A6D0();
  v73(v72, v35);
  v74 = v201;
  sub_1BC62A6B8();
  v73(v60, v35);
  v75 = v200;
  sub_1BC62A754();
  v76 = v198;
  sub_1BC62A6C4();
  v73(v75, v35);
  v77 = v199;
  sub_1BC62A6D0();
  v73(v76, v35);
  sub_1BC62A6B8();
  v73(v77, v35);
  v78 = sub_1BC347F0C((unint64_t *)&qword_1EF42EC50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  result = sub_1BC62C608();
  if ((result & 1) == 0)
  {
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v180 = v60;
  v177 = v68;
  v80 = v203;
  v81 = v204;
  v82 = *(int *)(v204 + 48);
  v181 = v78;
  v83 = &v203[v82];
  v84 = v197;
  v197(v203, v74, v35);
  v84(v83, v49, v35);
  v85 = v205;
  v86 = &v205[*(int *)(v81 + 48)];
  v87 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v87(v205, v80, v35);
  v87(v86, v83, v35);
  v88 = (uint64_t)v202;
  v84(v202, v85, v35);
  v73(v86, v35);
  v89 = &v85[*(int *)(v81 + 48)];
  v84(v85, v80, v35);
  v84(v89, v83, v35);
  v84((char *)(v88 + *(int *)(v206 + 36)), v89, v35);
  v73(v85, v35);
  v90 = v196;
  sub_1BC375724(v88, v196, (uint64_t (*)(_QWORD))sub_1BC419824);
  v91 = v209;
  LOBYTE(v89) = sub_1BC62C5FC();
  v92 = v194;
  v179 = v87;
  v87(v194, v91, v35);
  v93 = v195;
  sub_1BC35EBE0(v90, v195, (uint64_t (*)(_QWORD))sub_1BC419824);
  if ((v89 & 1) != 0)
  {
    v94 = sub_1BC62C608();
    sub_1BC348D78(v93, (uint64_t (*)(_QWORD))sub_1BC419824);
    v95 = v73;
    v73(v92, v35);
    sub_1BC348D78(v90, (uint64_t (*)(_QWORD))sub_1BC419824);
    v96 = v208;
    v98 = v199;
    v97 = v200;
    if ((v94 & 1) != 0)
    {
      sub_1BC348D78(v178, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      v95(v209, v35);
      v95(v177, v35);
      return 4;
    }
  }
  else
  {
    sub_1BC348D78(v93, (uint64_t (*)(_QWORD))sub_1BC419824);
    v95 = v73;
    v73(v92, v35);
    sub_1BC348D78(v90, (uint64_t (*)(_QWORD))sub_1BC419824);
    v96 = v208;
    v98 = v199;
    v97 = v200;
  }
  v99 = v207;
  sub_1BC62A754();
  sub_1BC62A6C4();
  v95(v99, v35);
  v100 = v180;
  sub_1BC62A6D0();
  v95(v96, v35);
  v101 = v201;
  sub_1BC62A6B8();
  v95(v100, v35);
  sub_1BC62A754();
  v102 = v198;
  sub_1BC62A6D0();
  v95(v97, v35);
  sub_1BC62A6B8();
  v95(v102, v35);
  result = sub_1BC62C608();
  if ((result & 1) == 0)
    goto LABEL_33;
  v103 = v203;
  v104 = v204;
  v105 = &v203[*(int *)(v204 + 48)];
  v106 = v197;
  v197(v203, v101, v35);
  v106(v105, v98, v35);
  v107 = v205;
  v108 = &v205[*(int *)(v104 + 48)];
  v109 = v179;
  v179(v205, v103, v35);
  v109(v108, v105, v35);
  v110 = (uint64_t)v202;
  v106(v202, v107, v35);
  v95(v108, v35);
  v111 = &v107[*(int *)(v104 + 48)];
  v106(v107, v103, v35);
  v106(v111, v105, v35);
  v106((char *)(v110 + *(int *)(v206 + 36)), v111, v35);
  v95(v107, v35);
  v112 = v193;
  sub_1BC375724(v110, v193, (uint64_t (*)(_QWORD))sub_1BC419824);
  v113 = v209;
  LOBYTE(v111) = sub_1BC62C5FC();
  v114 = v191;
  v109(v191, v113, v35);
  v115 = v192;
  sub_1BC35EBE0(v112, v192, (uint64_t (*)(_QWORD))sub_1BC419824);
  if ((v111 & 1) != 0)
  {
    v116 = sub_1BC62C608();
    sub_1BC348D78(v115, (uint64_t (*)(_QWORD))sub_1BC419824);
    v95(v114, v35);
    sub_1BC348D78(v112, (uint64_t (*)(_QWORD))sub_1BC419824);
    v117 = v207;
    if ((v116 & 1) != 0)
    {
      sub_1BC348D78(v178, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      v95(v209, v35);
      v95(v177, v35);
      return 3;
    }
  }
  else
  {
    sub_1BC348D78(v115, (uint64_t (*)(_QWORD))sub_1BC419824);
    v95(v114, v35);
    sub_1BC348D78(v112, (uint64_t (*)(_QWORD))sub_1BC419824);
    v117 = v207;
  }
  sub_1BC62A754();
  v118 = v208;
  sub_1BC62A6D0();
  v95(v117, v35);
  v119 = v180;
  sub_1BC62A6B8();
  v95(v118, v35);
  v120 = v201;
  sub_1BC62A754();
  v121 = v200;
  sub_1BC62A6B8();
  v95(v120, v35);
  result = sub_1BC62C608();
  if ((result & 1) == 0)
    goto LABEL_34;
  v122 = v203;
  v123 = v204;
  v124 = &v203[*(int *)(v204 + 48)];
  v125 = v197;
  v197(v203, v119, v35);
  v125(v124, v121, v35);
  v126 = v205;
  v127 = &v205[*(int *)(v123 + 48)];
  v128 = v179;
  v179(v205, v122, v35);
  v128(v127, v124, v35);
  v129 = v202;
  v125(v202, v126, v35);
  v95(v127, v35);
  v130 = &v126[*(int *)(v123 + 48)];
  v125(v126, v122, v35);
  v125(v130, v124, v35);
  v125(&v129[*(int *)(v206 + 36)], v130, v35);
  v95(v126, v35);
  v131 = (uint64_t)v129;
  v132 = v189;
  sub_1BC375724(v131, v189, (uint64_t (*)(_QWORD))sub_1BC419824);
  v133 = v209;
  LOBYTE(v130) = sub_1BC62C5FC();
  v134 = v187;
  v128(v187, v133, v35);
  v135 = v188;
  sub_1BC35EBE0(v132, v188, (uint64_t (*)(_QWORD))sub_1BC419824);
  if ((v130 & 1) != 0)
  {
    v136 = sub_1BC62C608();
    sub_1BC348D78(v135, (uint64_t (*)(_QWORD))sub_1BC419824);
    v95(v134, v35);
    sub_1BC348D78(v132, (uint64_t (*)(_QWORD))sub_1BC419824);
    if ((v136 & 1) != 0)
    {
      sub_1BC348D78(v178, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      v95(v209, v35);
      v95(v177, v35);
      return 2;
    }
  }
  else
  {
    sub_1BC348D78(v135, (uint64_t (*)(_QWORD))sub_1BC419824);
    v95(v134, v35);
    sub_1BC348D78(v132, (uint64_t (*)(_QWORD))sub_1BC419824);
  }
  v137 = v207;
  sub_1BC62A754();
  v138 = v208;
  sub_1BC62A6B8();
  v95(v137, v35);
  v139 = v201;
  sub_1BC62A754();
  v140 = v180;
  sub_1BC62A6AC();
  v95(v139, v35);
  result = sub_1BC62C608();
  if ((result & 1) == 0)
    goto LABEL_35;
  v141 = v203;
  v142 = v204;
  v143 = &v203[*(int *)(v204 + 48)];
  v144 = v138;
  v145 = v197;
  v197(v203, v144, v35);
  v145(v143, v140, v35);
  v146 = v205;
  v147 = &v205[*(int *)(v142 + 48)];
  v148 = v179;
  v179(v205, v141, v35);
  v148(v147, v143, v35);
  v149 = (uint64_t)v202;
  v145(v202, v146, v35);
  v95(v147, v35);
  v150 = &v146[*(int *)(v142 + 48)];
  v145(v146, v141, v35);
  v145(v150, v143, v35);
  v145((char *)(v149 + *(int *)(v206 + 36)), v150, v35);
  v95(v146, v35);
  v151 = v95;
  v152 = v186;
  sub_1BC375724(v149, v186, (uint64_t (*)(_QWORD))sub_1BC419824);
  v153 = v209;
  LOBYTE(v150) = sub_1BC62C5FC();
  v154 = v184;
  v148(v184, v153, v35);
  v155 = v151;
  v156 = v185;
  sub_1BC35EBE0(v152, v185, (uint64_t (*)(_QWORD))sub_1BC419824);
  if ((v150 & 1) != 0)
  {
    v157 = sub_1BC62C608();
    sub_1BC348D78(v156, (uint64_t (*)(_QWORD))sub_1BC419824);
    v155(v154, v35);
    sub_1BC348D78(v152, (uint64_t (*)(_QWORD))sub_1BC419824);
    if ((v157 & 1) != 0)
    {
      sub_1BC348D78(v178, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      v155(v209, v35);
      v155(v177, v35);
      return 1;
    }
  }
  else
  {
    sub_1BC348D78(v156, (uint64_t (*)(_QWORD))sub_1BC419824);
    v155(v154, v35);
    sub_1BC348D78(v152, (uint64_t (*)(_QWORD))sub_1BC419824);
  }
  v158 = v148;
  v159 = v208;
  sub_1BC62A754();
  v160 = v207;
  sub_1BC62A6AC();
  v155(v159, v35);
  sub_1BC62A754();
  result = sub_1BC62C608();
  if ((result & 1) != 0)
  {
    v161 = v203;
    v162 = v204;
    v163 = &v203[*(int *)(v204 + 48)];
    v164 = v160;
    v165 = v197;
    v197(v203, v164, v35);
    v165(v163, v159, v35);
    v166 = v205;
    v167 = &v205[*(int *)(v162 + 48)];
    v158(v205, v161, v35);
    v158(v167, v163, v35);
    v168 = (uint64_t)v202;
    v165(v202, v166, v35);
    v155(v167, v35);
    v169 = &v166[*(int *)(v162 + 48)];
    v165(v166, v161, v35);
    v165(v169, v163, v35);
    v165((char *)(v168 + *(int *)(v206 + 36)), v169, v35);
    v170 = v155;
    v155(v166, v35);
    v171 = v190;
    sub_1BC375724(v168, v190, (uint64_t (*)(_QWORD))sub_1BC419824);
    v172 = v209;
    LOBYTE(v169) = sub_1BC62C5FC();
    v173 = v172;
    v174 = v182;
    v158(v182, v173, v35);
    v175 = v171;
    v176 = v183;
    sub_1BC35EBE0(v175, v183, (uint64_t (*)(_QWORD))sub_1BC419824);
    v70 = 5;
    if ((v169 & 1) != 0)
    {
      if ((sub_1BC62C608() & 1) != 0)
        v70 = 0;
      else
        v70 = 5;
    }
    sub_1BC348D78(v176, (uint64_t (*)(_QWORD))sub_1BC419824);
    v170(v174, v35);
    sub_1BC348D78(v178, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
    sub_1BC348D78(v190, (uint64_t (*)(_QWORD))sub_1BC419824);
    v170(v209, v35);
    v170(v177, v35);
    return v70;
  }
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1BC4196F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42EC28;
  if (!qword_1EF42EC28)
  {
    sub_1BC357158(255, &qword_1EF42BAD8, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42EC28);
  }
  return result;
}

void sub_1BC419754()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42EC30)
  {
    sub_1BC34B508(255, (unint64_t *)&qword_1EF42EC38, (uint64_t)&type metadata for NavigationType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42EC30);
  }
}

void sub_1BC4197C0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42EC40)
  {
    sub_1BC62A760();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42EC40);
  }
}

void sub_1BC419824()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42EC48)
  {
    sub_1BC62A760();
    sub_1BC347F0C((unint64_t *)&qword_1EF42EC50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v0 = sub_1BC62C638();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42EC48);
  }
}

void sub_1BC41989C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42EC58)
  {
    sub_1BC3EA830();
    sub_1BC3A451C(255, &qword_1EF42BAD0, &qword_1EF42BAD8, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem);
    sub_1BC347F0C(&qword_1EF431D30, (uint64_t (*)(uint64_t))sub_1BC3EA830, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC62BE10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42EC58);
  }
}

uint64_t sub_1BC419948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC415A0C(a1, a2, v2);
}

uint64_t sub_1BC419950()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC419974@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t getEnumTagSinglePayload for RecentSection(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RecentSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BC419A80 + 4 * byte_1BC63F94C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BC419AB4 + 4 * byte_1BC63F947[v4]))();
}

uint64_t sub_1BC419AB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC419ABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC419AC4);
  return result;
}

uint64_t sub_1BC419AD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC419AD8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BC419ADC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC419AE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecentSection()
{
  return &type metadata for RecentSection;
}

unint64_t sub_1BC419B04()
{
  unint64_t result;

  result = qword_1EF42EC68;
  if (!qword_1EF42EC68)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63FA08, &type metadata for RecentSection);
    atomic_store(result, (unint64_t *)&qword_1EF42EC68);
  }
  return result;
}

unint64_t sub_1BC419B48(unint64_t result)
{
  if (result >= 7)
    return 7;
  return result;
}

uint64_t sub_1BC419B58()
{
  return sub_1BC416DC4() & 1;
}

uint64_t static UDCDataSourceFactory.pinnedItemsPredicate(categoryKind:sourceProfile:)()
{
  return _s14HealthPlatform8FeedItemC0A9RecordsUIE035predicateForPinnedUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0O0OSg_AA06SourceQ0OtFZ_0();
}

uint64_t UDCDataSourceFactory.SectionConfiguration.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  v1 = v0 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  v2 = sub_1BC62B318();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UDCDataSourceFactory.SectionConfiguration.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  v1 = v0 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  v2 = sub_1BC62B318();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id static UDCDataSourceFactory.navigationPredicate(categoryKind:sourceProfile:)(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return _s14HealthPlatform8FeedItemC0A9RecordsUIE022predicateForNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0L0OSg_AA06SourceN0OtFZ_0(&v2);
}

id static UDCDataSourceFactory.removedCategoryNavigation(categoryKind:sourceProfile:)(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return _s14HealthPlatform8FeedItemC0A9RecordsUIE037predicateForRemovedCategoryNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD07DisplayJ0V0N0OSg_AA06SourceP0OtFZ_0(&v2);
}

uint64_t UDCDataSourceFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t UDCDataSourceFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void _s15HealthRecordsUI20UDCDataSourceFactoryC014makePinnedDataE013configuration0a10ExperienceC008SnapshotiE0_pAC20SectionConfigurationC_tFZ_0(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  void *v45;
  char *v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  Class v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  unsigned int v61;
  uint64_t inited;
  uint64_t (*v63)(uint64_t, uint64_t, unint64_t);
  uint64_t v64;
  uint64_t v65;
  id v66;
  _QWORD v67[2];
  id v68;
  char *v69;
  __int128 v70;
  uint64_t v71;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF42EDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B1B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v69 = (char *)v67 - v4;
  sub_1BC357158(0, &qword_1EF42D368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], v2);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v67 - v6;
  sub_1BC62AC10();
  v68 = (id)MEMORY[0x1BCCEFEBC]();
  v8 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC6395A0;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1BC3644C0();
  strcpy((char *)(v10 + 32), "pluginPackage");
  *(_WORD *)(v10 + 46) = -4864;
  *(_QWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 104) = v12;
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 72) = 0xD000000000000025;
  *(_QWORD *)(v10 + 80) = 0x80000001BC654E10;
  v67[1] = v8;
  v13 = (void *)sub_1BC62CA64();
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], v9);
  v14 = sub_1BC62AA78();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = swift_allocObject();
  v70 = xmmword_1BC639590;
  *(_OWORD *)(v17 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x1E0D2D510], v14);
  v18 = sub_1BC62AB5C();
  v20 = v19;
  v21 = sub_1BC62A31C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v70;
  v23 = (void *)a1[4];
  *(_QWORD *)(v22 + 32) = v23;
  v24 = v23;
  v25 = (void *)MEMORY[0x1BCCEFEA4](v17, v18, v20, v7, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3E23B8((uint64_t)v7);
  v26 = (void *)a1[3];
  v27 = v26;
  v28 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE035predicateForPinnedUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0O0OSg_AA06SourceQ0OtFZ_0();
  v71 = MEMORY[0x1E0DEE9D8];
  v29 = v13;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v30 = v25;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  if (v26)
  {
    v31 = v27;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v32 = v28;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();

  v33 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v33);

  v35 = v68;
  objc_msgSend(v68, sel_setPredicate_, v34);

  v36 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v37 = (void *)sub_1BC62C650();
  v38 = objc_msgSend(v36, sel_initWithKey_ascending_, v37, 0);

  v39 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v40 = (void *)sub_1BC62C650();
  v41 = objc_msgSend(v39, sel_initWithKey_ascending_selector_, v40, 1, sel_localizedStandardCompare_);

  LOBYTE(v36) = *((_BYTE *)a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_sortByDate);
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v42 = swift_allocObject();
  if ((v36 & 1) != 0)
  {
    *(_OWORD *)(v42 + 16) = xmmword_1BC639570;
    *(_QWORD *)(v42 + 32) = v38;
    *(_QWORD *)(v42 + 40) = v41;
    v71 = v42;
    sub_1BC62C890();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
    v43 = v38;
  }
  else
  {
    *(_OWORD *)(v42 + 16) = xmmword_1BC6396B0;
    *(_QWORD *)(v42 + 32) = v41;
    v71 = v42;
    sub_1BC62C890();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  }
  v44 = v41;
  v45 = (void *)sub_1BC62C86C();
  v46 = v69;
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setSortDescriptors_, v45);

  __swift_project_boxed_opaque_existential_1Tm(a1 + 5, a1[8]);
  v47 = v35;
  v48 = (void *)sub_1BC62A9D0();
  v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v47, v48, 0, 0);

  v50 = qword_1ED6A4888;
  v51 = v49;
  if (v50 != -1)
    swift_once();
  v52 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v53 = (char *)a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  v54 = sub_1BC62B318();
  v55 = *(_QWORD *)(v54 - 8);
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v46, v53, v54);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v46, 0, 1, v54);
  sub_1BC41CE3C(0, (unint64_t *)&qword_1EF42A230, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0D2AC90]);
  v57 = objc_allocWithZone(v56);
  v58 = (void *)sub_1BC62AF28();
  v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6F18]), sel_init);
  v60 = objc_msgSend(v59, sel_features);

  if (v60)
  {
    v61 = objc_msgSend(v60, sel_stanley);

    if (v61)
    {
      sub_1BC357158(0, &qword_1EF42BA78, (uint64_t (*)(uint64_t))sub_1BC3A4194, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v70;
      *(_QWORD *)(inited + 32) = 1;
      v63 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0D2AC90];
      v64 = sub_1BC41CD98(&qword_1EF42EE08, (unint64_t *)&qword_1EF42A230, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0D2AC90], MEMORY[0x1E0D2ACB0]);
      v65 = sub_1BC41CD98((unint64_t *)&qword_1EF42A240, (unint64_t *)&qword_1EF42A230, v63, MEMORY[0x1E0D2B7F8]);
      *(_QWORD *)(inited + 40) = v58;
      *(_QWORD *)(inited + 48) = v64;
      *(_QWORD *)(inited + 56) = v65;
      sub_1BC35DCCC(inited);
      swift_setDeallocating();
      sub_1BC3A4194();
      v66 = v58;
      swift_arrayDestroy();
      sub_1BC62B5C4();
      swift_allocObject();
      sub_1BC62B5B8();

    }
    else
    {

      sub_1BC41CD98((unint64_t *)&qword_1EF42A240, (unint64_t *)&qword_1EF42A230, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0D2AC90], MEMORY[0x1E0D2B7F8]);
    }
  }
  else
  {
    __break(1u);
  }
}

void _s15HealthRecordsUI20UDCDataSourceFactoryC025makeUserDomainConceptDataE013configuration0a10ExperienceC008SnapshotkE0_pAC20SectionConfigurationC_tFZ_0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF42EDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B1B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v21 - v4;
  sub_1BC357158(0, &qword_1EF42D368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], v2);
  MEMORY[0x1E0C80A78](v5);
  sub_1BC62AC10();
  v25 = MEMORY[0x1BCCEFEBC]();
  v6 = *(unsigned __int8 *)(a1
                          + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_navigationType);
  v7 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_navigationType))
    v8 = 1;
  else
    v8 = v7 == 11;
  if (!v8)
  {
    if (v7 == 3)
    {
      if (qword_1ED6A4888 == -1)
      {
LABEL_11:
        v9 = (id)qword_1ED6A5528;
        swift_bridgeObjectRetain();
        v10 = sub_1BC62A4A8();
        v21 = v11;
        v22 = v10;
        swift_bridgeObjectRelease();

LABEL_12:
        v12 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
        v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
        sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1BC6395A0;
        v15 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
        v16 = sub_1BC3644C0();
        strcpy((char *)(v14 + 32), "pluginPackage");
        *(_WORD *)(v14 + 46) = -4864;
        *(_QWORD *)(v14 + 96) = v15;
        *(_QWORD *)(v14 + 104) = v16;
        *(_QWORD *)(v14 + 64) = v16;
        *(_QWORD *)(v14 + 72) = 0xD000000000000025;
        *(_QWORD *)(v14 + 80) = 0x80000001BC654E10;
        v24 = v12;
        sub_1BC62CA64();
        sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], v13);
        v17 = sub_1BC62AA78();
        v18 = *(_QWORD *)(v17 - 8);
        v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
        v20 = swift_allocObject();
        v23 = xmmword_1BC639590;
        *(_OWORD *)(v20 + 16) = xmmword_1BC639590;
        (*(void (**)(unint64_t, _QWORD, uint64_t))(v18 + 104))(v20 + v19, *MEMORY[0x1E0D2D510], v17);
        __asm { BR              X9 }
      }
LABEL_13:
      swift_once();
      goto LABEL_11;
    }
    if (v7 == 2)
    {
      if (qword_1ED6A4888 == -1)
        goto LABEL_11;
      goto LABEL_13;
    }
  }
  v21 = 0xE000000000000000;
  v22 = 0;
  goto LABEL_12;
}

void _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v33 = a1;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF42EDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B1B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v23 - v5;
  v24 = sub_1BC62B8DC();
  v27 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62A31C();
  v31 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v32 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1EF42D368, v9, v3);
  v11 = MEMORY[0x1E0C80A78](v10);
  v30 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  sub_1BC62AC10();
  v26 = MEMORY[0x1BCCEFEBC]();
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A59B8, (uint64_t (*)(uint64_t))sub_1BC41CDD8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC63DB50;
  v15 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, v13);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC6395A0;
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
  v18 = sub_1BC3644C0();
  strcpy((char *)(v16 + 32), "pluginPackage");
  *(_WORD *)(v16 + 46) = -4864;
  *(_QWORD *)(v16 + 96) = v17;
  *(_QWORD *)(v16 + 104) = v18;
  *(_QWORD *)(v16 + 64) = v18;
  *(_QWORD *)(v16 + 72) = 0xD000000000000025;
  *(_QWORD *)(v16 + 80) = 0x80000001BC654E10;
  v23 = v15;
  *(_QWORD *)(inited + 32) = sub_1BC62CA64();
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], v13);
  v19 = sub_1BC62AA78();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = swift_allocObject();
  v29 = xmmword_1BC639590;
  *(_OWORD *)(v22 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v20 + 104))(v22 + v21, *MEMORY[0x1E0D2D510], v19);
  __asm { BR              X10 }
}

uint64_t sub_1BC41B264()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, unint64_t);
  Class v52;
  id v53;
  uint64_t v54;

  v6 = v4;
  v7 = sub_1BC62AB5C();
  v9 = v8;
  v10 = *(_QWORD *)(v5 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v1, 1, 1, v6);
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(v5 - 224);
  v12 = *(void **)(v0 + 32);
  *(_QWORD *)(v11 + 32) = v12;
  v13 = v12;
  v14 = MEMORY[0x1BCCEFEA4](v3, v7, v9, v1, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3E23B8(v1);
  v2[5] = v14;
  v15 = *(_QWORD *)(v5 - 184);
  sub_1BC62A2C8();
  v16 = *(_QWORD *)(v5 - 200);
  sub_1BC62B8E8();
  v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v17(v15, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v16, 1, v6) == 1)
  {
    __break(1u);
    JUMPOUT(0x1BC41B888);
  }
  v18 = MEMORY[0x1BCCEFEB0](v16);
  v17(v16, v6);
  v2[6] = v18;
  v19 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE035predicateForPinnedUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0O0OSg_AA06SourceQ0OtFZ_0();
  v20 = (void *)objc_opt_self();
  v21 = objc_msgSend(v20, sel_notPredicateWithSubpredicate_, v19);

  v2[7] = v21;
  v22 = v0;
  v23 = *(void **)(v0 + 24);
  v2[8] = v23;
  *(_QWORD *)(v5 - 168) = v2;
  sub_1BC62C890();
  v24 = *(_QWORD **)(v5 - 168);
  *(_QWORD *)(v5 - 168) = MEMORY[0x1E0DEE9D8];
  v25 = (void *)v24[4];
  if (!v25)
  {
    v30 = v23;
    v27 = *(_QWORD *)(v5 - 256);
    v28 = *(_QWORD *)(v5 - 264);
    v29 = (void *)v24[5];
    if (!v29)
      goto LABEL_11;
    goto LABEL_8;
  }
  v26 = v25;
  MEMORY[0x1BCCF1B30](v23);
  v27 = *(_QWORD *)(v5 - 256);
  if (*(_QWORD *)((*(_QWORD *)(v5 - 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v5 - 168) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v28 = *(_QWORD *)(v5 - 264);
  v29 = (void *)v24[5];
  if (v29)
  {
LABEL_8:
    v31 = v29;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((*(_QWORD *)(v5 - 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v5 - 168) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
LABEL_11:
  v32 = (void *)v24[6];
  if (v32)
  {
    v33 = v32;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((*(_QWORD *)(v5 - 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v5 - 168) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v34 = (void *)v24[7];
  if (v34)
  {
    v35 = v34;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((*(_QWORD *)(v5 - 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v5 - 168) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v36 = (void *)v24[8];
  if (v36)
  {
    v37 = v36;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((*(_QWORD *)(v5 - 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v5 - 168) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  swift_bridgeObjectRelease();
  v38 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v39 = objc_msgSend(v20, sel_andPredicateWithSubpredicates_, v38);

  v40 = *(void **)(v5 - 248);
  objc_msgSend(v40, sel_setPredicate_, v39);

  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1BC6396B0;
  v42 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v43 = (void *)sub_1BC62C650();
  v44 = objc_msgSend(v42, sel_initWithKey_ascending_selector_, v43, 0, sel_compare_);

  *(_QWORD *)(v41 + 32) = v44;
  *(_QWORD *)(v5 - 168) = v41;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v45 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v40, sel_setSortDescriptors_, v45);

  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(v22 + 40), *(_QWORD *)(v22 + 64));
  v46 = v40;
  v47 = (void *)sub_1BC62A9D0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v46, v47, 0, 0);

  sub_1BC62A2C8();
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v5 - 240) + 16))(*(_QWORD *)(v5 - 232), *(_QWORD *)(v5 - 176), v28);
  v48 = v22 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  v49 = sub_1BC62B318();
  v50 = *(_QWORD *)(v49 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v27, v48, v49);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v27, 0, 1, v49);
  v51 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0D2A848];
  sub_1BC41CE3C(0, &qword_1EF42EDF8, MEMORY[0x1E0D2A848]);
  v53 = objc_allocWithZone(v52);
  v54 = sub_1BC62ACDC();

  sub_1BC41CD98(&qword_1EF42EE00, &qword_1EF42EDF8, v51, MEMORY[0x1E0D2B7F8]);
  return v54;
}

uint64_t _s15HealthRecordsUI20UDCDataSourceFactoryC018makeOnboardingDataE013configuration0a10ExperienceC008SnapshotiE0_pAC20SectionConfigurationC_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t (*v31)(uint64_t, uint64_t, unint64_t);
  Class v32;
  uint64_t v33;
  __int128 v35;
  id v36;
  char *v37;
  uint64_t v38;

  sub_1BC357158(0, &qword_1EF42EDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B1B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v37 = (char *)&v35 - v3;
  sub_1BC62AC10();
  v36 = (id)MEMORY[0x1BCCEFEBC]();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC639580;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC6395A0;
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v8 = sub_1BC3644C0();
  strcpy((char *)(v6 + 32), "pluginPackage");
  *(_WORD *)(v6 + 46) = -4864;
  *(_QWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 104) = v8;
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 72) = 0xD000000000000025;
  *(_QWORD *)(v6 + 80) = 0x80000001BC654E10;
  *(_QWORD *)(v4 + 32) = sub_1BC62CA64();
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], v5);
  v9 = sub_1BC62AA78();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = swift_allocObject();
  v35 = xmmword_1BC639590;
  *(_OWORD *)(v12 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x1E0D2D5A8], v9);
  sub_1BC62AB2C();
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v35;
  v14 = *(void **)(a1 + 32);
  *(_QWORD *)(v13 + 32) = v14;
  v15 = v14;
  v16 = sub_1BC62ABC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + 40) = v16;
  LOBYTE(v38) = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(v4 + 48) = sub_1BC427484((unsigned __int8 *)&v38);
  v38 = v4;
  sub_1BC62C890();
  v17 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v17);

  v19 = v36;
  objc_msgSend(v36, sel_setPredicate_, v18);

  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BC6396B0;
  v21 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v22 = (void *)sub_1BC62C650();
  v23 = objc_msgSend(v21, sel_initWithKey_ascending_selector_, v22, 1, sel_localizedStandardCompare_);

  *(_QWORD *)(v20 + 32) = v23;
  v38 = v20;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v24 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setSortDescriptors_, v24);

  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64));
  v25 = v19;
  v26 = (void *)sub_1BC62A9D0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v25, v26, 0, 0);

  v27 = a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  v28 = sub_1BC62B318();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v37, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
  v31 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0D2AC90];
  sub_1BC41CE3C(0, (unint64_t *)&qword_1EF42A230, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0D2AC90]);
  objc_allocWithZone(v32);
  swift_bridgeObjectRetain();
  v33 = sub_1BC62AF28();

  sub_1BC41CD98((unint64_t *)&qword_1EF42A240, (unint64_t *)&qword_1EF42A230, v31, MEMORY[0x1E0D2B7F8]);
  return v33;
}

uint64_t _s15HealthRecordsUI20UDCDataSourceFactoryC023makeNavigationItemsDataE013configuration0a10ExperienceC008SnapshotjE0_pAC20SectionConfigurationC_tFZ_0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t (*v49)(uint64_t, uint64_t, unint64_t);
  Class v50;
  uint64_t v51;
  __int128 v53;
  id v54;
  char *v55;
  uint64_t v56;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF42EDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B1B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v53 - v4;
  sub_1BC357158(0, &qword_1EF42D368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], v2);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v53 - v6;
  sub_1BC62AC10();
  v54 = (id)MEMORY[0x1BCCEFEBC]();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC6395A0;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1BC3644C0();
  strcpy((char *)(v9 + 32), "pluginPackage");
  *(_WORD *)(v9 + 46) = -4864;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 72) = 0xD000000000000025;
  *(_QWORD *)(v9 + 80) = 0x80000001BC654E10;
  v12 = (void *)sub_1BC62CA64();
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], v8);
  v13 = sub_1BC62AA78();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = swift_allocObject();
  v53 = xmmword_1BC639590;
  *(_OWORD *)(v16 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x1E0D2D4B8], v13);
  v17 = sub_1BC62AB38();
  v19 = v18;
  v20 = sub_1BC62A31C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v53;
  v22 = *(void **)(a1 + 32);
  *(_QWORD *)(v21 + 32) = v22;
  v23 = v22;
  v24 = (void *)MEMORY[0x1BCCEFEA4](v16, v17, v19, v7, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3E23B8((uint64_t)v7);
  v25 = *(void **)(a1 + 24);
  LOBYTE(v56) = *(_BYTE *)(a1 + 16);
  v26 = v25;
  v27 = _s14HealthPlatform8FeedItemC0A9RecordsUIE022predicateForNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0L0OSg_AA06SourceN0OtFZ_0((unsigned __int8 *)&v56);
  v56 = MEMORY[0x1E0DEE9D8];
  v28 = v12;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v29 = v24;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  if (v25)
  {
    v30 = v26;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v31 = v27;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();

  v32 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v32);

  v34 = v54;
  objc_msgSend(v54, sel_setPredicate_, v33);

  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1BC639570;
  v36 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v37 = (void *)sub_1BC62C650();
  v38 = objc_msgSend(v36, sel_initWithKey_ascending_selector_, v37, 1, sel_compare_);

  *(_QWORD *)(v35 + 32) = v38;
  v39 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v40 = (void *)sub_1BC62C650();
  v41 = objc_msgSend(v39, sel_initWithKey_ascending_selector_, v40, 1, sel_localizedStandardCompare_);

  *(_QWORD *)(v35 + 40) = v41;
  v56 = v35;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v42 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setSortDescriptors_, v42);

  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64));
  v43 = v34;
  v44 = (void *)sub_1BC62A9D0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v43, v44, 0, 0);

  v45 = a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  v46 = sub_1BC62B318();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v55, v45, v46);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
  v49 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0D2AC90];
  sub_1BC41CE3C(0, (unint64_t *)&qword_1EF42A230, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0D2AC90]);
  objc_allocWithZone(v50);
  swift_bridgeObjectRetain();
  v51 = sub_1BC62AF28();

  sub_1BC41CD98((unint64_t *)&qword_1EF42A240, (unint64_t *)&qword_1EF42A230, v49, MEMORY[0x1E0D2B7F8]);
  return v51;
}

uint64_t _s15HealthRecordsUI20UDCDataSourceFactoryC037makeRemovedCategoryNavigationItemDataE013configuration0a10ExperienceC008SnapshotlE0_pAC20SectionConfigurationC_tFZ_0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t (*v46)(uint64_t, uint64_t, unint64_t);
  Class v47;
  uint64_t v48;
  __int128 v50;
  id v51;
  char *v52;
  uint64_t v53;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF42EDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B1B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v52 = (char *)&v50 - v4;
  sub_1BC357158(0, &qword_1EF42D368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], v2);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v50 - v6;
  sub_1BC62AC10();
  v51 = (id)MEMORY[0x1BCCEFEBC]();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC6395A0;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1BC3644C0();
  strcpy((char *)(v9 + 32), "pluginPackage");
  *(_WORD *)(v9 + 46) = -4864;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 72) = 0xD000000000000025;
  *(_QWORD *)(v9 + 80) = 0x80000001BC654E10;
  v12 = (void *)sub_1BC62CA64();
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], v8);
  v13 = sub_1BC62AA78();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = swift_allocObject();
  v50 = xmmword_1BC639590;
  *(_OWORD *)(v16 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x1E0D2D4B8], v13);
  v17 = sub_1BC62AB38();
  v19 = v18;
  v20 = sub_1BC62A31C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v50;
  v22 = *(void **)(a1 + 32);
  *(_QWORD *)(v21 + 32) = v22;
  v23 = v22;
  v24 = (void *)MEMORY[0x1BCCEFEA4](v16, v17, v19, v7, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3E23B8((uint64_t)v7);
  v25 = *(void **)(a1 + 24);
  LOBYTE(v53) = *(_BYTE *)(a1 + 16);
  v26 = v25;
  v27 = _s14HealthPlatform8FeedItemC0A9RecordsUIE037predicateForRemovedCategoryNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD07DisplayJ0V0N0OSg_AA06SourceP0OtFZ_0((unsigned __int8 *)&v53);
  v53 = MEMORY[0x1E0DEE9D8];
  v28 = v12;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v29 = v24;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  if (v25)
  {
    v30 = v26;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v31 = v27;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();

  v32 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v32);

  v34 = v51;
  objc_msgSend(v51, sel_setPredicate_, v33);

  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1BC6396B0;
  v36 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v37 = (void *)sub_1BC62C650();
  v38 = objc_msgSend(v36, sel_initWithKey_ascending_selector_, v37, 1, sel_compare_);

  *(_QWORD *)(v35 + 32) = v38;
  v53 = v35;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v39 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setSortDescriptors_, v39);

  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64));
  v40 = v34;
  v41 = (void *)sub_1BC62A9D0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v40, v41, 0, 0);

  v42 = a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  v43 = sub_1BC62B318();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v52, v42, v43);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
  v46 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0D2AC90];
  sub_1BC41CE3C(0, (unint64_t *)&qword_1EF42A230, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E0D2AC90]);
  objc_allocWithZone(v47);
  swift_bridgeObjectRetain();
  v48 = sub_1BC62AF28();

  sub_1BC41CD98((unint64_t *)&qword_1EF42A240, (unint64_t *)&qword_1EF42A230, v46, MEMORY[0x1E0D2B7F8]);
  return v48;
}

uint64_t type metadata accessor for UDCDataSourceFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for UDCDataSourceFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BC41CC58()
{
  return type metadata accessor for UDCDataSourceFactory.SectionConfiguration();
}

uint64_t type metadata accessor for UDCDataSourceFactory.SectionConfiguration()
{
  uint64_t result;

  result = qword_1EF42ED30;
  if (!qword_1EF42ED30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC41CC9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62B318();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for UDCDataSourceFactory.SectionConfiguration()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1BC41CD50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42A238;
  if (!qword_1EF42A238)
  {
    v1 = sub_1BC62AC10();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D2A838], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42A238);
  }
  return result;
}

uint64_t sub_1BC41CD98(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC41CE3C(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC41CDD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A58C8)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58C0);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A58C8);
  }
}

void sub_1BC41CE3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_1BC62AC10();
    v7 = sub_1BC41CD50();
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t NavigationType.associatedKeyword.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)&sub_1BC41CEBC + 4 * byte_1BC63FB78[*v0]))();
}

uint64_t NavigationType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t NavigationType.sortOrder.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HealthRecordsUI::NavigationType_optional __swiftcall NavigationType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (HealthRecordsUI::NavigationType_optional)rawValue;
}

unint64_t sub_1BC41CEF4()
{
  unint64_t result;

  result = qword_1EF42EE10;
  if (!qword_1EF42EE10)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for NavigationType, &type metadata for NavigationType);
    atomic_store(result, (unint64_t *)&qword_1EF42EE10);
  }
  return result;
}

HealthRecordsUI::NavigationType_optional sub_1BC41CF38(Swift::Int *a1)
{
  return NavigationType.init(rawValue:)(*a1);
}

uint64_t sub_1BC41CF40()
{
  sub_1BC41D144();
  return sub_1BC62C854();
}

uint64_t sub_1BC41CF9C()
{
  sub_1BC41D144();
  return sub_1BC62C83C();
}

uint64_t getEnumTagSinglePayload for RecordRangeView.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NavigationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC41D0C4 + 4 * byte_1BC63FB81[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC41D0F8 + 4 * byte_1BC63FB7C[v4]))();
}

uint64_t sub_1BC41D0F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC41D100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC41D108);
  return result;
}

uint64_t sub_1BC41D114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC41D11CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC41D120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC41D128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NavigationType()
{
  return &type metadata for NavigationType;
}

unint64_t sub_1BC41D144()
{
  unint64_t result;

  result = qword_1EF42EE18;
  if (!qword_1EF42EE18)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for NavigationType, &type metadata for NavigationType);
    atomic_store(result, (unint64_t *)&qword_1EF42EE18);
  }
  return result;
}

void sub_1BC41D188(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46[2];

  v38 = a2;
  v39 = a3;
  v37 = *v3;
  v5 = sub_1BC62BA08();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1BC62BB34();
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v36 = (char *)&v35 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - v14;
  sub_1BC62B9FC();
  swift_allocObject();
  v16 = sub_1BC62B9F0();
  v17 = objc_msgSend(a1, sel_mainRecord);
  v42 = v16;
  if (v17)
  {
    v18 = v17;
    sub_1BC62B9C0();
    v20 = v19;
    swift_bridgeObjectRelease();
    if (v20)
    {
      sub_1BC62BAF8();
      swift_retain_n();
      v21 = sub_1BC62BB28();
      v22 = sub_1BC62CADC();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v24 = swift_slowAlloc();
        v46[0] = v24;
        *(_DWORD *)v23 = 136315138;
        v36 = (char *)(v23 + 4);
        v44 = v37;
        swift_getMetatypeMetadata();
        v44 = sub_1BC62C6E0();
        v45 = v25;
        swift_bridgeObjectRetain();
        sub_1BC62C764();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1BC62C764();
        swift_bridgeObjectRelease();
        v44 = sub_1BC4991F0(v44, v45, v46);
        sub_1BC62CFF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC30A000, v21, v22, "%s not adding to Wallet, it's already there", v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v24, -1, -1);
        MEMORY[0x1BCCF36A8](v23, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v41);
      v38(2);
      swift_release();

      return;
    }

  }
  sub_1BC62B9B4();
  sub_1BC62BAF8();
  v26 = v43;
  swift_retain_n();
  v27 = sub_1BC62BB28();
  v28 = sub_1BC62CADC();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v46[0] = v30;
    *(_DWORD *)v29 = 136315138;
    v36 = (char *)(v29 + 4);
    v44 = v37;
    swift_getMetatypeMetadata();
    v44 = sub_1BC62C6E0();
    v45 = v31;
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v44 = sub_1BC4991F0(v44, v45, v46);
    v26 = v43;
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v27, v28, "%s starting to add to Wallet", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v30, -1, -1);
    MEMORY[0x1BCCF36A8](v29, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
  v32 = (_QWORD *)swift_allocObject();
  v33 = v38;
  v34 = v39;
  v32[2] = v26;
  v32[3] = v33;
  v32[4] = v34;
  swift_retain();
  swift_retain();
  sub_1BC62B9CC();
  swift_release();
  swift_release();
}

void sub_1BC41DD90(void *a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v7 = sub_1BC62BB34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - v12;
  if (a1)
  {
    v14 = a1;
    sub_1BC62BAF8();
    swift_retain();
    v15 = a1;
    swift_retain();
    v16 = a1;
    v17 = sub_1BC62BB28();
    v18 = sub_1BC62CAC4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v36 = v7;
      v20 = v19;
      v21 = swift_slowAlloc();
      v38 = v8;
      v22 = v21;
      v40 = v21;
      *(_DWORD *)v20 = 136315394;
      v37 = a3;
      v23 = sub_1BC41E1F4();
      v39 = sub_1BC4991F0(v23, v24, &v40);
      v35 = a4;
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      swift_getErrorValue();
      v25 = sub_1BC62D610();
      v39 = sub_1BC4991F0(v25, v26, &v40);
      a3 = v37;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v17, v18, "%s failed to add to Wallet: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v22, -1, -1);
      MEMORY[0x1BCCF36A8](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v36);
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    v34 = a1;
    a3(a1);

  }
  else
  {
    v38 = v8;
    sub_1BC62BAF8();
    swift_retain_n();
    v27 = sub_1BC62BB28();
    v28 = sub_1BC62CADC();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v36 = v7;
      v31 = v30;
      v40 = v30;
      v37 = a3;
      *(_DWORD *)v29 = 136315138;
      v32 = sub_1BC41E1F4();
      v39 = sub_1BC4991F0(v32, v33, &v40);
      a3 = v37;
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v27, v28, "%s added to Wallet", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v31, -1, -1);
      MEMORY[0x1BCCF36A8](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v36);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v7);
    }
    a3(1);
  }
}

uint64_t sub_1BC41E1F4()
{
  uint64_t v1;

  swift_getMetatypeMetadata();
  v1 = sub_1BC62C6E0();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for SignedClinicalDataWalletHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BC41E2B0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC41E2DC(void *a1)
{
  uint64_t v1;

  sub_1BC41DD90(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1BC41E2E8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC41E314()
{
  uint64_t v0;

}

uint64_t sub_1BC41E330()
{
  id *v0;

  v0 = TextItem.deinit();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShowAllRecordsItem()
{
  return objc_opt_self();
}

void sub_1BC41E38C(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  char *v8;

  v4 = *v2;
  v5 = *(void **)(*v2 + 96);
  v6 = *(void **)(*v2 + 104);
  v7 = objc_allocWithZone((Class)type metadata accessor for UDCRecordsTableViewController());
  v8 = sub_1BC3EAEC8(v5, v6, 0);
  objc_msgSend(a2, sel_showViewController_sender_, v8, v4);

}

_QWORD *sub_1BC41E414(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;

  v26 = a4;
  v27 = a5;
  v25 = a3;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - v9;
  sub_1BC41E9E8();
  v12 = v11;
  v28 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + 40) = a2;
  *(_QWORD *)(v5 + 48) = 0;
  swift_retain();
  v15 = ConceptsDataSource.init(arrangedSections:isHidden:)(MEMORY[0x1E0DEE9D8], 0);
  v30 = v15[5];
  sub_1BC35A280();
  swift_retain();
  swift_retain();
  v29 = (id)sub_1BC62CC74();
  v16 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
  sub_1BC41EAB8();
  sub_1BC379B20(&qword_1EF42F110, 255, (uint64_t (*)(uint64_t))sub_1BC41EAB8, MEMORY[0x1E0C95D90]);
  sub_1BC379B20((unint64_t *)&qword_1ED6A4E00, 255, (uint64_t (*)(uint64_t))sub_1BC35A280, MEMORY[0x1E0DEF7F8]);
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v10);

  swift_release();
  v17 = (_QWORD *)swift_allocObject();
  v19 = v25;
  v18 = v26;
  v17[2] = a1;
  v17[3] = v19;
  v20 = v27;
  v17[4] = v18;
  v17[5] = v20;
  v17[6] = v15;
  sub_1BC379B20(&qword_1EF42F118, 255, (uint64_t (*)(uint64_t))sub_1BC41E9E8, MEMORY[0x1E0C95CB8]);
  swift_retain();
  v21 = a1;
  v22 = v19;
  v23 = sub_1BC62C0BC();

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v12);
  v15[6] = v23;
  swift_release();
  return v15;
}

uint64_t sub_1BC41E6B4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    v5 = type metadata accessor for ShowAllRecordsItem();
    swift_allocObject();
    v6 = a2;
    v7 = a3;
    v8 = sub_1BC41EBE8(v6, v7);

    sub_1BC41EB3C(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v9 + 56) = v5;
    *(_QWORD *)(v9 + 64) = sub_1BC379B20(&qword_1EF42F120, v10, (uint64_t (*)(uint64_t))type metadata accessor for ShowAllRecordsItem, (uint64_t)&protocol conformance descriptor for TextItem);
    *(_QWORD *)(v9 + 32) = v8;
  }
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
  swift_bridgeObjectRetain();
  sub_1BC62B270();
  sub_1BC62AF58();
  sub_1BC62B2D0();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BC41E874()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC41E8A0()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1BC41E8BC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShowAllRecordsDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1BC41E918()
{
  MEMORY[0x1BCCF35C4](&unk_1BC63FD74);
  return sub_1BC62B834();
}

uint64_t sub_1BC41E964()
{
  type metadata accessor for TextItemCell();
  sub_1BC379B20(&qword_1EF429AF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&protocol conformance descriptor for TextItemCell);
  return sub_1BC62CB48();
}

uint64_t sub_1BC41E9BC(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF42F0F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for ShowAllRecordsDataSource, (uint64_t)&unk_1BC63FD44);
}

void sub_1BC41E9E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42F0F8)
  {
    sub_1BC41EAB8();
    sub_1BC35A280();
    sub_1BC379B20(&qword_1EF42F110, 255, (uint64_t (*)(uint64_t))sub_1BC41EAB8, MEMORY[0x1E0C95D90]);
    sub_1BC379B20((unint64_t *)&qword_1ED6A4E00, 255, (uint64_t (*)(uint64_t))sub_1BC35A280, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC62BE70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42F0F8);
  }
}

void sub_1BC41EAB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42F100)
  {
    sub_1BC41EB3C(255, &qword_1EF42F108, (unint64_t *)&qword_1EF42C970, (uint64_t)&protocol descriptor for TestResultRepresentable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC62BE94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42F100);
  }
}

void sub_1BC41EB3C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC35817C(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC41EB9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC41EBD8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC41E6B4(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

_QWORD *sub_1BC41EBE8(void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = sub_1BC62BBAC();
  v27 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62BB64();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[12] = a1;
  v3[13] = a2;
  v16 = qword_1ED6A4888;
  v17 = a1;
  v18 = a2;
  if (v16 != -1)
    swift_once();
  v19 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v20 = sub_1BC62A4A8();
  v22 = v21;
  swift_bridgeObjectRelease();

  sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62BBC4();
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BC639590;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DC1C20], v12);
  v24 = sub_1BC62BB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 1, 1, v24);
  sub_1BC62BBA0();
  sub_1BC62BB7C();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  type metadata accessor for TextItemCell();
  sub_1BC379B20(&qword_1EF429AF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&protocol conformance descriptor for TextItemCell);
  v3[10] = sub_1BC62ADA8();
  v3[11] = v25;
  v3[2] = v20;
  v3[3] = v22;
  v3[4] = 0;
  v3[5] = 0;
  v3[6] = 0;
  v3[7] = v23;
  v3[8] = 0;
  v3[9] = 0;
  return v3;
}

uint64_t sub_1BC41EECC(char a1)
{
  uint64_t v1;
  id v2;

  v1 = 0;
  switch(a1)
  {
    case 0:
      if (qword_1ED6A4888 != -1)
        swift_once();
      v2 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 2:
      if (qword_1EF4285A0 != -1)
        swift_once();
      v2 = (id)qword_1EF42F788;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 3:
      if (qword_1EF428560 != -1)
        swift_once();
      v2 = (id)qword_1EF42F6C8;
      swift_bridgeObjectRetain();
LABEL_11:
      v1 = sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      break;
    case 6:
      if (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
        v1 = 0x6C616E7265746E49;
      else
        v1 = 0;
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_1BC41F0E0(char a1)
{
  id v1;
  uint64_t v2;

  if (a1 == 3)
  {
    if (qword_1EF428560 != -1)
      swift_once();
    v1 = (id)qword_1EF42F6C8;
    swift_bridgeObjectRetain();
  }
  else if (a1 == 2)
  {
    if (qword_1EF4285A0 != -1)
      swift_once();
    v1 = (id)qword_1EF42F788;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (a1)
      return 0;
    if (qword_1ED6A4888 != -1)
      swift_once();
    v1 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
  }
  v2 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v2;
}

void sub_1BC41F298(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E74D2A90;
}

id sub_1BC41F2A8(unint64_t a1)
{
  char *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id result;
  void *v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v1 = (char *)MEMORY[0x1E0DEE9D8];
    goto LABEL_8;
  }
  v1 = sub_1BC3B60CC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v4 = *((_QWORD *)v1 + 2);
  v3 = *((_QWORD *)v1 + 3);
  if (v4 >= v3 >> 1)
    v1 = sub_1BC3B60CC((char *)(v3 > 1), v4 + 1, 1, v1);
  *((_QWORD *)v1 + 2) = v4 + 1;
  v1[v4 + 32] = 1;
LABEL_8:
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v6 = result;
    v7 = objc_msgSend(result, sel_isiPad);

    if (v7)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_35:
        v1 = sub_1BC3B60CC(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
      v9 = *((_QWORD *)v1 + 2);
      v8 = *((_QWORD *)v1 + 3);
      if (v9 >= v8 >> 1)
        v1 = sub_1BC3B60CC((char *)(v8 > 1), v9 + 1, 1, v1);
      *((_QWORD *)v1 + 2) = v9 + 1;
      v1[v9 + 32] = 4;
    }
    v10 = 0;
    v11 = MEMORY[0x1E0DEE9D8];
    do
    {
      if (v10 <= 7)
        v12 = 7;
      else
        v12 = v10;
      while (1)
      {
        if (v10 == v12)
          goto LABEL_34;
        v13 = *((unsigned __int8 *)&unk_1E74D2A90 + v10++ + 32);
        v14 = *((_QWORD *)v1 + 2);
        if (!v14)
          goto LABEL_27;
        if (v1[32] != v13)
          break;
LABEL_18:
        if (v10 == 7)
          goto LABEL_32;
      }
      if (v14 != 1)
      {
        v15 = 33;
        while (1)
        {
          v16 = v15 - 31;
          if (__OFADD__(v15 - 32, 1))
            break;
          if (v1[v15] == v13)
            goto LABEL_18;
          ++v15;
          if (v16 == v14)
            goto LABEL_27;
        }
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
LABEL_27:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1BC3BDB48(0, *(_QWORD *)(v11 + 16) + 1, 1);
      v18 = *(_QWORD *)(v11 + 16);
      v17 = *(_QWORD *)(v11 + 24);
      if (v18 >= v17 >> 1)
        sub_1BC3BDB48(v17 > 1, v18 + 1, 1);
      *(_QWORD *)(v11 + 16) = v18 + 1;
      *(_BYTE *)(v11 + v18 + 32) = v13;
    }
    while (v10 != 7);
LABEL_32:
    swift_bridgeObjectRelease();
    return (id)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1BC41F558(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

uint64_t storeEnumTagSinglePayload for SettingsSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BC41F5B4 + 4 * byte_1BC63FDF8[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BC41F5E8 + 4 * byte_1BC63FDF3[v4]))();
}

uint64_t sub_1BC41F5E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC41F5F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC41F5F8);
  return result;
}

uint64_t sub_1BC41F604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC41F60CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BC41F610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC41F618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SettingsSection()
{
  return &type metadata for SettingsSection;
}

unint64_t sub_1BC41F638()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42F128;
  if (!qword_1EF42F128)
  {
    sub_1BC41F680();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42F128);
  }
  return result;
}

void sub_1BC41F680()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42F130)
  {
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42F130);
  }
}

unint64_t sub_1BC41F6D8()
{
  unint64_t result;

  result = qword_1EF42F138;
  if (!qword_1EF42F138)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC63FEC0, &type metadata for SettingsSection);
    atomic_store(result, (unint64_t *)&qword_1EF42F138);
  }
  return result;
}

id sub_1BC41F748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  objc_super v28;

  if (a3)
  {
    v5 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v28.receiver = v3;
  v28.super_class = (Class)type metadata accessor for NoGatewaysFoundTableViewCell();
  v6 = objc_msgSendSuper2(&v28, sel_initWithStyle_reuseIdentifier_, a1, v5);

  v7 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v8 = v6;
  v9 = objc_msgSend(v7, sel_init);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v10 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v11 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setText_, v11, 0xE000000000000000);

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  v12 = (void *)sub_1BC62CDDC();
  objc_msgSend(v9, sel_setFont_, v12);

  objc_msgSend(v9, sel_setTextAlignment_, 1);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v13, sel_setNumberOfLines_, 0);
  if (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
  {
    v14 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC62C764();
    v15 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setText_, v15, 0xE000000000000000);

  }
  else
  {
    v16 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v17 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setText_, v17, 0xE000000000000000);

  }
  v18 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v13, sel_setFont_, v18);

  objc_msgSend(v13, sel_setTextAlignment_, 1);
  sub_1BC34D844();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BC639570;
  *(_QWORD *)(v19 + 32) = v9;
  *(_QWORD *)(v19 + 40) = v13;
  sub_1BC62C890();
  v20 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  v21 = v9;
  v22 = v13;
  v23 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v20, sel_initWithArrangedSubviews_, v23);

  objc_msgSend(v24, sel_setAxis_, 1);
  objc_msgSend(v24, sel_setAlignment_, 3);
  objc_msgSend(v24, sel_setDistribution_, 2);
  objc_msgSend(v24, sel_setSpacing_, 8.0);
  objc_msgSend(v24, sel_setBaselineRelativeArrangement_, 0);
  v25 = objc_msgSend(v8, sel_contentView);
  objc_msgSend(v25, sel_addSubview_, v24);

  v26 = objc_msgSend(v8, sel_contentView);
  objc_msgSend(v24, sel_hk_alignConstraintsWithView_, v26);

  return v8;
}

id NoGatewaysFoundTableViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoGatewaysFoundTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NoGatewaysFoundTableViewCell()
{
  return objc_opt_self();
}

BOOL HKMedicalRecord.isSignedClinicalDataRecord.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_medicalRecordOriginType) == (id)3;
}

uint64_t sub_1BC41FDD8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_1BC62CFE0();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_1BC62C7F4();
  v57 = sub_1BC62D2BC();
  v53 = sub_1BC62D2C8();
  sub_1BC62D280();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_1BC62C7DC();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1BC62CFEC();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_1BC62D2B0();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_1BC62CFEC();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_1BC62D2B0();
      sub_1BC62CFEC();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t Sequence.autoreleasingMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8;
  _QWORD v10[7];
  uint64_t v11;

  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[5] = a1;
  v10[6] = a2;
  v8 = sub_1BC35E44C();
  return sub_1BC41FDD8((void (*)(char *, char *))sub_1BC4203EC, (uint64_t)v10, a3, a4, v8, a5, MEMORY[0x1E0DEDB38], (uint64_t)&v11);
}

void sub_1BC420368(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  void *v11;

  v11 = (void *)MEMORY[0x1BCCF2DD8]();
  a2(a1);
  objc_autoreleasePoolPop(v11);
  if (v7)
    *a7 = v7;
}

uint64_t sub_1BC4203EC(uint64_t a1, uint64_t a2)
{
  return sub_1BC4204E0(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BC420368);
}

uint64_t Sequence.autoreleasingMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD v9[8];

  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  v9[5] = a1;
  v9[6] = a2;
  return sub_1BC41FDD8((void (*)(char *, char *))sub_1BC4204C4, (uint64_t)v9, a3, a4, MEMORY[0x1E0DEDCE8], a5, MEMORY[0x1E0DEDD18], a8);
}

void sub_1BC42045C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  void *v5;

  v5 = (void *)MEMORY[0x1BCCF2DD8]();
  a2(a1);
  objc_autoreleasePoolPop(v5);
  if (v2)
    __break(1u);
}

uint64_t sub_1BC4204C4(uint64_t a1, uint64_t a2)
{
  return sub_1BC4204E0(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BC42045C);
}

uint64_t sub_1BC4204E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v3;

  return a3(a1, v3[5], v3[6], v3[2], v3[3], v3[4], a2);
}

uint64_t Sequence.autoreleasingCompactMap<A>(_:)()
{
  return sub_1BC62C80C();
}

{
  return sub_1BC62C80C();
}

void sub_1BC42053C(uint64_t a1, void (*a2)(uint64_t))
{
  void *v4;

  v4 = (void *)MEMORY[0x1BCCF2DD8]();
  a2(a1);
  objc_autoreleasePoolPop(v4);
}

uint64_t sub_1BC4205A0(uint64_t a1)
{
  return sub_1BC420618(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC42053C);
}

uint64_t sub_1BC4205FC(uint64_t a1)
{
  return sub_1BC420618(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC42045C);
}

uint64_t sub_1BC420618(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t type metadata accessor for AlphabeticalLabsDataSource()
{
  uint64_t result;

  result = qword_1EF42F170;
  if (!qword_1EF42F170)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC420678()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC4206C4(unint64_t a1)
{
  return sub_1BC4206D0(a1, &OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
}

uint64_t sub_1BC4206D0(unint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    return v9;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v4 = result;
  if (!result)
    goto LABEL_15;
LABEL_3:
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)(MEMORY[0x1BCCF24CC](i, a1) + *a2 + 16) == 1)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1BC62D268();
          sub_1BC62D298();
          sub_1BC62D2A4();
          sub_1BC62D274();
        }
      }
    }
    else
    {
      v7 = 0;
      v8 = *a2;
      do
      {
        if (*(_QWORD *)(*(_QWORD *)(a1 + 8 * v7 + 32) + v8 + 16) != 1)
        {
          swift_retain();
          sub_1BC62D268();
          sub_1BC62D298();
          sub_1BC62D2A4();
          sub_1BC62D274();
          v8 = *a2;
        }
        ++v7;
      }
      while (v4 != v7);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC420868(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v29 - v3;
  v5 = sub_1BC62A760();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v34 = (char *)&v29 - v10;
  MEMORY[0x1E0C80A78](v9);
  v33 = (char *)&v29 - v11;
  v12 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1;
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v15 = sub_1BC62D3B8();
    if (v15)
      goto LABEL_3;
  }
  else
  {
    v15 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15)
    {
LABEL_3:
      v36 = v15;
      v37 = v38 & 0xC000000000000001;
      v16 = 4;
      v31 = v12;
      v32 = v4;
      v30 = v14;
      while (1)
      {
        v17 = v16 - 4;
        if (v37)
        {
          v18 = MEMORY[0x1BCCF24CC](v16 - 4, v38);
          v19 = v16 - 3;
          if (__OFADD__(v17, 1))
            goto LABEL_16;
        }
        else
        {
          v18 = *(_QWORD *)(v38 + 8 * v16);
          swift_retain();
          v19 = v16 - 3;
          if (__OFADD__(v17, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v20 = v18 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData;
        sub_1BC3AA02C(v18 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, (uint64_t)v14);
        sub_1BC3462D8((uint64_t)&v14[*(int *)(v12 + 36)], (uint64_t)v4);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
          break;
        v21 = v33;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v33, v4, v5);
        v22 = v34;
        sub_1BC62A754();
        v23 = v35;
        sub_1BC62A6DC();
        v24 = *(void (**)(char *, uint64_t))(v6 + 8);
        v24(v22, v5);
        LOBYTE(v22) = sub_1BC62A718();
        v25 = v23;
        v14 = v30;
        v24(v25, v5);
        v26 = v21;
        v12 = v31;
        v24(v26, v5);
        v4 = v32;
        sub_1BC421F94((uint64_t)v14);
        if ((v22 & 1) == 0)
          goto LABEL_5;
        v27 = *(_QWORD *)(v20 + 16);
        swift_release();
        if (!v27)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
LABEL_6:
        ++v16;
        if (v19 == v36)
          goto LABEL_18;
      }
      sub_1BC36D71C((uint64_t)v4);
      sub_1BC421F94((uint64_t)v14);
LABEL_5:
      swift_release();
      goto LABEL_6;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BC420B6C(unint64_t a1)
{
  return sub_1BC420B78(a1, &OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
}

uint64_t sub_1BC420B78(unint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v5 = 4;
      do
      {
        v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v7 = MEMORY[0x1BCCF24CC](v5 - 4, a1);
          v8 = __OFADD__(v6, 1);
          v9 = v5 - 3;
          if (v8)
            goto LABEL_14;
        }
        else
        {
          v7 = *(_QWORD *)(a1 + 8 * v5);
          swift_retain();
          v8 = __OFADD__(v6, 1);
          v9 = v5 - 3;
          if (v8)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        v10 = v7 + *a2;
        if (objc_msgSend(*(id *)(v10 + 8), sel_isLowUtility))
        {
          v11 = *(_QWORD *)(v10 + 16);
          swift_release();
          if (!v11)
          {
            v12 = 1;
            goto LABEL_17;
          }
        }
        else
        {
          swift_release();
        }
        ++v5;
      }
      while (v9 != v4);
    }
  }
  v12 = 0;
LABEL_17:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC420C98(unint64_t a1)
{
  return sub_1BC420CA4(a1, &OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
}

uint64_t sub_1BC420CA4(unint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a2;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - v4;
  v6 = sub_1BC62A760();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v31 - v11;
  MEMORY[0x1E0C80A78](v10);
  v34 = (char *)&v31 - v12;
  v13 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x1E0DEE9D8];
  v38 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC62D3B8();
    v16 = result;
    if (result)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v16 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v16)
    goto LABEL_18;
LABEL_3:
  if (v16 >= 1)
  {
    v18 = 0;
    v19 = v38 & 0xC000000000000001;
    v32 = v13;
    v33 = v5;
    v31 = v38 & 0xC000000000000001;
    while (1)
    {
      if (v19)
        v20 = MEMORY[0x1BCCF24CC](v18, v38);
      else
        v20 = swift_retain();
      v21 = *v37;
      v39 = v20;
      v22 = v20 + v21;
      sub_1BC3AA02C(v20 + v21, (uint64_t)v15);
      sub_1BC3462D8((uint64_t)&v15[*(int *)(v13 + 36)], (uint64_t)v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_1BC36D71C((uint64_t)v5);
        sub_1BC421F94((uint64_t)v15);
      }
      else
      {
        v23 = v34;
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v34, v5, v6);
        v24 = v35;
        sub_1BC62A754();
        v25 = v16;
        v26 = v15;
        v27 = v36;
        sub_1BC62A6DC();
        v28 = *(void (**)(char *, uint64_t))(v7 + 8);
        v28(v24, v6);
        LOBYTE(v24) = sub_1BC62A718();
        v29 = v27;
        v15 = v26;
        v16 = v25;
        v19 = v31;
        v28(v29, v6);
        v30 = v23;
        v13 = v32;
        v28(v30, v6);
        v5 = v33;
        sub_1BC421F94((uint64_t)v15);
        if ((v24 & 1) != 0)
          goto LABEL_5;
      }
      if (!objc_msgSend(*(id *)(v22 + 8), sel_isLowUtility, v31) && !*(_QWORD *)(v22 + 16))
      {
        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
        goto LABEL_6;
      }
LABEL_5:
      swift_release();
LABEL_6:
      if (v16 == ++v18)
      {
        swift_bridgeObjectRelease();
        return v40;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC420FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  sub_1BC421FD0();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(_QWORD *)(v0 + qword_1EF42F168);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1BC42207C;
  *(_QWORD *)(v6 + 24) = v0;
  sub_1BC3EA830();
  sub_1BC3A451C(0, &qword_1EF42BAA0, &qword_1EF42BAA8, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
  sub_1BC347F0C(&qword_1EF431D30, (uint64_t (*)(uint64_t))sub_1BC3EA830, MEMORY[0x1E0C95D90]);
  swift_retain();
  swift_retain();
  sub_1BC62C02C();
  swift_release();
  swift_release();
  sub_1BC347F0C(&qword_1EF42F1D8, (uint64_t (*)(uint64_t))sub_1BC421FD0, MEMORY[0x1E0C95950]);
  v7 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1BC421174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t *v25;
  id v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a2;
  v5 = type metadata accessor for UserDomainConceptViewData();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v30 = a3;
  if (v9)
  {
    v32 = MEMORY[0x1E0DEE9D8];
    swift_retain();
    sub_1BC62D28C();
    v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    type metadata accessor for AlphabeticalUDCCell();
    v11 = (void **)(a3 + qword_1ED6A40E0);
    swift_beginAccess();
    v29 = v6;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BC3AA02C(v10, (uint64_t)v8);
      v13 = *v11;
      type metadata accessor for UDCAlphabeticalItem();
      v14 = swift_allocObject();
      v15 = (uint64_t *)(v14 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
      sub_1BC347F0C(&qword_1EF42F1C0, (uint64_t (*)(uint64_t))type metadata accessor for AlphabeticalUDCCell, (uint64_t)&unk_1BC63B5F8);
      v16 = v13;
      *v15 = sub_1BC62ADA8();
      v15[1] = v17;
      sub_1BC4220A8((uint64_t)v8, v14 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
      *(_QWORD *)(v14 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore) = v16;
      *(_QWORD *)(v14 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration) = 1;
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v10 += v12;
      --v9;
    }
    while (v9);
    v18 = v32;
    v6 = v29;
    a3 = v30;
  }
  else
  {
    swift_retain();
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v19 = v31;
  v20 = *(_QWORD *)(v31 + 16);
  if (v20)
  {
    v29 = v18;
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    v21 = v19 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    type metadata accessor for AlphabeticalUDCCell();
    v31 = a3 + qword_1ED6A40E0;
    swift_beginAccess();
    v22 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BC3AA02C(v21, (uint64_t)v8);
      v23 = *(void **)v31;
      type metadata accessor for UDCAlphabeticalItem();
      v24 = swift_allocObject();
      v25 = (uint64_t *)(v24 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
      sub_1BC347F0C(&qword_1EF42F1C0, (uint64_t (*)(uint64_t))type metadata accessor for AlphabeticalUDCCell, (uint64_t)&unk_1BC63B5F8);
      v26 = v23;
      *v25 = sub_1BC62ADA8();
      v25[1] = v27;
      sub_1BC4220A8((uint64_t)v8, v24 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
      *(_QWORD *)(v24 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore) = v26;
      *(_QWORD *)(v24 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration) = 1;
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v21 += v22;
      --v20;
    }
    while (v20);
    swift_release();
    return v29;
  }
  else
  {
    swift_release();
  }
  return v18;
}

uint64_t sub_1BC4214F0(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  char v7;
  int v8;
  uint64_t inited;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v3 = v2;
  v31 = sub_1BC420CA4(a2, &OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  sub_1BC4206D0(a1, &OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  swift_getKeyPath();
  sub_1BC357158(0, &qword_1EF42BAA8, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC421EE0();
  v30 = sub_1BC62C7E8();
  swift_release();
  swift_bridgeObjectRelease();
  v6 = sub_1BC420868(a2);
  if ((v6 & 1) != 0)
    v7 = 1;
  else
    v7 = 4;
  v8 = 2;
  if ((sub_1BC420B78(a2, &OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData) & 1) == 0)
  {
    if ((sub_1BC39D35C(0xD000000000000026, 0x80000001BC6546A0, 0) & 1) != 0)
      v8 = 2;
    else
      v8 = 4;
  }
  sub_1BC357158(0, (unint64_t *)&qword_1EF42EC30, (uint64_t (*)(uint64_t))sub_1BC421F40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  *(_BYTE *)(inited + 32) = v7;
  *(_BYTE *)(inited + 33) = v8;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  if ((v6 & 1) != 0)
  {
    v11 = sub_1BC3B60F4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v13 = *((_QWORD *)v11 + 2);
    v12 = *((_QWORD *)v11 + 3);
    if (v13 >= v12 >> 1)
      v11 = sub_1BC3B60F4((char *)(v12 > 1), v13 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 1;
    v8 = *(unsigned __int8 *)(inited + 33);
  }
  if (v8 != 4)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BC3B60F4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v15 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    if (v15 >= v14 >> 1)
      v11 = sub_1BC3B60F4((char *)(v14 > 1), v15 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v15 + 1;
    v11[v15 + 32] = v8;
  }
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v11 + 2);
  if (v16)
  {
    v32 = v10;
    swift_retain();
    sub_1BC62D28C();
    type metadata accessor for NavigationCell();
    v17 = (void **)(v3 + qword_1ED6A40E0);
    swift_beginAccess();
    type metadata accessor for NavigationItem();
    v18 = 0;
    do
    {
      v19 = v18 + 1;
      v20 = v11[v18 + 32];
      v21 = *v17;
      v22 = swift_allocObject();
      sub_1BC347F0C(&qword_1EF42EC08, (uint64_t (*)(uint64_t))type metadata accessor for NavigationCell, (uint64_t)&unk_1BC641E78);
      v23 = v21;
      *(_QWORD *)(v22 + 16) = sub_1BC62ADA8();
      *(_QWORD *)(v22 + 24) = v24;
      *(_BYTE *)(v22 + 32) = v20;
      *(_BYTE *)(v22 + 33) = 2;
      *(_QWORD *)(v22 + 40) = v23;
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v18 = v19;
    }
    while (v16 != v19);
    v29 = v32;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BC6398E0;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v26 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC3D22E8(v30);
  swift_bridgeObjectRelease();
  sub_1BC62B270();
  v27 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC3D22E8(v31);
  swift_bridgeObjectRelease();
  sub_1BC62B270();
  sub_1BC3D22CC(v29);
  swift_bridgeObjectRelease();
  sub_1BC62B270();
  return v25;
}

uint64_t sub_1BC421ACC@<X0>(Swift::String *a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v3 = objc_msgSend(v2, sel_preferredLocalizations);

  v4 = sub_1BC62C878();
  v5 = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v4);
  result = swift_bridgeObjectRelease();
  *a1 = v5;
  return result;
}

BOOL sub_1BC421B68()
{
  sub_1BC36E2AC();
  return sub_1BC62D010() == -1;
}

uint64_t sub_1BC421BCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1BC62B3C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62B330();
  sub_1BC62B378();
  sub_1BC4179B8();
  v9 = *(int *)(v8 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a1, v7, v4);
  v10 = v2 + qword_1ED6A40F8;
  swift_beginAccess();
  v11 = MEMORY[0x1BCCF37A4](v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)(a1 + v9) = v11;
  v12 = *MEMORY[0x1E0D2B1A0];
  v13 = sub_1BC62B318();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(a1, v12, v13);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
}

uint64_t sub_1BC421CF8()
{
  sub_1BC62B408();
  sub_1BC62CB48();
  sub_1BC62B60C();
  sub_1BC62CB54();
  type metadata accessor for AlphabeticalUDCCell();
  sub_1BC347F0C(&qword_1EF42F1C0, (uint64_t (*)(uint64_t))type metadata accessor for AlphabeticalUDCCell, (uint64_t)&unk_1BC63B5F8);
  sub_1BC62CB48();
  type metadata accessor for NavigationCell();
  sub_1BC347F0C(&qword_1EF42EC08, (uint64_t (*)(uint64_t))type metadata accessor for NavigationCell, (uint64_t)&unk_1BC641E78);
  return sub_1BC62CB48();
}

void sub_1BC421DB4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC421DE0()
{
  return swift_release();
}

uint64_t sub_1BC421DF0()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  sub_1BC4C0CC8(v0);
  swift_bridgeObjectRelease();
  v1 = sub_1BC62B300();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC421ED4()
{
  return type metadata accessor for AlphabeticalLabsDataSource();
}

unint64_t sub_1BC421EE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42F1C8;
  if (!qword_1EF42F1C8)
  {
    sub_1BC357158(255, &qword_1EF42BAA8, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42F1C8);
  }
  return result;
}

void sub_1BC421F40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42EC38)
  {
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42EC38);
  }
}

uint64_t sub_1BC421F94(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UserDomainConceptViewData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC421FD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42F1D0)
  {
    sub_1BC3EA830();
    sub_1BC3A451C(255, &qword_1EF42BAA0, &qword_1EF42BAA8, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
    sub_1BC347F0C(&qword_1EF431D30, (uint64_t (*)(uint64_t))sub_1BC3EA830, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC62BE10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42F1D0);
  }
}

uint64_t sub_1BC42207C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC421174(a1, a2, v2);
}

uint64_t sub_1BC422084()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4220A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UserDomainConceptViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC4220EC()
{
  id *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(*v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC422170()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    v3 = (void *)objc_opt_self();
    v4 = objc_msgSend(v3, sel_clearColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v4);

    v5 = objc_msgSend(v0, sel_collectionView);
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v3, sel_clearColor);
      objc_msgSend(v6, sel_setBackgroundColor_, v7);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC42225C()
{
  sub_1BC422170();
}

void sub_1BC42227C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC422300()
{
  sub_1BC42227C();
}

uint64_t UDCRecentItem.__allocating_init(viewData:healthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v4 = swift_allocObject();
  v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  type metadata accessor for RecentUDCCell();
  sub_1BC347F0C(&qword_1EF42EC00, (uint64_t (*)(uint64_t))type metadata accessor for RecentUDCCell, (uint64_t)&unk_1BC64B8B0);
  *v5 = sub_1BC62ADA8();
  v5[1] = v6;
  sub_1BC4220A8(a1, v4 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore) = a2;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration) = 0;
  return v4;
}

uint64_t UDCRecentItem.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC3AA02C(v1 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, a1);
}

id UDCRecentItem.healthStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore);
}

uint64_t UDCRecentItem.init(viewData:healthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  type metadata accessor for RecentUDCCell();
  sub_1BC347F0C(&qword_1EF42EC00, (uint64_t (*)(uint64_t))type metadata accessor for RecentUDCCell, (uint64_t)&unk_1BC64B8B0);
  *v5 = sub_1BC62ADA8();
  v5[1] = v6;
  sub_1BC4220A8(a1, v2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore) = a2;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration) = 0;
  return v2;
}

uint64_t UDCRecentItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC4224E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD v9[2];

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier + 8);
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v9[0] = v6;
  v9[1] = v5;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v9[0];
}

id sub_1BC4225DC()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData + 8);
}

uint64_t UDCRecentItem.deinit()
{
  uint64_t v0;

  sub_1BC421F94(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UDCRecentItem.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BC421F94(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC42268C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC4226C8()
{
  return sub_1BC4224E0();
}

uint64_t sub_1BC4226E8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1BC3AA02C(*v1 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, a1);
}

id sub_1BC422700()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore);
}

uint64_t sub_1BC422714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  type metadata accessor for UDCRecentItem();
  v6 = swift_allocObject();
  v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  type metadata accessor for RecentUDCCell();
  sub_1BC347F0C(&qword_1EF42EC00, (uint64_t (*)(uint64_t))type metadata accessor for RecentUDCCell, (uint64_t)&unk_1BC64B8B0);
  *v7 = sub_1BC62ADA8();
  v7[1] = v8;
  result = sub_1BC4220A8(a1, v6 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore) = a2;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration) = 0;
  *a3 = v6;
  return result;
}

uint64_t static UDCRecentItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0((_QWORD *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData), (_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData));
}

uint64_t UDCRecentItem.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1BC62A79C();

  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t UDCRecentItem.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62D670();
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1BC62A79C();

  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4229BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_1BC62D670();
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v6
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1BC62A79C();

  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_1BC62D6AC();
}

uint64_t sub_1BC422AB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1BC62A79C();

  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t sub_1BC422B98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62D670();
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1BC62A79C();

  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_1BC62D6AC();
}

uint64_t sub_1BC422C94(_QWORD *a1, _QWORD *a2)
{
  return _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0((_QWORD *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData), (_QWORD *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData));
}

uint64_t sub_1BC422CB0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BC347F0C(&qword_1EF42CFC8, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, (uint64_t)&protocol conformance descriptor for UDCRecentItem);
  result = sub_1BC347F0C(&qword_1EF42F218, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, (uint64_t)&protocol conformance descriptor for UDCRecentItem);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for UDCRecentItem()
{
  uint64_t result;

  result = qword_1EF42F250;
  if (!qword_1EF42F250)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC422D48()
{
  return sub_1BC347F0C(&qword_1EF42F220, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, (uint64_t)&protocol conformance descriptor for UDCRecentItem);
}

uint64_t sub_1BC422D74()
{
  return type metadata accessor for UDCRecentItem();
}

uint64_t sub_1BC422D7C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UserDomainConceptViewData();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for UDCRecentItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UDCRecentItem.__allocating_init(viewData:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of UDCRecentItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of UDCRecentItem.concept.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_1BC422E38(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if ((v1 & 1) != 0)
    {
      sub_1BC62B2D0();
    }
    else
    {
      sub_1BC422FF0();
      swift_getObjectType();
      sub_1BC62B030();
      swift_unknownObjectRelease();
      sub_1BC62B2D0();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC422EF0()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC62B2D0();
    return swift_release();
  }
  return result;
}

id sub_1BC422F50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;

  sub_1BC4179B8();
  v4 = *(int *)(v3 + 48);
  sub_1BC62B36C();
  v9 = *(id *)(v1 + qword_1EF42F300);
  *(_QWORD *)(a1 + v4) = v9;
  v5 = *MEMORY[0x1E0D2B1A0];
  v6 = sub_1BC62B318();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(a1, v5, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return v9;
}

uint64_t sub_1BC422FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Class v36;
  id v37;
  uint64_t v38;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;

  v1 = v0;
  sub_1BC357158(0, &qword_1EF42EDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B1B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v40 - v3;
  sub_1BC62AC10();
  v43 = (id)MEMORY[0x1BCCEFEBC]();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v42 = v5;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC639580;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  sub_1BC3B30F0();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC6395A0;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BC3644C0();
  strcpy((char *)(v7 + 32), "pluginPackage");
  *(_WORD *)(v7 + 46) = -4864;
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 72) = 0xD000000000000025;
  *(_QWORD *)(v7 + 80) = 0x80000001BC654E10;
  *(_QWORD *)(v6 + 32) = sub_1BC62CA64();
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = sub_1BC62AA78();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  v40 = xmmword_1BC639590;
  *(_OWORD *)(v13 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x1E0D2D5A8], v10);
  sub_1BC62AB2C();
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v40;
  v15 = *(void **)(v1 + qword_1EF42F308);
  *(_QWORD *)(v14 + 32) = objc_msgSend(v15, sel_profileIdentifier);
  v16 = sub_1BC62ABC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 40) = v16;
  v17 = objc_msgSend(v15, sel_profileIdentifier);
  LOBYTE(v44) = 2;
  v18 = sub_1BC427484((unsigned __int8 *)&v44);

  *(_QWORD *)(v6 + 48) = v18;
  v44 = v6;
  sub_1BC62C890();
  v19 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v19);

  v21 = v43;
  objc_msgSend(v43, sel_setPredicate_, v20);

  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BC6396B0;
  v23 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v24 = (void *)sub_1BC62C650();
  v25 = objc_msgSend(v23, sel_initWithKey_ascending_selector_, v24, 1, sel_localizedStandardCompare_);

  *(_QWORD *)(v22 + 32) = v25;
  v44 = v22;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v26 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setSortDescriptors_, v26);

  v27 = v41;
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(v41 + qword_1EF42F310), *(_QWORD *)(v41 + qword_1EF42F310 + 24));
  v28 = v21;
  v29 = (void *)sub_1BC62A9D0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v28, v29, 0, 0);

  sub_1BC4179B8();
  v31 = *(int *)(v30 + 48);
  sub_1BC62B36C();
  v32 = *(void **)(v27 + qword_1EF42F300);
  *(_QWORD *)&v4[v31] = v32;
  v33 = *MEMORY[0x1E0D2B1A0];
  v34 = sub_1BC62B318();
  v35 = *(_QWORD *)(v34 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v4, v33, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v4, 0, 1, v34);
  sub_1BC3EA7C0(0, (unint64_t *)&qword_1EF42A230, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E718], (uint64_t (*)(void))sub_1BC41CD50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AC90]);
  objc_allocWithZone(v36);
  v37 = v32;
  v38 = sub_1BC62AF28();

  sub_1BC423F28();
  return v38;
}

void LabsOnboardingDataSource.__allocating_init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void LabsOnboardingDataSource.init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC4235D8()
{
  uint64_t v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + qword_1EF42F310);
  return swift_bridgeObjectRelease();
}

uint64_t LabsOnboardingDataSource.deinit()
{
  uint64_t v0;

  v0 = sub_1BC62B300();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + qword_1EF42F310);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LabsOnboardingDataSource.__deallocating_deinit()
{
  uint64_t v0;

  v0 = sub_1BC62B300();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + qword_1EF42F310);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1BC423724@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v10;

  v3 = *v1;
  sub_1BC4179B8();
  v5 = *(int *)(v4 + 48);
  sub_1BC62B36C();
  v10 = *(id *)(v3 + qword_1EF42F300);
  *(_QWORD *)(a1 + v5) = v10;
  v6 = *MEMORY[0x1E0D2B1A0];
  v7 = sub_1BC62B318();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(a1, v6, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return v10;
}

uint64_t sub_1BC4237C8()
{
  MEMORY[0x1BCCF35C4](&protocol conformance descriptor for LabsOnboardingDataSource);
  return sub_1BC62B660();
}

uint64_t sub_1BC423814(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69[2];
  char v70;

  v4 = v3;
  v61 = a3;
  v64 = sub_1BC62CCE0();
  v65 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v62 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4240F0(0, &qword_1EF42F378, v9, (void (*)(void))sub_1BC4240B0);
  v11 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  v67 = v11;
  MEMORY[0x1E0C80A78](v10);
  v63 = (char *)&v50 - v12;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v56 = (char *)&v50 - v14;
  v68 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v68);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4240CC(0);
  v18 = *(_QWORD *)(v17 - 8);
  v57 = v17;
  v58 = v18;
  MEMORY[0x1E0C80A78](v17);
  v54 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4240F0(0, &qword_1EF42F380, v20, (void (*)(void))sub_1BC3EAA58);
  v22 = *(_QWORD *)(v21 - 8);
  v59 = v21;
  v60 = v22;
  MEMORY[0x1E0C80A78](v21);
  v55 = (char *)&v50 - v23;
  v24 = sub_1BC62A7B4();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + qword_1EF42F320) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v4 + qword_1EF42F308) = a1;
  *(_QWORD *)(v4 + qword_1EF42F300) = a2;
  sub_1BC34E674(a3, v4 + qword_1EF42F310);
  type metadata accessor for OnboardingTileAppearanceManager();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a1;
  v29 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  v30 = a1;
  swift_retain();
  v31 = a2;
  v32 = (void *)sub_1BC62C650();
  v33 = objc_msgSend(v29, sel_initWithCategory_domainName_healthStore_, 0, v32, v30);

  *(_QWORD *)(v28 + 24) = v33;
  *(_QWORD *)(v4 + qword_1EF42F318) = v28;
  swift_release();
  v69[0] = 0;
  v69[1] = (id)0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  strcpy((char *)v69, "MutableArray<");
  HIWORD(v69[1]) = -4864;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v34 = sub_1BC62B2B8();
  v52 = v16;
  v53 = qword_1EF42F318;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  v35 = (void *)sub_1BC373548();
  sub_1BC42418C((uint64_t)v16);
  v69[0] = v35;
  v70 = 0;
  sub_1BC3EA740();
  sub_1BC3EA7A4();
  v36 = v54;
  sub_1BC62C014();
  swift_release();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v69[0] = (id)sub_1BC62CC74();
  v37 = sub_1BC62CC38();
  v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v38 = (uint64_t)v56;
  v51(v56, 1, 1, v37);
  sub_1BC3EAA58();
  sub_1BC3ABB20();
  v39 = v55;
  v40 = v57;
  v41 = v36;
  sub_1BC62C080();
  v42 = v38;
  sub_1BC3A4334(v38);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v40);
  swift_allocObject();
  swift_weakInit();
  sub_1BC4241F4(&qword_1EF42F388, &qword_1EF42F380, sub_1BC4240CC, (void (*)(void))sub_1BC3EAA58);
  v43 = v59;
  sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v43);
  swift_beginAccess();
  sub_1BC62BEA0();
  swift_endAccess();
  swift_release();
  v44 = (uint64_t)v52;
  swift_storeEnumTagMultiPayload();
  v45 = v62;
  sub_1BC373374(v44);
  sub_1BC42418C(v44);
  v69[0] = (id)sub_1BC62CC74();
  v51((char *)v42, 1, 1, v37);
  sub_1BC4240B0();
  v47 = v63;
  v46 = v64;
  sub_1BC62C080();
  sub_1BC3A4334(v42);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v46);
  swift_allocObject();
  swift_weakInit();
  sub_1BC4241F4(&qword_1EF431FE0, &qword_1EF42F378, (void (*)(uint64_t))MEMORY[0x1E0CB1F30], (void (*)(void))sub_1BC4240B0);
  v48 = v66;
  sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v47, v48);
  swift_beginAccess();
  sub_1BC62BEA0();
  swift_endAccess();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v61);
  return v34;
}

unint64_t sub_1BC423F28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42A240;
  if (!qword_1EF42A240)
  {
    sub_1BC3EA7C0(255, (unint64_t *)&qword_1EF42A230, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E718], (uint64_t (*)(void))sub_1BC41CD50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AC90]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D2B7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42A240);
  }
  return result;
}

uint64_t sub_1BC423F90()
{
  return sub_1BC347F0C(&qword_1EF42BA88, (uint64_t (*)(uint64_t))type metadata accessor for LabsOnboardingDataSource, (uint64_t)&protocol conformance descriptor for LabsOnboardingDataSource);
}

uint64_t type metadata accessor for LabsOnboardingDataSource()
{
  uint64_t result;

  result = qword_1EF42F328;
  if (!qword_1EF42F328)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC423FF8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for LabsOnboardingDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LabsOnboardingDataSource.layoutType(for:with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for LabsOnboardingDataSource + *v0 + 72))();
}

uint64_t dispatch thunk of LabsOnboardingDataSource.makeOnboardingDataSource()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for LabsOnboardingDataSource + *v0 + 80))();
}

uint64_t sub_1BC4240A8()
{
  return type metadata accessor for LabsOnboardingDataSource();
}

uint64_t sub_1BC4240B0()
{
  return sub_1BC347F0C(&qword_1EF431FD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
}

void sub_1BC4240CC(uint64_t a1)
{
  sub_1BC3EA7C0(a1, &qword_1EF42D820, (uint64_t (*)(uint64_t))sub_1BC3EA740, sub_1BC3EA7A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C957D8]);
}

void sub_1BC4240F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    a4();
    sub_1BC3ABB20();
    v6 = sub_1BC62BE70();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC42418C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OnboardingViewIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC4241C8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC4241EC(char *a1)
{
  return sub_1BC422E38(a1);
}

uint64_t sub_1BC4241F4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC4240F0(255, a2, a3, a4);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95CB8], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC424234()
{
  return sub_1BC422EF0();
}

id sub_1BC42423C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  objc_super v13;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter);
  }
  else
  {
    v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
    v6 = (objc_class *)type metadata accessor for CoverageClassificationFormatter();
    v7 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store] = v4;
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context] = v5;
    v13.receiver = v7;
    v13.super_class = v6;
    v8 = v4;
    v9 = objc_msgSendSuper2(&v13, sel_init);
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1BC424308()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  objc_super v15;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter);
  }
  else
  {
    v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
    v6 = (objc_class *)type metadata accessor for CoverageIdentifierFormatter();
    v7 = (char *)objc_allocWithZone(v6);
    v8 = &v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue];
    *(_QWORD *)v8 = 0;
    *((_QWORD *)v8 + 1) = 0;
    v9 = &v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle];
    *(_QWORD *)v9 = 0;
    *((_QWORD *)v9 + 1) = 0xE000000000000000;
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store] = v4;
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context] = v5;
    v15.receiver = v7;
    v15.super_class = v6;
    v10 = v4;
    v11 = objc_msgSendSuper2(&v15, sel_init);
    v12 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v11;
    v3 = v11;

    v2 = 0;
  }
  v13 = v2;
  return v3;
}

uint64_t sub_1BC4243F8(void *a1)
{
  unint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  unint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = MEMORY[0x1E0DEE9D8];
  v43 = MEMORY[0x1E0DEE9D8];
  v3 = objc_msgSend(a1, sel_beneficiaryIdentifier);
  if (v3)
  {
    v4 = v3;
    sub_1BC34D844();
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BC6396B0;
    *(_QWORD *)(v5 + 32) = v4;
    v41 = v5;
    sub_1BC62C890();
    v2 = v41;
  }
  v6 = sub_1BC424308();
  v7 = objc_msgSend(a1, sel_beneficiary);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1BC62C680();
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  if (qword_1ED6A4888 != -1)
    swift_once();
  v12 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v13 = sub_1BC62A4A8();
  v15 = v14;
  swift_bridgeObjectRelease();

  v16 = objc_msgSend(a1, sel_country, 0xE000000000000000);
  sub_1BC62C680();

  v17 = sub_1BC50F61C(v2, v9, v11, v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3BB72C(v17);
  v18 = objc_msgSend(a1, sel_subscriberIdentifier);
  if (v18)
  {
    v19 = v18;
    sub_1BC34D844();
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BC6396B0;
    *(_QWORD *)(v20 + 32) = v19;
    v42 = v20;
    sub_1BC62C890();
    v21 = v42;
  }
  else
  {
    v21 = MEMORY[0x1E0DEE9D8];
  }
  v22 = sub_1BC424308();
  v23 = objc_msgSend(a1, sel_subscriber);
  if (v23)
  {
    v24 = v23;
    v25 = sub_1BC62C680();
    v27 = v26;

  }
  else
  {
    v25 = 0;
    v27 = 0;
  }
  v28 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v29 = sub_1BC62A4A8();
  v31 = v30;
  swift_bridgeObjectRelease();

  v32 = objc_msgSend(a1, sel_country, 0xE000000000000000);
  sub_1BC62C680();

  v33 = sub_1BC50F61C(v21, v25, v27, v29, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3BB72C(v33);
  v34 = objc_msgSend(a1, sel_classification);
  if (v34)
  {
    v35 = v34;
    sub_1BC34B6A0(0, &qword_1EF42F390);
    v36 = sub_1BC62C878();

    v37 = sub_1BC42423C();
    v38 = v37;
    v39 = sub_1BC424F10(v36, (uint64_t)v38);
    swift_bridgeObjectRelease();

    sub_1BC3BB72C(v39);
  }
  return v43;
}

id CoverageRecordFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store);
}

uint64_t CoverageRecordFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
}

id CoverageRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id CoverageRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for CoverageRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1BC424948(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC425524((uint64_t)a1);
  if (!v2)
    return sub_1BC4249A8(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC4249A8(void *a1)
{
  uint64_t inited;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v19;

  sub_1BC42567C();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC63DB50;
  *(_QWORD *)(inited + 32) = sub_1BC61F83C(a1);
  *(_QWORD *)(inited + 40) = sub_1BC425154(a1);
  *(_QWORD *)(inited + 48) = sub_1BC425344(a1);
  v3 = objc_msgSend(a1, sel_payor);
  if (v3)
  {
    v4 = sub_1BC62C878();

    v3 = (id)Array<A>.newlineJoined.getter(v4);
    v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  *(_QWORD *)(inited + 56) = sub_1BC4AA2CC((uint64_t)v3, v6);
  *(_QWORD *)(inited + 64) = sub_1BC4AADAC(objc_msgSend(a1, sel_periodStartDate), objc_msgSend(a1, sel_periodEndDate), v7);
  sub_1BC62C890();
  v19 = MEMORY[0x1E0DEE9D8];
  v8 = *(void **)(inited + 32);
  if (v8)
  {
    v9 = v8;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v10 = *(void **)(inited + 40);
  if (v10)
  {
    v11 = v10;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v12 = *(void **)(inited + 48);
  if (v12)
  {
    v13 = v12;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v14 = *(void **)(inited + 56);
  if (v14)
  {
    v15 = v14;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v16 = *(void **)(inited + 64);
  if (v16)
  {
    v17 = v16;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  swift_bridgeObjectRelease();
  return v19;
}

id CoverageRecordFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CoverageRecordFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CoverageRecordFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoverageRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC424DEC()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store);
}

uint64_t sub_1BC424E00()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
}

id sub_1BC424E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for CoverageRecordFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1BC424E9C(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC425524((uint64_t)a1);
  if (!v2)
    return sub_1BC4249A8(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC424F10(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v4 = MEMORY[0x1E0DEE9D8];
    if (!v3)
      return v4;
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BDBBC(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v5 = 0;
    v4 = v20;
    v16 = v2 & 0xC000000000000001;
    v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context);
    v17 = v2;
    while (v3 != v5)
    {
      if (v16)
        v7 = (id)MEMORY[0x1BCCF24CC](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      if (v6 > 1)
        goto LABEL_22;
      v9 = (void *)sub_1BC5AB818(v7);
      v10 = v9;
      v11 = MEMORY[0x1E0DEE9D8];
      v19 = MEMORY[0x1E0DEE9D8];
      if (v9)
      {
        v12 = v9;
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();
        v11 = v19;
      }

      v14 = *(_QWORD *)(v20 + 16);
      v13 = *(_QWORD *)(v20 + 24);
      if (v14 >= v13 >> 1)
        sub_1BC3BDBBC(v13 > 1, v14 + 1, 1);
      ++v5;
      *(_QWORD *)(v20 + 16) = v14 + 1;
      *(_QWORD *)(v20 + 8 * v14 + 32) = v11;
      v2 = v17;
      if (v3 == v5)
        return v4;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    v3 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_22:
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CoverageRecordFormatter()
{
  return objc_opt_self();
}

id sub_1BC425154(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v1 = objc_msgSend(a1, sel_subscriberId);
  v2 = sub_1BC62C680();
  v4 = v3;

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v7 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1BC425344(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v1 = a1;
  v2 = sub_1BC507310(v1);
  v4 = v3;

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v7 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

uint64_t sub_1BC425524(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v6;

  v1 = (void *)sub_1BC546064(a1);
  v2 = v1;
  v3 = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v4 = v1;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    v3 = v6;
  }

  return v3;
}

unint64_t sub_1BC4255C8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC4255EC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC4255EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42F3F8;
  if (!qword_1EF42F3F8)
  {
    v1 = type metadata accessor for CoverageRecordFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42F3F8);
  }
  return result;
}

uint64_t method lookup function for CoverageRecordFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoverageRecordFormatter.structuredItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CoverageRecordFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of CoverageRecordFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

void sub_1BC42567C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42B398)
  {
    sub_1BC39CBC8(255);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42B398);
  }
}

id static FeedItem.predicateForHealthRecordsData(categoryKind:sourceProfile:)(unsigned __int8 *a1, void *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0];
  sub_1BC357158(0, &qword_1EF42D368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - v6;
  v8 = *a1;
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = sub_1BC62AA78();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = swift_allocObject();
  v35 = xmmword_1BC639590;
  *(_OWORD *)(v12 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x1E0D2D510], v9);
  v13 = sub_1BC62AB2C();
  v15 = v14;
  v16 = sub_1BC62A31C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v35;
  *(_QWORD *)(v17 + 32) = a2;
  v18 = a2;
  v19 = (void *)MEMORY[0x1BCCEFEA4](v12, v13, v15, v7, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC377E3C((uint64_t)v7, &qword_1EF42D368, v4);
  if (v8 == 11)
    return v19;
  v37 = 0;
  v38 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v37 = 0xD000000000000014;
  v38 = 0x80000001BC6584F0;
  v36 = v8;
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v22 = v37;
  v21 = v38;
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v24 = sub_1BC62ABF8();
  v26 = v25;
  v27 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
  v28 = sub_1BC3644C0();
  *(_QWORD *)(v23 + 32) = v24;
  *(_QWORD *)(v23 + 40) = v26;
  *(_QWORD *)(v23 + 96) = v27;
  *(_QWORD *)(v23 + 104) = v28;
  *(_QWORD *)(v23 + 64) = v28;
  *(_QWORD *)(v23 + 72) = v22;
  *(_QWORD *)(v23 + 80) = v21;
  swift_bridgeObjectRetain();
  v29 = (void *)sub_1BC62CA64();
  swift_bridgeObjectRelease();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BC639570;
  *(_QWORD *)(v30 + 32) = v19;
  *(_QWORD *)(v30 + 40) = v29;
  v37 = v30;
  sub_1BC62C890();
  v31 = v19;
  v32 = v29;
  v33 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v33);

  return v34;
}

uint64_t static FeedItem.predicateForGeneralHealthRecordsOnboarding(profileId:)(uint64_t a1)
{
  return sub_1BC425AA0(a1, (uint64_t (*)(void))_s15HealthRecordsUI35AddAccountFeedItemIdentifierFactoryV011makeGeneralab10OnboardingH03forSSSo09HKProfileH0CSg_tFZ_0);
}

uint64_t static FeedItem.predicateForLabsHealthRecordsOnboarding(profileId:)(uint64_t a1)
{
  return sub_1BC425AA0(a1, (uint64_t (*)(void))sub_1BC4FB058);
}

uint64_t sub_1BC425AA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v2 = a2();
  v4 = v3;
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v6 = sub_1BC62ABF8();
  v8 = v7;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1BC3644C0();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  *(_QWORD *)(v5 + 96) = v9;
  *(_QWORD *)(v5 + 104) = v10;
  *(_QWORD *)(v5 + 64) = v10;
  *(_QWORD *)(v5 + 72) = v2;
  *(_QWORD *)(v5 + 80) = v4;
  swift_bridgeObjectRetain();
  v11 = sub_1BC62CA64();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t static FeedItem.predicateForHealthRecordsPlugin()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC6395A0;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v2 = sub_1BC3644C0();
  strcpy((char *)(v0 + 32), "pluginPackage");
  *(_WORD *)(v0 + 46) = -4864;
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 104) = v2;
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 72) = 0xD000000000000025;
  *(_QWORD *)(v0 + 80) = 0x80000001BC654E10;
  return sub_1BC62CA64();
}

id static FeedItem.predicateForOnboarding(sourceProfile:categoryKind:)(uint64_t a1, unsigned __int8 *a2)
{
  return sub_1BC427484(a2);
}

unint64_t static FeedItem.chrPluginPackage.getter()
{
  return 0xD000000000000025;
}

uint64_t static FeedItem.predicateForPluginPackage(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC6395A0;
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1BC3644C0();
  strcpy((char *)(v4 + 32), "pluginPackage");
  *(_WORD *)(v4 + 46) = -4864;
  *(_QWORD *)(v4 + 96) = v5;
  *(_QWORD *)(v4 + 104) = v6;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  return sub_1BC62CA64();
}

uint64_t static FeedItem.predicateForPluginUniqueIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1BC425DBC(a1, a2);
}

uint64_t static FeedItem.predicateForPluginUniqueIdentifierComponent(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1BC425DBC(a1, a2);
}

uint64_t sub_1BC425DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v5 = sub_1BC62ABF8();
  v7 = v6;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BC3644C0();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  *(_QWORD *)(v4 + 96) = v8;
  *(_QWORD *)(v4 + 104) = v9;
  *(_QWORD *)(v4 + 64) = v9;
  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  return sub_1BC62CA64();
}

unint64_t sub_1BC425EA0()
{
  unint64_t result;

  result = qword_1ED6A58C0;
  if (!qword_1ED6A58C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A58C0);
  }
  return result;
}

id static FeedItem.predicateForSharedSnippets()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;

  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v1 = sub_1BC62ABF8();
  v3 = v2;
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v5 = sub_1BC3644C0();
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v3;
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 64) = v5;
  *(_QWORD *)(v0 + 72) = 0xD000000000000024;
  *(_QWORD *)(v0 + 80) = 0x80000001BC658530;
  v6 = (void *)sub_1BC62CA64();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC6395A0;
  v8 = sub_1BC62ABF8();
  *(_QWORD *)(v7 + 56) = v4;
  *(_QWORD *)(v7 + 64) = v5;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v9;
  *(_QWORD *)(v7 + 96) = v4;
  *(_QWORD *)(v7 + 104) = v5;
  *(_QWORD *)(v7 + 72) = 0xD000000000000014;
  *(_QWORD *)(v7 + 80) = 0x80000001BC6553B0;
  v10 = (void *)sub_1BC62CA64();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC639570;
  *(_QWORD *)(v11 + 32) = v6;
  *(_QWORD *)(v11 + 40) = v10;
  sub_1BC62C890();
  v12 = v6;
  v13 = v10;
  v14 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v14);

  return v15;
}

uint64_t _s14HealthPlatform8FeedItemC0A9RecordsUIE029predicateForUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0N0OSg_AA06SourceP0OtFZ_0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  _QWORD v21[2];

  v1 = *a1;
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v3 = sub_1BC62ABF8();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1BC3644C0();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 96) = v6;
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 64) = v7;
  *(_QWORD *)(v2 + 72) = 0xD00000000000001ALL;
  *(_QWORD *)(v2 + 80) = 0x80000001BC6585C0;
  result = sub_1BC62CA64();
  v9 = (void *)result;
  if (v1 != 11)
  {
    sub_1BC62D1D8();
    swift_bridgeObjectRelease();
    strcpy((char *)v21, "[UDCCategory:");
    HIWORD(v21[1]) = -4864;
    sub_1BC62D52C();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    v11 = v21[0];
    v10 = v21[1];
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BC6395A0;
    v13 = sub_1BC62ABF8();
    *(_QWORD *)(v12 + 56) = v6;
    *(_QWORD *)(v12 + 64) = v7;
    *(_QWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 40) = v14;
    *(_QWORD *)(v12 + 96) = v6;
    *(_QWORD *)(v12 + 104) = v7;
    *(_QWORD *)(v12 + 72) = v11;
    *(_QWORD *)(v12 + 80) = v10;
    swift_bridgeObjectRetain();
    v15 = (void *)sub_1BC62CA64();
    swift_bridgeObjectRelease();
    sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BC639570;
    *(_QWORD *)(v16 + 32) = v9;
    *(_QWORD *)(v16 + 40) = v15;
    sub_1BC62C890();
    v17 = v9;
    v18 = v15;
    v19 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v19);

    return (uint64_t)v20;
  }
  return result;
}

id _s14HealthPlatform8FeedItemC0A9RecordsUIE022predicateForNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0L0OSg_AA06SourceN0OtFZ_0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v19;

  v1 = *a1;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v3 = sub_1BC62ABF8();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1BC3644C0();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 96) = v6;
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 64) = v7;
  *(_QWORD *)(v2 + 72) = 0xD000000000000021;
  *(_QWORD *)(v2 + 80) = 0x80000001BC657370;
  v8 = (void *)sub_1BC62CA64();
  v9 = 0;
  if (v1 != 11)
  {
    sub_1BC62D1D8();
    swift_bridgeObjectRelease();
    sub_1BC62D52C();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BC6395A0;
    v11 = sub_1BC62ABF8();
    *(_QWORD *)(v10 + 56) = v6;
    *(_QWORD *)(v10 + 64) = v7;
    *(_QWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 40) = v12;
    *(_QWORD *)(v10 + 96) = v6;
    *(_QWORD *)(v10 + 104) = v7;
    *(_QWORD *)(v10 + 72) = 0xD000000000000014;
    *(_QWORD *)(v10 + 80) = 0x80000001BC6573C0;
    swift_bridgeObjectRetain();
    v9 = (void *)sub_1BC62CA64();
    swift_bridgeObjectRelease();
  }
  v19 = MEMORY[0x1E0DEE9D8];
  v13 = v9;
  v14 = v8;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  if (v9)
  {
    v15 = v13;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  v16 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v16);

  return v17;
}

id _s14HealthPlatform8FeedItemC0A9RecordsUIE037predicateForRemovedCategoryNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD07DisplayJ0V0N0OSg_AA06SourceP0OtFZ_0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v19;

  v1 = *a1;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v3 = sub_1BC62ABF8();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1BC3644C0();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 96) = v6;
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 64) = v7;
  *(_QWORD *)(v2 + 72) = 0xD000000000000030;
  *(_QWORD *)(v2 + 80) = 0x80000001BC6585E0;
  v8 = (void *)sub_1BC62CA64();
  v9 = 0;
  if (v1 != 11)
  {
    sub_1BC62D1D8();
    swift_bridgeObjectRelease();
    sub_1BC62D52C();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BC6395A0;
    v11 = sub_1BC62ABF8();
    *(_QWORD *)(v10 + 56) = v6;
    *(_QWORD *)(v10 + 64) = v7;
    *(_QWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 40) = v12;
    *(_QWORD *)(v10 + 96) = v6;
    *(_QWORD *)(v10 + 104) = v7;
    *(_QWORD *)(v10 + 72) = 0xD00000000000001BLL;
    *(_QWORD *)(v10 + 80) = 0x80000001BC658620;
    swift_bridgeObjectRetain();
    v9 = (void *)sub_1BC62CA64();
    swift_bridgeObjectRelease();
  }
  v19 = MEMORY[0x1E0DEE9D8];
  v13 = v9;
  v14 = v8;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  if (v9)
  {
    v15 = v13;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  v16 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v16);

  return v17;
}

uint64_t _s14HealthPlatform8FeedItemC0A9RecordsUIE046predicateForUserDomainConceptEducationAbstractC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0P0OSg_AA06SourceR0OtFZ_0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  _QWORD v21[2];

  v1 = *a1;
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v3 = sub_1BC62ABF8();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1BC3644C0();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 96) = v6;
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 64) = v7;
  *(_QWORD *)(v2 + 72) = 0xD00000000000002BLL;
  *(_QWORD *)(v2 + 80) = 0x80000001BC658590;
  result = sub_1BC62CA64();
  v9 = (void *)result;
  if (v1 != 11)
  {
    sub_1BC62D1D8();
    swift_bridgeObjectRelease();
    strcpy((char *)v21, "[UDCCategory:");
    HIWORD(v21[1]) = -4864;
    sub_1BC62D52C();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    v11 = v21[0];
    v10 = v21[1];
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BC6395A0;
    v13 = sub_1BC62ABF8();
    *(_QWORD *)(v12 + 56) = v6;
    *(_QWORD *)(v12 + 64) = v7;
    *(_QWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 40) = v14;
    *(_QWORD *)(v12 + 96) = v6;
    *(_QWORD *)(v12 + 104) = v7;
    *(_QWORD *)(v12 + 72) = v11;
    *(_QWORD *)(v12 + 80) = v10;
    swift_bridgeObjectRetain();
    v15 = (void *)sub_1BC62CA64();
    swift_bridgeObjectRelease();
    sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BC639570;
    *(_QWORD *)(v16 + 32) = v9;
    *(_QWORD *)(v16 + 40) = v15;
    sub_1BC62C890();
    v17 = v9;
    v18 = v15;
    v19 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v19);

    return (uint64_t)v20;
  }
  return result;
}

id _s14HealthPlatform8FeedItemC0A9RecordsUIE015predicateForTipC5Items4uuid12categoryKind13sourceProfileSo11NSPredicateC10Foundation4UUIDVSg_AD15DisplayCategoryV0M0OSgAA06SourceO0OtFZ_0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  _QWORD v47[2];
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];

  v50 = a1;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v47 - v7;
  v9 = sub_1BC62A7B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v51 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = *a2;
  v54[0] = 0;
  v54[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v49 = v12;
  v13 = swift_allocObject();
  v48 = xmmword_1BC6395A0;
  *(_OWORD *)(v13 + 16) = xmmword_1BC6395A0;
  v47[1] = sub_1BC62AC10();
  v14 = sub_1BC62ABF8();
  v16 = v15;
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v18 = sub_1BC3644C0();
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v16;
  *(_QWORD *)(v13 + 96) = v17;
  *(_QWORD *)(v13 + 104) = v18;
  *(_QWORD *)(v13 + 64) = v18;
  *(_QWORD *)(v13 + 72) = 0xD00000000000001ALL;
  *(_QWORD *)(v13 + 80) = 0x80000001BC658670;
  v19 = (void *)sub_1BC62CA64();
  sub_1BC34EA24(v50, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BC377E3C((uint64_t)v8, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
  }
  else
  {
    v20 = v51;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v20, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    v21 = _s15HealthRecordsUI42UserDomainConceptFeedItemIdentifierFactoryV13makeComponent9conceptIdSSSg10Foundation4UUIDVSg_tFZ_0((uint64_t)v5);
    v23 = v22;
    sub_1BC377E3C((uint64_t)v5, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
    if (v23)
    {
      v24 = v19;
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = v48;
      v26 = sub_1BC62ABF8();
      v27 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v25 + 64) = v18;
      *(_QWORD *)(v25 + 32) = v26;
      *(_QWORD *)(v25 + 40) = v28;
      *(_QWORD *)(v25 + 96) = v27;
      *(_QWORD *)(v25 + 104) = v18;
      *(_QWORD *)(v25 + 72) = v21;
      *(_QWORD *)(v25 + 80) = v23;
      swift_bridgeObjectRetain();
      v19 = v24;
      v29 = (void *)sub_1BC62CA64();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v51, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v51, v9);
  }
  v29 = 0;
LABEL_7:
  v30 = v52;
  if ((_DWORD)v52 == 11)
  {
    v31 = 0;
  }
  else
  {
    v54[0] = 0;
    v54[1] = 0xE000000000000000;
    sub_1BC62D1D8();
    swift_bridgeObjectRelease();
    strcpy((char *)v54, "[UDCCategory:");
    HIWORD(v54[1]) = -4864;
    v53 = v30;
    sub_1BC62D52C();
    v32 = v19;
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    v34 = v54[0];
    v33 = v54[1];
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v48;
    v36 = sub_1BC62ABF8();
    v37 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 64) = v18;
    *(_QWORD *)(v35 + 32) = v36;
    *(_QWORD *)(v35 + 40) = v38;
    *(_QWORD *)(v35 + 96) = v37;
    *(_QWORD *)(v35 + 104) = v18;
    *(_QWORD *)(v35 + 72) = v34;
    *(_QWORD *)(v35 + 80) = v33;
    swift_bridgeObjectRetain();
    v31 = (void *)sub_1BC62CA64();
    v19 = v32;
    swift_bridgeObjectRelease();
  }
  v54[0] = MEMORY[0x1E0DEE9D8];
  v39 = v31;
  v40 = v19;
  v41 = v29;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  if (v29)
  {
    v42 = v41;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v31)
  {
    v43 = v39;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  v44 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v45 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v44);

  return v45;
}

uint64_t _s14HealthPlatform8FeedItemC0A9RecordsUIE035predicateForPinnedUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0O0OSg_AA06SourceQ0OtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "[UDCListType:");
  HIWORD(v10[1]) = -4864;
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v1 = v10[0];
  v0 = v10[1];
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v3 = sub_1BC62ABF8();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1BC3644C0();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 96) = v6;
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 64) = v7;
  *(_QWORD *)(v2 + 72) = v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_bridgeObjectRetain();
  v8 = sub_1BC62CA64();
  swift_bridgeObjectRelease();
  return v8;
}

id sub_1BC427484(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  _QWORD v21[2];

  v1 = *a1;
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v3 = sub_1BC62ABF8();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1BC3644C0();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 96) = v6;
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 64) = v7;
  *(_QWORD *)(v2 + 72) = 0xD000000000000021;
  *(_QWORD *)(v2 + 80) = 0x80000001BC658640;
  v8 = (void *)sub_1BC62CA64();
  v9 = 0;
  if (v1 != 11)
  {
    sub_1BC62D1D8();
    swift_bridgeObjectRelease();
    strcpy((char *)v21, "[UDCCategory:");
    HIWORD(v21[1]) = -4864;
    sub_1BC62D52C();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    v10 = v21[0];
    v11 = v21[1];
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BC6395A0;
    v13 = sub_1BC62ABF8();
    *(_QWORD *)(v12 + 56) = v6;
    *(_QWORD *)(v12 + 64) = v7;
    *(_QWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 40) = v14;
    *(_QWORD *)(v12 + 96) = v6;
    *(_QWORD *)(v12 + 104) = v7;
    *(_QWORD *)(v12 + 72) = v10;
    *(_QWORD *)(v12 + 80) = v11;
    swift_bridgeObjectRetain();
    v9 = (void *)sub_1BC62CA64();
    swift_bridgeObjectRelease();
  }
  v21[0] = MEMORY[0x1E0DEE9D8];
  v15 = v9;
  v16 = v8;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v21[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  if (v9)
  {
    v17 = v15;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v21[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  v18 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v18);

  return v19;
}

uint64_t _s14HealthPlatform8FeedItemC0A9RecordsUIE012predicateForaE10Onboarding9profileId12categoryKindSo11NSPredicateCSo19HKProfileIdentifierC_AD15DisplayCategoryV0M0OSgtFZ_0(void *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (*a2 == 2)
    v2 = sub_1BC4FB058(a1);
  else
    v2 = _s15HealthRecordsUI35AddAccountFeedItemIdentifierFactoryV011makeGeneralab10OnboardingH03forSSSo09HKProfileH0CSg_tFZ_0(a1);
  v4 = v2;
  v5 = v3;
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v7 = sub_1BC62ABF8();
  v9 = v8;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1BC3644C0();
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v9;
  *(_QWORD *)(v6 + 96) = v10;
  *(_QWORD *)(v6 + 104) = v11;
  *(_QWORD *)(v6 + 64) = v11;
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 80) = v5;
  swift_bridgeObjectRetain();
  v12 = sub_1BC62CA64();
  swift_bridgeObjectRelease();
  return v12;
}

id _s14HealthPlatform8FeedItemC0A9RecordsUIE028predicateForConceptHighlightC5Items4uuid12categoryKind13sourceProfileSo11NSPredicateC10Foundation4UUIDVSg_AD15DisplayCategoryV0N0OSgAA06SourceP0OtFZ_0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  _QWORD v47[2];
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];

  v50 = a1;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v47 - v7;
  v9 = sub_1BC62A7B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v51 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = *a2;
  v54[0] = 0;
  v54[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC425EA0();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v49 = v12;
  v13 = swift_allocObject();
  v48 = xmmword_1BC6395A0;
  *(_OWORD *)(v13 + 16) = xmmword_1BC6395A0;
  v47[1] = sub_1BC62AC10();
  v14 = sub_1BC62ABF8();
  v16 = v15;
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v18 = sub_1BC3644C0();
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v16;
  *(_QWORD *)(v13 + 96) = v17;
  *(_QWORD *)(v13 + 104) = v18;
  *(_QWORD *)(v13 + 64) = v18;
  *(_QWORD *)(v13 + 72) = 0xD000000000000020;
  *(_QWORD *)(v13 + 80) = 0x80000001BC658560;
  v19 = (void *)sub_1BC62CA64();
  sub_1BC34EA24(v50, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BC377E3C((uint64_t)v8, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
  }
  else
  {
    v20 = v51;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v20, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    v21 = _s15HealthRecordsUI42UserDomainConceptFeedItemIdentifierFactoryV13makeComponent9conceptIdSSSg10Foundation4UUIDVSg_tFZ_0((uint64_t)v5);
    v23 = v22;
    sub_1BC377E3C((uint64_t)v5, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
    if (v23)
    {
      v24 = v19;
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = v48;
      v26 = sub_1BC62ABF8();
      v27 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v25 + 64) = v18;
      *(_QWORD *)(v25 + 32) = v26;
      *(_QWORD *)(v25 + 40) = v28;
      *(_QWORD *)(v25 + 96) = v27;
      *(_QWORD *)(v25 + 104) = v18;
      *(_QWORD *)(v25 + 72) = v21;
      *(_QWORD *)(v25 + 80) = v23;
      swift_bridgeObjectRetain();
      v19 = v24;
      v29 = (void *)sub_1BC62CA64();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v51, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v51, v9);
  }
  v29 = 0;
LABEL_7:
  v30 = v52;
  if ((_DWORD)v52 == 11)
  {
    v31 = 0;
  }
  else
  {
    v54[0] = 0;
    v54[1] = 0xE000000000000000;
    sub_1BC62D1D8();
    swift_bridgeObjectRelease();
    strcpy((char *)v54, "[UDCCategory:");
    HIWORD(v54[1]) = -4864;
    v53 = v30;
    sub_1BC62D52C();
    v32 = v19;
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    v34 = v54[0];
    v33 = v54[1];
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v48;
    v36 = sub_1BC62ABF8();
    v37 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 64) = v18;
    *(_QWORD *)(v35 + 32) = v36;
    *(_QWORD *)(v35 + 40) = v38;
    *(_QWORD *)(v35 + 96) = v37;
    *(_QWORD *)(v35 + 104) = v18;
    *(_QWORD *)(v35 + 72) = v34;
    *(_QWORD *)(v35 + 80) = v33;
    swift_bridgeObjectRetain();
    v31 = (void *)sub_1BC62CA64();
    v19 = v32;
    swift_bridgeObjectRelease();
  }
  v54[0] = MEMORY[0x1E0DEE9D8];
  v39 = v31;
  v40 = v19;
  v41 = v29;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  if (v29)
  {
    v42 = v41;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v31)
  {
    v43 = v39;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  v44 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v45 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v44);

  return v45;
}

NSDateFormatter __swiftcall NSDateFormatter.init(dateStyle:timeStyle:)(NSDateFormatterStyle dateStyle, NSDateFormatterStyle timeStyle)
{
  id v4;
  NSMutableDictionary *v5;
  __CFDateFormatter *v6;
  NSUInteger v7;
  objc_class *v8;
  NSDateFormatter result;

  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v4, sel_setDateStyle_, dateStyle);
  objc_msgSend(v4, sel_setTimeStyle_, timeStyle);

  v8 = (objc_class *)v4;
  result._counter = v7;
  result._formatter = v6;
  result._attributes = v5;
  result.super.super.isa = v8;
  return result;
}

void sub_1BC427EF8()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 1);
  objc_msgSend(v0, sel_setTimeStyle_, 0);

  qword_1EF42F428 = (uint64_t)v0;
}

id static NSDateFormatter.shortDate.getter()
{
  if (qword_1EF4284B0 != -1)
    swift_once();
  return (id)qword_1EF42F428;
}

id sub_1BC427FA0(uint64_t a1)
{
  return sub_1BC428920(18.0, a1, MEMORY[0x1E0DC1420], &qword_1EF42F430);
}

unint64_t sub_1BC427FB8(uint64_t a1)
{
  return sub_1BC428820(a1, &qword_1EF4284B8, (void **)&qword_1EF42F430, (unint64_t *)&qword_1EF459D28);
}

unint64_t sub_1BC427FDC()
{
  uint64_t inited;
  void **v1;
  void *v2;
  void *v3;
  double v4;
  id v5;
  id v6;
  unint64_t result;

  sub_1BC428E1C(0, (unint64_t *)&qword_1EF4383B0, (unint64_t *)&qword_1EF4290F0, type metadata accessor for Key);
  inited = swift_initStackObject();
  v1 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BC639590;
  v2 = *v1;
  *(_QWORD *)(inited + 32) = *v1;
  v3 = (void *)objc_opt_self();
  v4 = *MEMORY[0x1E0DC1448];
  v5 = v2;
  v6 = objc_msgSend(v3, sel_systemFontOfSize_weight_, 14.0, v4);
  *(_QWORD *)(inited + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  *(_QWORD *)(inited + 40) = v6;
  result = sub_1BC35B6B4(inited);
  qword_1EF459D30 = result;
  return result;
}

id sub_1BC4280D4(uint64_t a1)
{
  return sub_1BC428920(10.0, a1, MEMORY[0x1E0DC1440], &qword_1EF42F438);
}

unint64_t sub_1BC4280EC(uint64_t a1)
{
  return sub_1BC428820(a1, &qword_1EF4284D0, (void **)&qword_1EF42F438, (unint64_t *)&qword_1EF459D38);
}

unint64_t sub_1BC428110()
{
  uint64_t inited;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  double v13;
  id v14;
  unint64_t result;

  sub_1BC428E1C(0, (unint64_t *)&qword_1EF4383B0, (unint64_t *)&qword_1EF4290F0, type metadata accessor for Key);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  v1 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v2 = qword_1EF4284D0;
  v3 = v1;
  if (v2 != -1)
    swift_once();
  v4 = (void *)qword_1EF42F438;
  v5 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  *(_QWORD *)(inited + 40) = v4;
  v6 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v6;
  v7 = (void *)objc_opt_self();
  v8 = v4;
  v9 = v6;
  v10 = objc_msgSend(v7, sel_defaultParagraphStyle);
  v11 = (id)qword_1EF42F438;
  objc_msgSend(v11, sel_lineHeight);
  v13 = v12;

  v14 = sub_1BC428294(v13 + 3.0);
  *(_QWORD *)(inited + 104) = sub_1BC34B6A0(0, &qword_1EF42F488);
  *(_QWORD *)(inited + 80) = v14;
  result = sub_1BC35B6B4(inited);
  qword_1EF459D40 = result;
  return result;
}

id sub_1BC428294(double a1)
{
  void *v1;
  id v4;

  objc_msgSend(v1, sel_mutableCopy);
  sub_1BC62D088();
  swift_unknownObjectRelease();
  sub_1BC34B6A0(0, &qword_1EF42F490);
  swift_dynamicCast();
  objc_msgSend(v4, sel_setMinimumLineHeight_, a1);
  objc_msgSend(v4, sel_setMaximumLineHeight_, a1);
  objc_msgSend(v4, sel_copy);
  sub_1BC62D088();

  swift_unknownObjectRelease();
  sub_1BC34B6A0(0, &qword_1EF42F488);
  swift_dynamicCast();
  return v4;
}

void sub_1BC4283B0(uint64_t a1)
{
  sub_1BC428620(a1, &qword_1EF4284E0, &qword_1EF459D40, &qword_1EF459D48);
}

uint64_t sub_1BC4283D4(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  id v6;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v9[2];
  __int128 v10;
  uint64_t v11;

  v4 = (void *)*MEMORY[0x1E0DC1140];
  v11 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
  *(_QWORD *)&v10 = a1;
  sub_1BC35E088(&v10, v9);
  swift_bridgeObjectRetain();
  v5 = v4;
  v6 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC48CAE8(v9, v5, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  return a2;
}

id sub_1BC428484(uint64_t a1)
{
  return sub_1BC428920(10.0, a1, MEMORY[0x1E0DC1448], &qword_1EF42F440);
}

unint64_t sub_1BC42849C(uint64_t a1)
{
  return sub_1BC428820(a1, &qword_1EF4284F0, (void **)&qword_1EF42F440, (unint64_t *)&qword_1EF459D50);
}

uint64_t sub_1BC4284C0(uint64_t a1)
{
  return sub_1BC428780(a1, &qword_1EF4284F8, (uint64_t)&qword_1EF459D50, (unint64_t *)&qword_1EF459D58);
}

unint64_t sub_1BC4284E4(unint64_t result)
{
  unint64_t v1;
  void *v2;
  id v3;
  char v4;
  uint64_t v5;
  id v6;
  char isUniquelyReferenced_nonNull_native;
  void *v8;
  _OWORD v9[2];
  __int128 v10;
  uint64_t v11;

  if (*(_QWORD *)(result + 16))
  {
    v1 = result;
    v2 = (void *)*MEMORY[0x1E0DC1138];
    swift_bridgeObjectRetain();
    v3 = v2;
    result = sub_1BC558F0C((uint64_t)v3);
    if ((v4 & 1) != 0)
    {
      sub_1BC375540(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v9);
      sub_1BC35E088(v9, &v10);
      v5 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
      swift_dynamicCast();
      v6 = sub_1BC428B80();

      v11 = v5;
      *(_QWORD *)&v10 = v6;
      sub_1BC35E088(&v10, v9);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1BC48CAE8(v9, v3, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
      return v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1BC4285FC(uint64_t a1)
{
  sub_1BC428620(a1, &qword_1EF4284F8, &qword_1EF459D50, &qword_1EF459D60);
}

void sub_1BC428620(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;

  if (*a2 != -1)
    swift_once();
  v6 = *a3;
  v7 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(v7, sel_systemGrayColor);
  v9 = sub_1BC4283D4(v8, v6);
  swift_bridgeObjectRelease();

  *a4 = v9;
}

void sub_1BC4286B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;

  if (qword_1EF4284F8 != -1)
    swift_once();
  v0 = qword_1EF459D50;
  v1 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v2 = objc_msgSend(v1, sel_systemRedColor);
  v3 = sub_1BC4283D4(v2, v0);
  swift_bridgeObjectRelease();

  qword_1EF459D68 = v3;
}

uint64_t sub_1BC42875C(uint64_t a1)
{
  return sub_1BC428780(a1, &qword_1EF428510, (uint64_t)&qword_1EF459D68, (unint64_t *)&qword_1EF459D70);
}

uint64_t sub_1BC428780(uint64_t a1, _QWORD *a2, uint64_t a3, unint64_t *a4)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  if (*a2 != -1)
    swift_once();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1BC4284E4(v5);
  result = swift_bridgeObjectRelease();
  *a4 = v6;
  return result;
}

id sub_1BC4287E4(uint64_t a1)
{
  return sub_1BC428920(10.0, a1, MEMORY[0x1E0DC1448], &qword_1EF42F448);
}

unint64_t sub_1BC4287FC(uint64_t a1)
{
  return sub_1BC428820(a1, &qword_1EF428520, (void **)&qword_1EF42F448, (unint64_t *)&qword_1EF459D78);
}

unint64_t sub_1BC428820(uint64_t a1, uint64_t *a2, void **a3, unint64_t *a4)
{
  uint64_t inited;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  unint64_t result;

  sub_1BC428E1C(0, (unint64_t *)&qword_1EF4383B0, (unint64_t *)&qword_1EF4290F0, type metadata accessor for Key);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC639590;
  v8 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v9 = *a2;
  v10 = v8;
  if (v9 != -1)
    swift_once();
  v11 = *a3;
  *(_QWORD *)(inited + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  *(_QWORD *)(inited + 40) = v11;
  v12 = v11;
  result = sub_1BC35B6B4(inited);
  *a4 = result;
  return result;
}

id sub_1BC428908(uint64_t a1)
{
  return sub_1BC428920(8.0, a1, MEMORY[0x1E0DC1440], &qword_1EF42F450);
}

id sub_1BC428920(double a1, uint64_t a2, double *a3, _QWORD *a4)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, a1, *a3);
  *a4 = result;
  return result;
}

unint64_t sub_1BC428978()
{
  uint64_t inited;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  unint64_t result;

  sub_1BC428E1C(0, (unint64_t *)&qword_1EF4383B0, (unint64_t *)&qword_1EF4290F0, type metadata accessor for Key);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  v1 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v2 = qword_1EF428530;
  v3 = v1;
  if (v2 != -1)
    swift_once();
  v4 = (void *)qword_1EF42F450;
  v5 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  *(_QWORD *)(inited + 40) = v4;
  v6 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v6;
  v7 = (void *)objc_opt_self();
  v8 = v4;
  v9 = v6;
  v10 = objc_msgSend(v7, sel_systemGrayColor);
  *(_QWORD *)(inited + 104) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
  *(_QWORD *)(inited + 80) = v10;
  result = sub_1BC35B6B4(inited);
  qword_1EF459D80 = result;
  return result;
}

double sub_1BC428AC0()
{
  id v0;
  double v1;
  double v2;
  id v3;
  double v4;
  double v5;
  double result;

  if (qword_1EF428520 != -1)
    swift_once();
  v0 = (id)qword_1EF42F448;
  objc_msgSend(v0, sel_ascender);
  v2 = v1;

  if (qword_1EF428530 != -1)
    swift_once();
  v3 = (id)qword_1EF42F450;
  objc_msgSend(v3, sel_ascender);
  v5 = v4;

  result = v2 - v5;
  *(double *)&qword_1EF459D88 = v2 - v5;
  return result;
}

id sub_1BC428B80()
{
  void *v0;
  id v1;
  uint64_t inited;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  double v17;
  id v18;
  id v20;

  v1 = objc_msgSend(v0, sel_fontDescriptor);
  sub_1BC428E1C(0, &qword_1EF42F458, &qword_1EF429718, type metadata accessor for AttributeName);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC639590;
  v3 = (void *)*MEMORY[0x1E0DC1380];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1380];
  sub_1BC428E74(0, &qword_1EF42F460, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC6395A0;
  sub_1BC428E1C(0, &qword_1EF42F470, &qword_1EF42F478, type metadata accessor for FeatureKey);
  v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC6395A0;
  v6 = (void *)*MEMORY[0x1E0DC4A60];
  *(_QWORD *)(v5 + 32) = *MEMORY[0x1E0DC4A60];
  *(_QWORD *)(v5 + 40) = 38;
  v7 = (void *)*MEMORY[0x1E0DC4A50];
  *(_QWORD *)(v5 + 48) = *MEMORY[0x1E0DC4A50];
  *(_QWORD *)(v5 + 56) = 1;
  v8 = v3;
  v9 = v6;
  v10 = v7;
  *(_QWORD *)(v4 + 32) = sub_1BC35C6F0(v5);
  v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_QWORD *)(v11 + 40) = 37;
  *(_QWORD *)(v11 + 48) = v10;
  *(_QWORD *)(v11 + 56) = 1;
  v12 = v9;
  v13 = v10;
  *(_QWORD *)(v4 + 40) = sub_1BC35C6F0(v11);
  sub_1BC428E74(0, &qword_1EF42F480, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 40) = v4;
  sub_1BC35C7E8(inited);
  type metadata accessor for AttributeName(0);
  sub_1BC347F0C(&qword_1EF428FA8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1BC6392D8);
  v15 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v1, sel_fontDescriptorByAddingAttributes_, v15);

  objc_msgSend(v20, sel_pointSize);
  v18 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v16, v17);

  return v18;
}

void sub_1BC428E1C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC35F69C(255, a3, a4);
    v5 = sub_1BC62D538();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC428E74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC428ECC();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC428ECC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42F468)
  {
    type metadata accessor for FeatureKey(255);
    sub_1BC347F0C(&qword_1EF428F98, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_1BC63931C);
    v0 = sub_1BC62C59C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42F468);
  }
}

uint64_t sub_1BC428F4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 48) = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC428FA8()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1BC428FDC(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_release();
}

uint64_t (*sub_1BC429020())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1BC42905C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 56);
  *(_QWORD *)(v3 + 56) = v2;
  v5 = v2;

}

void *sub_1BC4290B0()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_beginAccess();
  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

void sub_1BC4290F0(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 56);
  *(_QWORD *)(v1 + 56) = a1;

}

uint64_t (*sub_1BC429134())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *sub_1BC429170(void *a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  void *v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;

  v3[8] = 0;
  v3[7] = 0;
  swift_unknownObjectWeakInit();
  v3[5] = a1;
  v3[6] = a2;
  swift_beginAccess();
  v7 = (void *)v3[7];
  v3[7] = 0;
  swift_retain();
  v8 = a1;
  swift_retain();

  swift_unknownObjectWeakAssign();
  swift_release();
  v9 = ConceptsDataSource.init(arrangedSections:isHidden:)(MEMORY[0x1E0DEE9D8], 0);
  if (a3)
  {
    swift_allocObject();
    swift_weakInit();
    sub_1BC42A618();
    sub_1BC379B20(&qword_1EF42F630, 255, (uint64_t (*)(uint64_t))sub_1BC42A618, MEMORY[0x1E0C95FB8]);
    swift_retain();
    v10 = sub_1BC62C0BC();
    swift_release();
    swift_release();
    swift_release();

    v9[8] = v10;
  }
  else
  {

  }
  swift_release();
  return v9;
}

uint64_t sub_1BC4292F4(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  _QWORD aBlock[6];

  v2 = sub_1BC62C47C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62C4AC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = result;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v13 = sub_1BC62CC74();
    v19 = v3;
    v14 = (void *)v13;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v10;
    *(_QWORD *)(v15 + 24) = v12;
    aBlock[4] = sub_1BC42A70C;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_12_0;
    v16 = _Block_copy(aBlock);
    v17 = v10;
    swift_retain();
    swift_release();
    sub_1BC62C494();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC379B20((unint64_t *)&qword_1ED6A5870, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35811C();
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v9, v5, v16);
    _Block_release(v16);
    swift_release();

    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

void sub_1BC429544(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    sub_1BC546A60(0);
    sub_1BC429648(v1);

  }
  else
  {
    sub_1BC546A60(1);
  }
}

uint64_t sub_1BC4295A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1BC62B12C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62B108();
  v4 = (void *)sub_1BC62B090();
  objc_msgSend(v4, sel_setInterGroupSpacing_, 0.0);

  v5 = sub_1BC62B090();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

void sub_1BC429648(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD aBlock[6];

  swift_beginAccess();
  if (!*(_QWORD *)(v1 + 56))
  {
    v3 = objc_msgSend(*(id *)(v1 + 40), sel_healthStore);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F748]), sel_initWithHealthStore_, v3);

    v5 = objc_msgSend(v4, sel_CHRRoomApplicationItems);
    v6 = (void *)objc_opt_self();
    v7 = swift_allocObject();
    swift_weakInit();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = a1;
    aBlock[4] = sub_1BC42A180;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC42A188;
    aBlock[3] = &block_descriptor_22;
    v9 = _Block_copy(aBlock);
    v10 = a1;
    swift_release();
    objc_msgSend(v6, sel_determineChartabilityOfOntologyConcept_withApplicationItems_completion_, v10, v5, v9);
    _Block_release(v9);

  }
}

uint64_t sub_1BC4297C4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC4297E8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t inited;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  _QWORD v70[3];
  id v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80[2];
  _BYTE v81[40];
  uint64_t v82[15];

  v5 = sub_1BC62A7B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    if (a1)
    {
      v73 = v8;
      v74 = v6;
      v75 = v5;
      v71 = a1;
      v11 = objc_msgSend(a3, sel_localizedPreferredName);
      if (v11)
      {
        v12 = v11;
        v13 = sub_1BC62C680();
        v15 = v14;

        type metadata accessor for MedicalRecordTimelineHeaderItem(0);
        v16 = swift_allocObject();
        sub_1BC62A7A8();
        v17 = (uint64_t *)(v16 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
        type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
        sub_1BC379B20(&qword_1EF42F498, 255, type metadata accessor for MedicalRecordTimelineHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItemCell);
        *v17 = sub_1BC62ADA8();
        v17[1] = v18;
        *(_QWORD *)(v16 + 16) = v13;
        *(_QWORD *)(v16 + 24) = v15;
        *(_QWORD *)(v16 + 56) = 0;
        *(_BYTE *)(v16 + 48) = 0;
        *(_QWORD *)(v16 + 32) = 0;
        *(_QWORD *)(v16 + 40) = 0;
        *(_BYTE *)(v16 + 64) = 2;
        *(_QWORD *)(v16 + 72) = 0;
        *(_QWORD *)(v16 + 80) = 0xE000000000000000;
        strcpy((char *)(v16 + 88), "ConceptTitle");
        *(_BYTE *)(v16 + 101) = 0;
        *(_WORD *)(v16 + 102) = -5120;
        *(_QWORD *)(v16 + 104) = 0;
        *(_QWORD *)(v16 + 112) = 0;
      }
      else
      {
        v16 = 0;
      }
      sub_1BC357158(0, &qword_1EF42F640, (uint64_t (*)(uint64_t))sub_1BC3A0AB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
      *(_QWORD *)&v76 = inited + 32;
      if (v16)
      {
        v36 = type metadata accessor for MedicalRecordTimelineHeaderItem(0);
        v37 = sub_1BC379B20(&qword_1EF42F638, 255, type metadata accessor for MedicalRecordTimelineHeaderItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItem);
      }
      else
      {
        v36 = 0;
        v37 = 0;
        *(_QWORD *)(inited + 40) = 0;
        *(_QWORD *)(inited + 48) = 0;
      }
      *(_QWORD *)(inited + 32) = v16;
      *(_QWORD *)(inited + 56) = v36;
      *(_QWORD *)(inited + 64) = v37;
      v38 = (void *)MEMORY[0x1BCCF37A4](v10 + 72);
      v39 = type metadata accessor for MedicalRecordTimelineChartItem();
      v40 = swift_allocObject();
      v72 = v10;
      v41 = (_QWORD *)v40;
      swift_unknownObjectWeakInit();
      type metadata accessor for MedicalRecordTimelineChartItemCell();
      sub_1BC379B20(&qword_1EF42F4A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineChartItemCell);
      v42 = v71;
      v43 = v16;
      v44 = v42;
      v70[2] = v43;
      swift_retain();
      v45 = a3;
      v41[5] = sub_1BC62ADA8();
      v41[6] = v46;
      v41[2] = v45;
      v41[3] = v44;
      v71 = v44;
      swift_unknownObjectWeakAssign();

      *(_QWORD *)(inited + 96) = v39;
      v47 = sub_1BC379B20(&qword_1EF42F648, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineChartItem);
      *(_QWORD *)(inited + 72) = v41;
      *(_QWORD *)(inited + 104) = v47;
      swift_retain();
      v70[1] = sub_1BC62AF4C();
      swift_release();
      sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v48 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC62B288() - 8) + 80);
      v70[0] = (v48 + 32) & ~v48;
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
      v82[0] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BC37ADB0(v76, (uint64_t)v81);
      sub_1BC3AC824((uint64_t)v81, (uint64_t)&v77);
      if (v78)
      {
        sub_1BC34E718(&v77, (uint64_t)v80);
        sub_1BC34E718(v80, (uint64_t)&v77);
        v49 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v49 = sub_1BC3B5CEC(0, v49[2] + 1, 1, v49);
          v82[0] = (uint64_t)v49;
        }
        v51 = v49[2];
        v50 = v49[3];
        if (v51 >= v50 >> 1)
          v82[0] = (uint64_t)sub_1BC3B5CEC((_QWORD *)(v50 > 1), v51 + 1, 1, v49);
        v52 = v78;
        v53 = v79;
        v54 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v77, v78);
        v55 = MEMORY[0x1E0C80A78](v54);
        v57 = (char *)v70 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v58 + 16))(v57, v55);
        sub_1BC5EE8E8(v51, (uint64_t)v57, v82, v52, v53);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v77);
      }
      else
      {
        sub_1BC37AE60((uint64_t)&v77);
      }
      sub_1BC37ADB0(inited + 72, (uint64_t)v81);
      sub_1BC3AC824((uint64_t)v81, (uint64_t)&v77);
      if (v78)
      {
        sub_1BC34E718(&v77, (uint64_t)v80);
        sub_1BC34E718(v80, (uint64_t)&v77);
        v59 = (_QWORD *)v82[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v59 = sub_1BC3B5CEC(0, v59[2] + 1, 1, v59);
          v82[0] = (uint64_t)v59;
        }
        v61 = v59[2];
        v60 = v59[3];
        if (v61 >= v60 >> 1)
          v82[0] = (uint64_t)sub_1BC3B5CEC((_QWORD *)(v60 > 1), v61 + 1, 1, v59);
        v62 = v78;
        v63 = v79;
        v64 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v77, v78);
        v65 = MEMORY[0x1E0C80A78](v64);
        v67 = (char *)v70 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v68 + 16))(v67, v65);
        sub_1BC5EE8E8(v61, (uint64_t)v67, v82, v62, v63);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v77);
      }
      else
      {
        sub_1BC37AE60((uint64_t)&v77);
      }
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1BC3A0AB8();
      swift_arrayDestroy();
      v69 = v73;
      sub_1BC62A7A8();
      sub_1BC62A778();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v69, v75);
      sub_1BC62B270();
      sub_1BC62B2D0();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

    }
    else
    {
      v19 = objc_msgSend(a3, sel_localizedPreferredName);
      if (v19)
      {
        v20 = v19;
        v21 = sub_1BC62C680();
        v75 = v5;
        v22 = v21;
        v24 = v23;

        v25 = type metadata accessor for MedicalRecordTimelineHeaderItem(0);
        v73 = v8;
        v26 = v25;
        v27 = swift_allocObject();
        v74 = v6;
        v28 = v27;
        sub_1BC62A7A8();
        v29 = (uint64_t *)(v28 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
        type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
        sub_1BC379B20(&qword_1EF42F498, 255, type metadata accessor for MedicalRecordTimelineHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItemCell);
        *v29 = sub_1BC62ADA8();
        v29[1] = v30;
        *(_QWORD *)(v28 + 16) = v22;
        *(_QWORD *)(v28 + 24) = v24;
        *(_QWORD *)(v28 + 56) = 0;
        *(_BYTE *)(v28 + 48) = 0;
        *(_QWORD *)(v28 + 32) = 0;
        *(_QWORD *)(v28 + 40) = 0;
        *(_BYTE *)(v28 + 64) = 3;
        *(_QWORD *)(v28 + 72) = 0;
        *(_QWORD *)(v28 + 80) = 0xE000000000000000;
        strcpy((char *)(v28 + 88), "ConceptTitle");
        *(_BYTE *)(v28 + 101) = 0;
        *(_WORD *)(v28 + 102) = -5120;
        *(_QWORD *)(v28 + 104) = 0;
        *(_QWORD *)(v28 + 112) = 0;
        swift_retain();
        swift_retain();
        sub_1BC62AF4C();
        swift_release();
        v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
        sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        sub_1BC62B288();
        v32 = swift_allocObject();
        v76 = xmmword_1BC639590;
        *(_OWORD *)(v32 + 16) = xmmword_1BC639590;
        sub_1BC357158(0, &qword_1EF42C5F0, (uint64_t (*)(uint64_t))sub_1BC37AE0C, v31);
        v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = v76;
        *(_QWORD *)(v33 + 56) = v26;
        *(_QWORD *)(v33 + 64) = sub_1BC379B20(&qword_1EF42F638, 255, type metadata accessor for MedicalRecordTimelineHeaderItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItem);
        *(_QWORD *)(v33 + 32) = v28;
        swift_retain();
        v34 = v73;
        sub_1BC62A7A8();
        sub_1BC62A778();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v34, v75);
        sub_1BC62B270();
        sub_1BC62B2D0();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
        sub_1BC62AF4C();
        swift_release();
        sub_1BC62B2D0();
      }
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC42A154()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC42A180(void *a1)
{
  uint64_t v1;

  return sub_1BC4297E8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1BC42A188(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

void MedicalRecordTimelineChartDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicalRecordTimelineChartDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC42A24C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_unknownObjectWeakDestroy();
}

uint64_t MedicalRecordTimelineChartDataSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t MedicalRecordTimelineChartDataSource.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC42A320()
{
  MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordTimelineChartDataSource);
  return sub_1BC62B834();
}

Swift::Void __swiftcall MedicalRecordTimelineChartDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_1BC62B408();
  sub_1BC62CB60();
  type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  sub_1BC379B20(&qword_1EF42F498, 255, type metadata accessor for MedicalRecordTimelineHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineChartItemCell();
  sub_1BC379B20(&qword_1EF42F4A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineChartItemCell);
  sub_1BC62CB48();
}

uint64_t sub_1BC42A418(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF42F4A8, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartDataSource, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineChartDataSource);
}

uint64_t type metadata accessor for MedicalRecordTimelineChartDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1BC42A464()
{
  sub_1BC62B408();
  sub_1BC62CB60();
  type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  sub_1BC379B20(&qword_1EF42F498, 255, type metadata accessor for MedicalRecordTimelineHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineChartItemCell();
  sub_1BC379B20(&qword_1EF42F4A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineChartItemCell);
  return sub_1BC62CB48();
}

uint64_t sub_1BC42A510@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_retain();
}

id sub_1BC42A55C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 56);
  *a2 = v4;
  return v4;
}

uint64_t method lookup function for MedicalRecordTimelineChartDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.ontologyConcept.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.ontologyConcept.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.ontologyConcept.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.chartViewController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.chartViewController.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.chartViewController.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.layout(for:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.reloadSection(ontologyConcept:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t sub_1BC42A610(void **a1)
{
  return sub_1BC4292F4(a1);
}

void sub_1BC42A618()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42F628)
  {
    sub_1BC42A67C();
    v0 = sub_1BC62BF18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42F628);
  }
}

void sub_1BC42A67C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429518)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1EF4294F8);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429518);
  }
}

uint64_t sub_1BC42A6E0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC42A70C()
{
  uint64_t v0;

  sub_1BC429544(*(void **)(v0 + 16));
}

id HKMedicalRecordCategoryType.categoryColors()(id a1)
{
  id v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;

  v2 = objc_msgSend((id)objc_opt_self(), sel_allSupportedRecordCategories);
  if (v2)
  {
    v3 = v2;
    sub_1BC42A87C();
    v4 = sub_1BC62C878();

    if (v4 >> 62)
      goto LABEL_16;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; v5 = sub_1BC62D3B8())
    {
      v6 = 4;
      while (1)
      {
        v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF24CC](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        if (objc_msgSend(v7, sel_categoryType) == a1)
        {
          swift_bridgeObjectRelease_n();
          v10 = objc_msgSend(v8, sel_categoryMetricColors);

          return v10;
        }

        ++v6;
        if (v9 == v5)
          goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

unint64_t sub_1BC42A87C()
{
  unint64_t result;

  result = qword_1ED6A5920;
  if (!qword_1ED6A5920)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A5920);
  }
  return result;
}

void __swiftcall HKMedicalRecordCategoryType.medicalRecordCategory()(WDMedicalRecordCategory_optional *__return_ptr retstr)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;

  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(), sel_allSupportedRecordCategories);
  if (v3)
  {
    v4 = v3;
    sub_1BC42A87C();
    v5 = sub_1BC62C878();

    if (v5 >> 62)
      goto LABEL_15;
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v6; v6 = sub_1BC62D3B8())
    {
      v7 = 4;
      while (1)
      {
        v8 = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF24CC](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
        v9 = v8;
        v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        if (objc_msgSend(v8, sel_categoryType) == v2)
        {
          swift_bridgeObjectRelease_n();
          return;
        }

        ++v7;
        if (v10 == v6)
          goto LABEL_11;
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
}

void sub_1BC42A9F8()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_collectionView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_15;
  }
  v3 = v2;
  sub_1BC62CB6C();

  sub_1BC34E254();
  v4 = objc_msgSend(v1, sel_collectionView);
  if (!v4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v5 = v4;
  sub_1BC62B4C8();
  swift_release();

  v6 = objc_msgSend(v1, sel_collectionView);
  if (!v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = v6;
  sub_1BC62B714();
  sub_1BC62CB60();

  v8 = objc_msgSend(v1, sel_collectionView);
  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = v8;
  sub_1BC62B654();
  sub_1BC62CB60();

  v10 = objc_msgSend(v1, sel_collectionView);
  if (!v10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = v10;
  sub_1BC62B744();
  sub_1BC62CB60();

  v12 = objc_msgSend(v1, sel_collectionView);
  if (!v12)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = v12;
  sub_1BC62B6B4();
  sub_1BC62CB60();

  v14 = objc_msgSend(v1, sel_collectionView);
  if (!v14)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15 = v14;
  sub_1BC62AF40();
  sub_1BC62CB48();

  v16 = objc_msgSend(v1, sel_collectionView);
  if (!v16)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v17 = v16;
  sub_1BC62B528();
  sub_1BC62CB48();

  v18 = objc_msgSend(v1, sel_collectionView);
  if (!v18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v19 = v18;
  sub_1BC62B66C();
  sub_1BC62CB48();

  v20 = objc_msgSend(v1, sel_collectionView);
  if (!v20)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v21 = v20;
  sub_1BC62B804();
  sub_1BC62CB48();

  v22 = objc_msgSend(v1, sel_collectionView);
  if (!v22)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v23 = v22;
  sub_1BC62B60C();
  sub_1BC62CB48();

  v24 = objc_msgSend(v1, sel_collectionView);
  if (v24)
  {
    v25 = v24;
    sub_1BC62CB54();

    return;
  }
LABEL_25:
  __break(1u);
}

Swift::Int __swiftcall MedicalRecordTimelineViewController.numberOfSections(in:)(UICollectionView *in)
{
  Swift::Int v1;

  sub_1BC34E254();
  sub_1BC62B4EC();
  v1 = sub_1BC62B03C();
  swift_release();
  return v1;
}

Swift::Int __swiftcall MedicalRecordTimelineViewController.collectionView(_:numberOfItemsInSection:)(UICollectionView *_, Swift::Int numberOfItemsInSection)
{
  Swift::Int v2;

  sub_1BC34E254();
  sub_1BC62B4EC();
  v2 = sub_1BC62B024();
  swift_release();
  return v2;
}

id MedicalRecordTimelineViewController.collectionView(_:cellForItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  uint64_t ObjectType;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[40];
  _QWORD v34[4];

  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&ObjectType - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1BC62A970();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v28 = (char *)&ObjectType - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&ObjectType - v11;
  v30 = v2;
  sub_1BC34E254();
  sub_1BC62B4EC();
  sub_1BC62B060();
  swift_release();
  __swift_project_boxed_opaque_existential_1Tm(v34, v34[3]);
  sub_1BC62AC64();
  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v32 = a2;
  v14 = (void *)sub_1BC62A928();
  v15 = objc_msgSend(a1, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v13, v14);

  swift_getObjectType();
  if (swift_conformsToProtocol2())
    v16 = v15;
  else
    v16 = 0;
  if (!v16)
  {
    sub_1BC62BAF8();
    v22 = sub_1BC62BB28();
    v23 = sub_1BC62CAD0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1BC30A000, v22, v23, "Cell does not conform to SectionedAdaptorCell", v24, 2u);
      MEMORY[0x1BCCF36A8](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1BC62B480();
    sub_1BC62ADA8();
    v25 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v19 = (id)sub_1BC62A928();
    v17 = objc_msgSend(a1, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v25, v19);

    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1BC34E674((uint64_t)v34, (uint64_t)v33);
  v17 = v15;
  sub_1BC62B174();
  swift_getObjectType();
  if (swift_conformsToProtocol2())
    v18 = v15;
  else
    v18 = 0;
  if (v18)
  {
    ObjectType = swift_getObjectType();
    v19 = v17;
    sub_1BC34E254();
    v20 = v32;
    sub_1BC62A964();
    sub_1BC62B024();
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v20, v31);
    sub_1BC62ADC0();
    v21 = sub_1BC62ADD8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v12, 0, 1, v21);
    sub_1BC62B3F0();
    v17 = v19;
LABEL_13:

  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  return v17;
}

double sub_1BC42B2EC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  __int128 *v6;
  double result;
  _OWORD v8[2];
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;
  __int128 v12[2];
  __int128 v13;

  v4 = (void *)sub_1BC62A928();
  v5 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v4);

  if (v5)
  {
    sub_1BC34E254();
    sub_1BC62B4EC();
    sub_1BC62B060();
    swift_release();
    sub_1BC34E718(&v13, (uint64_t)v10);
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    sub_1BC35817C(0, &qword_1EF429AE0);
    if (swift_dynamicCast())
    {

      v6 = v8;
LABEL_6:
      sub_1BC34E718(v6, (uint64_t)v12);
      sub_1BC34E718(v12, a2);
      return result;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));
    sub_1BC3DF8C4((uint64_t)v8, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
    *(_QWORD *)&v8[0] = v5;
    sub_1BC3658C0();
    if (swift_dynamicCast())
    {
      v6 = v10;
      goto LABEL_6;
    }
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_1BC3DF8C4((uint64_t)v10, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
  }
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t _s15HealthRecordsUI35MedicalRecordTimelineViewControllerC010collectionG0_18shouldSelectItemAtSbSo012UICollectionG0C_10Foundation9IndexPathVtF_0(void *a1)
{
  void *v2;
  id v3;
  char v4;
  _QWORD v6[3];
  uint64_t v7;
  _BYTE v8[40];

  v2 = (void *)sub_1BC62A928();
  v3 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v2);

  if (!v3)
    goto LABEL_5;
  sub_1BC42B2EC(a1, (uint64_t)v8);
  sub_1BC42BC9C((uint64_t)v8, (uint64_t)v6);
  if (!v7)
  {
    sub_1BC3DF8C4((uint64_t)v8, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);

    sub_1BC3DF8C4((uint64_t)v6, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
LABEL_5:
    v4 = 0;
    return v4 & 1;
  }
  __swift_project_boxed_opaque_existential_1Tm(v6, v7);
  v4 = sub_1BC62B1A4();

  sub_1BC3DF8C4((uint64_t)v8, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v4 & 1;
}

void MedicalRecordTimelineViewController.collectionView(_:didSelectItemAt:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  _BYTE v14[40];

  sub_1BC384E68(0, &qword_1EF42F650, (void (*)(uint64_t))MEMORY[0x1E0D2B178]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (unsigned __int8 *)v12 - v3;
  v5 = (void *)sub_1BC62A928();
  v6 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v5);

  if (v6)
  {
    sub_1BC42B2EC(a1, (uint64_t)v14);
    sub_1BC42BC9C((uint64_t)v14, (uint64_t)v12);
    if (v13)
    {
      __swift_project_boxed_opaque_existential_1Tm(v12, v13);
      sub_1BC62B1BC();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    }
    else
    {
      sub_1BC3DF8C4((uint64_t)v12, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
    }
    sub_1BC42BC9C((uint64_t)v14, (uint64_t)v12);
    if (v13)
    {
      __swift_project_boxed_opaque_existential_1Tm(v12, v13);
      sub_1BC62B1C8();
      v7 = sub_1BC62B30C();
      v8 = *(_QWORD *)(v7 - 8);
      (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1)
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t))(v8 + 88))(v4, v7) == *MEMORY[0x1E0D2B168])
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 96))(v4, v7);
          v9 = *v4;
          v10 = (void *)sub_1BC62A928();
          objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v10, v9);

          sub_1BC3DF8C4((uint64_t)v14, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
        }
        else
        {
          sub_1BC3DF8C4((uint64_t)v14, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);

          (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v4, v7);
        }
        return;
      }
    }
    else
    {
      sub_1BC3DF8C4((uint64_t)v12, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
      v11 = sub_1BC62B30C();
      (*(void (**)(unsigned __int8 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
    }

    sub_1BC3DF8C4((uint64_t)v14, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
    sub_1BC42BCF8((uint64_t)v4);
  }
}

id MedicalRecordTimelineViewController.collectionView(_:selectionFollowsFocusForItemAt:)(void *a1)
{
  void *v2;
  id v3;
  char v4;
  id v5;
  _QWORD v7[3];
  uint64_t v8;
  _BYTE v9[40];

  v2 = (void *)sub_1BC62A928();
  v3 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v2);

  if (!v3)
    return objc_msgSend(a1, sel_selectionFollowsFocus);
  sub_1BC42B2EC(a1, (uint64_t)v9);
  sub_1BC42BC9C((uint64_t)v9, (uint64_t)v7);
  if (!v8)
  {
    sub_1BC3DF8C4((uint64_t)v7, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1Tm(v7, v8);
  v4 = sub_1BC62B1B0();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  if (v4 == 2)
  {
LABEL_7:
    v5 = objc_msgSend(a1, sel_selectionFollowsFocus);

    sub_1BC3DF8C4((uint64_t)v9, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
    return v5;
  }
  sub_1BC3DF8C4((uint64_t)v9, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);

  return (id)(v4 & 1);
}

uint64_t sub_1BC42BBD8(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(id, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v15;

  v8 = sub_1BC62A970();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v12 = a3;
  v13 = a1;
  LOBYTE(a5) = a5(v12, v11);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return a5 & 1;
}

uint64_t sub_1BC42BC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC3A9C44(0, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC42BCF8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC384E68(0, &qword_1EF42F650, (void (*)(uint64_t))MEMORY[0x1E0D2B178]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s15HealthRecordsUI35MedicalRecordTimelineViewControllerC010collectionG0_33contextMenuConfigurationForItemAt5pointSo09UIContextkL0CSgSo012UICollectionG0C_10Foundation9IndexPathVSo7CGPointVtF_0(void *a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  __int128 v7[2];
  uint64_t v8;
  id v9;
  _QWORD v10[4];

  v2 = (void *)sub_1BC62A928();
  v3 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v2);

  if (!v3)
    return 0;
  v9 = v3;
  sub_1BC3658C0();
  sub_1BC35817C(0, &qword_1EF42F658);
  v4 = v3;
  if ((swift_dynamicCast() & 1) == 0)
  {
    v8 = 0;
    memset(v7, 0, sizeof(v7));

    sub_1BC3DF8C4((uint64_t)v7, &qword_1EF42F660, &qword_1EF42F658);
    return 0;
  }
  sub_1BC34E718(v7, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
  v5 = sub_1BC62B6A8();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v5;
}

unint64_t sub_1BC42BEB4()
{
  return 0xD000000000000017;
}

void sub_1BC42C000()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v1 = objc_msgSend(v0, sel_textLabel);
  if (v1)
  {
    v2 = v1;
    if (qword_1ED6A4888 != -1)
      swift_once();
    v3 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v4 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setText_, v4, 0xE000000000000000);

  }
  objc_msgSend(v0, sel_setAccessoryType_, 0);
  v5 = objc_msgSend(v0, sel_textLabel);
  if (v5)
  {
    v7 = v5;
    v6 = objc_msgSend(v0, sel_tintColor);
    objc_msgSend(v7, sel_setTextColor_, v6);

  }
}

id sub_1BC42C258()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AddAccountTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AddAccountTableViewCell()
{
  return objc_opt_self();
}

BOOL sub_1BC42C2A8(void *a1)
{
  id v1;
  id v2;
  char v3;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_externalID);
  sub_1BC62C680();

  sub_1BC62C680();
  v3 = sub_1BC62C7B8();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v3 & 1) == 0;
}

BOOL HKClinicalGateway.hasLogo.getter()
{
  void *v0;
  id v1;
  char v2;

  v1 = objc_msgSend(v0, sel_externalID);
  sub_1BC62C680();

  sub_1BC62C680();
  v2 = sub_1BC62C7B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v2 & 1) == 0;
}

uint64_t sub_1BC42C3C0(void *a1)
{
  id v1;
  char v2;

  v1 = a1;
  v2 = _sSo17HKClinicalGatewayC15HealthRecordsUIE29supportsSharingToProviderObjCSbvg_0();

  return v2 & 1;
}

uint64_t sub_1BC42C3F4(void *a1)
{
  id v1;
  char v2;

  v1 = a1;
  if (objc_msgSend(v1, sel_status) == (id)1)
    v2 = _sSo17HKClinicalGatewayC15HealthRecordsUIE29supportsSharingToProviderObjCSbvg_0();
  else
    v2 = 0;

  return v2 & 1;
}

uint64_t HKClinicalGateway.canEnableSharingToProvider.getter()
{
  void *v0;

  if (objc_msgSend(v0, sel_status) == (id)1)
    return _sSo17HKClinicalGatewayC15HealthRecordsUIE29supportsSharingToProviderObjCSbvg_0();
  else
    return 0;
}

double HKClinicalAccount.brandId.getter@<D0>(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  id v13;

  v3 = objc_msgSend(v1, sel_brand);
  if (v3)
  {
    v13 = v3;
    v4 = objc_msgSend(v13, sel_externalID);
    v5 = sub_1BC62C680();
    v7 = v6;

    v8 = objc_msgSend(v13, sel_batchID);
    v9 = sub_1BC62C680();
    v11 = v10;

    *a1 = v5;
    a1[1] = v7;
    a1[2] = v9;
    a1[3] = v11;

  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
  return result;
}

id sub_1BC42C554(void *a1)
{
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_gateway);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_hasLogo);

    v1 = v3;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id HKClinicalAccount.hasLogo.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_gateway);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_hasLogo);

  return v3;
}

BOOL sub_1BC42C618(void *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_provenance);
  v3 = objc_msgSend(v2, sel_gateway);

  if (v3)
  return v3 == 0;
}

BOOL HKClinicalAccount.isSourceType.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_provenance);
  v2 = objc_msgSend(v1, sel_gateway);

  if (v2)
  return v2 == 0;
}

id HKClinicalAccount.issuerIdentifier.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(v0, sel_provenance);
  v2 = objc_msgSend(v1, sel_signedClinicalDataIssuer);

  if (v2)
  {
    v3 = objc_msgSend(v2, sel_identifier);

    v2 = (id)sub_1BC62C680();
  }
  return v2;
}

BOOL sub_1BC42C788(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  _BOOL8 v10;
  uint64_t v12;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - v3;
  v5 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1;
  sub_1BC3EEE9C(v9, 0, 0, 0, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BC377E3C((uint64_t)v4, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    v10 = 0;
  }
  else
  {
    sub_1BC378168((uint64_t)v4, (uint64_t)v8);
    v10 = (*(_QWORD *)&v8[*(int *)(v5 + 20)] & 0xFFFFFFFFFFFFFFFDLL) == 0;
    sub_1BC377D8C((uint64_t)v8);
  }

  return v10;
}

BOOL HKClinicalAccount.needsLogin.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _BOOL8 v8;
  uint64_t v10;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - v2;
  v4 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3EEE9C(v0, 0, 0, 0, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BC377E3C((uint64_t)v3, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    return 0;
  }
  else
  {
    sub_1BC378168((uint64_t)v3, (uint64_t)v7);
    v8 = (*(_QWORD *)&v7[*(int *)(v4 + 20)] & 0xFFFFFFFFFFFFFFFDLL) == 0;
    sub_1BC377D8C((uint64_t)v7);
  }
  return v8;
}

BOOL sub_1BC42C9E8(void *a1)
{
  id v1;
  BOOL v2;

  v1 = a1;
  v2 = HKClinicalAccount.wantsGatewayUpgrade.getter();

  return v2;
}

BOOL HKClinicalAccount.wantsGatewayUpgrade.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _BOOL8 v8;
  void *v9;
  id v10;
  uint64_t v12;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - v2;
  v4 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3EEE9C(v0, 0, 0, 0, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BC377E3C((uint64_t)v3, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    return 0;
  }
  else
  {
    sub_1BC378168((uint64_t)v3, (uint64_t)v7);
    v9 = *(void **)&v7[*(int *)(v4 + 20)];
    v8 = (unint64_t)v9 > 3;
    if ((unint64_t)v9 < 4)
      v10 = 0;
    else
      v10 = v9;
    sub_1BC377D8C((uint64_t)v7);

  }
  return v8;
}

uint64_t HKClinicalAccount.summaryTileType.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - v4;
  v6 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3EEE9C(v1, 0, 0, 0, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1BC377E3C((uint64_t)v5, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
LABEL_5:
    v11 = sub_1BC62B918();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  sub_1BC378168((uint64_t)v5, (uint64_t)v9);
  v10 = *(char **)&v9[*(int *)(v6 + 20)];
  sub_1BC377DC8(v10);
  sub_1BC377D8C((uint64_t)v9);
  if ((unint64_t)v10 < 2)
  {
    v13 = (unsigned int *)MEMORY[0x1E0D2EDB8];
  }
  else
  {
    if ((unint64_t)(v10 - 2) < 2)
      goto LABEL_5;
    sub_1BC3781AC(v10);
    v13 = (unsigned int *)MEMORY[0x1E0D2EDC0];
  }
  v14 = *v13;
  v15 = sub_1BC62B918();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104))(a1, v14, v15);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
}

uint64_t sub_1BC42CD10(void *a1)
{
  id v1;
  unsigned int v3;

  v1 = a1;
  if (objc_msgSend(v1, sel_needsLogin))
  {

    return 1;
  }
  else
  {
    v3 = objc_msgSend(v1, sel_hasClinicalSharingScopes);

    return v3 ^ 1;
  }
}

uint64_t HKClinicalAccount.needsLoginToEnableClinicalSharing.getter()
{
  void *v0;

  if ((objc_msgSend(v0, sel_needsLogin) & 1) != 0)
    return 1;
  else
    return objc_msgSend(v0, sel_hasClinicalSharingScopes) ^ 1;
}

id sub_1BC42CDAC(void *a1, uint64_t a2)
{
  return sub_1BC42DAEC(a1, a2, (void (*)(void))HKClinicalAccount.displayableLastDownloadDate.getter);
}

uint64_t HKClinicalAccount.displayableLastDownloadDate.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v31;

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v31 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v31 - v9;
  v11 = sub_1BC62A760();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v31 - v16;
  v18 = objc_msgSend(v1, sel_lastFetchDate);
  if (v18)
  {
    v19 = v18;
    sub_1BC62A724();

    v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v20(v8, v15, v11);
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v21(v8, 0, 1, v11);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v22(v8, 1, v11) != 1)
    {
      v20(v10, v8, v11);
      v21(v10, 0, 1, v11);
      goto LABEL_9;
    }
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v21(v8, 1, 1, v11);
  }
  v23 = objc_msgSend(v1, sel_lastFullFetchDate);
  if (v23)
  {
    v24 = v23;
    sub_1BC62A724();

    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  v21(v5, v25, 1, v11);
  sub_1BC3EFC38((uint64_t)v5, (uint64_t)v10);
  sub_1BC377E3C((uint64_t)v8, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
LABEL_9:
  if (v22(v10, 1, v11) == 1)
  {
    sub_1BC377E3C((uint64_t)v10, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    return 9732322;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    objc_msgSend(v27, sel_setDateStyle_, 3);
    objc_msgSend(v27, sel_setTimeStyle_, 1);
    v28 = (void *)sub_1BC62A700();
    v29 = objc_msgSend(v27, sel_stringFromDate_, v28);

    v26 = sub_1BC62C680();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  return v26;
}

id sub_1BC42D0E4(void *a1, uint64_t a2)
{
  return sub_1BC42DAEC(a1, a2, (void (*)(void))HKClinicalAccount.displayableStatus.getter);
}

uint64_t HKClinicalAccount.displayableStatus.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  switch((unint64_t)objc_msgSend(v0, sel_state))
  {
    case 0uLL:
      if (qword_1ED6A4888 != -1)
        goto LABEL_18;
      break;
    case 1uLL:
      if (qword_1ED6A4888 != -1)
        goto LABEL_18;
      break;
    case 2uLL:
      if (qword_1ED6A4888 != -1)
        goto LABEL_18;
      break;
    case 3uLL:
      if (qword_1ED6A4888 != -1)
        goto LABEL_18;
      break;
    case 4uLL:
      if (qword_1ED6A4888 != -1)
        goto LABEL_18;
      break;
    case 5uLL:
      if (qword_1ED6A4888 != -1)
        goto LABEL_18;
      break;
    case 6uLL:
      if (qword_1ED6A4888 != -1)
        goto LABEL_18;
      break;
    default:
      if (qword_1ED6A4888 != -1)
LABEL_18:
        swift_once();
      break;
  }
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1BC42D494(void *a1)
{
  id v1;
  unsigned __int8 v2;

  v1 = a1;
  v2 = HKClinicalAccount.canEnableSharingToProvider.getter();

  return v2 & 1;
}

id HKClinicalAccount.canEnableSharingToProvider.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  id v4;

  result = objc_msgSend(v0, sel_gateway);
  if (result)
  {
    v2 = result;
    if (objc_msgSend(result, sel_canEnableSharingToProvider))
    {
      v3 = objc_msgSend(v0, sel_clinicalSharingStatus);
      v4 = objc_msgSend(v3, sel_userStatus);

      return (id)(v4 != (id)2);
    }
    else
    {

      return 0;
    }
  }
  return result;
}

uint64_t sub_1BC42D55C(void *a1)
{
  id v1;
  unsigned __int8 v2;

  v1 = a1;
  v2 = HKClinicalAccount.isSharingToProvider.getter();

  return v2 & 1;
}

id HKClinicalAccount.isSharingToProvider.getter()
{
  void *v0;
  void *v1;
  id result;
  void *v3;
  id v4;
  id v5;

  v1 = v0;
  result = objc_msgSend(v0, sel_gateway);
  if (result)
  {
    v3 = result;
    if ((_sSo17HKClinicalGatewayC15HealthRecordsUIE29supportsSharingToProviderObjCSbvg_0() & 1) != 0
      && objc_msgSend(v3, sel_status) == (id)1)
    {
      v4 = objc_msgSend(v1, sel_clinicalSharingStatus);
      v5 = objc_msgSend(v4, sel_userStatus);

      return (id)(v5 == (id)2);
    }
    else
    {

      return 0;
    }
  }
  return result;
}

id sub_1BC42D638(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = a1;
  HKClinicalAccount.displayableSharingSinceTitle.getter();
  v3 = v2;

  if (v3)
  {
    v4 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t HKClinicalAccount.displayableSharingSinceTitle.getter()
{
  void *v0;
  void *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  void (*v19)(char *, char *, uint64_t);
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  char *v32;
  char *v33;

  v1 = v0;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v32 - v4;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v2);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - v6;
  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v33 = (char *)&v32 - v13;
  v14 = objc_msgSend(v1, sel_clinicalSharingStatus);
  v15 = objc_msgSend(v14, sel_userStatus);

  v16 = 0;
  if (v15 != (id)2)
    return v16;
  v17 = objc_msgSend(v1, sel_clinicalSharingStatus);
  v18 = objc_msgSend(v17, sel_firstSharedDate);

  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_8;
  }
  sub_1BC62A724();

  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v19(v7, v12, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_8:
    sub_1BC377E3C((uint64_t)v7, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    return 0;
  }
  v19(v33, v7, v8);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v20, sel_setDateStyle_, 2);
  objc_msgSend(v20, sel_setTimeStyle_, 0);
  v21 = (void *)sub_1BC62A700();
  v22 = objc_msgSend(v20, sel_stringFromDate_, v21);

  v23 = sub_1BC62C680();
  v25 = v24;

  v26 = sub_1BC62A820();
  v27 = (uint64_t)v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v32, 1, 1, v26);
  if (qword_1ED6A3308 != -1)
    swift_once();
  v28 = (void *)qword_1ED6A32F0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v29 + 64) = sub_1BC3644C0();
  *(_QWORD *)(v29 + 32) = v23;
  *(_QWORD *)(v29 + 40) = v25;
  v30 = v28;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v16 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC377E3C(v27, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v33, v8);
  return v16;
}

id sub_1BC42DAE0(void *a1, uint64_t a2)
{
  return sub_1BC42DAEC(a1, a2, (void (*)(void))HKClinicalAccount.displayableLastSharedToProviderDate.getter);
}

id sub_1BC42DAEC(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t HKClinicalAccount.displayableLastSharedToProviderDate.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v20;

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - v3;
  v5 = sub_1BC62A760();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - v10;
  v12 = objc_msgSend(v1, sel_clinicalSharingStatus);
  v13 = objc_msgSend(v12, sel_lastSharedDate);

  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  sub_1BC62A724();

  v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v14(v4, v9, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_1BC377E3C((uint64_t)v4, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    return 9732322;
  }
  v14(v11, v4, v5);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v15, sel_setDateStyle_, 3);
  objc_msgSend(v15, sel_setTimeStyle_, 1);
  v16 = (void *)sub_1BC62A700();
  v17 = objc_msgSend(v15, sel_stringFromDate_, v16);

  v18 = sub_1BC62C680();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return v18;
}

uint64_t sub_1BC42DD98()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_clinicalSharingStatus);
  v2 = objc_msgSend(v1, sel_featureStatus);

  switch((unint64_t)v2)
  {
    case 1uLL:
      v3 = objc_msgSend(v0, (SEL)&selRef_scaleFactorForSizeToFit + 5);
      v4 = HKClinicalSharingStatus.displayableUserStatus.getter();
      goto LABEL_15;
    case 2uLL:
      if (qword_1ED6A4888 != -1)
        goto LABEL_16;
      goto LABEL_10;
    case 3uLL:
      if (qword_1ED6A4888 == -1)
        goto LABEL_10;
      goto LABEL_16;
    case 4uLL:
      if (qword_1ED6A4888 == -1)
        goto LABEL_10;
      goto LABEL_16;
    case 5uLL:
      if (qword_1ED6A3308 != -1)
        swift_once();
      v3 = (id)qword_1ED6A32F0;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    default:
      if (qword_1ED6A4888 == -1)
        goto LABEL_10;
LABEL_16:
      swift_once();
LABEL_10:
      v3 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
LABEL_14:
      v4 = sub_1BC62A4A8();
      swift_bridgeObjectRelease();
LABEL_15:

      return v4;
  }
}

uint64_t HKClinicalSharingStatus.displayableUserStatus.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_1BC62A760();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - v8;
  if (objc_msgSend(v1, sel_multiDeviceStatus) == (id)4)
  {
    if (qword_1ED6A3308 != -1)
LABEL_19:
      swift_once();
LABEL_3:
    v10 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
LABEL_11:
    v11 = sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    return v11;
  }
  else
  {
    switch((unint64_t)objc_msgSend(v1, sel_userStatus))
    {
      case 1uLL:
      case 3uLL:
        if (qword_1ED6A4888 == -1)
          goto LABEL_10;
        goto LABEL_21;
      case 2uLL:
        v13 = objc_msgSend(v1, sel_lastSharedDate);
        if (v13)
        {
          v14 = v13;
          sub_1BC62A724();

          (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v9, 0, 1, v2);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) != 1)
          {
            sub_1BC377E3C((uint64_t)v9, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
            if (qword_1ED6A3308 == -1)
              goto LABEL_18;
            goto LABEL_22;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
        }
        sub_1BC377E3C((uint64_t)v9, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
        if (qword_1ED6A3308 == -1)
          goto LABEL_18;
LABEL_22:
        swift_once();
LABEL_18:
        v15 = (id)qword_1ED6A32F0;
        swift_bridgeObjectRetain();
        v16 = sub_1BC62A4A8();
        swift_bridgeObjectRelease();

        result = v16;
        break;
      case 4uLL:
      case 5uLL:
        if (qword_1ED6A3308 == -1)
          goto LABEL_3;
        goto LABEL_19;
      default:
        if (qword_1ED6A4888 == -1)
          goto LABEL_10;
LABEL_21:
        swift_once();
LABEL_10:
        v10 = (id)qword_1ED6A5528;
        swift_bridgeObjectRetain();
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1BC42E560(void *a1)
{
  id v1;
  unsigned __int8 v2;

  v1 = a1;
  v2 = HKClinicalEphemeralAccount.hasClinicalSharingScopes.getter();

  return v2 & 1;
}

id HKClinicalEphemeralAccount.hasClinicalSharingScopes.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = objc_msgSend(v0, sel_authResponse);
  v2 = objc_msgSend(v1, sel_scope);

  if (v2)
  {
    sub_1BC62C680();

    v3 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend((id)objc_opt_self(), sel_scopeSetWithScopeString_, v3);

    v2 = objc_msgSend(v4, sel_hasClinicalSharingScopes);
  }
  return v2;
}

uint64_t localized(_:locale:source:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;
  uint64_t v10;

  result = sub_1BC62A4A8();
  if (*(_QWORD *)(a9 + 16))
  {
    v10 = sub_1BC62C6A4();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t String.localized(source:locale:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC62A4A8();
  if (*(_QWORD *)(a7 + 16))
  {
    v9 = sub_1BC62C6A4();
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t localized(_:locale:source:value:comment:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;
  uint64_t v10;

  result = sub_1BC62A4A8();
  if (*(_QWORD *)(a9 + 16))
  {
    v10 = sub_1BC62C6A4();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

id LocalizationSource.bundle.getter()
{
  id *v0;

  return *v0;
}

uint64_t LocalizationSource.table.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1BC42E844()
{
  if (qword_1ED6A4918 != -1)
    swift_once();
  qword_1ED6A5528 = qword_1ED6A5980;
  unk_1ED6A5530 = 0xD00000000000001BLL;
  qword_1ED6A5538 = 0x80000001BC658EA0;
  return (id)qword_1ED6A5980;
}

uint64_t static LocalizationSource.main.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (void *)qword_1ED6A5528;
  v3 = unk_1ED6A5530;
  v4 = qword_1ED6A5538;
  *a1 = qword_1ED6A5528;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42E910()
{
  if (qword_1ED6A4918 != -1)
    swift_once();
  qword_1EF42F698 = qword_1ED6A5980;
  unk_1EF42F6A0 = 0xD000000000000027;
  qword_1EF42F6A8 = 0x80000001BC658E10;
  return (id)qword_1ED6A5980;
}

uint64_t static LocalizationSource.stringsDict.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF428550 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F698;
  v3 = unk_1EF42F6A0;
  v4 = qword_1EF42F6A8;
  *a1 = qword_1EF42F698;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42E9DC()
{
  if (qword_1ED6A4918 != -1)
    swift_once();
  qword_1EF42F6B0 = qword_1ED6A5980;
  *(_QWORD *)algn_1EF42F6B8 = 0xD000000000000015;
  qword_1EF42F6C0 = 0x80000001BC658DF0;
  return (id)qword_1ED6A5980;
}

uint64_t static LocalizationSource.legal.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF428558 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F6B0;
  v3 = *(_QWORD *)algn_1EF42F6B8;
  v4 = qword_1EF42F6C0;
  *a1 = qword_1EF42F6B0;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42EAA8()
{
  if (qword_1EF428850 != -1)
    swift_once();
  qword_1EF42F6C8 = qword_1EF43A0B0;
  unk_1EF42F6D0 = 0xD00000000000001DLL;
  qword_1EF42F6D8 = 0x80000001BC658DD0;
  return (id)qword_1EF43A0B0;
}

uint64_t static LocalizationSource.legacy.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF428560 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F6C8;
  v3 = unk_1EF42F6D0;
  v4 = qword_1EF42F6D8;
  *a1 = qword_1EF42F6C8;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42EB74()
{
  if (qword_1ED6A4908 != -1)
    swift_once();
  qword_1EF42F6E0 = qword_1ED6A5978;
  *(_QWORD *)algn_1EF42F6E8 = 0xD000000000000014;
  qword_1EF42F6F0 = 0x80000001BC658EC0;
  return (id)qword_1ED6A5978;
}

uint64_t static LocalizationSource.healthUI.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF428568 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F6E0;
  v3 = *(_QWORD *)algn_1EF42F6E8;
  v4 = qword_1EF42F6F0;
  *a1 = qword_1EF42F6E0;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42EC40()
{
  if (qword_1ED6A4908 != -1)
    swift_once();
  qword_1ED6A5510 = qword_1ED6A5978;
  *(_QWORD *)algn_1ED6A5518 = 0xD00000000000002CLL;
  qword_1ED6A5520 = 0x80000001BC658E70;
  return (id)qword_1ED6A5978;
}

uint64_t static LocalizationSource.healthRecordsHealthUI.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1ED6A4880 != -1)
    swift_once();
  v2 = (void *)qword_1ED6A5510;
  v3 = *(_QWORD *)algn_1ED6A5518;
  v4 = qword_1ED6A5520;
  *a1 = qword_1ED6A5510;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42ED0C()
{
  if (qword_1ED6A4918 != -1)
    swift_once();
  qword_1ED6A32F0 = qword_1ED6A5980;
  *(_QWORD *)algn_1ED6A32F8 = 0xD000000000000020;
  qword_1ED6A3300 = 0x80000001BC658E40;
  return (id)qword_1ED6A5980;
}

uint64_t static LocalizationSource.healthRecordsOsloHealthUI.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v2 = (void *)qword_1ED6A32F0;
  v3 = *(_QWORD *)algn_1ED6A32F8;
  v4 = qword_1ED6A3300;
  *a1 = qword_1ED6A32F0;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42EDD8()
{
  if (qword_1ED6A4918 != -1)
    swift_once();
  qword_1EF42F6F8 = qword_1ED6A5980;
  unk_1EF42F700 = 0xD00000000000002CLL;
  qword_1EF42F708 = 0x80000001BC658DA0;
  return (id)qword_1ED6A5980;
}

uint64_t static LocalizationSource.healthRecordsOsloStringsDict.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF428570 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F6F8;
  v3 = unk_1EF42F700;
  v4 = qword_1EF42F708;
  *a1 = qword_1EF42F6F8;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42EEA4()
{
  if (qword_1ED6A4918 != -1)
    swift_once();
  qword_1EF42F710 = qword_1ED6A5980;
  *(_QWORD *)algn_1EF42F718 = 0xD000000000000030;
  qword_1EF42F720 = 0x80000001BC658D60;
  return (id)qword_1ED6A5980;
}

uint64_t static LocalizationSource.stringsDictPasadena.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF428578 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F710;
  v3 = *(_QWORD *)algn_1EF42F718;
  v4 = qword_1EF42F720;
  *a1 = qword_1EF42F710;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42EF70()
{
  if (qword_1ED6A4908 != -1)
    swift_once();
  qword_1EF42F728 = qword_1ED6A5978;
  unk_1EF42F730 = 0xD00000000000001DLL;
  qword_1EF42F738 = 0x80000001BC658D40;
  return (id)qword_1ED6A5978;
}

uint64_t static LocalizationSource.healthUIPasadena.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF428580 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F728;
  v3 = unk_1EF42F730;
  v4 = qword_1EF42F738;
  *a1 = qword_1EF42F728;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42F03C()
{
  if (qword_1ED6A4918 != -1)
    swift_once();
  qword_1EF42F740 = qword_1ED6A5980;
  *(_QWORD *)algn_1EF42F748 = 0xD000000000000024;
  qword_1EF42F750 = 0x80000001BC658D10;
  return (id)qword_1ED6A5980;
}

uint64_t static LocalizationSource.healthRecordsUIPasadena.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF428588 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F740;
  v3 = *(_QWORD *)algn_1EF42F748;
  v4 = qword_1EF42F750;
  *a1 = qword_1EF42F740;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42F108()
{
  if (qword_1ED6A4918 != -1)
    swift_once();
  qword_1EF42F758 = qword_1ED6A5980;
  unk_1EF42F760 = 0xD000000000000036;
  qword_1EF42F768 = 0x80000001BC658CD0;
  return (id)qword_1ED6A5980;
}

uint64_t static LocalizationSource.stringsDictClinicalNotes.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF428590 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F758;
  v3 = unk_1EF42F760;
  v4 = qword_1EF42F768;
  *a1 = qword_1EF42F758;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42F1D4()
{
  if (qword_1ED6A4918 != -1)
    swift_once();
  qword_1EF42F770 = qword_1ED6A5980;
  *(_QWORD *)algn_1EF42F778 = 0xD00000000000002ALL;
  qword_1EF42F780 = 0x80000001BC658CA0;
  return (id)qword_1ED6A5980;
}

uint64_t static LocalizationSource.healthRecordsClinicalNotesHealthUI.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF428598 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F770;
  v3 = *(_QWORD *)algn_1EF42F778;
  v4 = qword_1EF42F780;
  *a1 = qword_1EF42F770;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42F2A0()
{
  if (qword_1ED6A4908 != -1)
    swift_once();
  qword_1EF42F788 = qword_1ED6A5978;
  qword_1EF42F790 = 0xD00000000000001CLL;
  qword_1EF42F798 = 0x80000001BC658C80;
  return (id)qword_1ED6A5978;
}

uint64_t static LocalizationSource.healthRecordsAPI.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF4285A0 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F788;
  v3 = qword_1EF42F790;
  v4 = qword_1EF42F798;
  *a1 = qword_1EF42F788;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1BC42F36C()
{
  if (qword_1ED6A4908 != -1)
    swift_once();
  qword_1EF42F7A0 = qword_1ED6A5978;
  qword_1EF42F7A8 = 0xD000000000000028;
  qword_1EF42F7B0 = 0x80000001BC658C50;
  return (id)qword_1ED6A5978;
}

uint64_t static LocalizationSource.healthRecordsResearchStudyAPI.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (qword_1EF4285A8 != -1)
    swift_once();
  v2 = (void *)qword_1EF42F7A0;
  v3 = qword_1EF42F7A8;
  v4 = qword_1EF42F7B0;
  *a1 = qword_1EF42F7A0;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC42F438(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  v9 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  if ((a3 & 1) != 0)
  {
    if (qword_1EF4285A0 != -1)
      swift_once();
    v10 = &qword_1EF42F788;
  }
  else
  {
    if (qword_1EF4285A8 != -1)
      swift_once();
    v10 = &qword_1EF42F7A0;
  }
  v11 = (id)*v10;
  swift_bridgeObjectRetain();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC639590;
  sub_1BC357158(0, &qword_1ED6A36A8, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = sub_1BC4302A8();
  *(_QWORD *)(v12 + 32) = a4;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v14 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v8);
  return v14;
}

uint64_t LocalizationSource.localized(_:locale:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  uint64_t v10;

  result = sub_1BC62A4A8();
  if (*(_QWORD *)(a8 + 16))
  {
    v10 = sub_1BC62C6A4();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

id _HRLocalizedString()
{
  id v0;
  void *v1;

  sub_1BC62C680();
  if (qword_1ED6A4888 != -1)
    swift_once();
  v0 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v1 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedStringForObjC(_:)(Swift::String a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  v4 = v3;
  swift_bridgeObjectRelease();

  v5 = v2;
  v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

id _HRLocalizedLegalString()
{
  id v0;
  void *v1;

  sub_1BC62C680();
  if (qword_1EF428558 != -1)
    swift_once();
  v0 = (id)qword_1EF42F6B0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v1 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedLegalStringForObjC(_:)(Swift::String a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  if (qword_1EF428558 != -1)
    swift_once();
  v1 = (id)qword_1EF42F6B0;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  v4 = v3;
  swift_bridgeObjectRelease();

  v5 = v2;
  v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

id _HBXLocalizedString()
{
  id v0;
  void *v1;

  sub_1BC62C680();
  if (qword_1EF428560 != -1)
    swift_once();
  v0 = (id)qword_1EF42F6C8;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v1 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedHBXStringForObjC(_:)(Swift::String a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  if (qword_1EF428560 != -1)
    swift_once();
  v1 = (id)qword_1EF42F6C8;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  v4 = v3;
  swift_bridgeObjectRelease();

  v5 = v2;
  v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

id _HROsloLocalizedString()
{
  id v0;
  void *v1;

  sub_1BC62C680();
  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v1 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedOsloStringForObjC(_:)(Swift::String a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v1 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  v4 = v3;
  swift_bridgeObjectRelease();

  v5 = v2;
  v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

id _HRPasadenaLocalizedString()
{
  id v0;
  void *v1;

  sub_1BC62C680();
  if (qword_1EF428588 != -1)
    swift_once();
  v0 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v1 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedPasadenaStringForObjC(_:)(Swift::String a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  if (qword_1EF428588 != -1)
    swift_once();
  v1 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  v4 = v3;
  swift_bridgeObjectRelease();

  v5 = v2;
  v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

id _HRClinicalNotesLocalizedString()
{
  id v0;
  void *v1;

  sub_1BC62C680();
  if (qword_1EF428598 != -1)
    swift_once();
  v0 = (id)qword_1EF42F770;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v1 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedClinicalNotesStringForObjC(_:)(Swift::String a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  if (qword_1EF428598 != -1)
    swift_once();
  v1 = (id)qword_1EF42F770;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  v4 = v3;
  swift_bridgeObjectRelease();

  v5 = v2;
  v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t destroy for GatewayIdentifiedClinicalAccount(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s15HealthRecordsUI18LocalizationSourceVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocalizationSource(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LocalizationSource(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountStateChange(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountStateChange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationSource()
{
  return &type metadata for LocalizationSource;
}

unint64_t sub_1BC4302A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A36B0;
  if (!qword_1ED6A36B0)
  {
    sub_1BC357158(255, &qword_1ED6A36A8, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A36B0);
  }
  return result;
}

uint64_t type metadata accessor for DeleteAccountSourceDataSource(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42F7C0);
}

uint64_t sub_1BC43031C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC430364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_1BC62B3C0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v14 - v5;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = *(_QWORD *)(Strong + qword_1EF42F7B8);
    v9 = *(_QWORD *)(Strong + qword_1EF42F7B8 + 8);
    if (v9)
    {
      if (v9 == 1 || v9 == 2)
      {
        sub_1BC62B36C();
LABEL_10:
        v10 = sub_1BC62B3B4();
        swift_release();
        goto LABEL_11;
      }
      swift_bridgeObjectRetain();
      sub_1BC62B36C();
      sub_1BC62B324();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
      v11 = v8;
      v12 = v9;
    }
    else
    {
      sub_1BC62B36C();
      v11 = v8;
      v12 = 0;
    }
    sub_1BC433554(v11, v12);
    goto LABEL_10;
  }
  sub_1BC62B36C();
  v10 = sub_1BC62B3B4();
  v4 = v6;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v10;
}

uint64_t sub_1BC4304E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  _QWORD v19[2];

  v7 = sub_1BC62A7B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC62C680() == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
      goto LABEL_9;
  }
  if (*(_QWORD *)(v3 + qword_1EF42F7B8 + 8) < 3uLL)
  {
LABEL_9:
    v14 = sub_1BC62AE20();
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
    a3[3] = v14;
    a3[4] = sub_1BC347F0C(&qword_1EF42A050, v15, MEMORY[0x1E0D2AB20]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1BC62AE14();
  }
  v19[0] = 0x74497265746F6F46;
  v19[1] = 0xEB000000005F6D65;
  swift_bridgeObjectRetain();
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v17 = sub_1BC62B624();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
  a3[3] = v17;
  a3[4] = sub_1BC347F0C(&qword_1EF42A058, v18, MEMORY[0x1E0D2B6A8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC62B618();
}

void sub_1BC4306C4()
{
  sub_1BC4306F4();
}

void sub_1BC4306DC()
{
  sub_1BC4306F4();
}

void sub_1BC4306F4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC43071C()
{
  uint64_t v0;

  return sub_1BC433554(*(_QWORD *)(v0 + qword_1EF42F7B8), *(_QWORD *)(v0 + qword_1EF42F7B8 + 8));
}

uint64_t sub_1BC430730()
{
  uint64_t v0;

  v0 = sub_1BC62B69C();
  sub_1BC433554(*(_QWORD *)(v0 + qword_1EF42F7B8), *(_QWORD *)(v0 + qword_1EF42F7B8 + 8));
  return swift_deallocClassInstance();
}

uint64_t sub_1BC430770()
{
  return type metadata accessor for DeleteAccountSourceDataSource(0);
}

uint64_t type metadata accessor for DeleteAccountDataSource(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42F820);
}

uint64_t sub_1BC43078C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC4307E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BC4304E0(a1, a2, a3);
}

uint64_t sub_1BC430800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unsigned int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BC4334E0();
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(v0 + qword_1EF42F818);
  if (*(_QWORD *)(v0 + qword_1EF42F818 + 8) == 1)
    v6 = (unsigned int *)MEMORY[0x1E0D2ACF8];
  else
    v6 = (unsigned int *)MEMORY[0x1E0D2AD00];
  (*(void (**)(char *, _QWORD))(v2 + 104))(v4, *v6);
  sub_1BC62AF88();
  v7 = *v5;
  v8 = v5[1];
  v9 = (uint64_t *)(*(_QWORD *)(v0 + qword_1EF42F810) + qword_1EF42F7B8);
  v10 = *v9;
  v11 = v9[1];
  *v9 = v7;
  v9[1] = v8;
  sub_1BC43353C(v7, v8);
  sub_1BC433554(v10, v11);
  swift_allocObject();
  swift_weakInit();
  return sub_1BC62B684();
}

uint64_t sub_1BC430904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v5 = sub_1BC62B3C0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v14 - v10;
  if (!a4 || a4 == 2 || a4 == 1)
  {
    sub_1BC62B36C();
  }
  else
  {
    sub_1BC62B36C();
    sub_1BC62B324();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  v12 = sub_1BC62B3B4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return v12;
}

void sub_1BC4309F4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC430A20()
{
  uint64_t v0;

  swift_release();
  return sub_1BC433554(*(_QWORD *)(v0 + qword_1EF42F818), *(_QWORD *)(v0 + qword_1EF42F818 + 8));
}

uint64_t sub_1BC430A50()
{
  uint64_t v0;

  v0 = sub_1BC62AFC4();
  swift_release();
  sub_1BC433554(*(_QWORD *)(v0 + qword_1EF42F818), *(_QWORD *)(v0 + qword_1EF42F818 + 8));
  return swift_deallocClassInstance();
}

uint64_t sub_1BC430AA0()
{
  return type metadata accessor for DeleteAccountDataSource(0);
}

void sub_1BC430AA8()
{
  uint64_t v0;

}

uint64_t sub_1BC430AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  v2 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1BC359FDC(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC430B84()
{
  return type metadata accessor for DeleteAccountItem(0);
}

uint64_t type metadata accessor for DeleteAccountItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF42F8A0);
}

uint64_t sub_1BC430BA0()
{
  return swift_updateClassMetadata2();
}

unint64_t destroy for DeleteAccountScenario(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if ((v2 + 1) <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s15HealthRecordsUI21DeleteAccountScenarioOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 8);
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for DeleteAccountScenario(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;

  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = a1[1];
  v6 = v5 + 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v4 = a2[1];
  v7 = v4 + 1;
  if (v6 > 1)
  {
    if (v7 <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DeleteAccountScenario(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if ((v5 + 1) > 1)
    goto LABEL_9;
  v6 = *(_QWORD *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(a2 + 8);
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeleteAccountScenario(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 3)
    return (v3 - 2);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DeleteAccountScenario(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t sub_1BC430E3C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1BC430E5C(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    result[1] = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteAccountScenario()
{
  return &type metadata for DeleteAccountScenario;
}

uint64_t sub_1BC430E9C(void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v3 = v2;
  v6 = *v2;
  swift_getObjectType();
  v7 = swift_conformsToProtocol2();
  if (v7)
    v8 = v7;
  else
    v8 = 0;
  if (v7)
    v9 = a2;
  else
    v9 = 0;
  if (v9)
    v10 = a2;
  else
    v8 = 0;
  *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = v8;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  objc_msgSend(a1, sel_setUserInteractionEnabled_, 0);
  v11 = *(void **)((char *)v3 + OBJC_IVAR____TtC15HealthRecordsUI17DeleteAccountItem_account);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a1;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v11;
  v13[3] = v3;
  v13[4] = a2;
  v13[5] = a1;
  v13[6] = sub_1BC4324BC;
  v13[7] = v12;
  v13[8] = v6;
  v14 = a2;
  v15 = a1;
  v16 = v14;
  v17 = v15;
  v18 = v11;
  swift_retain();
  swift_retain();
  sub_1BC5CF1CC((uint64_t)sub_1BC432544, (uint64_t)v13);
  swift_release();
  return swift_release();
}

uint64_t sub_1BC430FF4(uint64_t a1, int a2, void *a3, void *a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  uint64_t (*v58)(uint64_t);
  _BYTE *v59;
  _BYTE v61[12];
  int v62;
  uint64_t v63;
  os_log_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  _QWORD aBlock[7];

  v73 = a8;
  v74 = a5;
  v75 = a6;
  v72 = a2;
  v71 = a1;
  v76 = a9;
  v77 = a7;
  v12 = sub_1BC62C47C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v80 = &v61[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_1BC62C4AC();
  v78 = *(_QWORD *)(v15 - 8);
  v79 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = &v61[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_1BC62A7B4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = &v61[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = sub_1BC62BB34();
  v23 = MEMORY[0x1E0C80A78](v22);
  v26 = &v61[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a3)
  {
    v67 = v24;
    v68 = v23;
    v70 = v13;
    v27 = a3;
    sub_1BC62BAF8();
    v28 = a3;
    v69 = a4;
    v29 = a4;
    v30 = a3;
    v31 = v29;
    v32 = sub_1BC62BB28();
    v33 = sub_1BC62CAC4();
    v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      v64 = v32;
      v35 = swift_slowAlloc();
      v66 = v12;
      v36 = v35;
      v63 = swift_slowAlloc();
      v81 = v63;
      aBlock[0] = a10;
      *(_DWORD *)v36 = 136315650;
      v62 = v34;
      swift_getMetatypeMetadata();
      v37 = sub_1BC62C6E0();
      v65 = v17;
      aBlock[0] = sub_1BC4991F0(v37, v38, &v81);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      v39 = objc_msgSend(v31, sel_identifier, v36 + 14);
      sub_1BC62A79C();

      sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v40 = sub_1BC62D52C();
      v42 = v41;
      (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v21, v18);
      aBlock[0] = sub_1BC4991F0(v40, v42, &v81);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 22) = 2080;
      aBlock[0] = a3;
      v43 = a3;
      sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
      v44 = sub_1BC62C6E0();
      aBlock[0] = sub_1BC4991F0(v44, v45, &v81);
      v17 = v65;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      v46 = v64;
      _os_log_impl(&dword_1BC30A000, v64, (os_log_type_t)v62, "%s failed to count number of Wallet cards for account %s: %s", (uint8_t *)v36, 0x20u);
      v47 = v63;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v47, -1, -1);
      v48 = v36;
      v12 = v66;
      MEMORY[0x1BCCF36A8](v48, -1, -1);

    }
    else
    {

    }
    (*(void (**)(_BYTE *, uint64_t))(v67 + 8))(v26, v68);
    a4 = v69;
    v13 = v70;
  }
  sub_1BC35A280();
  v49 = (void *)sub_1BC62CC74();
  v50 = swift_allocObject();
  v51 = v75;
  *(_QWORD *)(v50 + 16) = v74;
  *(_QWORD *)(v50 + 24) = a4;
  *(_QWORD *)(v50 + 32) = v71;
  *(_BYTE *)(v50 + 40) = v72 & 1;
  v53 = v76;
  v52 = v77;
  *(_QWORD *)(v50 + 48) = v51;
  *(_QWORD *)(v50 + 56) = v52;
  *(_QWORD *)(v50 + 64) = v73;
  *(_QWORD *)(v50 + 72) = v53;
  aBlock[4] = sub_1BC4325BC;
  aBlock[5] = v50;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_23;
  v54 = _Block_copy(aBlock);
  v55 = a4;
  swift_retain();
  v56 = v51;
  v57 = v52;
  swift_retain();
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v58 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  v59 = v80;
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v17, v59, v54);
  _Block_release(v54);

  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v59, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v78 + 8))(v17, v79);
}

void sub_1BC4315C8(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v11[6];

  v3 = objc_msgSend(a1, sel_view);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_window);

    if (v5)
    {
      objc_msgSend(v5, sel_setUserInteractionEnabled_, 0);

    }
    v6 = objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) + 16), sel_healthStore);
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB63F0]), sel_initWithHealthStore_, v6);

    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    *(_QWORD *)(v8 + 24) = v1;
    v11[4] = sub_1BC433420;
    v11[5] = v8;
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 1107296256;
    v11[2] = sub_1BC431F50;
    v11[3] = &block_descriptor_22;
    v9 = _Block_copy(v11);
    v10 = a1;
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_fetchCloudSyncStatusWithCompletion_, v9);
    _Block_release(v9);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC431738(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v10 = sub_1BC62C47C();
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62C4AC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35A280();
  v17 = (void *)sub_1BC62CC74();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a6;
  *(_BYTE *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a7;
  aBlock[4] = sub_1BC433454;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_28_0;
  v19 = _Block_copy(aBlock);
  v20 = a6;
  swift_retain();
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v16, v12, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

void sub_1BC43194C(void *a1, char a2, uint64_t a3)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;

  v6 = objc_msgSend(a1, sel_view);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_window);

    if (v8)
    {
      objc_msgSend(v8, sel_setUserInteractionEnabled_, 1);

    }
    if ((a2 & 1) != 0)
    {
      sub_1BC431AFC(a1);
    }
    else
    {
      v9 = a3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate;
      v10 = MEMORY[0x1BCCF37A4](a3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
      v11 = *(_QWORD *)(v9 + 8);
      v12 = a3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v10;
      *(_QWORD *)(v13 + 24) = v11;
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v10;
      *(_QWORD *)(v14 + 24) = v11;
      v15 = (_QWORD *)swift_allocObject();
      v15[2] = v10;
      v15[3] = v11;
      v15[4] = a1;
      swift_unknownObjectRetain_n();
      v16 = a1;
      sub_1BC5C70E8(v12, 0, (uint64_t)sub_1BC433488, v13, (uint64_t)sub_1BC433490, v14, (uint64_t)sub_1BC43349C, (uint64_t)v15);
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC431AFC(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  unsigned int v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v25;
  _QWORD aBlock[6];

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v3 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_sharedBehavior, 0xE000000000000000);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_isiPad);

    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v10 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, v7);

    v11 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v1;
    *(_QWORD *)(v12 + 24) = a1;
    swift_retain();
    v25 = a1;
    v13 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1BC4334D4;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39B5A0;
    aBlock[3] = &block_descriptor_43_0;
    v14 = _Block_copy(aBlock);
    swift_release();
    v15 = (void *)objc_opt_self();
    v16 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v13, 2, v14, 0xE000000000000000);
    _Block_release(v14);

    objc_msgSend(v10, sel_addAction_, v16);
    v17 = objc_msgSend(v4, sel_sharedBehavior);
    if (v17)
    {
      v18 = v17;
      v19 = objc_msgSend(v17, sel_isiPad);

      v20 = v19 ^ 1;
      v21 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v22 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v23 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v22, v20, 0, 0xE000000000000000);

      objc_msgSend(v10, sel_addAction_, v23);
      objc_msgSend(v25, sel_presentViewController_animated_completion_, v10, 1, 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1BC431F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t, char *, char *, uint64_t, void *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v25;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v25 - v16;
  v18 = *(void (**)(uint64_t, char *, char *, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC62A724();
    v19 = sub_1BC62A760();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 0, 1, v19);
  }
  else
  {
    v20 = sub_1BC62A760();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
  }
  if (a4)
  {
    sub_1BC62A724();
    v21 = sub_1BC62A760();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v15, 0, 1, v21);
  }
  else
  {
    v22 = sub_1BC62A760();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v15, 1, 1, v22);
  }
  swift_retain();
  v23 = a6;
  v18(a2, v17, v15, a5, a6);
  swift_release();

  sub_1BC36D71C((uint64_t)v15);
  return sub_1BC36D71C((uint64_t)v17);
}

void sub_1BC432100(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  id v15;
  uint64_t v16;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  if (objc_msgSend(a2, sel_isSharingToProvider)
    && (v10 = objc_msgSend(a2, sel_clinicalSharingStatus),
        v11 = objc_msgSend(v10, sel_multiDeviceStatus),
        v10,
        v11 == (id)2)
    && objc_msgSend(a2, sel_needsRelogin))
  {
    v12 = sub_1BC62C95C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a3;
    v13[5] = a2;
    v13[6] = a4;
    swift_retain();
    v14 = a2;
    v15 = a4;
    sub_1BC5C2784((uint64_t)v9, (uint64_t)&unk_1EF42F998, (uint64_t)v13);
    swift_release();
  }
  else
  {
    sub_1BC4315C8(a4);
  }
}

uint64_t sub_1BC432260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1BC43227C()
{
  _QWORD *v0;

  v0[5] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager);
  sub_1BC62C944();
  v0[6] = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC4322FC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 24);
  v1 = *(void **)(v0 + 32);
  swift_release();
  sub_1BC5C4784(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC432344(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;

  v5 = a2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate;
  v6 = MEMORY[0x1BCCF37A4](a2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  v7 = *(_QWORD *)(v5 + 8);
  v8 = a2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v7;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v6;
  *(_QWORD *)(v10 + 24) = v7;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = a3;
  swift_unknownObjectRetain_n();
  v12 = a3;
  sub_1BC5C70E8(v8, 0, (uint64_t)sub_1BC433598, v9, (uint64_t)sub_1BC43359C, v10, (uint64_t)sub_1BC4335CC, (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC432470(void *a1, void *a2)
{
  return sub_1BC430E9C(a1, a2);
}

uint64_t sub_1BC432490()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC4324BC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 24);
  objc_msgSend(*(id *)(v1 + 16), sel_presentViewController_animated_completion_, a1, 1, 0);
  return objc_msgSend(v2, sel_setUserInteractionEnabled_, 1);
}

uint64_t sub_1BC432500()
{
  id *v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC432544(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;

  return sub_1BC430FF4(a1, a2 & 1, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64));
}

uint64_t sub_1BC432578()
{
  id *v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1BC4325BC()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;
  void *v3;
  id v4;

  v1 = *(void (**)(void))(v0 + 64);
  if (*(_BYTE *)(v0 + 40))
    v2 = 0;
  else
    v2 = *(_QWORD *)(v0 + 32);
  sub_1BC4328E0(*(void **)(v0 + 24), v2, *(void **)(v0 + 48));
  v4 = v3;
  v1();

}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t sub_1BC432630(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t *v17;
  uint64_t v19;

  v5 = sub_1BC62A7B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17DeleteAccountItem_account) = a1;
  v9 = a1;
  if (objc_msgSend(v9, sel_isSourceType))
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
  }
  else if (qword_1ED6A4888 != -1)
  {
    swift_once();
  }
  v10 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v11 = sub_1BC62A4A8();
  v13 = v12;
  swift_bridgeObjectRelease();

  v14 = objc_msgSend(v9, sel_identifier);
  sub_1BC62A79C();

  v15 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
  v16 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID, v8, v5);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) = a2;
  v17 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelText);
  *v17 = v11;
  v17[1] = v13;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor) = v15;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont) = v16;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) = 0;
  return v2;
}

void sub_1BC4328E0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint32_t *v4;
  uint64_t v5;
  uint64_t v9;
  uint32_t *p_ivar_base_size;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  unsigned int v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  unsigned int v52;
  void *v53;
  _QWORD *v54;
  void *v55;
  id v56;
  id v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  uint64_t v63;
  id v64;
  void *v65;
  id v66;
  uint64_t v67;
  void *v68;
  _QWORD aBlock[6];
  uint64_t v70;
  uint64_t v71;

  v5 = v3;
  v9 = sub_1BC62C4D0();
  p_ivar_base_size = *(uint32_t **)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC35A280();
  *v12 = sub_1BC62CC74();
  (*((void (**)(uint64_t *, _QWORD, uint64_t))p_ivar_base_size + 13))(v12, *MEMORY[0x1E0DEF740], v9);
  v13 = sub_1BC62C4F4();
  (*((void (**)(uint64_t *, uint64_t))p_ivar_base_size + 1))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  v68 = a3;
  v14 = objc_msgSend(a1, sel_clinicalSharingStatus);
  v15 = objc_msgSend(v14, sel_userStatus);

  v16 = &unk_1ED6A4000;
  if (v15 == (id)2)
  {
    if (a2 < 1)
    {
      v26 = (void *)objc_opt_self();
      v27 = (void *)sub_1BC62C650();
      v28 = objc_msgSend(v26, sel_modelSpecificLocalizedStringKeyForKey_, v27);

      if (!v28)
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      sub_1BC62C680();

      if (qword_1ED6A3308 != -1)
        swift_once();
      v29 = (id)qword_1ED6A32F0;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1BC3B30F0();
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1BC639590;
      v31 = objc_msgSend(a1, sel_title);
      v32 = sub_1BC62C680();
      v34 = v33;

      *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v30 + 64) = sub_1BC3644C0();
      *(_QWORD *)(v30 + 32) = v32;
      *(_QWORD *)(v30 + 40) = v34;
      v35 = sub_1BC62C6B0();
      v25 = v36;
      swift_bridgeObjectRelease();
      v70 = v35;
    }
    else
    {
      if (qword_1ED6A3308 != -1)
        swift_once();
      v17 = (id)qword_1ED6A32F0;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      sub_1BC3B30F0();
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1BC639590;
      v19 = objc_msgSend(a1, sel_title);
      v20 = sub_1BC62C680();
      v22 = v21;

      *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v18 + 64) = sub_1BC3644C0();
      *(_QWORD *)(v18 + 32) = v20;
      *(_QWORD *)(v18 + 40) = v22;
      v23 = sub_1BC62C6B0();
      v25 = v24;
      swift_bridgeObjectRelease();
      v70 = v23;
      v16 = (_QWORD *)&unk_1ED6A4000;
    }
LABEL_23:
    v71 = v25;
    if (objc_msgSend(a1, sel_state) == (id)5)
    {
      sub_1BC62C764();
      if (v16[273] != -1)
        swift_once();
      v45 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      sub_1BC62C764();
      swift_bridgeObjectRelease();
    }
    v46 = objc_msgSend(a1, sel_isSourceType);
    v47 = v16[273];
    if (v46)
    {
      if (v47 != -1)
        swift_once();
    }
    else if (v47 != -1)
    {
      swift_once();
    }
    v48 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v49 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v50 = objc_msgSend(v49, sel_sharedBehavior);
    if (v50)
    {
      v51 = v50;
      v52 = objc_msgSend(v50, sel_isiPad);

      v53 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v13 = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, 0, v53, v52);

      v54 = (_QWORD *)swift_allocObject();
      v54[2] = a1;
      v54[3] = v5;
      v55 = v68;
      v54[4] = v68;
      v56 = a1;
      swift_retain();
      v57 = v55;
      v58 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_1BC433344;
      aBlock[5] = v54;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC39B5A0;
      aBlock[3] = &block_descriptor_12_1;
      v59 = _Block_copy(aBlock);
      swift_release();
      a3 = (void *)objc_opt_self();
      p_ivar_base_size = &HRConceptTitleTableHeaderView__metaData.ivar_base_size;
      v60 = objc_msgSend(a3, sel_actionWithTitle_style_handler_, v58, 2, v59);
      _Block_release(v59);

      v4 = &HRConceptTitleTableHeaderView__metaData.ivar_base_size;
      objc_msgSend((id)v13, sel_addAction_, v60);

      v61 = objc_msgSend(v49, sel_sharedBehavior);
      if (v61)
      {
        v62 = v61;
        swift_bridgeObjectRelease();
        LODWORD(a1) = objc_msgSend(v62, sel_isiPad);

        if (qword_1ED6A4888 == -1)
        {
LABEL_36:
          v63 = a1 ^ 1;
          v64 = (id)qword_1ED6A5528;
          swift_bridgeObjectRetain();
          sub_1BC62A4A8();
          swift_bridgeObjectRelease();

          v65 = (void *)sub_1BC62C650();
          swift_bridgeObjectRelease();
          v66 = objc_msgSend(a3, *((SEL *)p_ivar_base_size + 349), v65, v63, 0);

          objc_msgSend((id)v13, *((SEL *)v4 + 353), v66);
          return;
        }
LABEL_38:
        swift_once();
        goto LABEL_36;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_41;
  }
  if (objc_msgSend(a1, sel_isSourceType))
  {
    if (a2 > 0)
      goto LABEL_20;
    v37 = (void *)objc_opt_self();
    v38 = (void *)sub_1BC62C650();
    v39 = objc_msgSend(v37, sel_modelSpecificLocalizedStringKeyForKey_, v38);

    if (v39)
    {
LABEL_19:
      sub_1BC62C680();

LABEL_20:
      if (qword_1ED6A4888 != -1)
        swift_once();
      v42 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      v43 = sub_1BC62A4A8();
      v25 = v44;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v70 = v43;
      goto LABEL_23;
    }
    __break(1u);
  }
  else if (a2 > 0)
  {
    goto LABEL_20;
  }
  v40 = (void *)objc_opt_self();
  v41 = (void *)sub_1BC62C650();
  v39 = objc_msgSend(v40, sel_modelSpecificLocalizedStringKeyForKey_, v41);

  if (v39)
    goto LABEL_19;
LABEL_42:
  __break(1u);
}

uint64_t sub_1BC433310()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC433344(uint64_t a1)
{
  uint64_t v1;

  sub_1BC432100(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1BC433350()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC43338C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1BC377F18;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

uint64_t sub_1BC4333F4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC433420(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1BC431738(a1, a2, a3, a4, a5, *(void **)(v5 + 16), *(_QWORD *)(v5 + 24));
}

uint64_t sub_1BC433428()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC433454()
{
  uint64_t v0;

  sub_1BC43194C(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BC433464()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC433488()
{
  uint64_t v0;

  return sub_1BC6021A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC433490()
{
  uint64_t v0;

  return sub_1BC6022C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC43349C(char a1, void *a2)
{
  uint64_t v2;

  return sub_1BC6025E4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1BC4334A8()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC4334D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC432344(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1BC4334E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42F9A0)
  {
    type metadata accessor for DeleteAccountSourceDataSource(255);
    v0 = sub_1BC62AF70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42F9A0);
  }
}

uint64_t sub_1BC43353C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BC433554(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BC43356C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC433590()
{
  return sub_1BC430364();
}

uint64_t sub_1BC4335D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[6];
  uint64_t v22;

  v3 = v2;
  v4 = a2;
  v22 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC62D0DC();
    type metadata accessor for CategoryRecordQueryDescription();
    sub_1BC347F0C(&qword_1ED6A51D0, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription, (uint64_t)&protocol conformance descriptor for CategoryRecordQueryDescription);
    result = sub_1BC62CA1C();
    v4 = v21[1];
    v20 = v21[2];
    v6 = v21[3];
    v7 = v21[4];
    v8 = v21[5];
  }
  else
  {
    v9 = -1 << *(_BYTE *)(a2 + 32);
    v20 = a2 + 56;
    v6 = ~v9;
    v10 = -v9;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v8 = v11 & *(_QWORD *)(a2 + 56);
    result = swift_bridgeObjectRetain();
    v7 = 0;
  }
  v12 = (unint64_t)(v6 + 64) >> 6;
  if ((v4 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (!sub_1BC62D13C())
    goto LABEL_35;
  type metadata accessor for CategoryRecordQueryDescription();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v13 = v21[0];
  swift_unknownObjectRelease();
  v14 = v7;
  v15 = v8;
  if (!v13)
    goto LABEL_35;
  while (1)
  {
    v21[0] = v13;
    sub_1BC434650(&v22, v21);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1BC3583F4();
    }
    result = swift_release();
    v7 = v14;
    v8 = v15;
    if (v4 < 0)
      goto LABEL_8;
LABEL_11:
    if (!v8)
      break;
    v15 = (v8 - 1) & v8;
    v16 = __clz(__rbit64(v8)) | (v7 << 6);
    v14 = v7;
LABEL_24:
    v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v16);
    swift_retain();
    if (!v13)
      goto LABEL_35;
  }
  v14 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    return result;
  }
  if (v14 >= v12)
    goto LABEL_35;
  v17 = *(_QWORD *)(v20 + 8 * v14);
  if (v17)
  {
LABEL_23:
    v15 = (v17 - 1) & v17;
    v16 = __clz(__rbit64(v17)) + (v14 << 6);
    goto LABEL_24;
  }
  v18 = v7 + 2;
  if (v7 + 2 >= v12)
    goto LABEL_35;
  v17 = *(_QWORD *)(v20 + 8 * v18);
  if (v17)
    goto LABEL_22;
  v18 = v7 + 3;
  if (v7 + 3 >= v12)
    goto LABEL_35;
  v17 = *(_QWORD *)(v20 + 8 * v18);
  if (v17)
    goto LABEL_22;
  v18 = v7 + 4;
  if (v7 + 4 >= v12)
    goto LABEL_35;
  v17 = *(_QWORD *)(v20 + 8 * v18);
  if (v17)
  {
LABEL_22:
    v14 = v18;
    goto LABEL_23;
  }
  v14 = v7 + 5;
  if (v7 + 5 >= v12)
    goto LABEL_35;
  v17 = *(_QWORD *)(v20 + 8 * v14);
  if (v17)
    goto LABEL_23;
  v19 = v7 + 6;
  while (v12 != v19)
  {
    v17 = *(_QWORD *)(v20 + 8 * v19++);
    if (v17)
    {
      v14 = v19 - 1;
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_1BC3583F4();
  return v22;
}

uint64_t CategoryCountDataProvider.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t CategoryCountDataProvider.init(healthStore:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1BC433900(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  sub_1BC433B78();
  v6 = v5;
  v23 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC433CF8();
  v10 = v9;
  v24 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC433D70(0);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v2;
    v18[3] = a1;
    v18[4] = a2;
    sub_1BC433BF0();
    sub_1BC347F0C(&qword_1ED6A3640, (uint64_t (*)(uint64_t))sub_1BC433BF0, MEMORY[0x1E0C96108]);
    swift_retain();
    swift_bridgeObjectRetain();
    v19 = a2;
    sub_1BC62BF78();
    v25 = 0;
    sub_1BC347F0C(&qword_1ED6A3670, (uint64_t (*)(uint64_t))sub_1BC433B78, MEMORY[0x1E0C96148]);
    sub_1BC62C014();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
    sub_1BC347F0C(&qword_1ED6A35C8, (uint64_t (*)(uint64_t))sub_1BC433CF8, MEMORY[0x1E0C957E8]);
    v20 = sub_1BC62BFFC();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  }
  else
  {
    v25 = sub_1BC35C98C(MEMORY[0x1E0DEE9D8]);
    sub_1BC433C5C(0);
    sub_1BC62BF48();
    sub_1BC347F0C(&qword_1EF42F9A8, (uint64_t (*)(uint64_t))sub_1BC433D70, MEMORY[0x1E0C960B0]);
    v20 = sub_1BC62BFFC();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return v20;
}

void sub_1BC433B78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A3678)
  {
    sub_1BC433BF0();
    sub_1BC347F0C(&qword_1ED6A3640, (uint64_t (*)(uint64_t))sub_1BC433BF0, MEMORY[0x1E0C96108]);
    v0 = sub_1BC62BF84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A3678);
  }
}

void sub_1BC433BF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A3648)
  {
    sub_1BC433C5C(255);
    sub_1BC35E44C();
    v0 = sub_1BC62BF54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A3648);
  }
}

void sub_1BC433C5C(uint64_t a1)
{
  sub_1BC357158(a1, &qword_1ED6A36A0, (uint64_t (*)(uint64_t))sub_1BC433C78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC433C78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A3218)
  {
    type metadata accessor for BrowseCategory();
    sub_1BC347F0C(&qword_1ED6A5438, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t)&protocol conformance descriptor for BrowseCategory);
    v0 = sub_1BC62C59C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A3218);
  }
}

void sub_1BC433CF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A35D0)
  {
    sub_1BC433B78();
    sub_1BC347F0C(&qword_1ED6A3670, (uint64_t (*)(uint64_t))sub_1BC433B78, MEMORY[0x1E0C96148]);
    v0 = sub_1BC62BDF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A35D0);
  }
}

void sub_1BC433D70(uint64_t a1)
{
  sub_1BC357158(a1, &qword_1ED6A3618, (uint64_t (*)(uint64_t))sub_1BC433C5C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
}

uint64_t sub_1BC433D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  id v9;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1BC433BF0();
  swift_allocObject();
  v9 = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_1BC62BF60();
  *a4 = result;
  return result;
}

uint64_t sub_1BC433E2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC433D8C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_1BC433E38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  swift_retain();
  swift_retain();
  sub_1BC434F34(a4, a5, a3, (void (*)(void))sub_1BC37C738, v10);
  return swift_release_n();
}

void sub_1BC433EC4(id a1, char a2, void (*a3)(id, uint64_t))
{
  id v5;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    a3(a1, 1);
    sub_1BC3CD668(a1, 1);
  }
  else
  {
    a3(a1, 0);
  }
}

void sub_1BC433F2C(uint64_t a1, int64_t a2, void (*a3)(void), uint64_t a4)
{
  unint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int64_t v54;
  unint64_t v55;
  int64_t v56;
  _QWORD *v57;
  uint64_t v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  unint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  void (*v67)(void);
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  unint64_t aBlock[6];

  sub_1BC4345E0();
  v73 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v72 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v66 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v66 - v15;
  type metadata accessor for BrowseCategory();
  v17 = MEMORY[0x1E0C80A78](a1);
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v23 = (char *)&v66 - v22;
  v24 = *(_QWORD *)(v20 + 16);
  if (!v24)
  {
    sub_1BC35C98C(MEMORY[0x1E0DEE9D8]);
    a3();
    swift_bridgeObjectRelease();
    return;
  }
  v67 = a3;
  v68 = a4;
  v69 = v4;
  v70 = v20;
  v25 = *(_QWORD *)(v21 + 72);
  v71 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v26 = v20 + v71;
  swift_bridgeObjectRetain();
  v27 = MEMORY[0x1E0DEE9D8];
  v74 = a2;
  v75 = v25;
  do
  {
    sub_1BC3B226C(v26, (uint64_t)v23);
    sub_1BC375724((uint64_t)v23, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BC3BDC0C(0, *(_QWORD *)(v27 + 16) + 1, 1);
      v25 = v75;
      v27 = aBlock[0];
    }
    v30 = *(_QWORD *)(v27 + 16);
    v29 = *(_QWORD *)(v27 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_1BC3BDC0C(v29 > 1, v30 + 1, 1);
      v25 = v75;
      v27 = aBlock[0];
    }
    *(_QWORD *)(v27 + 16) = v30 + 1;
    sub_1BC375724((uint64_t)v19, v27 + v71 + v30 * v25, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v26 += v25;
    --v24;
    v31 = v74;
  }
  while (v24);
  swift_bridgeObjectRelease();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v32 = *(_QWORD *)(v27 + 16);
  if (v32)
  {
    swift_retain();
    v33 = v27 + v71;
    do
    {
      BrowseCategory.queryDescriptors.getter();
      v35 = v34;
      MEMORY[0x1E0C80A78](v34);
      *(&v66 - 2) = v33;
      *(&v66 - 1) = v31;
      v36 = sub_1BC3B1578((void (*)(uint64_t *__return_ptr, id *))sub_1BC3B22CC, (uint64_t)(&v66 - 4), v35);
      swift_bridgeObjectRelease();
      v37 = v36;
      v31 = v74;
      sub_1BC3BB8C0(v37);
      v33 += v75;
      --v32;
    }
    while (v32);
    swift_release_n();
  }
  else
  {
    swift_release();
  }
  v38 = sub_1BC58C224(aBlock[0]);
  swift_bridgeObjectRelease();
  v39 = sub_1BC35CB38(MEMORY[0x1E0DEE9D8]);
  v40 = sub_1BC4335D0(v39, v38);
  swift_bridgeObjectRelease();
  aBlock[0] = MEMORY[0x1E0DEE9E8];
  v41 = *(_QWORD *)(v40 + 64);
  v71 = v40 + 64;
  v42 = 1 << *(_BYTE *)(v40 + 32);
  v43 = -1;
  if (v42 < 64)
    v43 = ~(-1 << v42);
  v44 = v43 & v41;
  v74 = (unint64_t)(v42 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v45 = 0;
  v46 = (uint64_t)v72;
  while (1)
  {
    if (v44)
    {
      v47 = __clz(__rbit64(v44));
      v44 &= v44 - 1;
      v48 = v47 | (v45 << 6);
      v49 = v75;
      goto LABEL_18;
    }
    v54 = v45 + 1;
    v49 = v75;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v54 >= v74)
      goto LABEL_36;
    v55 = *(_QWORD *)(v71 + 8 * v54);
    ++v45;
    if (!v55)
    {
      v45 = v54 + 1;
      if (v54 + 1 >= v74)
        goto LABEL_36;
      v55 = *(_QWORD *)(v71 + 8 * v45);
      if (!v55)
      {
        v45 = v54 + 2;
        if (v54 + 2 >= v74)
          goto LABEL_36;
        v55 = *(_QWORD *)(v71 + 8 * v45);
        if (!v55)
        {
          v45 = v54 + 3;
          if (v54 + 3 >= v74)
            goto LABEL_36;
          v55 = *(_QWORD *)(v71 + 8 * v45);
          if (!v55)
            break;
        }
      }
    }
LABEL_35:
    v44 = (v55 - 1) & v55;
    v48 = __clz(__rbit64(v55)) + (v45 << 6);
LABEL_18:
    sub_1BC3B226C(*(_QWORD *)(v40 + 48) + v49 * v48, (uint64_t)v16);
    v50 = v73;
    *(_QWORD *)&v16[*(int *)(v73 + 48)] = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v48);
    sub_1BC375724((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC4345E0);
    v51 = *(int *)(v50 + 48);
    sub_1BC3B226C((uint64_t)v14, v46);
    *(_QWORD *)(v46 + v51) = *(_QWORD *)&v14[v51];
    swift_bridgeObjectRetain();
    v52 = swift_bridgeObjectRetain();
    v53 = sub_1BC58C380(v52);
    swift_bridgeObjectRelease();
    sub_1BC348D78(v46, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    sub_1BC4347D0(v53);
    sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC4345E0);
  }
  v56 = v54 + 4;
  if (v56 >= v74)
  {
LABEL_36:
    swift_release();
    swift_bridgeObjectRelease();
    v57 = (_QWORD *)swift_allocObject();
    v58 = v68;
    v57[2] = v67;
    v57[3] = v58;
    v57[4] = v40;
    v59 = objc_allocWithZone(MEMORY[0x1E0CB6AE0]);
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    sub_1BC434E78();
    swift_retain();
    v60 = (void *)sub_1BC62C9D4();
    swift_bridgeObjectRelease();
    aBlock[4] = (unint64_t)sub_1BC434E6C;
    aBlock[5] = (unint64_t)v57;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (unint64_t)sub_1BC434D94;
    aBlock[3] = (unint64_t)&block_descriptor_24;
    v61 = _Block_copy(aBlock);
    v62 = objc_msgSend(v59, sel_initWithQueryDescriptors_resultsHandler_, v60, v61);

    _Block_release(v61);
    swift_release();
    v63 = v69;
    aBlock[0] = v69;
    type metadata accessor for CategoryCountDataProvider();
    v64 = v62;
    swift_retain();
    sub_1BC62C6E0();
    v65 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v64, sel_setDebugIdentifier_, v65);

    objc_msgSend(*(id *)(v63 + 16), sel_executeQuery_, v64);
    return;
  }
  v55 = *(_QWORD *)(v71 + 8 * v56);
  if (v55)
  {
    v45 = v56;
    goto LABEL_35;
  }
  while (1)
  {
    v45 = v56 + 1;
    if (__OFADD__(v56, 1))
      break;
    if (v45 >= v74)
      goto LABEL_36;
    v55 = *(_QWORD *)(v71 + 8 * v45);
    ++v56;
    if (v55)
      goto LABEL_35;
  }
LABEL_38:
  __break(1u);
}

void sub_1BC4345E0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6A31D0)
  {
    type metadata accessor for BrowseCategory();
    sub_1BC3CD538();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6A31D0);
  }
}

uint64_t sub_1BC434650(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  id v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a2;
  v8 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_category;
  v9 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v10 = sub_1BC559478(v8), (v11 & 1) != 0))
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v12 = *(id *)(v7 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  sub_1BC3B226C(v8, (uint64_t)v6);
  v13 = v18;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *a1;
  *a1 = 0x8000000000000000;
  sub_1BC48CC24(v13, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  *a1 = v17;
  swift_bridgeObjectRelease();
  return sub_1BC348D78((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
}

void sub_1BC4347D0(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  _QWORD *v16;
  id v17[6];

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1BC62D0DC();
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    sub_1BC434E78();
    sub_1BC62CA1C();
    v1 = (unint64_t)v17[1];
    v16 = v17[2];
    v2 = (uint64_t)v17[3];
    v3 = v17[4];
    v4 = (unint64_t)v17[5];
  }
  else
  {
    v3 = 0;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v16 = (_QWORD *)(a1 + 56);
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v9 = (v4 - 1) & v4;
      v10 = __clz(__rbit64(v4)) | ((_QWORD)v3 << 6);
      v11 = (char *)v3;
      goto LABEL_29;
    }
    v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v13 >= v8)
      goto LABEL_32;
    v14 = v16[v13];
    v11 = (char *)v3 + 1;
    if (!v14)
    {
      v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8)
        goto LABEL_32;
      v14 = v16[(_QWORD)v11];
      if (!v14)
      {
        v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8)
          goto LABEL_32;
        v14 = v16[(_QWORD)v11];
        if (!v14)
        {
          v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8)
            goto LABEL_32;
          v14 = v16[(_QWORD)v11];
          if (!v14)
          {
            v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8)
              goto LABEL_32;
            v14 = v16[(_QWORD)v11];
            if (!v14)
            {
              v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                v14 = v16[(_QWORD)v15++];
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1BC3583F4();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + ((_QWORD)v11 << 6);
LABEL_29:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_32;
    while (1)
    {
      sub_1BC48F68C(v17, v12);

      v3 = v11;
      v4 = v9;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1BC62D13C())
      {
        sub_1BC34B6A0(0, &qword_1ED6A48A0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v17[0];
        swift_unknownObjectRelease();
        v11 = (char *)v3;
        v9 = v4;
        if (v12)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_1BC434A6C(uint64_t a1, unint64_t a2, void *a3, void (*a4)(_QWORD, _QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD, _QWORD);
  uint64_t v33;
  uint64_t v34;

  v11 = sub_1BC62BB34();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v15 = a3;
    sub_1BC62BAE0();
    v16 = a3;
    v17 = a3;
    v18 = sub_1BC62BB28();
    v19 = sub_1BC62CAC4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v34 = v30;
      v31 = a5;
      *(_DWORD *)v20 = 136446210;
      v29[1] = v20 + 4;
      v33 = (uint64_t)a3;
      v21 = a3;
      sub_1BC35E44C();
      sub_1BC62D5D4();
      v22 = (id)HKSensitiveLogItem();
      v32 = a4;
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v23 = sub_1BC62C6F8();
      v33 = sub_1BC4991F0(v23, v24, &v34);
      sub_1BC62CFF8();
      a4 = v32;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v18, v19, "Error fetching categories: %{public}s", v20, 0xCu);
      v25 = v30;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v25, -1, -1);
      MEMORY[0x1BCCF36A8](v20, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v27 = a3;
    a4(a3, 1);

  }
  else
  {
    if (a2)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = _sSD15HealthRecordsUIAA14BrowseCategoryORszSiRs_rlE_019queryDescriptionsByE0SDyACSiGSDySo17HKQueryDescriptorCSo8NSNumberCG_SDyACSayAGGGtcfC_0(a2, a6);
      a4(v26, 0);
    }
    else
    {
      v28 = sub_1BC35C98C(MEMORY[0x1E0DEE9D8]);
      a4(v28, 0);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t CategoryCountDataProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CategoryCountDataProvider.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1BC434D94(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    sub_1BC434E78();
    v5 = sub_1BC62C548();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1BC434E6C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1BC434A6C(a1, a2, a3, *(void (**)(_QWORD, _QWORD))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

unint64_t sub_1BC434E78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A4920;
  if (!qword_1ED6A4920)
  {
    v1 = sub_1BC34B6A0(255, &qword_1ED6A48A0);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A4920);
  }
  return result;
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t type metadata accessor for CategoryCountDataProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for CategoryCountDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CategoryCountDataProvider.__allocating_init(healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CategoryCountDataProvider.categoryCountsPublisher(categories:predicate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of CategoryCountDataProvider.categoriesCounts(categories:predicate:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

void sub_1BC434F34(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int64_t v57;
  unint64_t v58;
  int64_t v59;
  _QWORD *v60;
  uint64_t v61;
  id v62;
  void *v63;
  void *v64;
  id v65;
  unint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t aBlock[6];

  v72 = a2;
  sub_1BC4345E0();
  v75 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v74 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v69 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v69 - v15;
  v17 = type metadata accessor for BrowseCategory();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v69 - v22;
  v24 = swift_allocObject();
  v25 = a1;
  *(_QWORD *)(v24 + 16) = a4;
  *(_QWORD *)(v24 + 24) = a5;
  v26 = *(_QWORD *)(a1 + 16);
  if (!v26)
  {
    swift_retain();
    sub_1BC35C98C(MEMORY[0x1E0DEE9D8]);
    a4();
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v69 = v24;
  v70 = a3;
  v27 = *(_QWORD *)(v18 + 72);
  v73 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v28 = v25 + v73;
  v29 = v25;
  v30 = v27;
  swift_retain();
  v71 = v29;
  swift_bridgeObjectRetain();
  v31 = MEMORY[0x1E0DEE9D8];
  v76 = v30;
  do
  {
    sub_1BC3B226C(v28, (uint64_t)v23);
    sub_1BC375724((uint64_t)v23, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BC3BDC0C(0, *(_QWORD *)(v31 + 16) + 1, 1);
      v30 = v76;
      v31 = aBlock[0];
    }
    v34 = *(_QWORD *)(v31 + 16);
    v33 = *(_QWORD *)(v31 + 24);
    if (v34 >= v33 >> 1)
    {
      sub_1BC3BDC0C(v33 > 1, v34 + 1, 1);
      v30 = v76;
      v31 = aBlock[0];
    }
    *(_QWORD *)(v31 + 16) = v34 + 1;
    sub_1BC375724((uint64_t)v21, v31 + v73 + v34 * v30, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v28 += v30;
    --v26;
  }
  while (v26);
  swift_bridgeObjectRelease();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v35 = *(_QWORD *)(v31 + 16);
  if (v35)
  {
    swift_retain();
    v36 = v72;
    v37 = v31 + v73;
    do
    {
      BrowseCategory.queryDescriptors.getter();
      v39 = v38;
      MEMORY[0x1E0C80A78](v38);
      *(&v69 - 2) = v37;
      *(&v69 - 1) = v36;
      v40 = sub_1BC3B1578((void (*)(uint64_t *__return_ptr, id *))sub_1BC4356D0, (uint64_t)(&v69 - 4), v39);
      swift_bridgeObjectRelease();
      sub_1BC3BB8C0(v40);
      v37 += v76;
      --v35;
    }
    while (v35);
    swift_release_n();
  }
  else
  {
    swift_release();
  }
  v41 = sub_1BC58C224(aBlock[0]);
  swift_bridgeObjectRelease();
  v42 = sub_1BC35CB38(MEMORY[0x1E0DEE9D8]);
  v43 = sub_1BC4335D0(v42, v41);
  swift_bridgeObjectRelease();
  aBlock[0] = MEMORY[0x1E0DEE9E8];
  v44 = *(_QWORD *)(v43 + 64);
  v72 = v43 + 64;
  v45 = 1 << *(_BYTE *)(v43 + 32);
  v46 = -1;
  if (v45 < 64)
    v46 = ~(-1 << v45);
  v47 = v46 & v44;
  v73 = (unint64_t)(v45 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v48 = 0;
  v49 = (uint64_t)v74;
  while (1)
  {
    if (v47)
    {
      v50 = __clz(__rbit64(v47));
      v47 &= v47 - 1;
      v51 = v50 | (v48 << 6);
      v52 = v76;
      goto LABEL_18;
    }
    v57 = v48 + 1;
    v52 = v76;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v57 >= v73)
      goto LABEL_36;
    v58 = *(_QWORD *)(v72 + 8 * v57);
    ++v48;
    if (!v58)
    {
      v48 = v57 + 1;
      if (v57 + 1 >= v73)
        goto LABEL_36;
      v58 = *(_QWORD *)(v72 + 8 * v48);
      if (!v58)
      {
        v48 = v57 + 2;
        if (v57 + 2 >= v73)
          goto LABEL_36;
        v58 = *(_QWORD *)(v72 + 8 * v48);
        if (!v58)
        {
          v48 = v57 + 3;
          if (v57 + 3 >= v73)
            goto LABEL_36;
          v58 = *(_QWORD *)(v72 + 8 * v48);
          if (!v58)
            break;
        }
      }
    }
LABEL_35:
    v47 = (v58 - 1) & v58;
    v51 = __clz(__rbit64(v58)) + (v48 << 6);
LABEL_18:
    sub_1BC3B226C(*(_QWORD *)(v43 + 48) + v52 * v51, (uint64_t)v16);
    v53 = v75;
    *(_QWORD *)&v16[*(int *)(v75 + 48)] = *(_QWORD *)(*(_QWORD *)(v43 + 56) + 8 * v51);
    sub_1BC375724((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC4345E0);
    v54 = *(int *)(v53 + 48);
    sub_1BC3B226C((uint64_t)v14, v49);
    *(_QWORD *)(v49 + v54) = *(_QWORD *)&v14[v54];
    swift_bridgeObjectRetain();
    v55 = swift_bridgeObjectRetain();
    v56 = sub_1BC58C380(v55);
    swift_bridgeObjectRelease();
    sub_1BC348D78(v49, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    sub_1BC4347D0(v56);
    sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC4345E0);
  }
  v59 = v57 + 4;
  if (v59 >= v73)
  {
LABEL_36:
    swift_release();
    swift_bridgeObjectRelease();
    v60 = (_QWORD *)swift_allocObject();
    v61 = v69;
    v60[2] = sub_1BC435694;
    v60[3] = v61;
    v60[4] = v43;
    v62 = objc_allocWithZone(MEMORY[0x1E0CB6AE0]);
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    sub_1BC434E78();
    swift_retain();
    v63 = (void *)sub_1BC62C9D4();
    swift_bridgeObjectRelease();
    aBlock[4] = (unint64_t)sub_1BC4356F0;
    aBlock[5] = (unint64_t)v60;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (unint64_t)sub_1BC434D94;
    aBlock[3] = (unint64_t)&block_descriptor_20_1;
    v64 = _Block_copy(aBlock);
    v65 = objc_msgSend(v62, sel_initWithQueryDescriptors_resultsHandler_, v63, v64);

    _Block_release(v64);
    swift_release();
    v66 = v70;
    aBlock[0] = v70;
    type metadata accessor for CategoryCountDataProvider();
    v67 = v65;
    swift_retain();
    sub_1BC62C6E0();
    v68 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v67, sel_setDebugIdentifier_, v68);

    objc_msgSend(*(id *)(v66 + 16), sel_executeQuery_, v67);
    swift_release();

    return;
  }
  v58 = *(_QWORD *)(v72 + 8 * v59);
  if (v58)
  {
    v48 = v59;
    goto LABEL_35;
  }
  while (1)
  {
    v48 = v59 + 1;
    if (__OFADD__(v59, 1))
      break;
    if (v48 >= v73)
      goto LABEL_36;
    v58 = *(_QWORD *)(v72 + 8 * v48);
    ++v59;
    if (v58)
      goto LABEL_35;
  }
LABEL_38:
  __break(1u);
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC435664(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC433E38(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1BC435670()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC435694(void *a1, char a2)
{
  uint64_t v2;

  sub_1BC433EC4(a1, a2 & 1, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t objectdestroy_2Tm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC4356D0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC3B22CC(a1, a2);
}

id sub_1BC4356F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell____lazy_storage___subtitleLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4B10], 1280);
    objc_msgSend(v4, sel_setFont_, v5);

    v6 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v4, sel_setTextColor_, v6);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

double sub_1BC435800()
{
  double result;

  result = 15.0;
  xmmword_1EF459DB0 = xmmword_1BC6404B0;
  *(_OWORD *)&qword_1EF459DC0 = xmmword_1BC6404C0;
  return result;
}

id sub_1BC435820(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  objc_super v17;

  v9 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_titleView;
  v10 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ExpandedRangeValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueView;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MultiValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewConstraints] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewConstraints] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint] = 0;
  v14 = &v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item];
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_QWORD *)v14 + 4) = 0;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for RecordCell();
  v15 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC435BAC();

  return v15;
}

id sub_1BC4359D0(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  objc_super v11;

  v3 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_titleView;
  v4 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ExpandedRangeValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueView;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MultiValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewConstraints] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewConstraints] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint] = 0;
  v8 = &v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for RecordCell();
  v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

void sub_1BC435BAC()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  uint64_t v89;
  id v90;
  id v91;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v2);

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v1, sel_setBackgroundView_, v3);

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v1, sel_setSelectedBackgroundView_, v4);

  v5 = objc_msgSend(v1, sel_selectedBackgroundView);
  if (v5)
  {
    v6 = v5;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
    v7 = (void *)sub_1BC62CE48();
    objc_msgSend(v6, sel_setBackgroundColor_, v7);

  }
  v8 = objc_msgSend(v1, sel_contentView);
  v9 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_titleView];
  objc_msgSend(v8, sel_addSubview_, v9);

  v10 = objc_msgSend(v1, sel_contentView);
  v91 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView];
  objc_msgSend(v10, sel_addSubview_);

  v11 = objc_msgSend(v1, sel_contentView);
  v90 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueView];
  objc_msgSend(v11, sel_addSubview_);

  v12 = objc_msgSend(v1, sel_contentView);
  v13 = sub_1BC4356F4();
  objc_msgSend(v12, sel_addSubview_, v13);

  v14 = (void *)objc_opt_self();
  sub_1BC34D844();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC63A3C0;
  v16 = objc_msgSend(v9, sel_leadingAnchor);
  v17 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v18 = objc_msgSend(v17, sel_leadingAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(_QWORD *)(v15 + 32) = v19;
  v20 = objc_msgSend(v9, sel_trailingAnchor);
  v21 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v22 = objc_msgSend(v21, sel_trailingAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v15 + 40) = v23;
  v24 = objc_msgSend(v9, sel_topAnchor);
  v25 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v26 = objc_msgSend(v25, sel_topAnchor);

  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  *(_QWORD *)(v15 + 48) = v27;
  v28 = sub_1BC4356F4();
  v29 = objc_msgSend(v28, sel_leadingAnchor);

  v30 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v31 = objc_msgSend(v30, sel_leadingAnchor);

  if (qword_1EF4285B0 != -1)
    swift_once();
  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, *((double *)&xmmword_1EF459DB0 + 1));

  *(_QWORD *)(v15 + 56) = v32;
  v33 = sub_1BC4356F4();
  v34 = objc_msgSend(v33, sel_trailingAnchor);

  v35 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v36 = objc_msgSend(v35, (SEL)&selRef_registerReuseIdentifiersWithTableView_);

  v37 = objc_msgSend(v34, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v36, -*(double *)&qword_1EF459DC8);
  *(_QWORD *)(v15 + 64) = v37;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v38 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_activateConstraints_, v38);

  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1BC63A3D0;
  v88 = v14;
  v40 = objc_msgSend(v91, (SEL)&selRef_dateCache + 6);
  v41 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v42 = objc_msgSend(v41, (SEL)&selRef_dateCache + 6);

  v43 = objc_msgSend(v40, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v42, *((double *)&xmmword_1EF459DB0 + 1));
  *(_QWORD *)(v39 + 32) = v43;
  v44 = objc_msgSend(v91, sel_trailingAnchor);
  v45 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v46 = objc_msgSend(v45, sel_trailingAnchor);

  v47 = objc_msgSend(v44, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v46, -*(double *)&qword_1EF459DC8);
  *(_QWORD *)(v39 + 40) = v47;
  v48 = objc_msgSend(v91, sel_topAnchor);
  v49 = objc_msgSend(v9, sel_bottomAnchor);
  v50 = objc_msgSend(v48, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v49, *(double *)&xmmword_1EF459DB0);

  *(_QWORD *)(v39 + 48) = v50;
  v51 = objc_msgSend(v91, sel_bottomAnchor);
  v52 = sub_1BC4356F4();
  v53 = objc_msgSend(v52, (SEL)&selRef_setCategoriesBySourceAlphaOrdered_ + 4);

  v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
  *(_QWORD *)(v39 + 56) = v54;
  sub_1BC62C890();
  v89 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewConstraints;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewConstraints] = v39;
  swift_bridgeObjectRelease();
  v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1BC63A3D0;
  v56 = objc_msgSend(v90, sel_leadingAnchor);
  v57 = objc_msgSend(v1, sel_contentView);
  v58 = objc_msgSend(v57, sel_leadingAnchor);

  v59 = objc_msgSend(v56, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v58, *((double *)&xmmword_1EF459DB0 + 1));
  *(_QWORD *)(v55 + 32) = v59;
  v60 = objc_msgSend(v90, sel_trailingAnchor);
  v61 = objc_msgSend(v1, sel_contentView);
  v62 = objc_msgSend(v61, sel_trailingAnchor);

  v63 = objc_msgSend(v60, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v62, -*(double *)&qword_1EF459DC8);
  *(_QWORD *)(v55 + 40) = v63;
  v64 = objc_msgSend(v90, sel_topAnchor);
  v65 = objc_msgSend(v9, sel_bottomAnchor);
  v66 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v65);

  *(_QWORD *)(v55 + 48) = v66;
  v67 = objc_msgSend(v90, sel_bottomAnchor);
  v68 = sub_1BC4356F4();
  v69 = objc_msgSend(v68, sel_topAnchor);

  v70 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v69);
  *(_QWORD *)(v55 + 56) = v70;
  sub_1BC62C890();
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewConstraints] = v55;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)&v1[v89])
  {
    swift_bridgeObjectRetain();
    v71 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v88, sel_activateConstraints_, v71);

    v72 = sub_1BC4356F4();
    v73 = objc_msgSend(v72, sel_bottomAnchor);

    v74 = objc_msgSend(v1, sel_contentView);
    v75 = objc_msgSend(v74, sel_bottomAnchor);

    v76 = objc_msgSend(v73, sel_constraintEqualToAnchor_constant_, v75, -*(double *)&qword_1EF459DC0);
    v77 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint] = v76;

    v78 = objc_msgSend(v91, sel_bottomAnchor);
    v79 = objc_msgSend(v1, sel_contentView);
    v80 = objc_msgSend(v79, sel_bottomAnchor);

    v81 = objc_msgSend(v78, sel_constraintEqualToAnchor_constant_, v80, -*(double *)&qword_1EF459DC0);
    v82 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint] = v81;

    v83 = objc_msgSend(v90, sel_bottomAnchor);
    v84 = objc_msgSend(v1, sel_contentView);
    v85 = objc_msgSend(v84, sel_bottomAnchor);

    v86 = objc_msgSend(v83, sel_constraintEqualToAnchor_constant_, v85, -*(double *)&qword_1EF459DC0);
    v87 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint] = v86;

    sub_1BC4382A0();
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC436730()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];

  v1 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v5, (uint64_t)v16);
  if (v16[3])
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    type metadata accessor for RecordItem();
    if (swift_dynamicCast())
    {
      swift_release();
      sub_1BC436C48();
      return;
    }
  }
  else
  {
    sub_1BC3DF8C4((uint64_t)v16, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
  }
  sub_1BC62BAF8();
  v6 = v0;
  v7 = sub_1BC62BB28();
  v8 = sub_1BC62CAC4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v1;
    v15 = v10;
    v11 = v10;
    *(_DWORD *)v9 = 136446210;
    sub_1BC37ADB0(v5, (uint64_t)v16);
    sub_1BC3A9C44(0, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
    v12 = sub_1BC62C6F8();
    v16[0] = sub_1BC4991F0(v12, v13, &v15);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v7, v8, "Incorrect view model for RecordItem: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v11, -1, -1);
    MEMORY[0x1BCCF36A8](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v14);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1BC4369BC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];

  v1 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v5, (uint64_t)v17);
  if (v17[3])
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    type metadata accessor for RecordItem();
    if ((swift_dynamicCast() & 1) != 0)
      return v16;
  }
  else
  {
    sub_1BC3DF8C4((uint64_t)v17, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
  }
  sub_1BC62BAF8();
  v7 = v0;
  v8 = sub_1BC62BB28();
  v9 = sub_1BC62CAC4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v15 = v1;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v16 = v12;
    *(_DWORD *)v11 = 136446210;
    sub_1BC37ADB0(v5, (uint64_t)v17);
    sub_1BC3A9C44(0, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
    v13 = sub_1BC62C6F8();
    v17[0] = sub_1BC4991F0(v13, v14, &v16);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v8, v9, "Incorrect view model for RecordItem: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v12, -1, -1);
    MEMORY[0x1BCCF36A8](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return 0;
}

void sub_1BC436C48()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  ValueMetadata *v3;
  uint64_t v4;
  char *v5;
  _UNKNOWN **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int8x16_t v13;
  uint64x2_t v14;
  int16x8_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  ValueMetadata *v30;
  _UNKNOWN **v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  ValueMetadata *v36;
  _UNKNOWN **v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  _BYTE *v44;
  void *v45;
  void *v46;
  void *v47;
  ValueMetadata *v48;
  _UNKNOWN **v49;
  char v50;
  _BYTE *v51;
  id v52;
  ValueMetadata *v53;
  _UNKNOWN **v54;
  uint64_t v55;
  void *v56;
  ValueMetadata *v57;
  _UNKNOWN **v58;
  id v59;
  ValueMetadata *v60;
  _UNKNOWN **v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  __int128 v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  unint64_t v94;
  void *v95;
  void *v96;
  __int128 v97[2];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  ValueMetadata *v101;
  _UNKNOWN **v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int v110;
  unsigned __int8 v111;

  sub_1BC43755C((uint64_t)&v98);
  v1 = v99;
  if (!v99)
  {
    sub_1BC4382A0();
    return;
  }
  v2 = v98;
  v4 = v100;
  v3 = v101;
  v91 = v100;
  v92 = v98;
  v5 = v0;
  v90 = v0;
  v6 = v102;
  v7 = v105;
  v95 = v103;
  v96 = v104;
  v8 = v106;
  v9 = v107;
  v87 = v107;
  v88 = v105;
  v10 = v108;
  v11 = v109;
  v85 = v109;
  v93 = v102;
  v94 = v110 | ((unint64_t)v111 << 32);
  v89 = *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_titleView];
  v101 = &type metadata for UserDomainConceptFeedItemViewData;
  v102 = &protocol witness table for UserDomainConceptFeedItemViewData;
  v12 = swift_allocObject();
  v98 = v12;
  *(_QWORD *)(v12 + 16) = v2;
  *(_QWORD *)(v12 + 24) = v1;
  *(_QWORD *)(v12 + 32) = v4;
  *(_QWORD *)(v12 + 40) = v3;
  v84 = (uint64_t)v3;
  *(_QWORD *)(v12 + 48) = v6;
  *(_QWORD *)(v12 + 56) = v95;
  *(_QWORD *)(v12 + 64) = v96;
  *(_QWORD *)(v12 + 72) = v7;
  *(_QWORD *)(v12 + 80) = v8;
  *(_QWORD *)(v12 + 88) = v9;
  v86 = v10;
  *(_QWORD *)(v12 + 96) = v10;
  *(_QWORD *)(v12 + 104) = v11;
  *(_BYTE *)(v12 + 112) = v94 & 1;
  v13.i64[0] = 0xFFFFFFFFFFLL;
  v13.i64[1] = 0xFFFFFFFFFFLL;
  v14 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v94), v13);
  v15 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v14, (uint64x2_t)xmmword_1BC63CFC0), (int32x4_t)vshlq_u64(v14, (uint64x2_t)xmmword_1BC63CFB0));
  *(int8x8_t *)v15.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v15), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v12 + 113) = vmovn_s16(v15).u32[0];
  v16 = v1;
  v17 = v89 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v83 = v93;
  v82 = v95;
  v81 = v96;
  v18 = v8;
  swift_bridgeObjectRetain();
  sub_1BC3AA078((uint64_t)&v98, v17, (unint64_t *)&qword_1EF42AF38, &qword_1EF42AF40);
  swift_endAccess();
  sub_1BC38BF54();
  sub_1BC3DF8C4((uint64_t)&v98, (unint64_t *)&qword_1EF42AF38, &qword_1EF42AF40);
  v19 = *(char **)&v90[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView];
  v20 = &v19[OBJC_IVAR___HRExpandedRangeValueView_viewData];
  swift_beginAccess();
  v79 = *((_QWORD *)v20 + 1);
  v80 = *(_QWORD *)v20;
  v77 = *((_QWORD *)v20 + 3);
  v78 = *((_QWORD *)v20 + 2);
  v21 = (void *)*((_QWORD *)v20 + 6);
  v75 = (void *)*((_QWORD *)v20 + 5);
  v76 = (void *)*((_QWORD *)v20 + 4);
  v74 = *((_OWORD *)v20 + 4);
  v23 = *((_QWORD *)v20 + 10);
  v22 = *((_QWORD *)v20 + 11);
  v24 = *((unsigned int *)v20 + 24) | ((unint64_t)v20[100] << 32);
  *(_QWORD *)v20 = v92;
  *((_QWORD *)v20 + 1) = v16;
  *((_QWORD *)v20 + 2) = v91;
  *((_QWORD *)v20 + 3) = v3;
  *((_QWORD *)v20 + 4) = v93;
  *((_QWORD *)v20 + 5) = v95;
  *((_QWORD *)v20 + 6) = v96;
  *((_QWORD *)v20 + 7) = v88;
  *((_QWORD *)v20 + 8) = v18;
  *((_QWORD *)v20 + 9) = v87;
  *((_QWORD *)v20 + 10) = v86;
  *((_QWORD *)v20 + 11) = v85;
  *((_DWORD *)v20 + 24) = v94;
  v20[100] = BYTE4(v94);
  v73 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = v83;
  v26 = v82;
  v27 = v81;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC3EDFF4(v80, v79, v78, v77, v76, v75, v21);
  sub_1BC400E3C();
  v28 = v19;
  objc_msgSend(v19, sel_setHidden_, 0, v74, v23, v22, v24);
  v29 = sub_1BC4369BC();
  if (!v29)
  {
    v44 = (_BYTE *)(v89 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
    swift_beginAccess();
    *v44 = 1;
    sub_1BC38B554();
    objc_msgSend(v90, sel_setUserInteractionEnabled_, 0);
    sub_1BC3EDFF4(v92, v16, v91, (uint64_t)v3, v93, v95, v96);
LABEL_31:
    sub_1BC4382A0();
    return;
  }
  sub_1BC34E674(v29 + 16, (uint64_t)v97);
  swift_release();
  sub_1BC34E718(v97, (uint64_t)&v98);
  v30 = v101;
  v31 = v102;
  __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
  v32 = v92;
  v33 = v93;
  v34 = v91;
  if ((((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v31[12])(v30, v31) & 1) != 0)
  {
    v35 = *(_QWORD *)&v90[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueView];
    v36 = v101;
    v37 = v102;
    __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
    v38 = ((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v37[10])(v36, v37);
    v39 = v90;
    v40 = sub_1BC438848(v38);
    swift_bridgeObjectRelease();

    v41 = (uint64_t *)(v35 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData);
    swift_beginAccess();
    v42 = *v41;
    *v41 = (uint64_t)v40;
    if (v42)
    {
      if (v40)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43 = sub_1BC3EDD84(v42, (uint64_t)v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v43 & 1) != 0)
          goto LABEL_12;
      }
    }
    else if (!v40)
    {
      goto LABEL_13;
    }
    sub_1BC3EC56C();
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    objc_msgSend(v28, sel_setHidden_, 1);
    if (*(_QWORD *)&v39[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewConstraints])
    {
      v45 = (void *)objc_opt_self();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
      swift_bridgeObjectRetain();
      v46 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      objc_msgSend(v45, sel_deactivateConstraints_, v46);

      if (*(_QWORD *)&v39[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewConstraints])
      {
        v34 = v91;
        swift_bridgeObjectRetain();
        v47 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        objc_msgSend(v45, sel_activateConstraints_, v47);

        v32 = v92;
        v33 = v93;
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_34;
  }
LABEL_16:
  v48 = v101;
  v49 = v102;
  __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
  v50 = ((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v49[8])(v48, v49);
  v51 = (_BYTE *)(v89 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
  if ((v50 & 1) == 0)
  {
    swift_beginAccess();
    *v51 = 1;
    sub_1BC38B554();
    objc_msgSend(v90, sel_setUserInteractionEnabled_, 0);
LABEL_29:
    sub_1BC3EDFF4(v32, v73, v34, v84, v33, v95, v96);
LABEL_30:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v98);
    goto LABEL_31;
  }
  swift_beginAccess();
  *v51 = 0;
  sub_1BC38B554();
  objc_msgSend(v90, sel_setUserInteractionEnabled_, 1);
  v52 = sub_1BC4356F4();
  v53 = v101;
  v54 = v102;
  __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
  ((void (*)(ValueMetadata *, _UNKNOWN **))v54[5])(v53, v54);
  if (v55)
  {
    v56 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v56 = 0;
  }
  objc_msgSend(v52, sel_setText_, v56);

  v57 = v101;
  v58 = v102;
  __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
  if ((((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v58[9])(v57, v58) & 1) == 0)
    goto LABEL_29;
  v59 = sub_1BC4356F4();
  v60 = v101;
  v61 = v102;
  __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
  v62 = ((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v61[5])(v60, v61);
  v64 = v63;
  v65 = (void *)objc_opt_self();
  v66 = objc_msgSend(v65, sel_secondaryLabelColor);
  v67 = objc_msgSend((id)objc_opt_self(), sel_configurationWithScale_, 1);
  v68 = (void *)sub_1BC62C650();
  v69 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v68, v67);

  if (v69)
  {
    if (v64)
      v70 = v64;
    else
      v70 = 0xE000000000000000;
    if (!v64)
      v62 = 0;
    v71 = objc_msgSend(v65, sel_secondaryLabelColor);
    v72 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v62, v70, v66, v69, v71);
    swift_bridgeObjectRelease();

    objc_msgSend(v59, sel_setAttributedText_, v72);
    sub_1BC3EDFF4(v92, v73, v91, v84, v93, v95, v96);

    goto LABEL_30;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_1BC43755C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  BOOL v61;
  int v62;
  id v63;
  uint64_t v64;
  _QWORD *v65;
  id v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _BYTE *v75;
  _QWORD v76[3];
  uint64_t v77;
  uint64_t v78;

  v2 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v2);
  v75 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62A760();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BC4369BC();
  if (!result)
  {
    *(_QWORD *)(a1 + 93) = 0;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  v73 = result;
  v74 = (_QWORD *)(result + 16);
  sub_1BC34E674(result + 16, (uint64_t)v76 + 1);
  if (qword_1ED6A4880 != -1)
    swift_once();
  v12 = (id)qword_1ED6A5510;
  swift_bridgeObjectRetain();
  v72 = sub_1BC62A4A8();
  v14 = v13;
  swift_bridgeObjectRelease();

  v15 = v77;
  v16 = v78;
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)((char *)v76 + 1), v77);
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v71 = v14;
    sub_1BC348D78((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC34631C);
    v17 = v73;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v17 = v73;
    v18 = objc_msgSend(*(id *)(v73 + 56), sel_utcDateFormatter);
    v19 = (void *)sub_1BC62A700();
    v20 = objc_msgSend(v18, sel_relativeStringFromDate_, v19);

    v21 = sub_1BC62C680();
    v71 = v22;
    v72 = v21;

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v23 = *(_QWORD *)(v17 + 40);
  v24 = *(_QWORD *)(v17 + 48);
  __swift_project_boxed_opaque_existential_1Tm(v74, v23);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v24 + 16))(v76, v23, v24);
  *v75 = v76[0];
  swift_storeEnumTagMultiPayload();
  v25 = v77;
  v26 = v78;
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)((char *)v76 + 1), v77);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(v25, v26);
  v29 = v28;
  BrowseCategory.systemImageName.getter();
  if (v30
    && (v31 = (void *)sub_1BC62C650(),
        swift_bridgeObjectRelease(),
        v32 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v31),
        v31,
        v32))
  {
    v33 = objc_msgSend(v32, sel_imageWithRenderingMode_, 1);

  }
  else
  {
    v33 = 0;
  }
  v34 = BrowseCategory.tintColorForTemplateImage.getter();
  v36 = v77;
  v35 = v78;
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)((char *)v76 + 1), v77);
  v37 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v35 + 8) + 16))(v36);
  v70 = v27;
  if (!v37)
    goto LABEL_16;
  v38 = v37;
  if (!objc_msgSend(v37, sel_hasRenderableContent))
  {

LABEL_16:
    v39 = 0;
    goto LABEL_17;
  }
  v39 = objc_msgSend((id)objc_opt_self(), sel_referenceRangeViewDataFromInspectableValueInRange_, v38);

LABEL_17:
  v41 = v77;
  v40 = v78;
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)((char *)v76 + 1), v77);
  v69 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v40 + 8) + 24))(v41);
  v43 = v42;
  v45 = v77;
  v44 = v78;
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)((char *)v76 + 1), v77);
  v74 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v44 + 8) + 32))(v45);
  v47 = v46;
  v48 = v77;
  v49 = v78;
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)((char *)v76 + 1), v77);
  v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 88))(v48, v49);
  v66 = v34;
  v67 = v43;
  swift_bridgeObjectRetain();
  v50 = v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = v33;
  v52 = v34;
  v53 = v39;
  if (v47)
  {
    v74 = (_QWORD *)sub_1BC62C710();
    v55 = v54;
    swift_bridgeObjectRelease();
  }
  else
  {
    v55 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v56 = v51;
  v57 = v52;
  v58 = v50;
  v59 = v57;
  swift_release();
  swift_bridgeObjectRelease();
  v60 = v67;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  sub_1BC348D78((uint64_t)v75, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  v61 = (v68 & 1) == 0;
  v62 = 1;
  *(_QWORD *)a1 = v70;
  *(_QWORD *)(a1 + 8) = v29;
  if (!v61)
    v62 = 16777217;
  *(_QWORD *)(a1 + 16) = v72;
  *(_QWORD *)(a1 + 24) = v58;
  v63 = v66;
  *(_QWORD *)(a1 + 32) = v33;
  *(_QWORD *)(a1 + 40) = v63;
  v64 = v69;
  *(_QWORD *)(a1 + 48) = v39;
  *(_QWORD *)(a1 + 56) = v64;
  v65 = v74;
  *(_QWORD *)(a1 + 64) = v60;
  *(_QWORD *)(a1 + 72) = v65;
  *(_QWORD *)(a1 + 80) = v55;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 100) = 1;
  *(_DWORD *)(a1 + 96) = v62;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76 + 1);
}

uint64_t sub_1BC437B60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  unsigned int v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  _QWORD *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  _QWORD *v71;
  uint64_t v72;
  BOOL v73;
  int v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _QWORD v88[3];
  uint64_t v89;
  uint64_t v90;

  v4 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v4);
  v87 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62A760();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BC4369BC();
  if (result)
  {
    v85 = result;
    v86 = v4;
    v84 = (_QWORD *)(result + 16);
    sub_1BC34E674(result + 16, (uint64_t)v88 + 1);
    if (qword_1ED6A4880 != -1)
      swift_once();
    v14 = (id)qword_1ED6A5510;
    swift_bridgeObjectRetain();
    v83 = sub_1BC62A4A8();
    v16 = v15;
    swift_bridgeObjectRelease();

    v17 = v89;
    v18 = v90;
    __swift_project_boxed_opaque_existential_1Tm((_QWORD *)((char *)v88 + 1), v89);
    (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      v82 = v16;
      sub_1BC348D78((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BC34631C);
      v19 = v85;
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      v19 = v85;
      v20 = objc_msgSend(*(id *)(v85 + 56), sel_utcDateFormatter);
      v21 = (void *)sub_1BC62A700();
      v22 = objc_msgSend(v20, sel_relativeStringFromDate_, v21);

      v23 = sub_1BC62C680();
      v82 = v24;
      v83 = v23;

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    v25 = *(_QWORD *)(v19 + 40);
    v26 = *(_QWORD *)(v19 + 48);
    __swift_project_boxed_opaque_existential_1Tm(v84, v25);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v26 + 16))(v88, v25, v26);
    *v87 = v88[0];
    swift_storeEnumTagMultiPayload();
    v27 = a1[3];
    v28 = a1[4];
    __swift_project_boxed_opaque_existential_1Tm(a1, v27);
    v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 32);
    v30 = v29(v27, v28);
    v32 = v31;
    v29(v27, v28);
    if (v33)
    {
      swift_bridgeObjectRelease();
      v34 = objc_msgSend((id)objc_opt_self(), sel_sharedConverter);
      v35 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v36 = objc_msgSend(v34, sel_synonymForUCUMUnitString_, v35);

      v30 = sub_1BC62C680();
      v38 = v37;

    }
    else
    {
      v38 = v32;
    }
    v39 = a1[3];
    v40 = a1[4];
    __swift_project_boxed_opaque_existential_1Tm(a1, v39);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    if (v42)
    {
      v43 = v42;
      v81 = v41;
    }
    else
    {
      v44 = (id)qword_1ED6A5510;
      swift_bridgeObjectRetain();
      v81 = sub_1BC62A4A8();
      v43 = v45;
      swift_bridgeObjectRelease();

    }
    BrowseCategory.systemImageName.getter();
    v86 = v30;
    if (v46
      && (v47 = (void *)sub_1BC62C650(),
          swift_bridgeObjectRelease(),
          v48 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v47),
          v47,
          v48))
    {
      v49 = objc_msgSend(v48, sel_imageWithRenderingMode_, 1);

    }
    else
    {
      v49 = 0;
    }
    v84 = BrowseCategory.tintColorForTemplateImage.getter();
    v50 = a1[3];
    v51 = a1[4];
    __swift_project_boxed_opaque_existential_1Tm(a1, v50);
    v52 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 16))(v50, v51);
    if (v52)
    {
      v53 = v52;
      v54 = objc_msgSend(v52, sel_hasRenderableContent);
      v55 = v82;
      if (v54)
      {
        v56 = objc_msgSend((id)objc_opt_self(), sel_referenceRangeViewDataFromInspectableValueInRange_, v53);

      }
      else
      {

        v56 = 0;
      }
    }
    else
    {
      v56 = 0;
      v55 = v82;
    }
    v57 = a1[3];
    v58 = a1[4];
    __swift_project_boxed_opaque_existential_1Tm(a1, v57);
    v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 24))(v57, v58);
    v60 = v59;
    v61 = v89;
    v62 = v90;
    __swift_project_boxed_opaque_existential_1Tm((_QWORD *)((char *)v88 + 1), v89);
    v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 88))(v61, v62);
    v80 = v60;
    v78 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v63 = v55;
    v64 = v49;
    v65 = v84;
    v66 = v56;
    v67 = v56;
    if (v38)
    {
      v86 = sub_1BC62C710();
      v69 = v68;
      swift_bridgeObjectRelease();
    }
    else
    {
      v69 = 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70 = v64;
    v71 = v65;
    swift_release();
    swift_bridgeObjectRelease();
    v72 = v80;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    sub_1BC348D78((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v73 = (v79 & 1) == 0;
    v74 = 1;
    *(_QWORD *)a2 = v81;
    *(_QWORD *)(a2 + 8) = v43;
    if (!v73)
      v74 = 16777217;
    *(_QWORD *)(a2 + 16) = v83;
    *(_QWORD *)(a2 + 24) = v63;
    v75 = v84;
    *(_QWORD *)(a2 + 32) = v78;
    *(_QWORD *)(a2 + 40) = v75;
    v76 = v82;
    *(_QWORD *)(a2 + 48) = v66;
    *(_QWORD *)(a2 + 56) = v76;
    v77 = v86;
    *(_QWORD *)(a2 + 64) = v72;
    *(_QWORD *)(a2 + 72) = v77;
    *(_QWORD *)(a2 + 80) = v69;
    *(_QWORD *)(a2 + 88) = 0;
    *(_BYTE *)(a2 + 100) = 1;
    *(_DWORD *)(a2 + 96) = v74;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v88 + 1);
  }
  else
  {
    *(_QWORD *)(a2 + 93) = 0;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_1BC4382A0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v0 = (_QWORD *)sub_1BC4369BC();
  if (v0)
  {
    v1 = v0;
    v2 = v0 + 2;
    v3 = v0[5];
    v4 = v0[6];
    __swift_project_boxed_opaque_existential_1Tm(v0 + 2, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
    v6 = v5;
    swift_bridgeObjectRelease();
    if (v6)
    {
      v7 = 0;
    }
    else
    {
      v8 = v1[5];
      v9 = v1[6];
      __swift_project_boxed_opaque_existential_1Tm(v2, v8);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 96))(v8, v9) & 1) != 0)
        v7 = 2;
      else
        v7 = 1;
    }
    sub_1BC43836C(v7);
    swift_release();
  }
  else
  {
    sub_1BC43836C(1);
  }
}

void sub_1BC43836C(char a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;

  if (!a1)
  {
    v8 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint);
    if (v8)
    {
      objc_msgSend(v8, sel_setActive_, 1);
      v9 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint);
      if (v9)
      {
        objc_msgSend(v9, sel_setActive_, 0);
        v10 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint);
        if (v10)
        {
          objc_msgSend(v10, sel_setActive_, 0);
          v15 = sub_1BC4356F4();
          objc_msgSend(v15, sel_setHidden_, 0);

          return;
        }
        goto LABEL_21;
      }
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a1 == 1)
  {
    v2 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint);
    if (v2)
    {
      objc_msgSend(v2, sel_setActive_, 0);
      v3 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint);
      if (v3)
      {
        objc_msgSend(v3, sel_setActive_, 1);
        v4 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint);
        if (v4)
        {
          objc_msgSend(v4, sel_setActive_, 0);
          v5 = sub_1BC4356F4();
          objc_msgSend(v5, sel_setHidden_, 1);

          v6 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView);
          v7 = 0;
LABEL_15:
          objc_msgSend(v6, sel_setHidden_, v7);
          return;
        }
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint);
  if (!v11)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  objc_msgSend(v11, sel_setActive_, 0);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint);
  if (!v12)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  objc_msgSend(v12, sel_setActive_, 0);
  v13 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint);
  if (v13)
  {
    objc_msgSend(v13, sel_setActive_, 1);
    v14 = sub_1BC4356F4();
    objc_msgSend(v14, sel_setHidden_, 1);

    v6 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView);
    v7 = 1;
    goto LABEL_15;
  }
LABEL_24:
  __break(1u);
}

id sub_1BC438564()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RecordCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC438688@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC4386D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item;
  swift_beginAccess();
  sub_1BC3AA078(a1, v3, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
  swift_endAccess();
  sub_1BC436730();
  return sub_1BC3DF8C4(a1, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
}

void (*sub_1BC43877C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC4387C4;
}

void sub_1BC4387C4(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC436730();
}

uint64_t sub_1BC4387F4()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1BC438848(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  int8x16_t v5;
  uint64x2_t v6;
  int16x8_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  unsigned int v27;
  unsigned __int8 v28;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = (_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1BC437B60(v2, (uint64_t)&v20);
    v8 = v21;
    if (v21)
    {
      v9 = v20;
      v18 = v23;
      v19 = v22;
      v16 = v25;
      v17 = v24;
      v15 = v26;
      v10 = v28;
      v11 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1BC3B6220(0, v3[2] + 1, 1, v3);
      v13 = v3[2];
      v12 = v3[3];
      if (v13 >= v12 >> 1)
        v3 = sub_1BC3B6220((_QWORD *)(v12 > 1), v13 + 1, 1, v3);
      v3[2] = v13 + 1;
      v4 = &v3[13 * v13];
      v4[4] = v9;
      v4[5] = v8;
      *((_OWORD *)v4 + 3) = v19;
      *((_OWORD *)v4 + 4) = v18;
      *((_OWORD *)v4 + 5) = v17;
      *((_OWORD *)v4 + 6) = v16;
      *((_OWORD *)v4 + 7) = v15;
      *((_BYTE *)v4 + 128) = v11 & 1;
      v5.i64[0] = 0xFFFFFFFFFFLL;
      v5.i64[1] = 0xFFFFFFFFFFLL;
      v6 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v11 | (unint64_t)(v10 << 32)), v5);
      v7 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v6, (uint64x2_t)xmmword_1BC63CFC0), (int32x4_t)vshlq_u64(v6, (uint64x2_t)xmmword_1BC63CFB0));
      *(int8x8_t *)v7.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v7), (int8x8_t)0x1000100010001);
      *(_DWORD *)((char *)v4 + 129) = vmovn_s16(v7).u32[0];
    }
    v2 += 5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

_QWORD *sub_1BC438A00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  void *v32;
  uint64_t v33;

  v32 = a6;
  v31 = a5;
  v29 = a3;
  v30 = a4;
  v27 = a1;
  v28 = a2;
  v7 = sub_1BC62CC68();
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC62CC20();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v10);
  v12 = sub_1BC62C4AC();
  MEMORY[0x1E0C80A78](v12);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider) = 0;
  v26 = v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_parentViewController;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_cancellable) = 0;
  v23 = OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_workQueue;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  swift_retain();
  sub_1BC62C494();
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58E8, v11, MEMORY[0x1E0DEF828]);
  sub_1BC357158(0, &qword_1ED6A58B0, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35A2BC((unint64_t *)&qword_1ED6A58B8, &qword_1ED6A58B0, v11);
  sub_1BC62D0A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v9, *MEMORY[0x1E0DEF8D0], v25);
  *(_QWORD *)(v6 + v23) = sub_1BC62CCA4();
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_dataSourceSections) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_removedRecordsSections) = v13;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_categorySectionIndexes) = MEMORY[0x1E0DEE9E8];
  v14 = v27;
  v15 = v28;
  *(_QWORD *)(v6 + 48) = v27;
  sub_1BC34EA24(v15, v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_accountIdentifier);
  v16 = v30;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProviderSubject) = v29;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_timelineDisplayState) = v16;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_isRenderingForConcept) = v31;
  LOBYTE(v33) = 0;
  sub_1BC3589E0();
  swift_allocObject();
  v17 = v14;
  swift_retain();
  swift_retain();
  *(_QWORD *)(v6 + 40) = sub_1BC62BF24();
  v18 = v32;
  swift_unknownObjectWeakAssign();
  swift_release();
  v19 = ConceptsDataSource.init(arrangedSections:isHidden:)(v13, 0);
  v33 = *(_QWORD *)((char *)v19
                  + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProviderSubject);
  swift_allocObject();
  swift_weakInit();
  sub_1BC43CEC8();
  sub_1BC347F0C(&qword_1EF42FD70, (uint64_t (*)(uint64_t))sub_1BC43CEC8, MEMORY[0x1E0C95FB8]);
  swift_retain();
  swift_retain();
  v20 = sub_1BC62C0BC();

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  sub_1BC3B153C(v15);
  swift_release();
  *(_QWORD *)((char *)v19 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_cancellable) = v20;
  swift_release();
  return v19;
}

uint64_t sub_1BC438DFC(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  id v16;
  uint64_t (*v17)(uint64_t);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v2 = sub_1BC62C47C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62C4AC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = result;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v20 = sub_1BC62CC74();
    v21 = v3;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = v12;
    aBlock[4] = sub_1BC43CFBC;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_17_0;
    v14 = _Block_copy(aBlock);
    v19 = v6;
    v15 = v14;
    v16 = v10;
    swift_retain();
    swift_release();
    sub_1BC62C494();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35A2BC((unint64_t *)&qword_1ED6A58A0, (unint64_t *)&qword_1ED6A5890, v17);
    sub_1BC62D0A0();
    v18 = (void *)v20;
    MEMORY[0x1BCCF1F68](0, v9, v5, v15);
    _Block_release(v15);
    swift_release();

    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  }
  return result;
}

void sub_1BC439060(void *a1, uint64_t a2)
{
  void *v2;
  id v3;

  if (a1)
  {
    v2 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider);
    *(_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider) = a1;
    v3 = a1;

    sub_1BC439364();
    sub_1BC546A60(0);

  }
  else
  {
    sub_1BC546A60(1);
  }
}

void sub_1BC4390D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  unsigned int v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a1;
  v22 = a2;
  v3 = sub_1BC62B4B0();
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62AE74();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC62B3C0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v14)
  {
    __break(1u);
    goto LABEL_10;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, sel_features);

  if (!v16)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v17 = objc_msgSend(v16, sel_stanley);

  if (!v17)
  {
    sub_1BC62B36C();
    sub_1BC62B378();
    goto LABEL_7;
  }
  v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_categorySectionIndexes);
  swift_beginAccess();
  if (sub_1BC5DC7C0(v21, *v18))
  {
    sub_1BC62B36C();
    sub_1BC62B390();
LABEL_7:
    sub_1BC62B3B4();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return;
  }
  sub_1BC62AE5C();
  sub_1BC43CE64();
  sub_1BC347F0C(&qword_1EF42FD50, (uint64_t (*)(uint64_t))sub_1BC43CE64, MEMORY[0x1E0D2AD60]);
  swift_unknownObjectRetain();
  sub_1BC62B024();
  sub_1BC62B498();
  sub_1BC62AE50();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v20);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1BC439364()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider);
  v3 = MEMORY[0x1E0C809B0];
  if (v2)
  {
    objc_msgSend(v2, sel_setLoadingNextPage_, 1);
    v4 = *(void **)(v0 + v1);
    if (v4)
    {
      v5 = swift_allocObject();
      swift_weakInit();
      v16 = sub_1BC43CE2C;
      v17 = v5;
      v12 = v3;
      v13 = 1107296256;
      v14 = sub_1BC39BAC4;
      v15 = &block_descriptor_25;
      v6 = _Block_copy(&v12);
      v7 = v4;
      swift_release();
      objc_msgSend(v7, sel_startCollectingDataUntilRecordWithUUID_withUpdateHandler_, 0, v6);
      _Block_release(v6);

    }
  }
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = *(void **)(v0 + v1);
  if (v9)
  {
    v16 = sub_1BC43CE4C;
    v17 = v8;
    v12 = v3;
    v13 = 1107296256;
    v14 = sub_1BC42A188;
    v15 = &block_descriptor_4;
    v10 = _Block_copy(&v12);
    v11 = v9;
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_setErrorHandler_, v10);
    swift_release();
    _Block_release(v10);

  }
  else
  {
    swift_release();
  }
}

uint64_t sub_1BC439518(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  _BYTE v13[8];

  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    if ((a1 & 1) != 0)
    {
      sub_1BC62BAF8();
      v8 = sub_1BC62BB28();
      v9 = sub_1BC62CAAC();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v10 = 0;
        _os_log_impl(&dword_1BC30A000, v8, v9, "Loading new page of data", v10, 2u);
        MEMORY[0x1BCCF36A8](v10, -1, -1);
      }

      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
      v13[7] = 1;
      swift_retain();
      sub_1BC62BF00();
      swift_release();
      sub_1BC439FD8();
      swift_retain();
      sub_1BC62AF4C();
      swift_release();
      sub_1BC62B2D0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    v11 = *(void **)(v7 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v12, sel_setLoadingNextPage_, 0);

    }
    return swift_release();
  }
  return result;
}

void sub_1BC4396E0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char v24;
  void *v25;
  void *v26;
  void *v27;
  char *v28;
  uint64_t (*v29)(uint64_t);
  char *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char v38;
  uint64_t v39;
  void *v40;
  void *v41;
  char *v42;
  uint64_t (*v43)(uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *aBlock;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  void *v62;
  void *v63;
  uint64_t v64;
  id v65;

  v2 = sub_1BC62C464();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = sub_1BC62C4C4();
  v6 = *(_QWORD *)(v53 - 8);
  v7 = MEMORY[0x1E0C80A78](v53);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v54 = (char *)&v48 - v10;
  v11 = sub_1BC62C47C();
  v58 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v57 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62C4AC();
  v56 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v55 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v16 = Strong;
    if (!a1
      || (aBlock = a1,
          v17 = a1,
          sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0),
          sub_1BC34B6A0(0, &qword_1EF42FD40),
          (swift_dynamicCast() & 1) == 0))
    {
      swift_release();
      return;
    }
    v50 = v13;
    v51 = v11;
    v52 = v65;
    v18 = objc_msgSend(v65, sel_domain);
    v19 = sub_1BC62C680();
    v21 = v20;

    if (v19 == sub_1BC62C680() && v21 == v22)
    {
      swift_bridgeObjectRelease_n();
      v23 = v52;
    }
    else
    {
      v24 = sub_1BC62D574();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = v52;
      if ((v24 & 1) == 0)
        goto LABEL_11;
    }
    if (objc_msgSend(v23, sel_code) == (id)100)
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
      v25 = (void *)sub_1BC62CC74();
      v63 = sub_1BC43CE5C;
      v64 = v16;
      aBlock = (void *)MEMORY[0x1E0C809B0];
      v60 = 1107296256;
      v61 = sub_1BC39BE70;
      v62 = &block_descriptor_10;
      v26 = _Block_copy(&aBlock);
      v27 = v23;
      swift_retain();
      swift_release();
      v28 = v55;
      sub_1BC62C494();
      aBlock = (void *)MEMORY[0x1E0DEE9D8];
      v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v29, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC35A2BC((unint64_t *)&qword_1ED6A58A0, (unint64_t *)&qword_1ED6A5890, v29);
      v30 = v57;
      v31 = v51;
      sub_1BC62D0A0();
      MEMORY[0x1BCCF1F68](0, v28, v30, v26);

      _Block_release(v26);
      swift_release();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v31);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v28, v50);
      return;
    }
LABEL_11:
    v32 = objc_msgSend(v23, sel_domain);
    v33 = sub_1BC62C680();
    v35 = v34;

    if (v33 == sub_1BC62C680() && v35 == v36)
    {
      swift_bridgeObjectRelease_n();
      v37 = v52;
    }
    else
    {
      v38 = sub_1BC62D574();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = v52;
      if ((v38 & 1) == 0)
        goto LABEL_18;
    }
    if (objc_msgSend(v37, sel_code) == (id)1001)
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
      v49 = sub_1BC62CC74();
      sub_1BC62C4B8();
      *v5 = 450;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF490], v2);
      MEMORY[0x1BCCF17AC](v9, v5);
      (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
      v52 = *(id *)(v6 + 8);
      v39 = v53;
      ((void (*)(char *, uint64_t))v52)(v9, v53);
      v63 = sub_1BC43CE54;
      v64 = v16;
      aBlock = (void *)MEMORY[0x1E0C809B0];
      v60 = 1107296256;
      v61 = sub_1BC39BE70;
      v62 = &block_descriptor_7_1;
      v40 = _Block_copy(&aBlock);
      v41 = v37;
      swift_retain();
      swift_release();
      v42 = v55;
      sub_1BC62C494();
      aBlock = (void *)MEMORY[0x1E0DEE9D8];
      v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v43, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC35A2BC((unint64_t *)&qword_1ED6A58A0, (unint64_t *)&qword_1ED6A5890, v43);
      v44 = v57;
      v45 = v51;
      sub_1BC62D0A0();
      v46 = v54;
      v47 = (void *)v49;
      MEMORY[0x1BCCF1EFC](v54, v42, v44, v40);

      _Block_release(v40);
      swift_release();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v45);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v50);
      ((void (*)(char *, uint64_t))v52)(v46, v39);
      return;
    }
LABEL_18:
    swift_release();

  }
}

void sub_1BC439DA0(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  char v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v2 = (void *)MEMORY[0x1BCCF37A4](a1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_parentViewController);
  if (v2)
  {
    v11 = v2;
    v3 = objc_msgSend(v2, sel_navigationController);
    v4 = objc_msgSend(v3, sel_topViewController);

    if (v4)
    {
      sub_1BC34B6A0(0, &qword_1EF429570);
      v5 = v11;
      v6 = v4;
      v7 = sub_1BC62CEB4();

      if ((v7 & 1) != 0)
      {
        v8 = objc_msgSend(v5, sel_navigationController);
        if (v8)
        {
          v9 = v8;

        }
        v10 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
        if (qword_1EF428690 != -1)
          swift_once();
        objc_msgSend(v10, sel_postNotificationName_object_, qword_1EF433600, a1);

      }
    }

  }
}

id sub_1BC439F38(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_dataSourceSections) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_removedRecordsSections) = v2;
  swift_bridgeObjectRelease();
  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_categorySectionIndexes);
  swift_beginAccess();
  *v3 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider), sel_reload);
}

unint64_t sub_1BC439FD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1BC43C7E4(v3);
    v5 = MEMORY[0x1E0DEE9D8];
    if (v4)
      v6 = v4;
    else
      v6 = (id)MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_removedRecordsSections) = v6;
    swift_bridgeObjectRelease();
    result = (unint64_t)objc_msgSend(v3, sel_numberOfGroups);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v8 = result;
      if (result)
      {
        v9 = 0;
        v10 = 0;
        do
        {
          v11 = v10 + 1;
          v12 = sub_1BC43A124(v10, v3, v9);
          sub_1BC3BB5A0((uint64_t)v12);
          v13 = v5;
          v9 = *(_QWORD *)(v5 + 16);
          v10 = v11;
        }
        while (v8 != v11);
      }
      else
      {
        v13 = MEMORY[0x1E0DEE9D8];
      }
      v15 = OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_dataSourceSections;
      *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_dataSourceSections) = v13;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(v1 + v15);
      swift_bridgeObjectRetain();
      v16 = swift_bridgeObjectRetain();
      sub_1BC3BB5A0(v16);

      return v17;
    }
  }
  else
  {
    v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_dataSourceSections);
    swift_bridgeObjectRetain();
    v14 = swift_bridgeObjectRetain();
    sub_1BC3BB5A0(v14);
    return v18;
  }
  return result;
}

NSObject *sub_1BC43A124(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  _QWORD *v40;
  NSObject *v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  NSObject *v53;
  unint64_t v54;
  unint64_t isa;
  unint64_t v56;
  uint64_t v57;
  Class v58;
  BOOL v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  char **v66;
  NSObject *v67;
  Class v68;
  char *v69;
  char *v70;
  char *v71;
  NSObject *v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  NSObject *v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  NSObject *v84;
  NSObject *v85;
  _QWORD *v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  NSObject *v97;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  NSObject *v108;
  NSObject *v109;
  NSObject *v110;
  NSObject *v111;
  id v112;
  void *v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  id v118;
  void *v119;
  unint64_t v120;
  _QWORD *v121;
  NSObject *v122;
  NSObject *v123;
  NSObject *v124;
  id v125;
  NSObject *v126;
  char *v127;
  char *v128;
  char *v129;
  NSObject *v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  NSObject *v134;
  id v135;
  NSObject *v136;
  id v137;
  id v138;
  _QWORD *v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  NSObject *v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  NSObject *v150;
  NSObject *v151;
  NSObject *v152;
  id v153;
  id v154;
  void *v155;
  NSObject *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  id v161;
  _QWORD *v162;
  uint64_t v163;
  _QWORD *v164;
  NSObject *v165;
  unint64_t v166;
  NSObject *v167;
  NSObject *v168;
  char v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  NSObject *v177;
  NSObject *v178;
  id v179;
  NSObject *v180;
  char v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  NSObject *v189;
  id v190;
  NSObject *v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void *v196;
  NSObject *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  id v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  NSObject *v207;
  id v208;
  NSObject *v209;
  NSObject *v210;
  NSObject *v211;
  unint64_t v212;
  NSObject *v213;
  id v214;
  NSObject *v215;
  _QWORD v217[2];
  __int128 v218;
  uint64_t v219;
  uint64_t v220;
  NSObject *v221;
  uint64_t v222;
  id v223;
  uint64_t v224;
  id v225;
  id v226;
  uint64_t v227;
  id v228;
  NSObject *v229;
  int v230;
  uint64_t v231;
  NSObject *v232;
  NSObject *v233;
  NSObject *v234;
  int v235;
  uint64_t v236;
  uint64_t v237;
  NSObject *v238;
  NSObject *v239;
  NSObject *v240;
  NSObject *v241;
  NSObject *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  uint64_t *v249;
  _QWORD *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t *v260;
  void (*v261)(_QWORD, _QWORD, _QWORD);
  uint64_t v262;
  unint64_t v263;
  void (*v264)(_QWORD, _QWORD, _QWORD);
  uint64_t v265;
  NSObject *v266;
  void *v267;
  unint64_t v268;
  char *v269;
  char *v270;
  NSObject *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  __int128 v276;
  NSObject *v277;
  uint64_t v278;
  NSObject *v279;
  id v280;
  NSObject *v281;
  NSObject *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  void *v286;
  unsigned __int8 v287;
  uint64_t v288;
  __int128 v289;
  uint64_t v290;
  __int128 v291;
  void *v292;
  void *v293;
  uint64_t v294;
  uint64_t v295;
  __int128 v296;
  NSObject *v297;
  char v298;
  NSObject *v299;
  id v300;
  NSObject *v301;
  NSObject *v302;

  v4 = v3;
  v259 = a3;
  v267 = a2;
  v7 = sub_1BC62BB34();
  v219 = *(_QWORD *)(v7 - 8);
  v220 = v7;
  MEMORY[0x1E0C80A78](v7);
  v270 = (char *)v217 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62A7B4();
  v252 = *(_QWORD *)(v9 - 8);
  v253 = v9;
  MEMORY[0x1E0C80A78](v9);
  v251 = (char *)v217 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62A970();
  v272 = *(_QWORD *)(v11 - 8);
  v273 = v11;
  MEMORY[0x1E0C80A78](v11);
  v269 = (char *)v217 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62B288();
  v265 = *(_QWORD *)(v13 - 8);
  v266 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v258 = (char *)v217 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v255 = (uint64_t)v217 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v248 = (char *)v217 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v247 = (char *)v217 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v246 = (char *)v217 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v245 = (char *)v217 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v257 = (char *)v217 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v256 = (uint64_t)v217 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v244 = (char *)v217 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v243 = (char *)v217 - v33;
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)v217 - v34;
  sub_1BC43C708();
  v37 = v36;
  MEMORY[0x1E0C80A78](v36);
  v39 = (_QWORD *)((char *)v217 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = objc_msgSend(a2, sel_numberOfDisplayItemsForGroupAtIndex_, a1);
  v41 = *(NSObject **)((char *)v3
                     + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_timelineDisplayState);
  v42 = *((_BYTE *)v3 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_isRenderingForConcept);
  v295 = 0;
  *(_QWORD *)&v296 = v40;
  v268 = (unint64_t)v40;
  *((_QWORD *)&v296 + 1) = a1;
  v297 = v41;
  v298 = v42;
  v299 = 0;
  v300 = 0;
  v43 = MEMORY[0x1E0DEE9D8];
  v301 = MEMORY[0x1E0DEE9D8];
  v302 = MEMORY[0x1E0DEE9D8];
  v44 = (uint64_t)v39 + *(int *)(v37 + 48);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  sub_1BC62BF0C();
  v45 = v292;
  v46 = v293;

  v250 = v4;
  v47 = (uint64_t)v4 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_accountIdentifier;
  v48 = (unint64_t)v35;
  v274 = a1;
  v49 = sub_1BC53FAA0(v44, a1, v267, (uint64_t)v46, v47);
  v51 = v50;
  swift_bridgeObjectRelease_n();
  swift_release();

  *v39 = v49;
  v39[1] = v51;
  v249 = v39;
  v52 = v266;
  v264 = *(void (**)(_QWORD, _QWORD, _QWORD))(v265 + 16);
  v264(v48, v44, v266);
  v53 = sub_1BC3B5F84(0, 1, 1, v43);
  isa = (unint64_t)v53[2].isa;
  v54 = (unint64_t)v53[3].isa;
  v56 = isa + 1;
  if (isa >= v54 >> 1)
    goto LABEL_106;
  while (1)
  {
    v53[2].isa = (Class)v56;
    v263 = (*(unsigned __int8 *)(v265 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v265 + 80);
    v57 = *(_QWORD *)(v265 + 72);
    v261 = *(void (**)(_QWORD, _QWORD, _QWORD))(v265 + 32);
    v262 = v57;
    v261((char *)v53 + v263 + v57 * isa, v48, v52);
    v301 = v53;
    v58 = v53[2].isa;
    v59 = __OFADD__(v259, v58);
    v60 = (char *)v58 + v259;
    v61 = v270;
    if (v59)
    {
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
      JUMPOUT(0x1BC43BC5CLL);
    }
    v62 = (uint64_t)(v60 - 1);
    if (__OFSUB__(v60, 1))
      goto LABEL_108;
    v56 = (unint64_t)v250
        + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_categorySectionIndexes;
    swift_beginAccess();
    v63 = v62;
    v254 = v56;
    v53 = v56;
    sub_1BC48ECD4((uint64_t *)&v291, v63);
    swift_endAccess();
    v52 = v268;
    if ((v268 & 0x8000000000000000) != 0)
      goto LABEL_109;
    isa = (unint64_t)v269;
    v48 = (unint64_t)v267;
    if (!v268)
      break;
    v65 = 0;
    v260 = (uint64_t *)&v302;
    v66 = &selRef_viewIsAppearing_;
    *(_QWORD *)&v64 = 136446466;
    v218 = v64;
    v54 = MEMORY[0x1E0DEE9B8] + 8;
    v217[1] = MEMORY[0x1E0DEE9B8] + 8;
    while (v52 != v65)
    {
      MEMORY[0x1BCCEFC10](v65, v274);
      v53 = sub_1BC62A928();
      v67 = objc_msgSend((id)v48, v66[351], v53);

      if (v67)
      {
        v295 = v65;
        switch((unint64_t)-[NSObject displayItemType](v67, sel_displayItemType))
        {
          case 2uLL:
            v68 = v302[2].isa;
            v271 = v67;
            if (v68)
            {
              sub_1BC541E9C();
              swift_bridgeObjectRetain();
              v69 = v251;
              sub_1BC62A7A8();
              sub_1BC62A778();
              (*(void (**)(char *, uint64_t))(v252 + 8))(v69, v253);
              v70 = v243;
              sub_1BC62B270();
              v71 = v70;
              v72 = v266;
              v264(v244, v71, v266);
              v73 = (unint64_t)v301;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v73 = sub_1BC3B5F84(0, *(_QWORD *)(v73 + 16) + 1, 1, v73);
              v75 = *(_QWORD *)(v73 + 16);
              v74 = *(_QWORD *)(v73 + 24);
              if (v75 >= v74 >> 1)
                v73 = sub_1BC3B5F84(v74 > 1, v75 + 1, 1, v73);
              *(_QWORD *)(v73 + 16) = v75 + 1;
              v261(v73 + v263 + v75 * v262, v244, v72);
              v301 = v73;
              swift_bridgeObjectRelease();
              v302 = MEMORY[0x1E0DEE9D8];
              (*(void (**)(char *, NSObject *))(v265 + 8))(v243, v72);
            }
            v76 = v299;
            v56 = (unint64_t)v301;
            v77 = *v249;
            v78 = v249[1];
            v242 = v300;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            v79 = v76;
            v80 = v256;
            sub_1BC540034(v274, v271, v267, v77, v78, v256);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            v264(v257, v80, v266);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v56 = sub_1BC3B5F84(0, *(_QWORD *)(v56 + 16) + 1, 1, v56);
            v52 = v268;
            isa = (unint64_t)v269;
            v82 = *(_QWORD *)(v56 + 16);
            v81 = *(_QWORD *)(v56 + 24);
            v83 = v267;
            v66 = &selRef_viewIsAppearing_;
            v84 = v271;
            if (v82 >= v81 >> 1)
              v56 = sub_1BC3B5F84(v81 > 1, v82 + 1, 1, v56);
            *(_QWORD *)(v56 + 16) = v82 + 1;
            v53 = v266;
            v261(v56 + v263 + v82 * v262, v257, v266);

            v301 = v56;
            (*(void (**)(uint64_t, NSObject *))(v265 + 8))(v256, v53);
            (*(void (**)(unint64_t, uint64_t))(v272 + 8))(isa, v273);
            goto LABEL_58;
          case 4uLL:
            v53 = &v295;
            sub_1BC5402AC(v67, (void *)v48, (uint64_t)&v291);
            if (v293)
            {
              sub_1BC34E718(&v291, (uint64_t)&v275);
              sub_1BC34E674((uint64_t)&v275, (uint64_t)&v291);
              v97 = v302;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v302 = v97;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v97 = sub_1BC3B5CEC(0, (int64_t)v97[2].isa + 1, 1, v97);
                v302 = v97;
              }
              v83 = (_QWORD *)v48;
              v100 = (unint64_t)v97[2].isa;
              v99 = (unint64_t)v97[3].isa;
              if (v100 >= v99 >> 1)
                v302 = sub_1BC3B5CEC((_QWORD *)(v99 > 1), v100 + 1, 1, v97);
              v56 = (unint64_t)v293;
              v101 = v294;
              v102 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v291, (uint64_t)v293);
              MEMORY[0x1E0C80A78](v102);
              v104 = (char *)v217 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *))(v105 + 16))(v104);
              sub_1BC5EE8E8(v100, (uint64_t)v104, v260, v56, v101);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v291);
              v53 = v302;

              v302 = v53;
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v275);
              isa = (unint64_t)v269;
              (*(void (**)(char *, uint64_t))(v272 + 8))(v269, v273);
LABEL_57:
              v52 = v268;
LABEL_58:
              v48 = (unint64_t)v83;
              v61 = v270;
            }
            else
            {
              (*(void (**)(unint64_t, uint64_t))(v272 + 8))(isa, v273);

              sub_1BC37AE60((uint64_t)&v291);
            }
            break;
          case 5uLL:
            v106 = (uint64_t)v297;
            v107 = v299;
            v109 = v301;
            v108 = v302;
            v240 = v300;
            v241 = v109;
            swift_bridgeObjectRetain();
            v242 = v108;
            swift_bridgeObjectRetain();
            v110 = v67;
            swift_retain();
            v111 = v107;
            v112 = -[NSObject title](v110, sel_title);
            v239 = v111;
            if (!v112)
              goto LABEL_40;
            v113 = v112;
            v114 = sub_1BC62C680();
            v116 = v115;

            v117 = HIBYTE(v116) & 0xF;
            if ((v116 & 0x2000000000000000) == 0)
              v117 = v114 & 0xFFFFFFFFFFFFLL;
            if (!v117)
            {
              swift_bridgeObjectRelease();
LABEL_40:
              if (v107 && (v118 = -[NSObject title](v111, sel_title)) != 0)
              {
                v119 = v118;
                v114 = sub_1BC62C680();
                v116 = v120;

              }
              else
              {
                v114 = 0;
                v116 = 0xE000000000000000;
              }
            }
            swift_retain();
            v271 = v110;
            sub_1BC531138(v110, v114, v116, 0, 0, 0, 0, v106, (uint64_t)&v275);
            v236 = (uint64_t)v275;
            v237 = v106;
            v235 = v276;
            v196 = (void *)*((_QWORD *)&v276 + 1);
            v233 = v279;
            v234 = v277;
            v223 = v280;
            v224 = v278;
            v197 = v281;
            v221 = v281;
            v198 = v283;
            v231 = v284;
            v232 = v282;
            v199 = v285;
            v225 = v286;
            v230 = v287;
            v227 = v288;
            v238 = type metadata accessor for MedicalRecordTimelineItem();
            v200 = swift_allocObject();
            type metadata accessor for MedicalRecordTimelineItemCell();
            v222 = sub_1BC347F0C(&qword_1EF42FCE0, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItemCell, (uint64_t)&unk_1BC647398);
            v201 = v196;
            v228 = v201;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v229 = v197;
            v202 = v198;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v203 = v225;
            v226 = v225;
            v204 = v227;
            swift_retain();
            v205 = sub_1BC62ADA8();
            *(_QWORD *)(v200 + 144) = v206;
            *(_QWORD *)(v200 + 16) = v236;
            *(_BYTE *)(v200 + 24) = v235;
            v207 = v234;
            *(_QWORD *)(v200 + 32) = v201;
            *(_QWORD *)(v200 + 40) = v207;
            v208 = v223;
            v209 = v233;
            *(_QWORD *)(v200 + 48) = v224;
            *(_QWORD *)(v200 + 56) = v209;
            v210 = v221;
            *(_QWORD *)(v200 + 64) = v208;
            *(_QWORD *)(v200 + 72) = v210;
            *(_QWORD *)(v200 + 80) = v232;
            *(_QWORD *)(v200 + 88) = v202;
            *(_QWORD *)(v200 + 96) = v231;
            *(_QWORD *)(v200 + 104) = v199;
            *(_QWORD *)(v200 + 112) = v203;
            *(_BYTE *)(v200 + 120) = v230;
            *(_QWORD *)(v200 + 128) = v204;
            *(_QWORD *)(v200 + 136) = v205;
            v211 = v242;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            swift_release();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v211 = sub_1BC3B5CEC(0, (int64_t)v211[2].isa + 1, 1, v211);
            v61 = v270;
            v48 = (unint64_t)v267;
            v52 = v268;
            v66 = &selRef_viewIsAppearing_;
            v56 = (unint64_t)v211[2].isa;
            v212 = (unint64_t)v211[3].isa;
            v53 = (v56 + 1);
            if (v56 >= v212 >> 1)
              v211 = sub_1BC3B5CEC((_QWORD *)(v212 > 1), v56 + 1, 1, v211);
            v277 = v238;
            v278 = sub_1BC347F0C(&qword_1EF42FD30, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItem, (uint64_t)&unk_1BC647460);
            v275 = (_QWORD *)v200;
            v211[2].isa = (Class)v53;
            sub_1BC34E718((__int128 *)&v275, (uint64_t)&v211[5 * v56 + 4]);

            v302 = v211;
            isa = (unint64_t)v269;
            (*(void (**)(char *, uint64_t))(v272 + 8))(v269, v273);
            break;
          case 6uLL:
            v121 = (_QWORD *)v48;
            v122 = v299;
            v123 = v302;
            v275 = (_QWORD *)v65;
            v276 = v296;
            v277 = v297;
            LOBYTE(v278) = v298;
            v279 = v299;
            v280 = v300;
            v281 = v301;
            v282 = v302;
            v124 = v67;
            v125 = v300;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            v126 = v122;
            v271 = v124;
            sub_1BC540B88(v124, (uint64_t *)&v291);
            goto LABEL_73;
          case 7uLL:
            v48 = (unint64_t)v302;
            if (v302[2].isa)
            {
              sub_1BC541E9C();
              swift_bridgeObjectRetain();
              v127 = v251;
              sub_1BC62A7A8();
              sub_1BC62A778();
              (*(void (**)(char *, uint64_t))(v252 + 8))(v127, v253);
              v128 = v245;
              sub_1BC62B270();
              v129 = v128;
              v130 = v266;
              v264(v246, v129, v266);
              v131 = (unint64_t)v301;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v131 = sub_1BC3B5F84(0, *(_QWORD *)(v131 + 16) + 1, 1, v131);
              v133 = *(_QWORD *)(v131 + 16);
              v132 = *(_QWORD *)(v131 + 24);
              if (v133 >= v132 >> 1)
                v131 = sub_1BC3B5F84(v132 > 1, v133 + 1, 1, v131);
              *(_QWORD *)(v131 + 16) = v133 + 1;
              v261(v131 + v263 + v133 * v262, v246, v130);
              v301 = v131;
              swift_bridgeObjectRelease();
              v302 = MEMORY[0x1E0DEE9D8];
              (*(void (**)(char *, NSObject *))(v265 + 8))(v245, v130);
              v48 = (unint64_t)v302;
            }
            v134 = v299;
            v52 = v301;
            v135 = v300;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            v136 = v134;
            v271 = v67;
            v137 = -[NSObject medicalRecord](v67, sel_medicalRecord);
            if (!v137)
              goto LABEL_110;
            v138 = v137;
            v242 = type metadata accessor for MedicalRecordTimelinePanelItem();
            v139 = (_QWORD *)swift_allocObject();
            type metadata accessor for MedicalRecordTimelinePanelItemCell();
            sub_1BC347F0C((unint64_t *)&qword_1EF42FCF0, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelinePanelItemCell);
            v139[3] = sub_1BC62ADA8();
            v139[4] = v140;
            v139[2] = v138;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v48 = (unint64_t)sub_1BC3B5CEC(0, *(_QWORD *)(v48 + 16) + 1, 1, (_QWORD *)v48);
            v83 = v267;
            isa = (unint64_t)v269;
            v66 = &selRef_viewIsAppearing_;
            v56 = *(_QWORD *)(v48 + 16);
            v141 = *(_QWORD *)(v48 + 24);
            if (v56 >= v141 >> 1)
              v48 = (unint64_t)sub_1BC3B5CEC((_QWORD *)(v141 > 1), v56 + 1, 1, (_QWORD *)v48);
            v277 = v242;
            v278 = sub_1BC347F0C((unint64_t *)&qword_1EF42FD28, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelinePanelItem);
            v275 = v139;
            *(_QWORD *)(v48 + 16) = v56 + 1;
            sub_1BC34E718((__int128 *)&v275, v48 + 40 * v56 + 32);
            v302 = v48;
            v54 = (unint64_t)v52[2].isa;
            v53 = (v259 + v54);
            if (__OFADD__(v259, v54))
              goto LABEL_103;
            v56 = v254;
            swift_beginAccess();
            swift_retain();
            v142 = (uint64_t)v53;
            v53 = v56;
            sub_1BC48ECD4((uint64_t *)&v291, v142);
            swift_endAccess();
            swift_release();

            (*(void (**)(unint64_t, uint64_t))(v272 + 8))(isa, v273);
            goto LABEL_57;
          case 8uLL:
            if (v302[2].isa)
            {
              sub_1BC541E9C();
              swift_bridgeObjectRetain();
              v143 = v251;
              sub_1BC62A7A8();
              sub_1BC62A778();
              (*(void (**)(char *, uint64_t))(v252 + 8))(v143, v253);
              v144 = v247;
              sub_1BC62B270();
              v145 = v144;
              v146 = v266;
              v264(v248, v145, v266);
              v147 = (unint64_t)v301;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v147 = sub_1BC3B5F84(0, *(_QWORD *)(v147 + 16) + 1, 1, v147);
              v149 = *(_QWORD *)(v147 + 16);
              v148 = *(_QWORD *)(v147 + 24);
              if (v149 >= v148 >> 1)
                v147 = sub_1BC3B5F84(v148 > 1, v149 + 1, 1, v147);
              v52 = v67;
              *(_QWORD *)(v147 + 16) = v149 + 1;
              v261(v147 + v263 + v149 * v262, v248, v146);
              v301 = v147;
              swift_bridgeObjectRelease();
              v302 = MEMORY[0x1E0DEE9D8];
              (*(void (**)(char *, NSObject *))(v265 + 8))(v247, v146);
            }
            else
            {
              v52 = v67;
            }
            v189 = v299;
            v56 = (unint64_t)v301;
            v190 = v300;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            v191 = v189;
            v192 = v255;
            sub_1BC541408(v52, v255);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            v264(v258, v192, v266);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v56 = sub_1BC3B5F84(0, *(_QWORD *)(v56 + 16) + 1, 1, v56);
            v48 = *(_QWORD *)(v56 + 16);
            v193 = *(_QWORD *)(v56 + 24);
            v53 = (v48 + 1);
            isa = (unint64_t)v269;
            v61 = v270;
            v66 = &selRef_viewIsAppearing_;
            if (v48 >= v193 >> 1)
              v56 = sub_1BC3B5F84(v193 > 1, v48 + 1, 1, v56);
            *(_QWORD *)(v56 + 16) = v53;
            v261(v56 + v263 + v48 * v262, v258, v266);
            v301 = v56;
            v194 = *(_QWORD *)(v56 + 16);
            v59 = __OFADD__(v259, v194);
            v54 = v259 + v194;
            if (v59)
              goto LABEL_104;
            v53 = (v54 - 1);
            if (__OFSUB__(v54, 1))
              goto LABEL_105;
            v56 = v254;
            swift_beginAccess();
            v195 = (uint64_t)v53;
            v53 = v56;
            sub_1BC48ECD4((uint64_t *)&v291, v195);
            swift_endAccess();

            (*(void (**)(uint64_t, NSObject *))(v265 + 8))(v255, v266);
            (*(void (**)(unint64_t, uint64_t))(v272 + 8))(isa, v273);
            goto LABEL_93;
          case 0xBuLL:
            v150 = v299;
            v151 = v301;
            v152 = v302;
            v153 = v300;
            v242 = v151;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            v241 = v150;
            v154 = -[NSObject title](v67, sel_title);
            if (!v154)
              goto LABEL_111;
            v155 = v154;
            v156 = v67;
            v157 = sub_1BC62C680();
            v159 = v158;

            v271 = v156;
            v160 = -[NSObject medicalRecord](v156, sel_medicalRecord);
            if (!v160)
              goto LABEL_112;
            v161 = v160;
            v240 = type metadata accessor for MedicalRecordTimelineUnknownItem();
            v162 = (_QWORD *)swift_allocObject();
            type metadata accessor for MedicalRecordTimelineUnknownItemCell();
            sub_1BC347F0C((unint64_t *)&qword_1EF42FD08, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineUnknownItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineUnknownItemCell);
            v162[5] = sub_1BC62ADA8();
            v162[6] = v163;
            v162[2] = v157;
            v162[3] = v159;
            v162[4] = v161;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v152 = sub_1BC3B5CEC(0, (int64_t)v152[2].isa + 1, 1, v152);
            v164 = v267;
            isa = (unint64_t)v269;
            v66 = &selRef_viewIsAppearing_;
            v165 = v271;
            v56 = (unint64_t)v152[2].isa;
            v166 = (unint64_t)v152[3].isa;
            v53 = (v56 + 1);
            if (v56 >= v166 >> 1)
              v152 = sub_1BC3B5CEC((_QWORD *)(v166 > 1), v56 + 1, 1, v152);
            v277 = v240;
            v278 = sub_1BC347F0C((unint64_t *)&qword_1EF42FD20, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineUnknownItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineUnknownItem);
            v275 = v162;
            v152[2].isa = (Class)v53;
            sub_1BC34E718((__int128 *)&v275, (uint64_t)&v152[5 * v56 + 4]);

            v302 = v152;
            (*(void (**)(unint64_t, uint64_t))(v272 + 8))(isa, v273);
            v61 = v270;
            v52 = v268;
            v48 = (unint64_t)v164;
            break;
          case 0xFuLL:
            v121 = (_QWORD *)v48;
            v167 = v299;
            v123 = v302;
            v275 = (_QWORD *)v65;
            v276 = v296;
            v277 = v297;
            LOBYTE(v278) = v298;
            v279 = v299;
            v280 = v300;
            v281 = v301;
            v282 = v302;
            v168 = v67;
            v125 = v300;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            v126 = v167;
            v271 = v168;
            sub_1BC541634(v168, (uint64_t *)&v291);
LABEL_73:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            sub_1BC34E674((uint64_t)&v291, (uint64_t)&v275);
            v169 = swift_isUniquelyReferenced_nonNull_native();
            v302 = v123;
            if ((v169 & 1) == 0)
            {
              v123 = sub_1BC3B5CEC(0, (int64_t)v123[2].isa + 1, 1, v123);
              v302 = v123;
            }
            v52 = v268;
            v171 = (unint64_t)v123[2].isa;
            v170 = (unint64_t)v123[3].isa;
            v61 = v270;
            if (v171 >= v170 >> 1)
              v302 = sub_1BC3B5CEC((_QWORD *)(v170 > 1), v171 + 1, 1, v123);
            v56 = (unint64_t)v277;
            v172 = v278;
            v173 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v275, (uint64_t)v277);
            MEMORY[0x1E0C80A78](v173);
            v175 = (char *)v217 - ((v174 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v176 + 16))(v175);
            sub_1BC5EE8E8(v171, (uint64_t)v175, v260, v56, v172);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v275);
            v53 = v302;

            v302 = v53;
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v291);
            isa = (unint64_t)v269;
            (*(void (**)(char *, uint64_t))(v272 + 8))(v269, v273);
            v48 = (unint64_t)v121;
            goto LABEL_10;
          case 0x12uLL:
            v177 = v299;
            v56 = (unint64_t)v302;
            v275 = (_QWORD *)v65;
            v276 = v296;
            v277 = v297;
            LOBYTE(v278) = v298;
            v279 = v299;
            v280 = v300;
            v281 = v301;
            v282 = v302;
            v178 = v67;
            v179 = v300;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            v180 = v177;
            v53 = &v275;
            sub_1BC541B04(v178, (void *)v48, (uint64_t)&v289);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            if (v290)
            {
              sub_1BC34E718(&v289, (uint64_t)&v291);
              sub_1BC34E674((uint64_t)&v291, (uint64_t)&v275);
              v181 = swift_isUniquelyReferenced_nonNull_native();
              v302 = v56;
              v66 = &selRef_viewIsAppearing_;
              if ((v181 & 1) == 0)
              {
                v56 = (unint64_t)sub_1BC3B5CEC(0, *(_QWORD *)(v56 + 16) + 1, 1, (_QWORD *)v56);
                v302 = v56;
              }
              v61 = v270;
              v183 = *(_QWORD *)(v56 + 16);
              v182 = *(_QWORD *)(v56 + 24);
              if (v183 >= v182 >> 1)
                v302 = sub_1BC3B5CEC((_QWORD *)(v182 > 1), v183 + 1, 1, (_QWORD *)v56);
              v56 = (unint64_t)v277;
              v184 = v278;
              v185 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v275, (uint64_t)v277);
              MEMORY[0x1E0C80A78](v185);
              v187 = (char *)v217 - ((v186 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *))(v188 + 16))(v187);
              sub_1BC5EE8E8(v183, (uint64_t)v187, v260, v56, v184);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v275);
              v53 = v302;

              v302 = v53;
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v291);
              isa = (unint64_t)v269;
              (*(void (**)(char *, uint64_t))(v272 + 8))(v269, v273);
LABEL_93:
              v48 = (unint64_t)v267;
              v52 = v268;
            }
            else
            {
              sub_1BC37AE60((uint64_t)&v289);

              v299 = v178;
              isa = (unint64_t)v269;
              (*(void (**)(char *, uint64_t))(v272 + 8))(v269, v273);
              v61 = v270;
              v52 = v268;
LABEL_9:
              v48 = (unint64_t)v267;
LABEL_10:
              v66 = &selRef_viewIsAppearing_;
            }
            break;
          default:
            sub_1BC62BAF8();
            v85 = v67;
            v86 = v250;
            swift_retain_n();
            v87 = v85;
            v53 = sub_1BC62BB28();
            v88 = sub_1BC62CAB8();
            if (os_log_type_enabled(v53, v88))
            {
              v56 = swift_slowAlloc();
              v89 = swift_slowAlloc();
              v275 = (_QWORD *)v89;
              *(_DWORD *)v56 = v218;
              *(_QWORD *)&v291 = *v86;
              sub_1BC43C7AC();
              v90 = sub_1BC62C6E0();
              *(_QWORD *)(v56 + 4) = sub_1BC4991F0(v90, v91, (uint64_t *)&v275);
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v56 + 12) = 2082;
              v87 = v87;
              v92 = -[NSObject description](v87, sel_description);
              v93 = sub_1BC62C680();
              v95 = v94;

              v61 = v270;
              *(_QWORD *)(v56 + 14) = sub_1BC4991F0(v93, v95, (uint64_t *)&v275);

              v52 = v268;
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1BC30A000, v53, v88, "%{public}s: Skipping: item %{public}s", (uint8_t *)v56, 0x16u);
              swift_arrayDestroy();
              v96 = v89;
              isa = (unint64_t)v269;
              MEMORY[0x1BCCF36A8](v96, -1, -1);
              MEMORY[0x1BCCF36A8](v56, -1, -1);
            }
            else
            {
              swift_release_n();

            }
            (*(void (**)(char *, uint64_t))(v219 + 8))(v61, v220);
            (*(void (**)(unint64_t, uint64_t))(v272 + 8))(isa, v273);
            goto LABEL_9;
        }
      }
      else
      {
        (*(void (**)(unint64_t, uint64_t))(v272 + 8))(isa, v273);
      }
      if (v52 == ++v65)
        goto LABEL_101;
    }
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    v53 = sub_1BC3B5F84(v54 > 1, v56, 1, (unint64_t)v53);
  }
LABEL_101:
  sub_1BC53FE2C();
  v213 = v299;
  v214 = v300;
  v215 = v301;
  swift_bridgeObjectRelease();
  swift_release();

  sub_1BC43C770((uint64_t)v249);
  return v215;
}

void sub_1BC43BCA0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC43BCCC()
{
  uint64_t v0;

  swift_release();

  sub_1BC3B153C(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_accountIdentifier);
  swift_release();

  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC43BD88()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1BC3B153C(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_accountIdentifier);
  swift_release();

  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC43BE5C()
{
  sub_1BC43BD88();
  return swift_deallocClassInstance();
}

void sub_1BC43BE80(uint64_t a1, uint64_t a2)
{
  sub_1BC4390D0(a1, a2);
}

uint64_t sub_1BC43BEA0()
{
  MEMORY[0x1BCCF35C4](&unk_1BC640640);
  return sub_1BC62B834();
}

uint64_t sub_1BC43BEF4()
{
  sub_1BC62B408();
  sub_1BC62CB60();
  type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell();
  sub_1BC347F0C(&qword_1EF42FCD8, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelinePanelHeaderItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  sub_1BC347F0C(&qword_1EF42F498, type metadata accessor for MedicalRecordTimelineHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineItemCell();
  sub_1BC347F0C(&qword_1EF42FCE0, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItemCell, (uint64_t)&unk_1BC647398);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
  sub_1BC347F0C(&qword_1EF42FCE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineTitleWithSubtitleItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelinePanelItemCell();
  sub_1BC347F0C(&qword_1EF42FCF0, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelinePanelItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineChartValueItemCell();
  sub_1BC347F0C(&qword_1EF42FCF8, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItemCell, (uint64_t)&unk_1BC642BD0);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell();
  sub_1BC347F0C(&qword_1EF42FD00, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineRemovedRecordItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineUnknownItemCell();
  sub_1BC347F0C(&qword_1EF42FD08, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineUnknownItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineUnknownItemCell);
  return sub_1BC62CB48();
}

uint64_t _s18HealthExperienceUI22ArrayDataSourceSectionV0a7RecordsC0E2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, uint64_t);
  char v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, uint64_t);
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD v52[3];
  uint64_t v53;
  _QWORD *v54;

  v4 = sub_1BC62B288();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v52 - v9;
  v11 = sub_1BC62B24C();
  v13 = v12;
  if (v11 == sub_1BC62B24C() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    v15(v8, a2, v4);
  }
  else
  {
    v16 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v17(v10, a1, v4);
    v17(v8, a2, v4);
    if ((v16 & 1) == 0)
    {
      v27 = *(void (**)(char *, uint64_t))(v5 + 8);
      v27(v8, v4);
      v27(v10, v4);
      LOBYTE(v23) = 0;
      return v23 & 1;
    }
  }
  v18 = sub_1BC62B27C();
  v20 = v19;
  v21 = sub_1BC62B27C();
  v23 = v22;
  if (v20)
  {
    if (!v22)
    {
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      swift_bridgeObjectRetain();
      v28(v8, v4);
      v28(v10, v4);
      swift_bridgeObjectRelease_n();
      return v23 & 1;
    }
    if (v18 == v21 && v20 == v22)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v29 = *(void (**)(char *, uint64_t))(v5 + 8);
      v29(v8, v4);
      v29(v10, v4);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v25 = sub_1BC62D574();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(void (**)(char *, uint64_t))(v5 + 8);
      v23(v8, v4);
      v23(v10, v4);
      swift_bridgeObjectRelease_n();
      LOBYTE(v23) = 0;
      if ((v25 & 1) == 0)
        return v23 & 1;
    }
  }
  else
  {
    v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v8, v4);
    v26(v10, v4);
    if (v23)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v23) = 0;
      return v23 & 1;
    }
  }
  v30 = sub_1BC62B264();
  v31 = *(_QWORD *)(v30 + 16);
  v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v31)
  {
    v54 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1BC3BD748(0, v31, 0);
    v33 = v30 + 32;
    v34 = v54;
    do
    {
      sub_1BC34E674(v33, (uint64_t)v52);
      __swift_project_boxed_opaque_existential_1Tm(v52, v53);
      v35 = sub_1BC62AC70();
      v37 = v36;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC3BD748(0, v34[2] + 1, 1);
        v34 = v54;
      }
      v39 = v34[2];
      v38 = v34[3];
      if (v39 >= v38 >> 1)
      {
        sub_1BC3BD748(v38 > 1, v39 + 1, 1);
        v34 = v54;
      }
      v34[2] = v39 + 1;
      v40 = &v34[2 * v39];
      v40[4] = v35;
      v40[5] = v37;
      v33 += 40;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v41 = sub_1BC62B264();
  v42 = *(_QWORD *)(v41 + 16);
  if (v42)
  {
    v54 = v32;
    sub_1BC3BD748(0, v42, 0);
    v43 = v41 + 32;
    v44 = v54;
    do
    {
      sub_1BC34E674(v43, (uint64_t)v52);
      __swift_project_boxed_opaque_existential_1Tm(v52, v53);
      v45 = sub_1BC62AC70();
      v47 = v46;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC3BD748(0, v44[2] + 1, 1);
        v44 = v54;
      }
      v49 = v44[2];
      v48 = v44[3];
      if (v49 >= v48 >> 1)
      {
        sub_1BC3BD748(v48 > 1, v49 + 1, 1);
        v44 = v54;
      }
      v44[2] = v49 + 1;
      v50 = &v44[2 * v49];
      v50[4] = v45;
      v50[5] = v47;
      v43 += 40;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  LOBYTE(v23) = sub_1BC3ECDE8(v34, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23 & 1;
}

uint64_t sub_1BC43C5BC()
{
  return type metadata accessor for MedicalRecordTimelineDataSource();
}

uint64_t type metadata accessor for MedicalRecordTimelineDataSource()
{
  uint64_t result;

  result = qword_1EF42FAA8;
  if (!qword_1EF42FAA8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC43C600()
{
  unint64_t v0;

  sub_1BC357158(319, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BC43C6DC()
{
  return sub_1BC347F0C(&qword_1EF42FCD0, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineDataSource, (uint64_t)&unk_1BC640610);
}

void sub_1BC43C708()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42FD10)
  {
    sub_1BC62B288();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42FD10);
  }
}

uint64_t sub_1BC43C770(uint64_t a1)
{
  uint64_t v2;

  sub_1BC43C708();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC43C7AC()
{
  unint64_t result;

  result = qword_1EF42FD18;
  if (!qword_1EF42FD18)
  {
    type metadata accessor for MedicalRecordTimelineDataSource();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42FD18);
  }
  return result;
}

id sub_1BC43C7E4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id result;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(unint64_t, char *, uint64_t);
  __int128 v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  id v49;
  char *v50;
  uint64_t v51;
  char *v52;

  v51 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62B288();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v41 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v41 - v13;
  MEMORY[0x1E0C80A78](v12);
  v52 = (char *)&v41 - v15;
  if ((uint64_t)objc_msgSend(a1, sel_numOfRemovedRecords) < 1)
    return 0;
  v48 = v2;
  v49 = a1;
  v47 = v9;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v16 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v17 = sub_1BC62A4A8();
  v19 = v18;
  swift_bridgeObjectRelease();

  v20 = type metadata accessor for MedicalRecordTimelineHeaderItem(0);
  v21 = swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1BC62A7A8();
  v22 = (uint64_t *)(v21 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
  type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  sub_1BC347F0C(&qword_1EF42F498, type metadata accessor for MedicalRecordTimelineHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItemCell);
  *v22 = sub_1BC62ADA8();
  v22[1] = v23;
  *(_QWORD *)(v21 + 16) = v17;
  *(_QWORD *)(v21 + 24) = v19;
  *(_QWORD *)(v21 + 56) = 0;
  *(_BYTE *)(v21 + 64) = 0;
  *(_BYTE *)(v21 + 48) = 0;
  *(_QWORD *)(v21 + 32) = 0;
  *(_QWORD *)(v21 + 40) = 0;
  *(_QWORD *)(v21 + 72) = v17;
  *(_QWORD *)(v21 + 80) = v19;
  *(_QWORD *)(v21 + 88) = 0xD000000000000010;
  *(_QWORD *)(v21 + 96) = 0x80000001BC6596D0;
  sub_1BC43CDA0(0, &qword_1EF42C5F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_QWORD *)(v21 + 104) = 0;
  *(_QWORD *)(v21 + 112) = 0;
  v24 = swift_allocObject();
  v45 = xmmword_1BC639590;
  *(_OWORD *)(v24 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v24 + 56) = v20;
  *(_QWORD *)(v24 + 64) = sub_1BC347F0C(&qword_1EF42F638, type metadata accessor for MedicalRecordTimelineHeaderItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItem);
  *(_QWORD *)(v24 + 32) = v21;
  swift_retain();
  sub_1BC62A7A8();
  sub_1BC62A778();
  v48 = *(_QWORD *)(v48 + 8);
  ((void (*)(char *, uint64_t))v48)(v4, v51);
  v25 = v52;
  sub_1BC62B270();
  v46 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v46(v14, v25, v5);
  v26 = sub_1BC3B5F84(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v28 = *(_QWORD *)(v26 + 16);
  v27 = *(_QWORD *)(v26 + 24);
  if (v28 >= v27 >> 1)
    v26 = sub_1BC3B5F84(v27 > 1, v28 + 1, 1, v26);
  *(_QWORD *)(v26 + 16) = v28 + 1;
  v43 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v42 = *(_QWORD *)(v6 + 72);
  v44 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v44(v26 + v43 + v42 * v28, v14, v5);
  result = objc_msgSend(v49, sel_removedRecords);
  if (result)
  {
    v30 = result;
    sub_1BC34B6A0(0, &qword_1ED6A52D8);
    v31 = sub_1BC62C878();

    v32 = type metadata accessor for MedicalRecordTimelineRemovedRecordItem();
    v33 = (_QWORD *)swift_allocObject();
    type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell();
    sub_1BC347F0C(&qword_1EF42FD00, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineRemovedRecordItemCell);
    v33[3] = sub_1BC62ADA8();
    v33[4] = v34;
    v33[2] = v31;
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v45;
    *(_QWORD *)(v35 + 56) = v32;
    *(_QWORD *)(v35 + 64) = sub_1BC347F0C(&qword_1EF42FD38, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineRemovedRecordItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineRemovedRecordItem);
    *(_QWORD *)(v35 + 32) = v33;
    swift_retain();
    sub_1BC62A7A8();
    sub_1BC62A778();
    ((void (*)(char *, uint64_t))v48)(v4, v51);
    v36 = v50;
    sub_1BC62B270();
    v37 = v47;
    v46(v47, v36, v5);
    v39 = *(_QWORD *)(v26 + 16);
    v38 = *(_QWORD *)(v26 + 24);
    if (v39 >= v38 >> 1)
      v26 = sub_1BC3B5F84(v38 > 1, v39 + 1, 1, v26);
    *(_QWORD *)(v26 + 16) = v39 + 1;
    v44(v26 + v43 + v39 * v42, v37, v5);
    swift_release();
    swift_release();
    v40 = *(void (**)(char *, uint64_t))(v6 + 8);
    v40(v36, v5);
    v40(v52, v5);
    return (id)v26;
  }
  __break(1u);
  return result;
}

void sub_1BC43CDA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC35817C(255, (unint64_t *)&qword_1EF42ADC0);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC43CE08()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC43CE2C(char a1)
{
  return sub_1BC439518(a1);
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

void sub_1BC43CE4C(void *a1)
{
  sub_1BC4396E0(a1);
}

id sub_1BC43CE54()
{
  uint64_t v0;

  return sub_1BC439F38(v0);
}

void sub_1BC43CE5C()
{
  uint64_t v0;

  sub_1BC439DA0(v0);
}

void sub_1BC43CE64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42FD48)
  {
    sub_1BC62B2F4();
    v0 = sub_1BC62AFB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42FD48);
  }
}

uint64_t sub_1BC43CEC0(void **a1)
{
  return sub_1BC438DFC(a1);
}

void sub_1BC43CEC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42FD58)
  {
    sub_1BC43CF2C();
    v0 = sub_1BC62BF18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42FD58);
  }
}

void sub_1BC43CF2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42FD60)
  {
    sub_1BC34B6A0(255, &qword_1EF42FD68);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42FD60);
  }
}

uint64_t sub_1BC43CF90()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC43CFBC()
{
  uint64_t v0;

  sub_1BC439060(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t MedicalRecordTimelineTitleWithSubtitleItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1BC43D010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  _QWORD v7[2];
  unint64_t v8;
  unint64_t v9;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v8 = 0xD000000000000016;
  v9 = 0x80000001BC659740;
  v7[1] = *(_QWORD *)(v0 + 16);
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v5 = objc_msgSend(*(id *)(v0 + 32), sel_UUID);
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1BC43D190()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v1 = (void *)v0[4];
  v5 = (void *)v0[9];
  v2 = (void *)v0[14];
  sub_1BC62D67C();
  sub_1BC62D67C();
  v3 = v2;
  swift_retain();
  v6 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC62CEC0();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *MedicalRecordTimelineTitleWithSubtitleItem.deinit()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = (void *)v0[4];
  v2 = (void *)v0[9];
  v3 = (void *)v0[14];
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineTitleWithSubtitleItem.__deallocating_deinit()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = (void *)v0[4];
  v2 = (void *)v0[9];
  v3 = (void *)v0[14];
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC43D3C0()
{
  sub_1BC62D670();
  sub_1BC62C740();
  sub_1BC62D67C();
  sub_1BC62D67C();
  sub_1BC62CEC0();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC43D434()
{
  sub_1BC62D670();
  sub_1BC62C740();
  sub_1BC62D67C();
  sub_1BC62D67C();
  sub_1BC62CEC0();
  return sub_1BC62D6AC();
}

void sub_1BC43D4AC()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = (_QWORD *)*v0;
  sub_1BC62C740();
  v2 = (void *)v1[4];
  v6 = (void *)v1[9];
  v3 = (void *)v1[14];
  sub_1BC62D67C();
  sub_1BC62D67C();
  v4 = v3;
  swift_retain();
  v7 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC62CEC0();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_1BC43D5B4()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  sub_1BC62D670();
  v1 = (_QWORD *)*v0;
  sub_1BC62C740();
  v2 = (void *)v1[4];
  v3 = (void *)v1[9];
  v4 = (void *)v1[14];
  sub_1BC62D67C();
  sub_1BC62D67C();
  v5 = v4;
  swift_retain();
  v6 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC62CEC0();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_1BC62D6AC();
}

uint64_t sub_1BC43D6C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1BC43D6F4()
{
  return sub_1BC43D010();
}

uint64_t sub_1BC43D714(uint64_t *a1, uint64_t *a2)
{
  return _s15HealthRecordsUI42MedicalRecordTimelineTitleWithSubtitleItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

id sub_1BC43D720(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  objc_super v27;

  sub_1BC357158(0, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_1BC62BC18();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v4[OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v17 = &v4[OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext];
  v18 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (objc_class *)type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
  v27.receiver = v4;
  v27.super_class = v19;
  v20 = objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC62A988();
  v21 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC62CDF4();

  v22 = (void *)objc_opt_self();
  v23 = v20;
  v24 = objc_msgSend(v22, sel_currentTraitCollection);
  sub_1BC62BBF4();
  sub_1BC62BC48();
  sub_1BC5E5A5C((uint64_t)v15);
  sub_1BC62BC3C();
  v25 = sub_1BC62BC78();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v11, 0, 1, v25);
  MEMORY[0x1BCCF1FE0](v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

  return v23;
}

id sub_1BC43D95C(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  objc_class *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  objc_super v23;

  sub_1BC357158(0, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - v4;
  v6 = sub_1BC62BC18();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v1[OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v11 = &v1[OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext];
  v12 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (objc_class *)type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
  v23.receiver = v1;
  v23.super_class = v13;
  v14 = objc_msgSendSuper2(&v23, sel_initWithCoder_, a1);
  v15 = v14;
  if (v14)
  {
    v16 = v14;
    sub_1BC62A988();
    v17 = (id)*MEMORY[0x1E0CD2A68];
    sub_1BC62CDF4();

    v18 = (void *)objc_opt_self();
    v19 = v16;
    v20 = objc_msgSend(v18, sel_currentTraitCollection);
    sub_1BC62BBF4();
    sub_1BC62BC48();
    sub_1BC5E5A5C((uint64_t)v9);
    sub_1BC62BC3C();
    v21 = sub_1BC62BC78();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 0, 1, v21);
    MEMORY[0x1BCCF1FE0](v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  }
  return v15;
}

uint64_t sub_1BC43DB98(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC43DC08();
  return sub_1BC37AE60((uint64_t)v5);
}

uint64_t sub_1BC43DC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (**v12)(_QWORD, _QWORD);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t (**v18)(_QWORD, _QWORD);
  double v19;
  void (*v20)(uint64_t *, _QWORD);
  void *v21;
  id v22;
  void (*v23)(uint64_t *, _QWORD);
  uint64_t v24;
  void *v25;
  id v26;
  void (*v27)(uint64_t *, _QWORD);
  id v28;
  void (*v29)(uint64_t *, _QWORD);
  uint64_t v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t (**v39)(_QWORD, _QWORD);
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];
  uint64_t v50;
  uint64_t v51;

  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v38 - v2;
  v4 = sub_1BC62BBAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62BB64();
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62BD98();
  v12 = *(uint64_t (***)(_QWORD, _QWORD))(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v0 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v15, (uint64_t)v49);
  if (!v50)
    return sub_1BC37AE60((uint64_t)v49);
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v41 = v10;
    v42 = v3;
    v43 = v5;
    v44 = v4;
    v17 = v48;
    MEMORY[0x1BCCF201C]();
    swift_bridgeObjectRetain();
    sub_1BC62BD74();
    v18 = (uint64_t (**)(_QWORD, _QWORD))objc_opt_self();
    v19 = *MEMORY[0x1E0DC1420];
    v38 = *MEMORY[0x1E0DC4B10];
    v39 = v18;
    result = (uint64_t)objc_msgSend(v18, sel__preferredFontForTextStyle_weight_, v19);
    if (!result)
    {
      __break(1u);
      goto LABEL_15;
    }
    v20 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCC0();
    v20(v49, 0);
    v21 = (void *)objc_opt_self();
    v22 = objc_msgSend(v21, sel_labelColor);
    v23 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCCC();
    v23(v49, 0);
    v24 = *(_QWORD *)(v17 + 64);
    v25 = *(void **)(v17 + 72);
    v45 = v17;
    v40 = v7;
    if (v24)
    {
      if (!v25)
      {
        swift_bridgeObjectRetain();
        sub_1BC62BC9C();
        goto LABEL_10;
      }
    }
    else if (!v25)
    {
LABEL_12:
      v30 = v11;
      v50 = v11;
      v51 = MEMORY[0x1E0DC2398];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v49);
      ((void (*)(uint64_t *, char *, uint64_t))v12[2])(boxed_opaque_existential_1, v14, v11);
      MEMORY[0x1BCCF1FC8](v49);
      sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      sub_1BC62BBC4();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
      v32 = *MEMORY[0x1E0DC1C20];
      v39 = v12;
      v33 = v46;
      v34 = v47;
      v35 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 104))(v41, v32, v47);
      v36 = sub_1BC62BB70();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v42, 1, 1, v36);
      v37 = v40;
      sub_1BC62BBA0();
      sub_1BC62BB7C();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v37, v44);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v34);
      sub_1BC62CD40();
      swift_release();
      return ((uint64_t (**)(char *, uint64_t))v39)[1](v14, v30);
    }
    v26 = v25;
    sub_1BC62BD14();
LABEL_10:
    result = (uint64_t)objc_msgSend(v39, sel__preferredFontForTextStyle_weight_, v38, *MEMORY[0x1E0DC1440]);
    if (result)
    {
      v27 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
      sub_1BC62BCC0();
      v27(v49, 0);
      v28 = objc_msgSend(v21, sel_secondaryLabelColor);
      v29 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
      sub_1BC62BCCC();
      v29(v49, 0);
      goto LABEL_12;
    }
LABEL_15:
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC43E0EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC43E13C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC43DC08();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC43E1A8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC43E1F0;
}

uint64_t sub_1BC43E1F0(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC43DC08);
}

void sub_1BC43E1FC(uint64_t a1, void *a2)
{
  sub_1BC43EC40(a2);
}

uint64_t sub_1BC43E2A4(uint64_t a1, _QWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0];
  sub_1BC357158(0, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  sub_1BC43EFFC(a1, (uint64_t)&v10 - v6);
  v8 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext;
  swift_beginAccess();
  sub_1BC3AA114((uint64_t)v7, v8);
  swift_endAccess();
  sub_1BC43E384();
  return sub_1BC377E3C((uint64_t)v7, &qword_1EF42BC08, v4);
}

uint64_t sub_1BC43E384()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v1 = v0;
  v2 = sub_1BC62A970();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - v7;
  v9 = sub_1BC62ADD8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext;
  swift_beginAccess();
  sub_1BC43EFFC(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1BC377E3C((uint64_t)v8, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1BC62ADCC();
  v22 = 0;
  v23 = 0xE000000000000000;
  sub_1BC62D1D8();
  v15 = sub_1BC62C680();
  v20 = v2;
  v17 = v16;
  swift_bridgeObjectRelease();
  v22 = v15;
  v23 = v17;
  sub_1BC62C764();
  v21 = sub_1BC62A964();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v21 = sub_1BC62A958();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v18);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BC43E638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext;
  swift_beginAccess();
  return sub_1BC43EFFC(v3, a1);
}

uint64_t sub_1BC43E688(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext;
  swift_beginAccess();
  sub_1BC3AA114(a1, v3);
  swift_endAccess();
  sub_1BC43E384();
  return sub_1BC377E3C(a1, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
}

uint64_t (*sub_1BC43E704(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC43E74C;
}

uint64_t sub_1BC43E74C(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC43E384);
}

id MedicalRecordTimelineTitleWithSubtitleItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC43E7D8(uint64_t a1, void *a2)
{
  sub_1BC43EC40(a2);
}

uint64_t sub_1BC43E7FC(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t *boxed_opaque_existential_1;
  int v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  _BYTE v19[40];
  uint64_t v20[5];

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v19[-v4];
  sub_1BC357158(0, &qword_1EF42FD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2020], v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v19[-v7];
  v9 = sub_1BC62BC18();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20[3] = v11;
  v20[4] = MEMORY[0x1E0DC2018];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(boxed_opaque_existential_1, a1, v9);
  sub_1BC34E674((uint64_t)v20, (uint64_t)v19);
  sub_1BC35817C(0, &qword_1EF42FD88);
  v15 = swift_dynamicCast();
  v16 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (!v15)
  {
    v16(v8, 1, 1, v9);
    goto LABEL_5;
  }
  v16(v8, 0, 1, v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_5:
    sub_1BC377E3C((uint64_t)v8, &qword_1EF42FD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2020]);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_1BC62BC48();
  sub_1BC5E5A5C((uint64_t)v13);
  sub_1BC62BC3C();
  v17 = sub_1BC62BC78();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 0, 1, v17);
  MEMORY[0x1BCCF1FE0](v5);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
}

uint64_t _s15HealthRecordsUI42MedicalRecordTimelineTitleWithSubtitleItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;

  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || *(unsigned __int8 *)(a1 + 24) != *(unsigned __int8 *)(a2 + 24))
    return 0;
  v4 = *(void **)(a2 + 112);
  v16 = *(void **)(a2 + 72);
  v5 = *(void **)(a2 + 32);
  v14 = *(void **)(a1 + 112);
  v6 = *(void **)(a1 + 72);
  v7 = *(void **)(a1 + 32);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  v17 = v4;
  swift_retain();
  v8 = v7;
  v9 = v5;
  v10 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v14;
  swift_retain();
  v12 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v6) = sub_1BC62CEB4();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v6 & 1;
}

void sub_1BC43EC40(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  void *v7;
  id v8;
  void *v9;
  uint64_t (*v10)();
  void *v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  char *v19;
  char v20;
  void *v21;
  void *aBlock;
  uint64_t v23;
  uint64_t (*v24)();
  void *v25;
  void (*v26)(void *, uint64_t);
  uint64_t v27;
  id v28;
  uint64_t v29;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v3, (uint64_t)&aBlock);
  if (!v25)
  {
    sub_1BC37AE60((uint64_t)&aBlock);
    return;
  }
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
  v4 = swift_dynamicCast();
  if ((v4 & 1) == 0)
    return;
  v5 = v29;
  if (qword_1ED6A4878 != -1)
    v4 = swift_once();
  v29 = *(_QWORD *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v4);
  sub_1BC62AA6C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
  sub_1BC379B20((unint64_t *)&qword_1ED6A4B90, 255, v6, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();
  swift_release();
  v7 = aBlock;
  if (qword_1ED6A31B0 != -1)
    swift_once();
  v8 = *(id *)(v5 + 32);
  sub_1BC555498(v8, a1, v7);

  sub_1BC62BF0C();
  v9 = (void *)v23;
  v10 = v24;
  v11 = v25;
  if (qword_1ED6A3198 != -1)
    swift_once();
  v12 = (char *)qword_1ED6A42A0;
  v21 = v11;
  if (!v11)
  {
    v20 = 11;
    if (v9)
      goto LABEL_11;
LABEL_14:
    LOBYTE(aBlock) = v20;
    sub_1BC4E4100(3, 17, 0, (char *)&aBlock, 0);
    swift_release();

    goto LABEL_15;
  }
  sub_1BC4FC8D8(v11, (uint64_t)&aBlock);
  v20 = (char)aBlock;
  v13 = v7;
  v14 = (void *)v23;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v7 = v13;
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_14;
LABEL_11:
  v15 = *(void **)&v12[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v12;
  *(_OWORD *)(v16 + 24) = xmmword_1BC640720;
  *(_QWORD *)(v16 + 40) = 0;
  *(_BYTE *)(v16 + 48) = v20;
  v26 = sub_1BC35865C;
  v27 = v16;
  aBlock = (void *)MEMORY[0x1E0C809B0];
  v23 = 1107296256;
  v24 = sub_1BC4E2FCC;
  v25 = &block_descriptor_26;
  v17 = _Block_copy(&aBlock);
  v18 = v9;
  v19 = v12;
  swift_release();
  objc_msgSend(v15, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v18, 0, v17);
  _Block_release(v17);
  swift_release();

LABEL_15:
}

uint64_t sub_1BC43EFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC357158(0, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell()
{
  uint64_t result;

  result = qword_1EF42FE80;
  if (!qword_1EF42FE80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC43F094(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF42FD90, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineTitleWithSubtitleItem);
}

uint64_t type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC43F0E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t sub_1BC43F138@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext;
  swift_beginAccess();
  return sub_1BC43EFFC(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineTitleWithSubtitleItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_1BC43F1C0()
{
  return type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
}

void sub_1BC43F1C8()
{
  unint64_t v0;

  sub_1BC357158(319, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MedicalRecordTimelineTitleWithSubtitleItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.didSelectCell(_:in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.deselectionBehavior.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.sectionContext.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.sectionContext.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.sectionContext.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t sub_1BC43F344()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t MedicalRecordTimelineAccountUpgradeTileItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC43F3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  void *v9;
  id v10;
  _QWORD v11[2];

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 16);
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_9:
    v8 = (id)MEMORY[0x1BCCF24CC](0, v5);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v5 + 32);
LABEL_6:
    v9 = v8;
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v9, sel_identifier);

    sub_1BC62A79C();
    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v11[0] = 0xD000000000000013;
    v11[1] = 0x80000001BC659820;
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    return v11[0];
  }
  __break(1u);
  return result;
}

void sub_1BC43F52C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;

  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1BC62D3B8())
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1BC62D688();
    return;
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)MEMORY[0x1BCCF24CC](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(id *)(v1 + 32);
LABEL_6:
    v4 = v3;
    swift_bridgeObjectRelease();
    sub_1BC62D688();
    v5 = v4;
    sub_1BC62CEC0();

    return;
  }
  __break(1u);
}

uint64_t MedicalRecordTimelineAccountUpgradeTileItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineAccountUpgradeTileItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC43F6B4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  id v4;
  void *v5;
  id v6;

  sub_1BC62D670();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 16);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1BC62D688();
    return sub_1BC62D6AC();
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCF24CC](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v1 + 32);
LABEL_6:
    v5 = v4;
    swift_bridgeObjectRelease();
    sub_1BC62D688();
    v6 = v5;
    sub_1BC62CEC0();

    return sub_1BC62D6AC();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC43F7D0()
{
  return sub_1BC43F6B4();
}

void sub_1BC43F7F0()
{
  sub_1BC43F52C();
}

uint64_t sub_1BC43F810()
{
  sub_1BC62D670();
  sub_1BC43F52C();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC43F84C()
{
  return sub_1BC43F3AC();
}

uint64_t sub_1BC43F86C(uint64_t *a1, unint64_t *a2)
{
  return _s15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeTileItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BC43F988(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC43FA08();
  return sub_1BC384EB4((uint64_t)v5, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC43FA08()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  id v4;
  char *v5;
  _BYTE v6[24];
  uint64_t v7;

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item];
  swift_beginAccess();
  sub_1BC37ADB0(v1, (uint64_t)v6);
  if (!v7)
    return sub_1BC384EB4((uint64_t)v6, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    swift_release();
    v3 = OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_hasRegisteredForNotifications;
    if ((v0[OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_hasRegisteredForNotifications] & 1) == 0)
    {
      v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      if (qword_1EF428680 != -1)
      {
        v5 = sel_reloadDataSource;
        swift_once();
      }
      objc_msgSend(v4, sel_addObserver_selector_name_object_, v0, v5);

      v0[v3] = 1;
    }
    return (uint64_t)objc_msgSend(v0, sel_setNeedsUpdateConfiguration);
  }
  return result;
}

uint64_t sub_1BC43FB5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC43FBAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC43FA08();
  return sub_1BC384EB4(a1, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t (*sub_1BC43FC28(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC43FC70;
}

uint64_t sub_1BC43FC70(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC43FA08();
  return result;
}

uint64_t sub_1BC43FD3C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell();
  v1 = objc_msgSendSuper2(&v12, sel__bridgedConfigurationState);
  sub_1BC62BC0C();

  v2 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v2, (uint64_t)&v9);
  if (*((_QWORD *)&v10 + 1))
  {
    sub_1BC37AE0C();
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    if (swift_dynamicCast())
    {
      v3 = v8;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BC384EB4((uint64_t)&v9, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  }
  v3 = 0;
LABEL_6:
  if (qword_1EF4285B8 != -1)
    swift_once();
  v4 = (void *)qword_1EF42FE90;
  if (v3)
  {
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    sub_1BC44141C(&qword_1EF42FEA0, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeTileItem);
    v5 = v4;
    swift_retain();
    sub_1BC62D184();
  }
  else
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
    v6 = (id)qword_1EF42FE90;
  }
  sub_1BC62BC30();
  return swift_release();
}

uint64_t sub_1BC43FF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a1;
  v4[9] = a4;
  v5 = sub_1BC62BC18();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = sub_1BC62C944();
  v4[14] = sub_1BC62C938();
  return swift_task_switch();
}

uint64_t sub_1BC43FFD8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC440038()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;

  v1 = *(void **)(v0 + 72);
  swift_release();
  v2 = objc_msgSend(v1, sel__bridgedConfigurationState);
  sub_1BC62BC0C();

  if (qword_1EF4285B8 != -1)
    swift_once();
  sub_1BC62BC24();
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_1BC44155C(v0 + 16);
    goto LABEL_7;
  }
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    v3 = 1;
    goto LABEL_8;
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  swift_retain();
  swift_release();
  sub_1BC3AB4AC();
  swift_release();
  v3 = 0;
LABEL_8:
  **(_BYTE **)(v0 + 64) = v3;
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC440198()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_1BC4402C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE v6[24];
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v1, (uint64_t)v6);
  if (!v7)
  {
    sub_1BC384EB4((uint64_t)v6, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    return 0;
  }
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v2 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v3 > 1;
}

uint64_t sub_1BC4403CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v3, (uint64_t)v14);
  if (!v15)
  {
    sub_1BC384EB4((uint64_t)v14, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    goto LABEL_13;
  }
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    v12 = sub_1BC62A7B4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  v4 = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  result = swift_release();
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 == 1)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (v11)
        goto LABEL_5;
    }
    goto LABEL_12;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1BCCF24CC](0, v4);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v4 + 32);
LABEL_8:
    v7 = v6;
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v7, sel_identifier);

    sub_1BC62A79C();
    v9 = sub_1BC62A7B4();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
  __break(1u);
  return result;
}

void sub_1BC4405AC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  char *v25;
  char *v26;
  id v27;
  uint64_t v28;
  uint64_t v29[3];
  char v30;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v29 - v2;
  v4 = sub_1BC62A7B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_tileView;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_tileView])
    return;
  v9 = (char *)objc_allocWithZone((Class)type metadata accessor for AccountUpgradeTileView());
  v10 = v0;
  v11 = sub_1BC4734AC((uint64_t)v10, v9);
  v12 = *(void **)&v0[v8];
  *(_QWORD *)&v0[v8] = v11;

  v13 = objc_msgSend(v10, sel_contentView);
  if (!*(_QWORD *)&v0[v8])
  {
    __break(1u);
    goto LABEL_14;
  }
  v14 = v13;
  objc_msgSend(v13, sel_addSubview_);

  v15 = objc_msgSend(v10, sel_contentView);
  v16 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
  objc_msgSend(v15, sel_setBackgroundColor_, v16);

  v17 = *(void **)&v0[v8];
  if (!v17)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v17, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48C8]);
  v18 = *(void **)&v0[v8];
  if (!v18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v19 = v18;
  v20 = objc_msgSend(v10, sel_contentView);
  objc_msgSend(v19, sel_hk_alignConstraintsWithView_, v20);

  v21 = *(char **)&v0[v8];
  if (!v21)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v22 = *(_QWORD *)&v21[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 24];
  v23 = *(_QWORD *)&v21[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 32];
  __swift_project_boxed_opaque_existential_1Tm(&v21[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider], v22);
  v24 = *(void (**)(uint64_t, uint64_t))(v23 + 48);
  v25 = v21;
  v24(v22, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BC384EB4((uint64_t)v3, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v26 = (char *)sub_1BC406D84();
    v27 = sub_1BC406BD4();
    objc_msgSend(v26, sel_setImage_, v27);

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    if (qword_1ED6A31F0 != -1)
      swift_once();
    v28 = qword_1ED6A4498;
    v29[1] = 0;
    v29[2] = 0;
    v29[0] = 1;
    v30 = 1;
    v26 = v25;
    sub_1BC514C4C((uint64_t)v7, v29, v28, v26);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

}

uint64_t sub_1BC4408D0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD v31[7];
  _BYTE v32[24];
  uint64_t v33;

  v1 = v0;
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v31 - v3;
  v5 = sub_1BC62BC18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v0, sel__bridgedConfigurationState);
  sub_1BC62BC0C();

  if (qword_1EF4285B8 != -1)
    swift_once();
  sub_1BC62BC24();
  if (!v33)
  {
    sub_1BC44155C((uint64_t)v32);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
  if ((swift_dynamicCast() & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v31[4];
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = *(_QWORD *)(v10 + 24);
  swift_beginAccess();
  v12 = MEMORY[0x1BCCF37A4](v11 + 56);
  if (!v12)
    return swift_release();
  v13 = (void *)v12;
  v14 = *(void **)(v11 + 40);
  type metadata accessor for ClinicalAccountManager();
  v15 = (_QWORD *)swift_allocObject();
  v16 = MEMORY[0x1E0DEE9E8];
  v15[5] = 0;
  v15[6] = 0;
  v15[4] = v16;
  v15[2] = v14;
  v15[3] = objc_msgSend(v14, sel_clinicalAccountStore);
  v17 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v17, (uint64_t)v32);
  if (!v33)
  {
    sub_1BC384EB4((uint64_t)v32, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    goto LABEL_16;
  }
  sub_1BC37AE0C();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_16;
  v18 = *(_QWORD *)(v31[0] + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v18 >> 62)
    goto LABEL_27;
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    if (v19 > 1)
    {
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v1;
      v21 = v1;
      ClinicalAccountManager.presentAccounts(presentingViewController:completion:)(v13, (uint64_t)sub_1BC4416D4, v20);
      swift_release();
      swift_release();

      return swift_release();
    }
LABEL_16:
    v23 = *(_QWORD *)(v10 + 16);
    if (v23 >> 62)
      break;
    v1 = *(void **)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v1)
      goto LABEL_24;
LABEL_18:
    if ((v23 & 0xC000000000000001) != 0)
    {
      v24 = (id)MEMORY[0x1BCCF24CC](0, v23);
      goto LABEL_21;
    }
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v24 = *(id *)(v23 + 32);
LABEL_21:
      v25 = v24;
      swift_bridgeObjectRelease();
      type metadata accessor for ClinicalAccountUpgradeManager();
      swift_allocObject();
      v26 = v25;
      swift_retain();
      v27 = v13;
      v28 = sub_1BC54FA50(v26, (uint64_t)v15, v27);

      swift_release();
      v29 = sub_1BC62C95C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 1, 1, v29);
      v30 = (_QWORD *)swift_allocObject();
      v30[2] = 0;
      v30[3] = 0;
      v30[4] = v28;
      sub_1BC5C2784((uint64_t)v4, (uint64_t)&unk_1EF42BFB8, (uint64_t)v30);

      swift_release();
      swift_release();
      return swift_release();
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    v19 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1BC62D3B8();
  if (v1)
    goto LABEL_18;
LABEL_24:
  swift_release();

  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC440D90()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  _BYTE v15[32];
  uint64_t v16;
  char v17[24];
  uint64_t v18;

  v1 = v0;
  v2 = sub_1BC62BC18();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = objc_msgSend(v1, sel__bridgedConfigurationState);
  sub_1BC62BC0C();

  if (qword_1EF4285B8 != -1)
    swift_once();
  sub_1BC62BC24();
  if (v18)
  {
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v7 = v16;
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
      v8 = objc_msgSend(*(id *)(*(_QWORD *)(v7 + 24) + 40), sel_healthStore);
      type metadata accessor for AccountStatusSummaryTileSettingsManager();
      inited = swift_initStackObject();
      v10 = MEMORY[0x1E0DEE9E0];
      *(_QWORD *)(inited + 16) = v8;
      *(_QWORD *)(inited + 24) = v10;
      sub_1BC5DF494();
      v11 = *(_QWORD *)(v7 + 16);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v1;
      swift_bridgeObjectRetain();
      v13 = v1;
      sub_1BC5DFCC0(v11, (uint64_t)sub_1BC441610, v12);
      swift_bridgeObjectRelease();
      swift_release();
      swift_setDeallocating();

      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    sub_1BC44155C((uint64_t)v17);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BC440F74(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - v6;
  v8 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1BC62C944();
  v9 = a1;
  v10 = sub_1BC62C938();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v9;
  sub_1BC5C28D8((uint64_t)v7, a3, (uint64_t)v11);
  return swift_release();
}

id MedicalRecordTimelineAccountUpgradeTileItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC441110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeTileItemCell, a3);
  return sub_1BC62B1D4();
}

BOOL sub_1BC441174()
{
  return sub_1BC4402C8();
}

uint64_t sub_1BC441198@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC4403CC(a1);
}

uint64_t sub_1BC4411B8()
{
  return sub_1BC4408D0();
}

uint64_t sub_1BC4411D8()
{
  return sub_1BC440D90();
}

uint64_t sub_1BC4411F8()
{
  uint64_t result;

  result = sub_1BC62C650();
  qword_1EF42FE90 = result;
  return result;
}

uint64_t _s15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeTileItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, unint64_t a2)
{
  unint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  void *v9;
  id v10;
  char v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = (void *)sub_1BC62D3B8();
    if (!v4)
      goto LABEL_7;
  }
  else
  {
    v4 = *(void **)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4)
      goto LABEL_7;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x1BCCF24CC](0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    v5 = *(id *)(v3 + 32);
  }
  v4 = v5;
LABEL_7:
  swift_bridgeObjectRelease();
  a2 = *(_QWORD *)(a2 + 16);
  if (!(a2 >> 62))
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_9;
LABEL_20:
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_21;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  if (!result)
    goto LABEL_20;
LABEL_9:
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_27:
    v8 = (id)MEMORY[0x1BCCF24CC](0, a2);
    goto LABEL_12;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(a2 + 32);
LABEL_12:
    v9 = v8;
    swift_bridgeObjectRelease();
    if (v4)
    {
      if (v9)
      {
        sub_1BC441704();
        v10 = v4;
        v11 = sub_1BC62CEB4();

LABEL_22:
        return v11 & 1;
      }
LABEL_21:
      v11 = 0;
      v9 = v4;
      goto LABEL_22;
    }
    if (v9)
    {
      v11 = 0;
      goto LABEL_22;
    }
LABEL_23:
    v11 = 1;
    return v11 & 1;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC4413F8()
{
  return sub_1BC44141C(&qword_1EF42FEA8, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeTileItem);
}

uint64_t sub_1BC44141C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    result = MEMORY[0x1BCCF35C4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC441458@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineAccountUpgradeTileItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t method lookup function for MedicalRecordTimelineAccountUpgradeTileItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItemCell.shouldSelectCell(_:in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t sub_1BC44155C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC441598();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC441598()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42FFD8)
  {
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, &qword_1EF42FFD8);
  }
}

uint64_t sub_1BC4415EC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC441610()
{
  uint64_t v0;

  return sub_1BC440F74(*(void **)(v0 + 16), (uint64_t)&unk_1E74DAC58, (uint64_t)&unk_1EF42FFE8);
}

uint64_t sub_1BC44163C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC3781C0;
  return sub_1BC43FF60(a1, v4, v5, v6);
}

uint64_t sub_1BC4416A8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4416D4()
{
  uint64_t v0;

  return sub_1BC440F74(*(void **)(v0 + 16), (uint64_t)&unk_1E74DACD0, (uint64_t)&unk_1EF42FFF0);
}

unint64_t sub_1BC441704()
{
  unint64_t result;

  result = qword_1EF431480;
  if (!qword_1EF431480)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF431480);
  }
  return result;
}

id sub_1BC441744(void *a1)
{
  return sub_1BC441758(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store, sub_1BC506DFC);
}

id sub_1BC441758(void *a1, _QWORD *a2, uint64_t (*a3)(id))
{
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;

  v5 = *(void **)(v3 + *a2);
  v6 = a1;
  v7 = v5;
  v8 = a3(v6);
  v10 = v9;

  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  if (v11)
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v12, sel_setDisplayItemType_, 15);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v13 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v14 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setTitle_, v14, 0xE000000000000000);

    v15 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setSubtitle_, v15);

    objc_msgSend(v12, sel_setSeparatorStyle_, 0);
    objc_msgSend(v12, sel_setSeparatorHidden_, 0);
    objc_msgSend(v12, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

id sub_1BC441954(void *a1)
{
  return sub_1BC441968(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store, sub_1BC506E08);
}

id sub_1BC441968(void *a1, _QWORD *a2, uint64_t (*a3)(id))
{
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;

  v5 = *(void **)(v3 + *a2);
  v6 = a1;
  v7 = v5;
  v8 = a3(v6);
  v10 = v9;

  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  if (v11)
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v12, sel_setDisplayItemType_, 15);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v13 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v14 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setTitle_, v14, 0xE000000000000000);

    v15 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setSubtitle_, v15);

    objc_msgSend(v12, sel_setSeparatorStyle_, 0);
    objc_msgSend(v12, sel_setSeparatorHidden_, 0);
    objc_msgSend(v12, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

id sub_1BC441B64()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  objc_super v13;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter);
  }
  else
  {
    v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context);
    v6 = (objc_class *)type metadata accessor for AllergyReactionFormatter();
    v7 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store] = v4;
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context] = v5;
    v13.receiver = v7;
    v13.super_class = v6;
    v8 = v4;
    v9 = objc_msgSendSuper2(&v13, sel_init);
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

uint64_t sub_1BC441C30(void *a1)
{
  id v2;
  void *v3;
  unint64_t v4;
  id v5;
  id v6;
  uint64_t v7;

  v2 = objc_msgSend(a1, sel_reactions);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = v2;
  sub_1BC34B6A0(0, &qword_1EF430000);
  v4 = sub_1BC62C878();

  v5 = sub_1BC441B64();
  v6 = v5;
  v7 = sub_1BC442B94(v4, (uint64_t)v6);
  swift_bridgeObjectRelease();

  return v7;
}

id AllergyRecordFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store);
}

uint64_t AllergyRecordFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context);
}

id AllergyRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id AllergyRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for AllergyRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1BC441DEC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC441FD8(a1);
  if (!v2)
    return sub_1BC441E4C(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC441E4C(void *a1)
{
  uint64_t inited;
  uint64_t i;
  void *v4;
  id v5;
  uint64_t v7;

  sub_1BC42567C();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC63C410;
  *(_QWORD *)(inited + 32) = sub_1BC441758(a1, &OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store, sub_1BC506DFC);
  *(_QWORD *)(inited + 40) = sub_1BC441968(a1, &OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store, sub_1BC506E08);
  *(_QWORD *)(inited + 48) = sub_1BC442E04(a1);
  *(_QWORD *)(inited + 56) = sub_1BC442FE4(a1);
  *(_QWORD *)(inited + 64) = sub_1BC61F5A0(a1);
  *(_QWORD *)(inited + 72) = sub_1BC4431C4(a1);
  *(_QWORD *)(inited + 80) = sub_1BC443330(a1);
  *(_QWORD *)(inited + 88) = sub_1BC44349C(a1);
  *(_QWORD *)(inited + 96) = sub_1BC52CE74(a1);
  *(_QWORD *)(inited + 104) = sub_1BC546064(a1);
  sub_1BC62C890();
  v7 = MEMORY[0x1E0DEE9D8];
  for (i = 32; i != 112; i += 8)
  {
    v4 = *(void **)(inited + i);
    if (v4)
    {
      v5 = v4;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BC441FD8(void *a1)
{
  uint64_t v1;
  unint64_t v2;
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  int v49;
  void *v50;
  id v51;
  id v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;

  v1 = (uint64_t)a1;
  v2 = MEMORY[0x1E0DEE9D8];
  v61 = MEMORY[0x1E0DEE9D8];
  v3 = objc_msgSend(a1, sel_reactions);
  if (!v3)
    goto LABEL_66;
  v4 = v3;
  sub_1BC34B6A0(0, &qword_1EF430000);
  v5 = sub_1BC62C878();

  swift_bridgeObjectRetain();
  v59 = (char *)sub_1BC441B64();

  v60 = v2;
  if (v5 >> 62)
  {
LABEL_59:
    swift_bridgeObjectRetain_n();
    v6 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_4;
LABEL_60:

    swift_bridgeObjectRelease();
    v45 = MEMORY[0x1E0DEE9D8];
LABEL_61:
    swift_bridgeObjectRelease_n();
    v46 = swift_bridgeObjectRetain();
    sub_1BC3BB208(v46);
    if (v45 >> 62)
    {
      swift_bridgeObjectRetain();
      v47 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v47 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v47)
    {
      v48 = sub_1BC442E04((void *)v1);
      if (v48)
      {
LABEL_72:
        v52 = v48;
        MEMORY[0x1BCCF1B30](v52);
        if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();

        return v61;
      }
      v49 = 0;
LABEL_67:
      v50 = (void *)sub_1BC52CE74(v1);
      if (v50)
      {
        v51 = v50;
        MEMORY[0x1BCCF1B30](v51);
        if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();

        if (!v49)
          return v61;
      }
      v48 = (id)sub_1BC546064(v1);
      if (!v48)
        return v61;
      goto LABEL_72;
    }
LABEL_66:
    v49 = 1;
    goto LABEL_67;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_60;
LABEL_4:
  v54 = v1;
  v57 = v5;
  v58 = v5 & 0xC000000000000001;
  v1 = 4;
  v55 = OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context;
  v56 = v6;
  while (1)
  {
    if (v58)
      v7 = (id)MEMORY[0x1BCCF24CC](v1 - 4, v5);
    else
      v7 = *(id *)(v5 + 8 * v1);
    v8 = v7;
    v9 = v1 - 3;
    if (__OFADD__(v1 - 4, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    v10 = *(_QWORD *)&v59[v55];
    if (v10 == 1)
    {
      v11 = sub_1BC4E78A8(v7);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v12 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v13 = v8;
      swift_bridgeObjectRetain();
      v14 = objc_msgSend(v13, sel_severity, 0xE000000000000000);
      if (v14
        && (v15 = v14,
            v16 = objc_msgSend(v14, sel_localizedPreferredName),
            v15,
            v16))
      {
        v17 = sub_1BC62C680();
        v19 = v18;

        if ((v19 & 0x2000000000000000) != 0)
          v20 = HIBYTE(v19) & 0xF;
        else
          v20 = v17 & 0xFFFFFFFFFFFFLL;

        if (v20)
        {
LABEL_34:
          v29 = HIBYTE(v19) & 0xF;
          if ((v19 & 0x2000000000000000) == 0)
            v29 = v17 & 0xFFFFFFFFFFFFLL;
          if (!v29)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v30 = (void *)qword_1ED6A5528;
            swift_bridgeObjectRetain();
            v31 = v30;
            swift_bridgeObjectRetain();
            v32 = sub_1BC62A4A8();
            v34 = v33;
            swift_bridgeObjectRelease();

            goto LABEL_44;
          }
          goto LABEL_47;
        }
        swift_bridgeObjectRelease();
      }
      else
      {

      }
      v17 = 0;
      v19 = 0xE000000000000000;
      goto LABEL_34;
    }
    if (v10)
      break;
    v11 = sub_1BC4E78A8(v7);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v21 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRetain();
    v13 = v8;
    v22 = objc_msgSend(v13, sel_severity, 0xE000000000000000);
    if (v22
      && (v23 = v22,
          v24 = objc_msgSend(v22, sel_localizedPreferredName),
          v23,
          v24))
    {
      v25 = sub_1BC62C680();
      v27 = v26;

      if ((v27 & 0x2000000000000000) != 0)
        v28 = HIBYTE(v27) & 0xF;
      else
        v28 = v25 & 0xFFFFFFFFFFFFLL;

      if (!v28)
      {
        swift_bridgeObjectRelease();
        v25 = 0;
        v27 = 0xE000000000000000;
      }
      v2 = MEMORY[0x1E0DEE9D8];
    }
    else
    {

      v25 = 0;
      v27 = 0xE000000000000000;
    }
    v35 = HIBYTE(v27) & 0xF;
    if ((v27 & 0x2000000000000000) == 0)
      v35 = v25 & 0xFFFFFFFFFFFFLL;
    if (!v35)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = (void *)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      v40 = v39;
      swift_bridgeObjectRetain();
      v32 = sub_1BC62A4A8();
      v34 = v41;
      swift_bridgeObjectRelease();

LABEL_44:
      v42 = HIBYTE(v34) & 0xF;
      if ((v34 & 0x2000000000000000) == 0)
        v42 = v32 & 0xFFFFFFFFFFFFLL;
      if (v42)
      {
LABEL_47:
        v36 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
        objc_msgSend(v36, sel_setDisplayItemType_, 15);
        swift_bridgeObjectRetain();
        v43 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
        objc_msgSend(v36, sel_setTitle_, v43);

        v44 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
        objc_msgSend(v36, sel_setSubtitle_, v44);

        objc_msgSend(v36, sel_setSeparatorStyle_, 0);
        objc_msgSend(v36, sel_setSeparatorHidden_, 0);
        objc_msgSend(v36, sel_setExtraTopPadding_, 0);
        swift_bridgeObjectRelease_n();

      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v36 = 0;
      }
      v2 = MEMORY[0x1E0DEE9D8];
      goto LABEL_50;
    }
    v36 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v36, sel_setDisplayItemType_, 15);
    swift_bridgeObjectRetain();
    v37 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setTitle_, v37);

    v38 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setSubtitle_, v38);

    objc_msgSend(v36, sel_setSeparatorStyle_, 0);
    objc_msgSend(v36, sel_setSeparatorHidden_, 0);
    objc_msgSend(v36, sel_setExtraTopPadding_, 0);
    swift_bridgeObjectRelease_n();

LABEL_50:
    v5 = v57;
    if (v11)
    {
      MEMORY[0x1BCCF1B30](v11);
      if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }
    if (v36)
    {
      MEMORY[0x1BCCF1B30](v36);
      if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }

    sub_1BC3BB208(v2);
    ++v1;
    if (v9 == v56)
    {

      swift_bridgeObjectRelease();
      v45 = v60;
      v1 = v54;
      goto LABEL_61;
    }
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

id AllergyRecordFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AllergyRecordFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AllergyRecordFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AllergyRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC442A84()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store);
}

uint64_t sub_1BC442A98()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context);
}

id sub_1BC442AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for AllergyRecordFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1BC442B28(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC441FD8(a1);
  if (!v2)
    return sub_1BC441E4C(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC442B94(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;

  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    if (!v4)
      return v5;
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BDBBC(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v6 = 0;
    v5 = v13;
    v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context);
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1BCCF24CC](v6, a1);
      else
        v8 = *(id *)(a1 + 8 * v6 + 32);
      v9 = v8;
      if (v7 >= 2)
        goto LABEL_18;
      a2 = sub_1BC4E7B4C(v8);

      v11 = *(_QWORD *)(v13 + 16);
      v10 = *(_QWORD *)(v13 + 24);
      if (v11 >= v10 >> 1)
        sub_1BC3BDBBC(v10 > 1, v11 + 1, 1);
      ++v6;
      *(_QWORD *)(v13 + 16) = v11 + 1;
      *(_QWORD *)(v13 + 8 * v11 + 32) = a2;
      if (v4 == v6)
        return v5;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_18:
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AllergyRecordFormatter()
{
  return objc_opt_self();
}

unint64_t sub_1BC442D50(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC442D74();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC442D74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF430060;
  if (!qword_1EF430060)
  {
    v1 = type metadata accessor for AllergyRecordFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF430060);
  }
  return result;
}

uint64_t method lookup function for AllergyRecordFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AllergyRecordFormatter.structuredItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AllergyRecordFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of AllergyRecordFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

id sub_1BC442E04(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v1 = a1;
  v2 = sub_1BC506E14(v1);
  v4 = v3;

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v7 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1BC442FE4(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v1 = a1;
  v2 = sub_1BC506E20(v1);
  v4 = v3;

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v7 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1BC4431C4(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_recordedDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1BC443330(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_onsetDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1BC44349C(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_lastOccurrenceDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t static HKQuery.sortDescriptorsForCreationDate(ascending:)(char a1)
{
  return sub_1BC443684(a1);
}

id static HKQuery.predicateForRecordsCreated(within:)(uint64_t a1)
{
  return sub_1BC443638(a1);
}

id static HKQuery.predicateForRecordsModified(within:)(uint64_t a1)
{
  return sub_1BC443638(a1);
}

id sub_1BC443638(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = sub_1BC62C680();
  v4 = _sSo7HKQueryC15HealthRecordsUIE19predicateForKeyPath_6withinSo11NSPredicateCSS_10Foundation12DateIntervalVtFZ_0(v2, v3, a1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static HKQuery.sortDescriptorsForRecordModifiedDate(ascending:)(char a1)
{
  return sub_1BC443684(a1);
}

uint64_t sub_1BC443684(char a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;

  sub_1BC34D844();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC6396B0;
  sub_1BC62C680();
  v3 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithKey_ascending_, v4, a1 & 1);

  *(_QWORD *)(v2 + 32) = v5;
  sub_1BC62C890();
  return v2;
}

id _sSo7HKQueryC15HealthRecordsUIE19predicateForKeyPath_6withinSo11NSPredicateCSS_10Foundation12DateIntervalVtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v24 = a1;
  v25 = a3;
  v5 = sub_1BC62A760();
  v6 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34D844();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC639570;
  v28 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  sub_1BC38DB44(0, (unint64_t *)&qword_1ED6A4E70, (void (*)(uint64_t))sub_1BC36446C);
  v27 = v10;
  v11 = swift_allocObject();
  v26 = xmmword_1BC6395A0;
  *(_OWORD *)(v11 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1BC3644C0();
  *(_QWORD *)(v11 + 64) = v12;
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1BC62A304();
  v13 = sub_1BC62A700();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  v15 = sub_1BC34B6A0(0, &qword_1EF430090);
  *(_QWORD *)(v11 + 96) = v15;
  v16 = sub_1BC444098();
  *(_QWORD *)(v11 + 104) = v16;
  *(_QWORD *)(v11 + 72) = v13;
  *(_QWORD *)(v9 + 32) = sub_1BC62CA64();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v26;
  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 64) = v12;
  *(_QWORD *)(v17 + 32) = v24;
  *(_QWORD *)(v17 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1BC62A2EC();
  v18 = sub_1BC62A700();
  v14(v8, v23);
  *(_QWORD *)(v17 + 96) = v15;
  *(_QWORD *)(v17 + 104) = v16;
  *(_QWORD *)(v17 + 72) = v18;
  *(_QWORD *)(v9 + 40) = sub_1BC62CA64();
  v29 = v9;
  sub_1BC62C890();
  v19 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v19);

  return v20;
}

id _sSo7HKQueryC15HealthRecordsUIE025predicateForRecentAccountC09accountIdSo11NSPredicateC10Foundation4UUIDV_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  _QWORD v18[2];

  v0 = sub_1BC62A760();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC62A31C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34D844();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC639570;
  v9 = (void *)objc_opt_self();
  v10 = (void *)sub_1BC62A784();
  v11 = objc_msgSend(v9, sel_predicateForRecordsFromClinicalAccountIdentifier_, v10);

  *(_QWORD *)(v8 + 32) = v11;
  sub_1BC62A730();
  static DateInterval.weekInterval(ending:)((uint64_t)v3, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v12 = sub_1BC62C680();
  v14 = _sSo7HKQueryC15HealthRecordsUIE19predicateForKeyPath_6withinSo11NSPredicateCSS_10Foundation12DateIntervalVtFZ_0(v12, v13, (uint64_t)v7);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)(v8 + 40) = v14;
  v18[1] = v8;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v15 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v15);

  return v16;
}

id _sSo7HKQueryC15HealthRecordsUIE027predicateForRelevantAccountC09accountIdSo11NSPredicateC10Foundation4UUIDV_tFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  char *v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;

  v54 = a1;
  v1 = sub_1BC62A478();
  v59 = *(_QWORD *)(v1 - 8);
  v60 = v1;
  v2 = MEMORY[0x1E0C80A78](v1);
  v53 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v61 = (char *)&v43 - v4;
  v5 = sub_1BC62A8D4();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62A760();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v52 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v51 = (char *)&v43 - v11;
  sub_1BC62A754();
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6360]), sel_init);
  v13 = objc_msgSend(v12, sel_currentCalendar);

  v44 = v7;
  sub_1BC62A874();

  sub_1BC38DB44(0, &qword_1EF429B18, (void (*)(uint64_t))MEMORY[0x1E0CB11B8]);
  v50 = v14;
  v15 = sub_1BC62A8C8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = *(unsigned __int8 *)(v16 + 80);
  v19 = (v18 + 32) & ~v18;
  v49 = v18 | 7;
  v20 = swift_allocObject();
  v48 = xmmword_1BC6398E0;
  *(_OWORD *)(v20 + 16) = xmmword_1BC6398E0;
  v47 = *MEMORY[0x1E0CB1158];
  v21 = *(void (**)(uint64_t))(v16 + 104);
  v21(v20 + v19);
  v46 = *MEMORY[0x1E0CB1160];
  v21(v20 + v19 + v17);
  v45 = *MEMORY[0x1E0CB1130];
  v21(v20 + v19 + 2 * v17);
  sub_1BC5237DC(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v22 = v51;
  sub_1BC62A85C();
  swift_bridgeObjectRelease();
  v23 = v52;
  v24 = v22;
  sub_1BC62A6DC();
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v48;
  ((void (*)(uint64_t, _QWORD, uint64_t))v21)(v25 + v19, v47, v15);
  ((void (*)(uint64_t, _QWORD, uint64_t))v21)(v25 + v19 + v17, v46, v15);
  ((void (*)(uint64_t, _QWORD, uint64_t))v21)(v25 + v19 + 2 * v17, v45, v15);
  sub_1BC5237DC(v25);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v26 = v53;
  v27 = v44;
  sub_1BC62A85C();
  swift_bridgeObjectRelease();
  sub_1BC34D844();
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BC639570;
  v29 = (void *)objc_opt_self();
  v30 = (void *)sub_1BC62A784();
  v31 = objc_msgSend(v29, sel_predicateForRecordsFromClinicalAccountIdentifier_, v30);

  *(_QWORD *)(v28 + 32) = v31;
  v32 = (void *)sub_1BC62A40C();
  v33 = v61;
  v34 = (void *)sub_1BC62A40C();
  v35 = objc_msgSend(v29, sel_predicateForRecordsWithSortDateFromStartDateComponents_endDateComponents_, v32, v34);

  *(_QWORD *)(v28 + 40) = v35;
  v62 = v28;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v36 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v37 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v36);

  v38 = v60;
  v39 = *(void (**)(char *, uint64_t))(v59 + 8);
  v39(v26, v60);
  v40 = v56;
  v41 = *(void (**)(char *, uint64_t))(v55 + 8);
  v41(v23, v56);
  v39(v33, v38);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v58);
  v41(v24, v40);
  return v37;
}

unint64_t sub_1BC444098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF430098;
  if (!qword_1EF430098)
  {
    v1 = sub_1BC34B6A0(255, &qword_1EF430090);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1EF430098);
  }
  return result;
}

void AddAccountFeedItemData.onboardingType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AddAccountFeedItemData.onboardingType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AddAccountFeedItemData.onboardingType.modify())()
{
  return nullsub_1;
}

uint64_t sub_1BC444118()
{
  sub_1BC62D670();
  sub_1BC62C740();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC444174()
{
  return sub_1BC62C740();
}

uint64_t sub_1BC444198()
{
  sub_1BC62D670();
  sub_1BC62C740();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4441F0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC62D430();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BC444240(char *a1@<X8>)
{
  strcpy(a1, "onboardingType");
  a1[15] = -18;
}

uint64_t sub_1BC444268()
{
  return 0x696472616F626E6FLL;
}

uint64_t sub_1BC44428C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC62D430();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BC4442E0()
{
  sub_1BC444474();
  return sub_1BC62D700();
}

uint64_t sub_1BC444308()
{
  sub_1BC444474();
  return sub_1BC62D70C();
}

_BYTE *AddAccountFeedItemData.init(onboardingType:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t AddAccountFeedItemData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1BC444608(0, &qword_1ED6A32D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC444474();
  sub_1BC62D6DC();
  if (!v2)
  {
    sub_1BC4444B8();
    sub_1BC62D460();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_1BC444474()
{
  unint64_t result;

  result = qword_1ED6A4988;
  if (!qword_1ED6A4988)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC640D54, &type metadata for AddAccountFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A4988);
  }
  return result;
}

unint64_t sub_1BC4444B8()
{
  unint64_t result;

  result = qword_1ED6A3318;
  if (!qword_1ED6A3318)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for OnboardingSuggestedActionType, &type metadata for OnboardingSuggestedActionType);
    atomic_store(result, (unint64_t *)&qword_1ED6A3318);
  }
  return result;
}

uint64_t AddAccountFeedItemData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1BC444608(0, &qword_1ED6A3700, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC444474();
  sub_1BC62D6F4();
  v11 = v8;
  sub_1BC444664();
  sub_1BC4446B8();
  sub_1BC62D4FC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1BC444608(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC444474();
    v7 = a3(a1, &type metadata for AddAccountFeedItemData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC444664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A34F0)
  {
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A34F0);
  }
}

unint64_t sub_1BC4446B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED6A34F8;
  if (!qword_1ED6A34F8)
  {
    sub_1BC444664();
    v2 = v1;
    v3 = sub_1BC444718();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED6A34F8);
  }
  return result;
}

unint64_t sub_1BC444718()
{
  unint64_t result;

  result = qword_1ED6A34E8;
  if (!qword_1ED6A34E8)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for OnboardingSuggestedActionType, &type metadata for OnboardingSuggestedActionType);
    atomic_store(result, (unint64_t *)&qword_1ED6A34E8);
  }
  return result;
}

BOOL static AddAccountFeedItemData.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 > 0xFD)
    return v3 > 0xFD;
  if (v3 > 0xFD)
    return 0;
  if ((v2 & 0x80) != 0)
    return (v3 & 0x80) != 0 && ((((v2 & 1) == 0) ^ v3) & 1) != 0;
  else
    return (v3 & 0x80) == 0 && ((((v2 & 1) == 0) ^ v3) & 1) != 0;
}

uint64_t sub_1BC4447C8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AddAccountFeedItemData.init(from:)(a1, a2);
}

uint64_t sub_1BC4447DC(_QWORD *a1)
{
  return AddAccountFeedItemData.encode(to:)(a1);
}

uint64_t sub_1BC4447F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 <= 0xFD)
  {
    if (v3 <= 0xFD)
    {
      if ((v2 & 0x80) != 0)
      {
        if ((v3 & 0x80) != 0 && ((v2 & 1) == 0) != (v3 & 1))
          return 1;
      }
      else if ((v3 & 0x80) == 0 && ((((v2 & 1) == 0) ^ v3) & 1) != 0)
      {
        return 1;
      }
    }
  }
  else if (v3 > 0xFD)
  {
    return 1;
  }
  return 0;
}

uint64_t getEnumTagSinglePayload for AddAccountFeedItemData(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  int v7;

  if (!a2)
    return 0;
  if (a2 < 0x7E)
    goto LABEL_17;
  if (a2 + 130 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 130) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 130;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 130;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 130;
  }
LABEL_17:
  v6 = *a1;
  if ((v6 & 0x7E) != 0)
    v7 = 126 - (v6 & 0x7E | (v6 >> 7));
  else
    v7 = -1;
  return (v7 + 1);
}

uint64_t storeEnumTagSinglePayload for AddAccountFeedItemData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 130 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 130) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7D)
    return ((uint64_t (*)(void))((char *)&loc_1BC444944 + 4 * byte_1BC640BB5[v4]))();
  *a1 = a2 - 126;
  return ((uint64_t (*)(void))((char *)sub_1BC444978 + 4 * byte_1BC640BB0[v4]))();
}

uint64_t sub_1BC444978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC444980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC444988);
  return result;
}

uint64_t sub_1BC44499C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4449A4);
  *(_BYTE *)result = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
  return result;
}

uint64_t sub_1BC4449A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4449B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AddAccountFeedItemData()
{
  return &type metadata for AddAccountFeedItemData;
}

uint64_t storeEnumTagSinglePayload for AddAccountFeedItemData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC444A0C + 4 * byte_1BC640BBA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC444A2C + 4 * byte_1BC640BBF[v4]))();
}

_BYTE *sub_1BC444A0C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC444A2C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC444A34(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC444A3C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC444A44(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC444A4C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AddAccountFeedItemData.CodingKeys()
{
  return &type metadata for AddAccountFeedItemData.CodingKeys;
}

unint64_t sub_1BC444A6C()
{
  unint64_t result;

  result = qword_1EF4300A0;
  if (!qword_1EF4300A0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC640D2C, &type metadata for AddAccountFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4300A0);
  }
  return result;
}

unint64_t sub_1BC444AB4()
{
  unint64_t result;

  result = qword_1ED6A4998;
  if (!qword_1ED6A4998)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC640C64, &type metadata for AddAccountFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A4998);
  }
  return result;
}

unint64_t sub_1BC444AFC()
{
  unint64_t result;

  result = qword_1ED6A4990;
  if (!qword_1ED6A4990)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC640C8C, &type metadata for AddAccountFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A4990);
  }
  return result;
}

uint64_t type metadata accessor for RecordDetailsDataSource()
{
  uint64_t result;

  result = qword_1EF4300C0;
  if (!qword_1EF4300C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC444B7C()
{
  return swift_initClassMetadata2();
}

void *sub_1BC444BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v6;

  v0 = sub_1BC62B3C0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62B36C();
  v4 = (void *)sub_1BC62B3B4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_contentInsets);
  objc_msgSend(v4, sel_setContentInsets_, 10.0);
  return v4;
}

uint64_t sub_1BC444C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  NSObject *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  NSObject *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t aBlock;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  void *v31;
  _QWORD *v32;

  v1 = v0;
  v2 = sub_1BC62C4D0();
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = dispatch_group_create();
  v6 = swift_allocObject();
  sub_1BC41EB3C(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC639590;
  sub_1BC4451CC((_QWORD *)(v7 + 32));
  *(_QWORD *)(v6 + 16) = v7;
  v24[1] = v6 + 16;
  dispatch_group_enter(v5);
  v8 = qword_1EF4300A8;
  v9 = *(void **)(v0 + qword_1EF4300A8);
  v10 = *(_QWORD *)(v0 + qword_1EF4300B0);
  v11 = *(_QWORD *)(v1 + qword_1EF4300B8);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v6;
  v12[3] = v1;
  v12[4] = v5;
  v31 = sub_1BC446254;
  v32 = v12;
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = sub_1BC4450BC;
  v30 = &block_descriptor_27;
  v13 = _Block_copy(&aBlock);
  v14 = v9;
  swift_retain();
  swift_retain();
  v15 = v5;
  swift_release();
  objc_msgSend(v14, sel_fetchStructuredFieldItemsWithHealthRecordsStore_conceptStore_completion_, v10, v11, v13);
  _Block_release(v13);

  dispatch_group_enter(v15);
  v16 = *(void **)(v1 + v8);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v6;
  v17[3] = v1;
  v17[4] = v15;
  v31 = sub_1BC4462B0;
  v32 = v17;
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = sub_1BC38A4C0;
  v30 = &block_descriptor_9_3;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v19 = v15;
  v20 = v16;
  swift_release();
  objc_msgSend(v20, sel_fetchDetailItemsWithHealthRecordsStore_conceptStore_completion_, v10, v11, v18);
  _Block_release(v18);

  sub_1BC62CBFC();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v4 = sub_1BC62CC74();
  v22 = v25;
  v21 = v26;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v25 + 104))(v4, *MEMORY[0x1E0DEF740], v26);
  LOBYTE(v10) = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v22 + 8))(v4, v21);
  if ((v10 & 1) != 0)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BC62B2E8();

    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC444FC4(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v5 = MEMORY[0x1E0DEE9D8];
  v10 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v6; ++i)
    {
      v8 = swift_bridgeObjectRetain();
      sub_1BC3BB208(v8);
    }
    swift_bridgeObjectRelease();
    v5 = v10;
  }
  swift_retain();
  sub_1BC4462BC(v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  v9 = swift_bridgeObjectRetain();
  sub_1BC3BB400(v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a4);
}

uint64_t sub_1BC4450BC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1BC3DD918(0, (unint64_t *)&qword_1EF42C668, (unint64_t *)&qword_1EF4299F0, (uint64_t)off_1E74D0698, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v2 = sub_1BC62C878();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1BC445138(unint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v6;

  swift_retain();
  sub_1BC44673C(a1);
  swift_release();
  swift_beginAccess();
  v6 = swift_bridgeObjectRetain();
  sub_1BC3BB400(v6);
  swift_endAccess();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a4);
}

uint64_t sub_1BC4451CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t result;

  v3 = qword_1EF4300A8;
  v4 = objc_msgSend(*(id *)(v1 + qword_1EF4300A8), sel_meaningfulDateTitle);
  v5 = sub_1BC62C680();
  v7 = v6;

  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v9 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BC6395A0;
    v11 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    v12 = sub_1BC3644C0();
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 32) = v5;
    *(_QWORD *)(v10 + 40) = v7;
    v13 = objc_msgSend(*(id *)(v1 + v3), sel_meaningfulDateString, 0xE000000000000000);
    v14 = sub_1BC62C680();
    v16 = v15;

    *(_QWORD *)(v10 + 96) = v11;
    *(_QWORD *)(v10 + 104) = v12;
    *(_QWORD *)(v10 + 72) = v14;
    *(_QWORD *)(v10 + 80) = v16;
    v17 = sub_1BC62C6B0();
    v19 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(*(id *)(v1 + v3), sel_meaningfulDateString);
    v17 = sub_1BC62C680();
    v19 = v21;

  }
  v22 = objc_msgSend(*(id *)(v1 + v3), sel_preferredDisplayName);
  v23 = sub_1BC62C680();
  v25 = v24;

  v26 = type metadata accessor for RecordDetailTitleItem();
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v23;
  v27[3] = v25;
  v27[4] = v17;
  v27[5] = v19;
  a1[3] = v26;
  result = sub_1BC379B20(&qword_1EF430300, v28, (uint64_t (*)(uint64_t))type metadata accessor for RecordDetailTitleItem, (uint64_t)&unk_1BC640F54);
  a1[4] = result;
  *a1 = v27;
  return result;
}

void sub_1BC445454()
{
  sub_1BC445484();
}

void sub_1BC44546C()
{
  sub_1BC445484();
}

void sub_1BC445484()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC4454AC()
{
  uint64_t v0;

}

uint64_t sub_1BC4454E8()
{
  uint64_t v0;

  v0 = sub_1BC62B69C();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC445544()
{
  return type metadata accessor for RecordDetailsDataSource();
}

uint64_t type metadata accessor for RecordDetailTitleItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC44556C(uint64_t a1, uint64_t a2)
{
  return sub_1BC445BB0(a1, a2, (void (*)(void))type metadata accessor for RecordDetailTitleCell, &qword_1EF4302E0, (uint64_t)&unk_1BC640EF4);
}

uint64_t sub_1BC445588()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  void *v9;
  id v10;
  void (*v11)(uint64_t *, _QWORD);
  void *v12;
  void (*v13)(uint64_t *, _QWORD);
  unint64_t v14;
  uint64_t v15;
  id v16;
  void (*v17)(uint64_t *, _QWORD);
  id v18;
  void (*v19)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  _QWORD v25[2];
  uint64_t v26[3];
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = sub_1BC62BD98();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI21RecordDetailTitleCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v6, (uint64_t)v26);
  if (!v27)
    return sub_1BC37AE60((uint64_t)v26);
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for RecordDetailTitleItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v8 = v25[1];
    MEMORY[0x1BCCF201C]();
    swift_bridgeObjectRetain();
    sub_1BC62BD74();
    v9 = (void *)objc_opt_self();
    v10 = objc_msgSend(v9, sel_labelColor);
    v11 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCCC();
    v11(v26, 0);
    v12 = (void *)objc_opt_self();
    result = (uint64_t)objc_msgSend(v12, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4A88], 1024);
    if (result)
    {
      v13 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
      sub_1BC62BCC0();
      v13(v26, 0);
      v14 = *(_QWORD *)(v8 + 40);
      v15 = HIBYTE(v14) & 0xF;
      if ((v14 & 0x2000000000000000) == 0)
        v15 = *(_QWORD *)(v8 + 32) & 0xFFFFFFFFFFFFLL;
      if (v15)
      {
        swift_bridgeObjectRetain();
        sub_1BC62BC9C();
        v16 = objc_msgSend(v9, sel_secondaryLabelColor);
        v17 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
        sub_1BC62BCCC();
        v17(v26, 0);
        v18 = objc_msgSend(v12, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
        v19 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
        sub_1BC62BCC0();
        v19(v26, 0);
        sub_1BC62BD50();
      }
      v27 = v2;
      v28 = MEMORY[0x1E0DC2398];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
      (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(boxed_opaque_existential_1, v5, v2);
      MEMORY[0x1BCCF1FC8](v26);
      sub_1BC359F44();
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1BC6395A0;
      *(_QWORD *)(v21 + 32) = sub_1BC62C680();
      *(_QWORD *)(v21 + 40) = v22;
      *(_QWORD *)(v21 + 48) = 0x695464726F636552;
      *(_QWORD *)(v21 + 56) = 0xEF6C6C6543656C74;
      v23 = (void *)sub_1BC62C86C();
      v24 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v1, sel_setAccessibilityIdentifier_, v24);
      swift_release();
      swift_bridgeObjectRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_1BC445A00()
{
  return sub_1BC405B94(type metadata accessor for RecordDetailTitleCell);
}

uint64_t type metadata accessor for RecordDetailTitleCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC445A3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC405C48(&OBJC_IVAR____TtC15HealthRecordsUI21RecordDetailTitleCell_item, a1);
}

uint64_t sub_1BC445A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC405CA8(a1, a2, a3, &OBJC_IVAR____TtC15HealthRecordsUI21RecordDetailTitleCell_item, (void (*)(uint64_t))sub_1BC445588);
}

uint64_t (*sub_1BC445A5C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC445AA4;
}

uint64_t sub_1BC445AA4(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC445588);
}

uint64_t sub_1BC445AB0()
{
  uint64_t v0;
  id v1;
  void *v3;
  uint64_t v4;

  v4 = sub_1BC62D718();
  sub_1BC62C764();
  v3 = *(void **)(v0 + 16);
  sub_1BC3DD918(0, &qword_1EF4302F0, &qword_1EF4302F8, 0x1E0CB67E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v1 = v3;
  sub_1BC62C6E0();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BC445B50()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReferenceRangeItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC445B94(uint64_t a1, uint64_t a2)
{
  return sub_1BC445BB0(a1, a2, (void (*)(void))type metadata accessor for ReferenceRangeCell, &qword_1EF4302E8, (uint64_t)&unk_1BC640E64);
}

uint64_t sub_1BC445BB0(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, uint64_t a5)
{
  uint64_t v8;

  a3();
  sub_1BC379B20(a4, v8, (uint64_t (*)(uint64_t))a3, a5);
  return sub_1BC62ADA8();
}

uint64_t sub_1BC445C04()
{
  return sub_1BC445AB0();
}

id sub_1BC445C24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell____lazy_storage___expandedRangeValueView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell____lazy_storage___expandedRangeValueView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell____lazy_storage___expandedRangeValueView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ExpandedRangeValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC445CB8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  _BYTE v19[24];
  uint64_t v20;

  v1 = v0;
  v2 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v2, (uint64_t)v19);
  if (v20)
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    type metadata accessor for ReferenceRangeItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = sub_1BC445C24();
      v4 = *(_QWORD *)(v18 + 16);
      if (v4
        && (v5 = objc_msgSend((id)objc_opt_self(), sel_referenceRangeViewDataFromInspectableValueInRange_, v4)) != 0)
      {
        v6 = v5;
        v7 = v5;
        v8 = sub_1BC400110();
        sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
        v9 = v7;
        v10 = (void *)sub_1BC62CDDC();
        v11 = (void *)sub_1BC62CDDC();
        v12 = sub_1BC34A5FC(v10, v11);

        objc_msgSend(v8, sel_setAttributedText_, v12);
        v13 = v9;
        sub_1BC52EBE8(v6);

      }
      else
      {
        v13 = 0;
      }
      sub_1BC400858();

      sub_1BC359F44();
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1BC6395A0;
      *(_QWORD *)(v14 + 32) = sub_1BC62C680();
      *(_QWORD *)(v14 + 40) = v15;
      *(_QWORD *)(v14 + 48) = 0xD000000000000012;
      *(_QWORD *)(v14 + 56) = 0x80000001BC640E30;
      v16 = (void *)sub_1BC62C86C();
      v17 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v1, sel_setAccessibilityIdentifier_, v17);
      swift_release();
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v19);
  }
}

id sub_1BC445F7C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  objc_super v17;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell____lazy_storage___expandedRangeValueView] = 0;
  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell_item];
  v10 = (objc_class *)type metadata accessor for ReferenceRangeCell();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v17.receiver = v4;
  v17.super_class = v10;
  v11 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  v12 = objc_msgSend(v11, sel_contentView);
  v13 = sub_1BC445C24();
  objc_msgSend(v12, sel_addSubview_, v13);

  v14 = sub_1BC445C24();
  v15 = objc_msgSend(v11, sel_contentView);
  objc_msgSend(v14, sel_hk_alignConstraintsWithView_insets_, v15, 16.0, 16.0, 16.0, 16.0);

  return v11;
}

id sub_1BC446154()
{
  return sub_1BC405B94(type metadata accessor for ReferenceRangeCell);
}

uint64_t type metadata accessor for ReferenceRangeCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC4461B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC405C48(&OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell_item, a1);
}

uint64_t sub_1BC4461C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC405CA8(a1, a2, a3, &OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell_item, (void (*)(uint64_t))sub_1BC445CB8);
}

uint64_t (*sub_1BC4461D8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC446220;
}

uint64_t sub_1BC446220(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC445CB8);
}

uint64_t sub_1BC44622C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC446254(uint64_t a1)
{
  uint64_t v1;

  sub_1BC444FC4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t objectdestroy_2Tm_1()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1BC4462B0(unint64_t a1)
{
  uint64_t v1;

  sub_1BC445138(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(NSObject **)(v1 + 32));
}

void sub_1BC4462BC(unint64_t a1)
{
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  __int128 v48;
  const __CFString *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58[3];
  _QWORD *v59;

  v2 = v1;
  v3 = a1;
  v59 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    if (v4)
      goto LABEL_3;
LABEL_28:
    swift_bridgeObjectRelease();
    return;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_28;
LABEL_3:
  v46 = v2;
  v54 = v3 & 0xC000000000000001;
  v49 = CFSTR("UIA.Health.HealthRecords");
  v5 = 4;
  v48 = xmmword_1BC6395A0;
  v47 = v4;
  while (1)
  {
    if (v54)
      v6 = (id)MEMORY[0x1BCCF24CC](v5 - 4, v3);
    else
      v6 = *(id *)(v3 + 8 * v5);
    v2 = v6;
    v7 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (objc_msgSend(v6, sel_displayItemType) != (id)15)
    {
      v57 = 0;
      v55 = 0u;
      v56 = 0u;
      goto LABEL_19;
    }
    v8 = objc_msgSend(v2, sel_title);
    if (!v8)
      break;
    v9 = v8;
    v10 = sub_1BC62C680();
    v52 = v11;
    v53 = v10;

    v12 = objc_msgSend(v2, sel_subtitle);
    if (v12)
    {
      v13 = v12;
      v14 = sub_1BC62C680();
      v50 = v15;
      v51 = v14;

    }
    else
    {
      v50 = 0;
      v51 = 0;
    }
    v16 = v3;
    v17 = objc_msgSend(v2, sel_title, v46);
    if (!v17)
      goto LABEL_30;
    v18 = v17;
    sub_1BC62C680();

    sub_1BC359F44();
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v48;
    *(_QWORD *)(v19 + 32) = sub_1BC62C680();
    *(_QWORD *)(v19 + 40) = v20;
    v21 = (void *)sub_1BC62C650();
    v22 = objc_msgSend(v21, sel_removeSpecialCharactersAndWhiteSpaces);

    v23 = sub_1BC62C680();
    v25 = v24;

    *(_QWORD *)&v58[0] = v23;
    *((_QWORD *)&v58[0] + 1) = v25;
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v26 = *((_QWORD *)&v58[0] + 1);
    *(_QWORD *)(v19 + 48) = *(_QWORD *)&v58[0];
    *(_QWORD *)(v19 + 56) = v26;
    v27 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v28 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (!v28)
      goto LABEL_31;
    v29 = sub_1BC62C680();
    v31 = v30;
    swift_bridgeObjectRelease();

    v32 = type metadata accessor for TitleSubtitleDetailItem(0);
    v33 = (_QWORD *)swift_allocObject();
    sub_1BC62A7A8();
    v34 = v52;
    v33[2] = v53;
    v33[3] = v34;
    v35 = v50;
    v33[4] = v51;
    v33[5] = v35;
    v33[6] = 0;
    v33[7] = MEMORY[0x1E0DEE9D8];
    v33[8] = v29;
    v33[9] = v31;
    *((_QWORD *)&v56 + 1) = v32;
    v57 = sub_1BC379B20(&qword_1EF42B7C0, 255, type metadata accessor for TitleSubtitleDetailItem, (uint64_t)&unk_1BC63DA50);
    *(_QWORD *)&v55 = v33;
    v3 = v16;
    v4 = v47;
LABEL_19:

    if (*((_QWORD *)&v56 + 1))
    {
      sub_1BC34E718(&v55, (uint64_t)v58);
      sub_1BC34E718(v58, (uint64_t)&v55);
      v36 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v36 = sub_1BC3B5CEC(0, v36[2] + 1, 1, v36);
        v59 = v36;
      }
      v38 = v36[2];
      v37 = v36[3];
      if (v38 >= v37 >> 1)
        v59 = sub_1BC3B5CEC((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
      v39 = *((_QWORD *)&v56 + 1);
      v40 = v57;
      v41 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v55, *((uint64_t *)&v56 + 1));
      v42 = MEMORY[0x1E0C80A78](v41);
      v44 = (char *)&v46 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v45 + 16))(v44, v42);
      sub_1BC5EE8E8(v38, (uint64_t)v44, (uint64_t *)&v59, v39, v40);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v55);
    }
    else
    {
      sub_1BC37AE60((uint64_t)&v55);
    }
    ++v5;
    if (v7 == v4)
      goto LABEL_28;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_1BC44673C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  const __CFString *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62[3];
  _QWORD *v63;

  v2 = v1;
  v3 = a1;
  v63 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    if (v4)
      goto LABEL_3;
LABEL_30:
    swift_bridgeObjectRelease();
    return;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_30;
LABEL_3:
  v50 = v2;
  v58 = v3 & 0xC000000000000001;
  v53 = CFSTR("UIA.Health.HealthRecords");
  v5 = 4;
  v52 = xmmword_1BC6395A0;
  v57 = v4;
  v51 = v3;
  while (1)
  {
    v2 = v5 - 4;
    if (v58)
      v6 = (id)MEMORY[0x1BCCF24CC](v5 - 4, v3);
    else
      v6 = *(id *)(v3 + 8 * v5);
    v7 = v6;
    v8 = v5 - 3;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    v9 = objc_msgSend(v6, sel_displayItemType);
    if (v9 == (id)6)
    {
      v18 = objc_msgSend(v7, sel_chartValueWithRange);
      v19 = type metadata accessor for ReferenceRangeItem();
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v18;
      *((_QWORD *)&v60 + 1) = v19;
      v61 = sub_1BC379B20(&qword_1EF430308, v21, (uint64_t (*)(uint64_t))type metadata accessor for ReferenceRangeItem, (uint64_t)&unk_1BC640EC4);
      *(_QWORD *)&v59 = v20;
      goto LABEL_21;
    }
    if (v9 != (id)15)
    {
      v61 = 0;
      v59 = 0u;
      v60 = 0u;
      goto LABEL_21;
    }
    v10 = objc_msgSend(v7, sel_title);
    if (!v10)
      break;
    v11 = v10;
    v12 = sub_1BC62C680();
    v55 = v13;
    v56 = v12;

    v14 = objc_msgSend(v7, sel_subtitle);
    if (v14)
    {
      v15 = v14;
      v54 = sub_1BC62C680();
      v17 = v16;

    }
    else
    {
      v54 = 0;
      v17 = 0;
    }
    v22 = objc_msgSend(v7, sel_title, v50);
    if (!v22)
      goto LABEL_32;
    v23 = v22;
    sub_1BC62C680();

    sub_1BC359F44();
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v52;
    *(_QWORD *)(v24 + 32) = sub_1BC62C680();
    *(_QWORD *)(v24 + 40) = v25;
    v26 = (void *)sub_1BC62C650();
    v27 = objc_msgSend(v26, sel_removeSpecialCharactersAndWhiteSpaces);

    v28 = sub_1BC62C680();
    v30 = v29;

    *(_QWORD *)&v62[0] = v28;
    *((_QWORD *)&v62[0] + 1) = v30;
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v31 = *((_QWORD *)&v62[0] + 1);
    *(_QWORD *)(v24 + 48) = *(_QWORD *)&v62[0];
    *(_QWORD *)(v24 + 56) = v31;
    v32 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v33 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (!v33)
      goto LABEL_33;
    v34 = sub_1BC62C680();
    v36 = v35;
    swift_bridgeObjectRelease();

    v37 = type metadata accessor for TitleSubtitleDetailItem(0);
    v38 = (_QWORD *)swift_allocObject();
    sub_1BC62A7A8();
    v39 = v55;
    v38[2] = v56;
    v38[3] = v39;
    v38[4] = v54;
    v38[5] = v17;
    v38[6] = 0;
    v38[7] = MEMORY[0x1E0DEE9D8];
    v38[8] = v34;
    v38[9] = v36;
    *((_QWORD *)&v60 + 1) = v37;
    v61 = sub_1BC379B20(&qword_1EF42B7C0, 255, type metadata accessor for TitleSubtitleDetailItem, (uint64_t)&unk_1BC63DA50);
    *(_QWORD *)&v59 = v38;
    v3 = v51;
    v4 = v57;
LABEL_21:

    if (*((_QWORD *)&v60 + 1))
    {
      sub_1BC34E718(&v59, (uint64_t)v62);
      sub_1BC34E718(v62, (uint64_t)&v59);
      v40 = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v40 = sub_1BC3B5CEC(0, v40[2] + 1, 1, v40);
        v63 = v40;
      }
      v42 = v40[2];
      v41 = v40[3];
      if (v42 >= v41 >> 1)
        v63 = sub_1BC3B5CEC((_QWORD *)(v41 > 1), v42 + 1, 1, v40);
      v43 = *((_QWORD *)&v60 + 1);
      v44 = v61;
      v45 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v59, *((uint64_t *)&v60 + 1));
      v46 = MEMORY[0x1E0C80A78](v45);
      v48 = (char *)&v50 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v49 + 16))(v48, v46);
      sub_1BC5EE8E8(v42, (uint64_t)v48, (uint64_t *)&v63, v43, v44);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v59);
      v4 = v57;
    }
    else
    {
      sub_1BC37AE60((uint64_t)&v59);
    }
    ++v5;
    if (v8 == v4)
      goto LABEL_30;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

double sub_1BC446C38()
{
  double result;

  result = 8.0;
  xmmword_1EF459DF0 = xmmword_1BC6404C0;
  *(_OWORD *)&qword_1EF459E00 = xmmword_1BC640F90;
  return result;
}

uint64_t sub_1BC446C58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(void **)(v3 + 32);
  v9 = *(void **)(v3 + 40);
  v10 = *(void **)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_QWORD *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  v15 = *(_QWORD *)(v3 + 88);
  v16 = *(_BYTE *)(v3 + 100);
  v17 = *(_DWORD *)(v3 + 96);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v11;
  *(_QWORD *)(a2 + 64) = v12;
  *(_QWORD *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = v14;
  *(_QWORD *)(a2 + 88) = v15;
  *(_BYTE *)(a2 + 100) = v16;
  *(_DWORD *)(a2 + 96) = v17;
  return sub_1BC3EE064(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1BC446CF4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[12];
  int v33;
  char v34;

  v18 = *(_QWORD *)(a1 + 8);
  v19 = *(_QWORD *)a1;
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 16);
  v14 = *(void **)(a1 + 40);
  v15 = *(void **)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(void **)(a1 + 48);
  v2 = *(_QWORD *)(a1 + 80);
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 64);
  v3 = *(_BYTE *)(a1 + 100);
  v4 = *(_DWORD *)(a1 + 96);
  v5 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  v6 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  v31 = *(_QWORD *)v5;
  v23 = *(_QWORD *)(v5 + 24);
  v24 = *(_QWORD *)(v5 + 16);
  v21 = *(void **)(v5 + 40);
  v22 = *(void **)(v5 + 32);
  v20 = *(void **)(v5 + 48);
  v7 = *(_QWORD *)(v5 + 64);
  v29 = *(_QWORD *)(v5 + 56);
  v30 = *(_QWORD *)(v5 + 8);
  v8 = *(_QWORD *)(v5 + 72);
  v27 = *(_QWORD *)(v5 + 80);
  v28 = *(_QWORD *)(v5 + 88);
  v25 = *(_BYTE *)(v5 + 100);
  v26 = *(_DWORD *)(v5 + 96);
  *(_QWORD *)v5 = v19;
  *(_QWORD *)(v5 + 8) = v18;
  *(_QWORD *)(v5 + 16) = v17;
  *(_QWORD *)(v5 + 24) = v16;
  *(_QWORD *)(v5 + 32) = v15;
  *(_QWORD *)(v5 + 40) = v14;
  *(_QWORD *)(v5 + 48) = v13;
  *(_QWORD *)(v5 + 56) = v12;
  *(_QWORD *)(v5 + 64) = v11;
  *(_QWORD *)(v5 + 72) = v10;
  *(_QWORD *)(v5 + 80) = v2;
  *(_QWORD *)(v5 + 88) = v6;
  *(_DWORD *)(v5 + 96) = v4;
  *(_BYTE *)(v5 + 100) = v3;
  sub_1BC3EE064(v19, v18, v17, v16, v15, v14, v13);
  sub_1BC3EE064(v31, v30, v24, v23, v22, v21, v20);
  sub_1BC3EDFF4(v31, v30, v24, v23, v22, v21, v20);
  v32[0] = v31;
  v32[1] = v30;
  v32[2] = v24;
  v32[3] = v23;
  v32[4] = v22;
  v32[5] = v21;
  v32[6] = v20;
  v32[7] = v29;
  v32[8] = v7;
  v32[9] = v8;
  v32[10] = v27;
  v32[11] = v28;
  v34 = v25;
  v33 = v26;
  sub_1BC446F3C((uint64_t)v32);
  return sub_1BC3EDFF4(v31, v30, v24, v23, v22, v21, v20);
}

void sub_1BC446F3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int8x16_t v29;
  uint64x2_t v30;
  int16x8_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  _QWORD v64[12];
  char v65;
  unsigned __int32 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  char v94;

  v2 = *(_QWORD *)(a1 + 8);
  v59 = *(_QWORD *)(a1 + 16);
  v60 = *(void **)(a1 + 32);
  v61 = *(_QWORD *)a1;
  v3 = *(void **)(a1 + 48);
  v62 = *(void **)(a1 + 40);
  v63 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v8 = *(unsigned int *)(a1 + 96) | ((unint64_t)*(unsigned __int8 *)(a1 + 100) << 32);
  v9 = v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  v10 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  v11 = v2;
  v12 = *(_QWORD *)v9;
  v13 = *(_QWORD *)(v9 + 8);
  v15 = *(_QWORD *)(v9 + 16);
  v14 = *(_QWORD *)(v9 + 24);
  v17 = *(void **)(v9 + 32);
  v16 = *(void **)(v9 + 40);
  v18 = *(void **)(v9 + 48);
  v19 = *(_QWORD *)(v9 + 56);
  v20 = *(_QWORD *)(v9 + 64);
  v21 = *(_QWORD *)(v9 + 72);
  v22 = *(unsigned int *)(v9 + 96) | ((unint64_t)*(unsigned __int8 *)(v9 + 100) << 32);
  v23 = v8;
  v24 = HIDWORD(v8);
  v25 = *(_QWORD *)(v9 + 80);
  v26 = *(_QWORD *)(v9 + 88);
  v57 = v10;
  v58 = v7;
  if (v11)
  {
    v54 = v22;
    v67 = v61;
    v68 = v11;
    v69 = v59;
    v70 = v63;
    v71 = v60;
    v72 = v62;
    v73 = v3;
    v74 = v4;
    v75 = v5;
    v76 = v7;
    v77 = v6;
    v78 = v10;
    v79 = v8;
    v80 = BYTE4(v8);
    v27 = v6;
    v28 = HIDWORD(v8);
    v56 = v8;
    if (v13)
    {
      v64[0] = v12;
      v64[1] = v13;
      v64[2] = v15;
      v64[3] = v14;
      v64[4] = v17;
      v64[5] = v16;
      v64[6] = v18;
      v64[7] = v19;
      v64[8] = v20;
      v64[9] = v21;
      v64[10] = v25;
      v64[11] = v26;
      v65 = v54 & 1;
      v29.i64[0] = 0xFFFFFFFFFFLL;
      v29.i64[1] = 0xFFFFFFFFFFLL;
      v30 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v54), v29);
      v31 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v30, (uint64x2_t)xmmword_1BC63CFC0), (int32x4_t)vshlq_u64(v30, (uint64x2_t)xmmword_1BC63CFB0));
      *(int8x8_t *)v31.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v31), (int8x8_t)0x1000100010001);
      v66 = vmovn_s16(v31).u32[0];
      v32 = v3;
      sub_1BC3EE064(v61, v11, v59, v63, v60, v62, v3);
      sub_1BC3EE064(v61, v11, v59, v63, v60, v62, v3);
      v55 = _s15HealthRecordsUI33UserDomainConceptFeedItemViewDataV2eeoiySbAC_ACtFZ_0((uint64_t)&v67, (uint64_t)v64);
      v33 = v71;
      v34 = v72;
      v35 = v73;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC3EDFF4(v61, v11, v59, v63, v60, v62, v32);
      if ((v55 & 1) != 0)
        return;
LABEL_9:
      sub_1BC449148();
      return;
    }
    v51 = v26;
    v52 = v25;
    v53 = v27;
    v36 = v5;
    v38 = v61;
    v43 = v20;
    v44 = v12;
    v39 = v59;
    v41 = v63;
    v42 = v28;
    v37 = v60;
    v40 = v62;
    v49 = v18;
    v50 = v19;
    v47 = v17;
    v48 = v16;
    v45 = v15;
    v46 = v14;
    sub_1BC3EE064(v61, v11, v59, v63, v60, v62, v3);
    v20 = v43;
    v12 = v44;
    v15 = v45;
    v14 = v46;
    v17 = v47;
    v16 = v48;
    v18 = v49;
    v19 = v50;
    v22 = v54;
    v23 = v56;
    LOBYTE(v24) = v42;
LABEL_8:
    v67 = v38;
    v68 = v11;
    v69 = v39;
    v70 = v41;
    v71 = v37;
    v72 = v40;
    v73 = v3;
    v74 = v4;
    v75 = v36;
    v76 = v58;
    v77 = v53;
    v78 = v57;
    v79 = v23;
    v80 = v24;
    v81 = v12;
    v82 = v13;
    v83 = v15;
    v84 = v14;
    v85 = v17;
    v86 = v16;
    v87 = v18;
    v88 = v19;
    v89 = v20;
    v90 = v21;
    v91 = v52;
    v92 = v51;
    v93 = v22;
    v94 = BYTE4(v22);
    sub_1BC3EE064(v12, v13, v15, v14, v17, v16, v18);
    sub_1BC449AF4((uint64_t)&v67);
    goto LABEL_9;
  }
  v51 = v26;
  v52 = v25;
  v53 = v6;
  v36 = v5;
  v37 = v60;
  v38 = v61;
  v39 = v59;
  v40 = v62;
  v41 = v63;
  if (v13)
    goto LABEL_8;
}

uint64_t sub_1BC4472F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(void **)(v3 + 32);
  v9 = *(void **)(v3 + 40);
  v10 = *(void **)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_QWORD *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  v15 = *(_QWORD *)(v3 + 88);
  v16 = *(_BYTE *)(v3 + 100);
  v17 = *(_DWORD *)(v3 + 96);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_BYTE *)(a1 + 100) = v16;
  *(_DWORD *)(a1 + 96) = v17;
  return sub_1BC3EE064(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1BC447388(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  int v34;
  void *v35;
  _QWORD v36[12];
  int v37;
  char v38;

  v2 = *((_QWORD *)a1 + 2);
  v31 = *(__int128 *)((char *)a1 + 24);
  v32 = *a1;
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_QWORD *)a1 + 8);
  v29 = *(__int128 *)((char *)a1 + 72);
  v30 = a1[3];
  v5 = *((_QWORD *)a1 + 11);
  v6 = *((_BYTE *)a1 + 100);
  v7 = *((_DWORD *)a1 + 24);
  v8 = v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  swift_beginAccess();
  v10 = *(_QWORD *)v8;
  v9 = *(_QWORD *)(v8 + 8);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = *(_QWORD *)(v8 + 24);
  v13 = *(void **)(v8 + 32);
  v14 = *(void **)(v8 + 40);
  v35 = v14;
  v15 = *(void **)(v8 + 48);
  v16 = *(_QWORD *)(v8 + 56);
  v17 = *(_QWORD *)(v8 + 64);
  v18 = *(_QWORD *)(v8 + 88);
  v25 = *(_QWORD *)(v8 + 72);
  v26 = *(_QWORD *)(v8 + 80);
  v33 = *(_BYTE *)(v8 + 100);
  v34 = *(_DWORD *)(v8 + 96);
  *(_OWORD *)v8 = v32;
  *(_QWORD *)(v8 + 16) = v2;
  *(_OWORD *)(v8 + 24) = v31;
  *(_QWORD *)(v8 + 40) = v3;
  *(_OWORD *)(v8 + 48) = v30;
  *(_QWORD *)(v8 + 64) = v4;
  *(_OWORD *)(v8 + 72) = v29;
  *(_QWORD *)(v8 + 88) = v5;
  *(_DWORD *)(v8 + 96) = v7;
  *(_BYTE *)(v8 + 100) = v6;
  v28 = v10;
  v27 = v18;
  v19 = v10;
  v20 = v9;
  v21 = v13;
  v22 = v15;
  v23 = v16;
  sub_1BC3EE064(v10, v9, v11, v12, v13, v14, v15);
  sub_1BC3EDFF4(v19, v20, v11, v12, v21, v35, v22);
  v36[0] = v19;
  v36[1] = v20;
  v36[2] = v11;
  v36[3] = v12;
  v36[4] = v21;
  v36[5] = v35;
  v36[6] = v22;
  v36[7] = v23;
  v36[8] = v17;
  v36[9] = v25;
  v36[10] = v26;
  v36[11] = v27;
  v38 = v33;
  v37 = v34;
  sub_1BC446F3C((uint64_t)v36);
  return sub_1BC3EDFF4(v28, v20, v11, v12, v21, v35, v22);
}

void (*sub_1BC44756C(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;

  v3 = malloc(0x90uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  v3[16] = v1;
  v3[17] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(v5 + 8);
  v8 = *(_QWORD *)(v5 + 16);
  v9 = *(_QWORD *)(v5 + 24);
  v10 = *(void **)(v5 + 32);
  v11 = *(void **)(v5 + 40);
  v12 = *(void **)(v5 + 48);
  v13 = *(_QWORD *)(v5 + 56);
  v14 = *(_QWORD *)(v5 + 64);
  v15 = *(_QWORD *)(v5 + 72);
  v16 = *(_QWORD *)(v5 + 80);
  v17 = *(_QWORD *)(v5 + 88);
  v18 = *(_BYTE *)(v5 + 100);
  v19 = *(_DWORD *)(v5 + 96);
  *v3 = *(_QWORD *)v5;
  v3[1] = v7;
  v3[2] = v8;
  v3[3] = v9;
  v3[4] = v10;
  v3[5] = v11;
  v3[6] = v12;
  v3[7] = v13;
  v3[8] = v14;
  v3[9] = v15;
  v3[10] = v16;
  v3[11] = v17;
  *((_BYTE *)v3 + 100) = v18;
  *((_DWORD *)v3 + 24) = v19;
  sub_1BC3EE064(v6, v7, v8, v9, v10, v11, v12);
  return sub_1BC44762C;
}

void sub_1BC44762C(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char v53;

  v3 = *a1;
  v4 = (*a1)[16] + (*a1)[17];
  v5 = **a1;
  v6 = v3[1];
  v7 = v3[2];
  v8 = v3[3];
  v9 = (void *)v3[4];
  v10 = (void *)v3[5];
  v11 = (void *)v3[6];
  v12 = v3[7];
  v13 = v3[8];
  v14 = v3[9];
  v15 = v3[10];
  v16 = v3[11];
  v17 = *((_BYTE *)v3 + 100);
  v18 = *((_DWORD *)v3 + 24);
  v19 = *(_QWORD *)v4;
  v20 = *(_QWORD *)(v4 + 16);
  v38 = *(_QWORD *)(v4 + 24);
  v21 = *(void **)(v4 + 32);
  v34 = *(_QWORD *)(v4 + 8);
  v35 = *(void **)(v4 + 40);
  v22 = *(void **)(v4 + 48);
  v23 = *(_QWORD *)(v4 + 56);
  v33 = *(_QWORD *)(v4 + 72);
  v39 = *(_QWORD *)(v4 + 80);
  v36 = *(_QWORD *)(v4 + 64);
  v37 = *(_QWORD *)(v4 + 88);
  *(_QWORD *)v4 = v5;
  *(_QWORD *)(v4 + 8) = v6;
  *(_QWORD *)(v4 + 16) = v7;
  *(_QWORD *)(v4 + 24) = v8;
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v10;
  *(_QWORD *)(v4 + 48) = v11;
  *(_QWORD *)(v4 + 56) = v12;
  *(_QWORD *)(v4 + 64) = v13;
  *(_QWORD *)(v4 + 72) = v14;
  v24 = *(unsigned int *)(v4 + 96);
  *(_QWORD *)(v4 + 80) = v15;
  *(_QWORD *)(v4 + 88) = v16;
  v25 = v24 | ((unint64_t)*(unsigned __int8 *)(v4 + 100) << 32);
  *(_BYTE *)(v4 + 100) = v17;
  *(_DWORD *)(v4 + 96) = v18;
  if ((a2 & 1) != 0)
  {
    sub_1BC3EE064(v5, v6, v7, v8, v9, v10, v11);
    sub_1BC3EE064(v19, v34, v20, v38, v21, v35, v22);
    sub_1BC3EDFF4(v19, v34, v20, v38, v21, v35, v22);
    v40 = v19;
    v41 = v34;
    v42 = v20;
    v43 = v38;
    v44 = v21;
    v45 = v35;
    v46 = v22;
    v47 = v23;
    v48 = v36;
    v49 = v33;
    v50 = v39;
    v51 = v37;
    v53 = BYTE4(v25);
    v52 = v25;
    sub_1BC446F3C((uint64_t)&v40);
    sub_1BC3EDFF4(v19, v34, v20, v38, v21, v35, v22);
    v26 = *v3;
    v27 = v3[1];
    v28 = v3[2];
    v29 = v3[3];
    v30 = (void *)v3[4];
    v31 = (void *)v3[5];
    v32 = (void *)v3[6];
  }
  else
  {
    sub_1BC3EE064(v19, v34, v20, v38, v21, v35, v22);
    sub_1BC3EDFF4(v19, v34, v20, v38, v21, v35, v22);
    v40 = v19;
    v41 = v34;
    v42 = v20;
    v43 = v38;
    v44 = v21;
    v45 = v35;
    v46 = v22;
    v47 = v23;
    v48 = v36;
    v49 = v33;
    v50 = v39;
    v51 = v37;
    v53 = BYTE4(v25);
    v52 = v25;
    sub_1BC446F3C((uint64_t)&v40);
    v26 = v19;
    v32 = v22;
    v27 = v34;
    v28 = v20;
    v29 = v38;
    v30 = v21;
    v31 = v35;
  }
  sub_1BC3EDFF4(v26, v27, v28, v29, v30, v31, v32);
  free(v3);
}

void sub_1BC44796C()
{
  uint64_t v0;
  unsigned __int8 *v1;
  int v2;
  id v3;
  double v4;
  id v5;
  double v6;
  double v7;
  int v8;

  sub_1BC44845C();
  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
  swift_beginAccess();
  v2 = *v1;
  v3 = sub_1BC447F5C();
  type metadata accessor for UILayoutPriority(0);
  sub_1BC449AAC();
  if (v2 == 1)
  {
    sub_1BC62BB4C();
    LODWORD(v4) = v8;
    objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);

    v5 = sub_1BC447F5C();
    sub_1BC62BB4C();
  }
  else
  {
    sub_1BC62BB40();
    LODWORD(v7) = v8;
    objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);

    v5 = sub_1BC447F5C();
    sub_1BC62BB40();
  }
  LODWORD(v6) = v8;
  objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 1, v6);

}

uint64_t sub_1BC447B08()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
  swift_beginAccess();
  return *v1;
}

void sub_1BC447B4C(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
  swift_beginAccess();
  *v3 = a1;
  sub_1BC44796C();
}

void (*sub_1BC447BA0(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC447BE8;
}

void sub_1BC447BE8(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC44796C();
}

uint64_t sub_1BC447C18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1BC447C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  if (v5[1])
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BC447F5C();
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    v7 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7);

    v8 = sub_1BC448044();
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9);

  }
}

void (*sub_1BC447DC4(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC447E1C;
}

void sub_1BC447E1C(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = (uint64_t *)(v3[3] + v3[4]);
    v5 = v4[1];
    if (v5)
    {
      v6 = *v4;
      swift_bridgeObjectRetain();
      v7 = sub_1BC447F5C();
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, v6, v5);

      v9 = sub_1BC448044();
      v11 = v5;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v10 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10, v6, v11);

    }
  }
  free(v3);
}

id sub_1BC447F5C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___textualValueView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___textualValueView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___textualValueView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setNumberOfLines_, 3);
    objc_msgSend(v4, sel_setLineBreakMode_, 4);
    v5 = objc_msgSend((id)objc_opt_self(), sel_hk_chrValueCellPrimaryFont);
    objc_msgSend(v4, sel_setFont_, v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC448044()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  char v10;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___referenceRangeView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___referenceRangeView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___referenceRangeView);
  }
  else
  {
    v4 = v0;
    v10 = 1;
    v5 = objc_allocWithZone((Class)type metadata accessor for RecordRangeView());
    v6 = RecordRangeView.init(style:)(&v10);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id ConceptFeedItemValueView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id ConceptFeedItemValueView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  _QWORD *v10;
  id v11;
  double v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  objc_super v20;

  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  *((_OWORD *)v9 + 5) = 0u;
  *(_QWORD *)(v9 + 93) = 0;
  v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode] = 0;
  v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier];
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___textualValueView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___referenceRangeView] = 0;
  v20.receiver = v4;
  v20.super_class = (Class)type metadata accessor for ConceptFeedItemValueView();
  v11 = objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  LODWORD(v12) = 1144750080;
  objc_msgSend(v11, sel_setContentCompressionResistancePriority_forAxis_, 1, v12);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v13 = sub_1BC447F5C();
  v14 = sub_1BC448044();
  objc_msgSend(v11, sel_addSubview_, v13);
  objc_msgSend(v11, sel_addSubview_, v14);

  sub_1BC448304();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC639590;
  v16 = sub_1BC62BDD4();
  v17 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v17;
  v18 = v11;
  MEMORY[0x1BCCF20E8](v15, sel_traitCollectionDidChangeWithTraitEnvironment_previousTraitCollection_);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v18;
}

uint64_t type metadata accessor for ConceptFeedItemValueView()
{
  return objc_opt_self();
}

void sub_1BC448304()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429250)
  {
    sub_1BC3571B0();
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429250);
  }
}

void sub_1BC44845C()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  unsigned int v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  double v52;
  double v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  unsigned int v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  double v89;
  double v90;
  id v91;
  id v92;
  void *v93;
  uint64_t v94;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_activeConstraints];
  swift_beginAccess();
  sub_1BC34D89C();
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  v5 = objc_msgSend(v0, sel_traitCollection);
  v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  LOBYTE(v5) = sub_1BC62CD1C();
  sub_1BC34D844();
  if ((v5 & 1) == 0)
  {
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1BC640FA0;
    v35 = sub_1BC447F5C();
    v36 = objc_msgSend(v35, sel_leadingAnchor);

    v37 = objc_msgSend(v1, sel_leadingAnchor);
    if (qword_1EF4285C0 != -1)
      swift_once();
    v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v37, *((double *)&xmmword_1EF459DF0 + 1));

    *(_QWORD *)(v34 + 32) = v38;
    v39 = sub_1BC447F5C();
    v40 = objc_msgSend(v39, sel_topAnchor);

    v41 = objc_msgSend(v1, sel_topAnchor);
    v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v41, *(double *)&xmmword_1EF459DF0);

    *(_QWORD *)(v34 + 40) = v42;
    v43 = sub_1BC447F5C();
    v44 = objc_msgSend(v43, sel_bottomAnchor);

    v45 = objc_msgSend(v1, sel_bottomAnchor);
    v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, -*(double *)&qword_1EF459E00);

    *(_QWORD *)(v34 + 48) = v46;
    v47 = sub_1BC448044();
    v48 = objc_msgSend(v47, sel_widthAnchor);

    v49 = sub_1BC448044();
    v50 = objc_msgSend(v49, sel_traitCollection);
    v51 = objc_msgSend(v50, sel_preferredContentSizeCategory);

    v52 = sub_1BC53F250();
    if (qword_1EF428708 != -1)
      swift_once();
    v53 = *(double *)&qword_1EF459FB8;

    v54 = objc_msgSend(v48, sel_constraintEqualToConstant_, v52 * v53);
    *(_QWORD *)(v34 + 56) = v54;
    v55 = sub_1BC448044();
    v56 = objc_msgSend(v55, sel_bottomAnchor);

    v57 = sub_1BC447F5C();
    v58 = objc_msgSend(v57, sel_firstBaselineAnchor);

    v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v58);
    *(_QWORD *)(v34 + 64) = v59;
    v60 = sub_1BC448044();
    v61 = objc_msgSend(v60, sel_trailingAnchor);

    v62 = objc_msgSend(v1, sel_trailingAnchor);
    v63 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v62, -*(double *)&qword_1EF459E08);

    *(_QWORD *)(v34 + 72) = v63;
    sub_1BC62C890();
    *v3 = v34;
    swift_bridgeObjectRelease();
    v64 = sub_1BC448044();
    v65 = objc_msgSend(v64, sel_isHidden);

    if (v65)
    {
      v66 = sub_1BC447F5C();
      v31 = objc_msgSend(v66, sel_trailingAnchor);

      v32 = objc_msgSend(v1, sel_trailingAnchor);
      v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, -*(double *)&qword_1EF459E08);
LABEL_12:
      v67 = v33;

      swift_beginAccess();
      v68 = v67;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      goto LABEL_23;
    }
    swift_beginAccess();
    v80 = sub_1BC447F5C();
    v81 = objc_msgSend(v80, sel_trailingAnchor);

    v82 = sub_1BC448044();
    v83 = objc_msgSend(v82, sel_leadingAnchor);

    v84 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v83);
    swift_beginAccess();
    v68 = v84;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_23:
      sub_1BC62C8D8();
      sub_1BC62C890();
      swift_endAccess();
      goto LABEL_24;
    }
LABEL_31:
    sub_1BC62C8B4();
    goto LABEL_23;
  }
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC63A3C0;
  v8 = sub_1BC447F5C();
  v9 = objc_msgSend(v8, sel_leadingAnchor);

  v10 = objc_msgSend(v1, sel_leadingAnchor);
  if (qword_1EF4285C0 != -1)
    swift_once();
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, *((double *)&xmmword_1EF459DF0 + 1));

  *(_QWORD *)(v7 + 32) = v11;
  v12 = sub_1BC447F5C();
  v13 = objc_msgSend(v12, sel_topAnchor);

  v14 = objc_msgSend(v1, sel_topAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, *(double *)&xmmword_1EF459DF0);

  *(_QWORD *)(v7 + 40) = v15;
  v16 = sub_1BC447F5C();
  v17 = objc_msgSend(v16, sel_trailingAnchor);

  v18 = objc_msgSend(v1, sel_trailingAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, -*(double *)&qword_1EF459E08);

  *(_QWORD *)(v7 + 48) = v19;
  v20 = sub_1BC448044();
  v21 = objc_msgSend(v20, sel_leadingAnchor);

  v22 = objc_msgSend(v1, sel_leadingAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, *((double *)&xmmword_1EF459DF0 + 1));

  *(_QWORD *)(v7 + 56) = v23;
  v24 = sub_1BC448044();
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = objc_msgSend(v1, sel_trailingAnchor);
  v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v26, -*(double *)&qword_1EF459E08);

  *(_QWORD *)(v7 + 64) = v27;
  sub_1BC62C890();
  *v3 = v7;
  swift_bridgeObjectRelease();
  v28 = sub_1BC448044();
  v29 = objc_msgSend(v28, sel_isHidden);

  if (v29)
  {
    v30 = sub_1BC447F5C();
    v31 = objc_msgSend(v30, sel_bottomAnchor);

    v32 = objc_msgSend(v1, sel_bottomAnchor);
    v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, -*(double *)&qword_1EF459E00);
    goto LABEL_12;
  }
  v69 = sub_1BC448044();
  v70 = objc_msgSend(v69, sel_topAnchor);

  v71 = sub_1BC447F5C();
  v72 = objc_msgSend(v71, sel_bottomAnchor);

  v68 = objc_msgSend(v70, sel_constraintEqualToAnchor_constant_, v72, 2.0);
  v73 = sub_1BC448044();
  v74 = objc_msgSend(v73, sel_bottomAnchor);

  v75 = objc_msgSend(v1, sel_bottomAnchor);
  v76 = objc_msgSend(v74, sel_constraintEqualToAnchor_constant_, v75, -*(double *)&qword_1EF459E00);

  swift_beginAccess();
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v94 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    v78 = v94 + 2;
    if (!__OFADD__(v94, 2))
      goto LABEL_17;
    goto LABEL_30;
  }
  v77 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v78 = v77 + 2;
  if (__OFADD__(v77, 2))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
LABEL_17:
  sub_1BC5EC1E8(v78, 1);
  sub_1BC62C890();
  v79 = v68;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v68 = v76;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  swift_endAccess();

LABEL_24:
  v85 = sub_1BC447F5C();
  v86 = objc_msgSend(v85, sel_heightAnchor);

  v87 = sub_1BC447F5C();
  v88 = objc_msgSend(v87, sel_font);

  if (v88)
  {
    objc_msgSend(v88, sel_lineHeight);
    v90 = v89;

    v91 = objc_msgSend(v86, sel_constraintGreaterThanOrEqualToConstant_, v90);
    swift_beginAccess();
    v92 = v91;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    swift_endAccess();

    swift_bridgeObjectRetain();
    v93 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_activateConstraints_, v93);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC449148()
{
  char *v0;
  id v1;
  double Width;
  double v3;
  double v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  CGRect v58;

  v1 = objc_msgSend(v0, sel_superview);
  if (v1)
  {
    v55 = v1;
    objc_msgSend(v1, sel_bounds);
    Width = CGRectGetWidth(v58);
    if (qword_1EF4285C0 != -1)
      swift_once();
    v3 = *((double *)&xmmword_1EF459DF0 + 1);
    v4 = *(double *)&qword_1EF459E08;
    v56 = sub_1BC448044();
    v5 = &v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData];
    swift_beginAccess();
    v6 = *((_QWORD *)v5 + 1);
    if (v6)
    {
      v7 = *((unsigned int *)v5 + 24) | ((unint64_t)v5[100] << 32);
      v9 = *((_QWORD *)v5 + 10);
      v8 = *((_QWORD *)v5 + 11);
      v44 = *((_QWORD *)v5 + 8);
      v47 = *((_QWORD *)v5 + 9);
      v10 = (void *)*((_QWORD *)v5 + 6);
      v11 = (void *)*((_QWORD *)v5 + 4);
      v50 = (void *)*((_QWORD *)v5 + 5);
      v13 = *((_QWORD *)v5 + 2);
      v12 = *((_QWORD *)v5 + 3);
      v14 = *(_QWORD *)v5;
      sub_1BC3EE064(*(_QWORD *)v5, v6, v13, v12, v11, v50, v10);
      v15 = v10;
      v38 = v8;
      v39 = v7;
      v36 = v47;
      v37 = v9;
      v35 = v44;
      sub_1BC3EDFF4(v14, v6, v13, v12, v11, v50, v10);
    }
    else
    {
      v10 = 0;
    }
    sub_1BC52EBE8(v10);

    v16 = *((_QWORD *)v5 + 1);
    if (v16)
    {
      v17 = *((_QWORD *)v5 + 10);
      v42 = *((unsigned int *)v5 + 24) | ((unint64_t)v5[100] << 32);
      v45 = *((_QWORD *)v5 + 11);
      v18 = *((_QWORD *)v5 + 8);
      v19 = (void *)*((_QWORD *)v5 + 6);
      v21 = (void *)*((_QWORD *)v5 + 4);
      v20 = (void *)*((_QWORD *)v5 + 5);
      v22 = *((_QWORD *)v5 + 3);
      v53 = *((_QWORD *)v5 + 2);
      v48 = *((_QWORD *)v5 + 9);
      v51 = *(_QWORD *)v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = v21;
      v24 = v20;
      v25 = v19;
      swift_bridgeObjectRetain();
      v26 = sub_1BC475C70(Width - v3 - v4);
      sub_1BC3EDFF4(v51, v16, v53, v22, v21, v20, v19);
      v27 = sub_1BC447F5C();
      objc_msgSend(v27, sel_setAttributedText_, v26, v18, v48, v17, v45, v42);

    }
    v28 = sub_1BC447F5C();
    v29 = *((_QWORD *)v5 + 1);
    if (v29)
    {
      v31 = *((_QWORD *)v5 + 8);
      v30 = *((_QWORD *)v5 + 9);
      v32 = *((_QWORD *)v5 + 10);
      if (v31)
      {
        if (v32)
        {
          v46 = *(_QWORD *)v5;
          v49 = *((_QWORD *)v5 + 2);
          v57 = (void *)*((_QWORD *)v5 + 4);
          v52 = (void *)*((_QWORD *)v5 + 6);
          v54 = (void *)*((_QWORD *)v5 + 5);
          v41 = *((_QWORD *)v5 + 11);
          v43 = *((_QWORD *)v5 + 3);
          v40 = *((unsigned int *)v5 + 24) | ((unint64_t)v5[100] << 32);
          swift_bridgeObjectRetain();
          sub_1BC62C764();
          sub_1BC3EE064(v46, v29, v49, v43, v57, v54, v52);
          swift_bridgeObjectRetain();
          sub_1BC62C764();
          swift_bridgeObjectRelease();
          v38 = v41;
          v39 = v40;
          v36 = v30;
          v37 = v32;
          v35 = v31;
          sub_1BC3EDFF4(v46, v29, v49, v43, v57, v54, v52);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        v34 = v55;
      }
      else
      {
        v34 = v55;
        if (!v32)
        {
          v33 = 0;
          goto LABEL_19;
        }
        swift_bridgeObjectRetain();
      }
      v33 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v33 = 0;
      v34 = v55;
    }
LABEL_19:
    objc_msgSend(v28, sel_setAccessibilityLabel_, v33, v35, v36, v37, v38, v39);

    sub_1BC44845C();
  }
}

id ConceptFeedItemValueView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptFeedItemValueView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC4495F4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1BC449644(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
  swift_beginAccess();
  *v3 = v2;
  sub_1BC44796C();
}

uint64_t sub_1BC44969C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

void sub_1BC4496F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1BC447C6C(v1, v2);
}

uint64_t method lookup function for ConceptFeedItemValueView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.viewData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.viewData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.viewData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.isInEditingMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.isInEditingMode.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.isInEditingMode.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.baseAccessibilityIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.baseAccessibilityIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.baseAccessibilityIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

void sub_1BC4498D8()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;

  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *(_QWORD *)(v1 + 93) = 0;
  v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode] = 0;
  v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___textualValueView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___referenceRangeView] = 0;

  sub_1BC62D394();
  __break(1u);
}

void sub_1BC44999C(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!a1)
  {

    goto LABEL_9;
  }
  v5 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  v6 = sub_1BC62C680();
  v8 = v7;
  if (v6 == sub_1BC62C680() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  v11 = sub_1BC62D574();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
LABEL_9:
    sub_1BC44845C();
}

unint64_t sub_1BC449AAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42AF98;
  if (!qword_1EF42AF98)
  {
    type metadata accessor for UILayoutPriority(255);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DC2B88], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42AF98);
  }
  return result;
}

uint64_t sub_1BC449AF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v8;
  uint64_t v9;

  v9 = *(_QWORD *)(a1 + 104);
  v2 = *(_QWORD *)(a1 + 120);
  v8 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 128);
  v4 = *(void **)(a1 + 136);
  v5 = *(void **)(a1 + 144);
  v6 = *(void **)(a1 + 152);
  sub_1BC3EDFF4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void **)(a1 + 48));
  sub_1BC3EDFF4(v9, v8, v2, v3, v4, v5, v6);
  return a1;
}

id sub_1BC449BD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  objc_super v13;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter);
  }
  else
  {
    v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
    v6 = (objc_class *)type metadata accessor for MedicationDosageFormatter();
    v7 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = v4;
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = v5;
    v13.receiver = v7;
    v13.super_class = v6;
    v8 = v4;
    v9 = objc_msgSendSuper2(&v13, sel_init);
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

uint64_t sub_1BC449CA4(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;

  v2 = objc_msgSend(a1, sel_dosages);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = v2;
  sub_1BC34B6A0(0, &qword_1EF42D040);
  v4 = sub_1BC62C878();

  v5 = sub_1BC449BD8();
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    v11 = swift_bridgeObjectRetain();
    v6 = (uint64_t)sub_1BC3D6978(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v12 = v6;
  sub_1BC44A7EC((uint64_t *)&v12);
  v7 = v12;
  v8 = v5;
  v9 = sub_1BC44BBBC(v7);
  swift_bridgeObjectRelease();
  swift_release();

  return v9;
}

id MedicationOrderFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store);
}

uint64_t MedicationOrderFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
}

id MedicationOrderFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id MedicationOrderFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MedicationOrderFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

unint64_t sub_1BC449EBC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
  if (v2 == 1)
    return sub_1BC44A3D0(a1);
  if (!v2)
    return sub_1BC449F1C(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC449F1C(void *a1)
{
  uint64_t inited;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v28;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B398, (uint64_t (*)(uint64_t))sub_1BC39CBC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC63AF10;
  *(_QWORD *)(inited + 32) = sub_1BC61F800(a1);
  *(_QWORD *)(inited + 40) = sub_1BC5F7EB0(a1);
  *(_QWORD *)(inited + 48) = sub_1BC44BE6C(a1);
  *(_QWORD *)(inited + 56) = sub_1BC44BFD8(a1);
  *(_QWORD *)(inited + 64) = sub_1BC44C144(a1);
  *(_QWORD *)(inited + 72) = sub_1BC44C33C(a1);
  v3 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  v4 = a1;
  v5 = sub_1BC507040(v4);

  v6 = Array<A>.newlineJoined.getter(v5);
  v8 = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 80) = sub_1BC4A9250(v6, v8, v3);
  *(_QWORD *)(inited + 88) = sub_1BC44C674(v4);
  *(_QWORD *)(inited + 96) = sub_1BC546064(v4);
  sub_1BC62C890();
  v28 = MEMORY[0x1E0DEE9D8];
  v9 = *(void **)(inited + 32);
  if (v9)
  {
    v10 = v9;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v11 = *(void **)(inited + 40);
  if (v11)
  {
    v12 = v11;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v13 = *(void **)(inited + 48);
  if (v13)
  {
    v14 = v13;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v15 = *(void **)(inited + 56);
  if (v15)
  {
    v16 = v15;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v17 = *(void **)(inited + 64);
  if (v17)
  {
    v18 = v17;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v19 = *(void **)(inited + 72);
  if (v19)
  {
    v20 = v19;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v21 = *(void **)(inited + 80);
  if (v21)
  {
    v22 = v21;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v23 = *(void **)(inited + 88);
  if (v23)
  {
    v24 = v23;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v25 = *(void **)(inited + 96);
  if (v25)
  {
    v26 = v25;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  swift_bridgeObjectRelease();
  return v28;
}

unint64_t sub_1BC44A3D0(void *a1)
{
  unint64_t v2;
  uint64_t v3;
  _BOOL8 v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  v2 = sub_1BC52BDD8(a1);
  sub_1BC3BB208(v2);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = v3 != 0;
  v5 = sub_1BC44C144(a1);
  if (!v5)
    goto LABEL_8;
  v6 = v5;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();

  if (!v3)
  {
    v4 = 1;
LABEL_8:
    v7 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
    v8 = a1;
    v9 = sub_1BC507040(v8);

    v10 = Array<A>.newlineJoined.getter(v9);
    v12 = v11;
    swift_bridgeObjectRelease();
    v13 = (void *)sub_1BC4A9250(v10, v12, v7);
    if (!v13)
      goto LABEL_12;
    v14 = v13;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    if (!v4)
    {
LABEL_12:
      v15 = (void *)sub_1BC546064(v8);
      if (v15)
      {
        v16 = v15;
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();

      }
    }
  }
  return v18;
}

id MedicationOrderFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicationOrderFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationOrderFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationOrderFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC44A6DC()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store);
}

uint64_t sub_1BC44A6F0()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
}

id sub_1BC44A704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for MedicationOrderFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

unint64_t sub_1BC44A780(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t result;

  v2 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
  if (v2 == 1)
    return sub_1BC44A3D0(a1);
  if (!v2)
    return sub_1BC449F1C(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC44A7EC(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC505EE8();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BC44A864(v6);
  return sub_1BC62D274();
}

void sub_1BC44A864(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  char *v30;
  id v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  char *v50;
  id v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  id v63;
  uint64_t v64;
  char **v65;
  void *v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  char *v77;
  id v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  char *v83;
  void *v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  char v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  unint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  unint64_t v145;
  char *v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  void **v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;

  v2 = v1;
  v4 = sub_1BC62A760();
  v158 = *(_QWORD *)(v4 - 8);
  v159 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v157 = (char *)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v156 = (char *)&v146 - v7;
  v8 = a1[1];
  v9 = sub_1BC62D520();
  if (v9 >= v8)
  {
    if (v8 < 0)
      goto LABEL_156;
    if (v8)
      sub_1BC44B394(0, v8, 1, a1);
    return;
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_164;
  v149 = v9;
  v150 = v8;
  v147 = a1;
  if (v8 < 2)
  {
    v13 = (char *)MEMORY[0x1E0DEE9D8];
    v162 = MEMORY[0x1E0DEE9D8];
    v154 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v8 != 1)
    {
      v17 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v17 < 2)
      {
LABEL_133:
        swift_bridgeObjectRelease();
        *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_1BC62C890();
        swift_bridgeObjectRelease();
        return;
      }
LABEL_121:
      v140 = *v147;
      while (1)
      {
        v141 = v17 - 2;
        if (v17 < 2)
          goto LABEL_151;
        if (!v140)
          goto LABEL_163;
        v142 = *(_QWORD *)&v13[16 * v141 + 32];
        v143 = *(_QWORD *)&v13[16 * v17 + 24];
        sub_1BC44B608((void **)(v140 + 8 * v142), (id *)(v140 + 8 * *(_QWORD *)&v13[16 * v17 + 16]), v140 + 8 * v143, v154);
        if (v2)
          goto LABEL_133;
        if (v143 < v142)
          goto LABEL_152;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_1BC504414((uint64_t)v13);
        if (v141 >= *((_QWORD *)v13 + 2))
          goto LABEL_153;
        v144 = &v13[16 * v141 + 32];
        *(_QWORD *)v144 = v142;
        *((_QWORD *)v144 + 1) = v143;
        v145 = *((_QWORD *)v13 + 2);
        if (v17 > v145)
          goto LABEL_154;
        memmove(&v13[16 * v17 + 16], &v13[16 * v17 + 32], 16 * (v145 - v17));
        *((_QWORD *)v13 + 2) = v145 - 1;
        v17 = v145 - 1;
        if (v145 <= 2)
          goto LABEL_133;
      }
    }
  }
  else
  {
    v11 = v10 >> 1;
    sub_1BC34B6A0(0, &qword_1EF42D040);
    v12 = sub_1BC62C8CC();
    *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) = v11;
    v154 = (void **)((v12 & 0xFFFFFFFFFFFFFF8) + 32);
    v162 = v12;
  }
  v155 = v1;
  v14 = 0;
  v15 = *a1;
  v148 = *a1 - 8;
  v13 = (char *)MEMORY[0x1E0DEE9D8];
  v16 = v150;
  v160 = v15;
  while (1)
  {
    v18 = v14;
    v19 = v14 + 1;
    if (v14 + 1 >= v16)
      goto LABEL_47;
    v161 = (char *)(v14 + 1);
    v20 = *(void **)(v15 + 8 * v14);
    v21 = *(id *)(v15 + 8 * v19);
    v22 = v20;
    v23 = objc_msgSend(v21, sel_timingPeriod);
    if (!v23
      || (v24 = v23, v25 = objc_msgSend(v23, sel_endDate), v24, !v25))
    {
      LODWORD(v153) = 1;
      v25 = v22;
LABEL_23:

      goto LABEL_24;
    }
    v151 = v22;
    v26 = objc_msgSend(v22, sel_timingPeriod);
    if (!v26
      || (v27 = v26, v28 = objc_msgSend(v26, sel_endDate), v27, !v28))
    {

      LODWORD(v153) = 0;
      v21 = v151;
      goto LABEL_23;
    }
    v29 = objc_msgSend(v25, sel_dateForUTC);
    v30 = v156;
    sub_1BC62A724();

    v31 = objc_msgSend(v28, sel_dateForUTC);
    v32 = v157;
    sub_1BC62A724();

    LODWORD(v153) = sub_1BC62A718();
    v33 = *(void (**)(char *, uint64_t))(v158 + 8);
    v34 = v32;
    v35 = v159;
    v33(v34, v159);
    v36 = v35;
    v16 = v150;
    v33(v30, v36);

LABEL_24:
    v37 = v18 + 2;
    if (v18 + 2 >= v16)
      goto LABEL_37;
    v38 = v18 + 2;
    v39 = (uint64_t)v161;
    v152 = v18;
    do
    {
      v37 = v38;
      v40 = *(void **)(v15 + 8 * v39);
      v41 = *(id *)(v15 + 8 * v38);
      v42 = v40;
      v43 = objc_msgSend(v41, sel_timingPeriod);
      if (v43
        && (v44 = v43, v45 = objc_msgSend(v43, sel_endDate), v44, v45))
      {
        v46 = objc_msgSend(v42, sel_timingPeriod);
        if (v46
          && (v47 = v46, v48 = objc_msgSend(v46, sel_endDate),
                         v47,
                         v48))
        {
          v49 = objc_msgSend(v45, sel_dateForUTC);
          v50 = v156;
          sub_1BC62A724();

          v51 = objc_msgSend(v48, sel_dateForUTC);
          v52 = v157;
          sub_1BC62A724();

          v53 = v50;
          LODWORD(v161) = sub_1BC62A718();

          v54 = v159;
          v55 = *(void (**)(char *, uint64_t))(v158 + 8);
          v56 = v52;
          v18 = v152;
          v55(v56, v159);
          v55(v53, v54);
          v16 = v150;

          if (((v153 ^ v161) & 1) != 0)
          {
            v15 = v160;
            goto LABEL_37;
          }
        }
        else
        {

          if ((v153 & 1) != 0)
          {
            v15 = v160;
            goto LABEL_38;
          }
        }
      }
      else
      {

        if ((v153 & 1) == 0)
        {
          v19 = v37;
          v15 = v160;
          goto LABEL_47;
        }
      }
      v38 = v37 + 1;
      v39 = v37;
      v15 = v160;
    }
    while (v37 + 1 < v16);
    ++v37;
LABEL_37:
    v19 = v37;
    if ((v153 & 1) != 0)
    {
LABEL_38:
      if (v37 < v18)
        goto LABEL_159;
      if (v18 < v37)
      {
        v57 = (uint64_t *)(v148 + 8 * v37);
        v58 = v37;
        v59 = v18;
        v60 = (uint64_t *)(v15 + 8 * v18);
        do
        {
          if (v59 != --v58)
          {
            if (!v15)
              goto LABEL_162;
            v61 = *v60;
            *v60 = *v57;
            *v57 = v61;
          }
          ++v59;
          --v57;
          ++v60;
        }
        while (v59 < v58);
      }
      v19 = v37;
    }
LABEL_47:
    v14 = v19;
    if (v19 >= v16)
      goto LABEL_71;
    v62 = (char *)(v19 - v18);
    if (__OFSUB__(v14, v18))
      goto LABEL_155;
    if ((uint64_t)v62 >= v149)
      goto LABEL_71;
    if (__OFADD__(v18, v149))
      goto LABEL_157;
    v63 = (id)(v18 + v149 >= v16 ? v16 : v18 + v149);
    if ((uint64_t)v63 < v18)
      break;
    if ((id)v14 == v63)
      goto LABEL_71;
    v146 = v13;
    v64 = v148 + 8 * v14;
    v65 = &selRef_predicateWithFormat_;
    v151 = v63;
    v152 = v18;
    while (2)
    {
      v66 = *(void **)(v15 + 8 * v14);
      v153 = v64;
      v161 = (char *)v14;
      while (1)
      {
        v67 = *(void **)v64;
        v68 = v66;
        v69 = v67;
        v70 = objc_msgSend(v68, v65[501]);
        if (v70)
        {
          v71 = v70;
          v72 = objc_msgSend(v70, sel_endDate);

          if (v72)
            break;
        }

LABEL_67:
        if (!v15)
          goto LABEL_160;
        v84 = *(void **)v64;
        v66 = *(void **)(v64 + 8);
        *(_QWORD *)v64 = v66;
        *(_QWORD *)(v64 + 8) = v84;
        v64 -= 8;
        if (v14 == ++v18)
          goto LABEL_58;
      }
      v73 = objc_msgSend(v69, v65[501]);
      if (v73)
      {
        v74 = v73;
        v75 = objc_msgSend(v73, sel_endDate);

        if (v75)
        {
          v76 = objc_msgSend(v72, sel_dateForUTC);
          v77 = v156;
          sub_1BC62A724();

          v78 = objc_msgSend(v75, sel_dateForUTC);
          v79 = v157;
          sub_1BC62A724();

          LOBYTE(v78) = sub_1BC62A718();
          v80 = v159;
          v81 = *(void (**)(char *, uint64_t))(v158 + 8);
          v82 = v79;
          v65 = &selRef_predicateWithFormat_;
          v81(v82, v159);
          v83 = v77;
          v15 = v160;
          v81(v83, v80);

          v14 = (uint64_t)v161;
          if ((v78 & 1) == 0)
            goto LABEL_58;
          goto LABEL_67;
        }
      }

      v14 = (uint64_t)v161;
LABEL_58:
      ++v14;
      v18 = v152;
      v64 = v153 + 8;
      if ((id)v14 != v151)
        continue;
      break;
    }
    v14 = (uint64_t)v151;
    v13 = v146;
LABEL_71:
    if (v14 < v18)
      goto LABEL_150;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1BC503AB4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v86 = *((_QWORD *)v13 + 2);
    v85 = *((_QWORD *)v13 + 3);
    v17 = v86 + 1;
    if (v86 >= v85 >> 1)
      v13 = sub_1BC503AB4((char *)(v85 > 1), v86 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v17;
    v87 = v13 + 32;
    v88 = &v13[16 * v86 + 32];
    *(_QWORD *)v88 = v18;
    *((_QWORD *)v88 + 1) = v14;
    if (v86)
    {
      v161 = (char *)v14;
      while (1)
      {
        v89 = v17 - 1;
        if (v17 >= 4)
        {
          v94 = &v87[16 * v17];
          v95 = *((_QWORD *)v94 - 8);
          v96 = *((_QWORD *)v94 - 7);
          v100 = __OFSUB__(v96, v95);
          v97 = v96 - v95;
          if (v100)
            goto LABEL_139;
          v99 = *((_QWORD *)v94 - 6);
          v98 = *((_QWORD *)v94 - 5);
          v100 = __OFSUB__(v98, v99);
          v92 = v98 - v99;
          v93 = v100;
          if (v100)
            goto LABEL_140;
          v101 = v17 - 2;
          v102 = &v87[16 * v17 - 32];
          v104 = *(_QWORD *)v102;
          v103 = *((_QWORD *)v102 + 1);
          v100 = __OFSUB__(v103, v104);
          v105 = v103 - v104;
          if (v100)
            goto LABEL_142;
          v100 = __OFADD__(v92, v105);
          v106 = v92 + v105;
          if (v100)
            goto LABEL_145;
          if (v106 >= v97)
          {
            v124 = &v87[16 * v89];
            v126 = *(_QWORD *)v124;
            v125 = *((_QWORD *)v124 + 1);
            v100 = __OFSUB__(v125, v126);
            v127 = v125 - v126;
            if (v100)
              goto LABEL_149;
            v117 = v92 < v127;
            goto LABEL_109;
          }
        }
        else
        {
          if (v17 != 3)
          {
            v118 = *((_QWORD *)v13 + 4);
            v119 = *((_QWORD *)v13 + 5);
            v100 = __OFSUB__(v119, v118);
            v111 = v119 - v118;
            v112 = v100;
            goto LABEL_103;
          }
          v91 = *((_QWORD *)v13 + 4);
          v90 = *((_QWORD *)v13 + 5);
          v100 = __OFSUB__(v90, v91);
          v92 = v90 - v91;
          v93 = v100;
        }
        if ((v93 & 1) != 0)
          goto LABEL_141;
        v101 = v17 - 2;
        v107 = &v87[16 * v17 - 32];
        v109 = *(_QWORD *)v107;
        v108 = *((_QWORD *)v107 + 1);
        v110 = __OFSUB__(v108, v109);
        v111 = v108 - v109;
        v112 = v110;
        if (v110)
          goto LABEL_144;
        v113 = &v87[16 * v89];
        v115 = *(_QWORD *)v113;
        v114 = *((_QWORD *)v113 + 1);
        v100 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v100)
          goto LABEL_147;
        if (__OFADD__(v111, v116))
          goto LABEL_148;
        if (v111 + v116 >= v92)
        {
          v117 = v92 < v116;
LABEL_109:
          if (v117)
            v89 = v101;
          goto LABEL_111;
        }
LABEL_103:
        if ((v112 & 1) != 0)
          goto LABEL_143;
        v120 = &v87[16 * v89];
        v122 = *(_QWORD *)v120;
        v121 = *((_QWORD *)v120 + 1);
        v100 = __OFSUB__(v121, v122);
        v123 = v121 - v122;
        if (v100)
          goto LABEL_146;
        if (v123 < v111)
          goto LABEL_14;
LABEL_111:
        v128 = v89 - 1;
        if (v89 - 1 >= v17)
        {
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        if (!v15)
          goto LABEL_161;
        v129 = v13;
        v130 = v15;
        v131 = &v87[16 * v128];
        v132 = *(_QWORD *)v131;
        v133 = v87;
        v134 = v89;
        v135 = &v87[16 * v89];
        v136 = *((_QWORD *)v135 + 1);
        v137 = v130;
        v138 = v155;
        sub_1BC44B608((void **)(v130 + 8 * *(_QWORD *)v131), (id *)(v130 + 8 * *(_QWORD *)v135), v130 + 8 * v136, v154);
        v155 = v138;
        if (v138)
          goto LABEL_133;
        if (v136 < v132)
          goto LABEL_136;
        if (v134 > *((_QWORD *)v129 + 2))
          goto LABEL_137;
        *(_QWORD *)v131 = v132;
        *(_QWORD *)&v133[16 * v128 + 8] = v136;
        v139 = *((_QWORD *)v129 + 2);
        if (v134 >= v139)
          goto LABEL_138;
        v13 = v129;
        v17 = v139 - 1;
        memmove(v135, v135 + 16, 16 * (v139 - 1 - v134));
        v87 = v133;
        *((_QWORD *)v129 + 2) = v139 - 1;
        v14 = (uint64_t)v161;
        v15 = v137;
        if (v139 <= 2)
          goto LABEL_14;
      }
    }
    v17 = 1;
LABEL_14:
    v16 = v150;
    if (v14 >= v150)
    {
      v2 = v155;
      if (v17 < 2)
        goto LABEL_133;
      goto LABEL_121;
    }
  }
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  sub_1BC62D388();
  __break(1u);
}

void sub_1BC44B394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char **v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  const char *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  char *v27;
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;

  v38 = a1;
  v7 = sub_1BC62A760();
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v41 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v40 = (char *)&v36 - v10;
  v37 = a2;
  if (a3 != a2)
  {
    v11 = *a4;
    v12 = *a4 + 8 * a3 - 8;
    v13 = &selRef_predicateWithFormat_;
LABEL_6:
    v14 = *(void **)(v11 + 8 * a3);
    v15 = v38;
    v39 = v12;
    v44 = a3;
    while (1)
    {
      v16 = *(void **)v12;
      v17 = v14;
      v18 = v16;
      v19 = objc_msgSend(v17, v13[501]);
      if (v19
        && (v20 = v19, v21 = objc_msgSend(v19, sel_endDate), v20, v21))
      {
        v22 = v13[501];
        v45 = v18;
        v23 = objc_msgSend(v18, v22);
        if (!v23
          || (v24 = v23,
              v25 = objc_msgSend(v23, sel_endDate),
              v24,
              !v25))
        {

LABEL_5:
          ++a3;
          v12 = v39 + 8;
          if (a3 == v37)
            return;
          goto LABEL_6;
        }
        v26 = objc_msgSend(v21, sel_dateForUTC);
        v27 = v40;
        sub_1BC62A724();

        v28 = objc_msgSend(v25, sel_dateForUTC);
        v29 = v11;
        v30 = v41;
        sub_1BC62A724();

        LOBYTE(v28) = sub_1BC62A718();
        v31 = v43;
        v32 = *(void (**)(char *, uint64_t))(v42 + 8);
        v33 = v30;
        v11 = v29;
        v13 = &selRef_predicateWithFormat_;
        v32(v33, v43);
        v34 = v27;
        a3 = v44;
        v32(v34, v31);

        if ((v28 & 1) == 0)
          goto LABEL_5;
      }
      else
      {

      }
      if (!v11)
        break;
      v35 = *(void **)v12;
      v14 = *(void **)(v12 + 8);
      *(_QWORD *)v12 = v14;
      *(_QWORD *)(v12 + 8) = v35;
      v12 -= 8;
      if (a3 == ++v15)
        goto LABEL_5;
    }
    __break(1u);
  }
}

uint64_t sub_1BC44B608(void **a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  id *v33;
  void **v34;
  id *v35;
  void **v36;
  void **v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  char *v48;
  id v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  char *v61;
  id v62;
  void **v63;
  id *v64;
  unint64_t v65;
  void **v66;
  void **v67;
  id *v68;

  v8 = sub_1BC62A760();
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v61 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v60 = (char *)&v55 - v11;
  v12 = (char *)a2 - (char *)a1;
  v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v13 = (char *)a2 - (char *)a1;
  v14 = v13 >> 3;
  v65 = a3;
  v15 = a3 - (_QWORD)a2;
  v16 = v15 / 8;
  v68 = a1;
  v67 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_55;
    if (a4 != a2 || &a2[v16] <= a4)
      memmove(a4, a2, 8 * v16);
    v34 = &a4[v16];
    v66 = v34;
    v68 = a2;
    if (v15 < 8 || a1 >= a2)
    {
LABEL_54:
      sub_1BC503C80(&v68, &v67, &v66);
      return 1;
    }
    v35 = (id *)(v65 - 8);
    v36 = a2;
    v63 = a4;
    while (1)
    {
      v64 = v35 + 1;
      v65 = (unint64_t)v34;
      v37 = v34 - 1;
      v38 = *--v36;
      v39 = *(v34 - 1);
      v40 = v38;
      v41 = objc_msgSend(v39, sel_timingPeriod);
      if (v41
        && (v42 = v41, v43 = objc_msgSend(v41, sel_endDate), v42, v43))
      {
        v62 = v40;
        v44 = objc_msgSend(v40, sel_timingPeriod);
        if (!v44
          || (v45 = v44,
              v46 = objc_msgSend(v44, sel_endDate),
              v45,
              (v59 = v46) == 0))
        {

LABEL_48:
          v66 = v37;
          if ((unint64_t)v64 < v65 || (unint64_t)v35 >= v65 || v64 != (id *)v65)
            *v35 = *v37;
          v36 = a2;
          v34 = v37;
          if (v37 <= v63)
            goto LABEL_54;
          goto LABEL_53;
        }
        v47 = objc_msgSend(v43, sel_dateForUTC);
        v48 = v60;
        sub_1BC62A724();

        v49 = objc_msgSend(v59, sel_dateForUTC);
        sub_1BC62A724();

        v50 = v61;
        v56 = sub_1BC62A718();

        v51 = *(void (**)(char *, uint64_t))(v57 + 8);
        v52 = v50;
        v53 = v58;
        v51(v52, v58);
        v51(v48, v53);

        if ((v56 & 1) == 0)
          goto LABEL_48;
      }
      else
      {

      }
      if (v64 != a2 || v35 >= a2)
        *v35 = *v36;
      v68 = v36;
      v34 = (void **)v65;
      if (v65 <= (unint64_t)v63)
        goto LABEL_54;
LABEL_53:
      --v35;
      a2 = v36;
      if (v36 <= a1)
        goto LABEL_54;
    }
  }
  if (v12 >= -7)
  {
    if (a4 != a1 || &a1[v14] <= a4)
      memmove(a4, a1, 8 * v14);
    v64 = &a4[v14];
    v66 = v64;
    if (v12 >= 8 && (unint64_t)a2 < v65)
    {
      while (1)
      {
        v17 = a4;
        v18 = *a4;
        v19 = *a2;
        v20 = v18;
        v21 = objc_msgSend(v19, sel_timingPeriod);
        if (!v21)
          break;
        v22 = v21;
        v23 = objc_msgSend(v21, sel_endDate);

        if (!v23)
          break;
        v24 = objc_msgSend(v20, sel_timingPeriod);
        if (v24
          && (v25 = v24, v26 = objc_msgSend(v24, sel_endDate),
                         v25,
                         v26))
        {
          v27 = objc_msgSend(v23, sel_dateForUTC);
          sub_1BC62A724();

          v28 = objc_msgSend(v26, sel_dateForUTC);
          v29 = v61;
          sub_1BC62A724();

          v30 = v60;
          LODWORD(v63) = sub_1BC62A718();

          v31 = v58;
          v32 = *(void (**)(char *, uint64_t))(v57 + 8);
          v32(v29, v58);
          v32(v30, v31);

          if ((v63 & 1) != 0)
            goto LABEL_17;
        }
        else
        {

        }
        if (a1 != v17)
          *a1 = *v17;
        a4 = v17 + 1;
        v67 = v17 + 1;
        v33 = a2;
LABEL_25:
        v68 = ++a1;
        if (a4 < v64)
        {
          a2 = v33;
          if ((unint64_t)v33 < v65)
            continue;
        }
        goto LABEL_54;
      }

LABEL_17:
      v33 = a2 + 1;
      a4 = v17;
      if (a1 < a2 || a1 >= v33 || a1 != a2)
        *a1 = *a2;
      goto LABEL_25;
    }
    goto LABEL_54;
  }
LABEL_55:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC44BBBC(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v17 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC3BDBBC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v3 = v17;
    v15 = v1 & 0xC000000000000001;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
    v5 = 0;
    v6 = v1;
    while (v2 != v5)
    {
      if (v15)
        v7 = (id)MEMORY[0x1BCCF24CC](v5, v1);
      else
        v7 = *(id *)(v1 + 8 * v5 + 32);
      v8 = v7;
      v9 = sub_1BC46DCC0(v8);
      if (v9)
      {
        v10 = v9;
        sub_1BC34D844();
        v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1BC6396B0;
        *(_QWORD *)(v11 + 32) = v10;
        v16 = v11;
        sub_1BC62C890();
        v12 = v16;

      }
      else
      {

        v12 = MEMORY[0x1E0DEE9D8];
      }
      v14 = *(_QWORD *)(v17 + 16);
      v13 = *(_QWORD *)(v17 + 24);
      if (v14 >= v13 >> 1)
        sub_1BC3BDBBC(v13 > 1, v14 + 1, 1);
      ++v5;
      *(_QWORD *)(v17 + 16) = v14 + 1;
      *(_QWORD *)(v17 + 8 * v14 + 32) = v12;
      v1 = v6;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MedicationOrderFormatter()
{
  return objc_opt_self();
}

unint64_t sub_1BC44BDB8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC44BDDC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC44BDDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4303C0;
  if (!qword_1EF4303C0)
  {
    v1 = type metadata accessor for MedicationOrderFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF4303C0);
  }
  return result;
}

uint64_t method lookup function for MedicationOrderFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationOrderFormatter.structuredItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationOrderFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MedicationOrderFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

id sub_1BC44BE6C(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_writtenDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1BC44BFD8(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_endedDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1BC44C144(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;

  v1 = objc_msgSend(a1, sel_prescriber);
  if (v1)
  {
    v2 = sub_1BC62C680();
    v4 = v3;

    v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v5 = v2 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v6 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v7 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

id sub_1BC44C33C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v19;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - v3;
  if ((uint64_t)objc_msgSend(a1, sel_numberOfFills) < 1)
    return 0;
  v5 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC639590;
  v7 = objc_msgSend(a1, sel_numberOfFills);
  v8 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = v7;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v9 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v10 = sub_1BC62C6A4();
  v12 = v11;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v4);
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v14 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
  objc_msgSend(v14, sel_setDisplayItemType_, 15);
  v15 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v16 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setTitle_, v16);

  v17 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setSubtitle_, v17);

  objc_msgSend(v14, sel_setSeparatorStyle_, 0);
  objc_msgSend(v14, sel_setSeparatorHidden_, 0);
  objc_msgSend(v14, sel_setExtraTopPadding_, 0);

  return v14;
}

id sub_1BC44C674(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v1 = a1;
  v2 = sub_1BC50704C(v1);
  v4 = v3;

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v7 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

uint64_t sub_1BC44C854@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;

  v4 = sub_1BC62A820();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  v74 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v77 = (char *)&v58 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v73 = (char *)&v58 - v11;
  MEMORY[0x1E0C80A78](v10);
  v81 = (char *)&v58 - v12;
  v13 = 0;
  v14 = 0;
  v15 = a1[7];
  if (*(_QWORD *)(v15 + 16) == 1)
  {
    sub_1BC5262A8(a1[7]);
    if (v18)
    {
      v13 = v16;
      v14 = v17;
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = 0;
      v14 = 0;
    }
  }
  v79 = v13;
  sub_1BC34B508(0, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN, (uint64_t (*)(_QWORD, uint64_t))_s7PDFDataVMa);
  v20 = (uint64_t)a1 + *(int *)(v19 + 28);
  v21 = v20 + *(int *)(_s13ConfigurationVMa() + 36);
  v75 = v5;
  v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v72 = v4;
  v65 = v22;
  v22(v81, (char *)v21, v4);
  v76 = &v58;
  v23 = *a1;
  v24 = a1[1];
  v25 = a1[3];
  v67 = a1[2];
  v68 = v23;
  v26 = a1[5];
  v66 = a1[4];
  v27 = a1[6];
  v28 = MEMORY[0x1E0C80A78](v26);
  v80 = v20;
  v56 = v20;
  v82 = v27;
  v69 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v71 = v24;
  swift_bridgeObjectRetain();
  v70 = v25;
  swift_bridgeObjectRetain();
  v29 = v78;
  v30 = sub_1BC44F87C((uint64_t)sub_1BC44CF40, (uint64_t)(&v58 - 4), sub_1BC504904, (uint64_t (*)(uint64_t, uint64_t))sub_1BC44FB8C);
  if (v29)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    v64 = v6;
    v78 = v14;
    v31 = v82;
    MEMORY[0x1E0C80A78](v30);
    v56 = v15;
    v57 = v80;
    v62 = sub_1BC3B1888((void (*)(_QWORD *__return_ptr, _QWORD *))sub_1BC44F6A4, (uint64_t)(&v58 - 4), v31);
    v63 = 0;
    swift_release();
    if (qword_1ED6A4888 != -1)
      swift_once();
    v32 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v56 = 0xE000000000000000;
    v61 = sub_1BC62A4A8();
    v60 = v33;
    swift_bridgeObjectRelease();

    v34 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v56 = 0xE000000000000000;
    v58 = sub_1BC62A4A8();
    v59 = v35;
    swift_bridgeObjectRelease();

    v37 = v72;
    v36 = v73;
    v38 = v81;
    v39 = v65;
    v65(v73, v81, v72);
    v40 = v75;
    v41 = (*(unsigned __int8 *)(v75 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
    v64 = swift_allocObject();
    v42 = *(void (**)(unint64_t, char *, uint64_t))(v40 + 32);
    v42(v64 + v41, v36, v37);
    v43 = v77;
    v39(v77, v38, v37);
    v75 = swift_allocObject();
    v42(v75 + v41, v43, v37);
    v44 = v74;
    v42((unint64_t)v74, v38, v37);
    v45 = swift_allocObject();
    v42(v45 + v41, v44, v37);
    sub_1BC34B508(0, &qword_1EF4303F0, (uint64_t)&_s10SortedDataVN, (uint64_t (*)(_QWORD, uint64_t))_s7PDFDataVMa);
    v47 = v46;
    sub_1BC36D6D8(v80, (uint64_t)a2 + *(int *)(v46 + 28));
    v48 = v71;
    *a2 = v68;
    a2[1] = v48;
    v49 = v70;
    a2[2] = v67;
    a2[3] = v49;
    v50 = v69;
    a2[4] = v66;
    a2[5] = v50;
    v51 = v78;
    a2[6] = v79;
    a2[7] = v51;
    a2[8] = v62;
    a2[9] = 0x676F6C656C707061;
    a2[10] = 0xE90000000000006FLL;
    v52 = v60;
    a2[11] = v61;
    a2[12] = v52;
    v53 = v59;
    a2[13] = v58;
    a2[14] = v53;
    v54 = v64;
    a2[15] = sub_1BC44F6C4;
    a2[16] = v54;
    a2[17] = sub_1BC44F6D4;
    a2[18] = v75;
    a2[19] = sub_1BC44F790;
    a2[20] = v45;
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(a2, 0, 1, v47);
  }
  return result;
}

BOOL sub_1BC44CDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[4];

  v6 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
  sub_1BC384E68(0, (unint64_t *)&qword_1EF434570, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v19 - v8;
  v11 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  v14 = a3 + *(int *)(_s13ConfigurationVMa() + 36);
  v19[2] = v11;
  v19[3] = v10;
  v19[0] = v13;
  v19[1] = v12;
  v15 = sub_1BC62A820();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v9, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  sub_1BC36E2AC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BC62D064();
  sub_1BC384EB4((uint64_t)v9, (unint64_t *)&qword_1EF434570, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17 == -1;
}

BOOL sub_1BC44CF40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC44CDD0(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1BC44CF5C(uint64_t a1)
{
  __asm { BR              X9 }
}

_QWORD *sub_1BC44CFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *result;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1BC44D090(v5, v4, v1);
  *(_QWORD *)v0 = v6;
  *(_QWORD *)(v0 + 8) = v2;
  *(_QWORD *)(v0 + 16) = v7;
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 32) = result;
  *(_BYTE *)(v0 + 40) = v8;
  return result;
}

_QWORD *sub_1BC44D090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  char v39[16];
  uint64_t v40;
  char v41[16];
  uint64_t v42;
  uint64_t v43;
  char v44[16];
  uint64_t v45[5];
  char v46[8];
  uint64_t v47;
  _OWORD v48[4];

  v6 = _s13ConfigurationVMa();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - v12;
  v14 = a3 + *(int *)(v11 + 36);
  v42 = a2;
  v43 = v14;
  v15 = sub_1BC456CFC(a1, (void (*)(_QWORD *__return_ptr, _OWORD *, uint64_t))sub_1BC456FAC, (uint64_t)v41, (uint64_t)v44, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1BC3BDD80, (uint64_t (*)(uint64_t))sub_1BC5B1500);
  v40 = v14;
  *(_QWORD *)&v48[0] = v15;
  swift_bridgeObjectRetain();
  sub_1BC44FAEC((uint64_t (*)(__int128 *, __int128 *))sub_1BC456FB4, (uint64_t)v39);
  swift_bridgeObjectRelease();
  v16 = a3;
  v17 = *(_QWORD *)&v48[0];
  sub_1BC36D6D8(v16, (uint64_t)v13);
  sub_1BC36D6D8((uint64_t)v13, (uint64_t)v10);
  v18 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = swift_allocObject();
  sub_1BC36D7DC((uint64_t)v13, v19 + v18);
  v20 = *(_QWORD *)(v17 + 16);
  if (v20)
  {
    v36[0] = v19;
    swift_retain();
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v36[1] = v17;
    v22 = (uint64_t *)(v17 + 80);
    do
    {
      v24 = *((_OWORD *)v22 - 3);
      v25 = *((_OWORD *)v22 - 1);
      v48[1] = *((_OWORD *)v22 - 2);
      v48[2] = v25;
      v48[0] = v24;
      v26 = *v22;
      sub_1BC456FD0((uint64_t)v48);
      v27 = swift_bridgeObjectRetain();
      v28 = (void *)MEMORY[0x1BCCF2DD8](v27);
      v29 = v10;
      sub_1BC44E044((uint64_t)v48, (uint64_t)v10, v26, v45);
      v30 = v45[0];
      v31 = v45[1];
      v32 = v45[3];
      v38 = v45[2];
      v37 = v45[4];
      objc_autoreleasePoolPop(v28);
      sub_1BC3CC428((uint64_t)v48);
      swift_bridgeObjectRelease();
      sub_1BC457320((uint64_t)v45, (uint64_t)v46, &qword_1EF4303F8, &qword_1EF42C528, (uint64_t (*)(void))sub_1BC3B8E24, (uint64_t)&_s15FormattedRecordVN);
      if (v47)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1BC3B63E8(0, v21[2] + 1, 1, v21);
        v34 = v21[2];
        v33 = v21[3];
        if (v34 >= v33 >> 1)
          v21 = sub_1BC3B63E8((_QWORD *)(v33 > 1), v34 + 1, 1, v21);
        v21[2] = v34 + 1;
        v23 = &v21[5 * v34];
        v23[4] = v30;
        v23[5] = v31;
        v23[6] = v38;
        v23[7] = v32;
        v23[8] = v37;
      }
      v22 += 7;
      --v20;
      v10 = v29;
    }
    while (v20);
    swift_release();
  }
  else
  {
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_release();
  swift_release();
  sub_1BC36DCA4((uint64_t)v10);
  return v21;
}

_QWORD *sub_1BC44D3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  char v39[16];
  uint64_t v40;
  char v41[16];
  uint64_t v42;
  uint64_t v43;
  char v44[16];
  uint64_t v45[5];
  char v46[8];
  uint64_t v47;
  _OWORD v48[4];

  v6 = _s13ConfigurationVMa();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - v12;
  v14 = a3 + *(int *)(v11 + 36);
  v42 = a2;
  v43 = v14;
  v15 = sub_1BC456CFC(a1, (void (*)(_QWORD *__return_ptr, _OWORD *, uint64_t))sub_1BC457048, (uint64_t)v41, (uint64_t)v44, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1BC3BDD44, (uint64_t (*)(uint64_t))sub_1BC5B1500);
  v40 = v14;
  *(_QWORD *)&v48[0] = v15;
  swift_bridgeObjectRetain();
  sub_1BC44FA4C((uint64_t (*)(__int128 *, __int128 *))sub_1BC456FB4, (uint64_t)v39);
  swift_bridgeObjectRelease();
  v16 = a3;
  v17 = *(_QWORD *)&v48[0];
  sub_1BC36D6D8(v16, (uint64_t)v13);
  sub_1BC36D6D8((uint64_t)v13, (uint64_t)v10);
  v18 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = swift_allocObject();
  sub_1BC36D7DC((uint64_t)v13, v19 + v18);
  v20 = *(_QWORD *)(v17 + 16);
  if (v20)
  {
    v36[0] = v19;
    swift_retain();
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v36[1] = v17;
    v22 = (uint64_t *)(v17 + 80);
    do
    {
      v24 = *((_OWORD *)v22 - 3);
      v25 = *((_OWORD *)v22 - 1);
      v48[1] = *((_OWORD *)v22 - 2);
      v48[2] = v25;
      v48[0] = v24;
      v26 = *v22;
      sub_1BC456FD0((uint64_t)v48);
      v27 = swift_bridgeObjectRetain();
      v28 = (void *)MEMORY[0x1BCCF2DD8](v27);
      v29 = v10;
      sub_1BC44E044((uint64_t)v48, (uint64_t)v10, v26, v45);
      v30 = v45[0];
      v31 = v45[1];
      v32 = v45[3];
      v38 = v45[2];
      v37 = v45[4];
      objc_autoreleasePoolPop(v28);
      sub_1BC3CC428((uint64_t)v48);
      swift_bridgeObjectRelease();
      sub_1BC457320((uint64_t)v45, (uint64_t)v46, &qword_1EF430400, &qword_1EF42C540, (uint64_t (*)(void))sub_1BC3B8ED4, (uint64_t)&_s20FormattedRecordValueVN);
      if (v47)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1BC3B63C4(0, v21[2] + 1, 1, v21);
        v34 = v21[2];
        v33 = v21[3];
        if (v34 >= v33 >> 1)
          v21 = sub_1BC3B63C4((_QWORD *)(v33 > 1), v34 + 1, 1, v21);
        v21[2] = v34 + 1;
        v23 = &v21[5 * v34];
        v23[4] = v30;
        v23[5] = v31;
        v23[6] = v38;
        v23[7] = v32;
        v23[8] = v37;
      }
      v22 += 7;
      --v20;
      v10 = v29;
    }
    while (v20);
    swift_release();
  }
  else
  {
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_release();
  swift_release();
  sub_1BC36DCA4((uint64_t)v10);
  return v21;
}

_QWORD *sub_1BC44D6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  char v39[16];
  uint64_t v40;
  char v41[16];
  uint64_t v42;
  uint64_t v43;
  char v44[16];
  uint64_t v45[5];
  char v46[8];
  uint64_t v47;
  _OWORD v48[4];

  v6 = _s13ConfigurationVMa();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - v12;
  v14 = a3 + *(int *)(v11 + 36);
  v42 = a2;
  v43 = v14;
  v15 = sub_1BC456CFC(a1, (void (*)(_QWORD *__return_ptr, _OWORD *, uint64_t))sub_1BC4570AC, (uint64_t)v41, (uint64_t)v44, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1BC3BDD08, (uint64_t (*)(uint64_t))sub_1BC5B1500);
  v40 = v14;
  *(_QWORD *)&v48[0] = v15;
  swift_bridgeObjectRetain();
  sub_1BC44F9AC((uint64_t (*)(__int128 *, __int128 *))sub_1BC456FB4, (uint64_t)v39);
  swift_bridgeObjectRelease();
  v16 = a3;
  v17 = *(_QWORD *)&v48[0];
  sub_1BC36D6D8(v16, (uint64_t)v13);
  sub_1BC36D6D8((uint64_t)v13, (uint64_t)v10);
  v18 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = swift_allocObject();
  sub_1BC36D7DC((uint64_t)v13, v19 + v18);
  v20 = *(_QWORD *)(v17 + 16);
  if (v20)
  {
    v36[0] = v19;
    swift_retain();
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v36[1] = v17;
    v22 = (uint64_t *)(v17 + 80);
    do
    {
      v24 = *((_OWORD *)v22 - 3);
      v25 = *((_OWORD *)v22 - 1);
      v48[1] = *((_OWORD *)v22 - 2);
      v48[2] = v25;
      v48[0] = v24;
      v26 = *v22;
      sub_1BC456FD0((uint64_t)v48);
      v27 = swift_bridgeObjectRetain();
      v28 = (void *)MEMORY[0x1BCCF2DD8](v27);
      v29 = v10;
      sub_1BC44E044((uint64_t)v48, (uint64_t)v10, v26, v45);
      v30 = v45[0];
      v31 = v45[1];
      v32 = v45[3];
      v38 = v45[2];
      v37 = v45[4];
      objc_autoreleasePoolPop(v28);
      sub_1BC3CC428((uint64_t)v48);
      swift_bridgeObjectRelease();
      sub_1BC457320((uint64_t)v45, (uint64_t)v46, &qword_1EF430408, &qword_1EF42C558, (uint64_t (*)(void))sub_1BC3B8F84, (uint64_t)&_s27FormattedRecordValueInRangeVN);
      if (v47)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1BC3B63A0(0, v21[2] + 1, 1, v21);
        v34 = v21[2];
        v33 = v21[3];
        if (v34 >= v33 >> 1)
          v21 = sub_1BC3B63A0((_QWORD *)(v33 > 1), v34 + 1, 1, v21);
        v21[2] = v34 + 1;
        v23 = &v21[5 * v34];
        v23[4] = v30;
        v23[5] = v31;
        v23[6] = v38;
        v23[7] = v32;
        v23[8] = v37;
      }
      v22 += 7;
      --v20;
      v10 = v29;
    }
    while (v20);
    swift_release();
  }
  else
  {
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_release();
  swift_release();
  sub_1BC36DCA4((uint64_t)v10);
  return v21;
}

_QWORD *sub_1BC44D9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  char v39[16];
  uint64_t v40;
  char v41[16];
  uint64_t v42;
  uint64_t v43;
  char v44[16];
  uint64_t v45[5];
  char v46[8];
  uint64_t v47;
  _OWORD v48[4];

  v6 = _s13ConfigurationVMa();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - v12;
  v14 = a3 + *(int *)(v11 + 36);
  v42 = a2;
  v43 = v14;
  v15 = sub_1BC456CFC(a1, (void (*)(_QWORD *__return_ptr, _OWORD *, uint64_t))sub_1BC45712C, (uint64_t)v41, (uint64_t)v44, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1BC3BDCCC, (uint64_t (*)(uint64_t))sub_1BC5B1500);
  v40 = v14;
  *(_QWORD *)&v48[0] = v15;
  swift_bridgeObjectRetain();
  sub_1BC44F90C((uint64_t (*)(__int128 *, __int128 *))sub_1BC456FB4, (uint64_t)v39);
  swift_bridgeObjectRelease();
  v16 = a3;
  v17 = *(_QWORD *)&v48[0];
  sub_1BC36D6D8(v16, (uint64_t)v13);
  sub_1BC36D6D8((uint64_t)v13, (uint64_t)v10);
  v18 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = swift_allocObject();
  sub_1BC36D7DC((uint64_t)v13, v19 + v18);
  v20 = *(_QWORD *)(v17 + 16);
  if (v20)
  {
    v36[0] = v19;
    swift_retain();
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v36[1] = v17;
    v22 = (uint64_t *)(v17 + 80);
    do
    {
      v24 = *((_OWORD *)v22 - 3);
      v25 = *((_OWORD *)v22 - 1);
      v48[1] = *((_OWORD *)v22 - 2);
      v48[2] = v25;
      v48[0] = v24;
      v26 = *v22;
      sub_1BC456FD0((uint64_t)v48);
      v27 = swift_bridgeObjectRetain();
      v28 = (void *)MEMORY[0x1BCCF2DD8](v27);
      v29 = v10;
      sub_1BC44E044((uint64_t)v48, (uint64_t)v10, v26, v45);
      v30 = v45[0];
      v31 = v45[1];
      v32 = v45[3];
      v38 = v45[2];
      v37 = v45[4];
      objc_autoreleasePoolPop(v28);
      sub_1BC3CC428((uint64_t)v48);
      swift_bridgeObjectRelease();
      sub_1BC457320((uint64_t)v45, (uint64_t)v46, &qword_1EF430410, &qword_1EF42C570, (uint64_t (*)(void))sub_1BC3B9034, (uint64_t)&_s22FormattedRecord3ValuesVN);
      if (v47)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1BC3B637C(0, v21[2] + 1, 1, v21);
        v34 = v21[2];
        v33 = v21[3];
        if (v34 >= v33 >> 1)
          v21 = sub_1BC3B637C((_QWORD *)(v33 > 1), v34 + 1, 1, v21);
        v21[2] = v34 + 1;
        v23 = &v21[5 * v34];
        v23[4] = v30;
        v23[5] = v31;
        v23[6] = v38;
        v23[7] = v32;
        v23[8] = v37;
      }
      v22 += 7;
      --v20;
      v10 = v29;
    }
    while (v20);
    swift_release();
  }
  else
  {
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_release();
  swift_release();
  sub_1BC36DCA4((uint64_t)v10);
  return v21;
}

_QWORD *sub_1BC44DD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  char v39[16];
  uint64_t v40;
  char v41[16];
  uint64_t v42;
  uint64_t v43;
  char v44[16];
  uint64_t v45[5];
  char v46[8];
  uint64_t v47;
  _OWORD v48[4];

  v6 = _s13ConfigurationVMa();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - v12;
  v14 = a3 + *(int *)(v11 + 36);
  v42 = a2;
  v43 = v14;
  v15 = sub_1BC456CFC(a1, (void (*)(_QWORD *__return_ptr, _OWORD *, uint64_t))sub_1BC457194, (uint64_t)v41, (uint64_t)v44, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1BC3BDC90, (uint64_t (*)(uint64_t))sub_1BC5B1500);
  v40 = v14;
  *(_QWORD *)&v48[0] = v15;
  swift_bridgeObjectRetain();
  sub_1BC44F7DC((uint64_t (*)(__int128 *, __int128 *))sub_1BC456FB4, (uint64_t)v39);
  swift_bridgeObjectRelease();
  v16 = a3;
  v17 = *(_QWORD *)&v48[0];
  sub_1BC36D6D8(v16, (uint64_t)v13);
  sub_1BC36D6D8((uint64_t)v13, (uint64_t)v10);
  v18 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = swift_allocObject();
  sub_1BC36D7DC((uint64_t)v13, v19 + v18);
  v20 = *(_QWORD *)(v17 + 16);
  if (v20)
  {
    v36[0] = v19;
    swift_retain();
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v36[1] = v17;
    v22 = (uint64_t *)(v17 + 80);
    do
    {
      v24 = *((_OWORD *)v22 - 3);
      v25 = *((_OWORD *)v22 - 1);
      v48[1] = *((_OWORD *)v22 - 2);
      v48[2] = v25;
      v48[0] = v24;
      v26 = *v22;
      sub_1BC456FD0((uint64_t)v48);
      v27 = swift_bridgeObjectRetain();
      v28 = (void *)MEMORY[0x1BCCF2DD8](v27);
      v29 = v10;
      sub_1BC44E044((uint64_t)v48, (uint64_t)v10, v26, v45);
      v30 = v45[0];
      v31 = v45[1];
      v32 = v45[3];
      v38 = v45[2];
      v37 = v45[4];
      objc_autoreleasePoolPop(v28);
      sub_1BC3CC428((uint64_t)v48);
      swift_bridgeObjectRelease();
      sub_1BC457320((uint64_t)v45, (uint64_t)v46, &qword_1EF430418, &qword_1EF42C588, (uint64_t (*)(void))sub_1BC3B913C, (uint64_t)&_s23FormattedRecordMetadataVN);
      if (v47)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1BC3B6358(0, v21[2] + 1, 1, v21);
        v34 = v21[2];
        v33 = v21[3];
        if (v34 >= v33 >> 1)
          v21 = sub_1BC3B6358((_QWORD *)(v33 > 1), v34 + 1, 1, v21);
        v21[2] = v34 + 1;
        v23 = &v21[5 * v34];
        v23[4] = v30;
        v23[5] = v31;
        v23[6] = v38;
        v23[7] = v32;
        v23[8] = v37;
      }
      v22 += 7;
      --v20;
      v10 = v29;
    }
    while (v20);
    swift_release();
  }
  else
  {
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_release();
  swift_release();
  sub_1BC36DCA4((uint64_t)v10);
  return v21;
}

uint64_t sub_1BC44E044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  char *v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  _QWORD v44[4];
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[32];
  _QWORD v54[2];
  char v55;
  uint64_t v56;

  v56 = a3;
  v49 = a2;
  v7 = sub_1BC62BB34();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4EA0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v44 - v10;
  v12 = sub_1BC62A760();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v45 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1EF4376B0, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v44 - v16;
  sub_1BC384E68(0, &qword_1EF435770, (void (*)(uint64_t))MEMORY[0x1E0CB11F0]);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v44 - v19;
  v21 = sub_1BC62A478();
  v50 = *(_QWORD *)(v21 - 8);
  v51 = v21;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a1;
  sub_1BC3CC3CC(a1, (uint64_t)v53);
  sub_1BC3CC3CC((uint64_t)v53, (uint64_t)v54);
  if ((v55 & 1) != 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v24 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v25 = sub_1BC62A4A8();
    v27 = v26;
    swift_bridgeObjectRelease();

    goto LABEL_10;
  }
  v44[1] = v54[0];
  v44[2] = v54[1];
  v44[3] = v4;
  v28 = sub_1BC62A8D4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v20, 1, 1, v28);
  v29 = sub_1BC62A91C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v17, 1, 1, v29);
  sub_1BC62A460();
  v30 = _s13ConfigurationVMa();
  v31 = v49;
  sub_1BC62A880();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    v39 = v45;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v45, v11, v12);
    v40 = *(void **)(v31 + *(int *)(v30 + 24));
    v41 = (void *)sub_1BC62A700();
    v42 = objc_msgSend(v40, sel_stringFromDate_, v41);

    v25 = sub_1BC62C680();
    v27 = v43;

    (*(void (**)(char *, uint64_t))(v13 + 8))(v39, v12);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v51);
LABEL_10:
    v36 = *(_QWORD *)(v52 + 32);
    v37 = *(_QWORD *)(v52 + 40);
    sub_1BC456FD0(v52);
    result = swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  sub_1BC384EB4((uint64_t)v11, (unint64_t *)&qword_1ED6A4EA0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v32 = v46;
  sub_1BC62BAF8();
  v33 = sub_1BC62BB28();
  v34 = sub_1BC62CAC4();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_1BC30A000, v33, v34, "[PDF]: Failed to create a date from date components.", v35, 2u);
    MEMORY[0x1BCCF36A8](v35, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v48);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v51);
  v25 = 0;
  v27 = 0;
  v36 = 0;
  v37 = 0;
  result = 0;
LABEL_11:
  *a4 = v25;
  a4[1] = v27;
  a4[2] = v36;
  a4[3] = v37;
  a4[4] = result;
  return result;
}

__n128 sub_1BC44E56C@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  __n128 *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  int64_t v17;
  unint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned __int8 v26;
  unint64_t v27;
  __n128 result;
  _QWORD v29[6];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 *v33;
  __int128 v34;
  unint64_t v35;

  v8 = a1;
  v10 = 0;
  v11 = 0;
  v12 = *(_QWORD *)(a3 + 16);
  if (v12 != 1)
  {
    v10 = a1[2].n128_i64[0];
    v13 = a1[2].n128_i64[1];
    if (v13)
    {
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        v14 = sub_1BC558D94(v10, v13);
        if ((v15 & 1) != 0)
        {
          v16 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v14);
          v10 = *v16;
          v11 = v16[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          v10 = 0;
          v11 = 0;
        }
        sub_1BC3CC428((uint64_t)v8);
        sub_1BC3CC428((uint64_t)v8);
      }
      else
      {
        v10 = 0;
        v11 = 0;
      }
    }
    else
    {
      v11 = 0;
    }
  }
  *(_QWORD *)(swift_allocObject() + 16) = a3;
  v17 = *(_QWORD *)(a2 + 16);
  if (v17)
  {
    v30 = v11;
    v31 = a4;
    v32 = v10;
    v33 = v8;
    v35 = MEMORY[0x1E0DEE9D8];
    v29[5] = a3;
    swift_bridgeObjectRetain_n();
    sub_1BC3BD800(0, v17, 0);
    v18 = v35;
    v19 = (_OWORD *)(a2 + 40);
    do
    {
      v20 = *((_QWORD *)v19 - 1);
      v34 = *v19;
      v35 = v18;
      v22 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22 >= v21 >> 1)
      {
        sub_1BC3BD800(v21 > 1, v22 + 1, 1);
        v18 = v35;
      }
      v19 = (_OWORD *)((char *)v19 + 24);
      *(_QWORD *)(v18 + 16) = v22 + 1;
      v23 = v18 + 24 * v22;
      *(_QWORD *)(v23 + 32) = v20;
      *(_OWORD *)(v23 + 40) = v34;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    v24 = swift_release();
    v10 = v32;
    v8 = v33;
    v11 = v30;
    a4 = v31;
  }
  else
  {
    swift_bridgeObjectRetain();
    v24 = swift_release();
    v18 = MEMORY[0x1E0DEE9D8];
  }
  MEMORY[0x1E0C80A78](v24);
  v29[2] = a4;
  v35 = v18;
  swift_bridgeObjectRetain();
  sub_1BC44F87C((uint64_t)sub_1BC45701C, (uint64_t)v29, sub_1BC50492C, (uint64_t (*)(uint64_t, uint64_t))sub_1BC45018C);
  swift_bridgeObjectRelease();
  v25 = v8[1].n128_u64[0];
  v26 = v8[1].n128_u8[8];
  v27 = v35;
  result = *v8;
  *a5 = *v8;
  a5[1].n128_u64[0] = v25;
  a5[1].n128_u8[8] = v26;
  a5[2].n128_u64[0] = v10;
  a5[2].n128_u64[1] = v11;
  a5[3].n128_u64[0] = v27;
  return result;
}

__n128 sub_1BC44E7E8@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  __n128 *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  unint64_t v43;
  unsigned __int8 v44;
  unint64_t v45;
  __n128 result;
  _QWORD v47[6];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 *v51;
  __n128 *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _OWORD v60[5];

  v7 = a1;
  v9 = 0;
  v10 = 0;
  v53 = a3;
  v11 = *(_QWORD *)(a3 + 16);
  if (v11 != 1)
  {
    v9 = a1[2].n128_i64[0];
    v12 = a1[2].n128_i64[1];
    if (v12)
    {
      if (v11)
      {
        swift_bridgeObjectRetain_n();
        v13 = sub_1BC558D94(v9, v12);
        if ((v14 & 1) != 0)
        {
          v15 = (uint64_t *)(*(_QWORD *)(v53 + 56) + 16 * v13);
          v9 = *v15;
          v10 = v15[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          v9 = 0;
          v10 = 0;
        }
        sub_1BC3CC428((uint64_t)v7);
        sub_1BC3CC428((uint64_t)v7);
      }
      else
      {
        v9 = 0;
        v10 = 0;
      }
    }
    else
    {
      v10 = 0;
    }
  }
  v16 = swift_allocObject();
  v17 = v53;
  *(_QWORD *)(v16 + 16) = v53;
  v18 = *(_QWORD *)(a2 + 16);
  if (!v18)
  {
    swift_bridgeObjectRetain();
    v42 = swift_release();
    v21 = MEMORY[0x1E0DEE9D8];
    goto LABEL_28;
  }
  v47[5] = v16;
  v48 = v10;
  v49 = a4;
  v50 = v9;
  v51 = v7;
  v52 = a5;
  v59 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain_n();
  sub_1BC3BD950(0, v18, 0);
  v19 = (uint64_t *)(a2 + 56);
  v20 = v17;
  v21 = v59;
  do
  {
    v22 = *(v19 - 2);
    v23 = *(v19 - 1);
    v24 = *v19;
    v25 = v19[1];
    v26 = v19[2];
    v27 = v19[3];
    v28 = v19[4];
    v29 = v19[6];
    v30 = *(_QWORD *)(v20 + 16);
    v57 = *(v19 - 3);
    v58 = v21;
    v55 = v25;
    v56 = v23;
    v54 = v27;
    if (v30 == 1)
      goto LABEL_13;
    v31 = v19[5];
    if (!v29)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    if (!v30)
    {
LABEL_13:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = sub_1BC558D94(v31, v29);
      if ((v33 & 1) != 0)
      {
        v34 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 16 * v32);
        v31 = *v34;
        v35 = v34[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        goto LABEL_21;
      }
      swift_bridgeObjectRelease_n();
    }
    v31 = 0;
LABEL_20:
    v35 = 0;
LABEL_21:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC40EDE0(v57, v22, v56, v24, v55, v26, v54, v28, (uint64_t *)v60, v31, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v58;
    v59 = v58;
    v37 = *(_QWORD *)(v58 + 16);
    v36 = *(_QWORD *)(v58 + 24);
    if (v37 >= v36 >> 1)
    {
      sub_1BC3BD950(v36 > 1, v37 + 1, 1);
      v21 = v59;
    }
    *(_QWORD *)(v21 + 16) = v37 + 1;
    v38 = (_OWORD *)(v21 + 80 * v37);
    v38[2] = v60[0];
    v39 = v60[1];
    v40 = v60[2];
    v41 = v60[4];
    v38[5] = v60[3];
    v38[6] = v41;
    v38[3] = v39;
    v38[4] = v40;
    v19 += 10;
    --v18;
    v20 = v53;
  }
  while (v18);
  swift_bridgeObjectRelease();
  v42 = swift_release();
  v7 = v51;
  a5 = v52;
  v9 = v50;
  a4 = v49;
  v10 = v48;
LABEL_28:
  MEMORY[0x1E0C80A78](v42);
  v47[2] = a4;
  v59 = v21;
  swift_bridgeObjectRetain();
  sub_1BC44F87C((uint64_t)sub_1BC457138, (uint64_t)v47, sub_1BC504954, (uint64_t (*)(uint64_t, uint64_t))sub_1BC450A64);
  swift_bridgeObjectRelease();
  v43 = v7[1].n128_u64[0];
  v44 = v7[1].n128_u8[8];
  v45 = v59;
  result = *v7;
  *a5 = *v7;
  a5[1].n128_u64[0] = v43;
  a5[1].n128_u8[8] = v44;
  a5[2].n128_u64[0] = v9;
  a5[2].n128_u64[1] = v10;
  a5[3].n128_u64[0] = v45;
  return result;
}

__n128 sub_1BC44EC30@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  __n128 *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unsigned __int8 v32;
  unint64_t v33;
  __n128 result;
  _QWORD v35[6];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 *v39;
  __n128 *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v8 = a1;
  v10 = 0;
  v11 = 0;
  v12 = *(_QWORD *)(a3 + 16);
  if (v12 != 1)
  {
    v10 = a1[2].n128_i64[0];
    v13 = a1[2].n128_i64[1];
    if (v13)
    {
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        v14 = sub_1BC558D94(v10, v13);
        if ((v15 & 1) != 0)
        {
          v16 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v14);
          v10 = *v16;
          v11 = v16[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          v10 = 0;
          v11 = 0;
        }
        sub_1BC3CC428((uint64_t)v8);
        sub_1BC3CC428((uint64_t)v8);
      }
      else
      {
        v10 = 0;
        v11 = 0;
      }
    }
    else
    {
      v11 = 0;
    }
  }
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  v18 = *(_QWORD *)(a2 + 16);
  if (v18)
  {
    v35[4] = v17;
    v36 = v11;
    v37 = a4;
    v38 = v10;
    v39 = v8;
    v40 = a5;
    v46 = MEMORY[0x1E0DEE9D8];
    v35[5] = a3;
    swift_bridgeObjectRetain_n();
    sub_1BC3BD854(0, v18, 0);
    v19 = v46;
    v20 = (uint64_t *)(a2 + 48);
    do
    {
      v21 = *(v20 - 2);
      v22 = *(v20 - 1);
      v23 = v20[1];
      v44 = *v20;
      v45 = v21;
      v24 = v20[2];
      v25 = v20[3];
      v26 = v20[5];
      v42 = v20[4];
      v43 = v24;
      v41 = *((unsigned __int8 *)v20 + 48);
      v27 = *(_QWORD *)(v19 + 16);
      v28 = *(_QWORD *)(v19 + 24);
      v46 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v27 >= v28 >> 1)
      {
        sub_1BC3BD854(v28 > 1, v27 + 1, 1);
        v19 = v46;
      }
      *(_QWORD *)(v19 + 16) = v27 + 1;
      v29 = v19 + 72 * v27;
      *(_QWORD *)(v29 + 32) = v45;
      *(_QWORD *)(v29 + 40) = v22;
      *(_QWORD *)(v29 + 48) = v44;
      *(_QWORD *)(v29 + 56) = v23;
      *(_QWORD *)(v29 + 64) = v43;
      *(_QWORD *)(v29 + 72) = v25;
      *(_QWORD *)(v29 + 80) = v42;
      *(_QWORD *)(v29 + 88) = v26;
      *(_BYTE *)(v29 + 96) = v41;
      v20 += 9;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    v30 = swift_release();
    v8 = v39;
    a5 = v40;
    a4 = v37;
    v10 = v38;
    v11 = v36;
  }
  else
  {
    swift_bridgeObjectRetain();
    v30 = swift_release();
    v19 = MEMORY[0x1E0DEE9D8];
  }
  MEMORY[0x1E0C80A78](v30);
  v35[2] = a4;
  v46 = v19;
  swift_bridgeObjectRetain();
  sub_1BC44F87C((uint64_t)sub_1BC4570B8, (uint64_t)v35, sub_1BC50497C, (uint64_t (*)(uint64_t, uint64_t))sub_1BC45167C);
  swift_bridgeObjectRelease();
  v31 = v8[1].n128_u64[0];
  v32 = v8[1].n128_u8[8];
  v33 = v46;
  result = *v8;
  *a5 = *v8;
  a5[1].n128_u64[0] = v31;
  a5[1].n128_u8[8] = v32;
  a5[2].n128_u64[0] = v10;
  a5[2].n128_u64[1] = v11;
  a5[3].n128_u64[0] = v33;
  return result;
}

__n128 sub_1BC44EEF4@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  __n128 *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unsigned __int8 v31;
  unint64_t v32;
  __n128 result;
  _QWORD v34[7];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 *v38;
  __n128 *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v8 = a1;
  v10 = 0;
  v11 = 0;
  v12 = *(_QWORD *)(a3 + 16);
  if (v12 != 1)
  {
    v10 = a1[2].n128_i64[0];
    v13 = a1[2].n128_i64[1];
    if (v13)
    {
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        v14 = sub_1BC558D94(v10, v13);
        if ((v15 & 1) != 0)
        {
          v16 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v14);
          v10 = *v16;
          v11 = v16[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          v10 = 0;
          v11 = 0;
        }
        sub_1BC3CC428((uint64_t)v8);
        sub_1BC3CC428((uint64_t)v8);
      }
      else
      {
        v10 = 0;
        v11 = 0;
      }
    }
    else
    {
      v11 = 0;
    }
  }
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  v18 = *(_QWORD *)(a2 + 16);
  if (v18)
  {
    v34[5] = v17;
    v35 = v11;
    v36 = a4;
    v37 = v10;
    v38 = v8;
    v39 = a5;
    v42 = MEMORY[0x1E0DEE9D8];
    v34[6] = a3;
    swift_bridgeObjectRetain_n();
    sub_1BC3BD8A8(0, v18, 0);
    v19 = v42;
    v20 = (uint64_t *)(a2 + 72);
    do
    {
      v21 = *(v20 - 5);
      v22 = *(v20 - 4);
      v24 = *(v20 - 3);
      v23 = *(v20 - 2);
      v25 = *v20;
      v40 = *(v20 - 1);
      v41 = v21;
      v42 = v19;
      v26 = *(_QWORD *)(v19 + 16);
      v27 = *(_QWORD *)(v19 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v26 >= v27 >> 1)
      {
        sub_1BC3BD8A8(v27 > 1, v26 + 1, 1);
        v19 = v42;
      }
      v20 += 6;
      *(_QWORD *)(v19 + 16) = v26 + 1;
      v28 = (_QWORD *)(v19 + 48 * v26);
      v28[4] = v41;
      v28[5] = v22;
      v28[6] = v24;
      v28[7] = v23;
      v28[8] = v40;
      v28[9] = v25;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    v29 = swift_release();
    v8 = v38;
    a5 = v39;
    a4 = v36;
    v10 = v37;
    v11 = v35;
  }
  else
  {
    swift_bridgeObjectRetain();
    v29 = swift_release();
    v19 = MEMORY[0x1E0DEE9D8];
  }
  MEMORY[0x1E0C80A78](v29);
  v34[2] = a4;
  v42 = v19;
  swift_bridgeObjectRetain();
  sub_1BC44F87C((uint64_t)sub_1BC45701C, (uint64_t)v34, sub_1BC5049A4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC452188);
  swift_bridgeObjectRelease();
  v30 = v8[1].n128_u64[0];
  v31 = v8[1].n128_u8[8];
  v32 = v42;
  result = *v8;
  *a5 = *v8;
  a5[1].n128_u64[0] = v30;
  a5[1].n128_u8[8] = v31;
  a5[2].n128_u64[0] = v10;
  a5[2].n128_u64[1] = v11;
  a5[3].n128_u64[0] = v32;
  return result;
}

__n128 sub_1BC44F18C@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  __n128 *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unsigned __int8 v27;
  unint64_t v28;
  __n128 result;
  _QWORD v30[6];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 *v34;
  unint64_t v35;

  v8 = a1;
  v10 = 0;
  v11 = 0;
  v12 = *(_QWORD *)(a3 + 16);
  if (v12 != 1)
  {
    v10 = a1[2].n128_i64[0];
    v13 = a1[2].n128_i64[1];
    if (v13)
    {
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        v14 = sub_1BC558D94(v10, v13);
        if ((v15 & 1) != 0)
        {
          v16 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v14);
          v10 = *v16;
          v11 = v16[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          v10 = 0;
          v11 = 0;
        }
        sub_1BC3CC428((uint64_t)v8);
        sub_1BC3CC428((uint64_t)v8);
      }
      else
      {
        v10 = 0;
        v11 = 0;
      }
    }
    else
    {
      v11 = 0;
    }
  }
  *(_QWORD *)(swift_allocObject() + 16) = a3;
  v17 = *(_QWORD *)(a2 + 16);
  if (v17)
  {
    v31 = v11;
    v32 = a4;
    v33 = v10;
    v34 = v8;
    v35 = MEMORY[0x1E0DEE9D8];
    v30[5] = a3;
    swift_bridgeObjectRetain_n();
    sub_1BC3BD8FC(0, v17, 0);
    v18 = v35;
    v19 = (uint64_t *)(a2 + 40);
    do
    {
      v20 = *(v19 - 1);
      v21 = *v19;
      v35 = v18;
      v23 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      swift_bridgeObjectRetain();
      if (v23 >= v22 >> 1)
      {
        sub_1BC3BD8FC(v22 > 1, v23 + 1, 1);
        v18 = v35;
      }
      v19 += 2;
      *(_QWORD *)(v18 + 16) = v23 + 1;
      v24 = v18 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v20;
      *(_QWORD *)(v24 + 40) = v21;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    v25 = swift_release();
    v10 = v33;
    v8 = v34;
    v11 = v31;
    a4 = v32;
  }
  else
  {
    swift_bridgeObjectRetain();
    v25 = swift_release();
    v18 = MEMORY[0x1E0DEE9D8];
  }
  MEMORY[0x1E0C80A78](v25);
  v30[2] = a4;
  v35 = v18;
  swift_bridgeObjectRetain();
  sub_1BC44F87C((uint64_t)sub_1BC45701C, (uint64_t)v30, sub_1BC5049CC, (uint64_t (*)(uint64_t, uint64_t))sub_1BC453174);
  swift_bridgeObjectRelease();
  v26 = v8[1].n128_u64[0];
  v27 = v8[1].n128_u8[8];
  v28 = v35;
  result = *v8;
  *a5 = *v8;
  a5[1].n128_u64[0] = v26;
  a5[1].n128_u8[8] = v27;
  a5[2].n128_u64[0] = v10;
  a5[2].n128_u64[1] = v11;
  a5[3].n128_u64[0] = v28;
  return result;
}

BOOL sub_1BC44F3E8(__int128 *a1, __int128 *a2, uint64_t a3)
{
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;

  v6 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
  sub_1BC384E68(0, (unint64_t *)&qword_1EF434570, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v16 - v8;
  v10 = *a1;
  v11 = *a1;
  v17 = *a2;
  v18 = v10;
  v16[0] = *a2;
  v16[1] = v11;
  v12 = sub_1BC62A820();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v9, a3, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  sub_1BC34B650((uint64_t)&v18);
  sub_1BC34B650((uint64_t)&v17);
  sub_1BC36E2AC();
  v14 = sub_1BC62D064();
  sub_1BC384EB4((uint64_t)v9, (unint64_t *)&qword_1EF434570, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 == -1;
}

BOOL sub_1BC44F544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];

  v10 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
  sub_1BC384E68(0, (unint64_t *)&qword_1EF434570, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v18 - v12;
  v18[2] = a1;
  v18[3] = a2;
  v18[0] = a3;
  v18[1] = a4;
  v14 = sub_1BC62A820();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a5, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  sub_1BC36E2AC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_1BC62D064();
  sub_1BC384EB4((uint64_t)v13, (unint64_t *)&qword_1EF434570, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16 == -1;
}

void sub_1BC44F6A4(uint64_t a1)
{
  sub_1BC44CF5C(a1);
}

uint64_t sub_1BC44F6C4(uint64_t a1)
{
  return sub_1BC44F6E0(a1, sub_1BC4B4C3C);
}

uint64_t sub_1BC44F6D4(uint64_t a1)
{
  return sub_1BC44F6E0(a1, sub_1BC4B4E3C);
}

uint64_t sub_1BC44F6E0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC62A820() - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BC62A820();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BC44F790(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC62A820() - 8) + 80);
  return sub_1BC4B503C(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1BC44F7DC(uint64_t (*a1)(__int128 *, __int128 *), uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v5;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = (_QWORD *)sub_1BC504918(v5);
  result = sub_1BC452780(a1, a2, &qword_1EF42C890, &qword_1EF429BF0, (uint64_t)&_s23FormattedRecordMetadataVN, (void (*)(char **, _QWORD *, char **))sub_1BC503E8C);
  *v2 = v5;
  return result;
}

uint64_t sub_1BC44F87C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t result;

  v9 = *v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = a3(v9);
  result = a4(a1, a2);
  *v4 = v9;
  return result;
}

uint64_t sub_1BC44F90C(uint64_t (*a1)(__int128 *, __int128 *), uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v5;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = (_QWORD *)sub_1BC504940(v5);
  result = sub_1BC452780(a1, a2, &qword_1EF42C878, &qword_1EF429B48, (uint64_t)&_s22FormattedRecord3ValuesVN, (void (*)(char **, _QWORD *, char **))sub_1BC503E8C);
  *v2 = v5;
  return result;
}

uint64_t sub_1BC44F9AC(uint64_t (*a1)(__int128 *, __int128 *), uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v5;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = (_QWORD *)sub_1BC504968(v5);
  result = sub_1BC452780(a1, a2, &qword_1EF42C860, &qword_1EF429BB8, (uint64_t)&_s27FormattedRecordValueInRangeVN, (void (*)(char **, _QWORD *, char **))sub_1BC503E8C);
  *v2 = v5;
  return result;
}

uint64_t sub_1BC44FA4C(uint64_t (*a1)(__int128 *, __int128 *), uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v5;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = (_QWORD *)sub_1BC504990(v5);
  result = sub_1BC452780(a1, a2, &qword_1EF42C848, &qword_1EF429B90, (uint64_t)&_s20FormattedRecordValueVN, (void (*)(char **, _QWORD *, char **))sub_1BC503E8C);
  *v2 = v5;
  return result;
}

uint64_t sub_1BC44FAEC(uint64_t (*a1)(__int128 *, __int128 *), uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v5;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = (_QWORD *)sub_1BC5049B8(v5);
  result = sub_1BC452780(a1, a2, &qword_1EF42C830, &qword_1EF429B70, (uint64_t)&_s15FormattedRecordVN, (void (*)(char **, _QWORD *, char **))sub_1BC503E8C);
  *v2 = v5;
  return result;
}

uint64_t sub_1BC44FB8C(uint64_t (*a1)(uint64_t *, uint64_t *))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v93;

  v3 = v1[1];
  result = sub_1BC62D520();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_116;
    if (v3)
      return sub_1BC453960(0, v3, 1, a1);
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 > -2)
    {
      v6 = result;
      v86 = v1;
      if (v3 < 2)
      {
        v9 = (char *)MEMORY[0x1E0DEE9D8];
        v91 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
        v87 = MEMORY[0x1E0DEE9D8];
        if (v3 != 1)
        {
          v29 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_82:
          v78 = v9;
          if (v29 >= 2)
          {
            v79 = *v86;
            do
            {
              v80 = v29 - 2;
              if (v29 < 2)
                goto LABEL_109;
              if (!v79)
                goto LABEL_121;
              v81 = v78;
              v82 = *(_QWORD *)&v78[16 * v80 + 32];
              v83 = *(_QWORD *)&v78[16 * v29 + 24];
              sub_1BC454A6C((char *)(v79 + 48 * v82), (char *)(v79 + 48 * *(_QWORD *)&v78[16 * v29 + 16]), v79 + 48 * v83, v91, a1);
              if (v2)
                break;
              if (v83 < v82)
                goto LABEL_110;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v81 = sub_1BC504414((uint64_t)v81);
              if (v80 >= *((_QWORD *)v81 + 2))
                goto LABEL_111;
              v84 = &v81[16 * v80 + 32];
              *(_QWORD *)v84 = v82;
              *((_QWORD *)v84 + 1) = v83;
              v85 = *((_QWORD *)v81 + 2);
              if (v29 > v85)
                goto LABEL_112;
              memmove(&v81[16 * v29 + 16], &v81[16 * v29 + 32], 16 * (v85 - v29));
              v78 = v81;
              *((_QWORD *)v81 + 2) = v85 - 1;
              v29 = v85 - 1;
            }
            while (v85 > 2);
          }
LABEL_93:
          swift_bridgeObjectRelease();
          *(_QWORD *)(v87 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        v7 = v5 >> 1;
        v8 = sub_1BC62C8CC();
        *(_QWORD *)(v8 + 16) = v7;
        v87 = v8;
        v91 = (char *)(v8 + 32);
      }
      v10 = 0;
      v11 = *v1;
      v9 = (char *)MEMORY[0x1E0DEE9D8];
      v88 = v6;
      v89 = v3;
      while (1)
      {
        v12 = sub_1BC454558(&v93, v11, v3, v10, a1);
        if (v2)
          goto LABEL_93;
        v13 = v93;
        if ((v12 & 1) != 0)
        {
          if (v93 < v10)
            goto LABEL_114;
          if (v10 < v93)
          {
            v14 = 48 * v93;
            v15 = 48 * v10;
            v16 = v93;
            v17 = v10;
            do
            {
              if (v17 != --v16)
              {
                if (!v11)
                  goto LABEL_120;
                v18 = (_OWORD *)(v11 + v15);
                v19 = v11 + v14;
                v20 = *(_OWORD *)(v11 + v15);
                v21 = *(_OWORD *)(v11 + v15 + 16);
                v22 = *(_QWORD *)(v11 + v15 + 32);
                v23 = *(_BYTE *)(v11 + v15 + 40);
                v25 = *(_OWORD *)(v11 + v14 - 32);
                v24 = *(_OWORD *)(v11 + v14 - 16);
                *v18 = *(_OWORD *)(v11 + v14 - 48);
                v18[1] = v25;
                v18[2] = v24;
                *(_OWORD *)(v19 - 48) = v20;
                *(_OWORD *)(v19 - 32) = v21;
                *(_QWORD *)(v19 - 16) = v22;
                *(_BYTE *)(v19 - 8) = v23;
              }
              ++v17;
              v14 -= 48;
              v15 += 48;
            }
            while (v17 < v16);
          }
        }
        if (v13 < v3)
        {
          if (__OFSUB__(v13, v10))
            goto LABEL_115;
          if (v13 - v10 < v6)
          {
            if (__OFADD__(v10, v6))
              goto LABEL_117;
            if (v10 + v6 >= v3)
              v26 = v3;
            else
              v26 = v10 + v6;
            if (v26 < v10)
            {
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
              break;
            }
            sub_1BC453960(v10, v26, v13, a1);
            v13 = v26;
          }
        }
        if (v13 < v10)
          goto LABEL_113;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1BC503AB4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        v28 = *((_QWORD *)v9 + 2);
        v27 = *((_QWORD *)v9 + 3);
        v29 = v28 + 1;
        v90 = v13;
        if (v28 >= v27 >> 1)
          v9 = sub_1BC503AB4((char *)(v27 > 1), v28 + 1, 1, v9);
        *((_QWORD *)v9 + 2) = v29;
        v30 = v9 + 32;
        v31 = (uint64_t *)&v9[16 * v28 + 32];
        *v31 = v10;
        v31[1] = v13;
        if (v28)
        {
          while (1)
          {
            v32 = v29 - 1;
            if (v29 >= 4)
            {
              v37 = &v30[16 * v29];
              v38 = *((_QWORD *)v37 - 8);
              v39 = *((_QWORD *)v37 - 7);
              v43 = __OFSUB__(v39, v38);
              v40 = v39 - v38;
              if (v43)
                goto LABEL_98;
              v42 = *((_QWORD *)v37 - 6);
              v41 = *((_QWORD *)v37 - 5);
              v43 = __OFSUB__(v41, v42);
              v35 = v41 - v42;
              v36 = v43;
              if (v43)
                goto LABEL_99;
              v44 = v29 - 2;
              v45 = &v30[16 * v29 - 32];
              v47 = *(_QWORD *)v45;
              v46 = *((_QWORD *)v45 + 1);
              v43 = __OFSUB__(v46, v47);
              v48 = v46 - v47;
              if (v43)
                goto LABEL_101;
              v43 = __OFADD__(v35, v48);
              v49 = v35 + v48;
              if (v43)
                goto LABEL_104;
              if (v49 >= v40)
              {
                v67 = &v30[16 * v32];
                v69 = *(_QWORD *)v67;
                v68 = *((_QWORD *)v67 + 1);
                v43 = __OFSUB__(v68, v69);
                v70 = v68 - v69;
                if (v43)
                  goto LABEL_108;
                v60 = v35 < v70;
                goto LABEL_68;
              }
            }
            else
            {
              if (v29 != 3)
              {
                v61 = *((_QWORD *)v9 + 4);
                v62 = *((_QWORD *)v9 + 5);
                v43 = __OFSUB__(v62, v61);
                v54 = v62 - v61;
                v55 = v43;
                goto LABEL_62;
              }
              v34 = *((_QWORD *)v9 + 4);
              v33 = *((_QWORD *)v9 + 5);
              v43 = __OFSUB__(v33, v34);
              v35 = v33 - v34;
              v36 = v43;
            }
            if ((v36 & 1) != 0)
              goto LABEL_100;
            v44 = v29 - 2;
            v50 = &v30[16 * v29 - 32];
            v52 = *(_QWORD *)v50;
            v51 = *((_QWORD *)v50 + 1);
            v53 = __OFSUB__(v51, v52);
            v54 = v51 - v52;
            v55 = v53;
            if (v53)
              goto LABEL_103;
            v56 = &v30[16 * v32];
            v58 = *(_QWORD *)v56;
            v57 = *((_QWORD *)v56 + 1);
            v43 = __OFSUB__(v57, v58);
            v59 = v57 - v58;
            if (v43)
              goto LABEL_106;
            if (__OFADD__(v54, v59))
              goto LABEL_107;
            if (v54 + v59 >= v35)
            {
              v60 = v35 < v59;
LABEL_68:
              if (v60)
                v32 = v44;
              goto LABEL_70;
            }
LABEL_62:
            if ((v55 & 1) != 0)
              goto LABEL_102;
            v63 = &v30[16 * v32];
            v65 = *(_QWORD *)v63;
            v64 = *((_QWORD *)v63 + 1);
            v43 = __OFSUB__(v64, v65);
            v66 = v64 - v65;
            if (v43)
              goto LABEL_105;
            if (v66 < v54)
              goto LABEL_78;
LABEL_70:
            v71 = v32 - 1;
            if (v32 - 1 >= v29)
            {
              __break(1u);
LABEL_95:
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
LABEL_98:
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
              goto LABEL_118;
            }
            if (!v11)
              goto LABEL_119;
            v72 = v9;
            v73 = &v30[16 * v71];
            v74 = *(_QWORD *)v73;
            v75 = &v30[16 * v32];
            v76 = *((_QWORD *)v75 + 1);
            sub_1BC454A6C((char *)(v11 + 48 * *(_QWORD *)v73), (char *)(v11 + 48 * *(_QWORD *)v75), v11 + 48 * v76, v91, a1);
            if (v76 < v74)
              goto LABEL_95;
            if (v32 > *((_QWORD *)v72 + 2))
              goto LABEL_96;
            *(_QWORD *)v73 = v74;
            *(_QWORD *)&v30[16 * v71 + 8] = v76;
            v77 = *((_QWORD *)v72 + 2);
            if (v32 >= v77)
              goto LABEL_97;
            v9 = v72;
            v29 = v77 - 1;
            memmove(&v30[16 * v32], v75 + 16, 16 * (v77 - 1 - v32));
            *((_QWORD *)v72 + 2) = v77 - 1;
            if (v77 <= 2)
              goto LABEL_78;
          }
        }
        v29 = 1;
LABEL_78:
        v3 = v89;
        v10 = v90;
        v6 = v88;
        if (v90 >= v89)
          goto LABEL_82;
      }
    }
    result = sub_1BC62D388();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC45018C(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *__dst;
  uint64_t v129;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v4 = v3;
  v137 = a2;
  v5 = v2[1];
  result = sub_1BC62D520();
  if (result >= v5)
  {
    if (v5 < 0)
      goto LABEL_141;
    if (v5)
      return sub_1BC453B14(0, v5, 1, a1, v137);
  }
  else
  {
    if (v5 >= 0)
      v7 = v5;
    else
      v7 = v5 + 1;
    if (v5 > -2)
    {
      v126 = v5;
      v119 = result;
      v117 = v2;
      if (v5 < 2)
      {
        v10 = (char *)MEMORY[0x1E0DEE9D8];
        __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
        v120 = MEMORY[0x1E0DEE9D8];
        if (v5 != 1)
        {
          v44 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
          goto LABEL_103;
        }
      }
      else
      {
        v8 = v7 >> 1;
        v9 = sub_1BC62C8CC();
        *(_QWORD *)(v9 + 16) = v8;
        v120 = v9;
        __dst = (char *)(v9 + 32);
      }
      v11 = 0;
      v12 = *v2;
      v118 = *v2 + 32;
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = v126;
      v129 = *v2;
      while (1)
      {
        v14 = v11;
        v15 = v11 + 1;
        v123 = v11;
        if (v11 + 1 < v13)
        {
          v121 = v10;
          v16 = (uint64_t *)(v12 + 24 * v15);
          v17 = v16[1];
          v18 = v16[2];
          v134 = *v16;
          v135 = v17;
          v136 = v18;
          v19 = (uint64_t *)(v12 + 24 * v11);
          v20 = v19[1];
          v21 = v19[2];
          v131 = *v19;
          v132 = v20;
          v133 = v21;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v22 = a1(&v134, &v131);
          if (v4)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_118;
          }
          v23 = v22;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 = v14 + 2;
          if (v14 + 2 < v126)
          {
            v24 = (_QWORD *)(v118 + 24 * v14);
            v25 = v24;
            while (1)
            {
              v26 = v15;
              v27 = v24[1];
              v28 = v25[3];
              v25 += 3;
              v29 = v24[4];
              v134 = v24[2];
              v135 = v28;
              v136 = v29;
              v30 = *v24;
              v131 = *(v24 - 1);
              v132 = v30;
              v133 = v27;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v31 = a1(&v134, &v131);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (((v23 ^ v31) & 1) != 0)
                break;
              v15 = v26 + 1;
              v24 = v25;
              if (v126 == v26 + 1)
              {
                v15 = v126;
                goto LABEL_21;
              }
            }
            v15 = v26;
LABEL_21:
            v14 = v123;
          }
          v10 = v121;
          v12 = v129;
          if ((v23 & 1) != 0)
          {
            if (v15 < v14)
              goto LABEL_145;
            v13 = v126;
            if (v14 < v15)
            {
              v32 = 24 * v15;
              v33 = 24 * v14;
              v34 = v15;
              v35 = v14;
              do
              {
                if (v35 != --v34)
                {
                  if (!v129)
                    goto LABEL_148;
                  v36 = v129 + v33;
                  v37 = v129 + v32;
                  v38 = *(_QWORD *)(v129 + v33);
                  v39 = *(_OWORD *)(v129 + v33 + 8);
                  v40 = *(_OWORD *)(v129 + v32 - 24);
                  *(_QWORD *)(v36 + 16) = *(_QWORD *)(v129 + v32 - 8);
                  *(_OWORD *)v36 = v40;
                  *(_QWORD *)(v37 - 24) = v38;
                  *(_OWORD *)(v37 - 16) = v39;
                }
                ++v35;
                v32 -= 24;
                v33 += 24;
              }
              while (v35 < v34);
            }
          }
          else
          {
            v13 = v126;
          }
        }
        if (v15 >= v13)
          goto LABEL_41;
        if (__OFSUB__(v15, v14))
          goto LABEL_142;
        if (v15 - v14 >= v119)
        {
LABEL_41:
          if (v15 < v14)
            goto LABEL_140;
          goto LABEL_42;
        }
        if (__OFADD__(v14, v119))
          goto LABEL_143;
        v41 = v14 + v119 >= v13 ? v13 : v14 + v119;
        if (v41 < v14)
          break;
        if (v15 == v41)
          goto LABEL_41;
        v122 = v10;
        v127 = v4;
        v93 = (_QWORD *)(v12 + 24 * v15);
        v115 = v41;
        do
        {
          v94 = (uint64_t *)(v12 + 24 * v15);
          v95 = *v94;
          v96 = v94[1];
          v97 = v94[2];
          v98 = v14;
          v116 = v93;
          v99 = v93;
          v125 = v15;
          while (1)
          {
            v134 = v95;
            v135 = v96;
            v100 = *(v99 - 3);
            v101 = *(v99 - 2);
            v136 = v97;
            v102 = *(v99 - 1);
            v131 = v100;
            v132 = v101;
            v133 = v102;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v103 = a1(&v134, &v131);
            if (v127)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_119;
            }
            v104 = v103;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v104 & 1) == 0)
              break;
            v12 = v129;
            v105 = v125;
            if (!v129)
              goto LABEL_147;
            v95 = *v99;
            v96 = v99[1];
            v97 = v99[2];
            *(_OWORD *)v99 = *(_OWORD *)(v99 - 3);
            v99[2] = *(v99 - 1);
            *(v99 - 2) = v96;
            *(v99 - 1) = v97;
            *(v99 - 3) = v95;
            v99 -= 3;
            if (v125 == ++v98)
              goto LABEL_99;
          }
          v12 = v129;
          v105 = v125;
LABEL_99:
          v15 = v105 + 1;
          v93 = v116 + 3;
          v14 = v123;
        }
        while (v15 != v115);
        v15 = v115;
        v4 = 0;
        v10 = v122;
        if (v115 < v123)
          goto LABEL_140;
LABEL_42:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1BC503AB4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
        v43 = *((_QWORD *)v10 + 2);
        v42 = *((_QWORD *)v10 + 3);
        v44 = v43 + 1;
        v12 = v129;
        if (v43 >= v42 >> 1)
        {
          v106 = sub_1BC503AB4((char *)(v42 > 1), v43 + 1, 1, v10);
          v12 = v129;
          v10 = v106;
        }
        *((_QWORD *)v10 + 2) = v44;
        v45 = v10 + 32;
        v46 = &v10[16 * v43 + 32];
        *(_QWORD *)v46 = v123;
        *((_QWORD *)v46 + 1) = v15;
        v124 = v15;
        if (v43)
        {
LABEL_47:
          v47 = v44 - 1;
          if (v44 >= 4)
          {
            v52 = &v45[16 * v44];
            v53 = *((_QWORD *)v52 - 8);
            v54 = *((_QWORD *)v52 - 7);
            v58 = __OFSUB__(v54, v53);
            v55 = v54 - v53;
            if (v58)
              goto LABEL_125;
            v57 = *((_QWORD *)v52 - 6);
            v56 = *((_QWORD *)v52 - 5);
            v58 = __OFSUB__(v56, v57);
            v50 = v56 - v57;
            v51 = v58;
            if (v58)
              goto LABEL_126;
            v59 = v44 - 2;
            v60 = &v45[16 * v44 - 32];
            v62 = *(_QWORD *)v60;
            v61 = *((_QWORD *)v60 + 1);
            v58 = __OFSUB__(v61, v62);
            v63 = v61 - v62;
            if (v58)
              goto LABEL_128;
            v58 = __OFADD__(v50, v63);
            v64 = v50 + v63;
            if (v58)
              goto LABEL_131;
            if (v64 >= v55)
            {
              v82 = &v45[16 * v47];
              v84 = *(_QWORD *)v82;
              v83 = *((_QWORD *)v82 + 1);
              v58 = __OFSUB__(v83, v84);
              v85 = v83 - v84;
              if (v58)
                goto LABEL_135;
              v75 = v50 < v85;
            }
            else
            {
LABEL_60:
              if ((v51 & 1) != 0)
                goto LABEL_127;
              v59 = v44 - 2;
              v65 = &v45[16 * v44 - 32];
              v67 = *(_QWORD *)v65;
              v66 = *((_QWORD *)v65 + 1);
              v68 = __OFSUB__(v66, v67);
              v69 = v66 - v67;
              v70 = v68;
              if (v68)
                goto LABEL_130;
              v71 = &v45[16 * v47];
              v73 = *(_QWORD *)v71;
              v72 = *((_QWORD *)v71 + 1);
              v58 = __OFSUB__(v72, v73);
              v74 = v72 - v73;
              if (v58)
                goto LABEL_133;
              if (__OFADD__(v69, v74))
                goto LABEL_134;
              if (v69 + v74 < v50)
                goto LABEL_72;
              v75 = v50 < v74;
            }
            if (v75)
              v47 = v59;
          }
          else
          {
            if (v44 == 3)
            {
              v49 = *((_QWORD *)v10 + 4);
              v48 = *((_QWORD *)v10 + 5);
              v58 = __OFSUB__(v48, v49);
              v50 = v48 - v49;
              v51 = v58;
              goto LABEL_60;
            }
            v76 = *((_QWORD *)v10 + 4);
            v77 = *((_QWORD *)v10 + 5);
            v58 = __OFSUB__(v77, v76);
            v69 = v77 - v76;
            v70 = v58;
LABEL_72:
            if ((v70 & 1) != 0)
              goto LABEL_129;
            v78 = &v45[16 * v47];
            v80 = *(_QWORD *)v78;
            v79 = *((_QWORD *)v78 + 1);
            v58 = __OFSUB__(v79, v80);
            v81 = v79 - v80;
            if (v58)
              goto LABEL_132;
            if (v81 < v69)
              goto LABEL_89;
          }
          v86 = v47 - 1;
          if (v47 - 1 >= v44)
          {
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
            break;
          }
          if (!v12)
            goto LABEL_146;
          v87 = v10;
          v88 = &v45[16 * v86];
          v89 = *(_QWORD *)v88;
          v90 = &v45[16 * v47];
          v91 = *((_QWORD *)v90 + 1);
          sub_1BC454F98((char *)(v12 + 24 * *(_QWORD *)v88), (char *)(v12 + 24 * *(_QWORD *)v90), v12 + 24 * v91, __dst, a1);
          if (v4)
            goto LABEL_118;
          if (v91 < v89)
            goto LABEL_122;
          if (v47 > *((_QWORD *)v87 + 2))
            goto LABEL_123;
          *(_QWORD *)v88 = v89;
          *(_QWORD *)&v45[16 * v86 + 8] = v91;
          v92 = *((_QWORD *)v87 + 2);
          if (v47 >= v92)
            goto LABEL_124;
          v10 = v87;
          v44 = v92 - 1;
          memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
          *((_QWORD *)v87 + 2) = v92 - 1;
          v12 = v129;
          if (v92 <= 2)
            goto LABEL_89;
          goto LABEL_47;
        }
        v44 = 1;
LABEL_89:
        v11 = v124;
        v13 = v126;
        if (v124 >= v126)
        {
LABEL_103:
          if (v44 >= 2)
          {
            v107 = *v117;
            do
            {
              v108 = v44 - 2;
              if (v44 < 2)
                goto LABEL_136;
              if (!v107)
                goto LABEL_149;
              v109 = v10;
              v110 = v10 + 32;
              v111 = *(_QWORD *)&v10[16 * v108 + 32];
              v112 = *(_QWORD *)&v10[16 * v44 + 24];
              sub_1BC454F98((char *)(v107 + 24 * v111), (char *)(v107 + 24 * *(_QWORD *)&v110[16 * v44 - 16]), v107 + 24 * v112, __dst, a1);
              if (v4)
                break;
              if (v112 < v111)
                goto LABEL_137;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v109 = sub_1BC504414((uint64_t)v109);
              if (v108 >= *((_QWORD *)v109 + 2))
                goto LABEL_138;
              v113 = &v109[16 * v108 + 32];
              *(_QWORD *)v113 = v111;
              *((_QWORD *)v113 + 1) = v112;
              v114 = *((_QWORD *)v109 + 2);
              if (v44 > v114)
                goto LABEL_139;
              v10 = v109;
              memmove(&v109[16 * v44 + 16], &v109[16 * v44 + 32], 16 * (v114 - v44));
              *((_QWORD *)v109 + 2) = v114 - 1;
              v44 = v114 - 1;
            }
            while (v114 > 2);
          }
LABEL_118:
          swift_bridgeObjectRelease();
LABEL_119:
          *(_QWORD *)(v120 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
    }
    result = sub_1BC62D388();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC450A64(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  char v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  char v139;
  uint64_t v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  unint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  _QWORD *v165;
  __int128 v166;
  char *__dst;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;

  v4 = v3;
  v199 = a2;
  v5 = v2[1];
  result = sub_1BC62D520();
  if (result >= v5)
  {
    if (v5 < 0)
      goto LABEL_139;
    if (v5)
      return sub_1BC453C80(0, v5, 1, a1);
    return result;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 <= -2)
    goto LABEL_148;
  v162 = v5;
  v158 = result;
  v156 = v2;
  if (v5 < 2)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v159 = MEMORY[0x1E0DEE9D8];
    if (v5 != 1)
    {
      v68 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_103:
      if (v68 >= 2)
      {
        v145 = *v156;
        do
        {
          v146 = v68 - 2;
          if (v68 < 2)
            goto LABEL_134;
          if (!v145)
            goto LABEL_147;
          v147 = v10;
          v148 = v10 + 32;
          v149 = *(_QWORD *)&v10[16 * v146 + 32];
          v150 = *(_QWORD *)&v10[16 * v68 + 24];
          sub_1BC4553E8((char *)(v145 + 80 * v149), (char *)(v145 + 80 * *(_QWORD *)&v148[16 * v68 - 16]), v145 + 80 * v150, __dst, a1);
          if (v4)
            break;
          if (v150 < v149)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v147 = sub_1BC504414((uint64_t)v147);
          if (v146 >= *((_QWORD *)v147 + 2))
            goto LABEL_136;
          v151 = &v147[16 * v146 + 32];
          *(_QWORD *)v151 = v149;
          *((_QWORD *)v151 + 1) = v150;
          v152 = *((_QWORD *)v147 + 2);
          if (v68 > v152)
            goto LABEL_137;
          v10 = v147;
          memmove(&v147[16 * v68 + 16], &v147[16 * v68 + 32], 16 * (v152 - v68));
          *((_QWORD *)v147 + 2) = v152 - 1;
          v68 = v152 - 1;
        }
        while (v152 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v159 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = v7 >> 1;
    v9 = sub_1BC62C8CC();
    *(_QWORD *)(v9 + 16) = v8;
    v159 = v9;
    __dst = (char *)(v9 + 32);
  }
  v11 = 0;
  v12 = *v2;
  v157 = *v2 + 120;
  v155 = *v2 + 72;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v13 = v162;
  v174 = *v2;
  while (1)
  {
    v14 = v11;
    v15 = v11 + 1;
    v160 = v11;
    v161 = v10;
    if (v11 + 1 < v13)
    {
      v16 = (uint64_t *)(v12 + 80 * v15);
      v17 = v16[1];
      v18 = v16[2];
      v19 = v16[3];
      v20 = v16[4];
      v21 = v16[5];
      v22 = v16[6];
      v23 = v16[7];
      v24 = v16[8];
      v25 = v16[9];
      v189 = *v16;
      v190 = v17;
      v191 = v18;
      v192 = v19;
      v193 = v20;
      v194 = v21;
      v195 = v22;
      v196 = v23;
      v197 = v24;
      v198 = v25;
      v26 = (uint64_t *)(v12 + 80 * v11);
      v27 = v26[1];
      v28 = v26[2];
      v29 = v26[3];
      v30 = v26[4];
      v31 = v26[5];
      v175 = v4;
      v32 = v26[6];
      v33 = v26[7];
      v34 = v26[8];
      v35 = v26[9];
      v179 = *v26;
      v180 = v27;
      v181 = v28;
      v182 = v29;
      v183 = v30;
      v184 = v31;
      v185 = v32;
      v186 = v33;
      v187 = v34;
      v188 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v164 = a1(&v189, &v179);
      if (v175)
      {
LABEL_115:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_116;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v160;
      v15 = v160 + 2;
      if (v160 + 2 < v162)
      {
        v36 = (_QWORD *)(v157 + 80 * v160);
        v37 = v36;
        while (1)
        {
          v170 = v15;
          v39 = v36[6];
          v38 = v36[7];
          v40 = v37[10];
          v165 = v37 + 10;
          v42 = v36[8];
          v41 = v36[9];
          v43 = v36[11];
          v44 = v36[12];
          v45 = v36[13];
          v46 = v36[14];
          v47 = v36[4];
          v189 = v36[5];
          v190 = v39;
          v191 = v38;
          v192 = v42;
          v193 = v41;
          v194 = v40;
          v195 = v43;
          v196 = v44;
          v197 = v45;
          v198 = v46;
          v48 = *(v36 - 5);
          v49 = *(v36 - 4);
          v50 = *(v36 - 3);
          v51 = *(v36 - 2);
          v52 = *(v36 - 1);
          v53 = *v36;
          v54 = v36[1];
          v55 = v36[2];
          v56 = v36[3];
          v179 = v48;
          v180 = v49;
          v181 = v50;
          v182 = v51;
          v183 = v52;
          v184 = v53;
          v185 = v54;
          v186 = v55;
          v187 = v56;
          v188 = v47;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          LODWORD(v49) = a1(&v189, &v179);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (((v164 ^ v49) & 1) != 0)
            break;
          v15 = v170 + 1;
          v37 = v165;
          v36 = v165;
          if (v162 == v170 + 1)
          {
            v15 = v162;
            goto LABEL_21;
          }
        }
        v15 = v170;
LABEL_21:
        v14 = v160;
      }
      v12 = v174;
      v4 = 0;
      v10 = v161;
      if ((v164 & 1) != 0)
      {
        if (v15 < v14)
          goto LABEL_143;
        if (v14 < v15)
        {
          v57 = 80 * v15;
          v58 = 80 * v14;
          v59 = v15;
          v60 = v15;
          v61 = v14;
          do
          {
            if (v61 != --v60)
            {
              if (!v12)
                goto LABEL_146;
              v62 = v12 + v57;
              v176 = *(_OWORD *)(v12 + v58);
              v168 = *(_OWORD *)(v12 + v58 + 32);
              v171 = *(_OWORD *)(v12 + v58 + 16);
              v63 = *(_QWORD *)(v12 + v58 + 48);
              v64 = *(_QWORD *)(v12 + v58 + 56);
              v166 = *(_OWORD *)(v12 + v58 + 64);
              memmove((void *)(v12 + v58), (const void *)(v12 + v57 - 80), 0x50uLL);
              v12 = v174;
              *(_OWORD *)(v62 - 80) = v176;
              *(_OWORD *)(v62 - 64) = v171;
              *(_OWORD *)(v62 - 48) = v168;
              *(_QWORD *)(v62 - 32) = v63;
              *(_QWORD *)(v62 - 24) = v64;
              *(_OWORD *)(v62 - 16) = v166;
              v10 = v161;
            }
            ++v61;
            v57 -= 80;
            v58 += 80;
          }
          while (v61 < v60);
          v15 = v59;
          v14 = v160;
        }
      }
    }
    if (v15 >= v162)
      goto LABEL_41;
    if (__OFSUB__(v15, v14))
      goto LABEL_140;
    if (v15 - v14 >= v158)
      goto LABEL_41;
    if (__OFADD__(v14, v158))
      goto LABEL_141;
    v65 = v14 + v158 >= v162 ? v162 : v14 + v158;
    if (v65 < v14)
      break;
    if (v15 != v65)
    {
      v177 = v4;
      v117 = (_QWORD *)(v155 + 80 * v15);
      v153 = v65;
      do
      {
        v118 = (uint64_t *)(v12 + 80 * v15);
        v119 = *v118;
        v120 = v118[1];
        v121 = v118[2];
        v122 = v118[3];
        v123 = v118[4];
        v124 = v118[5];
        v125 = v118[6];
        v126 = v118[7];
        v127 = v118[8];
        v128 = v118[9];
        v154 = v117;
        v173 = v15;
        while (1)
        {
          v163 = v14;
          v189 = v119;
          v190 = v120;
          v191 = v121;
          v192 = v122;
          v193 = v123;
          v194 = v124;
          v195 = v125;
          v196 = v126;
          v197 = v127;
          v198 = v128;
          v129 = (__int128 *)(v117 - 19);
          v169 = *(v117 - 18);
          v130 = *(v117 - 17);
          v131 = *(v117 - 16);
          v132 = *(v117 - 15);
          v133 = *(v117 - 14);
          v134 = *(v117 - 13);
          v135 = *(v117 - 12);
          v137 = *(v117 - 11);
          v136 = *(v117 - 10);
          v179 = *(v117 - 19);
          v180 = v169;
          v181 = v130;
          v182 = v131;
          v183 = v132;
          v184 = v133;
          v185 = v134;
          v186 = v135;
          v187 = v137;
          v188 = v136;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v138 = a1(&v189, &v179);
          if (v177)
            goto LABEL_115;
          v139 = v138;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v139 & 1) == 0)
            break;
          v12 = v174;
          v140 = v173;
          if (!v174)
            goto LABEL_145;
          v119 = *(v117 - 9);
          v120 = *(v117 - 8);
          v121 = *(v117 - 7);
          v122 = *(v117 - 6);
          v123 = *(v117 - 5);
          v124 = *(v117 - 4);
          v125 = *(v117 - 3);
          v126 = *(v117 - 2);
          v127 = *(v117 - 1);
          v128 = *v117;
          v141 = *(_OWORD *)(v117 - 13);
          *(_OWORD *)(v117 - 5) = *(_OWORD *)(v117 - 15);
          *(_OWORD *)(v117 - 3) = v141;
          *(_OWORD *)(v117 - 1) = *(_OWORD *)(v117 - 11);
          v143 = *v129;
          v142 = *(_OWORD *)(v117 - 17);
          *(v117 - 10) = v128;
          v117 -= 10;
          v129[5] = v143;
          v129[6] = v142;
          *(v117 - 9) = v119;
          *(v117 - 8) = v120;
          *(v117 - 7) = v121;
          *(v117 - 6) = v122;
          *(v117 - 5) = v123;
          *(v117 - 4) = v124;
          *(v117 - 3) = v125;
          *(v117 - 2) = v126;
          ++v14;
          *(v117 - 1) = v127;
          if (v173 == v163 + 1)
            goto LABEL_99;
        }
        v12 = v174;
        v140 = v173;
LABEL_99:
        v15 = v140 + 1;
        v117 = v154 + 10;
        v14 = v160;
      }
      while (v15 != v153);
      v15 = v153;
      v4 = 0;
      v10 = v161;
      if (v153 < v160)
        goto LABEL_138;
      goto LABEL_42;
    }
LABEL_41:
    if (v15 < v14)
      goto LABEL_138;
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BC503AB4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v67 = *((_QWORD *)v10 + 2);
    v66 = *((_QWORD *)v10 + 3);
    v68 = v67 + 1;
    v12 = v174;
    if (v67 >= v66 >> 1)
    {
      v144 = sub_1BC503AB4((char *)(v66 > 1), v67 + 1, 1, v10);
      v12 = v174;
      v10 = v144;
    }
    *((_QWORD *)v10 + 2) = v68;
    v69 = v10 + 32;
    v70 = &v10[16 * v67 + 32];
    *(_QWORD *)v70 = v160;
    *((_QWORD *)v70 + 1) = v15;
    v172 = v15;
    if (v67)
    {
      while (1)
      {
        v71 = v68 - 1;
        if (v68 >= 4)
        {
          v76 = &v69[16 * v68];
          v77 = *((_QWORD *)v76 - 8);
          v78 = *((_QWORD *)v76 - 7);
          v82 = __OFSUB__(v78, v77);
          v79 = v78 - v77;
          if (v82)
            goto LABEL_123;
          v81 = *((_QWORD *)v76 - 6);
          v80 = *((_QWORD *)v76 - 5);
          v82 = __OFSUB__(v80, v81);
          v74 = v80 - v81;
          v75 = v82;
          if (v82)
            goto LABEL_124;
          v83 = v68 - 2;
          v84 = &v69[16 * v68 - 32];
          v86 = *(_QWORD *)v84;
          v85 = *((_QWORD *)v84 + 1);
          v82 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          if (v82)
            goto LABEL_126;
          v82 = __OFADD__(v74, v87);
          v88 = v74 + v87;
          if (v82)
            goto LABEL_129;
          if (v88 >= v79)
          {
            v106 = &v69[16 * v71];
            v108 = *(_QWORD *)v106;
            v107 = *((_QWORD *)v106 + 1);
            v82 = __OFSUB__(v107, v108);
            v109 = v107 - v108;
            if (v82)
              goto LABEL_133;
            v99 = v74 < v109;
            goto LABEL_78;
          }
        }
        else
        {
          if (v68 != 3)
          {
            v100 = *((_QWORD *)v10 + 4);
            v101 = *((_QWORD *)v10 + 5);
            v82 = __OFSUB__(v101, v100);
            v93 = v101 - v100;
            v94 = v82;
            goto LABEL_72;
          }
          v73 = *((_QWORD *)v10 + 4);
          v72 = *((_QWORD *)v10 + 5);
          v82 = __OFSUB__(v72, v73);
          v74 = v72 - v73;
          v75 = v82;
        }
        if ((v75 & 1) != 0)
          goto LABEL_125;
        v83 = v68 - 2;
        v89 = &v69[16 * v68 - 32];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v92 = __OFSUB__(v90, v91);
        v93 = v90 - v91;
        v94 = v92;
        if (v92)
          goto LABEL_128;
        v95 = &v69[16 * v71];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v82 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v82)
          goto LABEL_131;
        if (__OFADD__(v93, v98))
          goto LABEL_132;
        if (v93 + v98 >= v74)
        {
          v99 = v74 < v98;
LABEL_78:
          if (v99)
            v71 = v83;
          goto LABEL_80;
        }
LABEL_72:
        if ((v94 & 1) != 0)
          goto LABEL_127;
        v102 = &v69[16 * v71];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v82 = __OFSUB__(v103, v104);
        v105 = v103 - v104;
        if (v82)
          goto LABEL_130;
        if (v105 < v93)
          goto LABEL_89;
LABEL_80:
        v110 = v71 - 1;
        if (v71 - 1 >= v68)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v12)
          goto LABEL_144;
        v111 = v10;
        v112 = &v69[16 * v110];
        v113 = *(_QWORD *)v112;
        v114 = &v69[16 * v71];
        v115 = *((_QWORD *)v114 + 1);
        sub_1BC4553E8((char *)(v12 + 80 * *(_QWORD *)v112), (char *)(v12 + 80 * *(_QWORD *)v114), v12 + 80 * v115, __dst, a1);
        if (v4)
          goto LABEL_116;
        if (v115 < v113)
          goto LABEL_120;
        if (v71 > *((_QWORD *)v111 + 2))
          goto LABEL_121;
        *(_QWORD *)v112 = v113;
        *(_QWORD *)&v69[16 * v110 + 8] = v115;
        v116 = *((_QWORD *)v111 + 2);
        if (v71 >= v116)
          goto LABEL_122;
        v10 = v111;
        v68 = v116 - 1;
        memmove(&v69[16 * v71], v114 + 16, 16 * (v116 - 1 - v71));
        *((_QWORD *)v111 + 2) = v116 - 1;
        v12 = v174;
        if (v116 <= 2)
          goto LABEL_89;
      }
    }
    v68 = 1;
LABEL_89:
    v13 = v162;
    v11 = v172;
    if (v172 >= v162)
      goto LABEL_103;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC45167C(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  char v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  _OWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  char v132;
  char v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  int v162;
  __int128 v163;
  __int128 v164;
  char *__dst;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  uint64_t v192;

  v4 = v3;
  v192 = a2;
  v5 = v2[1];
  result = sub_1BC62D520();
  if (result >= v5)
  {
    if (v5 < 0)
      goto LABEL_139;
    if (v5)
      return sub_1BC453EC8(0, v5, 1, a1);
    return result;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 <= -2)
    goto LABEL_148;
  v160 = v5;
  v156 = result;
  v154 = v2;
  if (v5 < 2)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v157 = MEMORY[0x1E0DEE9D8];
    if (v5 != 1)
    {
      v66 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_103:
      if (v66 >= 2)
      {
        v145 = *v154;
        do
        {
          v146 = v66 - 2;
          if (v66 < 2)
            goto LABEL_134;
          if (!v145)
            goto LABEL_147;
          v147 = *(_QWORD *)&v10[16 * v146 + 32];
          v148 = *(_QWORD *)&v10[16 * v66 + 24];
          sub_1BC4559D4((char *)(v145 + 72 * v147), (char *)(v145 + 72 * *(_QWORD *)&v10[16 * v66 + 16]), v145 + 72 * v148, __dst, a1);
          if (v4)
            break;
          if (v148 < v147)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v10 = sub_1BC504414((uint64_t)v10);
          if (v146 >= *((_QWORD *)v10 + 2))
            goto LABEL_136;
          v149 = &v10[16 * v146 + 32];
          *(_QWORD *)v149 = v147;
          *((_QWORD *)v149 + 1) = v148;
          v150 = *((_QWORD *)v10 + 2);
          if (v66 > v150)
            goto LABEL_137;
          memmove(&v10[16 * v66 + 16], &v10[16 * v66 + 32], 16 * (v150 - v66));
          *((_QWORD *)v10 + 2) = v150 - 1;
          v66 = v150 - 1;
        }
        while (v150 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v157 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = v7 >> 1;
    v9 = sub_1BC62C8CC();
    *(_QWORD *)(v9 + 16) = v8;
    v157 = v9;
    __dst = (char *)(v9 + 32);
  }
  v11 = 0;
  v12 = *v2;
  v155 = *v2 + 104;
  v153 = *v2 - 72;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v13 = v160;
  v170 = *v2;
  while (1)
  {
    v14 = v11;
    v15 = v11 + 1;
    v158 = v11;
    v159 = v10;
    if (v11 + 1 < v13)
    {
      v16 = (uint64_t *)(v12 + 72 * v15);
      v17 = *v16;
      v18 = v16[1];
      v19 = v16[2];
      v20 = v16[3];
      v21 = v4;
      v22 = v16[4];
      v23 = v16[5];
      v24 = v16[6];
      v25 = v16[7];
      LOBYTE(v16) = *((_BYTE *)v16 + 64);
      v183 = v17;
      v184 = v18;
      v185 = v19;
      v186 = v20;
      v187 = v22;
      v188 = v23;
      v189 = v24;
      v190 = v25;
      v191 = (char)v16;
      v26 = (uint64_t *)(v12 + 72 * v14);
      v27 = *v26;
      v28 = v26[1];
      v29 = v26[2];
      v30 = v26[3];
      v31 = v26[4];
      v32 = v26[5];
      v33 = v26[6];
      v34 = v26[7];
      LOBYTE(v26) = *((_BYTE *)v26 + 64);
      v174 = v27;
      v175 = v28;
      v176 = v29;
      v177 = v30;
      v178 = v31;
      v179 = v32;
      v180 = v33;
      v181 = v34;
      v182 = (char)v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v162 = a1(&v183, &v174);
      if (v21)
      {
LABEL_115:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_116;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v14 + 2;
      v13 = v160;
      if (v14 + 2 < v160)
      {
        v35 = v155 + 72 * v14;
        while (1)
        {
          v166 = v15;
          v36 = *(_QWORD *)(v35 + 48);
          v37 = *(_QWORD *)(v35 + 56);
          v38 = *(_QWORD *)(v35 + 64);
          v39 = *(_QWORD *)(v35 + 72);
          v40 = *(_QWORD *)(v35 + 80);
          v41 = *(_QWORD *)(v35 + 88);
          v42 = *(_QWORD *)(v35 + 96);
          v43 = *(_BYTE *)(v35 + 104);
          v183 = *(_QWORD *)(v35 + 40);
          v184 = v36;
          v185 = v37;
          v186 = v38;
          v187 = v39;
          v188 = v40;
          v189 = v41;
          v190 = v42;
          v191 = v43;
          v44 = *(_QWORD *)(v35 - 24);
          v45 = *(_QWORD *)(v35 - 16);
          v46 = *(_QWORD *)(v35 - 8);
          v47 = *(_QWORD *)v35;
          v48 = *(_QWORD *)(v35 + 8);
          v49 = *(_QWORD *)(v35 + 16);
          v50 = *(_QWORD *)(v35 + 24);
          v51 = *(_BYTE *)(v35 + 32);
          v174 = *(_QWORD *)(v35 - 32);
          v175 = v44;
          v176 = v45;
          v177 = v46;
          v178 = v47;
          v179 = v48;
          v180 = v49;
          v181 = v50;
          v182 = v51;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v52 = a1(&v183, &v174);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (((v162 ^ v52) & 1) != 0)
            break;
          v15 = v166 + 1;
          v35 += 72;
          v13 = v160;
          if (v160 == v166 + 1)
          {
            v15 = v160;
            goto LABEL_21;
          }
        }
        v13 = v160;
        v15 = v166;
LABEL_21:
        v14 = v158;
      }
      v53 = v170;
      v4 = 0;
      v10 = v159;
      if ((v162 & 1) != 0)
      {
        if (v15 < v14)
          goto LABEL_143;
        if (v14 < v15)
        {
          v54 = 72 * v15;
          v55 = v14;
          v56 = 72 * v14;
          v167 = v15;
          v57 = v15;
          v58 = v55;
          do
          {
            if (v58 != --v57)
            {
              if (!v53)
                goto LABEL_146;
              v59 = v53 + v54;
              v171 = *(_OWORD *)(v53 + v56);
              v163 = *(_OWORD *)(v53 + v56 + 32);
              v164 = *(_OWORD *)(v53 + v56 + 16);
              v60 = *(_QWORD *)(v53 + v56 + 48);
              v61 = *(_QWORD *)(v53 + v56 + 56);
              v62 = *(_BYTE *)(v53 + v56 + 64);
              memmove((void *)(v53 + v56), (const void *)(v53 + v54 - 72), 0x48uLL);
              v53 = v170;
              *(_OWORD *)(v59 - 72) = v171;
              *(_OWORD *)(v59 - 56) = v164;
              *(_OWORD *)(v59 - 40) = v163;
              *(_QWORD *)(v59 - 24) = v60;
              *(_QWORD *)(v59 - 16) = v61;
              *(_BYTE *)(v59 - 8) = v62;
              v10 = v159;
            }
            ++v58;
            v54 -= 72;
            v56 += 72;
          }
          while (v58 < v57);
          v13 = v160;
          v15 = v167;
          v14 = v158;
        }
      }
    }
    if (v15 >= v13)
      goto LABEL_41;
    if (__OFSUB__(v15, v14))
      goto LABEL_140;
    if (v15 - v14 >= v156)
      goto LABEL_41;
    if (__OFADD__(v14, v156))
      goto LABEL_141;
    v63 = v14 + v156 >= v13 ? v13 : v14 + v156;
    if (v63 < v14)
      break;
    if (v15 != v63)
    {
      v172 = v4;
      v114 = v153 + 72 * v15;
      v151 = v63;
      do
      {
        v152 = v114;
        v169 = v15;
        while (1)
        {
          v161 = v14;
          v115 = (_OWORD *)(v114 + 72);
          v116 = *(_QWORD *)(v114 + 80);
          v117 = *(_QWORD *)(v114 + 88);
          v119 = *(_QWORD *)(v114 + 96);
          v118 = *(_QWORD *)(v114 + 104);
          v121 = *(_QWORD *)(v114 + 112);
          v120 = *(_QWORD *)(v114 + 120);
          v122 = *(_QWORD *)(v114 + 128);
          v123 = *(_BYTE *)(v114 + 136);
          v183 = *(_QWORD *)(v114 + 72);
          v184 = v116;
          v185 = v117;
          v186 = v119;
          v187 = v118;
          v188 = v121;
          v189 = v120;
          v190 = v122;
          v191 = v123;
          v124 = *(_QWORD *)(v114 + 8);
          v125 = *(_QWORD *)(v114 + 16);
          v126 = *(_QWORD *)(v114 + 24);
          v127 = *(_QWORD *)(v114 + 32);
          v128 = *(_QWORD *)(v114 + 40);
          v129 = *(_QWORD *)(v114 + 48);
          v130 = *(_QWORD *)(v114 + 56);
          v131 = *(_BYTE *)(v114 + 64);
          v174 = *(_QWORD *)v114;
          v175 = v124;
          v176 = v125;
          v177 = v126;
          v178 = v127;
          v179 = v128;
          v180 = v129;
          v181 = v130;
          v182 = v131;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v132 = a1(&v183, &v174);
          if (v172)
            goto LABEL_115;
          v133 = v132;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v133 & 1) == 0)
            break;
          v134 = v169;
          if (!v170)
            goto LABEL_145;
          v135 = *(_OWORD *)(v114 + 72);
          v136 = *(_OWORD *)(v114 + 88);
          v137 = *(_OWORD *)(v114 + 104);
          v138 = *(_QWORD *)(v114 + 120);
          v139 = *(_QWORD *)(v114 + 128);
          v140 = *(_BYTE *)(v114 + 136);
          v141 = *(_OWORD *)(v114 + 48);
          *(_OWORD *)(v114 + 104) = *(_OWORD *)(v114 + 32);
          *(_OWORD *)(v114 + 120) = v141;
          *(_QWORD *)(v114 + 136) = *(_QWORD *)(v114 + 64);
          v143 = *(_OWORD *)v114;
          v142 = *(_OWORD *)(v114 + 16);
          *(_OWORD *)v114 = v135;
          *(_OWORD *)(v114 + 16) = v136;
          *(_OWORD *)(v114 + 32) = v137;
          *(_QWORD *)(v114 + 48) = v138;
          *(_QWORD *)(v114 + 56) = v139;
          *(_BYTE *)(v114 + 64) = v140;
          v114 -= 72;
          v14 = v161 + 1;
          *v115 = v143;
          v115[1] = v142;
          if (v169 == v161 + 1)
            goto LABEL_99;
        }
        v134 = v169;
LABEL_99:
        v15 = v134 + 1;
        v114 = v152 + 72;
        v14 = v158;
      }
      while (v15 != v151);
      v15 = v151;
      v4 = 0;
      v10 = v159;
      if (v151 < v158)
        goto LABEL_138;
      goto LABEL_42;
    }
LABEL_41:
    if (v15 < v14)
      goto LABEL_138;
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BC503AB4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v65 = *((_QWORD *)v10 + 2);
    v64 = *((_QWORD *)v10 + 3);
    v66 = v65 + 1;
    v12 = v170;
    if (v65 >= v64 >> 1)
    {
      v144 = sub_1BC503AB4((char *)(v64 > 1), v65 + 1, 1, v10);
      v12 = v170;
      v10 = v144;
    }
    *((_QWORD *)v10 + 2) = v66;
    v67 = v10 + 32;
    v68 = &v10[16 * v65 + 32];
    *(_QWORD *)v68 = v158;
    *((_QWORD *)v68 + 1) = v15;
    v168 = v15;
    if (v65)
    {
      while (1)
      {
        v69 = v66 - 1;
        if (v66 >= 4)
        {
          v74 = &v67[16 * v66];
          v75 = *((_QWORD *)v74 - 8);
          v76 = *((_QWORD *)v74 - 7);
          v80 = __OFSUB__(v76, v75);
          v77 = v76 - v75;
          if (v80)
            goto LABEL_123;
          v79 = *((_QWORD *)v74 - 6);
          v78 = *((_QWORD *)v74 - 5);
          v80 = __OFSUB__(v78, v79);
          v72 = v78 - v79;
          v73 = v80;
          if (v80)
            goto LABEL_124;
          v81 = v66 - 2;
          v82 = &v67[16 * v66 - 32];
          v84 = *(_QWORD *)v82;
          v83 = *((_QWORD *)v82 + 1);
          v80 = __OFSUB__(v83, v84);
          v85 = v83 - v84;
          if (v80)
            goto LABEL_126;
          v80 = __OFADD__(v72, v85);
          v86 = v72 + v85;
          if (v80)
            goto LABEL_129;
          if (v86 >= v77)
          {
            v104 = &v67[16 * v69];
            v106 = *(_QWORD *)v104;
            v105 = *((_QWORD *)v104 + 1);
            v80 = __OFSUB__(v105, v106);
            v107 = v105 - v106;
            if (v80)
              goto LABEL_133;
            v97 = v72 < v107;
            goto LABEL_78;
          }
        }
        else
        {
          if (v66 != 3)
          {
            v98 = *((_QWORD *)v10 + 4);
            v99 = *((_QWORD *)v10 + 5);
            v80 = __OFSUB__(v99, v98);
            v91 = v99 - v98;
            v92 = v80;
            goto LABEL_72;
          }
          v71 = *((_QWORD *)v10 + 4);
          v70 = *((_QWORD *)v10 + 5);
          v80 = __OFSUB__(v70, v71);
          v72 = v70 - v71;
          v73 = v80;
        }
        if ((v73 & 1) != 0)
          goto LABEL_125;
        v81 = v66 - 2;
        v87 = &v67[16 * v66 - 32];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v90 = __OFSUB__(v88, v89);
        v91 = v88 - v89;
        v92 = v90;
        if (v90)
          goto LABEL_128;
        v93 = &v67[16 * v69];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v80 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v80)
          goto LABEL_131;
        if (__OFADD__(v91, v96))
          goto LABEL_132;
        if (v91 + v96 >= v72)
        {
          v97 = v72 < v96;
LABEL_78:
          if (v97)
            v69 = v81;
          goto LABEL_80;
        }
LABEL_72:
        if ((v92 & 1) != 0)
          goto LABEL_127;
        v100 = &v67[16 * v69];
        v102 = *(_QWORD *)v100;
        v101 = *((_QWORD *)v100 + 1);
        v80 = __OFSUB__(v101, v102);
        v103 = v101 - v102;
        if (v80)
          goto LABEL_130;
        if (v103 < v91)
          goto LABEL_89;
LABEL_80:
        v108 = v69 - 1;
        if (v69 - 1 >= v66)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v12)
          goto LABEL_144;
        v109 = &v67[16 * v108];
        v110 = *(_QWORD *)v109;
        v111 = &v67[16 * v69];
        v112 = *((_QWORD *)v111 + 1);
        sub_1BC4559D4((char *)(v12 + 72 * *(_QWORD *)v109), (char *)(v12 + 72 * *(_QWORD *)v111), v12 + 72 * v112, __dst, a1);
        if (v4)
          goto LABEL_116;
        if (v112 < v110)
          goto LABEL_120;
        if (v69 > *((_QWORD *)v10 + 2))
          goto LABEL_121;
        *(_QWORD *)v109 = v110;
        *(_QWORD *)&v67[16 * v108 + 8] = v112;
        v113 = *((_QWORD *)v10 + 2);
        if (v69 >= v113)
          goto LABEL_122;
        v66 = v113 - 1;
        memmove(&v67[16 * v69], v111 + 16, 16 * (v113 - 1 - v69));
        *((_QWORD *)v10 + 2) = v113 - 1;
        v12 = v170;
        if (v113 <= 2)
          goto LABEL_89;
      }
    }
    v66 = 1;
LABEL_89:
    v13 = v160;
    v11 = v168;
    if (v168 >= v160)
      goto LABEL_103;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC452188(uint64_t (*a1)(uint64_t *, uint64_t *))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v93;

  v3 = v1[1];
  result = sub_1BC62D520();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_116;
    if (v3)
      return sub_1BC4540C8(0, v3, 1, a1);
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 > -2)
    {
      v6 = result;
      v86 = v1;
      if (v3 < 2)
      {
        v9 = (char *)MEMORY[0x1E0DEE9D8];
        v91 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
        v87 = MEMORY[0x1E0DEE9D8];
        if (v3 != 1)
        {
          v29 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_82:
          v78 = v9;
          if (v29 >= 2)
          {
            v79 = *v86;
            do
            {
              v80 = v29 - 2;
              if (v29 < 2)
                goto LABEL_109;
              if (!v79)
                goto LABEL_121;
              v81 = v78;
              v82 = *(_QWORD *)&v78[16 * v80 + 32];
              v83 = *(_QWORD *)&v78[16 * v29 + 24];
              sub_1BC455F6C((char *)(v79 + 48 * v82), (char *)(v79 + 48 * *(_QWORD *)&v78[16 * v29 + 16]), v79 + 48 * v83, v91, a1);
              if (v2)
                break;
              if (v83 < v82)
                goto LABEL_110;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v81 = sub_1BC504414((uint64_t)v81);
              if (v80 >= *((_QWORD *)v81 + 2))
                goto LABEL_111;
              v84 = &v81[16 * v80 + 32];
              *(_QWORD *)v84 = v82;
              *((_QWORD *)v84 + 1) = v83;
              v85 = *((_QWORD *)v81 + 2);
              if (v29 > v85)
                goto LABEL_112;
              memmove(&v81[16 * v29 + 16], &v81[16 * v29 + 32], 16 * (v85 - v29));
              v78 = v81;
              *((_QWORD *)v81 + 2) = v85 - 1;
              v29 = v85 - 1;
            }
            while (v85 > 2);
          }
LABEL_93:
          swift_bridgeObjectRelease();
          *(_QWORD *)(v87 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        v7 = v5 >> 1;
        v8 = sub_1BC62C8CC();
        *(_QWORD *)(v8 + 16) = v7;
        v87 = v8;
        v91 = (char *)(v8 + 32);
      }
      v10 = 0;
      v11 = *v1;
      v9 = (char *)MEMORY[0x1E0DEE9D8];
      v88 = v6;
      v89 = v3;
      while (1)
      {
        v12 = sub_1BC4547F0(&v93, v11, v3, v10, a1);
        if (v2)
          goto LABEL_93;
        v13 = v93;
        if ((v12 & 1) != 0)
        {
          if (v93 < v10)
            goto LABEL_114;
          if (v10 < v93)
          {
            v14 = 48 * v93;
            v15 = 48 * v10;
            v16 = v93;
            v17 = v10;
            do
            {
              if (v17 != --v16)
              {
                if (!v11)
                  goto LABEL_120;
                v18 = (_OWORD *)(v11 + v15);
                v19 = v11 + v14;
                v20 = *(_OWORD *)(v11 + v15);
                v21 = *(_OWORD *)(v11 + v15 + 16);
                v22 = *(_QWORD *)(v11 + v15 + 32);
                v23 = *(_QWORD *)(v11 + v15 + 40);
                v25 = *(_OWORD *)(v11 + v14 - 32);
                v24 = *(_OWORD *)(v11 + v14 - 16);
                *v18 = *(_OWORD *)(v11 + v14 - 48);
                v18[1] = v25;
                v18[2] = v24;
                *(_OWORD *)(v19 - 48) = v20;
                *(_OWORD *)(v19 - 32) = v21;
                *(_QWORD *)(v19 - 16) = v22;
                *(_QWORD *)(v19 - 8) = v23;
              }
              ++v17;
              v14 -= 48;
              v15 += 48;
            }
            while (v17 < v16);
          }
        }
        if (v13 < v3)
        {
          if (__OFSUB__(v13, v10))
            goto LABEL_115;
          if (v13 - v10 < v6)
          {
            if (__OFADD__(v10, v6))
              goto LABEL_117;
            if (v10 + v6 >= v3)
              v26 = v3;
            else
              v26 = v10 + v6;
            if (v26 < v10)
            {
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
              break;
            }
            sub_1BC4540C8(v10, v26, v13, a1);
            v13 = v26;
          }
        }
        if (v13 < v10)
          goto LABEL_113;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1BC503AB4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        v28 = *((_QWORD *)v9 + 2);
        v27 = *((_QWORD *)v9 + 3);
        v29 = v28 + 1;
        v90 = v13;
        if (v28 >= v27 >> 1)
          v9 = sub_1BC503AB4((char *)(v27 > 1), v28 + 1, 1, v9);
        *((_QWORD *)v9 + 2) = v29;
        v30 = v9 + 32;
        v31 = (uint64_t *)&v9[16 * v28 + 32];
        *v31 = v10;
        v31[1] = v13;
        if (v28)
        {
          while (1)
          {
            v32 = v29 - 1;
            if (v29 >= 4)
            {
              v37 = &v30[16 * v29];
              v38 = *((_QWORD *)v37 - 8);
              v39 = *((_QWORD *)v37 - 7);
              v43 = __OFSUB__(v39, v38);
              v40 = v39 - v38;
              if (v43)
                goto LABEL_98;
              v42 = *((_QWORD *)v37 - 6);
              v41 = *((_QWORD *)v37 - 5);
              v43 = __OFSUB__(v41, v42);
              v35 = v41 - v42;
              v36 = v43;
              if (v43)
                goto LABEL_99;
              v44 = v29 - 2;
              v45 = &v30[16 * v29 - 32];
              v47 = *(_QWORD *)v45;
              v46 = *((_QWORD *)v45 + 1);
              v43 = __OFSUB__(v46, v47);
              v48 = v46 - v47;
              if (v43)
                goto LABEL_101;
              v43 = __OFADD__(v35, v48);
              v49 = v35 + v48;
              if (v43)
                goto LABEL_104;
              if (v49 >= v40)
              {
                v67 = &v30[16 * v32];
                v69 = *(_QWORD *)v67;
                v68 = *((_QWORD *)v67 + 1);
                v43 = __OFSUB__(v68, v69);
                v70 = v68 - v69;
                if (v43)
                  goto LABEL_108;
                v60 = v35 < v70;
                goto LABEL_68;
              }
            }
            else
            {
              if (v29 != 3)
              {
                v61 = *((_QWORD *)v9 + 4);
                v62 = *((_QWORD *)v9 + 5);
                v43 = __OFSUB__(v62, v61);
                v54 = v62 - v61;
                v55 = v43;
                goto LABEL_62;
              }
              v34 = *((_QWORD *)v9 + 4);
              v33 = *((_QWORD *)v9 + 5);
              v43 = __OFSUB__(v33, v34);
              v35 = v33 - v34;
              v36 = v43;
            }
            if ((v36 & 1) != 0)
              goto LABEL_100;
            v44 = v29 - 2;
            v50 = &v30[16 * v29 - 32];
            v52 = *(_QWORD *)v50;
            v51 = *((_QWORD *)v50 + 1);
            v53 = __OFSUB__(v51, v52);
            v54 = v51 - v52;
            v55 = v53;
            if (v53)
              goto LABEL_103;
            v56 = &v30[16 * v32];
            v58 = *(_QWORD *)v56;
            v57 = *((_QWORD *)v56 + 1);
            v43 = __OFSUB__(v57, v58);
            v59 = v57 - v58;
            if (v43)
              goto LABEL_106;
            if (__OFADD__(v54, v59))
              goto LABEL_107;
            if (v54 + v59 >= v35)
            {
              v60 = v35 < v59;
LABEL_68:
              if (v60)
                v32 = v44;
              goto LABEL_70;
            }
LABEL_62:
            if ((v55 & 1) != 0)
              goto LABEL_102;
            v63 = &v30[16 * v32];
            v65 = *(_QWORD *)v63;
            v64 = *((_QWORD *)v63 + 1);
            v43 = __OFSUB__(v64, v65);
            v66 = v64 - v65;
            if (v43)
              goto LABEL_105;
            if (v66 < v54)
              goto LABEL_78;
LABEL_70:
            v71 = v32 - 1;
            if (v32 - 1 >= v29)
            {
              __break(1u);
LABEL_95:
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
LABEL_98:
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
              goto LABEL_118;
            }
            if (!v11)
              goto LABEL_119;
            v72 = v9;
            v73 = &v30[16 * v71];
            v74 = *(_QWORD *)v73;
            v75 = &v30[16 * v32];
            v76 = *((_QWORD *)v75 + 1);
            sub_1BC455F6C((char *)(v11 + 48 * *(_QWORD *)v73), (char *)(v11 + 48 * *(_QWORD *)v75), v11 + 48 * v76, v91, a1);
            if (v76 < v74)
              goto LABEL_95;
            if (v32 > *((_QWORD *)v72 + 2))
              goto LABEL_96;
            *(_QWORD *)v73 = v74;
            *(_QWORD *)&v30[16 * v71 + 8] = v76;
            v77 = *((_QWORD *)v72 + 2);
            if (v32 >= v77)
              goto LABEL_97;
            v9 = v72;
            v29 = v77 - 1;
            memmove(&v30[16 * v32], v75 + 16, 16 * (v77 - 1 - v32));
            *((_QWORD *)v72 + 2) = v77 - 1;
            if (v77 <= 2)
              goto LABEL_78;
          }
        }
        v29 = 1;
LABEL_78:
        v3 = v89;
        v10 = v90;
        v6 = v88;
        if (v90 >= v89)
          goto LABEL_82;
      }
    }
    result = sub_1BC62D388();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC452780(uint64_t (*a1)(__int128 *, __int128 *), uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(char **, _QWORD *, char **))
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  char v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  unint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v163;
  __int128 v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;

  v11 = v7;
  v177 = a2;
  v12 = v6[1];
  result = sub_1BC62D520();
  if (result >= v12)
  {
    if (v12 < 0)
      goto LABEL_141;
    if (v12)
      return sub_1BC45427C(0, v12, 1, (uint64_t (*)(_QWORD *, __int128 *))a1);
  }
  else
  {
    if (v12 >= 0)
      v14 = v12;
    else
      v14 = v12 + 1;
    if (v12 > -2)
    {
      v159 = v12;
      v155 = result;
      v149 = v6;
      if (v12 < 2)
      {
        v16 = MEMORY[0x1E0DEE9D8];
        v161 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
        if (v12 != 1)
        {
          v68 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
          v19 = (char *)MEMORY[0x1E0DEE9D8];
          goto LABEL_102;
        }
      }
      else
      {
        v15 = v14 >> 1;
        sub_1BC3CC1CC(0, a3, a4, a5);
        v16 = sub_1BC62C8CC();
        *(_QWORD *)(v16 + 16) = v15;
        v161 = (char *)(v16 + 32);
      }
      v17 = 0;
      v18 = *v6;
      v150 = *v6 + 80;
      v148 = *v6 + 48;
      v19 = (char *)MEMORY[0x1E0DEE9D8];
      v20 = v159;
      v163 = *v6;
      v156 = v16;
      while (1)
      {
        v21 = v17;
        v22 = v17 + 1;
        if (v17 + 1 < v20)
        {
          v23 = (__int128 *)(v18 + 56 * v22);
          v24 = *((_QWORD *)v23 + 2);
          v25 = *((_BYTE *)v23 + 24);
          v26 = *((_QWORD *)v23 + 4);
          v27 = *((_QWORD *)v23 + 5);
          v28 = v21;
          v29 = *((_QWORD *)v23 + 6);
          v171 = *v23;
          v172 = v24;
          v173 = v25;
          v174 = v26;
          v175 = v27;
          v176 = v29;
          v30 = (__int128 *)(v18 + 56 * v21);
          v31 = *((_QWORD *)v30 + 2);
          v32 = *((_BYTE *)v30 + 24);
          v33 = *((_QWORD *)v30 + 4);
          v34 = *((_QWORD *)v30 + 5);
          v35 = *((_QWORD *)v30 + 6);
          v165 = *v30;
          v166 = v31;
          v167 = v32;
          v168 = v33;
          v169 = v34;
          v170 = v35;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v36 = a1(&v171, &v165);
          if (v11)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_117;
          }
          v37 = v36;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v22 = v28 + 2;
          v21 = v28;
          if (v28 + 2 < v159)
          {
            v151 = v19;
            v153 = v28;
            v38 = v150 + 56 * v28;
            while (1)
            {
              v39 = v22;
              v40 = *(_QWORD *)(v38 + 48);
              v41 = *(_BYTE *)(v38 + 56);
              v42 = *(_QWORD *)(v38 + 64);
              v43 = *(_QWORD *)(v38 + 72);
              v44 = *(_QWORD *)(v38 + 80);
              v171 = *(_OWORD *)(v38 + 32);
              v172 = v40;
              v173 = v41;
              v174 = v42;
              v175 = v43;
              v176 = v44;
              v45 = *(_QWORD *)(v38 - 8);
              v46 = *(_BYTE *)v38;
              v47 = *(_QWORD *)(v38 + 8);
              v48 = *(_QWORD *)(v38 + 16);
              v49 = *(_QWORD *)(v38 + 24);
              v165 = *(_OWORD *)(v38 - 24);
              v166 = v45;
              v167 = v46;
              v168 = v47;
              v169 = v48;
              v170 = v49;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v50 = a1(&v171, &v165);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (((v37 ^ v50) & 1) != 0)
                break;
              v22 = v39 + 1;
              v38 += 56;
              if (v159 == v39 + 1)
              {
                v22 = v159;
                v19 = v151;
                goto LABEL_21;
              }
            }
            v19 = v151;
            v22 = v39;
LABEL_21:
            v21 = v153;
          }
          v18 = v163;
          if ((v37 & 1) != 0)
          {
            if (v22 < v21)
              goto LABEL_145;
            if (v21 < v22)
            {
              v51 = 56 * v22;
              v52 = v22;
              v53 = v21;
              v54 = 56 * v21;
              do
              {
                if (v53 != --v52)
                {
                  if (!v163)
                    goto LABEL_148;
                  v55 = v163 + v54;
                  v56 = *(_QWORD *)(v163 + v54 + 16);
                  v57 = v163 + v51;
                  v58 = *(_BYTE *)(v163 + v54 + 24);
                  v59 = *(_QWORD *)(v163 + v54 + 48);
                  v60 = *(_OWORD *)(v163 + v54);
                  v61 = *(_OWORD *)(v163 + v54 + 32);
                  v62 = *(_OWORD *)(v163 + v51 - 40);
                  v63 = *(_OWORD *)(v163 + v51 - 24);
                  v64 = *(_OWORD *)(v163 + v51 - 56);
                  *(_QWORD *)(v55 + 48) = *(_QWORD *)(v163 + v51 - 8);
                  *(_OWORD *)(v55 + 16) = v62;
                  *(_OWORD *)(v55 + 32) = v63;
                  *(_OWORD *)v55 = v64;
                  *(_OWORD *)(v57 - 56) = v60;
                  *(_QWORD *)(v57 - 40) = v56;
                  *(_BYTE *)(v57 - 32) = v58;
                  *(_OWORD *)(v57 - 24) = v61;
                  *(_QWORD *)(v57 - 8) = v59;
                }
                ++v53;
                v51 -= 56;
                v54 += 56;
              }
              while (v53 < v52);
            }
          }
        }
        if (v22 >= v159)
          goto LABEL_40;
        if (__OFSUB__(v22, v21))
          goto LABEL_142;
        if (v22 - v21 >= v155)
        {
LABEL_40:
          if (v22 < v21)
            goto LABEL_140;
          goto LABEL_41;
        }
        if (__OFADD__(v21, v155))
          goto LABEL_143;
        v65 = v21 + v155 >= v159 ? v159 : v21 + v155;
        if (v65 < v21)
          break;
        if (v22 == v65)
          goto LABEL_40;
        v152 = v19;
        v154 = v21;
        v160 = v11;
        v117 = v148 + 56 * v22;
        v146 = v65;
        do
        {
          v118 = (uint64_t *)(v18 + 56 * v22);
          v119 = *v118;
          v120 = v118[1];
          v121 = v118[2];
          v122 = *((_BYTE *)v118 + 24);
          v123 = v118[4];
          v124 = v118[5];
          v125 = v118[6];
          v126 = v154;
          v147 = v117;
          v158 = v22;
          while (1)
          {
            *(_QWORD *)&v171 = v119;
            *((_QWORD *)&v171 + 1) = v120;
            v172 = v121;
            v173 = v122 & 1;
            v174 = v123;
            v175 = v124;
            v176 = v125;
            v127 = *(_QWORD *)(v117 - 88);
            v128 = *(_BYTE *)(v117 - 80);
            v129 = *(_QWORD *)(v117 - 72);
            v130 = *(_QWORD *)(v117 - 64);
            v131 = *(_QWORD *)(v117 - 56);
            v132 = v117 - 104;
            v165 = *(_OWORD *)(v117 - 104);
            v166 = v127;
            v167 = v128;
            v168 = v129;
            v169 = v130;
            v170 = v131;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v133 = a1(&v171, &v165);
            if (v160)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_118;
            }
            v134 = v133;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v134 & 1) == 0)
              break;
            v18 = v163;
            v135 = v158;
            if (!v163)
              goto LABEL_147;
            v125 = *(_QWORD *)v117;
            v136 = *(_QWORD *)(v117 - 56);
            *(_QWORD *)(v117 - 56) = *(_QWORD *)v117;
            v117 -= 56;
            v119 = *(_QWORD *)(v117 + 8);
            v120 = *(_QWORD *)(v117 + 16);
            v121 = *(_QWORD *)(v117 + 24);
            v122 = *(_BYTE *)(v117 + 32);
            v123 = *(_QWORD *)(v117 + 40);
            v124 = *(_QWORD *)(v117 + 48);
            v137 = *(_OWORD *)(v132 + 16);
            *(_OWORD *)(v132 + 56) = *(_OWORD *)v132;
            *(_OWORD *)(v132 + 72) = v137;
            *(_OWORD *)(v132 + 88) = *(_OWORD *)(v132 + 32);
            *(_QWORD *)(v132 + 104) = v136;
            *(_QWORD *)(v117 - 48) = v119;
            *(_QWORD *)(v117 - 40) = v120;
            *(_QWORD *)(v117 - 32) = v121;
            *(_BYTE *)(v117 - 24) = v122;
            ++v126;
            *(_QWORD *)(v117 - 16) = v123;
            *(_QWORD *)(v117 - 8) = v124;
            if (v158 == v126)
              goto LABEL_98;
          }
          v18 = v163;
          v135 = v158;
LABEL_98:
          v22 = v135 + 1;
          v117 = v147 + 56;
        }
        while (v22 != v146);
        v22 = v146;
        v11 = 0;
        v19 = v152;
        v21 = v154;
        if (v146 < v154)
          goto LABEL_140;
LABEL_41:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_1BC503AB4(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
        v67 = *((_QWORD *)v19 + 2);
        v66 = *((_QWORD *)v19 + 3);
        v68 = v67 + 1;
        v18 = v163;
        if (v67 >= v66 >> 1)
        {
          v18 = v163;
          v19 = sub_1BC503AB4((char *)(v66 > 1), v67 + 1, 1, v19);
        }
        *((_QWORD *)v19 + 2) = v68;
        v69 = v19 + 32;
        v70 = &v19[16 * v67 + 32];
        *(_QWORD *)v70 = v21;
        *((_QWORD *)v70 + 1) = v22;
        v157 = v22;
        if (v67)
        {
LABEL_46:
          v71 = v68 - 1;
          if (v68 >= 4)
          {
            v76 = &v69[16 * v68];
            v77 = *((_QWORD *)v76 - 8);
            v78 = *((_QWORD *)v76 - 7);
            v82 = __OFSUB__(v78, v77);
            v79 = v78 - v77;
            if (v82)
              goto LABEL_125;
            v81 = *((_QWORD *)v76 - 6);
            v80 = *((_QWORD *)v76 - 5);
            v82 = __OFSUB__(v80, v81);
            v74 = v80 - v81;
            v75 = v82;
            if (v82)
              goto LABEL_126;
            v83 = v68 - 2;
            v84 = &v69[16 * v68 - 32];
            v86 = *(_QWORD *)v84;
            v85 = *((_QWORD *)v84 + 1);
            v82 = __OFSUB__(v85, v86);
            v87 = v85 - v86;
            if (v82)
              goto LABEL_128;
            v82 = __OFADD__(v74, v87);
            v88 = v74 + v87;
            if (v82)
              goto LABEL_131;
            if (v88 >= v79)
            {
              v106 = &v69[16 * v71];
              v108 = *(_QWORD *)v106;
              v107 = *((_QWORD *)v106 + 1);
              v82 = __OFSUB__(v107, v108);
              v109 = v107 - v108;
              if (v82)
                goto LABEL_135;
              v99 = v74 < v109;
            }
            else
            {
LABEL_59:
              if ((v75 & 1) != 0)
                goto LABEL_127;
              v83 = v68 - 2;
              v89 = &v69[16 * v68 - 32];
              v91 = *(_QWORD *)v89;
              v90 = *((_QWORD *)v89 + 1);
              v92 = __OFSUB__(v90, v91);
              v93 = v90 - v91;
              v94 = v92;
              if (v92)
                goto LABEL_130;
              v95 = &v69[16 * v71];
              v97 = *(_QWORD *)v95;
              v96 = *((_QWORD *)v95 + 1);
              v82 = __OFSUB__(v96, v97);
              v98 = v96 - v97;
              if (v82)
                goto LABEL_133;
              if (__OFADD__(v93, v98))
                goto LABEL_134;
              if (v93 + v98 < v74)
                goto LABEL_71;
              v99 = v74 < v98;
            }
            if (v99)
              v71 = v83;
          }
          else
          {
            if (v68 == 3)
            {
              v73 = *((_QWORD *)v19 + 4);
              v72 = *((_QWORD *)v19 + 5);
              v82 = __OFSUB__(v72, v73);
              v74 = v72 - v73;
              v75 = v82;
              goto LABEL_59;
            }
            v100 = *((_QWORD *)v19 + 4);
            v101 = *((_QWORD *)v19 + 5);
            v82 = __OFSUB__(v101, v100);
            v93 = v101 - v100;
            v94 = v82;
LABEL_71:
            if ((v94 & 1) != 0)
              goto LABEL_129;
            v102 = &v69[16 * v71];
            v104 = *(_QWORD *)v102;
            v103 = *((_QWORD *)v102 + 1);
            v82 = __OFSUB__(v103, v104);
            v105 = v103 - v104;
            if (v82)
              goto LABEL_132;
            if (v105 < v93)
              goto LABEL_88;
          }
          v110 = v71 - 1;
          if (v71 - 1 >= v68)
          {
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
            break;
          }
          if (!v18)
            goto LABEL_146;
          v111 = v19;
          v112 = &v69[16 * v110];
          v113 = *(_QWORD *)v112;
          v114 = &v69[16 * v71];
          v115 = *((_QWORD *)v114 + 1);
          sub_1BC45647C((char *)(v18 + 56 * *(_QWORD *)v112), (char *)(v18 + 56 * *(_QWORD *)v114), v18 + 56 * v115, v161, a1, v177, a6);
          if (v11)
            goto LABEL_117;
          if (v115 < v113)
            goto LABEL_122;
          if (v71 > *((_QWORD *)v111 + 2))
            goto LABEL_123;
          *(_QWORD *)v112 = v113;
          *(_QWORD *)&v69[16 * v110 + 8] = v115;
          v116 = *((_QWORD *)v111 + 2);
          if (v71 >= v116)
            goto LABEL_124;
          v19 = v111;
          v68 = v116 - 1;
          memmove(&v69[16 * v71], v114 + 16, 16 * (v116 - 1 - v71));
          *((_QWORD *)v111 + 2) = v116 - 1;
          v18 = v163;
          if (v116 <= 2)
            goto LABEL_88;
          goto LABEL_46;
        }
        v68 = 1;
LABEL_88:
        v17 = v157;
        v20 = v159;
        v16 = v156;
        if (v157 >= v159)
        {
LABEL_102:
          v156 = v16;
          if (v68 >= 2)
          {
            v138 = *v149;
            do
            {
              v139 = v68 - 2;
              if (v68 < 2)
                goto LABEL_136;
              if (!v138)
                goto LABEL_149;
              v140 = v19;
              v141 = v19 + 32;
              v142 = *(_QWORD *)&v19[16 * v139 + 32];
              v143 = *(_QWORD *)&v19[16 * v68 + 24];
              sub_1BC45647C((char *)(v138 + 56 * v142), (char *)(v138 + 56 * *(_QWORD *)&v141[16 * v68 - 16]), v138 + 56 * v143, v161, a1, v177, a6);
              if (v11)
                break;
              if (v143 < v142)
                goto LABEL_137;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v140 = sub_1BC504414((uint64_t)v140);
              if (v139 >= *((_QWORD *)v140 + 2))
                goto LABEL_138;
              v144 = &v140[16 * v139 + 32];
              *(_QWORD *)v144 = v142;
              *((_QWORD *)v144 + 1) = v143;
              v145 = *((_QWORD *)v140 + 2);
              if (v68 > v145)
                goto LABEL_139;
              v19 = v140;
              memmove(&v140[16 * v68 + 16], &v140[16 * v68 + 32], 16 * (v145 - v68));
              *((_QWORD *)v140 + 2) = v145 - 1;
              v68 = v145 - 1;
            }
            while (v145 > 2);
          }
LABEL_117:
          swift_bridgeObjectRelease();
LABEL_118:
          *(_QWORD *)(v156 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
    }
    result = sub_1BC62D388();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC453174(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  v123 = a2;
  v4 = v2[1];
  result = sub_1BC62D520();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_139;
    if (v4)
      return sub_1BC454444(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 <= -2)
    goto LABEL_148;
  v110 = result;
  v106 = v2;
  if (v4 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    v116 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v4 != 1)
    {
      v35 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v111 = v9;
      if (v35 >= 2)
      {
        v94 = *v106;
        do
        {
          v95 = v35 - 2;
          if (v35 < 2)
            goto LABEL_134;
          if (!v94)
            goto LABEL_147;
          v96 = v12;
          v97 = v12 + 32;
          v98 = *(_QWORD *)&v12[16 * v95 + 32];
          v99 = *(_QWORD *)&v12[16 * v35 + 24];
          sub_1BC456970((char *)(v94 + 16 * v98), (char *)(v94 + 16 * *(_QWORD *)&v97[16 * v35 - 16]), v94 + 16 * v99, v116, a1);
          if (v3)
            break;
          if (v99 < v98)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_1BC504414((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_136;
          v100 = v96;
          v101 = v96 + 32;
          v102 = &v96[16 * v95 + 32];
          *(_QWORD *)v102 = v98;
          *((_QWORD *)v102 + 1) = v99;
          v103 = *((_QWORD *)v96 + 2);
          if (v35 > v103)
            goto LABEL_137;
          v12 = v100;
          memmove(&v101[16 * v35 - 16], &v101[16 * v35], 16 * (v103 - v35));
          *((_QWORD *)v12 + 2) = v103 - 1;
          v35 = v103 - 1;
        }
        while (v103 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v111 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v6 >> 1;
    v8 = sub_1BC62C8CC();
    *(_QWORD *)(v8 + 16) = v7;
    v111 = v8;
    v116 = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *v2;
  v107 = *v2 + 24;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v115 = v4;
  v117 = *v2;
  while (1)
  {
    v13 = v10;
    v14 = v10 + 1;
    if (v10 + 1 < v4)
    {
      v15 = (uint64_t *)(v11 + 16 * v14);
      v16 = v15[1];
      v121 = *v15;
      v122 = v16;
      v17 = (uint64_t *)(v11 + 16 * v10);
      v18 = v17[1];
      v119 = *v17;
      v120 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v112 = a1(&v121, &v119);
      if (v3)
      {
LABEL_115:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_116;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v13 + 2;
      if (v13 + 2 < v4)
      {
        v108 = v13;
        v19 = (_QWORD *)(v107 + 16 * v13);
        v20 = v19;
        while (1)
        {
          v21 = v14;
          v22 = v20[2];
          v20 += 2;
          v23 = *v19;
          v121 = v19[1];
          v122 = v22;
          v119 = *(v19 - 1);
          v120 = v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v24 = a1(&v121, &v119);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (((v112 ^ v24) & 1) != 0)
            break;
          ++v14;
          v19 = v20;
          v4 = v115;
          if (v115 == v21 + 1)
          {
            v14 = v115;
            goto LABEL_22;
          }
        }
        v4 = v115;
LABEL_22:
        v13 = v108;
      }
      v11 = v117;
      if ((v112 & 1) != 0)
      {
        if (v14 < v13)
          goto LABEL_143;
        if (v13 < v14)
        {
          v25 = 16 * v14;
          v26 = 16 * v13;
          v27 = v14;
          v28 = v13;
          do
          {
            if (v28 != --v27)
            {
              if (!v117)
                goto LABEL_146;
              v29 = v117 + v25;
              v30 = *(_QWORD *)(v117 + v26);
              v31 = *(_QWORD *)(v117 + v26 + 8);
              *(_OWORD *)(v117 + v26) = *(_OWORD *)(v117 + v25 - 16);
              *(_QWORD *)(v29 - 16) = v30;
              *(_QWORD *)(v29 - 8) = v31;
            }
            ++v28;
            v25 -= 16;
            v26 += 16;
          }
          while (v28 < v27);
        }
      }
    }
    if (v14 >= v4)
      goto LABEL_40;
    if (__OFSUB__(v14, v13))
      goto LABEL_140;
    if (v14 - v13 >= v110)
      goto LABEL_40;
    v32 = v13 + v110;
    if (__OFADD__(v13, v110))
      goto LABEL_141;
    if (v32 >= v4)
      v32 = v4;
    if (v32 < v13)
      break;
    if (v14 != v32)
    {
      v104 = v12;
      v105 = v32;
      v84 = (_QWORD *)(v11 + 16 * v14);
      v109 = v13;
      do
      {
        v85 = (uint64_t *)(v11 + 16 * v14);
        v86 = *v85;
        v87 = v85[1];
        v88 = v13;
        v114 = v84;
        while (1)
        {
          v89 = v14;
          v121 = v86;
          v122 = v87;
          v90 = *(v84 - 1);
          v119 = *(v84 - 2);
          v120 = v90;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v91 = a1(&v121, &v119);
          if (v3)
            goto LABEL_115;
          v92 = v91;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v92 & 1) == 0)
            break;
          v11 = v117;
          if (!v117)
            goto LABEL_145;
          v86 = *v84;
          v87 = v84[1];
          *(_OWORD *)v84 = *((_OWORD *)v84 - 1);
          *(v84 - 1) = v87;
          *(v84 - 2) = v86;
          v84 -= 2;
          ++v88;
          v14 = v89;
          if (v89 == v88)
            goto LABEL_98;
        }
        v11 = v117;
        v14 = v89;
LABEL_98:
        ++v14;
        v84 = v114 + 2;
        v13 = v109;
      }
      while (v14 != v105);
      v14 = v105;
      v12 = v104;
      if (v105 < v109)
        goto LABEL_138;
      goto LABEL_41;
    }
LABEL_40:
    if (v14 < v13)
      goto LABEL_138;
LABEL_41:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1BC503AB4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v35 = v34 + 1;
    v11 = v117;
    if (v34 >= v33 >> 1)
    {
      v93 = sub_1BC503AB4((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v117;
      v12 = v93;
    }
    *((_QWORD *)v12 + 2) = v35;
    v36 = v12 + 32;
    v37 = &v12[16 * v34 + 32];
    *(_QWORD *)v37 = v13;
    *((_QWORD *)v37 + 1) = v14;
    v113 = v14;
    if (v34)
    {
      while (1)
      {
        v38 = v35 - 1;
        if (v35 >= 4)
        {
          v43 = &v36[16 * v35];
          v44 = *((_QWORD *)v43 - 8);
          v45 = *((_QWORD *)v43 - 7);
          v49 = __OFSUB__(v45, v44);
          v46 = v45 - v44;
          if (v49)
            goto LABEL_123;
          v48 = *((_QWORD *)v43 - 6);
          v47 = *((_QWORD *)v43 - 5);
          v49 = __OFSUB__(v47, v48);
          v41 = v47 - v48;
          v42 = v49;
          if (v49)
            goto LABEL_124;
          v50 = v35 - 2;
          v51 = &v36[16 * v35 - 32];
          v53 = *(_QWORD *)v51;
          v52 = *((_QWORD *)v51 + 1);
          v49 = __OFSUB__(v52, v53);
          v54 = v52 - v53;
          if (v49)
            goto LABEL_126;
          v49 = __OFADD__(v41, v54);
          v55 = v41 + v54;
          if (v49)
            goto LABEL_129;
          if (v55 >= v46)
          {
            v73 = &v36[16 * v38];
            v75 = *(_QWORD *)v73;
            v74 = *((_QWORD *)v73 + 1);
            v49 = __OFSUB__(v74, v75);
            v76 = v74 - v75;
            if (v49)
              goto LABEL_133;
            v66 = v41 < v76;
            goto LABEL_77;
          }
        }
        else
        {
          if (v35 != 3)
          {
            v67 = *((_QWORD *)v12 + 4);
            v68 = *((_QWORD *)v12 + 5);
            v49 = __OFSUB__(v68, v67);
            v60 = v68 - v67;
            v61 = v49;
            goto LABEL_71;
          }
          v40 = *((_QWORD *)v12 + 4);
          v39 = *((_QWORD *)v12 + 5);
          v49 = __OFSUB__(v39, v40);
          v41 = v39 - v40;
          v42 = v49;
        }
        if ((v42 & 1) != 0)
          goto LABEL_125;
        v50 = v35 - 2;
        v56 = &v36[16 * v35 - 32];
        v58 = *(_QWORD *)v56;
        v57 = *((_QWORD *)v56 + 1);
        v59 = __OFSUB__(v57, v58);
        v60 = v57 - v58;
        v61 = v59;
        if (v59)
          goto LABEL_128;
        v62 = &v36[16 * v38];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v49 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v49)
          goto LABEL_131;
        if (__OFADD__(v60, v65))
          goto LABEL_132;
        if (v60 + v65 >= v41)
        {
          v66 = v41 < v65;
LABEL_77:
          if (v66)
            v38 = v50;
          goto LABEL_79;
        }
LABEL_71:
        if ((v61 & 1) != 0)
          goto LABEL_127;
        v69 = &v36[16 * v38];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v49 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v49)
          goto LABEL_130;
        if (v72 < v60)
          goto LABEL_88;
LABEL_79:
        v77 = v38 - 1;
        if (v38 - 1 >= v35)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v11)
          goto LABEL_144;
        v78 = v12;
        v79 = &v36[16 * v77];
        v80 = *(_QWORD *)v79;
        v81 = &v36[16 * v38];
        v82 = *((_QWORD *)v81 + 1);
        sub_1BC456970((char *)(v11 + 16 * *(_QWORD *)v79), (char *)(v11 + 16 * *(_QWORD *)v81), v11 + 16 * v82, v116, a1);
        if (v3)
          goto LABEL_116;
        if (v82 < v80)
          goto LABEL_120;
        if (v38 > *((_QWORD *)v78 + 2))
          goto LABEL_121;
        *(_QWORD *)v79 = v80;
        *(_QWORD *)&v36[16 * v77 + 8] = v82;
        v83 = *((_QWORD *)v78 + 2);
        if (v38 >= v83)
          goto LABEL_122;
        v12 = v78;
        v35 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((_QWORD *)v78 + 2) = v83 - 1;
        v11 = v117;
        if (v83 <= 2)
          goto LABEL_88;
      }
    }
    v35 = 1;
LABEL_88:
    v10 = v113;
    v4 = v115;
    if (v113 >= v115)
    {
      v9 = v111;
      goto LABEL_103;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC453960(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, _QWORD *))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[5];
  char v34;
  _QWORD v35[5];
  char v36;
  uint64_t v37;

  if (a3 != a2)
  {
    v6 = result;
    v30 = *v4;
    v7 = *v4 + 48 * a3 - 48;
    v27 = result;
LABEL_4:
    v29 = v7;
    v31 = a3;
    while (1)
    {
      v8 = (_OWORD *)(v7 + 48);
      v10 = *(_QWORD *)(v7 + 56);
      v9 = *(_QWORD *)(v7 + 64);
      v12 = *(_QWORD *)(v7 + 72);
      v11 = *(_QWORD *)(v7 + 80);
      v13 = *(_BYTE *)(v7 + 88);
      v35[0] = *(_QWORD *)(v7 + 48);
      v35[1] = v10;
      v37 = v10;
      v35[2] = v9;
      v35[3] = v12;
      v35[4] = v11;
      v36 = v13;
      v14 = *(_QWORD *)(v7 + 8);
      v15 = *(_QWORD *)(v7 + 16);
      v16 = *(_QWORD *)(v7 + 24);
      v17 = *(_QWORD *)(v7 + 32);
      v18 = *(_BYTE *)(v7 + 40);
      v33[0] = *(_QWORD *)v7;
      v33[1] = v14;
      v33[2] = v15;
      v33[3] = v16;
      v33[4] = v17;
      v34 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = a4(v35, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v5)
        break;
      if ((v19 & 1) == 0)
      {
        v26 = v31;
LABEL_11:
        a3 = v26 + 1;
        v7 = v29 + 48;
        v6 = v27;
        if (a3 != a2)
          goto LABEL_4;
        return result;
      }
      if (!v30)
      {
        __break(1u);
        return result;
      }
      v21 = *(_OWORD *)(v7 + 48);
      v20 = *(_OWORD *)(v7 + 64);
      v22 = *(_OWORD *)(v7 + 16);
      v23 = *(_OWORD *)(v7 + 32);
      *v8 = *(_OWORD *)v7;
      *(_OWORD *)(v7 + 64) = v22;
      v24 = *(_QWORD *)(v7 + 80);
      v25 = *(_BYTE *)(v7 + 88);
      *(_OWORD *)v7 = v21;
      *(_OWORD *)(v7 + 16) = v20;
      *(_QWORD *)(v7 + 32) = v24;
      *(_BYTE *)(v7 + 40) = v25;
      v7 -= 48;
      ++v6;
      v8[2] = v23;
      v26 = v31;
      if (v31 == v6)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1BC453B14(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, _QWORD *), uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  _QWORD v26[5];

  v26[4] = a5;
  if (a3 != a2)
  {
    v7 = result;
    v8 = *v5;
    v9 = (_QWORD *)(*v5 + 24 * a3);
    v19 = result;
    v22 = *v5;
LABEL_4:
    v10 = (uint64_t *)(v8 + 24 * a3);
    v11 = *v10;
    v12 = v10[1];
    v13 = v10[2];
    v21 = v9;
    v23 = a3;
    while (1)
    {
      v26[0] = v11;
      v26[1] = v12;
      v14 = *(v9 - 3);
      v15 = *(v9 - 2);
      v26[2] = v13;
      v16 = *(v9 - 1);
      v25[0] = v14;
      v25[1] = v15;
      v25[2] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = a4(v26, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v6)
        break;
      if ((v17 & 1) == 0)
      {
        v8 = v22;
        v18 = v23;
LABEL_11:
        a3 = v18 + 1;
        v9 = v21 + 3;
        v7 = v19;
        if (a3 != a2)
          goto LABEL_4;
        return result;
      }
      v8 = v22;
      if (!v22)
      {
        __break(1u);
        return result;
      }
      v11 = *v9;
      v12 = v9[1];
      v13 = v9[2];
      *(_OWORD *)v9 = *(_OWORD *)(v9 - 3);
      v9[2] = *(v9 - 1);
      *(v9 - 2) = v12;
      *(v9 - 1) = v13;
      *(v9 - 3) = v11;
      v9 -= 3;
      ++v7;
      v18 = v23;
      if (v23 == v7)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1BC453C80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, _QWORD *))
{
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[10];
  _QWORD v43[11];
  uint64_t v44;

  if (a3 != a2)
  {
    v5 = *v4;
    v6 = (_QWORD *)(*v4 + 80 * a3 + 72);
    v33 = result;
    v36 = *v4;
LABEL_4:
    v7 = (uint64_t *)(v5 + 80 * a3);
    v8 = *v7;
    v9 = v7[1];
    v10 = v7[2];
    v11 = v7[3];
    v12 = v7[4];
    v13 = v7[5];
    v14 = v7[6];
    v15 = v7[7];
    v16 = v7[8];
    v17 = v7[9];
    v35 = v6;
    v37 = a3;
    while (1)
    {
      v39 = result;
      v18 = *(v6 - 19);
      v19 = *(v6 - 18);
      v20 = (__int128 *)(v6 - 19);
      v43[0] = v8;
      v43[1] = v9;
      v43[2] = v10;
      v43[3] = v11;
      v43[4] = v12;
      v43[5] = v13;
      v43[6] = v14;
      v43[7] = v15;
      v43[8] = v16;
      v43[9] = v17;
      v21 = *(v6 - 17);
      v22 = *(v6 - 16);
      v23 = *(v6 - 15);
      v24 = *(v6 - 13);
      v40 = *(v6 - 12);
      v41 = *(v6 - 14);
      v25 = *(v6 - 11);
      v26 = *(v6 - 10);
      v42[0] = v18;
      v42[1] = v19;
      v42[2] = v21;
      v42[3] = v22;
      v42[4] = v23;
      v42[5] = v41;
      v42[6] = v24;
      v42[7] = v40;
      v42[8] = v25;
      v42[9] = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = v44;
      v28 = a4(v43, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v44 = v27;
      if (v27)
        break;
      if ((v28 & 1) == 0)
      {
        v5 = v36;
        v32 = v37;
LABEL_11:
        a3 = v32 + 1;
        v6 = v35 + 10;
        result = v33;
        if (a3 != a2)
          goto LABEL_4;
        return result;
      }
      v5 = v36;
      if (!v36)
      {
        __break(1u);
        return result;
      }
      v8 = *(v6 - 9);
      v9 = *(v6 - 8);
      v10 = *(v6 - 7);
      v11 = *(v6 - 6);
      v12 = *(v6 - 5);
      v13 = *(v6 - 4);
      v14 = *(v6 - 3);
      v15 = *(v6 - 2);
      v16 = *(v6 - 1);
      v17 = *v6;
      v29 = *(_OWORD *)(v6 - 13);
      *(_OWORD *)(v6 - 5) = *(_OWORD *)(v6 - 15);
      *(_OWORD *)(v6 - 3) = v29;
      *(_OWORD *)(v6 - 1) = *(_OWORD *)(v6 - 11);
      v31 = *v20;
      v30 = *(_OWORD *)(v6 - 17);
      *(v6 - 10) = v17;
      v6 -= 10;
      v20[5] = v31;
      v20[6] = v30;
      *(v6 - 9) = v8;
      *(v6 - 8) = v9;
      *(v6 - 7) = v10;
      *(v6 - 6) = v11;
      *(v6 - 5) = v12;
      *(v6 - 4) = v13;
      *(v6 - 3) = v14;
      *(v6 - 2) = v15;
      result = v39 + 1;
      *(v6 - 1) = v16;
      v32 = v37;
      if (v37 == v39 + 1)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1BC453EC8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, _QWORD *))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  _QWORD v42[8];
  char v43;
  _QWORD v44[8];
  char v45;
  uint64_t v46;

  if (a3 != a2)
  {
    v38 = *v4;
    v6 = *v4 + 72 * a3 - 72;
    v35 = result;
LABEL_4:
    v37 = v6;
    v39 = a3;
    while (1)
    {
      v41 = result;
      v7 = (_OWORD *)(v6 + 72);
      v9 = *(_QWORD *)(v6 + 80);
      v8 = *(_QWORD *)(v6 + 88);
      v11 = *(_QWORD *)(v6 + 96);
      v10 = *(_QWORD *)(v6 + 104);
      v13 = *(_QWORD *)(v6 + 112);
      v12 = *(_QWORD *)(v6 + 120);
      v14 = *(_QWORD *)(v6 + 128);
      v15 = *(_BYTE *)(v6 + 136);
      v44[0] = *(_QWORD *)(v6 + 72);
      v44[1] = v9;
      v46 = v9;
      v44[2] = v8;
      v44[3] = v11;
      v44[4] = v10;
      v44[5] = v13;
      v44[6] = v12;
      v44[7] = v14;
      v45 = v15;
      v16 = *(_QWORD *)(v6 + 8);
      v17 = *(_QWORD *)(v6 + 16);
      v18 = *(_QWORD *)(v6 + 24);
      v19 = *(_QWORD *)(v6 + 32);
      v20 = *(_QWORD *)(v6 + 40);
      v21 = *(_QWORD *)(v6 + 48);
      v22 = *(_QWORD *)(v6 + 56);
      v23 = *(_BYTE *)(v6 + 64);
      v42[0] = *(_QWORD *)v6;
      v42[1] = v16;
      v42[2] = v17;
      v42[3] = v18;
      v42[4] = v19;
      v42[5] = v20;
      v42[6] = v21;
      v42[7] = v22;
      v43 = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = a4(v44, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v5)
        break;
      if ((v24 & 1) == 0)
      {
        v34 = v39;
LABEL_11:
        a3 = v34 + 1;
        v6 = v37 + 72;
        result = v35;
        if (a3 != a2)
          goto LABEL_4;
        return result;
      }
      if (!v38)
      {
        __break(1u);
        return result;
      }
      v25 = *(_OWORD *)(v6 + 72);
      v26 = *(_OWORD *)(v6 + 88);
      v27 = *(_OWORD *)(v6 + 104);
      v28 = *(_QWORD *)(v6 + 120);
      v29 = *(_QWORD *)(v6 + 128);
      v30 = *(_BYTE *)(v6 + 136);
      v31 = *(_OWORD *)(v6 + 48);
      *(_OWORD *)(v6 + 104) = *(_OWORD *)(v6 + 32);
      *(_OWORD *)(v6 + 120) = v31;
      *(_QWORD *)(v6 + 136) = *(_QWORD *)(v6 + 64);
      v33 = *(_OWORD *)v6;
      v32 = *(_OWORD *)(v6 + 16);
      *(_OWORD *)v6 = v25;
      *(_OWORD *)(v6 + 16) = v26;
      *(_OWORD *)(v6 + 32) = v27;
      *(_QWORD *)(v6 + 48) = v28;
      *(_QWORD *)(v6 + 56) = v29;
      *(_BYTE *)(v6 + 64) = v30;
      v6 -= 72;
      result = v41 + 1;
      *v7 = v33;
      v7[1] = v32;
      v34 = v39;
      if (v39 == v41 + 1)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1BC4540C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, _QWORD *))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD v33[6];
  _QWORD v34[9];

  if (a3 != a2)
  {
    v6 = *v4;
    v7 = (_QWORD *)(*v4 + 48 * a3 + 40);
    v26 = result;
    v29 = *v4;
LABEL_4:
    v8 = (uint64_t *)(v6 + 48 * a3);
    v9 = *v8;
    v10 = v8[1];
    v11 = v8[2];
    v12 = v8[3];
    v13 = v8[4];
    v14 = v8[5];
    v28 = v7;
    v30 = a3;
    while (1)
    {
      v15 = *(v7 - 11);
      v17 = *(v7 - 10);
      v16 = v7 - 11;
      v34[0] = v9;
      v34[1] = v10;
      v34[2] = v11;
      v34[3] = v12;
      v34[4] = v13;
      v34[5] = v14;
      v18 = *(v7 - 9);
      v19 = *(v7 - 8);
      v20 = *(v7 - 7);
      v21 = *(v7 - 6);
      v32 = result;
      v33[0] = v15;
      v33[1] = v17;
      v33[2] = v18;
      v34[8] = v17;
      v33[3] = v19;
      v33[4] = v20;
      v33[5] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = a4(v34, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v5)
        break;
      if ((v22 & 1) == 0)
      {
        v6 = v29;
        v25 = v30;
LABEL_11:
        a3 = v25 + 1;
        v7 = v28 + 6;
        result = v26;
        if (a3 != a2)
          goto LABEL_4;
        return result;
      }
      v6 = v29;
      if (!v29)
      {
        __break(1u);
        return result;
      }
      v14 = *v7;
      v24 = *(_OWORD *)(v7 - 9);
      v23 = *(_OWORD *)(v7 - 7);
      *(v7 - 6) = *v7;
      v7 -= 6;
      v9 = v7[1];
      v10 = v7[2];
      v11 = v7[3];
      v12 = v7[4];
      v13 = v7[5];
      v16[3] = *v16;
      v16[4] = v24;
      v16[5] = v23;
      *(v7 - 5) = v9;
      *(v7 - 4) = v10;
      *(v7 - 3) = v11;
      *(v7 - 2) = v12;
      *(v7 - 1) = v13;
      result = v32 + 1;
      v25 = v30;
      if (v30 == v32 + 1)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1BC45427C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, __int128 *))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  if (a3 != a2)
  {
    v6 = *v4;
    v7 = *v4 + 56 * a3 + 48;
    v26 = result;
    v29 = *v4;
LABEL_4:
    v8 = (uint64_t *)(v6 + 56 * a3);
    v9 = *v8;
    v10 = v8[1];
    v11 = v8[2];
    v12 = *((_BYTE *)v8 + 24);
    v13 = v8[4];
    v14 = v8[5];
    v15 = v8[6];
    v28 = v7;
    v30 = a3;
    while (1)
    {
      v43 = result;
      v38[0] = v9;
      v38[1] = v10;
      v38[2] = v11;
      v39 = v12 & 1;
      v40 = v13;
      v41 = v14;
      v42 = v15;
      v16 = *(_QWORD *)(v7 - 88);
      v17 = *(_BYTE *)(v7 - 80);
      v18 = *(_QWORD *)(v7 - 72);
      v19 = *(_QWORD *)(v7 - 64);
      v20 = *(_QWORD *)(v7 - 56);
      v21 = v7 - 104;
      v32 = *(_OWORD *)(v7 - 104);
      v33 = v16;
      v34 = v17;
      v35 = v18;
      v36 = v19;
      v37 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = a4(v38, &v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v5)
        break;
      if ((v22 & 1) == 0)
      {
        v6 = v29;
        v25 = v30;
LABEL_11:
        a3 = v25 + 1;
        v7 = v28 + 56;
        result = v26;
        if (a3 != a2)
          goto LABEL_4;
        return result;
      }
      v6 = v29;
      if (!v29)
      {
        __break(1u);
        return result;
      }
      v15 = *(_QWORD *)v7;
      v23 = *(_QWORD *)(v7 - 56);
      *(_QWORD *)(v7 - 56) = *(_QWORD *)v7;
      v7 -= 56;
      v9 = *(_QWORD *)(v7 + 8);
      v10 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      v12 = *(_BYTE *)(v7 + 32);
      v13 = *(_QWORD *)(v7 + 40);
      v14 = *(_QWORD *)(v7 + 48);
      v24 = *(_OWORD *)(v21 + 16);
      *(_OWORD *)(v21 + 56) = *(_OWORD *)v21;
      *(_OWORD *)(v21 + 72) = v24;
      *(_OWORD *)(v21 + 88) = *(_OWORD *)(v21 + 32);
      *(_QWORD *)(v21 + 104) = v23;
      *(_QWORD *)(v7 - 48) = v9;
      *(_QWORD *)(v7 - 40) = v10;
      *(_QWORD *)(v7 - 32) = v11;
      *(_BYTE *)(v7 - 24) = v12;
      result = v43 + 1;
      *(_QWORD *)(v7 - 16) = v13;
      *(_QWORD *)(v7 - 8) = v14;
      v25 = v30;
      if (v30 == result)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1BC454444(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, _QWORD *))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  _QWORD v19[2];
  _QWORD v20[2];
  uint64_t (*v21)(_QWORD *, _QWORD *);

  v21 = a4;
  if (a3 != a2)
  {
    v6 = result;
    v7 = *v4;
    v8 = (_QWORD *)(*v4 + 16 * a3);
    v15 = result;
LABEL_4:
    v9 = (uint64_t *)(v7 + 16 * a3);
    v10 = *v9;
    v11 = v9[1];
    v17 = v8;
    v18 = a3;
    while (1)
    {
      v20[0] = v10;
      v20[1] = v11;
      v12 = *(v8 - 1);
      v19[0] = *(v8 - 2);
      v19[1] = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = v21(v20, v19);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v5)
        break;
      if ((v13 & 1) == 0)
      {
        v14 = v18;
LABEL_11:
        a3 = v14 + 1;
        v8 = v17 + 2;
        v6 = v15;
        if (a3 != a2)
          goto LABEL_4;
        return result;
      }
      if (!v7)
      {
        __break(1u);
        return result;
      }
      v10 = *v8;
      v11 = v8[1];
      *(_OWORD *)v8 = *((_OWORD *)v8 - 1);
      *(v8 - 1) = v11;
      *(v8 - 2) = v10;
      v8 -= 2;
      ++v6;
      v14 = v18;
      if (v18 == v6)
        goto LABEL_11;
    }
  }
  return result;
}

