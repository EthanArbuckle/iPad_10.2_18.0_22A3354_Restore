uint64_t sub_1BC574180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC35EBE0(a1, a2, type metadata accessor for EntryDetail.EntryDetailRow);
}

uint64_t sub_1BC5741A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;

  v44 = a2;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - v4;
  v6 = sub_1BC62A760();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5782D8();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v36 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v36 - v17;
  *(_QWORD *)v15 = sub_1BC62C1B8();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  sub_1BC5785DC();
  sub_1BC5744C4(a1, (uint64_t)&v15[*(int *)(v19 + 44)]);
  v45 = v18;
  sub_1BC578658((uint64_t)v15, (uint64_t)v18);
  v20 = type metadata accessor for EntryDetail.EntryDetailRow(0);
  sub_1BC3462D8((uint64_t)a1 + *(int *)(v20 + 24), (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1BC377E3C((uint64_t)v5, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v42 = 0;
    v43 = 0;
    v21 = 0;
    v40 = 0;
    v41 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    KeyPath = 0;
    v39 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v43 = sub_1BC62C1B8();
    sub_1BC5747C4((uint64_t)&v46);
    v41 = v47;
    v42 = v46;
    v22 = v48;
    v23 = v49;
    v24 = v50;
    v40 = v51;
    v39 = sub_1BC62C398();
    KeyPath = swift_getKeyPath();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v21 = 1;
  }
  sub_1BC35EBE0((uint64_t)v45, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BC5782D8);
  v25 = (uint64_t)v12;
  v37 = v12;
  v26 = v44;
  sub_1BC35EBE0(v25, v44, (uint64_t (*)(_QWORD))sub_1BC5782D8);
  sub_1BC578254();
  v28 = (uint64_t *)(v26 + *(int *)(v27 + 48));
  v30 = v42;
  v29 = v43;
  *v28 = v43;
  v28[1] = 0;
  v28[2] = v21;
  v28[3] = v30;
  v31 = v40;
  v32 = v41;
  v28[4] = v41;
  v28[5] = v22;
  v28[6] = v23;
  v28[7] = v24;
  v34 = KeyPath;
  v33 = v39;
  v28[8] = v31;
  v28[9] = v34;
  v28[10] = v33;
  sub_1BC57869C(v29, 0, v21, v30, v32, v22, v23, v24, v31);
  sub_1BC5786FC((uint64_t)v45);
  sub_1BC578738(v29, 0, v21, v30, v32, v22, v23, v24, v31);
  return sub_1BC5786FC((uint64_t)v37);
}

uint64_t sub_1BC5744C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  void (*v33)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(_BYTE *, uint64_t);
  _BYTE v42[4];
  int v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  _BYTE *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;

  v4 = sub_1BC62C260();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC5783DC(0);
  v8 = v7;
  v51 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v52 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v44 = &v42[-v11];
  MEMORY[0x1E0C80A78](v12);
  v50 = &v42[-v13];
  v14 = a1[1];
  v54 = *a1;
  v55 = v14;
  sub_1BC36E2AC();
  swift_bridgeObjectRetain();
  v15 = sub_1BC62C338();
  v17 = v16;
  v19 = v18 & 1;
  sub_1BC62C2B4();
  v20 = sub_1BC62C2FC();
  v45 = v21;
  v46 = v20;
  v43 = v22;
  v47 = v23;
  swift_release();
  sub_1BC4040D0(v15, v17, v19);
  swift_bridgeObjectRelease();
  if (a1[3])
  {
    v24 = a1[2];
    v25 = a1[3];
  }
  else
  {
    v25 = 0xE300000000000000;
    v24 = 7104878;
  }
  v54 = v24;
  v55 = v25;
  swift_bridgeObjectRetain();
  v54 = sub_1BC62C338();
  v55 = v26;
  v56 = v27 & 1;
  v57 = v28;
  sub_1BC62C254();
  v29 = v44;
  v30 = v49;
  sub_1BC62C35C();
  (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v6, v30);
  sub_1BC4040D0(v54, v55, v56);
  swift_bridgeObjectRelease();
  v32 = v50;
  v31 = v51;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v51 + 32))(v50, v29, v8);
  LOBYTE(v54) = v43 & 1;
  v53 = 1;
  v33 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 16);
  v34 = v52;
  v33(v52, v32, v8);
  v35 = v54;
  v37 = v45;
  v36 = v46;
  *(_QWORD *)a2 = v46;
  *(_QWORD *)(a2 + 8) = v37;
  *(_BYTE *)(a2 + 16) = v35;
  v38 = v53;
  *(_QWORD *)(a2 + 24) = v47;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = v38;
  sub_1BC578370();
  v33((_BYTE *)(a2 + *(int *)(v39 + 64)), v34, v8);
  sub_1BC404110(v36, v37, v35);
  v40 = *(void (**)(_BYTE *, uint64_t))(v31 + 8);
  swift_bridgeObjectRetain();
  v40(v32, v8);
  v40(v34, v8);
  sub_1BC4040D0(v36, v37, v54);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC5747C4@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  v2 = (void *)sub_1BC62A700();
  v3 = (id)HKDiagnosticStringFromDate();

  sub_1BC62C680();
  sub_1BC36E2AC();
  v4 = sub_1BC62C338();
  v6 = v5;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  v8 = v7 & 1;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v7 & 1;
  *(_QWORD *)(a1 + 40) = v9;
  sub_1BC404110(v4, v5, v7 & 1);
  swift_bridgeObjectRetain();
  sub_1BC4040D0(v4, v6, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC574898@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_1BC62C224();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  sub_1BC5781D8();
  return sub_1BC5741A0(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1BC5748DC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC5748E8()
{
  void **v0;

  return sub_1BC573244(*v0);
}

uint64_t sub_1BC5748F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC57496C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BC62BFCC();
}

uint64_t sub_1BC5749E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v4[7] = a4;
  v5 = sub_1BC62BB34();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = sub_1BC62C944();
  v4[12] = sub_1BC62C938();
  v6 = (_QWORD *)swift_task_alloc();
  v4[13] = v6;
  *v6 = v4;
  v6[1] = sub_1BC574A74;
  return sub_1BC574E38();
}

uint64_t sub_1BC574A74(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 120) = a1;
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC574B18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = v1;
  swift_retain();
  sub_1BC62BFCC();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC574BAC()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = (void *)v0[14];
  swift_release();
  sub_1BC62BAF8();
  swift_retain();
  v3 = v2;
  swift_retain();
  v4 = v2;
  v5 = sub_1BC62BB28();
  v6 = sub_1BC62CAC4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (void *)v0[14];
    v21 = v0[9];
    v8 = (_QWORD *)v0[7];
    v22 = v0[8];
    v23 = v0[10];
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v24 = v10;
    *(_DWORD *)v9 = 136446466;
    v0[2] = *v8;
    sub_1BC576784();
    v11 = sub_1BC62C6E0();
    v0[3] = sub_1BC4991F0(v11, v12, &v24);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2082;
    v0[4] = v7;
    v13 = v7;
    sub_1BC35E44C();
    v14 = sub_1BC62C6E0();
    v0[5] = sub_1BC4991F0(v14, v15, &v24);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v5, v6, "[%{public}s] Unable to load ontology registry: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v10, -1, -1);
    MEMORY[0x1BCCF36A8](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    v16 = (void *)v0[14];
    v18 = v1[9];
    v17 = v1[10];
    v19 = v1[8];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1BC574E38()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[16] = v0;
  sub_1BC62C944();
  v1[17] = sub_1BC62C938();
  v1[18] = sub_1BC62C908();
  v1[19] = v2;
  return swift_task_switch();
}

uint64_t sub_1BC574EA4()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = objc_msgSend(*(id *)(v0[16] + 16), sel_healthStore);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB69B8]), sel_initWithHealthStore_, v1);
  v0[20] = v2;

  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1BC574F84;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1BC5750DC;
  v4[3] = &block_descriptor_58;
  v4[4] = v3;
  objc_msgSend(v2, sel_ontologyShardRegistryEntriesWithCompletion_, v4);
  return swift_continuation_await();
}

uint64_t sub_1BC574F84()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC574FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;

  swift_release();
  v1 = *(_QWORD *)(v0 + 120);
  if (v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    v4 = swift_bridgeObjectRetain();
    v2 = (uint64_t)sub_1BC3D74C0(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v5 = v2;
  sub_1BC572564(&v5);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1BC575094()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_release();
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5750DC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_1BC35E44C();
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1BC5755F8();
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_1BC62C878();
    return swift_continuation_throwingResume();
  }
}

BOOL sub_1BC575170(id *a1, void **a2)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v23;

  v2 = *a1;
  v3 = *a2;
  v4 = objc_msgSend(*a1, sel_identifier);
  v5 = sub_1BC62C680();
  v7 = v6;

  v8 = objc_msgSend(v3, sel_identifier);
  v9 = sub_1BC62C680();
  v11 = v10;

  v12 = v5 == v9 && v7 == v11;
  if (!v12 && (sub_1BC62D574() & 1) == 0)
    goto LABEL_10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v2, sel_schemaType);
  v14 = sub_1BC62C680();
  v16 = v15;

  v17 = objc_msgSend(v3, sel_schemaType);
  v18 = sub_1BC62C680();
  v20 = v19;

  if (v14 == v18 && v16 == v20)
    goto LABEL_9;
  if ((sub_1BC62D574() & 1) != 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v2, sel_schemaVersion);
    return (uint64_t)objc_msgSend(v3, sel_schemaVersion) <= (uint64_t)v21;
  }
  else
  {
LABEL_10:
    v23 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23 & 1;
  }
}

uint64_t sub_1BC575330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUIP33_766154230A8DC4663A59392D072AE21B17EntriesDataSource__entries;
  sub_1BC357158(0, qword_1EF436D78, (uint64_t (*)(uint64_t))sub_1BC5755DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5753A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC62BED0();
  *a1 = result;
  return result;
}

uint64_t HKOntologyShardRegistryEntry.id.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_identifier);
  type metadata accessor for HKOntologyShardIdentifier(0);
  sub_1BC62D2D4();

  sub_1BC62C764();
  v3 = objc_msgSend(v1, sel_schemaType);
  type metadata accessor for HKOntologyShardSchemaType(0);
  sub_1BC62D2D4();

  sub_1BC62C764();
  objc_msgSend(v1, sel_schemaVersion);
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BC5754F8()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t sub_1BC575504@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HKOntologyShardRegistryEntry.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC57552C()
{
  return type metadata accessor for EntriesDataSource(0);
}

uint64_t type metadata accessor for EntriesDataSource(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF436D68);
}

void sub_1BC575548()
{
  unint64_t v0;

  sub_1BC357158(319, qword_1EF436D78, (uint64_t (*)(uint64_t))sub_1BC5755DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1BC5755DC(uint64_t a1)
{
  sub_1BC357158(a1, &qword_1EF42D008, (uint64_t (*)(uint64_t))sub_1BC5755F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

unint64_t sub_1BC5755F8()
{
  unint64_t result;

  result = qword_1EF42D000;
  if (!qword_1EF42D000)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42D000);
  }
  return result;
}

uint64_t sub_1BC575634()
{
  return MEMORY[0x1E0C96020];
}

void sub_1BC575640(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  _BOOL4 v19;
  _BOOL4 v20;
  uint64_t v21;
  void **v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  _BOOL4 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  char v60;
  void *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void **__dst;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  uint64_t v135;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_1BC62D520();
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_146;
    if (v4)
      sub_1BC575EFC(0, v4, 1, a1);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_155;
  v124 = v5;
  v126 = v4;
  v121 = a1;
  if (v4 < 2)
  {
    v9 = (char *)MEMORY[0x1E0DEE9D8];
    v135 = MEMORY[0x1E0DEE9D8];
    __dst = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v64 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      goto LABEL_111;
    }
  }
  else
  {
    v7 = v6 >> 1;
    sub_1BC5755F8();
    v8 = sub_1BC62C8CC();
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    v4 = v126;
    __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v135 = v8;
  }
  v10 = 0;
  v11 = *a1;
  v122 = *a1 - 8;
  v123 = *a1 + 16;
  v9 = (char *)MEMORY[0x1E0DEE9D8];
  v132 = *a1;
  do
  {
    v12 = v10;
    v13 = v10 + 1;
    v127 = v10;
    if (v10 + 1 < v4)
    {
      v14 = *(void **)(v11 + 8 * v13);
      v15 = v10;
      v133 = *(void **)(v11 + 8 * v10);
      v16 = v133;
      v134 = v14;
      v17 = v14;
      v18 = v16;
      v19 = sub_1BC575170(&v134, &v133);
      if (v2)
      {
        swift_bridgeObjectRelease();

        goto LABEL_124;
      }
      v20 = v19;

      v21 = v15 + 2;
      v12 = v15;
      if (v15 + 2 < v4)
      {
        v22 = (void **)(v123 + 8 * v15);
        while (1)
        {
          v23 = *v22;
          v133 = *(v22 - 1);
          v24 = v133;
          v134 = v23;
          v25 = v23;
          v26 = v24;
          v27 = sub_1BC575170(&v134, &v133);

          if (((v20 ^ v27) & 1) != 0)
            break;
          ++v22;
          v4 = v126;
          if (v126 == ++v21)
          {
            v21 = v126;
            goto LABEL_21;
          }
        }
        v4 = v126;
LABEL_21:
        v12 = v127;
      }
      v11 = v132;
      if (v20)
      {
        if (v21 < v12)
          goto LABEL_150;
        v13 = v21;
        if (v12 < v21)
        {
          v28 = (uint64_t *)(v122 + 8 * v21);
          v29 = v21;
          v30 = v12;
          v31 = (uint64_t *)(v132 + 8 * v12);
          do
          {
            if (v30 != --v29)
            {
              if (!v132)
                goto LABEL_153;
              v32 = *v31;
              *v31 = *v28;
              *v28 = v32;
            }
            ++v30;
            --v28;
            ++v31;
          }
          while (v30 < v29);
        }
      }
      else
      {
        v13 = v21;
      }
    }
    if (v13 >= v4)
      goto LABEL_60;
    if (__OFSUB__(v13, v12))
      goto LABEL_147;
    if (v13 - v12 >= v124)
      goto LABEL_60;
    if (__OFADD__(v12, v124))
      goto LABEL_148;
    if (v12 + v124 >= v4)
      v33 = v4;
    else
      v33 = v12 + v124;
    if (v33 < v12)
    {
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      sub_1BC62D388();
      __break(1u);
      return;
    }
    if (v13 == v33)
      goto LABEL_60;
    v119 = v9;
    v120 = v2;
    v34 = v122 + 8 * v13;
    v125 = v33;
    while (2)
    {
      v36 = *(void **)(v11 + 8 * v13);
      v37 = v12;
      v128 = v34;
      v130 = v13;
      while (1)
      {
        v38 = *(void **)v34;
        v39 = v36;
        v40 = v38;
        v41 = objc_msgSend(v39, sel_identifier);
        v42 = sub_1BC62C680();
        v44 = v43;

        v45 = objc_msgSend(v40, sel_identifier);
        v46 = sub_1BC62C680();
        v48 = v47;

        v49 = v42 == v46 && v44 == v48;
        if (v49 || (sub_1BC62D574() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v50 = objc_msgSend(v39, sel_schemaType);
          v51 = sub_1BC62C680();
          v53 = v52;

          v54 = objc_msgSend(v40, sel_schemaType);
          v55 = sub_1BC62C680();
          v57 = v56;

          if (v51 == v55 && v53 == v57)
            goto LABEL_53;
          if ((sub_1BC62D574() & 1) != 0)
          {
LABEL_53:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v58 = objc_msgSend(v39, sel_schemaVersion);
            v59 = objc_msgSend(v40, sel_schemaVersion);

            if ((uint64_t)v59 > (uint64_t)v58)
              break;
            goto LABEL_56;
          }
        }
        v60 = sub_1BC62D574();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v60 & 1) == 0)
          break;
LABEL_56:
        v11 = v132;
        v35 = v130;
        if (!v132)
          goto LABEL_151;
        v61 = *(void **)v34;
        v36 = *(void **)(v34 + 8);
        *(_QWORD *)v34 = v36;
        *(_QWORD *)(v34 + 8) = v61;
        v34 -= 8;
        if (v130 == ++v37)
          goto LABEL_43;
      }
      v11 = v132;
      v35 = v130;
LABEL_43:
      v13 = v35 + 1;
      v12 = v127;
      v34 = v128 + 8;
      if (v13 != v125)
        continue;
      break;
    }
    v13 = v125;
    v9 = v119;
    v2 = v120;
LABEL_60:
    if (v13 < v12)
      goto LABEL_145;
    v131 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_1BC503AB4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v63 = *((_QWORD *)v9 + 2);
    v62 = *((_QWORD *)v9 + 3);
    v64 = v63 + 1;
    v11 = v132;
    if (v63 >= v62 >> 1)
    {
      v112 = sub_1BC503AB4((char *)(v62 > 1), v63 + 1, 1, v9);
      v11 = v132;
      v9 = v112;
    }
    *((_QWORD *)v9 + 2) = v64;
    v65 = v9 + 32;
    v66 = &v9[16 * v63 + 32];
    *(_QWORD *)v66 = v127;
    *((_QWORD *)v66 + 1) = v13;
    if (v63)
    {
      while (2)
      {
        v67 = v64 - 1;
        if (v64 >= 4)
        {
          v72 = &v65[16 * v64];
          v73 = *((_QWORD *)v72 - 8);
          v74 = *((_QWORD *)v72 - 7);
          v78 = __OFSUB__(v74, v73);
          v75 = v74 - v73;
          if (v78)
            goto LABEL_130;
          v77 = *((_QWORD *)v72 - 6);
          v76 = *((_QWORD *)v72 - 5);
          v78 = __OFSUB__(v76, v77);
          v70 = v76 - v77;
          v71 = v78;
          if (v78)
            goto LABEL_131;
          v79 = v64 - 2;
          v80 = &v65[16 * v64 - 32];
          v82 = *(_QWORD *)v80;
          v81 = *((_QWORD *)v80 + 1);
          v78 = __OFSUB__(v81, v82);
          v83 = v81 - v82;
          if (v78)
            goto LABEL_133;
          v78 = __OFADD__(v70, v83);
          v84 = v70 + v83;
          if (v78)
            goto LABEL_136;
          if (v84 >= v75)
          {
            v102 = &v65[16 * v67];
            v104 = *(_QWORD *)v102;
            v103 = *((_QWORD *)v102 + 1);
            v78 = __OFSUB__(v103, v104);
            v105 = v103 - v104;
            if (v78)
              goto LABEL_140;
            v95 = v70 < v105;
          }
          else
          {
LABEL_79:
            if ((v71 & 1) != 0)
              goto LABEL_132;
            v79 = v64 - 2;
            v85 = &v65[16 * v64 - 32];
            v87 = *(_QWORD *)v85;
            v86 = *((_QWORD *)v85 + 1);
            v88 = __OFSUB__(v86, v87);
            v89 = v86 - v87;
            v90 = v88;
            if (v88)
              goto LABEL_135;
            v91 = &v65[16 * v67];
            v93 = *(_QWORD *)v91;
            v92 = *((_QWORD *)v91 + 1);
            v78 = __OFSUB__(v92, v93);
            v94 = v92 - v93;
            if (v78)
              goto LABEL_138;
            if (__OFADD__(v89, v94))
              goto LABEL_139;
            if (v89 + v94 < v70)
              goto LABEL_91;
            v95 = v70 < v94;
          }
          if (v95)
            v67 = v79;
        }
        else
        {
          if (v64 == 3)
          {
            v69 = *((_QWORD *)v9 + 4);
            v68 = *((_QWORD *)v9 + 5);
            v78 = __OFSUB__(v68, v69);
            v70 = v68 - v69;
            v71 = v78;
            goto LABEL_79;
          }
          v96 = *((_QWORD *)v9 + 4);
          v97 = *((_QWORD *)v9 + 5);
          v78 = __OFSUB__(v97, v96);
          v89 = v97 - v96;
          v90 = v78;
LABEL_91:
          if ((v90 & 1) != 0)
            goto LABEL_134;
          v98 = &v65[16 * v67];
          v100 = *(_QWORD *)v98;
          v99 = *((_QWORD *)v98 + 1);
          v78 = __OFSUB__(v99, v100);
          v101 = v99 - v100;
          if (v78)
            goto LABEL_137;
          if (v101 < v89)
            goto LABEL_108;
        }
        v106 = v67 - 1;
        if (v67 - 1 >= v64)
        {
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        if (!v11)
          goto LABEL_152;
        v107 = &v65[16 * v106];
        v108 = *(_QWORD *)v107;
        v109 = &v65[16 * v67];
        v110 = *((_QWORD *)v109 + 1);
        sub_1BC575FE8((void **)(v11 + 8 * *(_QWORD *)v107), (void **)(v11 + 8 * *(_QWORD *)v109), v11 + 8 * v110, __dst);
        if (v2)
          goto LABEL_122;
        if (v110 < v108)
          goto LABEL_127;
        if (v67 > *((_QWORD *)v9 + 2))
          goto LABEL_128;
        *(_QWORD *)v107 = v108;
        *(_QWORD *)&v65[16 * v106 + 8] = v110;
        v111 = *((_QWORD *)v9 + 2);
        if (v67 >= v111)
          goto LABEL_129;
        v64 = v111 - 1;
        memmove(&v65[16 * v67], v109 + 16, 16 * (v111 - 1 - v67));
        *((_QWORD *)v9 + 2) = v111 - 1;
        v11 = v132;
        if (v111 <= 2)
          goto LABEL_108;
        continue;
      }
    }
    v64 = 1;
LABEL_108:
    v4 = v126;
    v10 = v131;
  }
  while (v131 < v126);
LABEL_111:
  if (v64 >= 2)
  {
    v113 = *v121;
    do
    {
      v114 = v64 - 2;
      if (v64 < 2)
        goto LABEL_141;
      if (!v113)
        goto LABEL_154;
      v115 = *(_QWORD *)&v9[16 * v114 + 32];
      v116 = *(_QWORD *)&v9[16 * v64 + 24];
      sub_1BC575FE8((void **)(v113 + 8 * v115), (void **)(v113 + 8 * *(_QWORD *)&v9[16 * v64 + 16]), v113 + 8 * v116, __dst);
      if (v2)
        break;
      if (v116 < v115)
        goto LABEL_142;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_1BC504414((uint64_t)v9);
      if (v114 >= *((_QWORD *)v9 + 2))
        goto LABEL_143;
      v117 = &v9[16 * v114 + 32];
      *(_QWORD *)v117 = v115;
      *((_QWORD *)v117 + 1) = v116;
      v118 = *((_QWORD *)v9 + 2);
      if (v64 > v118)
        goto LABEL_144;
      memmove(&v9[16 * v64 + 16], &v9[16 * v64 + 32], 16 * (v118 - v64));
      *((_QWORD *)v9 + 2) = v118 - 1;
      v64 = v118 - 1;
    }
    while (v118 > 2);
  }
LABEL_122:
  swift_bridgeObjectRelease();
LABEL_124:
  *(_QWORD *)((v135 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1BC62C890();
  swift_bridgeObjectRelease();
}

void sub_1BC575EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  BOOL v14;
  void *v15;
  void *v18;
  id v19;

  if (a3 != a2)
  {
    v5 = a3;
    v6 = a1;
    v7 = *a4;
    v8 = *a4 + 8 * a3 - 8;
LABEL_4:
    v9 = *(void **)(v7 + 8 * v5);
    v10 = v8;
    while (1)
    {
      v19 = v9;
      v18 = *(void **)v10;
      v11 = v18;
      v12 = v9;
      v13 = v11;
      v14 = sub_1BC575170(&v19, &v18);

      if (v4)
        break;
      if (v14)
      {
        if (!v7)
        {
          __break(1u);
          return;
        }
        v15 = *(void **)v10;
        v9 = *(void **)(v10 + 8);
        *(_QWORD *)v10 = v9;
        *(_QWORD *)(v10 + 8) = v15;
        v10 -= 8;
        if (v5 != ++v6)
          continue;
      }
      ++v5;
      v8 += 8;
      v6 = a1;
      if (v5 != a2)
        goto LABEL_4;
      return;
    }
  }
}

uint64_t sub_1BC575FE8(void **__src, void **a2, unint64_t a3, void **__dst)
{
  id *v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  BOOL v18;
  BOOL v19;
  id *v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  BOOL v29;
  BOOL v30;
  id *v31;
  void **v32;
  uint64_t result;
  void **v34;
  void **v35;
  uint64_t v36;
  void *v37;
  id v38;
  void **v39;
  void **v40;
  void **v41;

  v35 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v41 = __src;
  v40 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        memmove(__dst, a2, 8 * v12);
        __dst = v35;
      }
      v21 = &__dst[v12];
      v39 = v21;
      v41 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        v22 = (id *)(a3 - 8);
        v23 = v5;
        v34 = v6;
        while (1)
        {
          v24 = v21;
          v25 = *--v21;
          v38 = v25;
          v26 = *--v23;
          v37 = v26;
          v27 = v38;
          v28 = v26;
          v29 = sub_1BC575170(&v38, &v37);
          if (v36)
            break;
          v30 = v29;
          v36 = 0;
          v31 = v22 + 1;

          if (v30)
          {
            v32 = v35;
            if (v31 != v5 || v22 >= v5)
              *v22 = *v23;
            v41 = v23;
            v21 = v24;
          }
          else
          {
            v39 = v21;
            v32 = v35;
            if (v31 < v24 || v22 >= v24 || v31 != v24)
              *v22 = *v21;
            v23 = v5;
          }
          if (v23 > v34)
          {
            --v22;
            v5 = v23;
            if (v21 > v32)
              continue;
          }
          goto LABEL_48;
        }

      }
      goto LABEL_48;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      memmove(__dst, __src, 8 * v9);
      __dst = v35;
    }
    v13 = &__dst[v9];
    v39 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        v38 = *v5;
        v14 = __dst;
        v37 = *__dst;
        v15 = v37;
        v16 = v38;
        v17 = v15;
        v18 = sub_1BC575170(&v38, &v37);
        if (v36)
          break;
        v19 = v18;

        if (v19)
        {
          v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5)
            *v6 = *v5;
          __dst = v14;
        }
        else
        {
          if (v6 != v14)
            *v6 = *v14;
          __dst = v14 + 1;
          v40 = v14 + 1;
          v20 = v5;
        }
        v36 = 0;
        v41 = ++v6;
        if (__dst < v13)
        {
          v5 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        goto LABEL_48;
      }

    }
LABEL_48:
    sub_1BC503C80(&v41, &v40, &v39);
    return 1;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC57631C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  sub_1BC5755DC(0);
  sub_1BC576CAC();
  sub_1BC576DAC();
  sub_1BC347F0C(&qword_1EF436E88, (uint64_t (*)(uint64_t))sub_1BC576CAC, MEMORY[0x1E0CD9468]);
  sub_1BC347F0C(&qword_1EF436EA0, (uint64_t (*)(uint64_t))sub_1BC5755F8, (uint64_t)&protocol conformance descriptor for HKOntologyShardRegistryEntry);
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BC62C428();
}

uint64_t sub_1BC576434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  sub_1BC5772E8(0);
  type metadata accessor for EntryDetail.EntryDetailRow(0);
  sub_1BC577318();
  sub_1BC347F0C(&qword_1EF436ED0, type metadata accessor for EntryDetail.EntryDetailRow, (uint64_t)&unk_1BC648AB8);
  sub_1BC347F0C(&qword_1EF436EE0, type metadata accessor for EntryDetail.EntryDetailRow, (uint64_t)&unk_1BC648A80);
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BC62C428();
}

uint64_t sub_1BC576548(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD v19[2];

  v2 = v1;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - v5;
  sub_1BC357158(0, qword_1EF436D78, (uint64_t (*)(uint64_t))sub_1BC5755DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v19 - v10;
  v12 = v2 + OBJC_IVAR____TtC15HealthRecordsUIP33_766154230A8DC4663A59392D072AE21B17EntriesDataSource__entries;
  v19[1] = MEMORY[0x1E0DEE9D8];
  sub_1BC5755DC(0);
  sub_1BC62BF90();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(_QWORD *)(v2 + 16) = a1;
  v13 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  sub_1BC62C944();
  v14 = a1;
  swift_retain();
  v15 = sub_1BC62C938();
  v16 = (_QWORD *)swift_allocObject();
  v17 = MEMORY[0x1E0DF06E8];
  v16[2] = v15;
  v16[3] = v17;
  v16[4] = v2;
  sub_1BC5C2784((uint64_t)v6, (uint64_t)&unk_1EF436E08, (uint64_t)v16);
  swift_release();
  return v2;
}

uint64_t sub_1BC5766EC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC576718(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC377F18;
  return sub_1BC5749E4(a1, v4, v5, v6);
}

unint64_t sub_1BC576784()
{
  unint64_t result;

  result = qword_1EF436E18;
  if (!qword_1EF436E18)
  {
    type metadata accessor for EntriesDataSource(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF436E18);
  }
  return result;
}

uint64_t destroy for OntologyRegistryView(id *a1)
{

  return swift_release();
}

_QWORD *_s15HealthRecordsUI20OntologyRegistryViewVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for OntologyRegistryView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for OntologyRegistryView(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for OntologyRegistryView()
{
  return &type metadata for OntologyRegistryView;
}

uint64_t sub_1BC5768E0()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for RegistryList(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for RegistryList(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for RegistryList(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for RegistryList(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RegistryList(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RegistryList()
{
  return &type metadata for RegistryList;
}

unint64_t sub_1BC576A64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF436E20;
  if (!qword_1EF436E20)
  {
    sub_1BC576ACC();
    v2 = v1;
    v3[0] = sub_1BC576B5C();
    v3[1] = sub_1BC576BA0();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CD9C20], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF436E20);
  }
  return result;
}

void sub_1BC576ACC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF436E28)
  {
    sub_1BC357158(255, &qword_1EF436E30, (uint64_t (*)(uint64_t))sub_1BC576B40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDCF68]);
    v0 = sub_1BC62C14C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF436E28);
  }
}

void sub_1BC576B40(uint64_t a1)
{
  sub_1BC357158(a1, &qword_1EF436E38, type metadata accessor for EntriesDataSource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BC576B5C()
{
  unint64_t result;

  result = qword_1EF436E40;
  if (!qword_1EF436E40)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC648908, &type metadata for RegistryList);
    atomic_store(result, (unint64_t *)&qword_1EF436E40);
  }
  return result;
}

unint64_t sub_1BC576BA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF436E48;
  if (!qword_1EF436E48)
  {
    sub_1BC357158(255, &qword_1EF436E30, (uint64_t (*)(uint64_t))sub_1BC576B40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDCF68]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CDCF80], v1);
    atomic_store(result, (unint64_t *)&qword_1EF436E48);
  }
  return result;
}

uint64_t sub_1BC576C00()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BC576C10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF436E50)
  {
    sub_1BC57724C(255, &qword_1EF436E58, sub_1BC5755DC, (void (*)(uint64_t))sub_1BC576CAC, (void (*)(void))sub_1BC576DAC);
    sub_1BC576DC8();
    v0 = sub_1BC62C2D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF436E50);
  }
}

void sub_1BC576CAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF436E60)
  {
    sub_1BC576D24();
    sub_1BC576D68();
    v0 = sub_1BC62C134();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF436E60);
  }
}

unint64_t sub_1BC576D24()
{
  unint64_t result;

  result = qword_1EF436E68;
  if (!qword_1EF436E68)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6489C0, &type metadata for EntryRow);
    atomic_store(result, (unint64_t *)&qword_1EF436E68);
  }
  return result;
}

unint64_t sub_1BC576D68()
{
  unint64_t result;

  result = qword_1EF436E70;
  if (!qword_1EF436E70)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC648970, &type metadata for EntryDetail);
    atomic_store(result, (unint64_t *)&qword_1EF436E70);
  }
  return result;
}

uint64_t sub_1BC576DAC()
{
  return sub_1BC347F0C(&qword_1EF436E78, (uint64_t (*)(uint64_t))sub_1BC5755DC, MEMORY[0x1E0DEAF48]);
}

unint64_t sub_1BC576DC8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF436E80;
  if (!qword_1EF436E80)
  {
    sub_1BC57724C(255, &qword_1EF436E58, sub_1BC5755DC, (void (*)(uint64_t))sub_1BC576CAC, (void (*)(void))sub_1BC576DAC);
    v2 = v1;
    v3 = sub_1BC347F0C(&qword_1EF436E88, (uint64_t (*)(uint64_t))sub_1BC576CAC, MEMORY[0x1E0CD9468]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CDFEE8], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF436E80);
  }
  return result;
}

void sub_1BC576E60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_1EF436E90)
  {
    sub_1BC576C10();
    v5[0] = v2;
    v5[1] = sub_1BC347F0C(&qword_1EF436E98, (uint64_t (*)(uint64_t))sub_1BC576C10, MEMORY[0x1E0CDD950]);
    v3 = MEMORY[0x1BCCF357C](a1, v5, MEMORY[0x1E0CDE578], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EF436E90);
  }
}

uint64_t sub_1BC576EEC()
{
  uint64_t *v0;

  return sub_1BC57631C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BC576EF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = *a1;
  return v2(&v4);
}

id sub_1BC576F2C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

ValueMetadata *type metadata accessor for EntryDetail()
{
  return &type metadata for EntryDetail;
}

ValueMetadata *type metadata accessor for EntryRow()
{
  return &type metadata for EntryRow;
}

uint64_t sub_1BC576F58()
{
  sub_1BC576C10();
  sub_1BC347F0C(&qword_1EF436E98, (uint64_t (*)(uint64_t))sub_1BC576C10, MEMORY[0x1E0CDD950]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BC576FB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BC576FC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BC576FD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC62C1A0();
  *a1 = result;
  return result;
}

uint64_t sub_1BC577000()
{
  swift_retain();
  return sub_1BC62C1AC();
}

uint64_t sub_1BC577028(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_BYTE *)(a1 + 120);
  sub_1BC404110(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_1BC404110(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_1BC404110(v5, v6, v7);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1BC5770EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_BYTE *)(a1 + 120);
  sub_1BC4040D0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_1BC4040D0(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_1BC4040D0(v5, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

void sub_1BC5771B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF436EA8)
  {
    sub_1BC57724C(255, &qword_1EF436EB0, sub_1BC5772E8, (void (*)(uint64_t))type metadata accessor for EntryDetail.EntryDetailRow, (void (*)(void))sub_1BC577318);
    sub_1BC577334();
    v0 = sub_1BC62C2D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF436EA8);
  }
}

void sub_1BC57724C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    v8 = sub_1BC62C434();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BC5772E8(uint64_t a1)
{
  sub_1BC357158(a1, &qword_1EF436EB8, type metadata accessor for EntryDetail.EntryDetailRow, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t type metadata accessor for EntryDetail.EntryDetailRow(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF436F48);
}

uint64_t sub_1BC577318()
{
  return sub_1BC347F0C(&qword_1EF436EC0, (uint64_t (*)(uint64_t))sub_1BC5772E8, MEMORY[0x1E0DEAF48]);
}

unint64_t sub_1BC577334()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF436EC8;
  if (!qword_1EF436EC8)
  {
    sub_1BC57724C(255, &qword_1EF436EB0, sub_1BC5772E8, (void (*)(uint64_t))type metadata accessor for EntryDetail.EntryDetailRow, (void (*)(void))sub_1BC577318);
    v2 = v1;
    v3 = sub_1BC347F0C(&qword_1EF436ED0, type metadata accessor for EntryDetail.EntryDetailRow, (uint64_t)&unk_1BC648AB8);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CDFEE8], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF436EC8);
  }
  return result;
}

uint64_t sub_1BC5773CC()
{
  uint64_t *v0;

  return sub_1BC576434(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BC5773D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5773FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1BC57741C(uint64_t a1)
{
  uint64_t result;

  result = 0x6E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x746F6D6552206E4FLL;
      break;
    case 2:
      result = 0x646567617453;
      break;
    case 3:
      result = 0x646574726F706D49;
      break;
    default:
      sub_1BC62C764();
      type metadata accessor for HKOntologyShardState(0);
      sub_1BC62D2D4();
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_1BC577510(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC357158(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t *sub_1BC577568(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BC62A760();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_1BC577684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BC62A760();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_1BC577708(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC62A760();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_1BC5777F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC62A760();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1BC577954(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_1BC577A24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BC62A760();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1BC577B60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC577B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BC577C00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC577C0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1BC577C98()
{
  unint64_t v0;

  sub_1BC357158(319, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BC577D2C()
{
  return sub_1BC347F0C(&qword_1EF436F88, (uint64_t (*)(uint64_t))sub_1BC577D58, MEMORY[0x1E0CDFCC0]);
}

void sub_1BC577D58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF436F90)
  {
    sub_1BC357158(255, &qword_1EF436F98, (uint64_t (*)(uint64_t))sub_1BC577DF0, MEMORY[0x1E0CE0648]);
    sub_1BC404310(&qword_1EF437008, &qword_1EF436F98, (uint64_t (*)(uint64_t))sub_1BC577DF0);
    v0 = sub_1BC62C410();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF436F90);
  }
}

void sub_1BC577DF0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF436FA0)
  {
    sub_1BC577FD0(255, &qword_1EF436FA8, (void (*)(uint64_t))sub_1BC577E7C);
    sub_1BC577FD0(255, &qword_1EF436FE0, (void (*)(uint64_t))sub_1BC57804C);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF436FA0);
  }
}

void sub_1BC577E7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF436FB0)
  {
    sub_1BC357158(255, &qword_1EF436FB8, (uint64_t (*)(uint64_t))sub_1BC577F14, MEMORY[0x1E0CE0648]);
    sub_1BC404310(&qword_1EF436FC8, &qword_1EF436FB8, (uint64_t (*)(uint64_t))sub_1BC577F14);
    v0 = sub_1BC62C404();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF436FB0);
  }
}

void sub_1BC577F14()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF436FC0)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF436FC0);
  }
}

void sub_1BC577F7C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC403CE4(255, a3);
    v4 = sub_1BC62C26C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC577FD0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_1BC577F7C(255, &qword_1EF436FD0, &qword_1EF436FD8);
    v4 = sub_1BC62C14C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC57804C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF436FE8)
  {
    sub_1BC357158(255, &qword_1EF436FF0, (uint64_t (*)(uint64_t))sub_1BC5780E4, MEMORY[0x1E0CE0648]);
    sub_1BC404310(&qword_1EF437000, &qword_1EF436FF0, (uint64_t (*)(uint64_t))sub_1BC5780E4);
    v0 = sub_1BC62C404();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF436FE8);
  }
}

void sub_1BC5780E4()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1EF436FF8)
  {
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EF436FF8);
  }
}

uint64_t sub_1BC578154()
{
  sub_1BC5771B0();
  sub_1BC347F0C(&qword_1EF436ED8, (uint64_t (*)(uint64_t))sub_1BC5771B0, MEMORY[0x1E0CDD950]);
  sub_1BC36E2AC();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BC5781C8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BC5781D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF437010)
  {
    sub_1BC357158(255, &qword_1EF437018, (uint64_t (*)(uint64_t))sub_1BC578254, MEMORY[0x1E0CE0648]);
    v0 = sub_1BC62C110();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF437010);
  }
}

void sub_1BC578254()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF437020)
  {
    sub_1BC5782D8();
    sub_1BC357158(255, &qword_1EF437050, (uint64_t (*)(uint64_t))sub_1BC578464, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF437020);
  }
}

void sub_1BC5782D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF437028)
  {
    sub_1BC357158(255, &qword_1EF437030, (uint64_t (*)(uint64_t))sub_1BC578370, MEMORY[0x1E0CE0648]);
    sub_1BC404310(&qword_1EF437048, &qword_1EF437030, (uint64_t (*)(uint64_t))sub_1BC578370);
    v0 = sub_1BC62C404();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF437028);
  }
}

void sub_1BC578370()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF437038)
  {
    sub_1BC5783DC(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF437038);
  }
}

void sub_1BC5783DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_1EF437040)
  {
    v2 = sub_1BC62C260();
    v5[0] = MEMORY[0x1E0CDDD78];
    v5[1] = v2;
    v5[2] = MEMORY[0x1E0CDDD58];
    v5[3] = MEMORY[0x1E0CDC590];
    v3 = MEMORY[0x1BCCF357C](a1, v5, MEMORY[0x1E0CDE370], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EF437040);
  }
}

void sub_1BC578464()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF437058)
  {
    sub_1BC5784E0();
    sub_1BC577F7C(255, &qword_1EF437080, &qword_1EF437088);
    v0 = sub_1BC62C14C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF437058);
  }
}

void sub_1BC5784E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF437060)
  {
    sub_1BC357158(255, &qword_1EF437068, (uint64_t (*)(uint64_t))sub_1BC578578, MEMORY[0x1E0CE0648]);
    sub_1BC404310(&qword_1EF437078, &qword_1EF437068, (uint64_t (*)(uint64_t))sub_1BC578578);
    v0 = sub_1BC62C404();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF437060);
  }
}

void sub_1BC578578()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF437070)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF437070);
  }
}

void sub_1BC5785DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF437090)
  {
    sub_1BC357158(255, &qword_1EF437030, (uint64_t (*)(uint64_t))sub_1BC578370, MEMORY[0x1E0CE0648]);
    v0 = sub_1BC62C110();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF437090);
  }
}

uint64_t sub_1BC578658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC5782D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC57869C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t result;

  if (a9)
  {
    sub_1BC404110(a6, a7, a8 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BC5786FC(uint64_t a1)
{
  uint64_t v2;

  sub_1BC5782D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC578738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t result;

  if (a9)
  {
    sub_1BC4040D0(a6, a7, a8 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC578798@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC62C170();
  *a1 = result;
  return result;
}

uint64_t sub_1BC5787C0()
{
  swift_retain();
  return sub_1BC62C17C();
}

uint64_t sub_1BC5787E8()
{
  return sub_1BC347F0C(&qword_1EF437098, (uint64_t (*)(uint64_t))sub_1BC578814, MEMORY[0x1E0CDFCC0]);
}

void sub_1BC578814()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4370A0)
  {
    sub_1BC357158(255, &qword_1EF437018, (uint64_t (*)(uint64_t))sub_1BC578254, MEMORY[0x1E0CE0648]);
    sub_1BC404310(&qword_1EF4370A8, &qword_1EF437018, (uint64_t (*)(uint64_t))sub_1BC578254);
    v0 = sub_1BC62C410();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4370A0);
  }
}

uint64_t sub_1BC5788B4()
{
  type metadata accessor for TopAlignedIconListCell();
  sub_1BC5796E4();
  return sub_1BC62ADA8();
}

int64x2_t sub_1BC5788E4()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4046800000000000uLL);
  xmmword_1EF45A020 = (__int128)result;
  return result;
}

uint64_t sub_1BC5788FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;
  _OWORD v11[3];
  uint64_t v12;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC37ADB0(v3, (uint64_t)v9);
  if (v10)
  {
    sub_1BC37AE0C();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v11[0] = v5;
      v11[1] = v6;
      v11[2] = v7;
      v12 = v8;
      sub_1BC578AE4((uint64_t)v11);
      sub_1BC579438((uint64_t)v11);
    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v9);
  }
  return sub_1BC37AE60(a1);
}

void (*sub_1BC5789D4(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0xA8uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_item;
  v3[19] = v1;
  v3[20] = v4;
  swift_beginAccess();
  return sub_1BC578A2C;
}

void sub_1BC578A2C(void **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  __int128 v5;

  v3 = *a1;
  v4 = (uint64_t)*a1 + 56;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1BC37ADB0(v3[19] + v3[20], (uint64_t)(v3 + 14));
    if (v3[17])
    {
      sub_1BC37AE0C();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v5 = *(_OWORD *)(v4 + 16);
        *(_OWORD *)v3 = *(_OWORD *)v4;
        *((_OWORD *)v3 + 1) = v5;
        *((_OWORD *)v3 + 2) = *(_OWORD *)(v4 + 32);
        v3[6] = *(_QWORD *)(v4 + 48);
        sub_1BC578AE4((uint64_t)v3);
        sub_1BC579438((uint64_t)v3);
      }
    }
    else
    {
      sub_1BC37AE60((uint64_t)(v3 + 14));
    }
  }
  free(v3);
}

void sub_1BC578AE4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  void (*v9)(_QWORD *, _QWORD);
  void (*v10)(_QWORD *, _QWORD);
  id v11;
  void (*v12)(_QWORD *, _QWORD);
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  _QWORD v54[4];

  v2 = v1;
  v4 = sub_1BC62BD98();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1BCCF201C](v6);
  swift_bridgeObjectRetain();
  sub_1BC62BD74();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  sub_1BC62CDDC();
  v9 = (void (*)(_QWORD *, _QWORD))sub_1BC62BCE4();
  sub_1BC62BCC0();
  v9(v54, 0);
  swift_bridgeObjectRetain();
  sub_1BC62BC9C();
  sub_1BC62CDDC();
  v10 = (void (*)(_QWORD *, _QWORD))sub_1BC62BD20();
  sub_1BC62BCC0();
  v10(v54, 0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v12 = (void (*)(_QWORD *, _QWORD))sub_1BC62BD20();
  sub_1BC62BCCC();
  v12(v54, 0);
  v13 = (void *)objc_opt_self();
  if (qword_1EF428748 != -1)
    swift_once();
  v14 = objc_msgSend(v13, sel_hk_transparentInterfaceImageWithSize_, xmmword_1EF45A020);
  sub_1BC62BD80();
  v15 = (void *)sub_1BC62BC84();
  objc_opt_self();
  v16 = (void *)swift_dynamicCastObjCClass();
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, sel_textLayoutGuide);
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v17, sel_imageLayoutGuide);
      if (v20)
      {
        v49 = v15;
        v51 = v5;
        v52 = v4;
        v53 = v20;
        objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        v21 = objc_msgSend(v2, sel_contentView);
        objc_msgSend(v21, sel_addSubview_, v17);

        v22 = objc_msgSend(v2, sel_contentView);
        objc_msgSend(v17, sel_hk_alignConstraintsWithView_, v22);

        v23 = objc_msgSend(v2, sel_separatorLayoutGuide);
        v24 = objc_msgSend(v23, sel_leadingAnchor);

        v25 = objc_msgSend(v19, (SEL)&selRef_dateCache + 6);
        v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

        objc_msgSend(v26, sel_setActive_, 1);
        v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
        objc_msgSend(v27, sel_setImage_, *(_QWORD *)(a1 + 48));
        objc_msgSend(v27, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        v28 = objc_msgSend(v2, sel_contentView);
        objc_msgSend(v28, sel_addSubview_, v27);

        v48 = (id)objc_opt_self();
        sub_1BC34D844();
        v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1BC63A3D0;
        v30 = objc_msgSend(v27, sel_topAnchor);
        v50 = v19;
        v31 = objc_msgSend(v19, sel_topAnchor);
        v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

        *(_QWORD *)(v29 + 32) = v32;
        v33 = objc_msgSend(v27, sel_leadingAnchor);
        v34 = v53;
        v35 = objc_msgSend(v53, sel_leadingAnchor);
        v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);

        *(_QWORD *)(v29 + 40) = v36;
        v37 = objc_msgSend(v27, sel_widthAnchor);
        v38 = objc_msgSend(v34, sel_widthAnchor);
        v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

        *(_QWORD *)(v29 + 48) = v39;
        v40 = objc_msgSend(v27, sel_heightAnchor);
        v41 = objc_msgSend(v34, sel_heightAnchor);
        v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

        *(_QWORD *)(v29 + 56) = v42;
        v54[0] = v29;
        sub_1BC62C890();
        sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
        v43 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        objc_msgSend(v48, sel_activateConstraints_, v43);

        v44 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_iconView];
        *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_iconView] = v27;
        v45 = v27;
        if (v44)
        {
          objc_msgSend(v44, sel_removeFromSuperview);

        }
        v46 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_listContentView];
        *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_listContentView] = v17;
        v47 = v49;
        objc_msgSend(v46, sel_removeFromSuperview);

        (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v52);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);

      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);

    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

id sub_1BC579308()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TopAlignedIconListCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TopAlignedIconListCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC5793A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

void (*sub_1BC5793F4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC5789D4(v2);
  return sub_1BC383B18;
}

uint64_t sub_1BC579438(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

void destroy for TopAlignedIconListItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for TopAlignedIconListItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = (void *)a2[6];
  a1[6] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v6;
  return a1;
}

_QWORD *assignWithCopy for TopAlignedIconListItem(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[6];
  v5 = (void *)a2[6];
  a1[6] = v5;
  v6 = v5;

  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TopAlignedIconListItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for TopAlignedIconListItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TopAlignedIconListItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TopAlignedIconListItem()
{
  return &type metadata for TopAlignedIconListItem;
}

unint64_t sub_1BC5796E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF435F88;
  if (!qword_1EF435F88)
  {
    v1 = type metadata accessor for TopAlignedIconListCell();
    result = MEMORY[0x1BCCF35C4](&unk_1BC648B58, v1);
    atomic_store(result, (unint64_t *)&qword_1EF435F88);
  }
  return result;
}

uint64_t ClinicalSharingOnboardingInformationalViewController.__allocating_init(onboardingSession:flowType:selectedAccount:delegate:)(char *a1, char *a2, void *a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return ClinicalSharingOnboardingInformationalViewController.init(onboardingSession:flowType:selectedAccount:delegate:)(a1, a2, a3, a4);
}

unint64_t HKClinicalSharingOnboardingFlowType.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

void sub_1BC579794()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF4370F0 = v1;
  *(_QWORD *)algn_1EF4370F8 = v3;
}

void sub_1BC579860()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF437100 = v1;
  *(_QWORD *)algn_1EF437108 = v3;
}

void sub_1BC57992C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF437110 = v1;
  *(_QWORD *)algn_1EF437118 = v3;
}

void sub_1BC5799F8()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF437120 = v1;
  *(_QWORD *)algn_1EF437128 = v3;
}

void sub_1BC579AC4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF437130 = v1;
  *(_QWORD *)algn_1EF437138 = v3;
}

void sub_1BC579B90()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF437140 = v1;
  *(_QWORD *)algn_1EF437148 = v3;
}

void sub_1BC579C5C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF437150 = v1;
  *(_QWORD *)algn_1EF437158 = v3;
}

void sub_1BC579D28()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF437160 = v1;
  *(_QWORD *)algn_1EF437168 = v3;
}

void sub_1BC579DF4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF437170 = v1;
  *(_QWORD *)algn_1EF437178 = v3;
}

void sub_1BC579EC0()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF437180 = v1;
  *(_QWORD *)algn_1EF437188 = v3;
}

void sub_1BC579F8C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF437190 = v1;
  *(_QWORD *)algn_1EF437198 = v3;
}

void sub_1BC57A058()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF4371A0 = v1;
  *(_QWORD *)algn_1EF4371A8 = v3;
}

void sub_1BC57A124()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF4371B0 = v1;
  *(_QWORD *)algn_1EF4371B8 = v3;
}

void sub_1BC57A1F0()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF4371C0 = v1;
  *(_QWORD *)algn_1EF4371C8 = v3;
}

void sub_1BC57A2BC()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF4371D0 = v1;
  *(_QWORD *)algn_1EF4371D8 = v3;
}

void sub_1BC57A388()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF4371E0 = v1;
  *(_QWORD *)algn_1EF4371E8 = v3;
}

id sub_1BC57A454()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController____lazy_storage___logoView;
  v2 = *(void **)(v0 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController____lazy_storage___logoView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController____lazy_storage___logoView);
  }
  else
  {
    if (qword_1EF4283A8 != -1)
      swift_once();
    v4 = objc_msgSend(objc_allocWithZone((Class)WDBrandLogoView), sel_initWithSize_, *(double *)&qword_1EF42A0E0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t ClinicalSharingOnboardingInformationalViewController.init(onboardingSession:flowType:selectedAccount:delegate:)(char *a1, char *a2, void *a3, uint64_t a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  char *v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  objc_class *v53;
  id v54;
  char *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  objc_class *v61;
  char *v62;
  uint64_t result;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  objc_super v74;
  objc_super v75;

  v72 = a4;
  v8 = sub_1BC62BB34();
  v66 = *(_QWORD *)(v8 - 8);
  v67 = v8;
  MEMORY[0x1E0C80A78](v8);
  v65 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_accountIconProvider;
  v11 = qword_1ED6A31F0;
  v71 = v4;
  v12 = v4;
  if (v11 != -1)
    swift_once();
  v68 = v10;
  *(_QWORD *)&v71[v10] = qword_1ED6A4498;
  v13 = OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_gatewayProxyToTry;
  *(_QWORD *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_gatewayProxyToTry] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_accountStateCancellable] = 0;
  *(_QWORD *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController____lazy_storage___logoView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession] = a1;
  *(_QWORD *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_flowType] = a2;
  *(_QWORD *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_selectedAccount] = a3;
  v14 = *(void **)&a1[OBJC_IVAR___WDClinicalAccountOnboardingSession_profile];
  v15 = a3;
  v16 = v12;
  v17 = (uint64_t)a3;
  swift_retain();
  v70 = a1;
  v18 = objc_msgSend(v14, sel_onboardingManager);
  v19 = objc_msgSend(v18, sel_getPendingOnboardingGatewayAndClear);

  v20 = *(void **)&v16[v13];
  v21 = v16;
  *(_QWORD *)&v16[v13] = v19;

  swift_unknownObjectWeakAssign();
  v69 = v15;
  if ((unint64_t)(a2 - 1) < 2)
  {
    v22 = v17;
    if (v17)
    {
      v67 = v17;
      v23 = qword_1EF428758;
      v24 = v15;
      v25 = v21;
      if (v23 != -1)
        swift_once();
      sub_1BC3B30F0();
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BC639590;
      v27 = objc_msgSend(v24, sel_title);
      v28 = sub_1BC62C680();
      v30 = v29;

      *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v26 + 64) = sub_1BC3644C0();
      *(_QWORD *)(v26 + 32) = v28;
      *(_QWORD *)(v26 + 40) = v30;
      sub_1BC62C6B0();
      v31 = objc_msgSend(v24, sel_title);
      v32 = sub_1BC62C680();
      v34 = v33;

      swift_beginAccess();
      swift_beginAccess();
      swift_retain();
      v35 = sub_1BC618BBC(v32, v34, 60.0);
      swift_endAccess();
      swift_endAccess();
      swift_release();
      a2 = (char *)objc_msgSend(v35, sel_scaledToTargetSize_, 60.0, 60.0);

      swift_bridgeObjectRelease();
      v22 = v67;
      goto LABEL_24;
    }
    v25 = v21;

    v43 = v65;
    sub_1BC62BAF8();
    v44 = sub_1BC62BB28();
    v45 = sub_1BC62CADC();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_1BC30A000, v44, v45, "ClinicalSharingOnboardingInformationalViewController: there is no selected account.", v46, 2u);
      MEMORY[0x1BCCF36A8](v46, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v67);
    if (qword_1EF428750 != -1)
      swift_once();
    v47 = qword_1ED6A4918;
    swift_bridgeObjectRetain();
    if (v47 != -1)
      swift_once();
    v48 = (id)qword_1ED6A5980;
    v49 = (void *)sub_1BC62C650();
    a2 = (char *)objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v49, v48);

    if (a2)
    {
LABEL_24:
      if (qword_1EF428760 != -1)
        swift_once();
      v40 = *(_QWORD *)algn_1EF437118;
      swift_bridgeObjectRetain();
      if (v22)
        goto LABEL_27;
      goto LABEL_15;
    }
    goto LABEL_35;
  }
  if (!a2)
  {

    v36 = v17;
    if (qword_1EF428750 != -1)
      swift_once();
    v37 = qword_1ED6A4918;
    swift_bridgeObjectRetain();
    if (v37 != -1)
      swift_once();
    v38 = (id)qword_1ED6A5980;
    v39 = (void *)sub_1BC62C650();
    a2 = (char *)objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v39, v38);

    if (a2)
    {
      v25 = v21;
      v40 = 0;
      if (v36)
      {
LABEL_27:
        v50 = v69;
        v51 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
        if (v40)
        {
          v52 = (void *)sub_1BC62C650();
          swift_bridgeObjectRelease();
        }
        else
        {
          v52 = 0;
        }
        v53 = (objc_class *)type metadata accessor for ClinicalSharingOnboardingInformationalViewController();
        v74.receiver = v25;
        v74.super_class = v53;
        v54 = objc_msgSendSuper2(&v74, sel_initWithTitle_detailText_icon_contentLayout_, v51, v52, 0, 2);

        v55 = (char *)v54;
        sub_1BC57C41C();
        v56 = sub_1BC57A454();
        objc_msgSend(v56, sel_setImage_, a2);

        v57 = objc_msgSend(*(id *)(*(_QWORD *)&v55[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession]+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_healthStore);
        v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6768]), sel_initWithHealthStore_, v57);

        v59 = objc_msgSend(objc_allocWithZone((Class)WDClinicalSourcesDataProvider), sel_initWithHealthRecordsStore_, v58);
        v60 = sub_1BC57A454();
        objc_msgSend(v60, sel_fetchBrandable_dataProvider_, v50, v59);

        swift_unknownObjectRelease();
        return (uint64_t)v55;
      }
LABEL_15:
      v41 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      if (v40)
      {
        v42 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
      }
      else
      {
        v42 = 0;
      }
      v61 = (objc_class *)type metadata accessor for ClinicalSharingOnboardingInformationalViewController();
      v75.receiver = v25;
      v75.super_class = v61;
      v62 = a2;
      v55 = (char *)objc_msgSendSuper2(&v75, sel_initWithTitle_detailText_icon_contentLayout_, v41, v42, v62, 2);

      swift_unknownObjectRelease();
      return (uint64_t)v55;
    }
    __break(1u);
LABEL_35:
    __break(1u);
  }
  v73 = a2;
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

id ClinicalSharingOnboardingInformationalViewController.__deallocating_deinit()
{
  char *v0;
  objc_super v2;

  if (*(_QWORD *)&v0[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_accountStateCancellable])
  {
    swift_retain();
    sub_1BC62BEAC();
    swift_release();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingInformationalViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC57AF1C()
{
  char *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  unint64_t *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t result;
  void *v67;
  uint64_t v68;
  _QWORD aBlock[6];
  objc_super v70;

  v70.receiver = v0;
  v70.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingInformationalViewController();
  objc_msgSendSuper2(&v70, sel_viewDidLoad);
  v1 = objc_msgSend((id)objc_opt_self(), sel_boldButton);
  v2 = sub_1BC62C680();
  v4 = v3;
  v5 = *(_QWORD *)&v0[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_flowType];
  v6 = &qword_1EF437000;
  v68 = v2;
  if (v5 != 2)
  {
    v67 = v3;
    if (v5 == 1)
    {
      if (qword_1EF428768 != -1)
        swift_once();
      v7 = (void *)sub_1BC62C650();
      if (qword_1EF428770 != -1)
        swift_once();
      v8 = (void *)sub_1BC62C650();
      v9 = (void *)sub_1BC62C650();
      v10 = (void *)objc_opt_self();
      v11 = objc_msgSend(v10, sel__systemImageNamed_, v9);

      if (!v11)
      {
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v7, v8, v11);

      if (qword_1EF428788 != -1)
        swift_once();
      v12 = (void *)sub_1BC62C650();
      if (qword_1EF428790 != -1)
        swift_once();
      v13 = (void *)sub_1BC62C650();
      v14 = (void *)sub_1BC62C650();
      v15 = objc_msgSend(v10, sel__systemImageNamed_, v14);

      if (!v15)
        goto LABEL_63;
      objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v12, v13, v15);

      if (qword_1EF4287C0 != -1)
        swift_once();
      v16 = (void *)sub_1BC62C650();
      objc_msgSend(v1, sel_setTitle_forState_, v16, 0);

      objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v0, sel_nextButtonTappedForAccountLogin_, 64);
      v17 = objc_msgSend(v0, sel_buttonTray);
      objc_msgSend(v17, sel_addButton_, v1);

      sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1BC6395A0;
      *(_QWORD *)(v18 + 32) = v68;
      *(_QWORD *)(v18 + 40) = v67;
      strcpy((char *)(v18 + 48), "SetupSHaring");
      *(_BYTE *)(v18 + 61) = 0;
      *(_WORD *)(v18 + 62) = -5120;
      v4 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v19 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (!v19)
      {
        __break(1u);
        goto LABEL_17;
      }
    }
    else
    {
      if (v5)
      {
LABEL_70:
        result = sub_1BC62D5C8();
        __break(1u);
        return result;
      }
      if (qword_1EF428778 != -1)
        swift_once();
      v39 = (void *)sub_1BC62C650();
      if (qword_1EF428780 != -1)
        swift_once();
      v40 = (void *)sub_1BC62C650();
      v41 = (void *)sub_1BC62C650();
      v42 = (void *)objc_opt_self();
      v43 = objc_msgSend(v42, sel__systemImageNamed_, v41);

      if (!v43)
        goto LABEL_66;
      objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v39, v40, v43);

      if (qword_1EF428798 != -1)
        swift_once();
      v44 = (void *)sub_1BC62C650();
      if (qword_1EF4287A0 != -1)
        swift_once();
      v45 = (void *)sub_1BC62C650();
      v46 = (void *)sub_1BC62C650();
      v47 = objc_msgSend(v42, sel__systemImageNamed_, v46);

      if (!v47)
        goto LABEL_67;
      objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v44, v45, v47);

      if (qword_1EF4287A8 != -1)
        swift_once();
      v48 = (void *)sub_1BC62C650();
      if (qword_1EF4287B0 != -1)
        swift_once();
      v49 = (void *)sub_1BC62C650();
      v50 = (void *)sub_1BC62C650();
      v51 = objc_msgSend(v42, sel__systemImageNamed_, v50);

      if (!v51)
        goto LABEL_68;
      objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v48, v49, v51);

      v6 = &qword_1EF437000;
      if (qword_1EF4287B8 != -1)
        swift_once();
      v52 = (void *)sub_1BC62C650();
      objc_msgSend(v1, sel_setTitle_forState_, v52, 0);

      objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v0, sel_nextButtonTappedForProviderSearch_, 64);
      v53 = objc_msgSend(v0, sel_buttonTray);
      objc_msgSend(v53, sel_addButton_, v1);

      sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_1BC6395A0;
      *(_QWORD *)(v54 + 32) = v68;
      *(_QWORD *)(v54 + 40) = v67;
      *(_QWORD *)(v54 + 48) = 0x6972616853776F48;
      *(_QWORD *)(v54 + 56) = 0xEF736B726F57676ELL;
      v55 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v19 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (!v19)
        goto LABEL_69;
    }
    v34 = sub_1BC62C680();
    v36 = v56;
    goto LABEL_54;
  }
LABEL_17:
  if (qword_1EF428768 != -1)
    swift_once();
  v20 = (void *)sub_1BC62C650();
  if (qword_1EF428770 != -1)
    swift_once();
  v21 = (void *)sub_1BC62C650();
  v22 = (void *)sub_1BC62C650();
  v23 = (void *)objc_opt_self();
  v24 = objc_msgSend(v23, sel__systemImageNamed_, v22);

  if (!v24)
    goto LABEL_62;
  objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v20, v21, v24);

  if (qword_1EF428788 != -1)
    swift_once();
  v25 = (void *)sub_1BC62C650();
  if (qword_1EF428790 != -1)
    swift_once();
  v26 = (void *)sub_1BC62C650();
  v27 = (void *)sub_1BC62C650();
  v28 = objc_msgSend(v23, sel__systemImageNamed_, v27);

  if (!v28)
    goto LABEL_64;
  objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v25, v26, v28);

  if (qword_1EF4287C0 != -1)
    swift_once();
  v29 = (void *)sub_1BC62C650();
  objc_msgSend(v1, sel_setTitle_forState_, v29, 0);

  objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v0, sel_nextButtonTappedForAuthorizationSelection_, 64);
  v30 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v30, sel_addButton_, v1);

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v31 + 32) = v68;
  *(_QWORD *)(v31 + 40) = v4;
  strcpy((char *)(v31 + 48), "SetupSHaring");
  *(_BYTE *)(v31 + 61) = 0;
  *(_WORD *)(v31 + 62) = -5120;
  v32 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v33 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v33)
    goto LABEL_65;
  v34 = sub_1BC62C680();
  v36 = v35;

  if ((*(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession]
                 + OBJC_IVAR___WDClinicalAccountOnboardingSession_options) & 1) != 0)
  {
    v6 = &qword_1EF437000;
    goto LABEL_55;
  }
  v37 = objc_msgSend((id)objc_opt_self(), sel_linkButton);
  if (qword_1EF4287C8 != -1)
    swift_once();
  v38 = (void *)sub_1BC62C650();
  objc_msgSend(v37, sel_setTitle_forState_, v38, 0);

  objc_msgSend(v37, sel_addTarget_action_forControlEvents_, v0, sel_skipButtonTappedForAuthorizationSelection_, 64);
  v19 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v19, sel_addButton_, v37);

  v6 = &qword_1EF437000;
LABEL_54:

LABEL_55:
  v57 = *(_QWORD *)&v0[v6[67]];
  v58 = OBJC_IVAR___WDClinicalAccountOnboardingSession_context;
  if (*(_QWORD *)(v57 + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) != 2)
  {
    v59 = objc_msgSend(v0, sel_navigationItem);
    v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelButtonTapped_);
    objc_msgSend(v59, sel_setRightBarButtonItem_, v60);

  }
  v61 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1EF428660 != -1)
    swift_once();
  objc_msgSend(v61, sel_addObserver_selector_name_object_, v0, sel_didReceiveClinicalAccountOnboardingCompletionWithNotification_, qword_1EF4335D0, 0, v67);

  sub_1BC57BD4C();
  v62 = *(void **)(v57 + OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient);
  v63 = (void *)sub_1BC62C650();
  sub_1BC408EF4(*(_QWORD *)(v57 + v58));
  v64 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3EFECC;
  aBlock[3] = &block_descriptor_59;
  v65 = _Block_copy(aBlock);
  objc_msgSend(v62, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v63, v64, v65);
  _Block_release(v65);

  sub_1BC57C0F8(v1, v34, v36);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC57BD4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - v3;
  sub_1BC3F44A0();
  v19 = *(_QWORD *)(v5 - 8);
  v20 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A4878 != -1)
    swift_once();
  v8 = qword_1ED6A54F0;
  v9 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession)+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_healthStore);
  v10 = objc_msgSend(v9, sel_profileIdentifier);

  v21 = *(id *)(v8 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v11);
  *(&v19 - 2) = v8;
  *(&v19 - 1) = (uint64_t)v10;
  sub_1BC62AA6C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  type metadata accessor for AccountStateProvider();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v12, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();

  swift_release();
  v13 = *(_QWORD *)(v22 + 24);
  swift_retain();
  swift_release();
  v22 = v13;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v21 = (id)sub_1BC62CC74();
  v14 = sub_1BC62CC38();
  v15 = MEMORY[0x1E0DEF868];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_1BC3583FC();
  sub_1BC347F0C((unint64_t *)&unk_1EF429548, (uint64_t (*)(uint64_t))sub_1BC3583FC, MEMORY[0x1E0C95F48]);
  sub_1BC3ABB20();
  sub_1BC62C080();
  sub_1BC358494((uint64_t)v4, (uint64_t)&qword_1ED6A4DF0, (uint64_t)v15, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC347F0C((unint64_t *)&unk_1EF429558, (uint64_t (*)(uint64_t))sub_1BC3F44A0, MEMORY[0x1E0C95CB8]);
  v16 = v20;
  v17 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v16);
  *(_QWORD *)(v1 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_accountStateCancellable) = v17;
  return swift_release();
}

void sub_1BC57C0F8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29[2];
  id v30;

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  v29[1] = (id)4;
  *(_OWORD *)(v7 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a3;
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(a1, sel_currentTitle);
  v9 = v8;
  if (v8)
  {
    v10 = objc_msgSend(v8, sel_removeSpecialCharactersAndWhiteSpaces);

    v9 = (void *)sub_1BC62C680();
    v12 = v11;

  }
  else
  {
    v12 = 0xE000000000000000;
  }
  *(_QWORD *)(v7 + 48) = v9;
  *(_QWORD *)(v7 + 56) = v12;
  v13 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v14 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(a1, sel_setAccessibilityIdentifier_, v14);
  v15 = objc_msgSend(v3, sel_navigationItem);
  v16 = objc_msgSend(v15, sel_rightBarButtonItem);

  if (v16)
  {
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v17 + 32) = a2;
    *(_QWORD *)(v17 + 40) = a3;
    *(_QWORD *)(v17 + 48) = 0x6C65636E6143;
    *(_QWORD *)(v17 + 56) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    v18 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v19 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v16, sel_setAccessibilityIdentifier_, v19);
  }
  v20 = objc_msgSend(v3, sel_headerView, 2);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = *(_OWORD *)v29;
  *(_QWORD *)(v21 + 32) = a2;
  *(_QWORD *)(v21 + 40) = a3;
  swift_bridgeObjectRetain();
  v22 = objc_msgSend(v3, sel_headerView);
  v23 = objc_msgSend(v22, sel_title);

  if (!v23)
  {
    sub_1BC62C680();
    v23 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  v24 = objc_msgSend(v23, sel_removeSpecialCharactersAndWhiteSpaces);

  v25 = sub_1BC62C680();
  v27 = v26;

  *(_QWORD *)(v21 + 48) = v25;
  *(_QWORD *)(v21 + 56) = v27;
  v28 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v30 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v20, sel_setAccessibilityIdentifier_, v30);
}

void sub_1BC57C41C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v1 = objc_msgSend(v0, sel_headerView);
  v2 = objc_msgSend(v1, sel_customIconContainerView);

  if (v2)
  {
    objc_msgSend(v2, sel_setClipsToBounds_, 0);
    v3 = sub_1BC57A454();
    objc_msgSend(v2, sel_addSubview_, v3);

    v4 = sub_1BC57A454();
    v5 = objc_msgSend(v4, sel_widthAnchor);

    if (qword_1EF4283A8 != -1)
      swift_once();
    v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, *(double *)&qword_1EF42A0E0);

    objc_msgSend(v6, sel_setActive_, 1);
    v7 = sub_1BC57A454();
    v8 = objc_msgSend(v7, sel_heightAnchor);

    v9 = objc_msgSend(v8, sel_constraintEqualToConstant_, *(double *)&qword_1EF42A0E0);
    objc_msgSend(v9, sel_setActive_, 1);

    v10 = sub_1BC57A454();
    v11 = objc_msgSend(v10, sel_centerXAnchor);

    v12 = objc_msgSend(v2, sel_centerXAnchor);
    v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

    objc_msgSend(v13, sel_setActive_, 1);
    v14 = sub_1BC57A454();
    v15 = objc_msgSend(v14, sel_centerYAnchor);

    v16 = objc_msgSend(v2, sel_centerYAnchor);
    v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

    objc_msgSend(v17, sel_setActive_, 1);
  }
}

void sub_1BC57C6B4()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD aBlock[6];

  v1 = objc_msgSend(v0, sel_navigationController);
  if (v1)
  {
    v2 = v1;
    objc_opt_self();
    v3 = swift_dynamicCastObjCClass();
    if (v3)
    {
      v4 = (void *)v3;
      v5 = *(_QWORD *)&v0[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession];
      v6 = objc_msgSend(objc_allocWithZone((Class)WDClinicalOnboardingViewController), sel_initWithProfile_gatewayProxy_, *(_QWORD *)(v5 + OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), *(_QWORD *)&v0[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_gatewayProxyToTry]);
      objc_msgSend(v6, sel_setShowOnlyClinicalSharingCapableProviders_, 1);
      objc_msgSend(v4, sel_pushViewController_animated_, v6, 1);
      v7 = *(void **)(v5 + OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient);
      v8 = (void *)sub_1BC62C650();
      sub_1BC408EF4(*(_QWORD *)(v5 + OBJC_IVAR___WDClinicalAccountOnboardingSession_context));
      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC3EFECC;
      aBlock[3] = &block_descriptor_22_2;
      v10 = _Block_copy(aBlock);
      objc_msgSend(v7, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v8, v9, v10);
      _Block_release(v10);

      return;
    }

  }
  sub_1BC62D1D8();
  sub_1BC62C764();
  objc_msgSend(v0, sel_navigationController);
  sub_1BC550740();
  sub_1BC62C6E0();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62D394();
  __break(1u);
}

void sub_1BC57C988()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - v3;
  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - v13;
  v15 = *(void **)&v1[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_selectedAccount];
  if (v15)
  {
    v16 = v15;
    if (objc_msgSend(v16, sel_needsLoginToEnableClinicalSharing))
    {
      sub_1BC62BAF8();
      v17 = sub_1BC62BB28();
      v18 = sub_1BC62CADC();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_1BC30A000, v17, v18, "ClinicalSharingOnboardingInformationalViewController: account needs login to enable clinical sharing", v19, 2u);
        MEMORY[0x1BCCF36A8](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
      v20 = sub_1BC62C95C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
      sub_1BC62C944();
      v21 = v16;
      v22 = v1;
      v23 = sub_1BC62C938();
      v24 = (_QWORD *)swift_allocObject();
      v25 = MEMORY[0x1E0DF06E8];
      v24[2] = v23;
      v24[3] = v25;
      v24[4] = v22;
      v24[5] = v21;
      sub_1BC5C2784((uint64_t)v4, (uint64_t)&unk_1EF437268, (uint64_t)v24);
      swift_release();

    }
    else
    {
      sub_1BC62BAF8();
      v29 = sub_1BC62BB28();
      v30 = sub_1BC62CADC();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_1BC30A000, v29, v30, "ClinicalSharingOnboardingInformationalViewController: account is logged in and has necessary scopes, proceeding to data selection", v31, 2u);
        MEMORY[0x1BCCF36A8](v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      sub_1BC57CF94(v16, 1, 0);

    }
  }
  else
  {
    sub_1BC62BAF8();
    v26 = sub_1BC62BB28();
    v27 = sub_1BC62CADC();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1BC30A000, v26, v27, "ClinicalSharingOnboardingInformationalViewController: there is no selected account, starting provider search", v28, 2u);
      MEMORY[0x1BCCF36A8](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1BC57C6B4();
  }
}

uint64_t sub_1BC57CCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;

  v5[2] = sub_1BC62C944();
  v5[3] = sub_1BC62C938();
  v7 = (_QWORD *)swift_task_alloc();
  v5[4] = v7;
  *v7 = v5;
  v7[1] = sub_1BC3917E8;
  return sub_1BC57CD60(a5);
}

uint64_t sub_1BC57CD60(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  sub_1BC62C944();
  v2[4] = sub_1BC62C938();
  v2[5] = sub_1BC62C908();
  v2[6] = v3;
  return swift_task_switch();
}

uint64_t sub_1BC57CDCC()
{
  uint64_t *v0;
  id v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1EF428670 != -1)
    swift_once();
  v2 = v0[3];
  objc_msgSend(v1, sel_addObserver_selector_name_object_, v2, sel_didReceiveOAuthCompletionWithNotification_, qword_1EF4335E0, 0);

  v3 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession)
                + OBJC_IVAR___WDClinicalAccountOnboardingSession_profile);
  type metadata accessor for ClinicalAccountManager();
  v4 = (_QWORD *)swift_allocObject();
  v0[7] = (uint64_t)v4;
  v5 = MEMORY[0x1E0DEE9E8];
  v4[5] = 0;
  v4[6] = 0;
  v4[4] = v5;
  v4[2] = v3;
  v4[3] = objc_msgSend(v3, sel_clinicalAccountStore);
  v6 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = sub_1BC57CF0C;
  return ClinicalAccountManager.startRelogin(to:from:)(v0[2], v0[3]);
}

uint64_t sub_1BC57CF0C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC57CF58()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BC57CF94(void *a1, char a2, char a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  void *v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_1BC62C4D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v11 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    v13 = *(void **)&v4[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession];
    v14 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingDataTypeSelectionViewController(0));
    v15 = v13;
    v16 = a1;
    v17 = sub_1BC3658FC(v15, v16);

    if ((a3 & 1) != 0)
    {
      v18 = objc_msgSend(v17, sel_navigationItem);
      objc_msgSend(v18, sel_setHidesBackButton_animated_, 1, 0);

    }
    v19 = objc_msgSend(v4, sel_navigationController);
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v19, sel_pushViewController_animated_, v17, a2 & 1);

    }
    v21 = *(void **)&v15[OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient];
    v22 = (void *)sub_1BC62C650();
    sub_1BC408EF4(*(_QWORD *)&v15[OBJC_IVAR___WDClinicalAccountOnboardingSession_context]);
    v23 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    aBlock[4] = nullsub_1;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC3EFECC;
    aBlock[3] = &block_descriptor_3_3;
    v24 = _Block_copy(aBlock);
    objc_msgSend(v21, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v22, v23, v24);
    _Block_release(v24);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC57D204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;

  v1 = v0;
  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_selectedAccount);
  if (v6)
  {
    v11 = v6;
    sub_1BC57CF94(v11, 1, 0);

  }
  else
  {
    sub_1BC62BAF8();
    v7 = sub_1BC62BB28();
    v8 = sub_1BC62CADC();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BC30A000, v7, v8, "ClinicalSharingOnboardingInformationalViewController: there is no selected account.", v9, 2u);
      MEMORY[0x1BCCF36A8](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1BC57C6B4();
  }
}

void sub_1BC57D358()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  NSObject *v29;
  uint64_t v30;
  uint8_t *v31;
  id v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  char *v40;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - v6;
  v8 = sub_1BC62BB34();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - v13;
  v15 = *(void **)&v0[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_selectedAccount];
  if (v15)
  {
    v39 = v1;
    v40 = v0;
    objc_opt_self();
    v16 = swift_dynamicCastObjCClass();
    v17 = v15;
    if (v16)
    {
      sub_1BC62BAF8();
      v18 = sub_1BC62BB28();
      v19 = sub_1BC62CADC();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_1BC30A000, v18, v19, "ClinicalSharingOnboardingInformationalViewController: skipping clinical sharing for a new account, persisting account and finishing", v20, 2u);
        MEMORY[0x1BCCF36A8](v20, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      v21 = v40;
      v22 = *(void **)&v40[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession];
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v21;
      v24 = sub_1BC62C95C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v7, 1, 1, v24);
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = 0;
      *(_QWORD *)(v25 + 24) = 0;
      *(_QWORD *)(v25 + 32) = v22;
      *(_QWORD *)(v25 + 40) = v16;
      *(_BYTE *)(v25 + 48) = 0;
      *(_QWORD *)(v25 + 56) = sub_1BC57F30C;
      *(_QWORD *)(v25 + 64) = v23;
      v26 = v17;
      v27 = v21;
      v28 = v22;
      swift_retain();
      sub_1BC5C2784((uint64_t)v7, (uint64_t)&unk_1EF436AB8, v25);

      swift_release();
      swift_release();
    }
    else
    {
      sub_1BC62BAF8();
      v29 = sub_1BC62BB28();
      v30 = sub_1BC62CADC();
      if (os_log_type_enabled(v29, (os_log_type_t)v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_1BC30A000, v29, (os_log_type_t)v30, "ClinicalSharingOnboardingInformationalViewController: skipping clinical sharing for existing account, triggering ingestion and finishing", v31, 2u);
        MEMORY[0x1BCCF36A8](v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v32 = objc_msgSend(*(id *)(*(_QWORD *)&v40[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession]+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_ingestionStore);
      v33 = (void *)sub_1BC62C650();
      sub_1BC357158(0, &qword_1EF436B10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v34 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1BC639590;
      v36 = v35 + v34;
      v37 = objc_msgSend(v17, sel_identifier);
      sub_1BC62A79C();

      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v36, v4, v39);
      v38 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      objc_msgSend(v32, sel_ingestHealthRecordsWithOptions_reason_accountIdentifiers_completion_, 0, v33, v38, 0);

      sub_1BC60D5C0();
      objc_msgSend(v40, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
  }
}

uint64_t sub_1BC57D7D4(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v6 = sub_1BC62C47C();
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC62C4AC();
  v9 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v12 = (void *)sub_1BC62CC74();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a3;
  v13[4] = a2;
  aBlock[4] = sub_1BC57F384;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_19_0;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  v16 = a3;
  v17 = a2;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v20);
}

void sub_1BC57D9F8(uint64_t a1, void *a2, id a3)
{
  id v5;
  id v6;
  id v7;

  if (a1)
  {
    sub_1BC60D5C0();
    objc_msgSend(a2, sel_dismissViewControllerAnimated_completion_, 1, 0);
    return;
  }
  if (qword_1ED6A31B0 != -1)
  {
    swift_once();
    if (a3)
      goto LABEL_5;
LABEL_7:
    v5 = objc_msgSend((id)objc_opt_self(), sel_hk_error_userInfo_, 0, 0);
    goto LABEL_8;
  }
  if (!a3)
    goto LABEL_7;
LABEL_5:
  v5 = a3;
LABEL_8:
  v6 = a3;
  v7 = sub_1BC5556FC(0, v5);

  objc_msgSend(a2, sel_presentViewController_animated_completion_, v7, 1, 0);
}

id ClinicalSharingOnboardingInformationalViewController.__allocating_init(title:detailText:symbolName:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  objc_class *v8;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v8 = v7;
  v12 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    v13 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v14 = 0;
    goto LABEL_6;
  }
  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
LABEL_6:
  v15 = objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_contentLayout_, v12, v13, v14, a7);

  return v15;
}

void ClinicalSharingOnboardingInformationalViewController.init(title:detailText:symbolName:contentLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ClinicalSharingOnboardingInformationalViewController.__allocating_init(title:detailText:icon:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  objc_class *v6;
  objc_class *v7;
  void *v11;
  void *v12;
  id v13;

  v7 = v6;
  v11 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v12 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_contentLayout_, v11, v12, a5, a6);

  return v13;
}

void ClinicalSharingOnboardingInformationalViewController.init(title:detailText:icon:contentLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC57DDC4()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = v0;
  if (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
  {
    sub_1BC62D1D8();
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    sub_1BC62D610();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v2 = (void *)sub_1BC62C650();
    v3 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v2, v3, 1);

    v5 = (void *)sub_1BC62C650();
    v6 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v5, 0, 0);

    objc_msgSend(v4, sel_addAction_, v6);
    objc_msgSend(v1, sel_presentViewController_animated_completion_, v4, 1, 0);

  }
}

uint64_t sub_1BC57DF78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t (*v18)(uint64_t);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v2 = sub_1BC62C47C();
  v23 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62C4AC();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62A364();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v12 = (void *)sub_1BC62CC74();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  v15 = v20;
  *(_QWORD *)(v14 + 16) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, v11, v8);
  aBlock[4] = sub_1BC57F2A8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_6_6;
  v16 = _Block_copy(aBlock);
  v17 = v15;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v7, v4, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v7, v22);
}

void sub_1BC57E1FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint8_t *v26;
  uint8_t *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  unsigned int v47;
  _QWORD v48[2];
  uint64_t v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  id v54[5];
  __int128 v55;
  __int128 v56;

  v1 = v0;
  v51 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v4 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v48 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v48 - v9;
  v11 = sub_1BC62C4D0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (_QWORD *)((char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v14 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v15 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v15 = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (qword_1EF428670 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  objc_msgSend((id)v15, sel_removeObserver_name_object_, v1, qword_1EF4335E0, 0);

  v16 = sub_1BC62A358();
  if (!v16)
  {
    v55 = 0u;
    v56 = 0u;
LABEL_13:
    sub_1BC358494((uint64_t)&v55, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
    goto LABEL_14;
  }
  v17 = v16;
  v52 = 0xD00000000000002BLL;
  v53 = 0x80000001BC653DB0;
  sub_1BC62D184();
  if (*(_QWORD *)(v17 + 16) && (v18 = sub_1BC559254((uint64_t)v54), (v19 & 1) != 0))
  {
    sub_1BC375540(*(_QWORD *)(v17 + 56) + 32 * v18, (uint64_t)&v55);
  }
  else
  {
    v55 = 0u;
    v56 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1BC3DDAC0((uint64_t)v54);
  if (!*((_QWORD *)&v56 + 1))
    goto LABEL_13;
  sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v20 = v54[0];
    sub_1BC62BAF8();
    v21 = v20;
    v22 = v20;
    v23 = sub_1BC62BB28();
    v24 = sub_1BC62CAC4();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v50 = v25;
      v26 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      *(_QWORD *)&v55 = v49;
      *(_DWORD *)v26 = 136315138;
      v48[1] = v26 + 4;
      v27 = v26;
      v54[0] = v20;
      v28 = v20;
      v29 = v20;
      sub_1BC62D5D4();
      v30 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v31 = sub_1BC62C6E0();
      v33 = v32;

      v54[0] = (id)sub_1BC4991F0(v31, v33, (uint64_t *)&v55);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v23, (os_log_type_t)v50, "ClinicalSharingOnboardingInformationalViewController: error logging in: %s", v27, 0xCu);
      v34 = v49;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v34, -1, -1);
      MEMORY[0x1BCCF36A8](v27, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v51);
    v46 = (void *)sub_1BC62A550();
    v47 = objc_msgSend(v46, sel_hk_isUserCanceledError);

    if (!v47)
      sub_1BC57DDC4();

    return;
  }
LABEL_14:
  v35 = sub_1BC62A358();
  if (!v35)
  {
    v55 = 0u;
    v56 = 0u;
    v39 = v51;
LABEL_25:
    sub_1BC358494((uint64_t)&v55, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
    goto LABEL_26;
  }
  v36 = v35;
  v52 = 0xD00000000000002DLL;
  v53 = 0x80000001BC653D50;
  sub_1BC62D184();
  if (*(_QWORD *)(v36 + 16) && (v37 = sub_1BC559254((uint64_t)v54), (v38 & 1) != 0))
  {
    sub_1BC375540(*(_QWORD *)(v36 + 56) + 32 * v37, (uint64_t)&v55);
  }
  else
  {
    v55 = 0u;
    v56 = 0u;
  }
  v39 = v51;
  swift_bridgeObjectRelease();
  sub_1BC3DDAC0((uint64_t)v54);
  if (!*((_QWORD *)&v56 + 1))
    goto LABEL_25;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
  if ((swift_dynamicCast() & 1) != 0)
  {

    sub_1BC62BAF8();
    v40 = sub_1BC62BB28();
    v41 = sub_1BC62CADC();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_1BC30A000, v40, v41, "ClinicalSharingOnboardingInformationalViewController: account logged in again, OAuth navigation controller will proceed to data selection", v42, 2u);
      MEMORY[0x1BCCF36A8](v42, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v39);
    return;
  }
LABEL_26:
  sub_1BC62BAF8();
  v43 = sub_1BC62BB28();
  v44 = sub_1BC62CAC4();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_1BC30A000, v43, v44, "ClinicalSharingOnboardingInformationalViewController: login completed with neither error nor account", v45, 2u);
    MEMORY[0x1BCCF36A8](v45, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v39);
}

void sub_1BC57E8D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  void *v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  void *v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint8_t *v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  void *v53;
  unsigned int v54;
  _QWORD v55[2];
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63[5];
  __int128 v64;
  __int128 v65;

  v1 = v0;
  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62BB34();
  v59 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v55 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v55 - v13;
  v15 = sub_1BC62A358();
  if (!v15)
  {
    v64 = 0u;
    v65 = 0u;
LABEL_11:
    sub_1BC358494((uint64_t)&v64, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
    goto LABEL_13;
  }
  v16 = v15;
  v61 = 0xD00000000000003FLL;
  v62 = 0x80000001BC65E6F0;
  sub_1BC62D184();
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_1BC559254((uint64_t)v63), (v18 & 1) != 0))
  {
    sub_1BC375540(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v64);
  }
  else
  {
    v64 = 0u;
    v65 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1BC3DDAC0((uint64_t)v63);
  if (!*((_QWORD *)&v65 + 1))
    goto LABEL_11;
  v58 = v1;
  sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v19 = (void *)v63[0];
    sub_1BC62BAF8();
    v20 = v19;
    v21 = v19;
    v22 = sub_1BC62BB28();
    v23 = sub_1BC62CAC4();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      *(_QWORD *)&v64 = v25;
      *(_DWORD *)v24 = 136315138;
      v57 = v24 + 4;
      v63[0] = (uint64_t)v19;
      v26 = v19;
      v27 = v19;
      sub_1BC62D5D4();
      v28 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v29 = sub_1BC62C6E0();
      v31 = v30;

      v63[0] = sub_1BC4991F0(v29, v31, (uint64_t *)&v64);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v22, v23, "ClinicalSharingOnboardingInformationalViewController: didReceiveClinicalAccountOnboardingCompletion with error %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v25, -1, -1);
      MEMORY[0x1BCCF36A8](v24, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v60);
    v53 = (void *)sub_1BC62A550();
    v54 = objc_msgSend(v53, sel_hk_isUserCanceledError);

    if (!v54)
      sub_1BC57DDC4();

    return;
  }
  v1 = v58;
LABEL_13:
  v32 = sub_1BC62A358();
  if (!v32)
  {
    v64 = 0u;
    v65 = 0u;
LABEL_23:
    sub_1BC358494((uint64_t)&v64, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
    goto LABEL_24;
  }
  v33 = v32;
  v61 = 0xD000000000000041;
  v62 = 0x80000001BC65E6A0;
  sub_1BC62D184();
  if (*(_QWORD *)(v33 + 16) && (v34 = sub_1BC559254((uint64_t)v63), (v35 & 1) != 0))
  {
    sub_1BC375540(*(_QWORD *)(v33 + 56) + 32 * v34, (uint64_t)&v64);
  }
  else
  {
    v64 = 0u;
    v65 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1BC3DDAC0((uint64_t)v63);
  if (!*((_QWORD *)&v65 + 1))
    goto LABEL_23;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v36 = (void *)v63[0];
    sub_1BC62BAF8();
    v37 = v36;
    v38 = sub_1BC62BB28();
    v39 = sub_1BC62CADC();
    v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      LODWORD(v57) = v40;
      v41 = swift_slowAlloc();
      v58 = v1;
      v42 = (uint8_t *)v41;
      v56 = swift_slowAlloc();
      v63[0] = v56;
      *(_DWORD *)v42 = 136315138;
      v55[1] = v42 + 4;
      v43 = objc_msgSend(v37, sel_identifier);
      sub_1BC62A79C();

      sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v44 = sub_1BC62D52C();
      v46 = v45;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      *(_QWORD *)&v64 = sub_1BC4991F0(v44, v46, v63);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v38, (os_log_type_t)v57, "ClinicalSharingOnboardingInformationalViewController: onboarded account %s successfully", v42, 0xCu);
      v47 = v56;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v47, -1, -1);
      MEMORY[0x1BCCF36A8](v42, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v11, v60);
    sub_1BC57CF94(v37, 0, 1);

    return;
  }
LABEL_24:
  v49 = v59;
  v48 = v60;
  sub_1BC62BAF8();
  v50 = sub_1BC62BB28();
  v51 = sub_1BC62CAC4();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v52 = 0;
    _os_log_impl(&dword_1BC30A000, v50, v51, "ClinicalSharingOnboardingInformationalViewController: onboarding completed with neither error nor account", v52, 2u);
    MEMORY[0x1BCCF36A8](v52, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v48);
}

uint64_t sub_1BC57F01C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  v6 = sub_1BC62A364();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A334();
  v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1BC57F0BC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCF37A4](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = MEMORY[0x1BCCF37A4](v6 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_delegate);
    if (v8)
    {
      v9 = (void *)v8;
      if (v2 && v4 == 1)
      {
        v10 = v2;
        objc_msgSend(v9, sel_didCompleteOnboardingFor_, v3);

        swift_unknownObjectRelease();
        sub_1BC3584E4(v2, v3);
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {

    }
  }
}

uint64_t type metadata accessor for ClinicalSharingOnboardingInformationalViewController()
{
  return objc_opt_self();
}

uint64_t block_copy_helper_57(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_57()
{
  return swift_release();
}

unint64_t sub_1BC57F1CC()
{
  unint64_t result;

  result = qword_1EF437230;
  if (!qword_1EF437230)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for HKClinicalSharingOnboardingFlowType, &type metadata for HKClinicalSharingOnboardingFlowType);
    atomic_store(result, (unint64_t *)&qword_1EF437230);
  }
  return result;
}

ValueMetadata *type metadata accessor for HKClinicalSharingOnboardingFlowType()
{
  return &type metadata for HKClinicalSharingOnboardingFlowType;
}

uint64_t method lookup function for ClinicalSharingOnboardingInformationalViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClinicalSharingOnboardingInformationalViewController.__allocating_init(onboardingSession:flowType:selectedAccount:delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t sub_1BC57F234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A364();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1BC57F2A8()
{
  sub_1BC62A364();
  sub_1BC57E1FC();
}

uint64_t sub_1BC57F2E8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC57F30C(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1BC57D7D4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1BC57F314()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC57F350()
{
  id *v0;

  return swift_deallocObject();
}

void sub_1BC57F384()
{
  uint64_t v0;

  sub_1BC57D9F8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_1BC57F390()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC57F3C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC3781C0;
  return sub_1BC57CCEC(a1, v4, v5, v7, v6);
}

uint64_t sub_1BC57F43C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC57F460(uint64_t a1)
{
  uint64_t v1;

  sub_1BC57F0BC(a1, v1);
}

id sub_1BC57F488()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AD0]);
    objc_msgSend(v4, sel_setFont_, v5);

    objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC57F57C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___subtitleLabel);
  }
  else
  {
    v4 = sub_1BC57F5D8();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC57F5D8()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v0, sel_setFont_, v1);

  v2 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

uint64_t sub_1BC57F6CC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleHorizontalConstraints;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleHorizontalConstraints])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleHorizontalConstraints];
  }
  else
  {
    v3 = v0;
    sub_1BC34D844();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BC639570;
    v5 = sub_1BC57F488();
    v6 = objc_msgSend(v5, sel_leadingAnchor);

    v7 = objc_msgSend(v3, sel_leadingAnchor);
    v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

    *(_QWORD *)(v4 + 32) = v8;
    v9 = objc_msgSend(v3, sel_trailingAnchor);
    v10 = sub_1BC57F488();
    v11 = objc_msgSend(v10, sel_trailingAnchor);

    v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
    *(_QWORD *)(v4 + 40) = v12;
    sub_1BC62C890();
    v2 = v4;
    *(_QWORD *)&v3[v1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

id sub_1BC57F844(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  objc_super v41;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleHorizontalConstraints] = 0;
  v41.receiver = v4;
  v41.super_class = (Class)type metadata accessor for StackedTwoLabelView();
  v9 = objc_msgSendSuper2(&v41, sel_initWithFrame_, a1, a2, a3, a4);
  v10 = sub_1BC57F488();
  objc_msgSend(v9, sel_addSubview_, v10);

  v11 = v9;
  v12 = sub_1BC57F57C();
  objc_msgSend(v11, sel_addSubview_, v12);

  v13 = (void *)objc_opt_self();
  sub_1BC57F6CC();
  sub_1BC34D89C();
  v14 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_activateConstraints_, v14);

  sub_1BC34D844();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC63A3C0;
  v16 = sub_1BC57F488();
  v17 = objc_msgSend(v16, sel_topAnchor);

  v18 = objc_msgSend(v11, sel_topAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(_QWORD *)(v15 + 32) = v19;
  v20 = sub_1BC57F57C();
  v21 = objc_msgSend(v20, sel_topAnchor);

  v22 = sub_1BC57F488();
  v23 = objc_msgSend(v22, sel_bottomAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(_QWORD *)(v15 + 40) = v24;
  v25 = sub_1BC57F57C();
  v26 = objc_msgSend(v25, sel_leadingAnchor);

  v27 = sub_1BC57F488();
  v28 = objc_msgSend(v27, sel_leadingAnchor);

  v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v28);
  *(_QWORD *)(v15 + 48) = v29;
  v30 = sub_1BC57F57C();
  v31 = objc_msgSend(v30, sel_trailingAnchor);

  v32 = sub_1BC57F488();
  v33 = objc_msgSend(v32, sel_trailingAnchor);

  v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v33);
  *(_QWORD *)(v15 + 56) = v34;
  v35 = sub_1BC57F57C();
  v36 = objc_msgSend(v35, sel_bottomAnchor);

  v37 = objc_msgSend(v11, sel_bottomAnchor);
  v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(_QWORD *)(v15 + 64) = v38;
  sub_1BC62C890();
  v39 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_activateConstraints_, v39);

  return v11;
}

id sub_1BC57FCE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackedTwoLabelView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StackedTwoLabelView()
{
  return objc_opt_self();
}

uint64_t sub_1BC57FD7C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  id v32;
  uint64_t result;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;

  v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC62D0DC();
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    sub_1BC35839C((unint64_t *)&qword_1ED6A4920, &qword_1ED6A48A0, 0x1E0CB6A88, MEMORY[0x1E0DEFCF8]);
    sub_1BC62CA1C();
    v2 = v36;
    v35 = v37;
    v4 = v38;
    v5 = v39;
    v6 = v40;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v35 = a2 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v34 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    if (v2 < 0)
    {
      if (!sub_1BC62D13C())
        goto LABEL_44;
      sub_1BC34B6A0(0, &qword_1ED6A48A0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v41;
      swift_unknownObjectRelease();
      v13 = v5;
      v11 = v6;
      if (!v41)
        goto LABEL_44;
    }
    else
    {
      if (v6)
      {
        v11 = (v6 - 1) & v6;
        v12 = __clz(__rbit64(v6)) | (v5 << 6);
        v13 = v5;
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_47;
        if (v15 >= v34)
          goto LABEL_44;
        v16 = *(_QWORD *)(v35 + 8 * v15);
        v13 = v5 + 1;
        if (!v16)
        {
          v13 = v5 + 2;
          if (v5 + 2 >= v34)
            goto LABEL_44;
          v16 = *(_QWORD *)(v35 + 8 * v13);
          if (!v16)
          {
            v13 = v5 + 3;
            if (v5 + 3 >= v34)
              goto LABEL_44;
            v16 = *(_QWORD *)(v35 + 8 * v13);
            if (!v16)
            {
              v13 = v5 + 4;
              if (v5 + 4 >= v34)
                goto LABEL_44;
              v16 = *(_QWORD *)(v35 + 8 * v13);
              if (!v16)
              {
                v13 = v5 + 5;
                if (v5 + 5 >= v34)
                  goto LABEL_44;
                v16 = *(_QWORD *)(v35 + 8 * v13);
                if (!v16)
                {
                  v17 = v5 + 6;
                  while (v34 != v17)
                  {
                    v16 = *(_QWORD *)(v35 + 8 * v17++);
                    if (v16)
                    {
                      v13 = v17 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_44:
                  sub_1BC3583F4();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        v11 = (v16 - 1) & v16;
        v12 = __clz(__rbit64(v16)) + (v13 << 6);
      }
      v14 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v12);
      if (!v14)
        goto LABEL_44;
    }
    v18 = v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v41 = a1;
    v21 = sub_1BC559700((uint64_t)v18);
    v22 = a1[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (a1[3] >= v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v20 & 1) != 0)
          goto LABEL_8;
      }
      else
      {
        sub_1BC5A7944();
        if ((v25 & 1) != 0)
          goto LABEL_8;
      }
    }
    else
    {
      sub_1BC3C7EA8(v24, isUniquelyReferenced_nonNull_native);
      v26 = sub_1BC559700((uint64_t)v18);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_48;
      v21 = v26;
      if ((v25 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(a1[7] + 8 * v21) = 0;
        goto LABEL_9;
      }
    }
    a1[(v21 >> 6) + 8] |= 1 << v21;
    v28 = 8 * v21;
    *(_QWORD *)(a1[6] + v28) = v18;
    *(_QWORD *)(a1[7] + v28) = 0;
    v29 = a1[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_46;
    a1[2] = v31;
    v32 = v18;
LABEL_9:

    swift_bridgeObjectRelease();
    v5 = v13;
    v6 = v11;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  sub_1BC34B6A0(0, &qword_1ED6A48A0);
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC58018C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

id sub_1BC580194()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    v3 = (void *)sub_1BC580470();
    v4 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1BC5801E8()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BC580258()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC580D70();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC5802AC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 24);
  v2 = sub_1BC580194();
  objc_msgSend(v1, sel_stopQuery_, v2);

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC15HealthRecordsUI23SampleTypeCountProvider__sampleCounts;
  sub_1BC580F0C(0, &qword_1ED6A4DC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_1BC580354()
{
  sub_1BC5802AC();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC580378()
{
  return type metadata accessor for SampleTypeCountProvider();
}

uint64_t type metadata accessor for SampleTypeCountProvider()
{
  uint64_t result;

  result = qword_1ED6A5718;
  if (!qword_1ED6A5718)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC5803BC()
{
  unint64_t v0;

  sub_1BC580F0C(319, &qword_1ED6A4DC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BC580470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  int64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void (*v22)(_QWORD *, _QWORD);
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  _QWORD aBlock[6];
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  if ((v2 & 0xC000000000000001) == 0)
  {
    v4 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRetain();
    if (v4)
    {
      v30 = v0;
      v35 = MEMORY[0x1E0DEE9D8];
      sub_1BC62D28C();
      v32 = sub_1BC582638(v2);
      v33 = v7;
      v34 = v8 & 1;
LABEL_7:
      v9 = (void *)objc_opt_self();
      do
      {
        while (1)
        {
          v15 = v32;
          v16 = v33;
          v17 = v34;
          sub_1BC5823D4(v32, v33, v34, v2, &qword_1ED6A48A0);
          v19 = v18;
          v20 = objc_msgSend(v18, sel_sampleType);
          v21 = objc_msgSend(v9, sel_queryDescriptorWithSampleType_, v20);

          sub_1BC62D268();
          sub_1BC62D298();
          sub_1BC62D2A4();
          result = sub_1BC62D274();
          if ((v2 & 0xC000000000000001) != 0)
            break;
          v10 = sub_1BC5822C8(v15, v16, v17, v2);
          v12 = v11;
          v14 = v13;
          sub_1BC3583DC(v15, v16, v17);
          v32 = v10;
          v33 = v12;
          v34 = v14 & 1;
          if (!--v4)
            goto LABEL_14;
        }
        if ((v17 & 1) == 0)
          goto LABEL_18;
        if (sub_1BC62D0E8())
          swift_isUniquelyReferenced_nonNull_native();
        sub_1BC582E3C();
        v22 = (void (*)(_QWORD *, _QWORD))sub_1BC62CA04();
        sub_1BC62D160();
        v22(aBlock, 0);
        --v4;
      }
      while (v4);
LABEL_14:
      sub_1BC3583DC(v32, v33, v34);
      swift_bridgeObjectRelease();
      v1 = v30;
      goto LABEL_16;
    }
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    v23 = swift_allocObject();
    swift_weakInit();
    v24 = objc_allocWithZone(MEMORY[0x1E0CB6980]);
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    swift_retain();
    v25 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1BC582ED4;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC581D30;
    aBlock[3] = &block_descriptor_9_11;
    v26 = _Block_copy(aBlock);
    v27 = objc_msgSend(v24, sel_initWithQueryDescriptors_updateHandler_, v25, v26);

    _Block_release(v26);
    swift_release();
    swift_release();
    aBlock[0] = v1;
    type metadata accessor for SampleTypeCountProvider();
    v28 = v27;
    swift_retain();
    sub_1BC62C6E0();
    v29 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_setDebugIdentifier_, v29);

    return (uint64_t)v28;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1BC62D118();
  if (!v3)
    goto LABEL_15;
  v4 = v3;
  v35 = MEMORY[0x1E0DEE9D8];
  sub_1BC62D28C();
  result = sub_1BC62D0D0();
  v32 = result;
  v33 = v6;
  v34 = 1;
  if ((v4 & 0x8000000000000000) == 0)
  {
    v30 = v0;
    goto LABEL_7;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1BC58085C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  void *v28;
  id v29;
  void (*v30)(uint64_t *, _QWORD);
  uint64_t v31;
  char *v32;
  id v33;
  id v34;
  NSObject *v35;
  void *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[4];
  int64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;

  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  if (!a5)
  {
LABEL_22:
    sub_1BC582B50();
    sub_1BC347F0C(&qword_1ED6A4D38, (uint64_t (*)(uint64_t))sub_1BC582B50, MEMORY[0x1E0C95F40]);
    swift_retain();
    sub_1BC62BF6C();
    swift_release();
    return swift_release();
  }
  v46 = v9;
  v47 = v7;
  v11 = *(_QWORD *)(result + 16);
  v48 = v6;
  v49 = result;
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = a5;
    swift_bridgeObjectRetain();
    v13 = sub_1BC62D118();
    if (!v13)
      goto LABEL_17;
    v14 = v13;
    v54 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    v51 = sub_1BC62D0D0();
    v52 = v15;
    v53 = 1;
    if ((v14 & 0x8000000000000000) == 0)
      goto LABEL_9;
    __break(1u);
  }
  v14 = *(_QWORD *)(v11 + 16);
  v16 = a5;
  swift_bridgeObjectRetain();
  if (!v14)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    v32 = v46;
    sub_1BC62BAF8();
    v33 = a5;
    v34 = a5;
    swift_bridgeObjectRetain();
    v35 = sub_1BC62BB28();
    v36 = a5;
    v37 = sub_1BC62CAC4();
    if (os_log_type_enabled(v35, v37))
    {
      v38 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v50[0] = v39;
      *(_DWORD *)v38 = 136446466;
      v51 = (int64_t)v36;
      v40 = v36;
      sub_1BC35E44C();
      v41 = sub_1BC62C6F8();
      v51 = sub_1BC4991F0(v41, v42, v50);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      *(_WORD *)(v38 + 12) = 2082;
      v51 = v31;
      sub_1BC582F00();
      swift_bridgeObjectRetain();
      v43 = sub_1BC62C6F8();
      v51 = sub_1BC4991F0(v43, v44, v50);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v35, v37, "Error %{public}s observing change for sample types: %{public}s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v39, -1, -1);
      MEMORY[0x1BCCF36A8](v38, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v48);
    goto LABEL_22;
  }
  v54 = MEMORY[0x1E0DEE9D8];
  sub_1BC62D28C();
  v51 = sub_1BC582638(v11);
  v52 = v17;
  v53 = v18 & 1;
LABEL_9:
  v45 = a5;
  while (1)
  {
    while (1)
    {
      v24 = v51;
      v25 = v52;
      v26 = v53;
      sub_1BC5823D4(v51, v52, v53, v11, &qword_1ED6A48A0);
      v28 = v27;
      v29 = objc_msgSend(v27, sel_sampleType);

      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      result = sub_1BC62D274();
      if ((v11 & 0xC000000000000001) != 0)
        break;
      v19 = sub_1BC5822C8(v24, v25, v26, v11);
      v21 = v20;
      v23 = v22;
      sub_1BC3583DC(v24, v25, v26);
      v51 = v19;
      v52 = v21;
      v53 = v23 & 1;
      if (!--v14)
        goto LABEL_16;
    }
    if ((v26 & 1) == 0)
      break;
    if (sub_1BC62D0E8())
      swift_isUniquelyReferenced_nonNull_native();
    sub_1BC582E3C();
    v30 = (void (*)(uint64_t *, _QWORD))sub_1BC62CA04();
    sub_1BC62D160();
    v30(v50, 0);
    if (!--v14)
    {
LABEL_16:
      sub_1BC3583DC(v51, v52, v53);
      v31 = v54;
      swift_bridgeObjectRelease();
      a5 = v45;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

void sub_1BC580D70()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  _QWORD v7[5];
  uint64_t v8;

  v1 = objc_allocWithZone(MEMORY[0x1E0CB6AE0]);
  sub_1BC34B6A0(0, &qword_1ED6A48A0);
  sub_1BC35839C((unint64_t *)&qword_1ED6A4920, &qword_1ED6A48A0, 0x1E0CB6A88, MEMORY[0x1E0DEFCF8]);
  swift_bridgeObjectRetain();
  swift_retain();
  v2 = (void *)sub_1BC62C9D4();
  swift_bridgeObjectRelease();
  v7[4] = sub_1BC582D70;
  v8 = v0;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1BC434D94;
  v7[3] = &block_descriptor_60;
  v3 = _Block_copy(v7);
  v4 = objc_msgSend(v1, sel_initWithQueryDescriptors_resultsHandler_, v2, v3);

  _Block_release(v3);
  swift_release();
  v7[0] = v0;
  type metadata accessor for SampleTypeCountProvider();
  swift_retain();
  v5 = v4;
  sub_1BC62C6E0();
  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setDebugIdentifier_, v6);

  objc_msgSend(*(id *)(v0 + 24), sel_executeQuery_, v5);
}

void sub_1BC580F0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC582D98(255, (unint64_t *)&unk_1ED6A4DD0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))MEMORY[0x1E0DEA048]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC580F74(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  os_log_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  int v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[2];

  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v10 = a3;
    sub_1BC62BAF8();
    v11 = a3;
    swift_retain();
    v12 = a3;
    swift_retain();
    v13 = sub_1BC62BB28();
    v14 = sub_1BC62CAC4();
    v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v16 = swift_slowAlloc();
      v31 = v13;
      v17 = v16;
      v32 = swift_slowAlloc();
      v34 = (uint64_t)a3;
      v35[0] = v32;
      *(_DWORD *)v17 = 136446466;
      v18 = a3;
      sub_1BC35E44C();
      v33 = v5;
      v19 = sub_1BC62C6F8();
      v30 = v15;
      v34 = sub_1BC4991F0(v19, v20, v35);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      *(_WORD *)(v17 + 12) = 2082;
      v28[1] = v17 + 14;
      sub_1BC34B6A0(0, &qword_1ED6A48A0);
      v29 = v6;
      sub_1BC35839C((unint64_t *)&qword_1ED6A4920, &qword_1ED6A48A0, 0x1E0CB6A88, MEMORY[0x1E0DEFCF8]);
      swift_bridgeObjectRetain();
      v21 = sub_1BC62C9EC();
      v23 = v22;
      swift_bridgeObjectRelease();
      v34 = sub_1BC4991F0(v21, v23, v35);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      v24 = v31;
      _os_log_impl(&dword_1BC30A000, v31, (os_log_type_t)v30, "Error %{public}s querying count with descriptors: %{public}s", (uint8_t *)v17, 0x16u);
      v25 = v32;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v25, -1, -1);
      MEMORY[0x1BCCF36A8](v17, -1, -1);

      result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v9, v33);
    }
    else
    {

      swift_release_n();
      result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  if (a2)
  {
    if ((a2 & 0xC000000000000001) != 0)
      v26 = sub_1BC581E4C();
    else
      sub_1BC5820BC(a2);
    v27 = v26;
    swift_getKeyPath();
    swift_getKeyPath();
    v35[0] = v27;
    swift_retain();
    return sub_1BC62BFCC();
  }
  return result;
}

_QWORD *sub_1BC5812D8()
{
  uint64_t v0;
  _QWORD *v1;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = *(_QWORD **)(v0 + 48);
  }
  else
  {
    v1 = sub_1BC5819AC();
    *(_QWORD *)(v0 + 48) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

_QWORD *sub_1BC581330(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD v20[4];

  v3 = v2;
  sub_1BC580F0C(0, &qword_1ED6A4DB8, MEMORY[0x1E0C96180]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v20 - v9;
  sub_1BC582F64();
  v12 = v11;
  v20[0] = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35D24C(MEMORY[0x1E0DEE9D8]);
  v20[1] = v15;
  sub_1BC4A2B40();
  swift_allocObject();
  v16 = sub_1BC62BF24();
  v2[5] = 0;
  v2[6] = 0;
  v2[3] = a1;
  v2[4] = v16;
  v2[2] = a2;
  v17 = a2;
  sub_1BC5812D8();
  swift_beginAccess();
  sub_1BC580F0C(0, &qword_1ED6A4DC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BF9C();
  swift_endAccess();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1BC486D54();
  sub_1BC582FEC();
  sub_1BC62C02C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_allocObject();
  swift_weakInit();
  sub_1BC347F0C(&qword_1ED6A4CD8, (uint64_t (*)(uint64_t))sub_1BC582F64, MEMORY[0x1E0C95950]);
  v18 = sub_1BC62C0BC();

  swift_release();
  (*(void (**)(char *, uint64_t))(v20[0] + 8))(v14, v12);
  v3[5] = v18;
  swift_release();
  return v3;
}

uint64_t sub_1BC58159C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  char isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _QWORD v48[2];

  v3 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_39:
    *a2 = v7;
    return result;
  }
  v5 = *(_QWORD *)(result + 24);
  v41 = *(_QWORD *)(v5 + 16);
  if (!v41)
  {
    swift_bridgeObjectRetain();
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_38:
    swift_release();
    result = swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  v40 = a2;
  swift_bridgeObjectRetain_n();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v8 = v5 + 32 + 72 * v6;
    v9 = *(_OWORD *)(v8 + 16);
    v10 = *(_OWORD *)(v8 + 32);
    v11 = *(_QWORD *)(v8 + 64);
    v46 = *(_OWORD *)(v8 + 48);
    v12 = *(_OWORD *)v8;
    v47 = v11;
    v44 = v9;
    v45 = v10;
    v43 = v12;
    v13 = v46;
    v48[0] = v46;
    if ((unint64_t)v46 >> 62)
      break;
    v14 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_1BC359A94((uint64_t)&v43);
    sub_1BC4BDC30((uint64_t)v48);
    sub_1BC359A94((uint64_t)&v43);
    sub_1BC4BDC30((uint64_t)v48);
    v42 = v6;
    if (v14)
      goto LABEL_8;
LABEL_23:
    v16 = 0;
LABEL_24:
    sub_1BC3FE9FC((uint64_t)v48);
    sub_1BC3FE9FC((uint64_t)v48);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC5594EC(&v43);
    v27 = v26;
    v28 = v7[2];
    v29 = (v25 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      goto LABEL_41;
    v31 = v25;
    if (v7[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v25 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BC5A7B14();
        if ((v31 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1BC3C817C(v30, isUniquelyReferenced_nonNull_native);
      sub_1BC5594EC(&v43);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_44;
      v27 = v32;
      if ((v31 & 1) != 0)
      {
LABEL_4:
        *(_QWORD *)(v7[7] + 8 * v27) = v16;
        goto LABEL_5;
      }
    }
    v7[(v27 >> 6) + 8] |= 1 << v27;
    v34 = v7[6] + 72 * v27;
    *(_OWORD *)v34 = v43;
    v35 = v44;
    v36 = v45;
    v37 = v46;
    *(_QWORD *)(v34 + 64) = v47;
    *(_OWORD *)(v34 + 32) = v36;
    *(_OWORD *)(v34 + 48) = v37;
    *(_OWORD *)(v34 + 16) = v35;
    *(_QWORD *)(v7[7] + 8 * v27) = v16;
    v38 = v7[2];
    v23 = __OFADD__(v38, 1);
    v39 = v38 + 1;
    if (v23)
      goto LABEL_43;
    v7[2] = v39;
    sub_1BC359A94((uint64_t)&v43);
LABEL_5:
    swift_bridgeObjectRelease();
    v6 = v42 + 1;
    sub_1BC359AF8((uint64_t)&v43);
    sub_1BC359AF8((uint64_t)&v43);
    if (v42 + 1 == v41)
    {
      swift_bridgeObjectRelease();
      a2 = v40;
      goto LABEL_38;
    }
  }
  sub_1BC359A94((uint64_t)&v43);
  sub_1BC4BDC30((uint64_t)v48);
  sub_1BC359A94((uint64_t)&v43);
  sub_1BC4BDC30((uint64_t)v48);
  v14 = sub_1BC62D3B8();
  v42 = v6;
  if (!v14)
    goto LABEL_23;
LABEL_8:
  if (v14 < 1)
    goto LABEL_42;
  v15 = 0;
  v16 = 0;
  while (1)
  {
    v17 = (v13 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x1BCCF24CC](v15, v13)
        : *(id *)(v13 + 8 * v15 + 32);
    v18 = v17;
    if (*(_QWORD *)(v3 + 16))
    {
      v19 = v17;
      v20 = sub_1BC559700((uint64_t)v19);
      v22 = (v21 & 1) != 0 ? *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v20) : 0;

    }
    else
    {
      v22 = 0;
    }

    v23 = __OFADD__(v16, v22);
    v16 += v22;
    if (v23)
      break;
    if (v14 == ++v15)
      goto LABEL_24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC581930()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1BC62BF00();
    return swift_release();
  }
  return result;
}

_QWORD *sub_1BC5819AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD *result;
  uint64_t i;
  void *v12;
  void **v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = MEMORY[0x1E0DEE9E8];
  v24 = MEMORY[0x1E0DEE9E8];
  v22 = *(_QWORD *)(v1 + 16);
  if (!v22)
  {
LABEL_17:
    v17 = *(void **)(v0 + 16);
    type metadata accessor for SampleTypeCountProvider();
    swift_allocObject();
    v18 = v17;
    v19 = sub_1BC5826C0(v2, v18);

    return v19;
  }
  v21 = v1 + 32;
  swift_bridgeObjectRetain_n();
  v3 = 0;
  while (1)
  {
    v4 = (_QWORD *)(v21 + 72 * v3);
    v5 = (void *)v4[1];
    v6 = v4[6];
    v7 = (void *)v4[8];
    if (v6 >> 62)
      break;
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v9 = v7;
    result = v5;
    if (v8)
      goto LABEL_6;
LABEL_3:
    ++v3;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (v3 == v22)
    {
      swift_bridgeObjectRelease_n();
      v2 = v24;
      v0 = v20;
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v15 = v7;
  v16 = v5;
  result = (_QWORD *)sub_1BC62D3B8();
  v8 = (uint64_t)result;
  if (!result)
    goto LABEL_3;
LABEL_6:
  if (v8 >= 1)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v8; ++i)
      {
        v12 = (void *)MEMORY[0x1BCCF24CC](i, v6);
        sub_1BC48F68C(&v23, v12);

      }
    }
    else
    {
      v13 = (void **)(v6 + 32);
      do
      {
        v14 = *v13++;
        sub_1BC48F68C(&v23, v14);

        --v8;
      }
      while (v8);
    }
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC581BD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CategoryCountProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BC581C3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC581CB8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BC62BFCC();
}

uint64_t sub_1BC581D30(uint64_t a1, void *a2, uint64_t a3, void *aBlock, void *a5)
{
  uint64_t v7;
  void (*v9)(id, uint64_t, uint64_t (*)(), uint64_t, void *);
  void *v10;
  uint64_t v11;
  id v12;
  id v13;

  v7 = a3;
  v9 = *(void (**)(id, uint64_t, uint64_t (*)(), uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    sub_1BC35839C((unint64_t *)&qword_1ED6A58E0, &qword_1ED6A58D8, 0x1E0CB6B00, MEMORY[0x1E0DEFCF8]);
    v7 = sub_1BC62C9E0();
  }
  v10 = _Block_copy(aBlock);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  swift_retain();
  v12 = a2;
  v13 = a5;
  v9(v12, v7, sub_1BC397BC8, v11, a5);
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC581E4C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (sub_1BC62D118())
  {
    sub_1BC582D98(0, (unint64_t *)&qword_1ED6A4E20, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))MEMORY[0x1E0DECD58]);
    v0 = sub_1BC62D400();
  }
  else
  {
    v0 = MEMORY[0x1E0DEE9E0];
  }
  v17 = v0;
  sub_1BC62D2F8();
  swift_unknownObjectRetain();
  v1 = sub_1BC62D364();
  if (v1)
  {
    v2 = (void *)v1;
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    do
    {
      swift_dynamicCast();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
      swift_dynamicCast();
      v10 = sub_1BC62CA28();

      v0 = v17;
      v11 = *(_QWORD *)(v17 + 16);
      if (*(_QWORD *)(v17 + 24) <= v11)
      {
        sub_1BC3C7EA8(v11 + 1, 1);
        v0 = v17;
      }
      result = sub_1BC62CEA8();
      v4 = v0 + 64;
      v5 = -1 << *(_BYTE *)(v0 + 32);
      v6 = result & ~v5;
      v7 = v6 >> 6;
      if (((-1 << v6) & ~*(_QWORD *)(v0 + 64 + 8 * (v6 >> 6))) != 0)
      {
        v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v0 + 64 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v12 = 0;
        v13 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v13 && (v12 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          v14 = v7 == v13;
          if (v7 == v13)
            v7 = 0;
          v12 |= v14;
          v15 = *(_QWORD *)(v4 + 8 * v7);
        }
        while (v15 == -1);
        v8 = __clz(__rbit64(~v15)) + (v7 << 6);
      }
      *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      v9 = 8 * v8;
      *(_QWORD *)(*(_QWORD *)(v0 + 48) + v9) = v16;
      *(_QWORD *)(*(_QWORD *)(v0 + 56) + v9) = v10;
      ++*(_QWORD *)(v0 + 16);
      v2 = (void *)sub_1BC62D364();
    }
    while (v2);
  }
  swift_release();
  return v0;
}

void sub_1BC5820BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;

  sub_1BC582D98(0, (unint64_t *)&qword_1ED6A4E20, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))MEMORY[0x1E0DECD58]);
  v2 = sub_1BC62D3DC();
  v3 = (_QWORD *)v2;
  v4 = 0;
  v26 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v24 = v6;
  v25 = (unint64_t)(v8 + 63) >> 6;
  v11 = v2 + 64;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v12 | (v4 << 6); ; i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    v17 = *(void **)(*(_QWORD *)(v26 + 56) + 8 * i);
    v18 = *(id *)(*(_QWORD *)(v26 + 48) + 8 * i);
    v19 = v17;
    v20 = sub_1BC62CA28();

    *(_QWORD *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v3[6] + 8 * i) = v18;
    *(_QWORD *)(v3[7] + 8 * i) = v20;
    v21 = v3[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v23;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v14 >= v25)
      return;
    v15 = *(_QWORD *)(v24 + 8 * v14);
    ++v4;
    if (!v15)
    {
      v4 = v14 + 1;
      if (v14 + 1 >= v25)
        return;
      v15 = *(_QWORD *)(v24 + 8 * v4);
      if (!v15)
      {
        v4 = v14 + 2;
        if (v14 + 2 >= v25)
          return;
        v15 = *(_QWORD *)(v24 + 8 * v4);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v10 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v25)
    return;
  v15 = *(_QWORD *)(v24 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v25)
      return;
    v15 = *(_QWORD *)(v24 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

int64_t sub_1BC5822C8(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1BC5823AC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1BC5823D4(a1, a2, a3, a4, &qword_1ED6A58D8);
}

void sub_1BC5823C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1BC5823D4(a1, a2, a3, a4, &qword_1EF4357E0);
}

void sub_1BC5823D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1BC62D100() == *(_DWORD *)(a4 + 36))
      {
        sub_1BC62D10C();
        sub_1BC34B6A0(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_1BC62CEA8();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_1BC62CEB4();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_1BC62CEB4();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1BCCF2400](a1, a2, v8);
  sub_1BC34B6A0(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_1BC582638(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_QWORD *sub_1BC5826C0(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v35;
  _QWORD *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;

  v3 = v2;
  sub_1BC4C24E8();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62CC5C();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x1E0C80A78](v9);
  v35 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC582B2C(0);
  v12 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  v42 = v12;
  MEMORY[0x1E0C80A78](v11);
  v37 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC582BD4(0, (unint64_t *)&unk_1ED6A4D10, v14, sub_1BC582C9C, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
  v16 = *(_QWORD *)(v15 - 8);
  v44 = v15;
  v45 = v16;
  MEMORY[0x1E0C80A78](v15);
  v38 = (char *)&v35 - v17;
  v2[4] = 0;
  sub_1BC582B50();
  swift_allocObject();
  v18 = sub_1BC62BEE8();
  v19 = MEMORY[0x1E0DEE9E8];
  v2[5] = v18;
  v2[6] = v19;
  v43 = v2 + 6;
  v2[2] = a1;
  v2[3] = a2;
  v20 = a2;
  swift_bridgeObjectRetain();
  v21 = (void *)sub_1BC57FD7C(MEMORY[0x1E0DEE9E0], a1);
  swift_bridgeObjectRelease();
  v36 = v3;
  swift_beginAccess();
  v46 = v21;
  sub_1BC582D98(0, (unint64_t *)&unk_1ED6A4DD0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))MEMORY[0x1E0DEA048]);
  sub_1BC62BF90();
  swift_endAccess();
  v47 = (id)v3[5];
  swift_retain();
  sub_1BC62CC44();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v46 = (id)sub_1BC62CC74();
  v22 = sub_1BC62CC38();
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v8, 1, 1, v22);
  sub_1BC582BB8();
  sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v24 = v37;
  v25 = v35;
  sub_1BC62C08C();
  sub_1BC3A4334((uint64_t)v8);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v40);
  swift_release();
  v47 = (id)sub_1BC62CC74();
  v23(v8, 1, 1, v22);
  sub_1BC582C9C();
  v26 = v38;
  v27 = v41;
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v8);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v24, v27);
  v28 = swift_allocObject();
  v29 = v36;
  swift_weakInit();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_1BC582CDC;
  *(_QWORD *)(v30 + 24) = v28;
  sub_1BC582D08();
  v31 = v44;
  sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v31);
  swift_beginAccess();
  sub_1BC62BEA0();
  swift_endAccess();
  swift_release();
  v32 = (void *)v29[3];
  v33 = sub_1BC580194();
  objc_msgSend(v32, sel_executeQuery_, v33);

  sub_1BC580D70();
  return v29;
}

void sub_1BC582B2C(uint64_t a1)
{
  sub_1BC582BD4(a1, &qword_1ED6A4D00, (uint64_t (*)(uint64_t))sub_1BC582B50, sub_1BC582BB8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BA0]);
}

void sub_1BC582B50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4D48)
  {
    v0 = sub_1BC62BEF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4D48);
  }
}

uint64_t sub_1BC582BB8()
{
  return sub_1BC347F0C(&qword_1ED6A4D40, (uint64_t (*)(uint64_t))sub_1BC582B50, MEMORY[0x1E0C95F48]);
}

void sub_1BC582BD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    v11[2] = a4();
    v11[3] = sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v9 = a5(a1, v11);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC582C9C()
{
  return sub_1BC347F0C(&qword_1ED6A4CF8, (uint64_t (*)(uint64_t))sub_1BC582B2C, MEMORY[0x1E0C95BB0]);
}

uint64_t sub_1BC582CB8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC582CDC()
{
  return sub_1BC580258();
}

uint64_t sub_1BC582CE4()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BC582D08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A4D08;
  if (!qword_1ED6A4D08)
  {
    sub_1BC582BD4(255, (unint64_t *)&unk_1ED6A4D10, (uint64_t (*)(uint64_t))sub_1BC582B2C, sub_1BC582C9C, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95CB8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A4D08);
  }
  return result;
}

uint64_t sub_1BC582D70(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1BC580F74(a1, a2, a3);
}

uint64_t block_copy_helper_58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_58()
{
  return swift_release();
}

void sub_1BC582D98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_1BC34B6A0(255, &qword_1ED6A48A0);
    v7 = sub_1BC35839C((unint64_t *)&qword_1ED6A4920, &qword_1ED6A48A0, 0x1E0CB6A88, MEMORY[0x1E0DEFCF8]);
    v8 = a3(a1, v6, MEMORY[0x1E0DEB418], v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BC582E3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4372B8)
  {
    sub_1BC34B6A0(255, &qword_1ED6A48A0);
    sub_1BC35839C((unint64_t *)&qword_1ED6A4920, &qword_1ED6A48A0, 0x1E0CB6A88, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC62CA10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4372B8);
  }
}

uint64_t sub_1BC582ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1BC58085C(a1, a2, a3, a4, a5);
}

uint64_t sub_1BC582EDC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1BC582F00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4372C0)
  {
    sub_1BC34B6A0(255, &qword_1ED6A58D8);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, &qword_1EF4372C0);
  }
}

void sub_1BC582F64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4CE0)
  {
    sub_1BC580F0C(255, &qword_1ED6A4DB8, MEMORY[0x1E0C96180]);
    sub_1BC486D54();
    sub_1BC582FEC();
    v0 = sub_1BC62BE10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4CE0);
  }
}

unint64_t sub_1BC582FEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A4DB0;
  if (!qword_1ED6A4DB0)
  {
    sub_1BC580F0C(255, &qword_1ED6A4DB8, MEMORY[0x1E0C96180]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A4DB0);
  }
  return result;
}

uint64_t sub_1BC583044@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC58159C(a1, a2);
}

uint64_t sub_1BC58304C()
{
  return sub_1BC581930();
}

unint64_t static AccountStatusSummaryTileFeedItemIdentifierFactory.makeComponent(accountId:)()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC62A7B4();
  sub_1BC4997C8();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return 0xD00000000000001DLL;
}

unint64_t static AccountStatusSummaryTileFeedItemIdentifierFactory.makeComponentForPrefix()()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  return 0xD000000000000024;
}

uint64_t static AccountStatusSummaryTileFeedItemIdentifierFactory.make(for:type:profile:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = MEMORY[0x1E0C80A78](v2).n128_u64[0];
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_identifier, v4);
  sub_1BC62A79C();

  v8 = _s15HealthRecordsUI49AccountStatusSummaryTileFeedItemIdentifierFactoryV4make9accountId4type7profileSS10Foundation4UUIDV_0A14RecordServices08ClinicaldfG4TypeO0A8Platform13SourceProfileOtFZ_0((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8;
}

unint64_t _s15HealthRecordsUI49AccountStatusSummaryTileFeedItemIdentifierFactoryV22makeComponentForPrefix4typeSS0A14RecordServices08ClinicaldfG4TypeO_tFZ_0()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC62B90C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return 0xD000000000000025;
}

uint64_t _s15HealthRecordsUI49AccountStatusSummaryTileFeedItemIdentifierFactoryV4make9accountId4type7profileSS10Foundation4UUIDV_0A14RecordServices08ClinicaldfG4TypeO0A8Platform13SourceProfileOtFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  unint64_t v18;
  unint64_t v19;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A53C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC6395A0;
  v7 = (void *)sub_1BC62AA84();
  _s15HealthRecordsUI49AccountStatusSummaryTileFeedItemIdentifierFactoryV22makeComponentForPrefix4typeSS0A14RecordServices08ClinicaldfG4TypeO_tFZ_0();
  if (v7)
  {
    v18 = 0x656C69666F72505BLL;
    v19 = 0xE90000000000003ALL;
    v8 = v7;
    v17[1] = a1;
    v9 = v8;
    v10 = objc_msgSend(v8, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v11 = v18;
    v12 = v19;
  }
  else
  {
    v12 = 0x80000001BC655390;
    v11 = 0xD000000000000013;
  }
  v18 = v11;
  v19 = v12;
  sub_1BC62C764();

  swift_bridgeObjectRelease();
  v13 = v19;
  *(_QWORD *)(v6 + 32) = v18;
  *(_QWORD *)(v6 + 40) = v13;
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v18 = 0xD00000000000001DLL;
  v19 = 0x80000001BC664C50;
  sub_1BC4997C8();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v14 = v19;
  *(_QWORD *)(v6 + 48) = v18;
  *(_QWORD *)(v6 + 56) = v14;
  v18 = v6;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v15 = sub_1BC62C5D8();
  swift_bridgeObjectRelease();
  return v15;
}

ValueMetadata *type metadata accessor for AccountStatusSummaryTileFeedItemIdentifierFactory()
{
  return &type metadata for AccountStatusSummaryTileFeedItemIdentifierFactory;
}

BOOL CGRect.isZero.getter(double a1, double a2, double a3, double a4)
{
  CGRect v5;

  v5.origin.x = 0.0;
  v5.origin.y = 0.0;
  v5.size.width = 0.0;
  v5.size.height = 0.0;
  return CGRectEqualToRect(*(CGRect *)&a1, v5);
}

uint64_t sub_1BC583570(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2[22] = a1;
  v2[23] = v1;
  v4 = sub_1BC62BB34();
  v2[24] = v4;
  v2[25] = *(_QWORD *)(v4 - 8);
  v2[26] = swift_task_alloc();
  v5 = sub_1BC62A7B4();
  v2[27] = v5;
  v2[28] = *(_QWORD *)(v5 - 8);
  v2[29] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v2[30] = v6;
  *v6 = v2;
  v6[1] = sub_1BC583614;
  return sub_1BC583D18(a1, 5);
}

uint64_t sub_1BC583614()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 272) = v0;
    return swift_task_switch();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 248) = v5;
    *v5 = v3;
    v5[1] = sub_1BC5836A4;
    return sub_1BC5C600C(5);
  }
}

uint64_t sub_1BC5836A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 272) = v0;
  return swift_task_switch();
}

uint64_t sub_1BC583708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(void **)(*(_QWORD *)(v0 + 184) + 24);
  v5 = objc_msgSend(*(id *)(v0 + 176), sel_identifier);
  sub_1BC62A79C();

  v6 = sub_1BC62A784();
  *(_QWORD *)(v0 + 256) = v6;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v0 + 56) = v0 + 280;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1BC58380C;
  v7 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_1BC5C5F90;
  *(_QWORD *)(v0 + 104) = &block_descriptor_61;
  *(_QWORD *)(v0 + 112) = v7;
  objc_msgSend(v4, sel_deleteAccountWithIdentifier_deletionReason_completion_, v6, 3, v0 + 80);
  return swift_continuation_await();
}

uint64_t sub_1BC58380C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 264) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC58386C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 280);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1BC5838C8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char **v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  NSObject *log;
  uint64_t v41;
  os_log_type_t type;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 272);
  sub_1BC62BAF8();
  v3 = v1;
  v4 = v2;
  v5 = v3;
  v6 = v2;
  v7 = sub_1BC62BB28();
  v8 = sub_1BC62CAC4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 272);
    type = v8;
    v10 = *(_QWORD *)(v0 + 232);
    v39 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 216);
    v43 = *(_QWORD *)(v0 + 200);
    v44 = *(_QWORD *)(v0 + 192);
    v45 = *(_QWORD *)(v0 + 208);
    v12 = *(void **)(v0 + 176);
    v13 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v46 = v41;
    *(_DWORD *)v13 = 136315394;
    log = v7;
    v14 = objc_msgSend(v12, sel_identifier);
    sub_1BC62A79C();

    sub_1BC4997C8();
    v15 = sub_1BC62D52C();
    v17 = v16;
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v10, v11);
    *(_QWORD *)(v0 + 168) = sub_1BC4991F0(v15, v17, &v46);
    v18 = &selRef_constraintGreaterThanOrEqualToConstant_;
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    *(_QWORD *)(v0 + 160) = v9;
    v19 = v9;
    v20 = v9;
    sub_1BC35E44C();
    sub_1BC62D5D4();
    v21 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v22 = sub_1BC62C6E0();
    v24 = v23;

    *(_QWORD *)(v0 + 152) = sub_1BC4991F0(v22, v24, &v46);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, log, type, "Failed to stop oslo sharing with account: %s, error: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v41, -1, -1);
    MEMORY[0x1BCCF36A8](v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v44);
  }
  else
  {
    v25 = *(void **)(v0 + 272);
    v18 = &selRef_constraintGreaterThanOrEqualToConstant_;
    v27 = *(_QWORD *)(v0 + 200);
    v26 = *(_QWORD *)(v0 + 208);
    v28 = *(_QWORD *)(v0 + 192);
    v29 = *(void **)(v0 + 176);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  }
  v31 = *(_QWORD *)(v0 + 224);
  v30 = *(_QWORD *)(v0 + 232);
  v32 = *(_QWORD *)(v0 + 216);
  v33 = *(void **)(*(_QWORD *)(v0 + 184) + 24);
  v34 = objc_msgSend(*(id *)(v0 + 176), v18[234]);
  sub_1BC62A79C();

  v35 = sub_1BC62A784();
  *(_QWORD *)(v0 + 256) = v35;
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
  *(_QWORD *)(v0 + 56) = v0 + 280;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1BC58380C;
  v36 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v37 = (_QWORD *)(v0 + 80);
  v37[1] = 0x40000000;
  v37[2] = sub_1BC5C5F90;
  v37[3] = &block_descriptor_61;
  v37[4] = v36;
  objc_msgSend(v33, sel_deleteAccountWithIdentifier_deletionReason_completion_, v35, 3, v37);
  return swift_continuation_await();
}

uint64_t sub_1BC583CB4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 256);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1BC583D18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v4 = sub_1BC62A7B4();
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC583D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(void **)(*(_QWORD *)(v0 + 136) + 24);
  v6 = objc_msgSend(*(id *)(v0 + 120), sel_identifier);
  sub_1BC62A79C();

  v7 = sub_1BC62A784();
  *(_QWORD *)(v0 + 168) = v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v4);
  *(_QWORD *)(v0 + 176) = v8;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1BC583EA8;
  v9 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v10 = (_QWORD *)(v0 + 80);
  v10[1] = 0x40000000;
  v10[2] = sub_1BC5C656C;
  v10[3] = &block_descriptor_4_0;
  v10[4] = v9;
  objc_msgSend(v5, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v7, 0, 0, v8, 0, 0, v10);
  return swift_continuation_await();
}

uint64_t sub_1BC583EA8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC583F08()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 168);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC583F4C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 168);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id HealthRecordsSupportedChange.store.getter()
{
  id *v0;

  return *v0;
}

uint64_t HealthRecordsSupportedChange.isSupported.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1BC583FB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  result = swift_release();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1BC584038(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v4 = v2;
  v5 = v3;
  return sub_1BC62BFCC();
}

uint64_t sub_1BC5840B8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC584124()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1BC62BFCC();
}

void (*sub_1BC58419C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1BC62BFB4();
  return sub_1BC4CFE68;
}

uint64_t sub_1BC584214()
{
  swift_beginAccess();
  sub_1BC584554(0, (unint64_t *)&unk_1ED6A5398, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BF9C();
  return swift_endAccess();
}

uint64_t sub_1BC584284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  uint64_t v13;

  sub_1BC584554(0, &qword_1ED6A4D98, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v11((char *)&v13 - v9, a1, v3, v8);
  ((void (*)(char *, char *, uint64_t))v11)(v6, v10, v3);
  swift_beginAccess();
  sub_1BC584554(0, (unint64_t *)&unk_1ED6A5398, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BFA8();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_1BC5843AC()
{
  swift_beginAccess();
  sub_1BC584554(0, (unint64_t *)&unk_1ED6A5398, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BF9C();
  return swift_endAccess();
}

void sub_1BC584418()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A5330)
  {
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A5330);
  }
}

uint64_t sub_1BC58446C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  sub_1BC584554(0, &qword_1ED6A4D98, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v8 - v6, a1, v3, v5);
  swift_beginAccess();
  sub_1BC584554(0, (unint64_t *)&unk_1ED6A5398, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BFA8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void sub_1BC584554(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC584418();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void (*sub_1BC5845AC(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1BC584554(0, &qword_1ED6A4D98, MEMORY[0x1E0C96180]);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener__latestChange;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_1BC584554(0, (unint64_t *)&unk_1ED6A5398, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v3[16] = v9;
  sub_1BC62BF9C();
  swift_endAccess();
  return sub_1BC4D031C;
}

id HealthRecordsSupportedStateChangeListener.__allocating_init(handler:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  id v14;
  objc_super v16;
  uint64_t v17;
  char v18;

  sub_1BC584554(0, (unint64_t *)&unk_1ED6A5398, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  v10 = (char *)objc_allocWithZone(v2);
  v11 = &v10[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener__latestChange];
  v17 = 0;
  v18 = 0;
  sub_1BC584418();
  v12 = v10;
  sub_1BC62BF90();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v9, v6);
  v13 = &v12[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener_handler];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  swift_retain();

  v16.receiver = v12;
  v16.super_class = v2;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  swift_release();
  return v14;
}

id HealthRecordsSupportedStateChangeListener.init(handler:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  objc_class *v13;
  id v14;
  objc_super v16;
  uint64_t v17;
  char v18;

  sub_1BC584554(0, (unint64_t *)&unk_1ED6A5398, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  v10 = &v2[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener__latestChange];
  v17 = 0;
  v18 = 0;
  sub_1BC584418();
  v11 = v2;
  sub_1BC62BF90();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v9, v6);
  v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener_handler];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  swift_retain();

  v13 = (objc_class *)type metadata accessor for HealthRecordsSupportedStateChangeListener();
  v16.receiver = v11;
  v16.super_class = v13;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  swift_release();
  return v14;
}

uint64_t type metadata accessor for HealthRecordsSupportedStateChangeListener()
{
  uint64_t result;

  result = qword_1ED6A5350;
  if (!qword_1ED6A5350)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC584904(void *a1, int a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *);
  char v24;
  id v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t ObjectType;
  unint64_t v34;
  uint64_t v35;

  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BB04();
  v9 = v2;
  v10 = a1;
  v11 = (char *)v9;
  v12 = v10;
  v13 = sub_1BC62BB28();
  v14 = sub_1BC62CADC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v31 = v6;
    v16 = v15;
    v29 = swift_slowAlloc();
    v35 = v29;
    *(_DWORD *)v16 = 136446722;
    ObjectType = swift_getObjectType();
    sub_1BC584DB8();
    v30 = v5;
    v17 = sub_1BC62C6F8();
    v32 = a2;
    ObjectType = sub_1BC4991F0(v17, v18, &v35);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v16 + 12) = 2082;
    ObjectType = (uint64_t)v12;
    sub_1BC584DF0();
    v19 = v12;
    v20 = sub_1BC62C6F8();
    ObjectType = sub_1BC4991F0(v20, v21, &v35);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v16 + 22) = 2082;
    ObjectType = 0;
    v34 = 0xE000000000000000;
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    ObjectType = sub_1BC4991F0(ObjectType, v34, &v35);
    sub_1BC62CFF8();
    LOBYTE(a2) = v32;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v13, v14, "%{public}s: healthRecordsSupportedDidChange (store: %{public}s, to: %{public}s)", (uint8_t *)v16, 0x20u);
    v22 = v29;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v22, -1, -1);
    MEMORY[0x1BCCF36A8](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v30);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v23 = *(void (**)(uint64_t *))&v11[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener_handler];
  ObjectType = (uint64_t)v12;
  v24 = a2 & 1;
  LOBYTE(v34) = a2 & 1;
  v25 = v12;
  v23(&ObjectType);
  swift_getKeyPath();
  swift_getKeyPath();
  ObjectType = (uint64_t)v25;
  LOBYTE(v34) = v24;
  v26 = v11;
  return sub_1BC62BFCC();
}

id HealthRecordsSupportedStateChangeListener.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HealthRecordsSupportedStateChangeListener.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HealthRecordsSupportedStateChangeListener.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthRecordsSupportedStateChangeListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1BC584DB8()
{
  unint64_t result;

  result = qword_1EF4372E8;
  if (!qword_1EF4372E8)
  {
    type metadata accessor for HealthRecordsSupportedStateChangeListener();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF4372E8);
  }
  return result;
}

unint64_t sub_1BC584DF0()
{
  unint64_t result;

  result = qword_1EF4372F0;
  if (!qword_1EF4372F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF4372F0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthRecordsSupportedChange(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for HealthRecordsSupportedChange(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for HealthRecordsSupportedChange(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthRecordsSupportedChange(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthRecordsSupportedChange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthRecordsSupportedChange()
{
  return &type metadata for HealthRecordsSupportedChange;
}

uint64_t sub_1BC584F84()
{
  return type metadata accessor for HealthRecordsSupportedStateChangeListener();
}

void sub_1BC584F8C()
{
  unint64_t v0;

  sub_1BC584554(319, (unint64_t *)&unk_1ED6A5398, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for HealthRecordsSupportedStateChangeListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.latestChange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.latestChange.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.latestChange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.$latestChange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.$latestChange.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.$latestChange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.__allocating_init(handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.healthRecordsSupportedDidChange(healthRecordsStore:to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t sub_1BC5850F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v18 - v2;
  v4 = sub_1BC62A760();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - v12;
  v14 = type metadata accessor for UserDomainConceptViewData();
  sub_1BC3462D8(v0 + *(int *)(v14 + 36), (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BC377E3C((uint64_t)v3, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v15 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v3, v4);
    sub_1BC62A754();
    sub_1BC62A6DC();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v10, v4);
    v15 = sub_1BC62A718();
    v16(v7, v4);
    v16(v13, v4);
  }
  return v15 & 1;
}

uint64_t sub_1BC585298()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - v13;
  *(_QWORD *)&v16 = MEMORY[0x1E0C80A78](v15).n128_u64[0];
  v18 = (char *)&v25 - v17;
  v19 = objc_msgSend(v1, sel_meaningfulDate, v16);
  if (v19)
  {
    v20 = v19;
    sub_1BC62A724();

    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, v21, 1, v8);
  sub_1BC3EFC38((uint64_t)v4, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BC377E3C((uint64_t)v7, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v22 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v7, v8);
    sub_1BC62A754();
    sub_1BC62A6DC();
    v23 = *(void (**)(char *, uint64_t))(v9 + 8);
    v23(v14, v8);
    v22 = sub_1BC62A718();
    v23(v11, v8);
    v23(v18, v8);
  }
  return v22 & 1;
}

uint64_t sub_1BC5854A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v10[2];

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0[2];
  v5 = v0[3];
  v7 = (void *)v0[4];
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(v7, sel_UUID);
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v10[0] = v6;
  v10[1] = v5;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10[0];
}

uint64_t sub_1BC585598()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PinnedConceptItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC5855EC()
{
  return sub_1BC5854A0();
}

_QWORD *sub_1BC58560C(void *a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  void *v26;
  void *v27;
  id v28;
  char v29;
  id v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  id v37;
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t (*v41)(void);
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;

  sub_1BC495884();
  v54 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC586C50();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4240F0(0, &qword_1EF437610, v11, (void (*)(void))sub_1BC586D68);
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  MEMORY[0x1E0C80A78](v12);
  v60 = (char *)v47 - v13;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v47 - v15;
  sub_1BC4240F0(0, (unint64_t *)&qword_1EF4330E8, (void (*)(uint64_t))sub_1BC586D88, (void (*)(void))sub_1BC586DEC);
  v18 = v17;
  v50 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v47 - v19;
  v21 = MEMORY[0x1E0DEE9E8];
  v3[9] = 0;
  v3[10] = v21;
  v3[5] = a1;
  v3[6] = a2;
  v3[7] = a3;
  type metadata accessor for UserDomainConceptDataProvider();
  v22 = (_QWORD *)swift_allocObject();
  v23 = MEMORY[0x1E0DEE9E0];
  v22[2] = MEMORY[0x1E0DEE9E0];
  v22[3] = v23;
  v22[4] = a3;
  v3[8] = v22;
  v56 = a3;
  v51 = a1;
  swift_retain();
  v24 = ConceptsDataSource.init(arrangedSections:isHidden:)(MEMORY[0x1E0DEE9D8], 0);
  v25 = v24;
  v26 = (void *)v24[9];
  if (v26)
  {
    v27 = (void *)v24[5];
    swift_retain_n();
    v28 = v26;
    if ((objc_msgSend(v27, sel_isLowUtility) & 1) != 0)
    {

      v29 = 1;
    }
    else
    {
      v30 = v28;
      v29 = sub_1BC585298();

    }
  }
  else
  {
    swift_retain_n();
    v29 = 1;
  }
  sub_1BC546A60(v29 & 1);
  swift_release();
  v63 = (id)sub_1BC62BA68();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v64 = (id)sub_1BC62CC74();
  v49 = sub_1BC62CC38();
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868];
  v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
  v48(v16, 1, 1, v49);
  sub_1BC586D88();
  v52 = a2;
  sub_1BC586DEC();
  v47[1] = sub_1BC3ABB20();
  sub_1BC62C080();
  sub_1BC377E3C((uint64_t)v16, (unint64_t *)&qword_1ED6A4DF0, v31);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1BC4241F4(&qword_1EF433110, (unint64_t *)&qword_1EF4330E8, (void (*)(uint64_t))sub_1BC586D88, (void (*)(void))sub_1BC586DEC);
  sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v20, v18);
  swift_beginAccess();
  sub_1BC62BEA0();
  swift_endAccess();
  swift_release();
  v32 = v25[8];
  v33 = (_QWORD *)swift_allocObject();
  v34 = v51;
  v33[2] = v51;
  v33[3] = 0;
  v33[4] = v32;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = sub_1BC4959F8;
  *(_QWORD *)(v35 + 24) = v33;
  v36 = MEMORY[0x1E0C960D8];
  sub_1BC586CE8(0, &qword_1EF432048, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC586C10(&qword_1EF432058, &qword_1EF432048, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v36, MEMORY[0x1E0C96108]);
  swift_retain_n();
  v37 = v34;
  v38 = v53;
  sub_1BC62BF78();
  sub_1BC379B20(&qword_1EF432060, 255, (uint64_t (*)(uint64_t))sub_1BC495884, MEMORY[0x1E0C96148]);
  v39 = v55;
  v40 = (void *)sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v39);
  swift_release();
  v63 = v40;
  v64 = 0;
  v41 = MEMORY[0x1E0C95D78];
  sub_1BC586CE8(0, &qword_1EF437600, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC586C10(&qword_1EF437608, &qword_1EF437600, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v41, MEMORY[0x1E0C95D90]);
  v42 = v57;
  sub_1BC62C014();
  swift_release();
  v63 = (id)sub_1BC62CC74();
  v48(v16, 1, 1, v49);
  sub_1BC586D68();
  v44 = v59;
  v43 = v60;
  sub_1BC62C080();
  sub_1BC377E3C((uint64_t)v16, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v44);
  swift_allocObject();
  swift_weakInit();
  sub_1BC4241F4((unint64_t *)&unk_1EF437620, &qword_1EF437610, (void (*)(uint64_t))sub_1BC586C50, (void (*)(void))sub_1BC586D68);
  v45 = v62;
  sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v45);
  swift_beginAccess();
  sub_1BC62BEA0();
  swift_endAccess();
  swift_release();
  swift_release();

  swift_release();
  return v25;
}

uint64_t sub_1BC585D08()
{
  uint64_t result;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5[5];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    swift_retain();
    sub_1BC62AF4C();
    swift_release();
    sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC62B288();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
    v2 = *(void **)(v1 + 40);
    v3 = sub_1BC62BA50();
    sub_1BC585F8C(v2, v3 & 1, v5);
    sub_1BC542598(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BC639590;
    sub_1BC34E674((uint64_t)v5, v4 + 32);
    sub_1BC62B270();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
    sub_1BC62B2D0();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC585EA4(void **a1)
{
  void *v1;
  uint64_t result;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  char v9;
  id v10;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    if (v1)
    {
      v4 = *(void **)(result + 72);
      *(_QWORD *)(result + 72) = v1;
      v5 = v1;

    }
    v6 = *(void **)(v3 + 72);
    if (v6)
    {
      v7 = *(void **)(v3 + 40);
      swift_retain();
      v8 = v6;
      if ((objc_msgSend(v7, sel_isLowUtility) & 1) != 0)
      {

        v9 = 1;
      }
      else
      {
        v10 = v8;
        v9 = sub_1BC585298();

      }
    }
    else
    {
      swift_retain();
      v9 = 1;
    }
    sub_1BC546A60(v9 & 1);
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1BC585F8C@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v6 = swift_allocObject();
  swift_weakInit();
  v7 = type metadata accessor for PinnedConceptItem();
  v8 = swift_allocObject();
  type metadata accessor for PinnedConceptCell();
  sub_1BC379B20(&qword_1EF4375E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for PinnedConceptCell, (uint64_t)&unk_1BC649AF4);
  v9 = a1;
  swift_retain();
  *(_QWORD *)(v8 + 16) = sub_1BC62ADA8();
  *(_QWORD *)(v8 + 24) = v10;
  *(_QWORD *)(v8 + 32) = v9;
  *(_BYTE *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 48) = sub_1BC586BA4;
  *(_QWORD *)(v8 + 56) = v6;
  swift_release();
  a3[3] = v7;
  result = sub_1BC379B20(&qword_1EF4375F0, v11, (uint64_t (*)(uint64_t))type metadata accessor for PinnedConceptItem, (uint64_t)&unk_1BC649098);
  a3[4] = result;
  *a3 = v8;
  return result;
}

uint64_t sub_1BC5860AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t inited;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v0 = sub_1BC62BABC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    v9 = sub_1BC62BA2C();
    if (v9 >> 62)
      v10 = sub_1BC62D3B8();
    else
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (!v10)
    {
      v11 = *(void **)(v8 + 56);
      type metadata accessor for OnboardingTileAppearanceManager();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = v11;
      v13 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
      v14 = v11;
      v15 = (void *)sub_1BC62C650();
      v16 = objc_msgSend(v13, sel_initWithCategory_domainName_healthStore_, 0, v15, v14);

      *(_QWORD *)(inited + 24) = v16;
      swift_storeEnumTagMultiPayload();
      sub_1BC370C18(1, (uint64_t)v6);
      swift_release();
      swift_release();
      sub_1BC42418C((uint64_t)v6);
    }
    ListConceptManager.togglePinState(for:onCommitHandler:)(*(void **)(v8 + 40), 0, 0, (uint64_t)v3);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if (qword_1ED6A3198 != -1)
      swift_once();
    v17 = *(_QWORD *)(v8 + 40);
    v18 = *(_QWORD *)(v8 + 48);
    v20 = 0;
    v21 = 1;
    sub_1BC4E4C94(v17, v18, 3, 1, &v20);
    return swift_release();
  }
  return result;
}

void sub_1BC5862F8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC586324()
{
  id *v0;

  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

id *sub_1BC586360()
{
  id *v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC5863B4()
{
  sub_1BC586360();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PinnedConceptDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1BC5863F4()
{
  MEMORY[0x1BCCF35C4](&unk_1BC649068);
  return sub_1BC62B834();
}

uint64_t sub_1BC586440()
{
  type metadata accessor for PinnedConceptCell();
  sub_1BC379B20(&qword_1EF4375E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for PinnedConceptCell, (uint64_t)&unk_1BC649AF4);
  sub_1BC62CB48();
  sub_1BC62B60C();
  return sub_1BC62CB54();
}

uint64_t sub_1BC5864B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t result;
  id v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  _QWORD v27[2];

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v10);
  if (sub_1BC62C680() == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v13 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
LABEL_13:
    if (qword_1ED6A4888 != -1)
      swift_once();
    v20 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC62BD44();
    v21 = sub_1BC62AD3C();
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
    swift_allocObject();
    v23 = sub_1BC62AD24();
    a3[3] = v21;
    result = sub_1BC379B20((unint64_t *)&qword_1ED6A4108, 255, v22, MEMORY[0x1E0D2A8A0]);
    a3[4] = result;
    *a3 = v23;
    return result;
  }
  if (sub_1BC62C680() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      v17 = sub_1BC62AE20();
      v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v17;
      a3[4] = sub_1BC379B20(&qword_1EF42A050, 255, v18, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC62AE14();
    }
  }
  v24 = sub_1BC62BA50();
  sub_1BC586844(v24 & 1);
  v27[0] = 0x74497265746F6F46;
  v27[1] = 0xEB000000005F6D65;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v25 = sub_1BC62B624();
  v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
  a3[3] = v25;
  a3[4] = sub_1BC379B20(&qword_1EF42A058, 255, v26, MEMORY[0x1E0D2B6A8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC62B618();
}

uint64_t sub_1BC586844(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  id v12;
  uint64_t v13;
  id v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  if ((a1 & 1) != 0)
  {
    v5 = sub_1BC62A820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    sub_1BC542598(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BC639590;
    v7 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v8 = objc_msgSend(v7, sel_preferredLocalizations);

    v9 = MEMORY[0x1E0DEA968];
    v10 = sub_1BC62C878();

    v11 = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v10);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 + 56) = v9;
    *(_QWORD *)(v6 + 64) = sub_1BC3644C0();
    *(Swift::String *)(v6 + 32) = v11;
    if (qword_1ED6A4888 != -1)
      swift_once();
    v12 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    v13 = sub_1BC62C6A4();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC377E3C((uint64_t)v4, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    return v13;
  }
  else
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v15 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v16 = sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    return v16;
  }
}

uint64_t sub_1BC586B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BC5864B0(a1, a2, a3);
}

uint64_t sub_1BC586B54(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF4375E0, a2, (uint64_t (*)(uint64_t))type metadata accessor for PinnedConceptDataSource, (uint64_t)&unk_1BC649038);
}

uint64_t sub_1BC586B80()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC586BA4()
{
  return sub_1BC5860AC();
}

void sub_1BC586BAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432050)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1EF42CFA8);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432050);
  }
}

uint64_t sub_1BC586C10(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC586CE8(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC586C50()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF4375F8)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC586CE8(255, &qword_1EF437600, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC586C10(&qword_1EF437608, &qword_1EF437600, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC62BDF8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF4375F8);
  }
}

void sub_1BC586CE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC586BAC();
    v7 = v6;
    v8 = sub_1BC35817C(255, (unint64_t *)&qword_1ED6A59C0);
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC586D68()
{
  return sub_1BC379B20(&qword_1EF437618, 255, (uint64_t (*)(uint64_t))sub_1BC586C50, MEMORY[0x1E0C957E8]);
}

void sub_1BC586D88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4330F0)
  {
    sub_1BC62BABC();
    v0 = sub_1BC62BE94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4330F0);
  }
}

uint64_t sub_1BC586DEC()
{
  return sub_1BC379B20(&qword_1EF4330F8, 255, (uint64_t (*)(uint64_t))sub_1BC586D88, MEMORY[0x1E0C95D90]);
}

uint64_t sub_1BC586E0C()
{
  return sub_1BC585D08();
}

uint64_t sub_1BC586E14()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC586E48()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC586E6C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BC495040(*(void (**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1BC586E74(void **a1)
{
  return sub_1BC585EA4(a1);
}

id sub_1BC586E7C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.78, 0.78, 0.8, 0.5);
  qword_1EF45A030 = (uint64_t)result;
  return result;
}

id SignedClinicalDataPreviewViewController.__allocating_init(records:importer:)(unint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return SignedClinicalDataPreviewViewController.init(records:importer:)(a1, a2);
}

uint64_t sub_1BC586F0C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC505EE8();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BC589C20(v6);
  return sub_1BC62D274();
}

id sub_1BC587038()
{
  return sub_1BC405B94(type metadata accessor for SignedClinicalDataPreviewTableViewCell);
}

id sub_1BC587044()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController____lazy_storage___gmtDateFormatter;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController____lazy_storage___gmtDateFormatter);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController____lazy_storage___gmtDateFormatter);
  }
  else
  {
    v4 = sub_1BC5870A0();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC5870A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;

  sub_1BC357158(0, &qword_1EF4376B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - v1;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v3, sel_setDateStyle_, 3);
  objc_msgSend(v3, sel_setTimeStyle_, 0);
  sub_1BC62A904();
  v4 = sub_1BC62A91C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) != 1)
  {
    v6 = (void *)sub_1BC62A910();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
  }
  objc_msgSend(v3, sel_setTimeZone_, v6);

  return v3;
}

id SignedClinicalDataPreviewViewController.init(records:importer:)(unint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  objc_super v16;

  v4 = v2;
  v7 = OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_addToHealthButton;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_addToHealthButton] = 0;
  v8 = OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController____lazy_storage___gmtDateFormatter;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController____lazy_storage___gmtDateFormatter] = 0;
  type metadata accessor for SignedClinicalDataImportHandler();
  swift_allocObject();
  swift_retain();
  v9 = v4;
  v10 = sub_1BC4EF11C(a1, a2);
  if (v3)
  {
    swift_release();

    v11 = *(id *)&v4[v8];
    type metadata accessor for SignedClinicalDataPreviewViewController();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)&v9[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_handler] = v10;

    swift_retain();
    sub_1BC4EE5A8();
    swift_release();
    v12 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1BC4EE758();
    swift_release();
    v13 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    swift_retain();
    v14 = sub_1BC4EE908();
    swift_release();
    v16.receiver = v9;
    v16.super_class = (Class)type metadata accessor for SignedClinicalDataPreviewViewController();
    v11 = objc_msgSendSuper2(&v16, sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v12, v13, v14, 1);

    swift_release();
  }
  return v11;
}

uint64_t type metadata accessor for SignedClinicalDataPreviewViewController()
{
  return objc_opt_self();
}

void sub_1BC5873A4()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *ObjCClassFromMetadata;
  id v18;
  id v19;
  id v20;
  double v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  char **v28;
  uint32_t *p_ivar_base_size;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint32_t *v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  objc_super v52;

  v1 = v0;
  v52.receiver = v0;
  v52.super_class = (Class)type metadata accessor for SignedClinicalDataPreviewViewController();
  objc_msgSendSuper2(&v52, sel_viewDidLoad);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, sel_setTableView_, v2);

  v3 = objc_msgSend(v1, sel_tableView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_20;
  }
  v4 = v3;
  objc_msgSend(v3, sel_setAllowsSelection_, 0);

  v5 = objc_msgSend(v1, sel_tableView);
  if (!v5)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v6 = v5;
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_systemBackgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v8);

  v9 = objc_msgSend(v1, sel_tableView);
  if (!v9)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v10 = v9;
  objc_msgSend(v9, sel_setSeparatorStyle_, 0);

  v11 = objc_msgSend(v1, sel_tableView);
  if (!v11)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = v11;
  objc_msgSend(v11, sel_setDataSource_, v1);

  v13 = objc_msgSend(v1, sel_tableView);
  if (!v13)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v14 = v13;
  objc_msgSend(v13, sel_setDelegate_, v1);

  v15 = objc_msgSend(v1, sel_tableView);
  if (!v15)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v16 = v15;
  type metadata accessor for SignedClinicalDataPreviewTableViewCell();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v18 = objc_msgSend(ObjCClassFromMetadata, sel_defaultReuseIdentifier);
  if (!v18)
  {
    sub_1BC62C680();
    v18 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v16, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v18);

  v19 = objc_msgSend(v1, sel_headerView);
  objc_msgSend(v19, sel_setAllowFullWidthIcon_, 1);

  v20 = objc_msgSend(v1, sel_headerView);
  LODWORD(v21) = 1036831949;
  objc_msgSend(v20, sel_setTitleHyphenationFactor_, v21);

  v22 = objc_msgSend(v1, sel_headerView);
  v23 = (void *)sub_1BC62C86C();
  v24 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v22, sel_setAccessibilityIdentifier_, v24);
  v25 = objc_msgSend(v1, sel_navigationController);
  objc_msgSend(v25, sel_setNavigationBarHidden_, 1);

  v26 = objc_msgSend(v1, sel_navigationController);
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v26, sel_setModalInPresentation_, 1);

  }
  v28 = &selRef_predicateWithFormat_;
  p_ivar_base_size = (_DWORD *)(&HRConceptTitleTableHeaderView__metaData + 8);
  if (*(_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_handler]
                + 16))
  {
    v30 = objc_msgSend((id)objc_opt_self(), sel_accessoryButton);
    v31 = objc_msgSend(v7, sel_systemBlueColor);
    objc_msgSend(v30, sel_setTintColor_, v31);

    if (qword_1EF428568 != -1)
      swift_once();
    v32 = (id)qword_1EF42F6E0;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v33 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v28 = &selRef_predicateWithFormat_;
    objc_msgSend(v30, sel_setTitle_forState_, v33, 0, 0xE000000000000000);

    p_ivar_base_size = &HRConceptTitleTableHeaderView__metaData.ivar_base_size;
    objc_msgSend(v30, sel_addTarget_action_forControlEvents_, v1, sel_learnMoreButtonTapped_, 64);
    v34 = objc_msgSend(v1, sel_headerView);
    objc_msgSend(v34, sel_addAccessoryButton_, v30);

  }
  v35 = objc_msgSend((id)objc_opt_self(), sel_boldButton);
  v36 = objc_msgSend(v7, sel_systemBlueColor);
  objc_msgSend(v35, sel_setTintColor_, v36);

  sub_1BC4EEF60();
  v37 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, v28[357], v37, 0);

  objc_msgSend(v35, *((SEL *)p_ivar_base_size + 369), v1, sel_addRecords, 64);
  v38 = (void *)sub_1BC62C86C();
  v39 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v35, sel_setAccessibilityIdentifier_, v39);
  v40 = objc_msgSend(v1, sel_buttonTray);
  objc_msgSend(v40, sel_addButton_, v35);

  v41 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_addToHealthButton];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_addToHealthButton] = v35;
  v42 = v35;

  v43 = objc_msgSend((id)objc_opt_self(), sel_linkButton);
  v44 = p_ivar_base_size;
  if (qword_1EF428588 != -1)
    swift_once();
  v45 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v46 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v43, (SEL)v28 + 456, v46, 0, 0xE000000000000000);

  objc_msgSend(v43, (SEL)v44 + 258, v1, sel_dismissPreview, 64);
  v47 = (void *)sub_1BC62C86C();
  v48 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v43, sel_setAccessibilityIdentifier_, v48);
  v49 = objc_msgSend(v1, sel_buttonTray);
  objc_msgSend(v49, sel_addButton_, v43);

  v50 = objc_msgSend(v1, sel_tableView);
  if (v50)
  {
    v51 = v50;
    objc_msgSend(v50, sel_reloadData);

    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t type metadata accessor for SignedClinicalDataPreviewTableViewCell()
{
  return objc_opt_self();
}

id sub_1BC587C08(char a1)
{
  char *v1;
  id v3;
  void *v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for SignedClinicalDataPreviewViewController();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setNavigationBarHidden_, 1);

  }
  result = objc_msgSend(v1, sel_isMovingToParentViewController);
  if ((_DWORD)result)
  {
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_handler];
    v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    if (*(_QWORD *)(v6 + 32))
    {
      v8 = swift_allocObject();
      swift_weakInit();
      swift_retain_n();
      v9 = swift_retain();
      sub_1BC471488(v9, v8, (uint64_t)sub_1BC587FB8, v7);
      swift_release_n();
      swift_release();
      swift_release();
    }
    else
    {
      swift_beginAccess();

    }
    return (id)swift_release();
  }
  return result;
}

void sub_1BC587D68(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v4 = sub_1BC62C47C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62C4AC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = (void *)MEMORY[0x1BCCF37A4](a2 + 16);
  if (v12)
  {
    v13 = v12;
    if ((a1 & 1) != 0)
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
      v18 = sub_1BC62CC74();
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v13;
      aBlock[4] = sub_1BC364574;
      aBlock[5] = v14;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC39BE70;
      aBlock[3] = &block_descriptor_16_0;
      v15 = _Block_copy(aBlock);
      v16 = v13;
      swift_release();
      sub_1BC62C494();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_1BC36457C();
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC35811C();
      sub_1BC62D0A0();
      v17 = (void *)v18;
      MEMORY[0x1BCCF1F68](0, v11, v7, v15);
      _Block_release(v15);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {

    }
  }
}

uint64_t sub_1BC587F94()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC587FB8(char a1)
{
  uint64_t v1;

  sub_1BC587D68(a1, v1);
}

uint64_t sub_1BC587FC0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC588024(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v4 = sub_1BC62C47C();
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62C4AC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v11 = (void *)sub_1BC62CC74();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  aBlock[4] = sub_1BC58AF48;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_62;
  v13 = _Block_copy(aBlock);
  sub_1BC4F162C(a1);
  v14 = a2;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC36457C();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1BC588224(unint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;

  if (a1 >> 61 == 3)
  {
    v4 = (id)(a1 & 0x1FFFFFFFFFFFFFFFLL);
    sub_1BC588608((void *)(a1 & 0x1FFFFFFFFFFFFFFFLL));
    v5 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_addToHealthButton);
    if (v5)
    {
      objc_msgSend(v5, sel_hidesBusyIndicator);
      sub_1BC4F165C(a1);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1BC588474(a1);
  }
}

void sub_1BC58833C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  id v7;
  void *v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_1BC62C4D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v5 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v7 = objc_msgSend(v1, sel_presentingViewController);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC588474(unint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;

  v2 = v1;
  v4 = sub_1BC62C4D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v7 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v9 = swift_bridgeObjectRetain();
    v10 = (void *)sub_1BC5D9F24(v9);
    swift_bridgeObjectRelease();
    if (v10)
    {
      v11 = v10;
      v12 = sub_1BC62CDA0();
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0;
    }
    objc_allocWithZone((Class)type metadata accessor for SignedClinicalDataRecordAddedViewController());
    sub_1BC4F162C(a1);
    v15 = sub_1BC529AB0(a1, v12, v14);
    v16 = objc_msgSend(v2, sel_navigationController);
    if (v16)
    {
      v17 = v16;
      objc_msgSend(v16, sel_pushViewController_animated_, v15, 1);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC588608(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;

  v2 = v1;
  v4 = sub_1BC62C4D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v7 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_1EF428588 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v9 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v10 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v11 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (a1)
    a1 = (void *)sub_1BC62A550();
  v13 = objc_msgSend((id)objc_opt_self(), sel_basicAlertControllerWithTitle_message_internalError_, v11, v12, a1);

  objc_msgSend(v2, sel_presentViewController_animated_completion_, v13, 1, 0);
}

void sub_1BC588884()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;

  if (qword_1EF428588 != -1)
    swift_once();
  v0 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v1 = objc_allocWithZone(MEMORY[0x1E0D651A8]);
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithTitle_, v2, 0xE000000000000000);

  v4 = (void *)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v5 = v4;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_addSectionWithHeader_content_, 0, v6, 0xE000000000000000);

  v7 = (void *)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v8 = v7;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_addSectionWithHeader_content_, 0, v9, 0xE000000000000000);

  v10 = (void *)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v11 = v10;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v12 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_addSectionWithHeader_content_, 0, v12, 0xE000000000000000);

  v13 = (void *)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v14 = v13;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v15 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_addSectionWithHeader_content_, 0, v15, 0xE000000000000000);

  swift_arrayDestroy();
  v16 = objc_msgSend(v3, sel_navigationItem);
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v19, sel_dismissAnimated_);
  objc_msgSend(v16, sel_setRightBarButtonItem_, v17);

  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D65180]), sel_initWithRootViewController_, v3);
  objc_msgSend(v19, sel_showViewController_sender_, v18, v19);

}

uint64_t sub_1BC588DB4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_handler)
                 + 24);
  if (!(v1 >> 62))
    return *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v3 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1BC588EB0(void *a1, id a2)
{
  char *v2;
  char *v3;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  unint64_t v41;
  unint64_t v42;

  v3 = v2;
  type metadata accessor for SignedClinicalDataPreviewTableViewCell();
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultReuseIdentifier);
  if (!v6)
  {
    sub_1BC62C680();
    v6 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  v7 = (void *)sub_1BC62A928();
  v8 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v6, v7);

  v9 = (void *)swift_dynamicCastClassUnconditional();
  v10 = *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_handler]
                  + 24);
  swift_bridgeObjectRetain();
  v11 = sub_1BC62A964();
  if ((v10 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = *(id *)(v10 + 8 * v11 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_20;
  }
  v12 = (id)MEMORY[0x1BCCF24CC](v11, v10);
LABEL_7:
  v6 = v12;
  swift_bridgeObjectRelease();
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v13 + 32) = 0x74726F706D49;
  *(_QWORD *)(v13 + 40) = 0xE600000000000000;
  *(_QWORD *)(v13 + 48) = 0x4377656976657250;
  *(_QWORD *)(v13 + 56) = 0xEB000000006C6C65;
  v14 = v8;
  v42 = sub_1BC62A94C();
  sub_1BC359F98();
  *(_QWORD *)(v13 + 64) = sub_1BC62D07C();
  *(_QWORD *)(v13 + 72) = v15;
  v16 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v17 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v9, sel_setBaseAccessibilityIdentifier_, v17);
  v18 = v14;
  v19 = objc_msgSend(v6, sel_recordTypeDisplayName);
  if (!v19)
  {
    sub_1BC62C680();
    v19 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v9, sel_setPrimaryText_, v19);

  a2 = v18;
  v20 = objc_msgSend(v6, sel_items);
  sub_1BC34B6A0(0, &qword_1EF42CFE0);
  v21 = sub_1BC62C878();

  if ((v21 & 0x8000000000000000) == 0 && (v21 & 0x4000000000000000) == 0)
  {
    v22 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
LABEL_20:
  v41 = swift_bridgeObjectRetain();
  v22 = (uint64_t)sub_1BC3D74D8(v41);
  swift_bridgeObjectRelease();
LABEL_12:
  v42 = v22;
  sub_1BC586F0C((uint64_t *)&v42);
  swift_bridgeObjectRelease();
  v23 = v42;
  v24 = v3;
  sub_1BC58AB24(v23, (uint64_t)v24);
  swift_release();

  sub_1BC34B6A0(0, &qword_1EF437650);
  v25 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setDetailItems_, v25);

  v26 = a2;
  v27 = sub_1BC5DA01C();
  objc_msgSend(v9, sel_setSecondaryAttributedText_, v27);

  v28 = v26;
  v29 = objc_msgSend(v6, sel_subject);
  v30 = objc_msgSend(v29, sel_fullName);

  if (!v30)
  {
    sub_1BC62C680();
    v30 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v9, sel_setPatientName_, v30);

  v31 = objc_msgSend(v6, sel_subject);
  v32 = objc_msgSend(v31, sel_birthDate);

  if (v32)
  {
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BC639590;
    v34 = v28;
    v35 = objc_msgSend(v32, sel_displayString);
    v36 = sub_1BC62C680();
    v38 = v37;

    *(_QWORD *)(v33 + 32) = v36;
    *(_QWORD *)(v33 + 40) = v38;
    v39 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setPatientDetails_, v39);

  }
  return v9;
}

uint64_t sub_1BC589488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;

  if (a2)
    return 0;
  if (qword_1EF428588 != -1)
    swift_once();
  v3 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v2;
}

double sub_1BC589674()
{
  return *MEMORY[0x1E0DC53D8];
}

double sub_1BC589718(uint64_t a1, uint64_t a2)
{
  double result;

  result = *MEMORY[0x1E0DC53D8];
  if (!a2)
    return 10.0;
  return result;
}

id SignedClinicalDataPreviewViewController.__allocating_init(title:detailText:symbolName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    v10 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  v10 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v11 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
LABEL_6:
  v12 = objc_msgSend(objc_allocWithZone(v6), sel_initWithTitle_detailText_symbolName_, v9, v10, v11);

  return v12;
}

void SignedClinicalDataPreviewViewController.init(title:detailText:symbolName:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SignedClinicalDataPreviewViewController.__allocating_init(title:detailText:icon:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  objc_class *v5;
  objc_class *v6;
  void *v9;
  void *v10;
  id v11;

  v6 = v5;
  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v10 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(objc_allocWithZone(v6), sel_initWithTitle_detailText_icon_, v9, v10, a5);

  return v11;
}

void SignedClinicalDataPreviewViewController.init(title:detailText:icon:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SignedClinicalDataPreviewViewController.__allocating_init(title:detailText:symbolName:adoptTableViewScrollView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  objc_class *v7;
  objc_class *v8;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v8 = v7;
  v12 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    v13 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v14 = 0;
    goto LABEL_6;
  }
  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
LABEL_6:
  v15 = objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_adoptTableViewScrollView_, v12, v13, v14, a7 & 1);

  return v15;
}

void SignedClinicalDataPreviewViewController.init(title:detailText:symbolName:adoptTableViewScrollView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SignedClinicalDataPreviewViewController.__allocating_init(title:detailText:icon:adoptTableViewScrollView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  objc_class *v6;
  objc_class *v7;
  void *v11;
  void *v12;
  id v13;

  v7 = v6;
  v11 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v12 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v11, v12, a5, a6 & 1);

  return v13;
}

void SignedClinicalDataPreviewViewController.init(title:detailText:icon:adoptTableViewScrollView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SignedClinicalDataPreviewViewController.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for SignedClinicalDataPreviewViewController);
}

void sub_1BC589C20(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  void *v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  char v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v131 = sub_1BC62A760();
  v129 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v130 = (char *)&v117 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v117 - v4;
  v6 = a1[1];
  v7 = sub_1BC62D520();
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_134;
    if (v6)
      sub_1BC58A500(0, v6, 1, a1);
    return;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_142;
  v122 = v7;
  v119 = a1;
  if (v6 < 2)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    v133 = MEMORY[0x1E0DEE9D8];
    v127 = (id *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_101:
      v109 = v128;
      if (v15 >= 2)
      {
        v110 = *v119;
        do
        {
          v111 = v15 - 2;
          if (v15 < 2)
            goto LABEL_129;
          if (!v110)
            goto LABEL_141;
          v112 = v11;
          v113 = *(_QWORD *)&v11[16 * v111 + 32];
          v114 = *(_QWORD *)&v11[16 * v15 + 24];
          sub_1BC58A6C4((void **)(v110 + 8 * v113), (id *)(v110 + 8 * *(_QWORD *)&v11[16 * v15 + 16]), (id *)(v110 + 8 * v114), v127);
          if (v109)
            break;
          if (v114 < v113)
            goto LABEL_130;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v112 = sub_1BC504414((uint64_t)v112);
          if (v111 >= *((_QWORD *)v112 + 2))
            goto LABEL_131;
          v115 = &v112[16 * v111 + 32];
          *(_QWORD *)v115 = v113;
          *((_QWORD *)v115 + 1) = v114;
          v116 = *((_QWORD *)v112 + 2);
          if (v15 > v116)
            goto LABEL_132;
          memmove(&v112[16 * v15 + 16], &v112[16 * v15 + 32], 16 * (v116 - v15));
          v11 = v112;
          *((_QWORD *)v112 + 2) = v116 - 1;
          v15 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BC62C890();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v9 = v8 >> 1;
    sub_1BC34B6A0(0, &qword_1EF42CFE0);
    v10 = sub_1BC62C8CC();
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    v127 = (id *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v133 = v10;
  }
  v12 = 0;
  v13 = *a1;
  v14 = *a1 + 16;
  v120 = *a1 - 8;
  v121 = v14;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v125 = v6;
  v132 = v13;
  while (1)
  {
    v16 = v12 + 1;
    v124 = v12;
    if (v12 + 1 < v6)
    {
      v17 = v11;
      v18 = *(void **)(v13 + 8 * v12);
      v19 = *(id *)(v13 + 8 * v16);
      v20 = v18;
      v21 = objc_msgSend(v20, sel_relevantDate);
      sub_1BC62A724();

      v22 = objc_msgSend(v19, sel_relevantDate);
      v23 = v130;
      sub_1BC62A724();

      LODWORD(v126) = sub_1BC62A718();
      v24 = *(void (**)(char *, uint64_t))(v129 + 8);
      v25 = v23;
      v26 = v131;
      v24(v25, v131);
      v24(v5, v26);

      v6 = v125;
      v16 = v12 + 2;
      if (v12 + 2 < v6)
      {
        v27 = (id *)(v121 + 8 * v12);
        while (1)
        {
          v28 = v16;
          v29 = *(v27 - 1);
          v30 = *v27;
          v31 = v29;
          v32 = objc_msgSend(v31, sel_relevantDate);
          sub_1BC62A724();

          v33 = objc_msgSend(v30, sel_relevantDate);
          v34 = v130;
          sub_1BC62A724();

          LODWORD(v33) = sub_1BC62A718();
          v35 = v34;
          v36 = v131;
          v24(v35, v131);
          v24(v5, v36);

          if (((v126 ^ v33) & 1) != 0)
            break;
          v16 = v28 + 1;
          ++v27;
          v6 = v125;
          if (v125 == v28 + 1)
          {
            v16 = v125;
            goto LABEL_22;
          }
        }
        v6 = v125;
        v16 = v28;
LABEL_22:
        v12 = v124;
      }
      v11 = v17;
      v13 = v132;
      if ((v126 & 1) != 0)
      {
        if (v16 < v12)
          goto LABEL_135;
        if (v12 < v16)
        {
          v37 = (uint64_t *)(v120 + 8 * v16);
          v38 = v16;
          v39 = v12;
          v40 = (uint64_t *)(v132 + 8 * v12);
          do
          {
            if (v39 != --v38)
            {
              if (!v13)
                goto LABEL_140;
              v41 = *v40;
              *v40 = *v37;
              *v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v16 < v6)
    {
      if (__OFSUB__(v16, v12))
        goto LABEL_133;
      if (v16 - v12 < v122)
        break;
    }
LABEL_50:
    if (v16 < v12)
      goto LABEL_128;
    v56 = v11;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v11 = v56;
    else
      v11 = sub_1BC503AB4(0, *((_QWORD *)v56 + 2) + 1, 1, v56);
    v58 = *((_QWORD *)v11 + 2);
    v57 = *((_QWORD *)v11 + 3);
    v15 = v58 + 1;
    v13 = v132;
    if (v58 >= v57 >> 1)
    {
      v108 = sub_1BC503AB4((char *)(v57 > 1), v58 + 1, 1, v11);
      v13 = v132;
      v11 = v108;
    }
    *((_QWORD *)v11 + 2) = v15;
    v59 = v11 + 32;
    v60 = &v11[16 * v58 + 32];
    *(_QWORD *)v60 = v12;
    *((_QWORD *)v60 + 1) = v16;
    v126 = v16;
    if (v58)
    {
      while (1)
      {
        v61 = v15 - 1;
        if (v15 >= 4)
        {
          v66 = &v59[16 * v15];
          v67 = *((_QWORD *)v66 - 8);
          v68 = *((_QWORD *)v66 - 7);
          v72 = __OFSUB__(v68, v67);
          v69 = v68 - v67;
          if (v72)
            goto LABEL_117;
          v71 = *((_QWORD *)v66 - 6);
          v70 = *((_QWORD *)v66 - 5);
          v72 = __OFSUB__(v70, v71);
          v64 = v70 - v71;
          v65 = v72;
          if (v72)
            goto LABEL_118;
          v73 = v15 - 2;
          v74 = &v59[16 * v15 - 32];
          v76 = *(_QWORD *)v74;
          v75 = *((_QWORD *)v74 + 1);
          v72 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          if (v72)
            goto LABEL_120;
          v72 = __OFADD__(v64, v77);
          v78 = v64 + v77;
          if (v72)
            goto LABEL_123;
          if (v78 >= v69)
          {
            v96 = &v59[16 * v61];
            v98 = *(_QWORD *)v96;
            v97 = *((_QWORD *)v96 + 1);
            v72 = __OFSUB__(v97, v98);
            v99 = v97 - v98;
            if (v72)
              goto LABEL_127;
            v89 = v64 < v99;
            goto LABEL_87;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v90 = *((_QWORD *)v11 + 4);
            v91 = *((_QWORD *)v11 + 5);
            v72 = __OFSUB__(v91, v90);
            v83 = v91 - v90;
            v84 = v72;
            goto LABEL_81;
          }
          v63 = *((_QWORD *)v11 + 4);
          v62 = *((_QWORD *)v11 + 5);
          v72 = __OFSUB__(v62, v63);
          v64 = v62 - v63;
          v65 = v72;
        }
        if ((v65 & 1) != 0)
          goto LABEL_119;
        v73 = v15 - 2;
        v79 = &v59[16 * v15 - 32];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v82 = __OFSUB__(v80, v81);
        v83 = v80 - v81;
        v84 = v82;
        if (v82)
          goto LABEL_122;
        v85 = &v59[16 * v61];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v72 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v72)
          goto LABEL_125;
        if (__OFADD__(v83, v88))
          goto LABEL_126;
        if (v83 + v88 >= v64)
        {
          v89 = v64 < v88;
LABEL_87:
          if (v89)
            v61 = v73;
          goto LABEL_89;
        }
LABEL_81:
        if ((v84 & 1) != 0)
          goto LABEL_121;
        v92 = &v59[16 * v61];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v72 = __OFSUB__(v93, v94);
        v95 = v93 - v94;
        if (v72)
          goto LABEL_124;
        if (v95 < v83)
          goto LABEL_14;
LABEL_89:
        v100 = v61 - 1;
        if (v61 - 1 >= v15)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13)
          goto LABEL_139;
        v101 = v11;
        v102 = &v59[16 * v100];
        v103 = *(_QWORD *)v102;
        v104 = &v59[16 * v61];
        v105 = *((_QWORD *)v104 + 1);
        v106 = v128;
        sub_1BC58A6C4((void **)(v13 + 8 * *(_QWORD *)v102), (id *)(v13 + 8 * *(_QWORD *)v104), (id *)(v13 + 8 * v105), v127);
        v128 = v106;
        if (v106)
          goto LABEL_112;
        if (v105 < v103)
          goto LABEL_114;
        if (v61 > *((_QWORD *)v101 + 2))
          goto LABEL_115;
        *(_QWORD *)v102 = v103;
        *(_QWORD *)&v59[16 * v100 + 8] = v105;
        v107 = *((_QWORD *)v101 + 2);
        if (v61 >= v107)
          goto LABEL_116;
        v15 = v107 - 1;
        memmove(&v59[16 * v61], v104 + 16, 16 * (v107 - 1 - v61));
        v11 = v101;
        *((_QWORD *)v101 + 2) = v107 - 1;
        v13 = v132;
        if (v107 <= 2)
          goto LABEL_14;
      }
    }
    v15 = 1;
LABEL_14:
    v6 = v125;
    v12 = v126;
    if (v126 >= v125)
      goto LABEL_101;
  }
  if (__OFADD__(v12, v122))
    goto LABEL_136;
  if (v12 + v122 >= v6)
    v42 = v6;
  else
    v42 = v12 + v122;
  if (v42 >= v12)
  {
    if (v16 != v42)
    {
      v118 = v11;
      v43 = v120 + 8 * v16;
      v123 = v42;
      do
      {
        v44 = v16;
        v45 = *(void **)(v13 + 8 * v16);
        v126 = v43;
        while (1)
        {
          v46 = *(void **)v43;
          v47 = v45;
          v48 = v46;
          v49 = objc_msgSend(v48, sel_relevantDate);
          sub_1BC62A724();

          v50 = objc_msgSend(v47, sel_relevantDate);
          v51 = v130;
          sub_1BC62A724();

          LOBYTE(v50) = sub_1BC62A718();
          v52 = *(void (**)(char *, uint64_t))(v129 + 8);
          v53 = v51;
          v54 = v131;
          v52(v53, v131);
          v52(v5, v54);

          if ((v50 & 1) == 0)
            break;
          v13 = v132;
          if (!v132)
            goto LABEL_138;
          v55 = *(void **)v43;
          v45 = *(void **)(v43 + 8);
          *(_QWORD *)v43 = v45;
          *(_QWORD *)(v43 + 8) = v55;
          v43 -= 8;
          if (v44 == ++v12)
            goto LABEL_43;
        }
        v13 = v132;
LABEL_43:
        v16 = v44 + 1;
        v43 = v126 + 8;
        v12 = v124;
      }
      while (v44 + 1 != v123);
      v16 = v123;
      v11 = v118;
    }
    goto LABEL_50;
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  sub_1BC62D388();
  __break(1u);
}

void sub_1BC58A500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a1;
  v7 = sub_1BC62A760();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v30 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  v27 = a2;
  if (a3 != a2)
  {
    v33 = *a4;
    v12 = v33 + 8 * a3 - 8;
LABEL_5:
    v13 = *(void **)(v33 + 8 * a3);
    v14 = v28;
    v29 = v12;
    while (1)
    {
      v15 = *(void **)v12;
      v16 = v13;
      v17 = v15;
      v18 = objc_msgSend(v17, sel_relevantDate);
      sub_1BC62A724();

      v19 = objc_msgSend(v16, sel_relevantDate);
      v20 = v30;
      sub_1BC62A724();

      LOBYTE(v19) = sub_1BC62A718();
      v21 = a3;
      v22 = *(void (**)(char *, uint64_t))(v31 + 8);
      v23 = v20;
      v24 = v32;
      v22(v23, v32);
      v22(v11, v24);
      a3 = v21;

      if ((v19 & 1) == 0)
      {
LABEL_4:
        a3 = v21 + 1;
        v12 = v29 + 8;
        if (v21 + 1 == v27)
          return;
        goto LABEL_5;
      }
      if (!v33)
        break;
      v25 = *(void **)v12;
      v13 = *(void **)(v12 + 8);
      *(_QWORD *)v12 = v13;
      *(_QWORD *)(v12 + 8) = v25;
      v12 -= 8;
      if (v21 == ++v14)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BC58A6C4(void **a1, id *a2, id *a3, id *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  id *v28;
  id *v29;
  unint64_t v30;
  id *v31;
  id *v32;
  unint64_t v33;
  id *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  id *v45;
  uint64_t result;
  uint64_t v47;
  void **v48;
  id *v49;
  unint64_t v50;
  void **v51;
  id *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void **v58;
  id *v59;

  v8 = sub_1BC62A760();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  MEMORY[0x1E0C80A78](v8);
  v54 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v52 = a3;
  v53 = (char *)&v47 - v11;
  v12 = (char *)a2 - (char *)a1;
  v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v13 = (char *)a2 - (char *)a1;
  v14 = v13 >> 3;
  v15 = (char *)a3 - (char *)a2;
  v16 = v15 / 8;
  v59 = a1;
  v49 = a4;
  v58 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_43;
    v29 = v49;
    if (v49 != a2 || &a2[v16] <= v49)
      memmove(v49, a2, 8 * v16);
    v30 = (unint64_t)&v29[v16];
    v57 = (_QWORD *)v30;
    v59 = a2;
    if (v15 < 8 || a1 >= a2)
      goto LABEL_42;
    v31 = v52 - 1;
    v32 = a2;
    v48 = a1;
    while (1)
    {
      v52 = a2;
      v50 = v30;
      v51 = v31 + 1;
      v34 = (id *)(v30 - 8);
      v35 = *--v32;
      v36 = *(id *)(v30 - 8);
      v37 = v35;
      v38 = objc_msgSend(v37, sel_relevantDate);
      v39 = v53;
      sub_1BC62A724();

      v40 = objc_msgSend(v36, sel_relevantDate);
      v41 = v54;
      sub_1BC62A724();

      LOBYTE(v40) = sub_1BC62A718();
      v42 = *(void (**)(char *, uint64_t))(v55 + 8);
      v43 = v41;
      v44 = v56;
      v42(v43, v56);
      v42(v39, v44);

      if ((v40 & 1) != 0)
        break;
      v57 = v34;
      v32 = v52;
      if ((unint64_t)v51 < v50 || (unint64_t)v31 >= v50)
      {
        *v31 = *v34;
        v30 = (unint64_t)v34;
        goto LABEL_30;
      }
      v33 = (unint64_t)v48;
      v45 = v49;
      if (v51 != (void **)v50)
        *v31 = *v34;
      v30 = (unint64_t)v34;
      if (v34 <= v45)
        goto LABEL_42;
LABEL_31:
      --v31;
      a2 = v32;
      if ((unint64_t)v32 <= v33)
        goto LABEL_42;
    }
    v30 = v50;
    if (v51 != v52 || v31 >= v52)
      *v31 = *v32;
    v59 = v32;
LABEL_30:
    v33 = (unint64_t)v48;
    if (v30 <= (unint64_t)v49)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    v17 = v49;
    if (v49 != a1 || &a1[v14] <= v49)
      memmove(v49, a1, 8 * v14);
    v51 = &v17[v14];
    v57 = v51;
    if (v12 >= 8 && a2 < v52)
    {
      v18 = v53;
      do
      {
        v19 = *v17;
        v20 = *a2;
        v21 = v19;
        v22 = objc_msgSend(v21, sel_relevantDate);
        sub_1BC62A724();

        v23 = objc_msgSend(v20, sel_relevantDate);
        v24 = v54;
        sub_1BC62A724();

        LOBYTE(v23) = sub_1BC62A718();
        v25 = *(void (**)(char *, uint64_t))(v55 + 8);
        v26 = v24;
        v27 = v56;
        v25(v26, v56);
        v25(v18, v27);

        if ((v23 & 1) != 0)
        {
          v28 = a2 + 1;
          if (a1 < a2 || a1 >= v28 || a1 != a2)
            *a1 = *a2;
        }
        else
        {
          if (a1 != v17)
            *a1 = *v17;
          v58 = ++v17;
          v28 = a2;
        }
        v59 = ++a1;
        if (v17 >= v51)
          break;
        a2 = v28;
      }
      while (v28 < v52);
    }
LABEL_42:
    sub_1BC503C80(&v59, &v58, &v57);
    return 1;
  }
LABEL_43:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC58AB24(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  char *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v33 = a2;
  v5 = sub_1BC62A760();
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x1E0C80A78](v5);
  v30 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_1BC62D3B8())
  {
    v26 = v3;
    v27 = v7;
    v28 = a1;
    v29 = a1 & 0xC000000000000001;
    for (i = 4; ; ++i)
    {
      v3 = i - 4;
      v9 = v29 ? (id)MEMORY[0x1BCCF24CC](i - 4, a1) : *(id *)(a1 + 8 * i);
      v10 = v9;
      v11 = i - 3;
      if (__OFADD__(v3, 1))
        break;
      v12 = objc_msgSend(v9, sel_primaryConcept);
      sub_1BC3B3FC0();
      v14 = v13;

      v15 = sub_1BC587044();
      v16 = objc_msgSend(v10, sel_relevantDate);
      v17 = v30;
      sub_1BC62A724();

      v18 = (void *)sub_1BC62A700();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v32);
      v19 = objc_msgSend(v15, sel_stringFromDate_, v18);

      sub_1BC62C680();
      if (v14)
      {
        v20 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
      }
      else
      {
        v20 = 0;
      }
      v21 = v27;
      v22 = objc_allocWithZone(MEMORY[0x1E0D2F7D0]);
      v23 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v24 = objc_msgSend(v22, sel_initWithPrimaryText_secondaryText_, v20, v23);

      if (v24)
      {
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();
      }
      a1 = v28;
      if (v11 == v21)
      {
        swift_bridgeObjectRelease();
        return v34;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t method lookup function for SignedClinicalDataPreviewViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.__allocating_init(records:importer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.numberOfSections(in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:numberOfRowsInSection:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:cellForRowAt:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:titleForHeaderInSection:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:titleForFooterInSection:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:estimatedHeightForRowAt:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:heightForHeaderInSection:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:heightForFooterInSection:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:viewForFooterInSection:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t sub_1BC58AF14(unint64_t a1)
{
  uint64_t v1;

  return sub_1BC588024(a1, *(void **)(v1 + 16));
}

uint64_t sub_1BC58AF1C()
{
  uint64_t v0;

  sub_1BC4F165C(*(_QWORD *)(v0 + 16));

  return swift_deallocObject();
}

void sub_1BC58AF48()
{
  uint64_t v0;

  sub_1BC588224(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_59(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_59()
{
  return swift_release();
}

uint64_t sub_1BC58AF68()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC58AF98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for BrowseCategory();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v24 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v24 - v10;
  sub_1BC347F0C(&qword_1ED6A5438, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t)&protocol conformance descriptor for BrowseCategory);
  result = sub_1BC62C9F8();
  v13 = 0;
  v14 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v25 = result;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18)
      goto LABEL_23;
    v22 = *(_QWORD *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        goto LABEL_23;
      v22 = *(_QWORD *)(v24 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          goto LABEL_23;
        v22 = *(_QWORD *)(v24 + 8 * v13);
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v18)
            goto LABEL_23;
          v22 = *(_QWORD *)(v24 + 8 * v13);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_1BC35EBE0(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    sub_1BC375724((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    sub_1BC48F928((uint64_t)v9, (uint64_t)v6);
    result = sub_1BC348D78((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  }
  v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      goto LABEL_23;
    v22 = *(_QWORD *)(v24 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t Date.medicalDateAdjustedToCurrentCalendar()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(unint64_t, _QWORD, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v27 = a1;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v25 - v2;
  v3 = sub_1BC62A478();
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62A8D4();
  v29 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - v10;
  v12 = objc_msgSend((id)objc_opt_self(), sel_referenceCalendar);
  sub_1BC62A874();

  sub_1BC357158(0, &qword_1EF429B18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = sub_1BC62A8C8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BC649140;
  v18 = v17 + v16;
  v19 = *(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104);
  v19(v18, *MEMORY[0x1E0CB1138], v13);
  v19(v18 + v15, *MEMORY[0x1E0CB1158], v13);
  v19(v18 + 2 * v15, *MEMORY[0x1E0CB1160], v13);
  v19(v18 + 3 * v15, *MEMORY[0x1E0CB1130], v13);
  v19(v18 + 4 * v15, *MEMORY[0x1E0CB1140], v13);
  v20 = v28;
  v19(v18 + 5 * v15, *MEMORY[0x1E0CB1178], v13);
  v19(v18 + 6 * v15, *MEMORY[0x1E0CB1188], v13);
  sub_1BC58C01C(v17, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], &qword_1EF42CB08, MEMORY[0x1E0CB11D0], (void (*)(char *, char *))sub_1BC48E7DC);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BC62A85C();
  swift_bridgeObjectRelease();
  sub_1BC62A8A4();
  sub_1BC62A880();
  v21 = *(void (**)(char *, uint64_t))(v29 + 8);
  v21(v9, v6);
  v22 = sub_1BC62A760();
  v23 = *(_QWORD *)(v22 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
    v21(v11, v6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v27, v20, v22);
  }
  return result;
}

uint64_t static Date.startOfToday.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v0 = sub_1BC62A760();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC62A8D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A8A4();
  sub_1BC62A730();
  sub_1BC62A844();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t static Date.endOfToday.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, _QWORD, uint64_t);
  void (*v19)(char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a1;
  v1 = sub_1BC62A8C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - v6;
  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - v13;
  v15 = sub_1BC62A8D4();
  v23 = *(_QWORD *)(v15 - 8);
  v24 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A8A4();
  sub_1BC62A730();
  sub_1BC62A844();
  v18 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v18(v4, *MEMORY[0x1E0CB1130], v1);
  sub_1BC62A88C();
  v19 = *(void (**)(char *, uint64_t))(v2 + 8);
  v26 = v1;
  v19(v4, v1);
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v11, v8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v22 = v26;
    v18(v4, *MEMORY[0x1E0CB1188], v26);
    sub_1BC62A88C();
    v19(v4, v22);
    v20(v7, v8);
    v20(v14, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v17, v24);
  }
  return result;
}

uint64_t sub_1BC58B89C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  _QWORD v8[9];
  uint64_t v9;
  _OWORD v10[4];
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BC35E728();
  result = sub_1BC62C9F8();
  v9 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      v5 = *(_OWORD *)(v4 + 48);
      v10[2] = *(_OWORD *)(v4 + 32);
      v10[3] = v5;
      v11 = *(_QWORD *)(v4 + 64);
      v6 = *(_OWORD *)(v4 + 16);
      v10[0] = *(_OWORD *)v4;
      v10[1] = v6;
      sub_1BC359A94((uint64_t)v10);
      sub_1BC48DB6C((uint64_t)v8, (unsigned __int8 *)v10);
      v7 = (void *)v8[1];

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v4 += 72;
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_1BC58B978(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  char v38;
  _QWORD *v39;
  _QWORD *v40;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v60 = (uint64_t *)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x1E0C80A78](v4);
  v59 = (uint64_t *)((char *)&v53 - v7);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v53 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v53 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (uint64_t *)((char *)&v53 - v15);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v53 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v58 = (uint64_t)&v53 - v21;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v53 - v22;
  v24 = *(_QWORD *)(a1 + 16);
  sub_1BC347F0C(&qword_1EF42C9A0, v25, (uint64_t)&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryItem);
  v26 = sub_1BC62C9F8();
  v56 = v24;
  if (!v24)
    return v26;
  v53 = v2;
  v27 = 0;
  v55 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v63 = *(_QWORD *)(v3 + 72);
  v28 = v26;
  v54 = v19;
LABEL_5:
  v57 = v27;
  sub_1BC35EBE0(v55 + v63 * v27, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  sub_1BC62C740();
  v30 = sub_1BC62D6AC();
  v31 = -1 << *(_BYTE *)(v28 + 32);
  v32 = v30 & ~v31;
  v62 = v28;
  v33 = v28 + 56;
  if (((*(_QWORD *)(v28 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
  {
    v61 = ~v31;
    do
    {
      v36 = v16;
      v19 = v13;
      sub_1BC35EBE0(*(_QWORD *)(v62 + 48) + v32 * v63, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if (*((_QWORD *)v10 + 2) == *((_QWORD *)v23 + 2) && *((_QWORD *)v10 + 3) == *((_QWORD *)v23 + 3))
      {
        v39 = v59;
        sub_1BC35EBE0((uint64_t)v10, (uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        v40 = v60;
        sub_1BC35EBE0((uint64_t)v23, (uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      }
      else
      {
        v38 = sub_1BC62D574();
        v39 = v59;
        sub_1BC35EBE0((uint64_t)v10, (uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        v40 = v60;
        sub_1BC35EBE0((uint64_t)v23, (uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if ((v38 & 1) == 0)
        {
          sub_1BC348D78((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          sub_1BC348D78((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          sub_1BC348D78((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          goto LABEL_8;
        }
      }
      if (*v39 == *v40 && v39[1] == v40[1])
      {
        sub_1BC348D78((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC348D78((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC348D78((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_3:
        v29 = v62;
        swift_bridgeObjectRelease();
        v13 = v19;
        v16 = v36;
        v28 = v29;
LABEL_4:
        v27 = v57 + 1;
        sub_1BC348D78((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if (v27 == v56)
          return v28;
        goto LABEL_5;
      }
      v34 = (uint64_t)v40;
      v35 = sub_1BC62D574();
      sub_1BC348D78((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC348D78(v34, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC348D78((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if ((v35 & 1) != 0)
        goto LABEL_3;
LABEL_8:
      v32 = (v32 + 1) & v61;
      v13 = v19;
      v16 = v36;
    }
    while (((*(_QWORD *)(v33 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0);
  }
  v28 = v62;
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC35EBE0((uint64_t)v23, v58, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  v64 = v28;
  if (*(_QWORD *)(v28 + 24) <= *(_QWORD *)(v28 + 16))
  {
    v19 = v54;
    if (isUniquelyReferenced_nonNull_native)
      sub_1BC3C98B0();
    else
      sub_1BC4936A0();
    v28 = v64;
    sub_1BC62D670();
    sub_1BC62C740();
    sub_1BC62C740();
    v42 = sub_1BC62D6AC();
    v43 = -1 << *(_BYTE *)(v28 + 32);
    v32 = v42 & ~v43;
    v62 = v28 + 56;
    if (((*(_QWORD *)(v28 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
      goto LABEL_39;
    v61 = ~v43;
    v44 = v58;
    while (1)
    {
      v46 = v28;
      sub_1BC35EBE0(*(_QWORD *)(v28 + 48) + v32 * v63, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if (*((_QWORD *)v19 + 2) == *(_QWORD *)(v44 + 16) && *((_QWORD *)v19 + 3) == *(_QWORD *)(v44 + 24))
      {
        sub_1BC35EBE0((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC35EBE0(v44, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      }
      else
      {
        v48 = sub_1BC62D574();
        sub_1BC35EBE0((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC35EBE0(v44, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if ((v48 & 1) == 0)
        {
          sub_1BC348D78((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          sub_1BC348D78((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          sub_1BC348D78((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          v28 = v46;
          goto LABEL_28;
        }
      }
      if (*v16 == *(_QWORD *)v13 && v16[1] == *((_QWORD *)v13 + 1))
        goto LABEL_45;
      v45 = sub_1BC62D574();
      sub_1BC348D78((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC348D78((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC348D78((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      v28 = v46;
      if ((v45 & 1) != 0)
        goto LABEL_46;
LABEL_28:
      v32 = (v32 + 1) & v61;
      v44 = v58;
      if (((*(_QWORD *)(v62 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
        goto LABEL_40;
    }
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1BC3FAF50();
    v28 = v64;
  }
LABEL_39:
  v44 = v58;
LABEL_40:
  *(_QWORD *)(v28 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v32;
  sub_1BC375724(v44, *(_QWORD *)(v28 + 48) + v32 * v63, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  v49 = *(_QWORD *)(v28 + 16);
  v50 = __OFADD__(v49, 1);
  v51 = v49 + 1;
  if (!v50)
  {
    *(_QWORD *)(v28 + 16) = v51;
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  __break(1u);
LABEL_45:
  sub_1BC348D78((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  sub_1BC348D78((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  sub_1BC348D78((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_46:
  result = sub_1BC62D5E0();
  __break(1u);
  return result;
}

uint64_t sub_1BC58BFF8(uint64_t a1)
{
  return sub_1BC58C01C(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], &qword_1EF42C7A8, MEMORY[0x1E0D2BF08], (void (*)(char *, char *))sub_1BC48E580);
}

uint64_t sub_1BC58C01C(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v22 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  sub_1BC347F0C(a3, a2, a4);
  result = sub_1BC62C9F8();
  v23 = result;
  if (v17)
  {
    v19 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v20 = *(_QWORD *)(v11 + 72);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v21(v14, v19, v10);
      a5(v16, v14);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      v19 += v20;
      --v17;
    }
    while (v17);
    return v23;
  }
  return result;
}

uint64_t sub_1BC58C148(unint64_t a1)
{
  return sub_1BC58C3C8(a1, (unint64_t *)&qword_1EF431480, 0x1E0D2EE90, &qword_1EF42C7B8, (void (*)(id *, uint64_t))sub_1BC48EA38);
}

uint64_t sub_1BC58C16C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1BC62C9F8();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1BC48ECD4(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1BC58C1DC(unint64_t a1)
{
  return sub_1BC58C3C8(a1, &qword_1ED6A58D8, 0x1E0CB6B00, (unint64_t *)&qword_1ED6A58E0, (void (*)(id *, uint64_t))sub_1BC48EDCC);
}

uint64_t sub_1BC58C200(unint64_t a1)
{
  return sub_1BC58C3C8(a1, &qword_1EF42CAD0, 0x1E0CB63D8, &qword_1EF42CAD8, (void (*)(id *, uint64_t))sub_1BC48F068);
}

uint64_t sub_1BC58C224(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for CategoryRecordQueryDescription();
  sub_1BC347F0C(&qword_1ED6A51D0, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription, (uint64_t)&protocol conformance descriptor for CategoryRecordQueryDescription);
  result = sub_1BC62C9F8();
  v4 = result;
  v9 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
    if (!v5)
      return v4;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      return v4;
  }
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x1BCCF24CC](i, a1);
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain();
      }
      sub_1BC48F304(&v8, v7);
      swift_release();
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC58C380(unint64_t a1)
{
  return sub_1BC58C3C8(a1, &qword_1ED6A48A0, 0x1E0CB6A88, (unint64_t *)&qword_1ED6A4920, (void (*)(id *, uint64_t))sub_1BC48F68C);
}

uint64_t sub_1BC58C3A4(unint64_t a1)
{
  return sub_1BC58C3C8(a1, (unint64_t *)&qword_1ED6A5990, 0x1E0CB37E8, (unint64_t *)&qword_1ED6A52F0, (void (*)(id *, uint64_t))sub_1BC48FBD0);
}

uint64_t sub_1BC58C3C8(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  uint64_t v17;

  v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  sub_1BC34B6A0(0, a2);
  sub_1BC35E2D8(a4, a2);
  result = sub_1BC62C9F8();
  v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
    if (!v11)
      return v17;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      return v17;
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = MEMORY[0x1BCCF24CC](i, a1);
        a5(&v16, v13);

      }
    }
    else
    {
      v14 = (void **)(a1 + 32);
      do
      {
        v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC58C544(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for UserDomainConceptViewData();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_1BC347F0C(&qword_1EF42CAA8, v10, (uint64_t)&protocol conformance descriptor for UserDomainConceptViewData);
  result = sub_1BC62C9F8();
  v15 = result;
  if (v9)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1BC35EBE0(v12, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      sub_1BC48FE6C((uint64_t)v8, v5);
      sub_1BC348D78((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      v12 += v13;
      --v9;
    }
    while (v9);
    return v15;
  }
  return result;
}

uint64_t sub_1BC58C664(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BC35DFC0();
  result = sub_1BC62C9F8();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1BC490214(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1BC58C6D4(dispatch_group_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t isa;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  char v37;
  NSObject *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t (*v48)(uint64_t);
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  _QWORD *v56;
  uint64_t v57;
  void *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  dispatch_group_t v62;
  uint64_t (*v63)();
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  char *v73;
  char *v74;
  uint64_t result;
  _QWORD v76[2];
  id v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  dispatch_group_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t aBlock;
  uint64_t v99;
  uint64_t (*v100)(uint64_t);
  __int128 v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;

  v83 = a4;
  v82 = a3;
  v7 = *v4;
  v8 = sub_1BC62C47C();
  v87 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v86 = (char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1BC62C4AC();
  v85 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v84 = (char *)v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1BC62C488();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v79 = (char *)v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)sub_1BC62A7B4();
  v95 = *(v12 - 1);
  v96 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  v16 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v15 + 16) = MEMORY[0x1E0DEE9D8];
  v88 = v15;
  v92 = v4;
  v90 = (_QWORD *)(v15 + 16);
  if ((a2 & 1) != 0)
  {
    isa = (unint64_t)a1[13].isa;
    if (isa)
      swift_bridgeObjectRetain();
    else
      isa = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v18 = swift_bridgeObjectRetain();
    isa = sub_1BC3D6FBC(v18);
    swift_bridgeObjectRelease();
  }
  v91 = v7;
  if (!(isa >> 62))
  {
    v19 = *(_QWORD *)((isa & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v19)
    {
      aBlock = v16;
      sub_1BC62D28C();
      goto LABEL_9;
    }
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  v65 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v65)
    goto LABEL_31;
  swift_bridgeObjectRetain();
  v19 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (v19)
  {
    aBlock = v16;
    sub_1BC62D28C();
    if ((v19 & 0x8000000000000000) == 0)
    {
LABEL_9:
      LODWORD(v93) = a2;
      v94 = a1;
      v78 = v8;
      v20 = (void *)objc_opt_self();
      v21 = 0;
      do
      {
        if ((isa & 0xC000000000000001) != 0)
          v22 = (id)MEMORY[0x1BCCF24CC](v21, isa);
        else
          v22 = *(id *)(isa + 8 * v21 + 32);
        v23 = v22;
        ++v21;
        v24 = objc_msgSend(v22, sel_identifier);
        sub_1BC62A79C();

        v25 = (void *)sub_1BC62A784();
        (*(void (**)(char *, void *))(v95 + 8))(v14, v96);
        v26 = objc_msgSend(v20, sel_predicateForRecordsFromClinicalAccountIdentifier_, v25);

        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
      }
      while (v19 != v21);
      swift_bridgeObjectRelease();
      a1 = v94;
      LOBYTE(a2) = v93;
      goto LABEL_15;
    }
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v66 = v80;
    v67 = v79;
    v68 = v81;
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v79, *MEMORY[0x1E0DEF540], v81);
    v69 = (void *)sub_1BC62CCB0();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
    v70 = swift_allocObject();
    v71 = v83;
    *(_QWORD *)(v70 + 16) = v82;
    *(_QWORD *)(v70 + 24) = v71;
    *((_QWORD *)&v101 + 1) = sub_1BC58E5D8;
    v102 = (_QWORD *)v70;
    aBlock = MEMORY[0x1E0C809B0];
    v99 = 1107296256;
    v100 = sub_1BC39BE70;
    *(_QWORD *)&v101 = &block_descriptor_36_1;
    v72 = _Block_copy(&aBlock);
    swift_retain();
    v73 = v84;
    sub_1BC62C494();
    v97 = v16;
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC370738();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
    v74 = v86;
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v73, v74, v72);
    _Block_release(v72);

    (*(void (**)(char *, uint64_t))(v87 + 8))(v74, v8);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v73, v89);
    swift_release();
    swift_release();
    v64 = 0;
    v63 = nullsub_1;
    goto LABEL_32;
  }
  v78 = v8;
  swift_bridgeObjectRelease();
LABEL_15:
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v27 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v28 = (void *)objc_opt_self();
  v29 = objc_msgSend(v28, sel_orPredicateWithSubpredicates_, v27);

  if ((a2 & 1) != 0 || (v30 = sub_1BC55CBE8()) == 0)
  {
    v36 = v29;
    v37 = 0;
  }
  else
  {
    v31 = v30;
    sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1BC639570;
    *(_QWORD *)(v32 + 32) = v29;
    *(_QWORD *)(v32 + 40) = v31;
    aBlock = v32;
    sub_1BC62C890();
    v33 = v29;
    v34 = v31;
    v35 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v36 = objc_msgSend(v28, sel_andPredicateWithSubpredicates_, v35);

    v37 = 1;
  }
  v38 = dispatch_group_create();
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = sub_1BC35DDF0(MEMORY[0x1E0DEE9D8]);
  sub_1BC62AA6C();
  swift_allocObject();
  v93 = sub_1BC62AA60();
  if ((a2 & 1) != 0)
  {
    v40 = a1[8].isa;
    swift_bridgeObjectRetain();
  }
  else
  {
    v41 = swift_bridgeObjectRetain();
    v40 = sub_1BC3D6B50(v41);
    swift_bridgeObjectRelease();
  }
  v94 = v38;
  v95 = v39;
  v96 = v36;
  v42 = v40[2];
  if (v42)
  {
    v77 = v29;
    swift_bridgeObjectRetain();
    v76[1] = v40;
    v43 = v40 + 6;
    do
    {
      v45 = v43[5];
      v44 = (void *)v43[6];
      v47 = (_QWORD *)v43[3];
      v46 = v43[4];
      v49 = (void *)*(v43 - 1);
      v48 = (uint64_t (*)(uint64_t))*v43;
      LOBYTE(aBlock) = *((_BYTE *)v43 - 16);
      v99 = (uint64_t)v49;
      v100 = v48;
      v101 = *(_OWORD *)(v43 + 1);
      v102 = v47;
      v103 = v46;
      v104 = v45;
      v105 = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50 = v44;
      v51 = v49;
      sub_1BC58D104((uint64_t)&aBlock, v94, (int)v92, v96, v93, v37, v95, v90, v91);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v43 += 9;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    v29 = v77;
  }
  swift_bridgeObjectRelease();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v52 = v80;
  v53 = v79;
  v54 = v81;
  (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v79, *MEMORY[0x1E0DEF540], v81);
  v55 = (void *)sub_1BC62CCB0();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  v56 = (_QWORD *)swift_allocObject();
  v57 = v83;
  v56[2] = v82;
  v56[3] = v57;
  v56[4] = v95;
  *((_QWORD *)&v101 + 1) = sub_1BC58E5C4;
  v102 = v56;
  aBlock = MEMORY[0x1E0C809B0];
  v99 = 1107296256;
  v100 = sub_1BC39BE70;
  *(_QWORD *)&v101 = &block_descriptor_30_2;
  v58 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v59 = v84;
  sub_1BC62C494();
  v97 = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC370738();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
  v60 = v86;
  v61 = v78;
  sub_1BC62D0A0();
  v62 = v94;
  sub_1BC62CC08();
  _Block_release(v58);

  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v60, v61);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v59, v89);
  swift_release();
  swift_release();
  v63 = sub_1BC58E5D0;
  v64 = v88;
LABEL_32:
  type metadata accessor for CancellationToken();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = v63;
  *(_QWORD *)(result + 32) = v64;
  return result;
}

uint64_t sub_1BC58D104(uint64_t a1, dispatch_group_t group, int a3, void *a4, uint64_t a5, char a6, uint64_t a7, _QWORD *a8, uint64_t a9)
{
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  _OWORD v25[4];
  uint64_t v26;

  v16 = *(_OWORD *)(a1 + 48);
  v25[2] = *(_OWORD *)(a1 + 32);
  v25[3] = v16;
  v26 = *(_QWORD *)(a1 + 64);
  v17 = *(_OWORD *)(a1 + 16);
  v25[0] = *(_OWORD *)a1;
  v25[1] = v17;
  dispatch_group_enter(group);
  v18 = swift_allocObject();
  v19 = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(a1 + 16);
  v20 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v18 + 72) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v18 + 88) = v20;
  *(_BYTE *)(v18 + 16) = a6;
  *(_QWORD *)(v18 + 24) = a5;
  *(_QWORD *)(v18 + 32) = a7;
  v21 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(v18 + 40) = v19;
  *(_QWORD *)(v18 + 104) = v21;
  *(_QWORD *)(v18 + 112) = group;
  *(_QWORD *)(v18 + 120) = a9;
  swift_retain();
  swift_retain();
  sub_1BC359A94((uint64_t)v25);
  v22 = group;
  sub_1BC58D88C(a1, a4, a5, (uint64_t)sub_1BC58E678, v18);
  swift_release();
  v23 = swift_retain();
  MEMORY[0x1BCCF1B30](v23);
  if (*(_QWORD *)((*a8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  return swift_release();
}

void sub_1BC58D278(unint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, NSObject *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  unsigned __int8 *v40;
  uint64_t v41[3];
  uint64_t v42;

  v40 = a6;
  v12 = sub_1BC62BB34();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v20 = (id)a1;
    sub_1BC62BAF8();
    v21 = (id)a1;
    v22 = (id)a1;
    v23 = sub_1BC62BB28();
    v24 = sub_1BC62CAC4();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v39 = a7;
      v26 = v25;
      v27 = swift_slowAlloc();
      v41[0] = v27;
      *(_DWORD *)v26 = 136446466;
      v28 = sub_1BC62D718();
      v42 = sub_1BC4991F0(v28, v29, v41);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      v42 = a1;
      v30 = (id)a1;
      sub_1BC35E44C();
      v31 = sub_1BC62C6E0();
      v42 = sub_1BC4991F0(v31, v32, v41);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      sub_1BC3CD668((id)a1, 1);
      sub_1BC3CD668((id)a1, 1);
      _os_log_impl(&dword_1BC30A000, v23, v24, "[%{public}s]: Could not fetch records for PDF generation, error: %{public}s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v27, -1, -1);
      v33 = v26;
      a7 = v39;
      MEMORY[0x1BCCF36A8](v33, -1, -1);

      sub_1BC3CD668((id)a1, 1);
    }
    else
    {
      sub_1BC3CD668((id)a1, 1);
      sub_1BC3CD668((id)a1, 1);

    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    goto LABEL_27;
  }
  if ((a3 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    if (!(a1 >> 62))
      goto LABEL_21;
    goto LABEL_25;
  }
  v41[0] = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16)
      goto LABEL_5;
LABEL_24:
    sub_1BC3CD668((id)a1, 0);
    a1 = MEMORY[0x1E0DEE9D8];
    if (!(MEMORY[0x1E0DEE9D8] >> 62))
      goto LABEL_21;
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1BC62D3B8();
  if (!v16)
    goto LABEL_24;
LABEL_5:
  v39 = a7;
  if (v16 >= 1)
  {
    for (i = 0; i != v16; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v18 = (id)MEMORY[0x1BCCF24CC](i, a1);
      else
        v18 = *(id *)(a1 + 8 * i + 32);
      v19 = v18;
      if ((objc_msgSend(v18, sel_isDateLess, v39) & 1) != 0)
      {

      }
      else
      {
        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
      }
    }
    sub_1BC3CD668((id)a1, 0);
    a1 = v41[0];
    a7 = v39;
    if (!((unint64_t)v41[0] >> 62))
    {
LABEL_21:
      if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_22:
        sub_1BC62AA48();
        v34 = a7;
        v35 = *v40;
        swift_beginAccess();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v42 = *(_QWORD *)(a5 + 16);
        *(_QWORD *)(a5 + 16) = 0x8000000000000000;
        v37 = v35;
        a7 = v34;
        sub_1BC48D7BC(a1, v37, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(a5 + 16) = v42;
        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_1BC62AA54();
LABEL_27:
        dispatch_group_leave(a7);
        return;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
LABEL_25:
    swift_bridgeObjectRetain();
    v38 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v38)
      goto LABEL_22;
    goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_1BC58D6D4(void (*a1)(uint64_t))
{
  uint64_t v2;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  a1(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC58D734(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_1BC62D3B8();
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x1BCCF24CC](i, v2);
      }
      else
      {
        v8 = *(_QWORD *)(v2 + 8 * i + 32);
        swift_retain();
      }
      swift_beginAccess();
      if (*(_BYTE *)(v8 + 16) != 1)
      {
        *(_BYTE *)(v8 + 16) = 1;
        swift_beginAccess();
        v6 = *(void (**)(uint64_t))(v8 + 24);
        v7 = swift_retain();
        v6(v7);
        swift_release();
      }
      swift_release();
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC58D88C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t result;
  _QWORD aBlock[6];

  v6 = v5;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = a5;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC486EBC;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = v12;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BC58E048;
  *(_QWORD *)(v14 + 24) = v13;
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(inited + 32) = sub_1BC62C680();
  *(_QWORD *)(inited + 40) = v16;
  *(_QWORD *)(inited + 48) = sub_1BC62C680();
  *(_QWORD *)(inited + 56) = v17;
  swift_retain();
  swift_retain();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1BC58E2C4(v18, (_QWORD *)inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  v20 = a2;
  sub_1BC58E05C(v19, v20);
  swift_bridgeObjectRelease();

  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC6396B0;
  sub_1BC62C680();
  v22 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v23 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v22, sel_initWithKey_ascending_, v23, 0);

  *(_QWORD *)(v21 + 32) = v24;
  sub_1BC62C890();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_1BC37C738;
  *(_QWORD *)(v25 + 24) = v14;
  v26 = objc_allocWithZone(MEMORY[0x1E0CB6AE8]);
  sub_1BC34B6A0(0, &qword_1ED6A48A0);
  swift_retain();
  v27 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v28 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1BC58E4F0;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3BD514;
  aBlock[3] = &block_descriptor_63;
  v29 = _Block_copy(aBlock);
  v30 = objc_msgSend(v26, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v27, v28, 0, 0, 0, 0, v29);

  _Block_release(v29);
  swift_release();
  objc_msgSend(*(id *)(v6 + 16), sel_executeQuery_, v30);
  v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v31;
  v32[3] = v30;
  v32[4] = sub_1BC37C738;
  v32[5] = v14;
  type metadata accessor for CancellationToken();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = sub_1BC58E568;
  *(_QWORD *)(result + 32) = v32;
  return result;
}

void sub_1BC58DC90(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(_QWORD, _QWORD))
{
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD);
  void *v19;

  if (!a2 || (v7 = sub_1BC349FEC(a2)) == 0)
  {
    v13 = 0;
    goto LABEL_18;
  }
  v8 = v7;
  v19 = (void *)MEMORY[0x1E0DEE9D8];
  if (v7 >> 62)
  {
    v9 = sub_1BC62D3B8();
    if (v9)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease();
    v13 = (void *)MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_17;
LABEL_5:
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  v18 = a5;
  for (i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
      v11 = (id)MEMORY[0x1BCCF24CC](i, v8);
    else
      v11 = *(id *)(v8 + 8 * i + 32);
    v12 = v11;
    if (objc_msgSend(v11, sel_isDisplayable, v18))
    {
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  a5 = v18;
  v13 = v19;
LABEL_18:
  sub_1BC514B90();
  v14 = (void *)swift_allocError();
  v15 = v14;
  if (a4)
  {
    v16 = a4;

    swift_bridgeObjectRelease();
    v17 = 1;
  }
  else if (v13)
  {

    v17 = 0;
    a4 = v13;
  }
  else
  {
    v17 = 1;
    a4 = v14;
  }
  a5(a4, v17);
  sub_1BC3CD668(a4, v17);
}

uint64_t sub_1BC58DE60(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  void *v6;
  void *v7;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = (void *)MEMORY[0x1BCCF37A4](v5);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_stopQuery_, a2);

  }
  return a3(MEMORY[0x1E0DEE9D8], 0);
}

uint64_t type metadata accessor for PDFDataProvider()
{
  return objc_opt_self();
}

uint64_t sub_1BC58DF00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC58DF24()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC58DF50(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void (*v5)(uint64_t *);
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;

  v8 = a1;
  v9 = a2 & 1;
  sub_1BC62AA48();
  swift_beginAccess();
  v5 = *(void (**)(uint64_t *))(a4 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 24) = 0;
  sub_1BC38F084((uint64_t)v5);
  sub_1BC36D770(v6);
  result = sub_1BC62AA54();
  if (v5)
  {
    swift_retain();
    v5(&v8);
    sub_1BC36D770((uint64_t)v5);
    return sub_1BC36D770((uint64_t)v5);
  }
  return result;
}

uint64_t sub_1BC58E01C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC58E048(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC58DF50(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id sub_1BC58E05C(unint64_t a1, void *a2)
{
  unint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = (id)MEMORY[0x1E0DEE9D8];
    if (!v4)
      return result;
    v16 = MEMORY[0x1E0DEE9D8];
    result = (id)sub_1BC62D28C();
    if (v4 < 0)
    {
      __break(1u);
LABEL_17:
      __break(1u);
      return result;
    }
    v6 = 0;
    v15 = v3 & 0xC000000000000001;
    v7 = v3;
    while (v4 != v6)
    {
      if (v15)
        v8 = (id)MEMORY[0x1BCCF24CC](v6, v3);
      else
        v8 = *(id *)(v3 + 8 * v6 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, sel_sampleType);
      sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1BC639570;
      result = objc_msgSend(v9, sel_predicate);
      if (!result)
        goto LABEL_17;
      ++v6;
      *(_QWORD *)(v11 + 32) = result;
      *(_QWORD *)(v11 + 40) = a2;
      sub_1BC62C890();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
      v12 = a2;
      v13 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v14 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v13);

      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A88]), sel_initWithSampleType_predicate_, v10, v14);
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v3 = v7;
      if (v4 == v6)
        return (id)v16;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC58E2C4(unint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t i;
  unint64_t v4;
  id v5;
  void *v6;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;

  v2 = a1;
  v24 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_31;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_1BC62D3B8())
  {
    v19 = v2;
    v4 = 0;
    v21 = v2 & 0xFFFFFFFFFFFFFF8;
    v22 = v2 & 0xC000000000000001;
    v20 = (_QWORD *)(v2 + 32);
    while (1)
    {
      if (v22)
      {
        v5 = (id)MEMORY[0x1BCCF24CC](v4, v19);
      }
      else
      {
        if (v4 >= *(_QWORD *)(v21 + 16))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        v5 = (id)v20[v4];
      }
      v6 = v5;
      if (__OFADD__(v4++, 1))
        goto LABEL_29;
      v8 = objc_msgSend(v5, sel_sampleType);
      v9 = objc_msgSend(v8, sel_identifier);

      v10 = sub_1BC62C680();
      v2 = (unint64_t)v11;

      v12 = a2[2];
      if (!v12)
        goto LABEL_25;
      v13 = a2[4] == v10 && a2[5] == v2;
      if (!v13 && (sub_1BC62D574() & 1) == 0)
        break;
LABEL_4:

      swift_bridgeObjectRelease();
LABEL_5:
      if (v4 == i)
        return v24;
    }
    if (v12 == 1)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      v2 = (unint64_t)&v24;
      sub_1BC62D274();
      goto LABEL_5;
    }
    v14 = a2 + 7;
    v15 = 1;
    while (1)
    {
      v16 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      v17 = *(v14 - 1) == v10 && *v14 == v2;
      if (v17 || (sub_1BC62D574() & 1) != 0)
        goto LABEL_4;
      v14 += 2;
      ++v15;
      if (v16 == v12)
        goto LABEL_25;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    ;
  }
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BC58E4F0(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  sub_1BC58DC90(a1, a2, a3, a4, *(void (**)(_QWORD, _QWORD))(v4 + 16));
}

uint64_t block_copy_helper_60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_60()
{
  return swift_release();
}

uint64_t sub_1BC58E510()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC58E534()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC58E568()
{
  uint64_t v0;

  return sub_1BC58DE60(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(_QWORD, _QWORD))(v0 + 32));
}

uint64_t sub_1BC58E574()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC58E598()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC58E5C4()
{
  uint64_t v0;

  return sub_1BC58D6D4(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1BC58E5D0()
{
  uint64_t v0;

  return sub_1BC58D734(v0);
}

uint64_t sub_1BC58E5D8()
{
  uint64_t v0;
  void (*v1)(void);

  v1 = *(void (**)(void))(v0 + 16);
  sub_1BC35DDF0(MEMORY[0x1E0DEE9D8]);
  v1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC58E614()
{
  id *v0;

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1BC58E678(unint64_t a1, char a2)
{
  uint64_t v2;

  sub_1BC58D278(a1, a2 & 1, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), (unsigned __int8 *)(v2 + 40), *(NSObject **)(v2 + 112));
}

id HKChartableCodedQuantity.representsSystolicBloodPressure.getter()
{
  return sub_1BC58E6C8((SEL *)&selRef_loinc_systolicBloodPressureCoding);
}

id HKChartableCodedQuantity.representsDiastolicBloodPressure.getter()
{
  return sub_1BC58E6C8((SEL *)&selRef_loinc_diastolicBloodPressureCoding);
}

id sub_1BC58E6C8(SEL *a1)
{
  void *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = objc_msgSend(v1, sel_codings);
  sub_1BC34B6A0(0, &qword_1EF429BC0);
  v4 = sub_1BC62C878();

  if (v4 >> 62)
    goto LABEL_12;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1BC62D3B8())
  {
    v6 = (void *)objc_opt_self();
    v7 = 4;
    while (1)
    {
      v8 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF24CC](v7 - 4, v4) : *(id *)(v4 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = objc_msgSend(v6, *a1);
      v12 = objc_msgSend(v9, sel_isEquivalent_, v11);

      if ((v12 & 1) != 0)
        goto LABEL_15;

      ++v7;
      if (v10 == v5)
        goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  v12 = 0;
LABEL_14:
  v9 = 0;
LABEL_15:
  swift_bridgeObjectRelease_n();

  return v12;
}

id sub_1BC58E83C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
  }
  else
  {
    v3 = (void *)sub_1BC62C650();
    v4 = objc_msgSend((id)objc_opt_self(), sel_unitFromString_, v3);

    v5 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v4;
    v2 = v4;

    v1 = 0;
  }
  v6 = v1;
  return v2;
}

void sub_1BC58E8CC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(void **)(v0 + 24);
  if (v1)
    goto LABEL_5;
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 80);
    v5 = objc_msgSend(v3, sel_displayTypeForObjectTypeUnifyingBloodPressureTypes_, v4);

    if (v5)
    {
      v6 = *(void **)(v0 + 24);
      *(_QWORD *)(v0 + 24) = v5;
      v5;

      v1 = 0;
LABEL_5:
      v7 = v1;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1BC58E9A0(uint64_t a1, uint64_t a2, id a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  double v15;
  double v16;
  id v17;
  double v18;
  id v19;
  id v20;
  double v21;
  id v22;
  id v23;
  id v24;
  double v25;
  double v26;
  id v27;
  double v28;
  id v29;
  id v30;
  double v31;
  id v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char v34;
  objc_class *v35;
  _BYTE *v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  objc_super v41;

  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v40 = a1;
    v12 = v9;
    v13 = a3;
    v14 = objc_msgSend(v13, sel_minimumQuantity);
    v15 = 0.0;
    v16 = 0.0;
    if (v14)
    {
      v17 = sub_1BC58E83C();
      objc_msgSend(v14, sel_doubleValueForUnit_, v17);
      v16 = v18;

    }
    v19 = objc_msgSend(v13, sel_maximumQuantity);
    if (v19)
    {
      v20 = sub_1BC58E83C();
      objc_msgSend(v19, sel_doubleValueForUnit_, v20);
      v15 = v21;

    }
    if (v14)
    {
      v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v16);
      if (!v19)
      {
LABEL_9:
        a3 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v22, v19);

        v9 = v12;
        a1 = v40;
        goto LABEL_10;
      }
    }
    else
    {
      v22 = 0;
      if (!v19)
        goto LABEL_9;
    }
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v15);
    goto LABEL_9;
  }
LABEL_10:
  if (a4)
  {
    v23 = a4;
    v24 = objc_msgSend(v23, sel_minimumQuantity);
    v25 = 0.0;
    v26 = 0.0;
    if (v24)
    {
      v27 = sub_1BC58E83C();
      objc_msgSend(v24, sel_doubleValueForUnit_, v27);
      v26 = v28;

    }
    v29 = objc_msgSend(v23, sel_maximumQuantity);
    if (v29)
    {
      v30 = sub_1BC58E83C();
      objc_msgSend(v29, sel_doubleValueForUnit_, v30);
      v25 = v31;

    }
    if (v24)
      v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v26);
    if (v29)
      v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v25);
    v32 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v24, v29);

  }
  else
  {
    v32 = 0;
  }
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v33(v11, a1, v8);
  if (a2 == 1)
  {
    v34 = 0;
    goto LABEL_31;
  }
  if (a2 == 4)
  {
    v34 = 0;
LABEL_30:
    a2 = 9;
    goto LABEL_31;
  }
  if (a2 != 2)
  {
    v34 = 1;
    goto LABEL_30;
  }
  v34 = 0;
  a2 = 6;
LABEL_31:
  v35 = (objc_class *)type metadata accessor for BloodPressureChartData();
  v36 = objc_allocWithZone(v35);
  v36[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_partOfOutOfRangeSeries] = 0;
  v33(&v36[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_date], (uint64_t)v11, v8);
  *(_QWORD *)&v36[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_dateFormat] = a2;
  v36[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_hasTime] = v34;
  v41.receiver = v36;
  v41.super_class = v35;
  v37 = objc_msgSendSuper2(&v41, sel_init);
  objc_msgSend(v37, sel_setSystolicRange_, a3);
  objc_msgSend(v37, sel_setDiastolicRange_, v32);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v37;
}

id sub_1BC58EE20(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, sel_keyColor);
  if (!v1)
    v1 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  type metadata accessor for BloodPressureChartSeries();
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultSeriesWithDiastolicColor_, v1);

  return v2;
}

id sub_1BC58EF5C(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  v1 = a1;
  sub_1BC58E8CC();
  v3 = v2;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F768]), sel_init);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F770]), sel_initWithGraphSeries_baseDisplayType_valueFormatter_dataTypeCode_, v1, v3, v4, 80);

  return v5;
}

uint64_t BloodPressureDataTransformer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BloodPressureDataTransformer.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id HKMedicalCoding.representsSystolicBloodPressure.getter()
{
  return sub_1BC58F0F8((SEL *)&selRef_loinc_systolicBloodPressureCoding);
}

id HKMedicalCoding.representsDiastolicBloodPressure.getter()
{
  return sub_1BC58F0F8((SEL *)&selRef_loinc_diastolicBloodPressureCoding);
}

id sub_1BC58F0F8(SEL *a1)
{
  void *v1;
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(), *a1);
  v3 = objc_msgSend(v1, sel_isEquivalent_, v2);

  return v3;
}

BOOL sub_1BC58F154(void *a1)
{
  id v1;
  BOOL v2;

  v1 = a1;
  v2 = HKCodedValueCollection.representsCanonicalBloodPressure.getter();

  return v2;
}

BOOL HKCodedValueCollection.representsCanonicalBloodPressure.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t p_ivar_base_size;
  id v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  BOOL v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  unsigned int v19;
  id v20;
  unint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  unsigned int v34;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void *v47;
  void *v48;

  v1 = (uint64_t)v0;
  p_ivar_base_size = (uint64_t)&HRConceptTitleTableHeaderView__metaData.ivar_base_size;
  v3 = objc_msgSend(v0, sel_codedValues);
  v4 = (id)sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42CFF8);
  v5 = sub_1BC62C878();

  if (v5 >> 62)
    goto LABEL_29;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  swift_bridgeObjectRelease();
  if (v6 == 2)
  {
    v7 = objc_msgSend((id)v1, *(SEL *)(p_ivar_base_size + 3848));
    v8 = sub_1BC62C878();

    if (v8 >> 62)
    {
LABEL_31:
      swift_bridgeObjectRetain();
      v9 = sub_1BC62D3B8();
      v45 = v6;
      if (v9)
        goto LABEL_6;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v45 = 2;
      if (v9)
      {
LABEL_6:
        v36 = v4;
        v37 = v1;
        v10 = 0;
        v46 = v8 & 0xC000000000000001;
        v39 = v8 + 32;
        v41 = v9;
        v43 = v8;
        while (1)
        {
          if (v46)
          {
            v11 = (id)MEMORY[0x1BCCF24CC](v10, v8);
            v12 = __OFADD__(v10++, 1);
            if (v12)
              goto LABEL_30;
          }
          else
          {
            v11 = *(id *)(v39 + 8 * v10);
            v12 = __OFADD__(v10++, 1);
            if (v12)
            {
LABEL_30:
              __break(1u);
              goto LABEL_31;
            }
          }
          v48 = v11;
          v13 = objc_msgSend(v11, sel_codings, v36);
          sub_1BC34B6A0(0, &qword_1EF429BC0);
          v14 = sub_1BC62C878();

          if (v14 >> 62)
          {
            swift_bridgeObjectRetain_n();
            v15 = sub_1BC62D3B8();
            swift_bridgeObjectRelease();
            if (v15)
            {
LABEL_15:
              v16 = (void *)objc_opt_self();
              p_ivar_base_size = v14 & 0xC000000000000001;
              v1 = 4;
              while (1)
              {
                v4 = (id)(v1 - 4);
                v17 = p_ivar_base_size ? (id)MEMORY[0x1BCCF24CC](v1 - 4, v14) : *(id *)(v14 + 8 * v1);
                v18 = v17;
                v6 = v1 - 3;
                if (__OFADD__(v4, 1))
                  break;
                v4 = objc_msgSend(v16, sel_loinc_systolicBloodPressureCoding);
                v19 = objc_msgSend(v18, sel_isEquivalent_, v4);

                if (v19)
                {
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                  goto LABEL_26;
                }
                ++v1;
                if (v6 == v15)
                  goto LABEL_7;
              }
              __break(1u);
LABEL_29:
              swift_bridgeObjectRetain();
              v6 = sub_1BC62D3B8();
              swift_bridgeObjectRelease();
              goto LABEL_3;
            }
          }
          else
          {
            v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v15)
              goto LABEL_15;
          }
LABEL_7:
          swift_bridgeObjectRelease_n();

          v8 = v43;
          if (v10 == v41)
          {
            swift_bridgeObjectRelease_n();
            v48 = 0;
LABEL_26:
            v6 = v45;
            v1 = v37;
            p_ivar_base_size = 0x1E750D000;
            goto LABEL_33;
          }
        }
      }
    }
    swift_bridgeObjectRelease_n();
    v48 = 0;
LABEL_33:
    v20 = objc_msgSend((id)v1, *(SEL *)(p_ivar_base_size + 3848), v36);
    v21 = sub_1BC62C878();

    if (v21 >> 62)
      goto LABEL_60;
    v22 = *(void **)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v22; v22 = (void *)sub_1BC62D3B8())
    {
      v23 = 0;
      v42 = v21;
      v44 = v21 & 0xC000000000000001;
      v38 = v21 + 32;
      v40 = v22;
      while (1)
      {
        v24 = v44 ? (id)MEMORY[0x1BCCF24CC](v23, v21) : *(id *)(v38 + 8 * (_QWORD)v23);
        v25 = v24;
        v12 = __OFADD__(v23, 1);
        v23 = (char *)v23 + 1;
        if (v12)
          break;
        v26 = objc_msgSend(v24, sel_codings);
        sub_1BC34B6A0(0, &qword_1EF429BC0);
        v21 = sub_1BC62C878();

        v47 = v25;
        if (v21 >> 62)
        {
          swift_bridgeObjectRetain_n();
          v27 = sub_1BC62D3B8();
          swift_bridgeObjectRelease();
          if (v27)
          {
LABEL_43:
            v28 = (void *)objc_opt_self();
            v6 = v21 & 0xC000000000000001;
            v29 = 4;
            while (1)
            {
              v30 = v6 ? (id)MEMORY[0x1BCCF24CC](v29 - 4, v21) : *(id *)(v21 + 8 * v29);
              v31 = v30;
              v32 = v29 - 3;
              if (__OFADD__(v29 - 4, 1))
                break;
              v33 = objc_msgSend(v28, sel_loinc_diastolicBloodPressureCoding);
              v34 = objc_msgSend(v31, sel_isEquivalent_, v33);

              if (v34)
              {
                swift_bridgeObjectRelease_n();
                v6 = v45;
                v22 = v47;
                goto LABEL_54;
              }
              ++v29;
              if (v32 == v27)
                goto LABEL_36;
            }
            __break(1u);
            break;
          }
        }
        else
        {
          v27 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v27)
            goto LABEL_43;
        }
LABEL_36:
        swift_bridgeObjectRelease_n();

        v21 = v42;
        v6 = v45;
        if (v23 == v40)
        {
          v22 = 0;
          goto LABEL_54;
        }
      }
      __break(1u);
LABEL_60:
      swift_bridgeObjectRetain();
    }
LABEL_54:
    swift_bridgeObjectRelease_n();

    if (v48)
  }
  return v6 == 2;
}

id sub_1BC58F710(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = a1;
  HKCodedValueCollection.canonicalBloodPressureDisplay.getter();
  v3 = v2;

  if (v3)
  {
    v4 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t HKCodedValueCollection.canonicalBloodPressureDisplay.getter()
{
  void *v0;
  uint64_t p_ivar_base_size;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  BOOL v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  unsigned int v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v49;
  void *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  void *v59;
  id v60;

  p_ivar_base_size = (uint64_t)&HRConceptTitleTableHeaderView__metaData.ivar_base_size;
  v2 = objc_msgSend(v0, sel_codedValues);
  v3 = (id)sub_1BC34B6A0(0, (unint64_t *)&qword_1EF42CFF8);
  v4 = sub_1BC62C878();

  if (v4 >> 62)
    goto LABEL_29;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  swift_bridgeObjectRelease();
  if (v5 != 2)
    return 0;
  v6 = objc_msgSend(v0, *(SEL *)(p_ivar_base_size + 3848));
  v7 = sub_1BC62C878();

  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_6;
LABEL_32:
    swift_bridgeObjectRelease_n();
    v60 = 0;
    goto LABEL_33;
  }
LABEL_31:
  swift_bridgeObjectRetain();
  v8 = sub_1BC62D3B8();
  if (!v8)
    goto LABEL_32;
LABEL_6:
  v49 = v3;
  v50 = v0;
  v9 = 0;
  v56 = v7;
  v58 = v7 & 0xC000000000000001;
  v52 = v7 + 32;
  v54 = v8;
  do
  {
    if (v58)
    {
      v10 = (id)MEMORY[0x1BCCF24CC](v9, v7);
      v11 = __OFADD__(v9++, 1);
      if (v11)
        goto LABEL_30;
    }
    else
    {
      v10 = *(id *)(v52 + 8 * v9);
      v11 = __OFADD__(v9++, 1);
      if (v11)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    v60 = v10;
    v12 = objc_msgSend(v10, sel_codings, v49);
    sub_1BC34B6A0(0, &qword_1EF429BC0);
    v13 = sub_1BC62C878();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v14 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_15:
        v15 = (void *)objc_opt_self();
        p_ivar_base_size = 4;
        while (1)
        {
          v16 = (v13 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1BCCF24CC](p_ivar_base_size - 4, v13)
              : *(id *)(v13 + 8 * p_ivar_base_size);
          v17 = v16;
          v0 = (void *)(p_ivar_base_size - 3);
          if (__OFADD__(p_ivar_base_size - 4, 1))
            break;
          v18 = objc_msgSend(v15, sel_loinc_systolicBloodPressureCoding);
          v3 = objc_msgSend(v17, sel_isEquivalent_, v18);

          if ((_DWORD)v3)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_26;
          }
          ++p_ivar_base_size;
          if (v0 == (void *)v14)
            goto LABEL_7;
        }
        __break(1u);
LABEL_29:
        swift_bridgeObjectRetain();
        v5 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14)
        goto LABEL_15;
    }
LABEL_7:
    swift_bridgeObjectRelease_n();

    v7 = v56;
  }
  while (v9 != v54);
  swift_bridgeObjectRelease_n();
  v60 = 0;
LABEL_26:
  v0 = v50;
  p_ivar_base_size = 0x1E750D000;
LABEL_33:
  v19 = objc_msgSend(v0, *(SEL *)(p_ivar_base_size + 3848), v49);
  v20 = sub_1BC62C878();

  if (v20 >> 62)
  {
LABEL_60:
    swift_bridgeObjectRetain();
    v53 = sub_1BC62D3B8();
    if (v53)
      goto LABEL_35;
LABEL_61:
    swift_bridgeObjectRelease_n();
    v34 = 0;
    v35 = v60;
    if (v60)
      goto LABEL_55;
LABEL_62:

    return 0;
  }
  v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v53 = v21;
  if (!v21)
    goto LABEL_61;
LABEL_35:
  v22 = 0;
  v55 = v20;
  v57 = v20 & 0xC000000000000001;
  v51 = v20 + 32;
  while (1)
  {
    if (v57)
    {
      v23 = (id)MEMORY[0x1BCCF24CC](v22, v20);
      v11 = __OFADD__(v22++, 1);
      if (v11)
        goto LABEL_59;
    }
    else
    {
      v23 = *(id *)(v51 + 8 * v22);
      v11 = __OFADD__(v22++, 1);
      if (v11)
      {
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
    }
    v59 = v23;
    v24 = objc_msgSend(v23, sel_codings);
    sub_1BC34B6A0(0, &qword_1EF429BC0);
    v25 = sub_1BC62C878();

    if (v25 >> 62)
      break;
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v26)
      goto LABEL_44;
LABEL_36:
    swift_bridgeObjectRelease_n();

    v20 = v55;
    if (v22 == v53)
      goto LABEL_61;
  }
  swift_bridgeObjectRetain_n();
  v26 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v26)
    goto LABEL_36;
LABEL_44:
  v27 = (void *)objc_opt_self();
  v20 = v25 & 0xC000000000000001;
  v28 = 4;
  while (1)
  {
    if (v20)
      v29 = (id)MEMORY[0x1BCCF24CC](v28 - 4, v25);
    else
      v29 = *(id *)(v25 + 8 * v28);
    v30 = v29;
    v31 = v28 - 3;
    if (__OFADD__(v28 - 4, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    v32 = objc_msgSend(v27, sel_loinc_diastolicBloodPressureCoding);
    v33 = objc_msgSend(v30, sel_isEquivalent_, v32);

    if (v33)
      break;
    ++v28;
    if (v31 == v26)
      goto LABEL_36;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v34 = v59;
  v35 = v60;
  if (!v60)
    goto LABEL_62;
LABEL_55:
  v36 = objc_msgSend(v35, sel_value);
  v37 = objc_msgSend(v36, sel_displayString);

  v38 = sub_1BC62C680();
  v40 = v39;

  if (!v34)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  v41 = objc_msgSend(v34, sel_value);
  v42 = objc_msgSend(v41, sel_displayString);

  v43 = sub_1BC62C680();
  v45 = v44;

  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A53C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v46 + 32) = v38;
  *(_QWORD *)(v46 + 40) = v40;
  *(_QWORD *)(v46 + 48) = v43;
  *(_QWORD *)(v46 + 56) = v45;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v47 = sub_1BC62C5D8();
  swift_bridgeObjectRelease();

  return v47;
}

id sub_1BC58FE34(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  void *v11;
  void *v12;
  id v13;

  v4 = v3;
  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = 0;
  if (v10(a2, 1, v8) != 1)
  {
    v11 = (void *)sub_1BC62A700();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  }
  if (v10(a3, 1, v8) == 1)
  {
    v12 = 0;
  }
  else
  {
    v12 = (void *)sub_1BC62A700();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
  }
  v13 = objc_msgSend(v4, sel_initWithDataType_startDate_endDate_, a1, v11, v12);

  return v13;
}

id sub_1BC58FF28(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  unint64_t v24;
  NSObject *v25;
  uint64_t v26;
  NSObject *v27;
  BOOL v28;
  unint64_t v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  unsigned int v38;
  id v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  unsigned int v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  NSObject *v66;
  id v67;
  id v68;
  char *v69;
  id v70;
  void *v71;
  NSObject *v72;
  id v73;
  NSObject *v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  NSObject *v82;
  NSObject *v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  NSObject *v87;
  void *v88;
  void *v89;
  uint64_t v90;
  char *v91;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  void *v102;
  NSObject *v103;
  id v104;
  NSObject *v105;
  id v106;
  NSObject *v107;
  os_log_type_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  NSObject *v113;
  id v114;
  uint64_t v115;
  unint64_t v116;
  os_log_t v117;
  NSObject *v118;
  id v119;
  id v120;
  void *v121;
  void *v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  void *v128;
  void *v129;
  id v130;
  id v131;
  id v132;
  uint64_t v133;
  void *v134;
  _QWORD v136[2];
  id v137;
  os_log_t v138;
  void *v139;
  uint64_t v140;
  id v141;
  id v142;
  __int128 v143;
  char *v144;
  id v145;
  uint64_t v146;
  char *v147;
  char *v148;
  __int128 v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  char *v155;
  unint64_t v156;
  uint64_t v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  unint64_t v166;
  NSObject *v167;
  uint64_t v168;
  char v169;
  id v170[3];

  v4 = v3;
  v140 = a3;
  v137 = a2;
  v170[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_1BC62BB34();
  v159 = *(_QWORD *)(v6 - 8);
  v160 = v6;
  MEMORY[0x1E0C80A78](v6);
  v150 = (char *)v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v155 = (char *)v136 - v9;
  MEMORY[0x1E0C80A78](v10);
  v161 = (char *)v136 - v11;
  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v12);
  v148 = (char *)v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v147 = (char *)v136 - v15;
  v16 = sub_1BC62A760();
  v152 = *(_QWORD *)(v16 - 8);
  v153 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F5E0]), sel_init);
  v19 = objc_msgSend(a1, sel_date);
  v151 = v18;
  sub_1BC62A724();

  v20 = objc_msgSend(a1, sel_quantities);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF432A70);
  v21 = sub_1BC62C878();

  if (v21 >> 62)
  {
LABEL_65:
    swift_bridgeObjectRetain();
    v23 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v23)
      goto LABEL_3;
LABEL_66:
    swift_bridgeObjectRelease();
    v124 = 0;
    v132 = 0;
    v131 = v142;
    goto LABEL_67;
  }
  v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v23)
    goto LABEL_66;
LABEL_3:
  v154 = 0;
  v158 = 0;
  v24 = 0;
  v146 = 0;
  v164 = v21 & 0xC000000000000001;
  v156 = v21 + 32;
  v157 = v21 & 0xFFFFFFFFFFFFFF8;
  v145 = (id)*MEMORY[0x1E0CB5AA8];
  v144 = &v169;
  v141 = (id)*MEMORY[0x1E0CB5AA0];
  *(_QWORD *)&v22 = 138543362;
  v149 = v22;
  *(_QWORD *)&v22 = 138543618;
  v143 = v22;
  v136[1] = MEMORY[0x1E0DEE9B8] + 8;
  v165 = v4;
  v162 = v23;
  v163 = v21;
  do
  {
    if (v164)
    {
      v27 = MEMORY[0x1BCCF24CC](v24, v21);
      v28 = __OFADD__(v24, 1);
      v29 = v24 + 1;
      if (v28)
        goto LABEL_63;
    }
    else
    {
      if (v24 >= *(_QWORD *)(v157 + 16))
        goto LABEL_64;
      v27 = *(id *)(v156 + 8 * v24);
      v28 = __OFADD__(v24, 1);
      v29 = v24 + 1;
      if (v28)
        goto LABEL_63;
    }
    v166 = v29;
    v167 = v27;
    v30 = -[NSObject codings](v27, sel_codings);
    v21 = sub_1BC34B6A0(0, &qword_1EF429BC0);
    v31 = sub_1BC62C878();

    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      v32 = sub_1BC62D3B8();
      if (v32)
      {
LABEL_15:
        v33 = (void *)objc_opt_self();
        v34 = 4;
        while (1)
        {
          if ((v31 & 0xC000000000000001) != 0)
            v35 = (id)MEMORY[0x1BCCF24CC](v34 - 4, v31);
          else
            v35 = *(id *)(v31 + 8 * v34);
          v36 = v35;
          v4 = v34 - 3;
          if (__OFADD__(v34 - 4, 1))
          {
            __break(1u);
            goto LABEL_62;
          }
          v37 = objc_msgSend(v33, sel_loinc_systolicBloodPressureCoding);
          v38 = objc_msgSend(v36, sel_isEquivalent_, v37);

          if (v38)
            break;
          ++v34;
          if (v4 == v32)
            goto LABEL_22;
        }
        swift_bridgeObjectRelease_n();
        v52 = v158;
        if (v158)
        {
          v53 = v158;
        }
        else
        {
          sub_1BC34B6A0(0, &qword_1EF437860);
          v55 = (void *)MEMORY[0x1BCCF1DC4](v145);
          v57 = v151;
          v56 = v152;
          v58 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
          v59 = (uint64_t)v147;
          v60 = v153;
          v58(v147, v151, v153);
          v61 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56);
          v61(v59, 0, 1, v60);
          v62 = (uint64_t)v148;
          v58(v148, v57, v60);
          v61(v62, 0, 1, v60);
          v63 = objc_allocWithZone(MEMORY[0x1E0CB6C68]);
          v158 = sub_1BC58FE34(v55, v59, v62);
          v52 = v158;
          v53 = 0;
        }
        v4 = v165;
        v64 = v53;
        v65 = sub_1BC58E83C();
        v170[0] = 0;
        v66 = v167;
        v67 = -[NSObject chartableCodedQuantityInUnit:adoptUnitIfNullUnit:error:](v167, sel_chartableCodedQuantityInUnit_adoptUnitIfNullUnit_error_, v65, 1, v170);

        v68 = v170[0];
        v69 = v155;
        if (v67)
        {
LABEL_43:
          v100 = v68;
          objc_msgSend(v52, sel_updateMinMaxWithChartableCodedQuantity_, v67);

        }
        else
        {
          v70 = v170[0];
          v71 = (void *)sub_1BC62A55C();

          swift_willThrow();
          v146 = 0;
          sub_1BC62BAE0();
          v72 = v66;
          v73 = v71;
          v74 = v72;
          v75 = v71;
          v76 = sub_1BC62BB28();
          v77 = sub_1BC62CAC4();
          v78 = v77;
          v167 = v76;
          if (os_log_type_enabled(v76, v77))
          {
            v79 = swift_slowAlloc();
            LODWORD(v138) = v78;
            v80 = v79;
            v81 = (_QWORD *)swift_slowAlloc();
            v139 = (void *)swift_slowAlloc();
            v170[0] = v139;
            *(_DWORD *)v80 = v143;
            v168 = (uint64_t)v74;
            v82 = v74;
            sub_1BC62CFF8();
            *v81 = v74;

            v83 = v82;
            *(_WORD *)(v80 + 12) = 2082;
            v168 = (uint64_t)v71;
            v84 = v71;
            sub_1BC35E44C();
            v85 = sub_1BC62C6E0();
            v168 = sub_1BC4991F0(v85, v86, (uint64_t *)v170);
            v4 = v165;
            sub_1BC62CFF8();
            swift_bridgeObjectRelease();

            v87 = v167;
            _os_log_impl(&dword_1BC30A000, v167, (os_log_type_t)v138, "Cannot represent coded quantity %{public}@ [systole] in mmHg: %{public}s", (uint8_t *)v80, 0x16u);
            sub_1BC4DCD38();
            swift_arrayDestroy();
            MEMORY[0x1BCCF36A8](v81, -1, -1);
            v88 = v139;
            swift_arrayDestroy();
            MEMORY[0x1BCCF36A8](v88, -1, -1);
            MEMORY[0x1BCCF36A8](v80, -1, -1);

          }
          else
          {

          }
LABEL_49:
          (*(void (**)(char *, uint64_t))(v159 + 8))(v69, v160);
        }
        v26 = v162;
        v21 = v163;
        goto LABEL_6;
      }
    }
    else
    {
      v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v32)
        goto LABEL_15;
    }
LABEL_22:
    swift_bridgeObjectRelease_n();
    v39 = -[NSObject codings](v167, sel_codings);
    v21 = sub_1BC62C878();

    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      v40 = sub_1BC62D3B8();
      v4 = v165;
      if (v40)
      {
LABEL_24:
        v41 = (void *)objc_opt_self();
        v42 = 4;
        while (1)
        {
          v43 = (v21 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1BCCF24CC](v42 - 4, v21)
              : *(id *)(v21 + 8 * v42);
          v44 = v43;
          v45 = v42 - 3;
          if (__OFADD__(v42 - 4, 1))
            break;
          v46 = objc_msgSend(v41, sel_loinc_diastolicBloodPressureCoding);
          v47 = objc_msgSend(v44, sel_isEquivalent_, v46);

          if (v47)
          {
            swift_bridgeObjectRelease_n();
            v52 = v154;
            if (v154)
            {
              v54 = v154;
            }
            else
            {
              sub_1BC34B6A0(0, &qword_1EF437860);
              v89 = (void *)MEMORY[0x1BCCF1DC4](v141);
              v91 = v151;
              v90 = v152;
              v92 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
              v93 = (uint64_t)v147;
              v94 = v153;
              v92(v147, v151, v153);
              v95 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56);
              v95(v93, 0, 1, v94);
              v96 = (uint64_t)v148;
              v92(v148, v91, v94);
              v95(v96, 0, 1, v94);
              v97 = objc_allocWithZone(MEMORY[0x1E0CB6C68]);
              v154 = sub_1BC58FE34(v89, v93, v96);
              v52 = v154;
              v54 = 0;
            }
            v98 = v54;
            v99 = sub_1BC58E83C();
            v170[0] = 0;
            v66 = v167;
            v67 = -[NSObject chartableCodedQuantityInUnit:adoptUnitIfNullUnit:error:](v167, sel_chartableCodedQuantityInUnit_adoptUnitIfNullUnit_error_, v99, 1, v170);

            v68 = v170[0];
            v69 = v150;
            if (!v67)
            {
              v101 = v170[0];
              v102 = (void *)sub_1BC62A55C();

              swift_willThrow();
              v146 = 0;
              sub_1BC62BAE0();
              v103 = v66;
              v104 = v102;
              v105 = v103;
              v106 = v102;
              v107 = sub_1BC62BB28();
              v108 = sub_1BC62CAC4();
              v109 = v108;
              if (os_log_type_enabled(v107, v108))
              {
                v110 = swift_slowAlloc();
                LODWORD(v139) = v109;
                v111 = v110;
                v112 = (_QWORD *)swift_slowAlloc();
                v167 = swift_slowAlloc();
                v168 = (uint64_t)v105;
                v170[0] = v167;
                *(_DWORD *)v111 = v143;
                v113 = v105;
                v138 = v107;
                v107 = v113;
                sub_1BC62CFF8();
                *v112 = v105;

                *(_WORD *)(v111 + 12) = 2082;
                v168 = (uint64_t)v102;
                v114 = v102;
                sub_1BC35E44C();
                v115 = sub_1BC62C6E0();
                v168 = sub_1BC4991F0(v115, v116, (uint64_t *)v170);
                v4 = v165;
                sub_1BC62CFF8();
                swift_bridgeObjectRelease();

                v117 = v138;
                _os_log_impl(&dword_1BC30A000, v138, (os_log_type_t)v139, "Cannot represent coded quantity %{public}@ [diastole] in mmHg: %{public}s", (uint8_t *)v111, 0x16u);
                sub_1BC4DCD38();
                swift_arrayDestroy();
                MEMORY[0x1BCCF36A8](v112, -1, -1);
                v118 = v167;
                swift_arrayDestroy();
                MEMORY[0x1BCCF36A8](v118, -1, -1);
                MEMORY[0x1BCCF36A8](v111, -1, -1);

              }
              else
              {

              }
              goto LABEL_49;
            }
            goto LABEL_43;
          }
          ++v42;
          if (v45 == v40)
            goto LABEL_31;
        }
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
    }
    else
    {
      v40 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v4 = v165;
      if (v40)
        goto LABEL_24;
    }
LABEL_31:
    swift_bridgeObjectRelease_n();
    sub_1BC62BAE0();
    v48 = v167;
    v25 = sub_1BC62BB28();
    v49 = sub_1BC62CAC4();
    if (os_log_type_enabled(v25, v49))
    {
      v50 = swift_slowAlloc();
      v51 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v50 = v149;
      *(_QWORD *)(v50 + 4) = v48;
      *v51 = v48;
      _os_log_impl(&dword_1BC30A000, v25, v49, "Unexpected quantity on a blood pressure tuple that we will ignore: %{public}@", (uint8_t *)v50, 0xCu);
      sub_1BC4DCD38();
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v51, -1, -1);
      MEMORY[0x1BCCF36A8](v50, -1, -1);
    }
    else
    {

      v25 = v48;
    }
    v26 = v162;

    (*(void (**)(char *, uint64_t))(v159 + 8))(v161, v160);
    v21 = v163;
LABEL_6:
    v24 = v166;
  }
  while (v166 != v26);
  swift_bridgeObjectRelease();
  if (v158)
  {
    v119 = v158;
    v120 = v137;
    sub_1BC58E8CC();
    v122 = v121;
    v123 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F750]), sel_initWithStatistics_options_unit_displayType_sourceTimeZone_, v119, 12, v120, v121, 0);

    objc_msgSend(v142, sel_setSystolicChartPoint_, v123);
  }
  v124 = v154;
  if (v154)
  {
    v125 = v154;
    v126 = v137;
    v127 = v125;
    sub_1BC58E8CC();
    v129 = v128;
    v130 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F750]), sel_initWithStatistics_options_unit_displayType_sourceTimeZone_, v127, 12, v126, v128, 0);

    v131 = v142;
    objc_msgSend(v142, sel_setDiastolicChartPoint_, v130);

  }
  else
  {
    v131 = v142;
  }
  v132 = v158;
LABEL_67:
  v133 = (uint64_t)v151;
  v134 = (void *)sub_1BC62A700();
  objc_msgSend(v131, sel_setDate_, v134);

  objc_msgSend(v131, sel_setUserInfo_, sub_1BC58E9A0(v133, v140, v132, v124));
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v133, v153);
  return v131;
}

uint64_t type metadata accessor for BloodPressureDataTransformer()
{
  return objc_opt_self();
}

uint64_t method lookup function for BloodPressureDataTransformer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BloodPressureDataTransformer.chartPoint(for:in:with:dataSourceType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of BloodPressureDataTransformer.graphSeries(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of BloodPressureDataTransformer.chartDisplayType(with:displayName:unitName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1BC590F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  __int128 v8;
  __int128 v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  void *v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v2 = v1;
  v4 = sub_1BC62C4D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_OWORD *)(a1 + 48);
  v25 = *(_OWORD *)(a1 + 32);
  v26 = v8;
  v27 = *(_QWORD *)(a1 + 64);
  v9 = *(_OWORD *)(a1 + 16);
  v23 = *(_OWORD *)a1;
  v24 = v9;
  sub_1BC35A280();
  *v7 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  LOBYTE(a1) = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((a1 & 1) != 0)
  {
    swift_beginAccess();
    v11 = *(_QWORD *)(v2 + 32);
    if (*(_QWORD *)(v11 + 16))
    {
      sub_1BC359A94((uint64_t)&v23);
      swift_bridgeObjectRetain();
      sub_1BC5594EC(&v23);
      if ((v13 & 1) != 0)
      {
        v14 = *(_QWORD **)(*(_QWORD *)(v11 + 56) + 8 * v12);
        swift_retain();
        swift_bridgeObjectRelease();
        sub_1BC359AF8((uint64_t)&v23);
        return (uint64_t)v14;
      }
      swift_bridgeObjectRelease();
      sub_1BC359AF8((uint64_t)&v23);
    }
    sub_1BC5914A8();
    v15 = swift_allocObject();
    v16 = v25;
    v17 = v26;
    v18 = v23;
    *(_OWORD *)(v15 + 48) = v24;
    *(_OWORD *)(v15 + 64) = v16;
    *(_OWORD *)(v15 + 80) = v17;
    *(_QWORD *)(v15 + 96) = v27;
    *(_OWORD *)(v15 + 16) = xmmword_1BC639590;
    *(_OWORD *)(v15 + 32) = v18;
    v19 = *(void **)(v2 + 16);
    type metadata accessor for CategoryCountProvider();
    swift_allocObject();
    sub_1BC359A94((uint64_t)&v23);
    v14 = sub_1BC581330(v15, v19);
    swift_beginAccess();
    sub_1BC359A94((uint64_t)&v23);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *(_QWORD *)(v2 + 32);
    *(_QWORD *)(v2 + 32) = 0x8000000000000000;
    sub_1BC48D6A0((uint64_t)v14, &v23, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v2 + 32) = v22;
    swift_bridgeObjectRelease();
    sub_1BC359AF8((uint64_t)&v23);
    swift_endAccess();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC591164()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CountProviderCollection()
{
  return objc_opt_self();
}

uint64_t sub_1BC5911B8(void *a1)
{
  _QWORD *v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  type metadata accessor for CountProviderCollection();
  v2 = (_QWORD *)swift_allocObject();
  v2[4] = MEMORY[0x1E0DEE9E0];
  v2[2] = a1;
  v3 = a1;
  v4 = _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0();
  v5 = sub_1BC3D6B50(v4);
  swift_bridgeObjectRelease();
  type metadata accessor for CategoryCountProvider();
  swift_allocObject();
  v6 = v3;
  v7 = sub_1BC581330((uint64_t)v5, v6);
  v2[3] = v7;
  v8 = v7[3];
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_18:
    swift_bridgeObjectRelease();
    swift_release();

    swift_beginAccess();
    v2[4] = v10;
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  v34 = v6;
  swift_bridgeObjectRetain_n();
  swift_retain();
  v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v11 = 32;
  while (1)
  {
    v35 = *(_OWORD *)(v8 + v11);
    v13 = *(_OWORD *)(v8 + v11 + 16);
    v14 = *(_OWORD *)(v8 + v11 + 32);
    v15 = *(_OWORD *)(v8 + v11 + 48);
    v39 = *(_QWORD *)(v8 + v11 + 64);
    v37 = v14;
    v38 = v15;
    v36 = v13;
    sub_1BC359A94((uint64_t)&v35);
    swift_retain();
    sub_1BC359A94((uint64_t)&v35);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC5594EC(&v35);
    v19 = v18;
    v20 = v10[2];
    v21 = (v17 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v17;
    if (v10[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v17 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BC5A7704();
        if ((v23 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BC3C78BC(v22, isUniquelyReferenced_nonNull_native);
      sub_1BC5594EC(&v35);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_21;
      v19 = v24;
      if ((v23 & 1) != 0)
      {
LABEL_3:
        v12 = v10[7];
        swift_release();
        *(_QWORD *)(v12 + 8 * v19) = v7;
        goto LABEL_4;
      }
    }
    v10[(v19 >> 6) + 8] |= 1 << v19;
    v26 = v10[6] + 72 * v19;
    *(_OWORD *)v26 = v35;
    v27 = v36;
    v28 = v37;
    v29 = v38;
    *(_QWORD *)(v26 + 64) = v39;
    *(_OWORD *)(v26 + 32) = v28;
    *(_OWORD *)(v26 + 48) = v29;
    *(_OWORD *)(v26 + 16) = v27;
    *(_QWORD *)(v10[7] + 8 * v19) = v7;
    v30 = v10[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_20;
    v10[2] = v32;
    sub_1BC359A94((uint64_t)&v35);
LABEL_4:
    swift_bridgeObjectRelease();
    sub_1BC359AF8((uint64_t)&v35);
    sub_1BC359AF8((uint64_t)&v35);
    v11 += 72;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      v6 = v34;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

void sub_1BC5914A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A59B0)
  {
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A59B0);
  }
}

id HKClinicalBrand.init(_:)()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1BC62C650();
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_initWithExternalID_batchID_, v1, v2);

  return v3;
}

void BrandIdentifier.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = objc_msgSend(a1, sel_externalID);
  v5 = sub_1BC62C680();
  v7 = v6;

  v8 = objc_msgSend(a1, sel_batchID);
  v9 = sub_1BC62C680();
  v11 = v10;

  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
}

uint64_t BrandIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC5916A0()
{
  _BYTE *v0;

  if (*v0)
    return 0x64496863746162;
  else
    return 0x6C616E7265747865;
}

uint64_t sub_1BC5916E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC592388(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC591704()
{
  sub_1BC592064();
  return sub_1BC62D700();
}

uint64_t sub_1BC59172C()
{
  sub_1BC592064();
  return sub_1BC62D70C();
}

uint64_t BrandIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1BC5920A8(0, &qword_1EF437868, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC592064();
  sub_1BC62D6F4();
  v13 = 0;
  v9 = v11[3];
  sub_1BC62D4D8();
  if (!v9)
  {
    v12 = 1;
    sub_1BC62D4D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t BrandIdentifier.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62C740();
  sub_1BC62C740();
  return sub_1BC62D6AC();
}

uint64_t BrandIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;

  sub_1BC5920A8(0, &qword_1EF437878, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC592064();
  sub_1BC62D6DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v21 = 0;
  v10 = sub_1BC62D46C();
  v12 = v11;
  v20 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BC62D46C();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v17;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC591A94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return BrandIdentifier.init(from:)(a1, a2);
}

uint64_t sub_1BC591AA8(_QWORD *a1)
{
  return BrandIdentifier.encode(to:)(a1);
}

uint64_t sub_1BC591ABC()
{
  sub_1BC62D670();
  sub_1BC62C740();
  sub_1BC62C740();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC591B20()
{
  sub_1BC62C740();
  return sub_1BC62C740();
}

uint64_t sub_1BC591B5C()
{
  sub_1BC62D670();
  sub_1BC62C740();
  sub_1BC62C740();
  return sub_1BC62D6AC();
}

id BrandIdentifier.clinicalBrand.getter()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB63A8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1BC62C650();
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_initWithExternalID_batchID_, v1, v2);

  return v3;
}

unint64_t static BrandIdentifier.localDevelopmentSampleBrandID.getter()
{
  return 0xD000000000000015;
}

unint64_t static BrandIdentifier.localDevelopmentSampleBrandBatchID.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t BrandIdentifier.isLocalDevelopmentSampleBrand.getter()
{
  _QWORD *v0;

  if (*v0 == 0xD000000000000015 && v0[1] == 0x80000001BC6653B0)
    return 1;
  else
    return sub_1BC62D574();
}

void static BrandIdentifier.localDevelopmentSampleBrandIdentifier()(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001BC6653B0;
  a1[2] = 0xD00000000000001ALL;
  a1[3] = 0x80000001BC6653D0;
}

uint64_t sub_1BC591D24(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_externalID);
  v3 = sub_1BC62C680();
  v5 = v4;

  if (v3 == 0xD000000000000015 && v5 == 0x80000001BC6653B0)
  {

    swift_bridgeObjectRelease();
    v6 = 1;
  }
  else
  {
    v6 = sub_1BC62D574();

    swift_bridgeObjectRelease();
  }
  return v6 & 1;
}

uint64_t HKClinicalBrand.isLocalDevelopmentSampleBrand.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  v1 = objc_msgSend(v0, sel_externalID);
  v2 = sub_1BC62C680();
  v4 = v3;

  if (v2 == 0xD000000000000015 && v4 == 0x80000001BC6653B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
}

id static HKClinicalBrand.localDevelopmentSampleBrand()()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB63A8]);
  v1 = (void *)sub_1BC62C650();
  v2 = (void *)sub_1BC62C650();
  v3 = objc_msgSend(v0, sel_initWithExternalID_batchID_, v1, v2);

  return v3;
}

id sub_1BC591F38()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB63A8]);
  v1 = (void *)sub_1BC62C650();
  v2 = (void *)sub_1BC62C650();
  v3 = objc_msgSend(v0, sel_initWithExternalID_batchID_, v1, v2);

  return v3;
}

uint64_t _s15HealthRecordsUI15BrandIdentifierV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1BC62D574(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1BC62D574();
  }
  return result;
}

unint64_t sub_1BC592064()
{
  unint64_t result;

  result = qword_1EF437870;
  if (!qword_1EF437870)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6493B4, &type metadata for BrandIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF437870);
  }
  return result;
}

void sub_1BC5920A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC592064();
    v7 = a3(a1, &type metadata for BrandIdentifier.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BC592108()
{
  unint64_t result;

  result = qword_1EF437880;
  if (!qword_1EF437880)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for BrandIdentifier, &type metadata for BrandIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EF437880);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BrandIdentifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BrandIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrandIdentifier()
{
  return &type metadata for BrandIdentifier;
}

uint64_t storeEnumTagSinglePayload for BrandIdentifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC592230 + 4 * byte_1BC64920D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC592264 + 4 * asc_1BC649208[v4]))();
}

uint64_t sub_1BC592264(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC59226C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC592274);
  return result;
}

uint64_t sub_1BC592280(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC592288);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC59228C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC592294(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BrandIdentifier.CodingKeys()
{
  return &type metadata for BrandIdentifier.CodingKeys;
}

unint64_t sub_1BC5922B4()
{
  unint64_t result;

  result = qword_1EF437888;
  if (!qword_1EF437888)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64938C, &type metadata for BrandIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF437888);
  }
  return result;
}

unint64_t sub_1BC5922FC()
{
  unint64_t result;

  result = qword_1EF437890;
  if (!qword_1EF437890)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6492FC, &type metadata for BrandIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF437890);
  }
  return result;
}

unint64_t sub_1BC592344()
{
  unint64_t result;

  result = qword_1EF437898;
  if (!qword_1EF437898)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC649324, &type metadata for BrandIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF437898);
  }
  return result;
}

uint64_t sub_1BC592388(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C616E7265747865 && a2 == 0xEA00000000006449;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64496863746162 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id IconTextListView.__allocating_init(textStyle:iconSize:interItemSpacingHorizontal:interItemSpacingVertical:hidesIconsForAccessibilityTextSizes:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  objc_class *v6;
  id v13;
  id v14;

  v13 = objc_allocWithZone(v6);
  v14 = sub_1BC593490(a1, a2, a3, a4, a5, a6);

  return v14;
}

id IconTextListView.init(textStyle:iconSize:interItemSpacingHorizontal:interItemSpacingVertical:hidesIconsForAccessibilityTextSizes:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  id v7;

  v7 = sub_1BC593490(a1, a2, a3, a4, a5, a6);

  return v7;
}

void sub_1BC5925A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  char *v10;
  _QWORD *v11;
  id v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;

  v6 = *(id *)a1;
  if (*(_QWORD *)a1)
  {
    v7 = *(_QWORD *)(a1 + 8);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v6);
    objc_msgSend(v6, sel_setContentMode_, 1);
    objc_msgSend(v6, sel_setTintColor_, v7);
  }
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v9 = (void *)sub_1BC62C650();
  objc_msgSend(v8, sel_setText_, v9);

  objc_msgSend(v8, sel_setTextColor_, a4);
  objc_msgSend(v8, sel_setFont_, *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font]);
  if (v6)
    objc_msgSend(v4, sel_addSubview_, v6);
  objc_msgSend(v4, sel_addSubview_, v8);
  v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_items];
  swift_beginAccess();
  v11 = *(_QWORD **)v10;
  v12 = v6;
  v13 = v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v10 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v11 = sub_1BC3B6FF8(0, v11[2] + 1, 1, v11);
    *(_QWORD *)v10 = v11;
  }
  v16 = v11[2];
  v15 = v11[3];
  if (v16 >= v15 >> 1)
  {
    v11 = sub_1BC3B6FF8((_QWORD *)(v15 > 1), v16 + 1, 1, v11);
    *(_QWORD *)v10 = v11;
  }
  v11[2] = v16 + 1;
  v17 = &v11[2 * v16];
  v17[4] = v6;
  v17[5] = v13;
  swift_endAccess();
  objc_msgSend(v4, sel_setNeedsLayout);

}

id sub_1BC5927A0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  id v5;
  id v6;
  id v7;

  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_items];
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (id *)(v2 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v7 = *v4;
      if (v6)
      {
        v6 = v6;
        objc_msgSend(v6, sel_removeFromSuperview);
      }
      objc_msgSend(v5, sel_removeFromSuperview);

      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)v1 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  return objc_msgSend(v0, sel_setNeedsLayout);
}

void sub_1BC59288C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double Width;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  void (*v15)(char *, uint64_t, uint64_t);
  id v16;
  double v17;
  double v18;
  uint64_t v19;
  void (*v20)(char *);
  uint64_t v21;
  _BYTE *v22;
  CGFloat *v23;
  double v24;
  void **v25;
  double v26;
  char **v27;
  id v28;
  id v29;
  double v30;
  double v31;
  double v32;
  void *v33;
  void *v34;
  double v35;
  char v36;
  id v37;
  id v38;
  id v39;
  id v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  id v46;
  CGFloat *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  double v51;
  void (*v52)(char *, uint64_t);
  double v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  double v57;
  unsigned int v58;
  void (*v59)(char *);
  void (*v60)(char *, uint64_t, uint64_t);
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  id v67;
  id v68;
  void *v69;
  double v70;
  double v71;
  double v72;
  double v73;
  objc_super v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;

  v1 = sub_1BC62D55C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for IconTextListView();
  v74.receiver = v0;
  v74.super_class = v5;
  objc_msgSendSuper2(&v74, sel_layoutSubviews);
  v67 = objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection);
  objc_msgSend(v0, sel_layoutMargins);
  v7 = v6;
  objc_msgSend(v0, sel_layoutMargins);
  v9 = v8;
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v75);
  v11 = v0;
  v12 = &v0[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_items];
  swift_beginAccess();
  v13 = *(_QWORD *)v12;
  if (!*(_QWORD *)(*(_QWORD *)v12 + 16))
  {
    v14 = 0;
    goto LABEL_23;
  }
  v57 = Width - v7;
  v14 = *(id *)(v13 + 40);
  v72 = Width - v7 - v9;
  objc_msgSend(v14, sel_sizeThatFits_, v72, 1.79769313e308);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v15(v4, *MEMORY[0x1E0DED500], v1);
  v16 = objc_msgSend(v14, sel_traitCollection);
  objc_msgSend(v16, sel_displayScale);
  sub_1BC62A994();
  objc_msgSend(v16, sel_displayScale);
  sub_1BC62A994();
  v18 = v17;

  v19 = v1;
  v20 = *(void (**)(char *))(v2 + 8);
  v63 = v19;
  v20(v4);

  v21 = *(_QWORD *)(*(_QWORD *)v12 + 16);
  if (!v21)
  {
LABEL_23:

    return;
  }
  v59 = v20;
  v60 = v15;
  v56 = v14;
  v22 = v0;
  v23 = (CGFloat *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_iconSize];
  v64 = OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_hidesIconsForAccessibilityTextSizes;
  v70 = *(double *)&v11[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_interItemSpacingVertical];
  v66 = OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_interItemSpacingHorizontal;
  v58 = *MEMORY[0x1E0DED508];
  v62 = v7;
  v61 = v9;
  if (v67 == (id)1)
    v24 = v9;
  else
    v24 = v7;
  v65 = v24;
  v55 = swift_bridgeObjectRetain();
  v25 = (void **)(v55 + 40);
  v26 = 0.0;
  v27 = &selRef_predicateWithFormat_;
  v71 = v18;
  do
  {
    v33 = *(v25 - 1);
    v34 = *v25;
    v35 = v23[1];
    if (v35 <= v18)
      v35 = v18;
    v73 = v35;
    if (!v33)
    {
      v28 = v34;
      v29 = 0;
      v30 = v65;
      v31 = v26;
      v32 = v72;
      goto LABEL_8;
    }
    v36 = v22[v64];
    v37 = v33;
    if ((v36 & 1) == 0)
    {
      v46 = v34;
      v45 = v67;
LABEL_16:
      v68 = v37;
      v69 = v34;
      v47 = v23;
      v41 = v62;
      v48 = v63;
      v49 = v58;
      if (v45 == (id)1)
        v41 = v57 - *v47;
      v50 = v60;
      v60(v4, v58, v63);
      sub_1BC62A9AC();
      v42 = v51;
      v52 = (void (*)(char *, uint64_t))v59;
      ((void (*)(char *, uint64_t))v59)(v4, v48);
      v43 = *v47;
      v44 = v47[1];
      v30 = v61;
      if (v45 != (id)1)
      {
        v76.origin.x = v41;
        v76.origin.y = v42;
        v76.size.width = *v47;
        v76.size.height = v47[1];
        v30 = CGRectGetMaxX(v76) + *(double *)&v22[v66];
      }
      v50(v4, v49, v48);
      sub_1BC62A9AC();
      v31 = v53;
      v52(v4, v48);
      v32 = v72 - *v47 - *(double *)&v22[v66];
      v23 = v47;
      v27 = &selRef_predicateWithFormat_;
      v37 = v68;
      v34 = v69;
      goto LABEL_21;
    }
    v38 = v34;
    v39 = objc_msgSend(v22, sel_traitCollection);
    v40 = objc_msgSend(v39, sel_preferredContentSizeCategory);

    LOBYTE(v39) = sub_1BC62CD1C();
    v41 = 0.0;
    v42 = 0.0;
    v43 = 0.0;
    v30 = v65;
    v31 = v26;
    v32 = v72;
    v44 = 0.0;
    v45 = v67;
    if ((v39 & 1) == 0)
      goto LABEL_16;
LABEL_21:
    objc_msgSend(v37, v27[212], v41, v42, v43, v44);
    v29 = v37;
    v78.origin.x = 0.0;
    v78.origin.y = 0.0;
    v78.size.width = 0.0;
    v78.size.height = 0.0;
    v77.origin.x = v41;
    v77.origin.y = v42;
    v77.size.width = v43;
    v77.size.height = v44;
    objc_msgSend(v29, sel_setHidden_, CGRectEqualToRect(v77, v78));

    v18 = v71;
LABEL_8:
    objc_msgSend(v34, v27[212], v30, v31, v32, v18);

    v26 = v26 + v70 + v73;
    v25 += 2;
    --v21;
  }
  while (v21);

  swift_bridgeObjectRelease();
}

double sub_1BC592E3C(double a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font), sel_lineHeight);
  swift_beginAccess();
  return a1;
}

void sub_1BC592F30(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  char v23;
  id v24;
  int v25;
  objc_super v26;

  v26.receiver = v1;
  v26.super_class = (Class)type metadata accessor for IconTextListView();
  objc_msgSendSuper2(&v26, sel_traitCollectionDidChange_, a1);
  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (a1)
  {
    v5 = objc_msgSend(a1, sel_preferredContentSizeCategory);
    v6 = sub_1BC62C680();
    v8 = v7;
    if (v6 == sub_1BC62C680() && v8 == v9)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v11 = sub_1BC62D574();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        goto LABEL_11;
    }
    v12 = objc_msgSend(v1, sel_traitCollection);
    v13 = objc_msgSend(v12, sel_legibilityWeight);

    if (v13 == objc_msgSend(a1, sel_legibilityWeight))
      goto LABEL_16;
    goto LABEL_11;
  }

LABEL_11:
  v14 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_textStyle]);
  v15 = OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font;
  v16 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font] = v14;

  v17 = &v1[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_items];
  swift_beginAccess();
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    v20 = 40;
    do
    {
      objc_msgSend(*(id *)(v18 + v20), sel_setFont_, *(_QWORD *)&v1[v15]);
      v20 += 16;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v1, sel_setNeedsLayout);
LABEL_16:
  if (v1[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_hidesIconsForAccessibilityTextSizes] == 1)
  {
    v21 = objc_msgSend(v1, sel_traitCollection);
    v22 = objc_msgSend(v21, sel_preferredContentSizeCategory);

    v23 = sub_1BC62CD1C();
    if (!a1
      || (v24 = objc_msgSend(a1, sel_preferredContentSizeCategory),
          v25 = sub_1BC62CD1C() & 1,
          v24,
          v25 != (v23 & 1)))
    {
      objc_msgSend(v1, sel_setNeedsLayout);
    }
  }
}

id IconTextListView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void IconTextListView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id IconTextListView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IconTextListView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void IconTextListView.addItem(for:iconSize:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;

  v2 = *(void **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  LOBYTE(v12) = *(_BYTE *)a1;
  DisplayCategory.Kind.systemImageName.getter();
  if (!v5)
  {
    v8 = 0;
    goto LABEL_5;
  }
  v6 = objc_msgSend(v1, sel_traitCollection, v12);
  v7 = (void *)sub_1BC62C650();
  v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_compatibleWithTraitCollection_, v7, v6);
  swift_bridgeObjectRelease();

  if (!v8)
  {
LABEL_5:
    v2 = 0;
    goto LABEL_6;
  }
  v9 = v8;
  v10 = v2;
LABEL_6:
  v11 = objc_msgSend((id)objc_opt_self(), sel_labelColor, v8, v2);
  sub_1BC5925A8((uint64_t)&v12, v3, v4, (uint64_t)v11);

  sub_1BC3584E4(v8, v2);
}

id sub_1BC593490(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  void *v13;
  char *v14;
  id v15;
  double *v16;
  objc_super v18;

  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_items] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_textStyle] = a1;
  v13 = (void *)objc_opt_self();
  v14 = v6;
  v15 = objc_msgSend(v13, sel_preferredFontForTextStyle_, a1);
  *(_QWORD *)&v14[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font] = v15;
  v16 = (double *)&v14[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_iconSize];
  *v16 = a3;
  v16[1] = a4;
  *(double *)&v14[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_interItemSpacingHorizontal] = a5;
  *(double *)&v14[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_interItemSpacingVertical] = a6;
  v14[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_hidesIconsForAccessibilityTextSizes] = a2;

  v18.receiver = v14;
  v18.super_class = (Class)type metadata accessor for IconTextListView();
  return objc_msgSendSuper2(&v18, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
}

uint64_t type metadata accessor for IconTextListView()
{
  return objc_opt_self();
}

uint64_t method lookup function for IconTextListView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IconTextListView.__allocating_init(textStyle:iconSize:interItemSpacingHorizontal:interItemSpacingVertical:hidesIconsForAccessibilityTextSizes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of IconTextListView.addItem(icon:text:textColor:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of IconTextListView.removeAll()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t assignWithCopy for IconTextListView.Icon(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

ValueMetadata *type metadata accessor for IconTextListView.Icon()
{
  return &type metadata for IconTextListView.Icon;
}

uint64_t assignWithCopy for IconTextListView.ListItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

ValueMetadata *type metadata accessor for IconTextListView.ListItem()
{
  return &type metadata for IconTextListView.ListItem;
}

HealthRecordsUI::MedicalRecordTimelineHeaderItem::HeaderType_optional __swiftcall MedicalRecordTimelineHeaderItem.HeaderType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (HealthRecordsUI::MedicalRecordTimelineHeaderItem::HeaderType_optional)rawValue;
}

uint64_t MedicalRecordTimelineHeaderItem.HeaderType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HealthRecordsUI::MedicalRecordTimelineHeaderItem::HeaderType_optional sub_1BC5936FC(Swift::Int *a1)
{
  return MedicalRecordTimelineHeaderItem.HeaderType.init(rawValue:)(*a1);
}

uint64_t MedicalRecordTimelineHeaderItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC59373C()
{
  sub_1BC62A778();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return 0x7449726564616548;
}

void sub_1BC5937A8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    sub_1BC62C740();
  v1 = *(void **)(v0 + 56);
  if (v1)
  {
    v3 = v1;
    v2 = objc_msgSend(v3, sel_bundleIdentifier);
    sub_1BC62C680();

    sub_1BC62C740();
    swift_bridgeObjectRelease();

  }
}

uint64_t MedicalRecordTimelineHeaderItem.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_uuid;
  v2 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineHeaderItem.__deallocating_deinit()
{
  MedicalRecordTimelineHeaderItem.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC593974()
{
  sub_1BC62D670();
  sub_1BC5937A8();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5939B0()
{
  sub_1BC62D670();
  sub_1BC5937A8();
  return sub_1BC62D6AC();
}

void sub_1BC5939F0()
{
  sub_1BC5937A8();
}

uint64_t sub_1BC593A10()
{
  sub_1BC62D670();
  sub_1BC5937A8();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC593A4C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC593A88()
{
  sub_1BC62A778();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return 0x7449726564616548;
}

uint64_t sub_1BC593AF4(uint64_t *a1, uint64_t *a2)
{
  return _s15HealthRecordsUI31MedicalRecordTimelineHeaderItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

id sub_1BC593B00()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___titleLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    v5 = (void *)objc_opt_self();
    v6 = objc_msgSend(v5, sel_labelColor);
    objc_msgSend(v4, sel_setTextColor_, v6);

    v7 = v4;
    v8 = objc_msgSend(v5, sel_clearColor);
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BC593C20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___subtitleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v6 = (void *)sub_1BC62CDDC();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    v7 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setClipsToBounds_, 0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_1BC593D70()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___separatorView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___separatorView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    v5 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

uint64_t sub_1BC593E58(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC397AF4(a1, (uint64_t)v5, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1BC595D58((uint64_t)v5, v3, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  swift_endAccess();
  sub_1BC593EF8();
  return sub_1BC384EB4((uint64_t)v5, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC593EF8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  _QWORD v12[5];

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1BC397AF4(v1, (uint64_t)v12, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  if (v12[3])
  {
    sub_1BC37AE0C();
    type metadata accessor for MedicalRecordTimelineHeaderItem(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      LOBYTE(v12[0]) = *(_BYTE *)(v11 + 64);
      v2 = v12[0];
      sub_1BC5951E8((uint64_t)v12);
      v3 = *(_QWORD *)(v11 + 16);
      v4 = *(_QWORD *)(v11 + 24);
      v5 = *(_QWORD *)(v11 + 32);
      v6 = *(_QWORD *)(v11 + 40);
      LOBYTE(v12[0]) = v2;
      sub_1BC5950E0(v3, v4, v5, v6, (uint64_t)v12);
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
      v7 = (void *)sub_1BC62CDDC();
      v8 = sub_1BC593B00();
      objc_msgSend(v8, sel_setFont_, v7);

      v9 = sub_1BC593D70();
      objc_msgSend(v9, sel_setHidden_, (*(_BYTE *)(v11 + 48) & 1) == 0);

      LOBYTE(v12[0]) = *(_BYTE *)(v11 + 64);
      sub_1BC5953C0((unsigned __int8 *)v12);
      return swift_release();
    }
  }
  else
  {
    sub_1BC384EB4((uint64_t)v12, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  }
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC397AF4(v1, (uint64_t)v12, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  sub_1BC62C6F8();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  result = sub_1BC62D394();
  __break(1u);
  return result;
}

uint64_t sub_1BC594168@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  return sub_1BC397AF4(v3, a1, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC5941C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1BC595D58(a1, v3, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  swift_endAccess();
  sub_1BC593EF8();
  return sub_1BC384EB4(a1, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t (*sub_1BC59425C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5942A4;
}

uint64_t sub_1BC5942A4(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC593EF8);
}

uint64_t sub_1BC5942B0(uint64_t a1, _QWORD *a2)
{
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = (void (*)(uint64_t))MEMORY[0x1E0D2AAA0];
  sub_1BC384E68(0, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  sub_1BC397AF4(a1, (uint64_t)&v10 - v6, &qword_1EF42BC08, v4);
  v8 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext;
  swift_beginAccess();
  sub_1BC595D58((uint64_t)v7, v8, &qword_1EF42BC08, v4);
  swift_endAccess();
  sub_1BC594398();
  return sub_1BC384EB4((uint64_t)v7, &qword_1EF42BC08, v4);
}

uint64_t sub_1BC594398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  char *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v1 = v0;
  v31 = sub_1BC62A970();
  v2 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void (*)(uint64_t))MEMORY[0x1E0D2AAA0];
  sub_1BC384E68(0, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - v7;
  v9 = sub_1BC62ADD8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext;
  swift_beginAccess();
  sub_1BC397AF4(v13, (uint64_t)v8, &qword_1EF42BC08, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1BC384EB4((uint64_t)v8, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v15 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1BC397AF4(v15, (uint64_t)&v33, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  if (v35)
  {
    sub_1BC37AE0C();
    type metadata accessor for MedicalRecordTimelineHeaderItem(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v30 = v32;
      v33 = 0;
      v34 = 0xE000000000000000;
      sub_1BC62D1D8();
      v16 = v12;
      v17 = sub_1BC62C680();
      v19 = v18;
      swift_bridgeObjectRelease();
      v33 = v17;
      v34 = v19;
      sub_1BC62C764();
      v29 = v16;
      sub_1BC62ADCC();
      v20 = sub_1BC62A964();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v31);
      v32 = v20;
      sub_1BC62D52C();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v21 = v33;
      v22 = v34;
      v23 = sub_1BC593B00();
      v33 = v21;
      v34 = v22;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v24 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v23, sel_setAccessibilityIdentifier_, v24);

      v25 = sub_1BC593C20();
      v33 = v21;
      v34 = v22;
      sub_1BC62C764();
      v26 = v29;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v27 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_setAccessibilityIdentifier_, v27);
      swift_release();

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v26, v9);
    }
  }
  else
  {
    sub_1BC384EB4((uint64_t)&v33, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BC5947A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext;
  swift_beginAccess();
  return sub_1BC397AF4(v3, a1, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
}

uint64_t sub_1BC594808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(uint64_t);

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext;
  swift_beginAccess();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0D2AAA0];
  sub_1BC595D58(a1, v3, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  swift_endAccess();
  sub_1BC594398();
  return sub_1BC384EB4(a1, &qword_1EF42BC08, v4);
}

uint64_t (*sub_1BC59489C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5948E4;
}

uint64_t sub_1BC5948E4(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC594398);
}

uint64_t sub_1BC5948F0@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1BC397AF4(v3, (uint64_t)v7, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  if (!v8)
  {
    result = sub_1BC384EB4((uint64_t)v7, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    goto LABEL_5;
  }
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineHeaderItem(0);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_5:
    v5 = 4;
    goto LABEL_6;
  }
  v5 = *(_BYTE *)(v6 + 64);
  result = swift_release();
LABEL_6:
  *a1 = v5;
  return result;
}

id MedicalRecordTimelineHeaderItemCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicalRecordTimelineHeaderItemCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_customConstraints] = MEMORY[0x1E0DEE9D8];
  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext];
  v11 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  v12 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC594B4C();

  return v12;
}

id sub_1BC594B4C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  unsigned __int8 v12;
  uint64_t v14;
  unsigned __int8 v15[24];
  uint64_t v16;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v2, sel_setClipsToBounds_, 0);

  v3 = objc_msgSend(v1, sel_contentView);
  v4 = sub_1BC593B00();
  objc_msgSend(v3, sel_addSubview_, v4);

  v5 = objc_msgSend(v1, sel_contentView);
  v6 = sub_1BC593C20();
  objc_msgSend(v5, sel_addSubview_, v6);

  v7 = objc_msgSend(v1, sel_contentView);
  v8 = sub_1BC593D70();
  objc_msgSend(v7, sel_addSubview_, v8);

  v9 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1BC397AF4(v9, (uint64_t)v15, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  if (v16)
  {
    sub_1BC37AE0C();
    type metadata accessor for MedicalRecordTimelineHeaderItem(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_release();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
      v10 = (void *)sub_1BC62CDDC();
      v11 = sub_1BC593B00();
      objc_msgSend(v11, sel_setFont_, v10);

    }
  }
  else
  {
    sub_1BC384EB4((uint64_t)v15, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  }
  sub_1BC397AF4(v9, (uint64_t)v15, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  if (!v16)
  {
    sub_1BC384EB4((uint64_t)v15, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    goto LABEL_9;
  }
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineHeaderItem(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v12 = 4;
    goto LABEL_10;
  }
  v12 = *(_BYTE *)(v14 + 64);
  swift_release();
LABEL_10:
  v15[0] = v12;
  return sub_1BC5953C0(v15);
}

void sub_1BC594E10(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  char v7;
  uint64_t v8;
  void *v9;
  id v10;
  unsigned __int8 v11;
  uint64_t v12;
  unsigned __int8 v13[24];
  uint64_t v14;
  objc_super v15;

  v2 = v1;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  objc_msgSendSuper2(&v15, sel_traitCollectionDidChange_, a1);
  v4 = objc_msgSend(v2, sel_traitCollection);
  v5 = v4;
  if (!a1)
  {
    if (!v4)
      return;

LABEL_7:
    v8 = (uint64_t)v2 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
    swift_beginAccess();
    sub_1BC397AF4(v8, (uint64_t)v13, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    if (v14)
    {
      sub_1BC37AE0C();
      type metadata accessor for MedicalRecordTimelineHeaderItem(0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_release();
        sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
        v9 = (void *)sub_1BC62CDDC();
        v10 = sub_1BC593B00();
        objc_msgSend(v10, sel_setFont_, v9);

      }
    }
    else
    {
      sub_1BC384EB4((uint64_t)v13, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    }
    sub_1BC397AF4(v8, (uint64_t)v13, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    if (v14)
    {
      sub_1BC37AE0C();
      type metadata accessor for MedicalRecordTimelineHeaderItem(0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v11 = *(_BYTE *)(v12 + 64);
        swift_release();
LABEL_16:
        v13[0] = v11;
        sub_1BC5953C0(v13);
        return;
      }
    }
    else
    {
      sub_1BC384EB4((uint64_t)v13, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    }
    v11 = 4;
    goto LABEL_16;
  }
  if (!v4)
    goto LABEL_7;
  sub_1BC34B6A0(0, &qword_1ED6A58F8);
  v6 = a1;
  v7 = sub_1BC62CEB4();

  if ((v7 & 1) == 0)
    goto LABEL_7;
}

void sub_1BC5950E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

void sub_1BC595124(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;

  v20 = sub_1BC593B00();
  if (v19)
    v19 = (void *)sub_1BC62C650();
  objc_msgSend(v20, sel_setText_, v19);

  v21 = sub_1BC593C20();
  if (v18)
    v22 = (void *)sub_1BC62C650();
  else
    v22 = 0;
  objc_msgSend(v21, sel_setText_, v22);

  v23 = sub_1BC593C20();
  objc_msgSend(v23, sel_setHidden_, v18 == 0);

}

void sub_1BC5951E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1BC384E68(0, &qword_1EF42C0C8, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BC595280()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC62BC60();
  v1 = sub_1BC62BC78();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 0, 1, v1);
  return MEMORY[0x1BCCF1FE0](v0);
}

void sub_1BC5952DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  id v6;

  sub_1BC62BC6C();
  v2 = sub_1BC62BC78();
  v3 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v0, 0, 1, v2);
  v4 = MEMORY[0x1BCCF1FE0](v0);
  MEMORY[0x1BCCF1FD4](v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    v5 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
    sub_1BC397AF4(v1, v0, &qword_1EF42C0C8, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    MEMORY[0x1BCCF1FE0](v0);
    sub_1BC384EB4(v1, &qword_1EF42C0C8, v5);
    JUMPOUT(0x1BC5952C4);
  }
  v6 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
  sub_1BC62BC3C();
  JUMPOUT(0x1BC5952BCLL);
}

id sub_1BC5953C0(unsigned __int8 *a1)
{
  char *v1;
  unsigned __int8 v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unsigned __int8 v8;

  v2 = *a1;
  v3 = (void *)objc_opt_self();
  v4 = OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_customConstraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_deactivateConstraints_, v5);

  v8 = v2;
  *(_QWORD *)&v1[v4] = sub_1BC5954C8(&v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v6);

  return objc_msgSend(v1, sel_setNeedsLayout);
}

uint64_t sub_1BC5954C8(unsigned __int8 *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v57;

  v2 = v1;
  v3 = *a1;
  if ((_DWORD)v3 != 4)
    __asm { BR              X9 }
  sub_1BC34D844();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC639650;
  v5 = sub_1BC593B00();
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = objc_msgSend(v2, sel_contentView);
  v8 = objc_msgSend(v7, (SEL)&selRef_setCategoriesBySourceAlphaOrdered_ + 4);

  v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, 0.0);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = objc_msgSend(v2, (SEL)&selRef_invalidate);
  v11 = objc_msgSend(v10, sel_trailingAnchor);

  v12 = sub_1BC593B00();
  v13 = objc_msgSend(v12, sel_trailingAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, 2.0);
  *(_QWORD *)(v4 + 40) = v14;
  v15 = sub_1BC593C20();
  v16 = objc_msgSend(v15, (SEL)&selRef_setCategoriesBySourceAlphaOrdered_ + 4);

  v17 = sub_1BC593B00();
  v18 = objc_msgSend(v17, sel_bottomAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v18, 4.0);
  *(_QWORD *)(v4 + 48) = v19;
  v20 = sub_1BC593C20();
  v21 = objc_msgSend(v20, sel_leadingAnchor);

  v22 = sub_1BC593B00();
  v23 = objc_msgSend(v22, sel_leadingAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(_QWORD *)(v4 + 56) = v24;
  v25 = sub_1BC593C20();
  v26 = objc_msgSend(v25, sel_trailingAnchor);

  v27 = sub_1BC593B00();
  v28 = objc_msgSend(v27, sel_trailingAnchor);

  v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v28);
  *(_QWORD *)(v4 + 64) = v29;
  v30 = sub_1BC593D70();
  v31 = objc_msgSend(v30, sel_leadingAnchor);

  v32 = objc_msgSend(v2, sel_contentView);
  v33 = objc_msgSend(v32, sel_leadingAnchor);

  v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v33);
  *(_QWORD *)(v4 + 72) = v34;
  v35 = sub_1BC593D70();
  v36 = objc_msgSend(v35, sel_trailingAnchor);

  v37 = objc_msgSend(v2, sel_contentView);
  v38 = objc_msgSend(v37, sel_trailingAnchor);

  v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
  *(_QWORD *)(v4 + 80) = v39;
  v40 = sub_1BC593D70();
  v41 = objc_msgSend(v40, sel_topAnchor);

  v42 = sub_1BC593C20();
  v43 = objc_msgSend(v42, sel_bottomAnchor);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 8.0);
  *(_QWORD *)(v4 + 88) = v44;
  v45 = objc_msgSend(v2, sel_contentView);
  v46 = objc_msgSend(v45, sel_bottomAnchor);

  v47 = sub_1BC593C20();
  v48 = objc_msgSend(v47, sel_bottomAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, -16.0);
  *(_QWORD *)(v4 + 96) = v49;
  v57 = v4;
  sub_1BC62C890();
  v50 = sub_1BC593B00();
  v51 = objc_msgSend(v50, sel_leadingAnchor);

  v52 = objc_msgSend(v2, sel_contentView);
  v53 = objc_msgSend(v52, sel_leadingAnchor);

  v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v53, 2.0);
  v55 = v54;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();

  return v57;
}

id MedicalRecordTimelineHeaderItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s15HealthRecordsUI31MedicalRecordTimelineHeaderItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;

  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24))
  {
    v5 = sub_1BC62D574();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a2 + 40);
  if (!v7)
  {
    if (v8)
      return 0;
    goto LABEL_15;
  }
  if (!v8)
    return 0;
  v9 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && v7 == v8;
  if (v9 || (v10 = sub_1BC62D574(), result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    if (*(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48)
      && *(unsigned __int8 *)(a1 + 64) == *(unsigned __int8 *)(a2 + 64))
    {
      if (*(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72) && *(_QWORD *)(a1 + 80) == *(_QWORD *)(a2 + 80))
        return 1;
      else
        return sub_1BC62D574();
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BC595D58(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC384E68(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

uint64_t type metadata accessor for MedicalRecordTimelineHeaderItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF437960);
}

uint64_t type metadata accessor for MedicalRecordTimelineHeaderItemCell(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF437A70);
}

unint64_t sub_1BC595DD0()
{
  unint64_t result;

  result = qword_1EF437928;
  if (!qword_1EF437928)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordTimelineHeaderItem.HeaderType, &type metadata for MedicalRecordTimelineHeaderItem.HeaderType);
    atomic_store(result, (unint64_t *)&qword_1EF437928);
  }
  return result;
}

unint64_t sub_1BC595E18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF437930;
  if (!qword_1EF437930)
  {
    v1 = type metadata accessor for MedicalRecordTimelineHeaderItem(255);
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordTimelineHeaderItem, v1);
    atomic_store(result, (unint64_t *)&qword_1EF437930);
  }
  return result;
}

uint64_t sub_1BC595E60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  return sub_1BC397AF4(v3, a2, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC595EC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext;
  swift_beginAccess();
  return sub_1BC397AF4(v3, a2, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
}

uint64_t sub_1BC595F30()
{
  return type metadata accessor for MedicalRecordTimelineHeaderItem(0);
}

uint64_t sub_1BC595F38()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MedicalRecordTimelineHeaderItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t storeEnumTagSinglePayload for MedicalRecordTimelineHeaderItem.HeaderType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC596058 + 4 * byte_1BC64945A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC59608C + 4 * byte_1BC649455[v4]))();
}

uint64_t sub_1BC59608C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC596094(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC59609CLL);
  return result;
}

uint64_t sub_1BC5960A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC5960B0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC5960B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC5960BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordTimelineHeaderItem.HeaderType()
{
  return &type metadata for MedicalRecordTimelineHeaderItem.HeaderType;
}

uint64_t sub_1BC5960D8()
{
  return type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
}

void sub_1BC5960E0()
{
  unint64_t v0;

  sub_1BC384E68(319, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MedicalRecordTimelineHeaderItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.sectionContext.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.sectionContext.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.sectionContext.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.headerType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.commonInit()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.setUpConstraints(type:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

void sub_1BC59628C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_customConstraints] = MEMORY[0x1E0DEE9D8];
  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext];
  v3 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);

  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC59636C(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BDA2C(0, v2, 0);
    result = v8;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      v6 = *(_QWORD *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_1BC3BDA2C(v6 > 1, v7 + 1, 1);
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_QWORD *)(result + 8 * v7 + 32) = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1BC59642C(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BDA2C(0, v2, 0);
    result = v8;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      v6 = *(_QWORD *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_1BC3BDA2C(v6 > 1, v7 + 1, 1);
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_QWORD *)(result + 8 * v7 + 32) = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1BC5964EC(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1BC504A30(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1BC599268(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BC596554@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  char **v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  double v35;
  double v36;
  double v37;
  double v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v85)(uint64_t);
  uint64_t v86;
  double v87;
  double v88;
  double v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  double v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  id v104;
  id v105;
  _QWORD v106[5];
  char v107;
  uint64_t v108;

  v4 = qword_1EF4284C8;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v7 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v103 = objc_msgSend(v5, sel_initWithString_attributes_, v6, v7);

  v8 = qword_1EF4284E8;
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once();
  v9 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v102 = objc_msgSend(v9, sel_initWithString_attributes_, v10, v11);

  v12 = &selRef_constraintGreaterThanOrEqualToConstant_;
  if (a1[7])
  {
    v13 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v15 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v105 = objc_msgSend(v13, (SEL)&selRef_isHidden, v14, v15);

    if (a1[5])
    {
LABEL_7:
      v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v18 = (void *)sub_1BC62C53C();
      swift_bridgeObjectRelease();
      v104 = objc_msgSend(v16, (SEL)&selRef_isHidden, v17, v18);

      goto LABEL_10;
    }
  }
  else
  {
    v105 = 0;
    if (a1[5])
      goto LABEL_7;
  }
  v104 = 0;
LABEL_10:
  v19 = a1[8];
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v108 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BC62D28C();
    v21 = (_BYTE *)(v19 + 72);
    do
    {
      v22 = *((_QWORD *)v21 - 5);
      v23 = *((_QWORD *)v21 - 4);
      v24 = *((_QWORD *)v21 - 3);
      v25 = *((_QWORD *)v21 - 2);
      v26 = *((_QWORD *)v21 - 1);
      v27 = *v21;
      v21 += 48;
      v106[0] = v22;
      v106[1] = v23;
      v106[2] = v24;
      v106[3] = v25;
      v106[4] = v26;
      v107 = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC596F04((uint64_t)v106);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      --v20;
    }
    while (v20);
    v100 = v108;
    swift_bridgeObjectRelease();
    v28 = 0x1E0CB3000;
    v12 = &selRef_constraintGreaterThanOrEqualToConstant_;
  }
  else
  {
    v100 = MEMORY[0x1E0DEE9D8];
    v28 = 0x1E0CB3000uLL;
  }
  sub_1BC599CDC();
  v101 = v29;
  v30 = qword_1EF428538;
  swift_bridgeObjectRetain();
  if (v30 != -1)
    swift_once();
  v31 = objc_allocWithZone(*(Class *)(v28 + 1176));
  swift_bridgeObjectRetain();
  v32 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v33 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v31, v12[316], v32, v33);

  if (qword_1EF428478 != -1)
    swift_once();
  v99 = v34;
  objc_msgSend(v34, sel_boundingRectWithSize_options_context_, 1, 0, *(double *)&qword_1EF459C38, 1.79769313e308);
  v36 = v35;
  v38 = v37;
  v39 = (void (*)(uint64_t))a1[15];
  v40 = a1[16];
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v39;
  *(_QWORD *)(v41 + 24) = v40;
  v98 = v41;
  v42 = (void (*)(uint64_t))a1[17];
  v43 = a1[18];
  v44 = swift_allocObject();
  v85 = v42;
  *(_QWORD *)(v44 + 16) = v42;
  *(_QWORD *)(v44 + 24) = v43;
  v97 = v44;
  v45 = (void (*)(uint64_t, uint64_t))a1[19];
  v46 = a1[20];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v45;
  *(_QWORD *)(v47 + 24) = v46;
  v96 = v47;
  swift_retain();
  swift_retain();
  swift_retain();
  v48 = sub_1BC598F10();
  v94 = v49;
  v95 = v48;
  v50 = sub_1BC598F10();
  v92 = v51;
  v93 = v50;
  v52 = 0.0;
  v53 = 0.0;
  v54 = 0;
  if (v105)
    v53 = sub_1BC598F10();
  v90 = v54;
  v91 = v53;
  v55 = 0;
  if (v104)
  {
    v52 = sub_1BC598F10();
    v55 = v56;
  }
  v88 = ceil(v36);
  v89 = ceil(v38);
  v57 = sub_1BC598F10();
  v86 = v58;
  v87 = v57;
  v39(8);
  v59 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v60 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v61 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v62 = objc_msgSend(v59, sel_initWithString_attributes_, v60, v61);

  v63 = sub_1BC598F10();
  v65 = v64;

  v85(8);
  v66 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v67 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v68 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v69 = objc_msgSend(v66, sel_initWithString_attributes_, v67, v68);

  v70 = sub_1BC598F10();
  v72 = v71;

  v45(8, 88);
  v73 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v74 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v75 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v76 = objc_msgSend(v73, sel_initWithString_attributes_, v74, v75);

  v77 = sub_1BC598F10();
  v79 = v78;

  LOBYTE(v108) = v105 == 0;
  sub_1BC34B508(0, &qword_1EF4303F0, (uint64_t)&_s10SortedDataVN, (uint64_t (*)(_QWORD, uint64_t))_s7PDFDataVMa);
  v81 = (uint64_t)a1 + *(int *)(v80 + 28);
  sub_1BC34B508(0, &qword_1EF432A88, (uint64_t)&_s9SizedDataVN, (uint64_t (*)(_QWORD, uint64_t))_s7PDFDataVMa);
  v83 = v82;
  sub_1BC36D6D8(v81, a2 + *(int *)(v82 + 28));
  *(_QWORD *)a2 = v103;
  *(double *)(a2 + 8) = v95;
  *(_QWORD *)(a2 + 16) = v94;
  *(_QWORD *)(a2 + 24) = v102;
  *(double *)(a2 + 32) = v93;
  *(_QWORD *)(a2 + 40) = v92;
  *(_QWORD *)(a2 + 48) = v105;
  *(double *)(a2 + 56) = v91;
  *(_QWORD *)(a2 + 64) = v90;
  *(_BYTE *)(a2 + 72) = v108;
  *(_QWORD *)(a2 + 80) = v104;
  *(double *)(a2 + 88) = v52;
  *(_QWORD *)(a2 + 96) = v55;
  *(_BYTE *)(a2 + 104) = v104 == 0;
  *(_QWORD *)(a2 + 112) = v100;
  *(_QWORD *)(a2 + 120) = v101;
  *(double *)(a2 + 128) = v87;
  *(_QWORD *)(a2 + 136) = v86;
  *(_QWORD *)(a2 + 144) = v99;
  *(double *)(a2 + 152) = v88;
  *(double *)(a2 + 160) = v89;
  *(_QWORD *)(a2 + 168) = sub_1BC599F34;
  *(_QWORD *)(a2 + 176) = v98;
  *(double *)(a2 + 184) = v63;
  *(_QWORD *)(a2 + 192) = v65;
  *(_QWORD *)(a2 + 200) = sub_1BC59B3A0;
  *(_QWORD *)(a2 + 208) = v97;
  *(double *)(a2 + 216) = v70;
  *(_QWORD *)(a2 + 224) = v72;
  *(_QWORD *)(a2 + 232) = sub_1BC599F4C;
  *(_QWORD *)(a2 + 240) = v96;
  *(double *)(a2 + 248) = v77;
  *(_QWORD *)(a2 + 256) = v79;
  *(_QWORD *)(a2 + 264) = sub_1BC598F9C;
  *(_QWORD *)(a2 + 272) = 0;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(a2, 0, 1, v83);
}

void sub_1BC596F04(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v2 = qword_1EF4284C0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v5 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_initWithString_attributes_, v4, v5);

  v6 = qword_1EF4286F8;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = (id)qword_1EF459FA8;
  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v8, v7);

  if (v9)
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(unsigned __int8 *)(a1 + 40);
    sub_1BC3F46D4(v10, v11);
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x1BC598D10);
}

id sub_1BC598D30(uint64_t a1, void (*a2)(void))
{
  id v2;
  void *v3;
  void *v4;
  id v5;

  a2();
  if (qword_1EF4284E8 != -1)
    swift_once();
  v2 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v4 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_initWithString_attributes_, v3, v4);

  return v5;
}

id sub_1BC598E20(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  a3();
  if (qword_1EF428538 != -1)
    swift_once();
  v3 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v5 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithString_attributes_, v4, v5);

  return v6;
}

double sub_1BC598F10()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  double v6;

  v1 = objc_msgSend(v0, sel_string);
  v2 = sub_1BC62C680();
  v4 = v3;

  swift_bridgeObjectRelease();
  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0.0;
  objc_msgSend(v0, sel_size);
  return ceil(v6);
}

double sub_1BC598F9C()
{
  return sub_1BC598F10();
}

uint64_t sub_1BC598FBC()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v0 = qword_1EF4284D8;
  swift_bridgeObjectRetain();
  if (v0 != -1)
    swift_once();
  v1 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v3 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_initWithString_attributes_, v2, v3);

  v5 = sub_1BC598F10();
  v7 = v6;
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_initWithString_attributes_, v9, v10);

  v12 = sub_1BC598F10();
  v14 = v13;
  v15 = MEMORY[0x1E0DED1E8];
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC639570;
  *(_QWORD *)(v16 + 32) = v4;
  *(_QWORD *)(v16 + 40) = v11;
  v20 = v16;
  sub_1BC62C890();
  sub_1BC34B508(0, &qword_1EF42C518, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))v15);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BC6395A0;
  *(double *)(v17 + 32) = v5;
  *(double *)(v17 + 40) = v12;
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v18 + 32) = v7;
  *(_QWORD *)(v18 + 40) = v14;
  _s10SizedValueCMa();
  result = swift_allocObject();
  *(_QWORD *)(result + 48) = 0;
  *(_BYTE *)(result + 56) = 1;
  *(_QWORD *)(result + 16) = v20;
  *(_QWORD *)(result + 24) = v17;
  *(_QWORD *)(result + 32) = v18;
  *(_BYTE *)(result + 40) = 0;
  return result;
}

uint64_t sub_1BC599268(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __int128 *v42;
  BOOL v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *__dst;

  v3 = a1[1];
  result = sub_1BC62D520();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1BC599964(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v110 = result;
  v107 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v98 = v11;
      v109 = v8;
      if (v12 >= 2)
      {
        v99 = *v107;
        do
        {
          v100 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v99)
            goto LABEL_159;
          v101 = v98;
          v102 = *(_QWORD *)&v98[16 * v100 + 32];
          v103 = *(_QWORD *)&v98[16 * v12 + 24];
          sub_1BC599A44((char *)(v99 + 32 * v102), (char *)(v99 + 32 * *(_QWORD *)&v98[16 * v12 + 16]), v99 + 32 * v103, __dst);
          if (v1)
            break;
          if (v103 < v102)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v101 = sub_1BC504414((uint64_t)v101);
          if (v100 >= *((_QWORD *)v101 + 2))
            goto LABEL_149;
          v104 = &v101[16 * v100 + 32];
          *(_QWORD *)v104 = v102;
          *((_QWORD *)v104 + 1) = v103;
          v105 = *((_QWORD *)v101 + 2);
          if (v12 > v105)
            goto LABEL_150;
          memmove(&v101[16 * v12 + 16], &v101[16 * v12 + 32], 16 * (v105 - v12));
          v98 = v101;
          *((_QWORD *)v101 + 2) = v105 - 1;
          v12 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v109 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v109 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    sub_1BC3CBFF0();
    v7 = sub_1BC62C8CC();
    *(_QWORD *)(v7 + 16) = v6;
    v109 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v108 = *a1 + 8;
  v106 = *a1 + 24;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v111 = v3;
  v112 = *a1;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 32 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 32 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1BC62D574();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v108 + 32 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 32 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1BC62D574()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 4;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 32 * v20;
        v26 = 32 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = (_OWORD *)(v10 + v26);
            v30 = v10 + v25;
            v31 = *(_OWORD *)(v10 + v26);
            v32 = *(_QWORD *)(v10 + v26 + 16);
            v33 = *(_QWORD *)(v10 + v26 + 24);
            v34 = *(_OWORD *)(v10 + v25 - 16);
            *v29 = *(_OWORD *)(v10 + v25 - 32);
            v29[1] = v34;
            *(_OWORD *)(v30 - 32) = v31;
            *(_QWORD *)(v30 - 16) = v32;
            *(_QWORD *)(v30 - 8) = v33;
          }
          ++v28;
          v25 -= 32;
          v26 += 32;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v110)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BC503AB4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v48 = *((_QWORD *)v11 + 2);
    v47 = *((_QWORD *)v11 + 3);
    v12 = v48 + 1;
    if (v48 >= v47 >> 1)
      v11 = sub_1BC503AB4((char *)(v47 > 1), v48 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v49 = v11 + 32;
    v50 = &v11[16 * v48 + 32];
    *(_QWORD *)v50 = v13;
    *((_QWORD *)v50 + 1) = v9;
    if (v48)
    {
      v10 = v112;
      while (1)
      {
        v51 = v12 - 1;
        if (v12 >= 4)
        {
          v56 = &v49[16 * v12];
          v57 = *((_QWORD *)v56 - 8);
          v58 = *((_QWORD *)v56 - 7);
          v62 = __OFSUB__(v58, v57);
          v59 = v58 - v57;
          if (v62)
            goto LABEL_135;
          v61 = *((_QWORD *)v56 - 6);
          v60 = *((_QWORD *)v56 - 5);
          v62 = __OFSUB__(v60, v61);
          v54 = v60 - v61;
          v55 = v62;
          if (v62)
            goto LABEL_136;
          v63 = v12 - 2;
          v64 = &v49[16 * v12 - 32];
          v66 = *(_QWORD *)v64;
          v65 = *((_QWORD *)v64 + 1);
          v62 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          if (v62)
            goto LABEL_138;
          v62 = __OFADD__(v54, v67);
          v68 = v54 + v67;
          if (v62)
            goto LABEL_141;
          if (v68 >= v59)
          {
            v86 = &v49[16 * v51];
            v88 = *(_QWORD *)v86;
            v87 = *((_QWORD *)v86 + 1);
            v62 = __OFSUB__(v87, v88);
            v89 = v87 - v88;
            if (v62)
              goto LABEL_145;
            v79 = v54 < v89;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v80 = *((_QWORD *)v11 + 4);
            v81 = *((_QWORD *)v11 + 5);
            v62 = __OFSUB__(v81, v80);
            v73 = v81 - v80;
            v74 = v62;
            goto LABEL_99;
          }
          v53 = *((_QWORD *)v11 + 4);
          v52 = *((_QWORD *)v11 + 5);
          v62 = __OFSUB__(v52, v53);
          v54 = v52 - v53;
          v55 = v62;
        }
        if ((v55 & 1) != 0)
          goto LABEL_137;
        v63 = v12 - 2;
        v69 = &v49[16 * v12 - 32];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v72 = __OFSUB__(v70, v71);
        v73 = v70 - v71;
        v74 = v72;
        if (v72)
          goto LABEL_140;
        v75 = &v49[16 * v51];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v62 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v62)
          goto LABEL_143;
        if (__OFADD__(v73, v78))
          goto LABEL_144;
        if (v73 + v78 >= v54)
        {
          v79 = v54 < v78;
LABEL_105:
          if (v79)
            v51 = v63;
          goto LABEL_107;
        }
LABEL_99:
        if ((v74 & 1) != 0)
          goto LABEL_139;
        v82 = &v49[16 * v51];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v62 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v62)
          goto LABEL_142;
        if (v85 < v73)
          goto LABEL_15;
LABEL_107:
        v90 = v51 - 1;
        if (v51 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10)
          goto LABEL_157;
        v91 = v11;
        v92 = v10;
        v93 = &v49[16 * v90];
        v94 = *(_QWORD *)v93;
        v95 = &v49[16 * v51];
        v96 = *((_QWORD *)v95 + 1);
        sub_1BC599A44((char *)(v92 + 32 * *(_QWORD *)v93), (char *)(v92 + 32 * *(_QWORD *)v95), v92 + 32 * v96, __dst);
        if (v1)
          goto LABEL_115;
        if (v96 < v94)
          goto LABEL_132;
        if (v51 > *((_QWORD *)v91 + 2))
          goto LABEL_133;
        *(_QWORD *)v93 = v94;
        *(_QWORD *)&v49[16 * v90 + 8] = v96;
        v97 = *((_QWORD *)v91 + 2);
        if (v51 >= v97)
          goto LABEL_134;
        v11 = v91;
        v12 = v97 - 1;
        memmove(&v49[16 * v51], v95 + 16, 16 * (v97 - 1 - v51));
        *((_QWORD *)v91 + 2) = v97 - 1;
        v79 = v97 > 2;
        v10 = v112;
        if (!v79)
          goto LABEL_15;
      }
    }
    v12 = 1;
    v10 = v112;
LABEL_15:
    v3 = v111;
    if (v9 >= v111)
    {
      v8 = v109;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v110))
    goto LABEL_153;
  if (v13 + v110 >= v3)
    v35 = v3;
  else
    v35 = v13 + v110;
  if (v35 >= v13)
  {
    if (v9 != v35)
    {
      v36 = (_QWORD *)(v106 + 32 * v9);
      do
      {
        v37 = (uint64_t *)(v10 + 32 * v9);
        v38 = *v37;
        v39 = v37[1];
        v40 = v13;
        v41 = v36;
        do
        {
          v42 = (__int128 *)(v41 - 7);
          v43 = v38 == *(v41 - 7) && v39 == *(v41 - 6);
          if (v43 || (sub_1BC62D574() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v45 = *v42;
          v44 = *(_OWORD *)(v41 - 5);
          *(v41 - 4) = *v41;
          v41 -= 4;
          v38 = v41[1];
          v39 = v41[2];
          v46 = v41[3];
          v42[2] = v45;
          v42[3] = v44;
          *(v41 - 3) = v38;
          *(v41 - 2) = v39;
          *(v41 - 1) = v46;
          ++v40;
        }
        while (v9 != v40);
        ++v9;
        v36 += 4;
      }
      while (v9 != v35);
      v9 = v35;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC599964(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 *v13;
  BOOL v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 32 * a3 + 24;
LABEL_5:
    v9 = (uint64_t *)(v7 + 32 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (_QWORD *)v8;
    while (1)
    {
      v13 = (__int128 *)(v12 - 7);
      v14 = result == *(v12 - 7) && v10 == *(v12 - 6);
      if (v14 || (result = sub_1BC62D574(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 32;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v16 = *v13;
      v15 = *(_OWORD *)(v12 - 5);
      *(v12 - 4) = *v12;
      v12 -= 4;
      result = v12[1];
      v10 = v12[2];
      v17 = v12[3];
      v13[2] = v16;
      v13[3] = v15;
      *(v12 - 3) = result;
      *(v12 - 2) = v10;
      *(v12 - 1) = v17;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC599A44(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  __int128 v26;
  __int128 v27;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v31 = __src;
  v30 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v19 = &v4[32 * v13];
      v29 = v19;
      v31 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        v20 = (char *)(a3 - 32);
        v21 = v6;
        while (1)
        {
          v22 = v20 + 32;
          v23 = *((_QWORD *)v21 - 4);
          v24 = *((_QWORD *)v21 - 3);
          v21 -= 32;
          v25 = *((_QWORD *)v19 - 4) == v23 && *((_QWORD *)v19 - 3) == v24;
          if (v25 || (sub_1BC62D574() & 1) == 0)
          {
            v29 = v19 - 32;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
            {
              v27 = *((_OWORD *)v19 - 1);
              *(_OWORD *)v20 = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 1) = v27;
            }
            v21 = v6;
            v19 -= 32;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v22 != v6 || v20 >= v6)
            {
              v26 = *((_OWORD *)v21 + 1);
              *(_OWORD *)v20 = *(_OWORD *)v21;
              *((_OWORD *)v20 + 1) = v26;
            }
            v31 = v21;
            if (v21 <= v7)
              goto LABEL_50;
          }
          v20 -= 32;
          v6 = v21;
          if (v19 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst)
      memmove(__dst, __src, 32 * v10);
    v14 = &v4[32 * v10];
    v29 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1BC62D574() & 1) == 0)
        {
          if (v7 != v4)
          {
            v18 = *((_OWORD *)v4 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v18;
          }
          v4 += 32;
          v30 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 32;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
          {
            v17 = *((_OWORD *)v6 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v17;
          }
        }
        v7 += 32;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v31 = v7;
    }
LABEL_50:
    sub_1BC504254((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

void sub_1BC599CDC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v0 = qword_1EF428700;
  swift_bridgeObjectRetain();
  if (v0 != -1)
    swift_once();
  v1 = (id)qword_1EF459FB0;
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v2, v1);

  if (v3)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v3);

    sub_1BC34B6A0(0, &qword_1EF436CA8);
    v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v4);
    sub_1BC62C764();
    if (qword_1EF428528 != -1)
      swift_once();
    v6 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BC34B608();
    v8 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v6, sel_initWithString_attributes_, v7, v8, 32, 0xE100000000000000);

    objc_msgSend(v5, sel_appendAttributedString_, v9);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC599F10()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1BC599F34(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC598D30(a1, *(void (**)(void))(v1 + 16));
}

id sub_1BC599F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC598E20(a1, a2, *(void (**)(void))(v2 + 16));
}

void sub_1BC599F54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C7C8)
  {
    sub_1BC3CBFF0();
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C7C8);
  }
}

uint64_t sub_1BC599FA8()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;

  v0 = qword_1EF4284D8;
  swift_bridgeObjectRetain();
  if (v0 != -1)
    swift_once();
  v1 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v3 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_initWithString_attributes_, v2, v3);

  v5 = sub_1BC598F10();
  v7 = v6;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  if (qword_1EF4284F8 != -1)
    swift_once();
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_initWithString_attributes_, v9, v10);

  v12 = qword_1EF428508;
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  v13 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v13, (SEL)&selRef_isHidden, v14, v15);

  objc_msgSend(v11, sel_appendAttributedString_, v16);
  v17 = sub_1BC598F10();
  v19 = v18;
  v20 = MEMORY[0x1E0DED1E8];
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC639570;
  *(_QWORD *)(v21 + 32) = v4;
  v22 = v4;
  objc_msgSend(v11, sel_copy);
  sub_1BC62D088();
  swift_unknownObjectRelease();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF433A00);
  swift_dynamicCast();
  sub_1BC62C890();
  v23 = v21;
  sub_1BC34B508(0, &qword_1EF42C518, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))v20);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BC6395A0;
  *(double *)(v24 + 32) = v5;
  *(double *)(v24 + 40) = v17;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v25 + 32) = v7;
  *(_QWORD *)(v25 + 40) = v19;

  _s10SizedValueCMa();
  result = swift_allocObject();
  *(_QWORD *)(result + 48) = 0;
  *(_BYTE *)(result + 56) = 1;
  *(_QWORD *)(result + 16) = v23;
  *(_QWORD *)(result + 24) = v24;
  *(_QWORD *)(result + 32) = v25;
  *(_BYTE *)(result + 40) = 0;
  return result;
}

uint64_t sub_1BC59A3D4(unint64_t a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  char **v6;
  id v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  __objc2_meth_list **p_opt_class_meths;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  __objc2_meth_list *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  void *v56;
  id v57;
  int v58;

  v2 = qword_1EF4284D8;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v5 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v6 = &selRef_constraintGreaterThanOrEqualToConstant_;
  v7 = objc_msgSend(v3, sel_initWithString_attributes_, v4, v5);

  v56 = v7;
  v8 = sub_1BC598F10();
  v10 = v9;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  p_opt_class_meths = &OBJC_PROTOCOL___HRWDDisplayable.opt_class_meths;
  v58 = *(unsigned __int8 *)(a1 + 64);
  if (v58 == 1)
  {
    if (qword_1EF4284F8 != -1)
      goto LABEL_29;
  }
  else if (qword_1EF428510 != -1)
  {
    goto LABEL_29;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    v12 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
    v13 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v14 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v57 = objc_msgSend(v12, v6[316], v13, v14);

    if (!v58)
    {
      v16 = p_opt_class_meths[162];
      swift_bridgeObjectRetain();
      if (v16 == (__objc2_meth_list *)-1)
        goto LABEL_11;
LABEL_31:
      swift_once();
      goto LABEL_11;
    }
    v15 = qword_1EF428508;
    swift_bridgeObjectRetain();
    if (v15 != -1)
      goto LABEL_31;
LABEL_11:
    swift_bridgeObjectRetain();
    v17 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v18 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v19 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v17, sel_initWithString_attributes_, v18, v19);

    objc_msgSend(v57, sel_appendAttributedString_, v20);
    v21 = sub_1BC598F10();
    v23 = v22;
    v24 = *(_QWORD *)(a1 + 48);
    a1 = *(_QWORD *)(a1 + 56);
    v25 = qword_1EF428508;
    swift_bridgeObjectRetain();
    if (v25 != -1)
      swift_once();
    v26 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    swift_bridgeObjectRetain();
    v55 = v24;
    v27 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v28 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

    v30 = sub_1BC598F10();
    v32 = v31;
    if ((v58 & 1) == 0)
    {
      if (qword_1ED6A4888 != -1)
        swift_once();
      v33 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

    }
    if (qword_1EF428518 != -1)
      swift_once();
    v34 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    swift_bridgeObjectRetain();
    v35 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v36 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v37 = objc_msgSend(v34, sel_initWithString_attributes_, v35, v36);

    v38 = sub_1BC598F10();
    v40 = v39;
    v41 = MEMORY[0x1E0DED1E8];
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1BC63A3D0;
    *(_QWORD *)(v42 + 32) = v56;
    p_opt_class_meths = v56;
    v6 = (char **)v57;
    objc_msgSend(v57, sel_copy);
    sub_1BC62D088();
    swift_unknownObjectRelease();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF433A00);
    swift_dynamicCast();
    *(_QWORD *)(v42 + 48) = v29;
    *(_QWORD *)(v42 + 56) = v37;
    sub_1BC62C890();
    v43 = v42;
    sub_1BC34B508(0, &qword_1EF42C518, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))v41);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1BC63C060;
    *(double *)(v44 + 32) = v8;
    *(double *)(v44 + 40) = v21;
    *(double *)(v44 + 48) = v30;
    *(double *)(v44 + 56) = v38;
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1BC63C060;
    *(_QWORD *)(v45 + 32) = v10;
    *(_QWORD *)(v45 + 40) = v23;
    *(_QWORD *)(v45 + 48) = v32;
    *(_QWORD *)(v45 + 56) = v40;
    v46 = v29;
    v47 = v37;
    v48 = sub_1BC62C74C();
    v49 = sub_1BC62C74C();
    v50 = __OFADD__(v48, v49);
    v51 = v48 + v49;
    if (!v50)
      break;
    __break(1u);
LABEL_29:
    swift_once();
  }

  if (v51 >= 15)
  {
    v53 = HIBYTE(a1) & 0xF;
    if ((a1 & 0x2000000000000000) == 0)
      v53 = v55 & 0xFFFFFFFFFFFFLL;
    if (v53)
      v52 = 0;
    else
      v52 = v58;
  }
  else
  {
    v52 = 0;
  }
  _s10SizedValueCMa();
  result = swift_allocObject();
  *(_QWORD *)(result + 48) = 0;
  *(_BYTE *)(result + 56) = 1;
  *(_QWORD *)(result + 16) = v43;
  *(_QWORD *)(result + 24) = v44;
  *(_QWORD *)(result + 32) = v45;
  *(_BYTE *)(result + 40) = v52;
  return result;
}

uint64_t sub_1BC59AB70()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  id v40;
  id v41;
  double v42;
  uint64_t v43;
  uint64_t v44;

  v0 = qword_1EF4284D8;
  swift_bridgeObjectRetain();
  if (v0 != -1)
    swift_once();
  v1 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v3 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_initWithString_attributes_, v2, v3);

  v41 = v4;
  v42 = sub_1BC598F10();
  v43 = v5;
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v6, sel_initWithString_attributes_, v7, v8);

  v10 = sub_1BC598F10();
  v12 = v11;
  v13 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v13, sel_initWithString_attributes_, v14, v15);

  v40 = v16;
  v17 = sub_1BC598F10();
  v19 = v18;
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v22 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  v24 = sub_1BC598F10();
  v26 = v25;
  v27 = qword_1EF428508;
  swift_bridgeObjectRetain();
  if (v27 != -1)
    swift_once();
  v28 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v29 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v30 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v30);

  v32 = sub_1BC598F10();
  v34 = v33;
  v35 = MEMORY[0x1E0DED1E8];
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1BC63A3C0;
  *(_QWORD *)(v36 + 32) = v41;
  *(_QWORD *)(v36 + 40) = v9;
  *(_QWORD *)(v36 + 48) = v40;
  *(_QWORD *)(v36 + 56) = v23;
  *(_QWORD *)(v36 + 64) = v31;
  v44 = v36;
  sub_1BC62C890();
  sub_1BC34B508(0, &qword_1EF42C518, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))v35);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1BC63DB50;
  *(double *)(v37 + 32) = v42;
  *(double *)(v37 + 40) = v10;
  *(double *)(v37 + 48) = v17;
  *(double *)(v37 + 56) = v24;
  *(double *)(v37 + 64) = v32;
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1BC63DB50;
  *(_QWORD *)(v38 + 32) = v43;
  *(_QWORD *)(v38 + 40) = v12;
  *(_QWORD *)(v38 + 48) = v19;
  *(_QWORD *)(v38 + 56) = v26;
  *(_QWORD *)(v38 + 64) = v34;
  _s10SizedValueCMa();
  result = swift_allocObject();
  *(_QWORD *)(result + 48) = 0;
  *(_BYTE *)(result + 56) = 1;
  *(_QWORD *)(result + 16) = v44;
  *(_QWORD *)(result + 24) = v37;
  *(_QWORD *)(result + 32) = v38;
  *(_BYTE *)(result + 40) = 0;
  return result;
}

uint64_t sub_1BC59B060(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double v20;
  __int128 v21;
  float64x2_t v22;
  float64x2_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  float64_t v29;
  float64x2_t v30;
  unint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    v4 = a1 + 40;
    do
    {
      v5 = qword_1EF428500;
      swift_bridgeObjectRetain();
      if (v5 != -1)
        swift_once();
      v4 += 16;
      v6 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      swift_bridgeObjectRetain();
      v7 = (void *)sub_1BC62C650();
      type metadata accessor for Key(0);
      sub_1BC34B608();
      v8 = (void *)sub_1BC62C53C();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_initWithString_attributes_, v7, v8);
      swift_bridgeObjectRelease();

      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      --v1;
    }
    while (v1);
    v2 = v31;
  }
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v10 = MEMORY[0x1E0DEE9D8];
  if (!v9)
    goto LABEL_23;
  v32 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BDEC4(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    v12 = 0;
    v10 = v32;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1BCCF24CC](v12, v2);
      else
        v13 = *(id *)(v2 + 8 * v12 + 32);
      v14 = v13;
      v15 = objc_msgSend(v13, sel_string, v28);
      v16 = sub_1BC62C680();
      v18 = v17;

      swift_bridgeObjectRelease();
      v19 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0)
        v19 = v16 & 0xFFFFFFFFFFFFLL;
      if (v19)
      {
        objc_msgSend(v14, sel_size);
        v28 = v21;
        v29 = v20;

        v22.f64[0] = v29;
        *(_QWORD *)&v22.f64[1] = v28;
        v23 = vrndpq_f64(v22);
      }
      else
      {

        v23 = 0uLL;
      }
      v25 = *(_QWORD *)(v32 + 16);
      v24 = *(_QWORD *)(v32 + 24);
      if (v25 >= v24 >> 1)
      {
        v30 = v23;
        sub_1BC3BDEC4(v24 > 1, v25 + 1, 1);
        v23 = v30;
      }
      ++v12;
      *(_QWORD *)(v32 + 16) = v25 + 1;
      *(float64x2_t *)(v32 + 16 * v25 + 32) = v23;
    }
    while (v9 != v12);
LABEL_23:
    v26 = sub_1BC59636C(v10);
    v27 = sub_1BC59642C(v10);
    swift_bridgeObjectRelease();
    _s10SizedValueCMa();
    result = swift_allocObject();
    *(_QWORD *)(result + 48) = 0;
    *(_BYTE *)(result + 56) = 1;
    *(_QWORD *)(result + 16) = v2;
    *(_QWORD *)(result + 24) = v26;
    *(_QWORD *)(result + 32) = v27;
    *(_BYTE *)(result + 40) = 0;
    return result;
  }
  __break(1u);
  return result;
}

id NSLayoutConstraint.withPriority(_:)()
{
  void *v0;
  id v2;

  objc_msgSend(v0, sel_setPriority_);
  return v2;
}

void sub_1BC59B3D4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  CGDataConsumerRef v9;
  CGDataConsumer *v10;
  CGFloat v11;
  CGContextRef v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  CGContext *v21;
  CGFloat v22;
  CGFloat v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  CFMutableDataRef v36;
  uint64_t v37;
  unint64_t v38;
  CGContext *v39;
  __CFData *v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  CFMutableDataRef v44;
  uint64_t *v45;
  char v46;
  char v47;
  CGRect mediaBox;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = (CFMutableDataRef)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DF0]), sel_init);
  v9 = CGDataConsumerCreateWithCFData(v44);
  v45 = a2;
  if (v9)
  {
    v10 = v9;
    if (qword_1EF428408 != -1)
      swift_once();
    v11 = *(double *)&qword_1EF459BC8;
    if (qword_1EF428410 != -1)
      swift_once();
    mediaBox.origin.y = 0.0;
    mediaBox.origin.x = 0.0;
    mediaBox.size.width = v11;
    *(_QWORD *)&mediaBox.size.height = qword_1EF459BD0;
    v12 = CGPDFContextCreate(v10, &mediaBox, 0);

    if (v12)
    {
      v43 = v2;
      sub_1BC59B820(0, v13, v14, v15);
      v17 = a1 + *(int *)(v16 + 28);
      v18 = *(_QWORD *)(v17 + *(int *)(_s13ConfigurationVMa() + 40));
      v19 = *(_QWORD *)(a1 + 112);
      if (v19 >> 62)
      {
        v39 = v12;
        swift_bridgeObjectRetain();
        v20 = sub_1BC62D3B8();
        if (v20)
          goto LABEL_9;
      }
      else
      {
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        v21 = v12;
        swift_bridgeObjectRetain();
        if (v20)
        {
LABEL_9:
          v22 = *(double *)a1;
          v23 = *(double *)(a1 + 24);
          v24 = *(_QWORD *)(a1 + 64);
          v25 = *(_QWORD *)(a1 + 96);
          v26 = *(_BYTE *)(a1 + 104);
          v27 = *(_QWORD *)(a1 + 120);
          v28 = *(_QWORD *)(a1 + 144);
          v47 = *(_BYTE *)(a1 + 72);
          v46 = v26;
          mediaBox.origin.x = v22;
          *(_OWORD *)&mediaBox.origin.y = *(_OWORD *)(a1 + 8);
          mediaBox.size.height = v23;
          v29 = *(_OWORD *)(a1 + 48);
          v49 = *(_OWORD *)(a1 + 32);
          v50 = v29;
          v51 = v24;
          v52 = v47;
          v53 = *(_OWORD *)(a1 + 80);
          v54 = v25;
          v55 = v26;
          v56 = v19;
          v57 = v27;
          v58 = *(_OWORD *)(a1 + 128);
          v59 = v28;
          v60 = *(_OWORD *)(a1 + 152);
          if (v20 < 1)
            __break(1u);
          v30 = 0;
          do
          {
            if ((v19 & 0xC000000000000001) != 0)
            {
              v31 = MEMORY[0x1BCCF24CC](v30, v19);
            }
            else
            {
              v31 = *(_QWORD *)(v19 + 8 * v30 + 32);
              swift_retain();
            }
            ++v30;
            v32 = (void *)MEMORY[0x1BCCF2DD8]();
            CGPDFContextBeginPage(v12, 0);
            CGContextTranslateCTM(v12, 0.0, *(CGFloat *)&qword_1EF459BD0);
            CGContextScaleCTM(v12, 1.0, -1.0);
            sub_1BC59B874((uint64_t)&mediaBox, v12, v18);
            sub_1BC59D22C((id)v31, v12, v18);
            sub_1BC59D818((uint64_t)&mediaBox, *(void **)(v31 + 72), v12, v18, *(double *)(v31 + 80), *(double *)(v31 + 88));
            CGPDFContextEndPage(v12);
            objc_autoreleasePoolPop(v32);
            swift_release();
          }
          while (v20 != v30);
        }
      }
      swift_bridgeObjectRelease();
      CGPDFContextClose(v12);
      v40 = v44;
      v37 = sub_1BC62A634();
      v38 = v41;

      goto LABEL_21;
    }
  }
  sub_1BC62BAF8();
  v33 = sub_1BC62BB28();
  v34 = sub_1BC62CAC4();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_1BC30A000, v33, v34, "[PDF]: Failed to create a PDF context to render in.", v35, 2u);
    MEMORY[0x1BCCF36A8](v35, -1, -1);
    v36 = v44;
  }
  else
  {
    v36 = (CFMutableDataRef)v33;
    v33 = v44;
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v37 = 0;
  v38 = 0xF000000000000000;
LABEL_21:
  v42 = v45;
  *v45 = v37;
  v42[1] = v38;
}

void sub_1BC59B820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EF432A80)
  {
    v4 = _s7PDFDataVMa(0, (uint64_t)&_s13PaginatedDataVN, a3, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF432A80);
  }
}

void sub_1BC59B874(uint64_t a1, CGContext *a2, uint64_t a3)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  double v18;
  id v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  double v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  double v43;
  id v44;
  void *v45;
  id v46;
  double *v47;
  id v48;
  void *v49;
  double *v50;
  double v51;
  double v52;
  double v53;
  id v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  double v60;
  id v61;
  double v62;
  double v63;
  CGFloat v64;
  CGColor *v65;
  _BYTE v66[24];
  _BYTE v67[24];
  _BYTE v68[8];
  uint64_t v69;
  _QWORD v70[2];
  char v71;
  _BYTE v72[8];
  _BYTE v73[24];
  CGRect v74;

  if (qword_1EF428418 != -1)
    swift_once();
  v6 = *(double *)&qword_1EF459BD8;
  if (qword_1EF428448 != -1)
    swift_once();
  v7 = *(double *)&qword_1EF459C08;
  if (qword_1EF428478 != -1)
    swift_once();
  v8 = v6 + v7;
  v9 = *(double *)&qword_1EF459C38;
  v11 = *(double *)(a1 + 8);
  v10 = *(double *)(a1 + 16);
  v12 = *(id *)a1;
  v13 = objc_msgSend(*(id *)a1, sel_string);
  v14 = sub_1BC62C680();
  v16 = v15;

  swift_bridgeObjectRelease();
  v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0)
    v17 = v14 & 0xFFFFFFFFFFFFLL;
  if (v17)
  {
    if (a3 == 1)
      v18 = v6 + v9 - v11;
    else
      v18 = v6 + 0.0;
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
    objc_msgSend(v19, sel_setMinimumScaleFactor_, 1.0);
    UIGraphicsPushContext(a2);
    objc_msgSend(v12, sel_drawWithRect_options_context_, 1, v19, v18, v8, v11, v10);
    UIGraphicsPopContext();

  }
  v20 = v8 + v10;
  sub_1BC550850(a1 + 48, (uint64_t)v68, &qword_1EF437A80, (void (*)(uint64_t))sub_1BC59DD40);
  sub_1BC550850((uint64_t)v68, (uint64_t)&v69, &qword_1EF437A80, (void (*)(uint64_t))sub_1BC59DD40);
  if (v69)
  {
    v21 = *(void **)(a1 + 80);
    if (v21)
    {
      sub_1BC550850(a1 + 88, (uint64_t)v67, &qword_1EF437A88, type metadata accessor for CGSize);
      sub_1BC550850((uint64_t)v67, (uint64_t)v70, &qword_1EF437A88, type metadata accessor for CGSize);
      if ((v71 & 1) == 0)
      {
        v22 = *(double *)v70;
        v23 = *(double *)&v70[1];
        v24 = *(double *)&qword_1EF459C38;
        v25 = v21;
        v26 = objc_msgSend(v25, sel_string);
        v27 = sub_1BC62C680();
        v29 = v28;

        swift_bridgeObjectRelease();
        v30 = HIBYTE(v29) & 0xF;
        if ((v29 & 0x2000000000000000) == 0)
          v30 = v27 & 0xFFFFFFFFFFFFLL;
        if (v30)
        {
          if (a3 == 1)
            v31 = v6 + 0.0;
          else
            v31 = v6 + v24 - v22;
          v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), (SEL)&selRef_loadView);
          objc_msgSend(v32, sel_setMinimumScaleFactor_, 1.0);
          UIGraphicsPushContext(a2);
          objc_msgSend(v25, sel_drawWithRect_options_context_, 1, v32, v31, v20 - v23, v22, v23);
          UIGraphicsPopContext();

          v25 = v32;
        }

      }
    }
  }
  if (qword_1EF428450 != -1)
    swift_once();
  v33 = v20 + *(double *)&qword_1EF459C10;
  v34 = *(double *)&qword_1EF459C38;
  v35 = *(double *)(a1 + 32);
  v36 = *(double *)(a1 + 40);
  v37 = *(void **)(a1 + 24);
  v38 = objc_msgSend(v37, sel_string);
  v39 = sub_1BC62C680();
  v41 = v40;

  swift_bridgeObjectRelease();
  v42 = HIBYTE(v41) & 0xF;
  if ((v41 & 0x2000000000000000) == 0)
    v42 = v39 & 0xFFFFFFFFFFFFLL;
  if (v42)
  {
    if (a3 == 1)
      v43 = v6 + v34 - v35;
    else
      v43 = v6 + 0.0;
    v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), (SEL)&selRef_loadView);
    objc_msgSend(v44, sel_setMinimumScaleFactor_, 1.0);
    UIGraphicsPushContext(a2);
    objc_msgSend(v37, sel_drawWithRect_options_context_, 1, v44, v43, v33, v35, v36);
    UIGraphicsPopContext();

  }
  v45 = *(void **)(a1 + 48);
  if (v45)
  {
    v46 = *(id *)(a1 + 48);
    if ((*(_BYTE *)(a1 + 72) & 1) != 0)
      goto LABEL_36;
LABEL_40:
    v47 = (double *)(a1 + 56);
    v50 = (double *)(a1 + 64);
LABEL_42:
    v51 = *v50;
    v52 = *v47;
    v53 = *(double *)&qword_1EF459C38;
    v54 = v45;
    v55 = objc_msgSend(v46, sel_string);
    v56 = sub_1BC62C680();
    v58 = v57;

    swift_bridgeObjectRelease();
    v59 = HIBYTE(v58) & 0xF;
    if ((v58 & 0x2000000000000000) == 0)
      v59 = v56 & 0xFFFFFFFFFFFFLL;
    if (v59)
    {
      if (a3 == 1)
        v60 = v6 + 0.0;
      else
        v60 = v6 + v53 - v52;
      v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), (SEL)&selRef_loadView);
      objc_msgSend(v61, sel_setMinimumScaleFactor_, 1.0);
      UIGraphicsPushContext(a2);
      objc_msgSend(v46, sel_drawWithRect_options_context_, 1, v61, v60, v33, v52, v51);
      UIGraphicsPopContext();

      v46 = v61;
    }
    goto LABEL_49;
  }
  v49 = *(void **)(a1 + 80);
  if (!v49)
    goto LABEL_50;
  v46 = v49;
  if ((*(_BYTE *)(a1 + 72) & 1) == 0)
    goto LABEL_40;
LABEL_36:
  sub_1BC550850(a1 + 88, (uint64_t)v66, &qword_1EF437A88, type metadata accessor for CGSize);
  v47 = (double *)v72;
  sub_1BC550850((uint64_t)v66, (uint64_t)v72, &qword_1EF437A88, type metadata accessor for CGSize);
  if ((v73[8] & 1) == 0)
  {
    v50 = (double *)v73;
    goto LABEL_42;
  }
  v48 = v45;
LABEL_49:

LABEL_50:
  v62 = *(double *)&qword_1EF459BD8;
  if (qword_1EF428440 != -1)
    swift_once();
  v63 = *(double *)&qword_1EF459C00;
  v64 = *(double *)&qword_1EF459C38;
  CGContextSaveGState(a2);
  if (qword_1EF4287D0 != -1)
    swift_once();
  v65 = (CGColor *)objc_msgSend((id)qword_1EF45A030, sel_CGColor);
  CGContextSetFillColorWithColor(a2, v65);

  v74.size.height = 0.5;
  v74.origin.x = v62;
  v74.origin.y = v62 + v63 + -0.5;
  v74.size.width = v64;
  CGContextFillRect(a2, v74);
  CGContextRestoreGState(a2);
}

double sub_1BC59BEBC(_QWORD *a1, char *a2, _QWORD *a3, CGContext *a4, uint64_t a5, CGFloat a6, double a7, double a8, double a9)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  double v25;
  id v26;
  void *v27;
  uint64_t v28;
  double v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  BOOL v38;
  CGContext *v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  CGColor *v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  CGContext *v53;
  char *v54;
  uint64_t v55;
  char v56;
  double v57;
  char v58;
  double v59;
  double v60;
  double v61;
  id v62;
  void *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  double v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  CGContext *v74;
  double v75;
  CGContext *c;
  _QWORD *v78;
  CGContext *v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  CGRect v86;

  if (qword_1EF428418 != -1)
    goto LABEL_68;
  while (1)
  {
    v20 = *(double *)&qword_1EF459BD8;
    v21 = a3[3];
    v22 = a3[4];
    __swift_project_boxed_opaque_existential_1Tm(a3, v21);
    v74 = *(CGContext **)(v22 + 32);
    v23 = ((double (*)(uint64_t, uint64_t))v74)(v21, v22);
    if (qword_1EF428478 == -1)
    {
      v24 = *((_QWORD *)a2 + 2);
      if (!v24)
        goto LABEL_70;
    }
    else
    {
      swift_once();
      v24 = *((_QWORD *)a2 + 2);
      if (!v24)
      {
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        v26 = (id)MEMORY[0x1BCCF24CC](0, v10);
        goto LABEL_14;
      }
    }
    v70 = a7;
    v71 = a8;
    v11 = *((double *)a2 + 4);
    v69 = v20;
    v75 = v20 + a7;
    if (a5 == 1)
      v20 = v20 + *(double *)&qword_1EF459C38 - a7 - v11;
    else
      v20 = v20 + a7;
    sub_1BC4DDB58();
    v9 = a1[3];
    if (!*(_QWORD *)(v9 + 16))
      goto LABEL_71;
    a7 = v25;
    if (*(double *)(v9 + 32) >= v11)
      v12 = v11;
    else
      v12 = *(double *)(v9 + 32);
    v10 = a1[2];
    v82 = v10 & 0xC000000000000001;
    if ((v10 & 0xC000000000000001) != 0)
      goto LABEL_72;
    if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    v26 = *(id *)(v10 + 32);
LABEL_14:
    v27 = v26;
    v28 = a1[4];
    if (!*(_QWORD *)(v28 + 16))
      goto LABEL_74;
    v81 = v10;
    v83 = a1[4];
    v84 = v9;
    v78 = a1;
    v68 = a6;
    a6 = v23 + a6;
    v29 = *(double *)(v28 + 32);
    v30 = objc_msgSend(v26, sel_string);
    v31 = sub_1BC62C680();
    v33 = v32;

    swift_bridgeObjectRelease();
    v34 = HIBYTE(v33) & 0xF;
    if ((v33 & 0x2000000000000000) == 0)
      v34 = v31 & 0xFFFFFFFFFFFFLL;
    v9 = (uint64_t)&selRef_doubleValueForUnit_;
    if (v34)
    {
      if (a5 == 1)
        v35 = v11 + v20 - v12;
      else
        v35 = v75;
      a8 = a6 + ceil((a7 - v29) * 0.5);
      v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
      objc_msgSend(v36, sel_setMinimumScaleFactor_, 1.0);
      UIGraphicsPushContext(a4);
      objc_msgSend(v27, sel_drawWithRect_options_context_, 33, v36, v35, a8, v12, v29);
      UIGraphicsPopContext();

      v27 = v36;
    }
    a1 = (_QWORD *)v81;

    v10 = v84;
    v72 = v22;
    v73 = v21;
    if (!(v81 >> 62))
    {
      v37 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFF8) + 0x10);
      v39 = (CGContext *)(v37 - 1);
      v38 = v37 == 1;
      if (v37 < 1)
        goto LABEL_76;
      goto LABEL_24;
    }
LABEL_75:
    swift_bridgeObjectRetain();
    v67 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    v39 = (CGContext *)(v67 - 1);
    v38 = v67 == 1;
    if (v67 < 1)
    {
LABEL_76:
      __break(1u);
LABEL_77:
      swift_once();
      goto LABEL_31;
    }
LABEL_24:
    c = a4;
    if (v38)
      break;
    a4 = 0;
    v53 = (CGContext *)(v24 - 1);
    v54 = a2 + 40;
    v80 = v10 + 40;
    v79 = (CGContext *)(v24 - 1);
    while (v39 != a4)
    {
      if (v53 == a4)
        goto LABEL_64;
      if (*(double *)&v54[8 * (_QWORD)a4] > 0.0)
      {
        a2 = (char *)a4 + 1;
        a1 = (_QWORD *)a3[3];
        v9 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, (uint64_t)a1);
        v55 = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 88))(a1, v9);
        v56 = 0;
        v57 = 0.0;
        if ((v58 & 1) == 0 && a2 == (char *)v55)
        {
          v56 = *((_BYTE *)v78 + 40);
          v57 = a9;
          if (!v56)
            v57 = 0.0;
        }
        if ((unint64_t)a2 >= *(_QWORD *)(v10 + 16))
          goto LABEL_65;
        if ((unint64_t)a2 >= *(_QWORD *)(v83 + 16))
          goto LABEL_66;
        a8 = v57 + *(double *)&v54[8 * (_QWORD)a4];
        v12 = *(double *)(v83 + 40 + 8 * (_QWORD)a4);
        if (*(double *)(v80 + 8 * (_QWORD)a4) >= a8)
          v59 = v57 + *(double *)&v54[8 * (_QWORD)a4];
        else
          v59 = *(double *)(v80 + 8 * (_QWORD)a4);
        a1 = (_QWORD *)a3[3];
        v9 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, (uint64_t)a1);
        v60 = (*(double (**)(_QWORD *, uint64_t))(v9 + 16))(a1, v9);
        v11 = v20 + v11 + v60;
        v61 = v20 - v60 - a8;
        if (a5 == 1)
          v20 = v61;
        else
          v20 = v11;
        if (v82)
        {
          v62 = (id)MEMORY[0x1BCCF24CC]((char *)a4 + 1, v81);
        }
        else
        {
          if ((unint64_t)a2 >= *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_67;
          v62 = *(id *)(v81 + 40 + 8 * (_QWORD)a4);
        }
        v63 = v62;
        a1 = objc_msgSend(v62, sel_string);
        v9 = sub_1BC62C680();
        v65 = v64;

        swift_bridgeObjectRelease();
        v66 = HIBYTE(v65) & 0xF;
        if ((v65 & 0x2000000000000000) == 0)
          v66 = v9 & 0xFFFFFFFFFFFFLL;
        if (v66)
        {
          if (a5 == 1)
            a8 = a8 + v20 - v59;
          else
            a8 = v11;
          a1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
          objc_msgSend(a1, sel_setMinimumScaleFactor_, 1.0);
          UIGraphicsPushContext(c);
          objc_msgSend(v63, sel_drawWithRect_options_context_, 33, a1, a8, a6 + ceil((a7 - v12) * 0.5), v59, v12);
          UIGraphicsPopContext();

        }
        else
        {

        }
        v10 = v84;
        v53 = v79;
        if ((v56 & 1) != 0)
          goto LABEL_26;
        v11 = *(double *)&v54[8 * (_QWORD)a4];
      }
      a4 = (CGContext *)((char *)a4 + 1);
      if (v39 == a4)
        goto LABEL_26;
    }
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    swift_once();
  }
LABEL_26:
  v40 = a3[3];
  v41 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v40);
  v24 = v72;
  v10 = v73;
  a4 = v74;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v41 + 56))(v40, v41) & 1) == 0)
    goto LABEL_32;
  v11 = v71;
  if (a5 == 1)
    v20 = v69 + *(double *)&qword_1EF459C38 - v70 - v71;
  else
    v20 = v75;
  v42 = a7 + ((double (*)(uint64_t, uint64_t))v74)(v73, v72) + v68;
  v43 = a3[3];
  v44 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v43);
  v45 = v42 + (*(double (**)(uint64_t, uint64_t))(v44 + 40))(v43, v44);
  v46 = a3[3];
  v47 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v46);
  a6 = v45 - (*(double (**)(uint64_t, uint64_t))(v47 + 64))(v46, v47);
  v39 = c;
  CGContextSaveGState(c);
  if (qword_1EF4287D0 != -1)
    goto LABEL_77;
LABEL_31:
  v48 = (CGColor *)objc_msgSend((id)qword_1EF45A030, sel_CGColor);
  CGContextSetFillColorWithColor(v39, v48);

  v86.size.height = 0.5;
  v86.origin.x = v20;
  v86.origin.y = a6;
  v86.size.width = v11;
  CGContextFillRect(v39, v86);
  CGContextRestoreGState(v39);
LABEL_32:
  v49 = a7 + ((double (*)(uint64_t, uint64_t))a4)(v10, v24);
  v50 = a3[3];
  v51 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v50);
  return v49 + (*(double (**)(uint64_t, uint64_t))(v51 + 40))(v50, v51);
}

double sub_1BC59C5C8(uint64_t a1, char *a2, _QWORD *a3, CGContext *a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  double (*v44)(uint64_t, uint64_t);
  id v45;
  double v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  double v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  double v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  BOOL v71;
  void *v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  double v80;
  double v81;
  id v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  double v87;
  double v88;
  id v89;
  double v90;
  uint64_t v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  double v101;
  double v102;
  unint64_t v103;
  uint64_t v104;
  double v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  double v109;
  double v110;

  v101 = a6;
  if (qword_1EF428490 != -1)
    swift_once();
  v17 = *(double *)&qword_1EF459C50;
  v18 = a3[3];
  v19 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v18);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19) & 1) != 0)
  {
    if (qword_1EF428418 != -1)
      swift_once();
    v20 = *(double *)&qword_1EF459BD8;
    v21 = a3[3];
    v22 = a3[4];
    __swift_project_boxed_opaque_existential_1Tm(a3, v21);
    v23 = (*(double (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
    v24 = *(double *)(a1 + 24);
    v110 = *(double *)(a1 + 32);
    v25 = *(double *)&qword_1EF459C50;
    if (qword_1EF428478 == -1)
    {
      if (a5 == 1)
      {
LABEL_8:
        v26 = v20 + *(double *)&qword_1EF459C38 - v25;
        v27 = a7;
        v109 = v26 - a7;
        v28 = v26 - a7 + a7 - v24;
        goto LABEL_13;
      }
    }
    else
    {
      swift_once();
      if (a5 == 1)
        goto LABEL_8;
    }
    v28 = v20 + v25;
    v109 = v28;
    v27 = a7;
LABEL_13:
    v30 = v23 + v101;
    v31 = *(void **)(a1 + 16);
    v32 = objc_msgSend(v31, sel_string, *(_QWORD *)&v101);
    v33 = sub_1BC62C680();
    v35 = v34;

    swift_bridgeObjectRelease();
    v36 = HIBYTE(v35) & 0xF;
    if ((v35 & 0x2000000000000000) == 0)
      v36 = v33 & 0xFFFFFFFFFFFFLL;
    if (v36)
    {
      v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
      objc_msgSend(v37, sel_setMinimumScaleFactor_, 1.0);
      UIGraphicsPushContext(a4);
      objc_msgSend(v31, sel_drawWithRect_options_context_, 1, v37, v28, v30, v24, v110);
      UIGraphicsPopContext();

    }
    v38 = *(void **)(a1 + 40);
    v29 = v101;
    if (v38)
    {
      v29 = v101;
      if ((*(_BYTE *)(a1 + 64) & 1) == 0)
      {
        v39 = v30;
        v41 = *(double *)(a1 + 48);
        v40 = *(double *)(a1 + 56);
        v42 = a3[3];
        v43 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, v42);
        v44 = *(double (**)(uint64_t, uint64_t))(v43 + 16);
        v45 = v38;
        v46 = v44(v42, v43);
        v47 = objc_msgSend(v45, sel_string);
        v48 = sub_1BC62C680();
        v50 = v49;

        swift_bridgeObjectRelease();
        v51 = HIBYTE(v50) & 0xF;
        if ((v50 & 0x2000000000000000) == 0)
          v51 = v48 & 0xFFFFFFFFFFFFLL;
        if (v51)
        {
          if (a5 == 1)
            v52 = v109 - v46 - v41;
          else
            v52 = v109 + v27 + v46;
          v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
          objc_msgSend(v53, sel_setMinimumScaleFactor_, 1.0);
          UIGraphicsPushContext(a4);
          objc_msgSend(v45, sel_drawWithRect_options_context_, 1, v53, v52, v39, v41, v40);
          UIGraphicsPopContext();

        }
        v54 = a3[3];
        v55 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, v54);
        v56 = sub_1BC3F4680(v54, v55, v40);
        v57 = a3[3];
        v58 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, v57);
        v59 = (*(double (**)(uint64_t, uint64_t))(v58 + 24))(v57, v58);

        v29 = v56 + v59 + v101;
      }
    }
    v60 = a3[3];
    v61 = a3[4];
    __swift_project_boxed_opaque_existential_1Tm(a3, v60);
    v17 = v17 + (*(double (**)(uint64_t, uint64_t))(v61 + 16))(v60, v61) + v27;
    if (*(_QWORD *)(a1 + 72))
      goto LABEL_28;
    goto LABEL_29;
  }
  v29 = v101;
  if (*(_QWORD *)(a1 + 72))
  {
LABEL_28:
    v62 = (_QWORD *)swift_retain();
    v63 = sub_1BC59BEBC(v62, a2, a3, a4, a5, v29, v17, a8, a9);
    swift_release();
    v29 = v29 + v63;
  }
LABEL_29:
  v64 = *(_QWORD *)(a1 + 80);
  if (v64 >> 62)
    goto LABEL_69;
  v65 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v65; v65 = sub_1BC62D3B8())
  {
    v66 = 0;
    v107 = v64;
    v108 = v64 & 0xC000000000000001;
    v103 = v64 + 32;
    v104 = v64 & 0xFFFFFFFFFFFFFF8;
    v106 = v65;
    while (v108)
    {
      v70 = MEMORY[0x1BCCF24CC](v66, v64);
      v71 = __OFADD__(v66++, 1);
      if (v71)
        goto LABEL_66;
LABEL_39:
      v72 = *(void **)(v70 + 16);
      if (v72 && (*(_BYTE *)(v70 + 40) & 1) == 0)
      {
        v73 = *(double *)(v70 + 32);
        v74 = v70;
        v105 = *(double *)(v70 + 24);
        v75 = qword_1EF428418;
        v76 = v72;
        if (v75 != -1)
          swift_once();
        v77 = *(double *)&qword_1EF459BD8;
        v78 = a3[3];
        v79 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, v78);
        v80 = (*(double (**)(uint64_t, uint64_t))(v79 + 32))(v78, v79);
        if (qword_1EF428478 != -1)
          swift_once();
        v81 = *(double *)&qword_1EF459C38;
        v82 = objc_msgSend(v76, sel_string, *(_QWORD *)&v101);
        v83 = sub_1BC62C680();
        v85 = v84;

        swift_bridgeObjectRelease();
        v86 = HIBYTE(v85) & 0xF;
        if ((v85 & 0x2000000000000000) == 0)
          v86 = v83 & 0xFFFFFFFFFFFFLL;
        if (v86)
        {
          v102 = v73;
          v87 = v29 + v80;
          if (a5 == 1)
            v88 = v77 + v81 - v17 - v105;
          else
            v88 = v17 + v77;
          v89 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
          objc_msgSend(v89, sel_setMinimumScaleFactor_, 1.0);
          UIGraphicsPushContext(a4);
          v90 = v87;
          v73 = v102;
          objc_msgSend(v76, sel_drawWithRect_options_context_, 1, v89, v88, v90, v105, v102);
          UIGraphicsPopContext();

        }
        v91 = a3[3];
        v64 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, v91);
        v92 = sub_1BC3F4680(v91, v64, v73);

        v29 = v29 + v92;
        v70 = v74;
      }
      v93 = *(_QWORD *)(v70 + 48);
      if ((unint64_t)v93 >> 62)
      {
        if (v93 < 0)
          v64 = *(_QWORD *)(v70 + 48);
        else
          v64 = v93 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v94 = sub_1BC62D3B8();
        if (!v94)
          goto LABEL_32;
      }
      else
      {
        v94 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v94)
          goto LABEL_32;
      }
      if (v94 < 1)
        goto LABEL_67;
      v95 = 0;
      do
      {
        if ((v93 & 0xC000000000000001) != 0)
        {
          v96 = (_QWORD *)MEMORY[0x1BCCF24CC](v95, v93);
        }
        else
        {
          v96 = *(_QWORD **)(v93 + 8 * v95 + 32);
          swift_retain();
        }
        ++v95;
        v97 = (void *)MEMORY[0x1BCCF2DD8]();
        v29 = v29 + sub_1BC59BEBC(v96, a2, a3, a4, a5, v29, v17, a8, a9);
        objc_autoreleasePoolPop(v97);
        swift_release();
      }
      while (v94 != v95);
LABEL_32:
      swift_bridgeObjectRelease();
      v67 = a3[3];
      v68 = a3[4];
      __swift_project_boxed_opaque_existential_1Tm(a3, v67);
      v69 = (*(double (**)(uint64_t, uint64_t))(v68 + 48))(v67, v68);
      swift_release();
      v29 = v29 + v69;
      v64 = v107;
      if (v66 == v106)
        goto LABEL_70;
    }
    if (v66 >= *(_QWORD *)(v104 + 16))
      goto LABEL_68;
    v70 = *(_QWORD *)(v103 + 8 * v66);
    swift_retain();
    v71 = __OFADD__(v66++, 1);
    if (!v71)
      goto LABEL_39;
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    swift_bridgeObjectRetain();
  }
LABEL_70:
  swift_bridgeObjectRelease();
  v98 = a3[3];
  v99 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v98);
  return v29 - v101 - (*(double (**)(uint64_t, uint64_t))(v99 + 48))(v98, v99);
}

void sub_1BC59CDFC(uint64_t a1, char *a2, CGContext *a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  double v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  char v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  double v34;
  id v35;
  double v36;
  unint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v53;

  if (qword_1EF428418 != -1)
    swift_once();
  v12 = *(double *)&qword_1EF459BD8;
  if (qword_1EF428478 != -1)
    swift_once();
  v13 = *(double *)(a1 + 48);
  if (a4 == 1)
    v14 = v12 + *(double *)&qword_1EF459C38 - v13;
  else
    v14 = v12 + 0.0;
  v15 = *(void **)(a1 + 40);
  if (qword_1EF4284B8 != -1)
    swift_once();
  objc_msgSend((id)qword_1EF42F430, sel_ascender);
  v17 = v16;
  v18 = COERCE_DOUBLE(sub_1BC62CE78());
  if ((v19 & 1) != 0)
    v18 = 0.0;
  v20 = v17 + v18;
  objc_msgSend(v15, sel_size);
  v22 = v20 - v21 + a5;
  v23 = *(double *)(a1 + 56);
  UIGraphicsPushContext(a3);
  objc_msgSend(v15, sel_drawInRect_, v14, v22, v13, v23);
  UIGraphicsPopContext();
  v24 = *(void **)(a1 + 16);
  if (qword_1EF428490 != -1)
    swift_once();
  v25 = *(double *)&qword_1EF459C50;
  v26 = *(double *)&qword_1EF459C38;
  v28 = *(double *)(a1 + 24);
  v27 = *(double *)(a1 + 32);
  v29 = objc_msgSend(v24, sel_string);
  v30 = sub_1BC62C680();
  v32 = v31;

  swift_bridgeObjectRelease();
  v33 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000) == 0)
    v33 = v30 & 0xFFFFFFFFFFFFLL;
  if (v33)
  {
    if (a4 == 1)
      v34 = v12 + v26 - v25 - v28;
    else
      v34 = v12 + v25;
    v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
    objc_msgSend(v35, sel_setMinimumScaleFactor_, 1.0);
    UIGraphicsPushContext(a3);
    objc_msgSend(v24, sel_drawWithRect_options_context_, 1, v35, v34, a5, v28, v27);
    UIGraphicsPopContext();

  }
  if (qword_1EF428488 != -1)
    swift_once();
  v36 = v27 + *(double *)&qword_1EF459C48;
  v37 = *(_QWORD *)(a1 + 64);
  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    v38 = sub_1BC62D3B8();
  }
  else
  {
    v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v39 = v36 + a5;
  v53 = (_QWORD *)a1;
  if (!v38)
    goto LABEL_32;
  if (v38 >= 1)
  {
    v40 = 0;
    v41 = (_QWORD *)(a1 + 72);
    v42 = v37 & 0xC000000000000001;
    v43 = v37;
    do
    {
      if (v42)
      {
        v44 = MEMORY[0x1BCCF24CC](v40, v37);
      }
      else
      {
        v44 = *(_QWORD *)(v37 + 8 * v40 + 32);
        swift_retain();
      }
      ++v40;
      v45 = (void *)MEMORY[0x1BCCF2DD8]();
      v46 = sub_1BC59C5C8(v44, a2, v41, a3, a4, v39, a6, a7, a8);
      v47 = v53[12];
      v48 = v53[13];
      __swift_project_boxed_opaque_existential_1Tm(v41, v47);
      v39 = v39 + v46 + (*(double (**)(uint64_t, uint64_t))(v48 + 48))(v47, v48);
      objc_autoreleasePoolPop(v45);
      swift_release();
      v37 = v43;
    }
    while (v38 != v40);
LABEL_32:
    swift_bridgeObjectRelease();
    v50 = v53[12];
    v49 = v53[13];
    __swift_project_boxed_opaque_existential_1Tm(v53 + 9, v50);
    (*(double (**)(uint64_t, uint64_t))(v49 + 48))(v50, v49);
    return;
  }
  __break(1u);
}

void sub_1BC59D22C(id a1, CGContext *a2, uint64_t a3)
{
  double v3;
  double v4;
  double v6;
  void *v7;
  double *v8;
  __objc2_meth_list **p_opt_class_meths;
  double *v10;
  char **v11;
  double v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  double v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  void *v45;
  uint64_t v46;
  id v47;
  double v48;
  double v49;
  double v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  double v56;
  id v57;
  void *v58;
  id v59;
  id v60;

  if (qword_1EF428480 != -1)
    swift_once();
  v6 = *(double *)&qword_1EF459C40;
  v7 = (void *)*((_QWORD *)a1 + 3);
  v8 = (double *)&unk_1EF459000;
  p_opt_class_meths = &OBJC_PROTOCOL___HRWDDisplayable.opt_class_meths;
  v10 = (double *)&unk_1EF459000;
  v11 = &selRef_predicateWithFormat_;
  if (v7)
  {
    v4 = *((double *)a1 + 4);
    v12 = *((double *)a1 + 5);
    v13 = qword_1EF428418;
    v14 = v7;
    if (v13 != -1)
      swift_once();
    v15 = *(double *)&qword_1EF459BD8;
    if (qword_1EF428478 != -1)
      swift_once();
    v16 = *(double *)&qword_1EF459C38;
    v17 = objc_msgSend(v14, sel_string);
    v18 = sub_1BC62C680();
    v20 = v19;

    swift_bridgeObjectRelease();
    v21 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0)
      v21 = v18 & 0xFFFFFFFFFFFFLL;
    if (v21)
    {
      if (a3 == 1)
        v22 = v15 + v16 - v4;
      else
        v22 = v15 + 0.0;
      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
      objc_msgSend(v23, sel_setMinimumScaleFactor_, 1.0);
      UIGraphicsPushContext(a2);
      objc_msgSend(v14, sel_drawWithRect_options_context_, 1, v23, v22, v6 + 0.0, v4, v12);
      UIGraphicsPopContext();

    }
    if (qword_1EF428470 != -1)
      swift_once();
    v3 = *(double *)&qword_1EF459C30;

    v6 = v6 + v3;
  }
  v24 = *((_QWORD *)a1 + 2);
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_1BC62D3B8();
    if (v25)
      goto LABEL_20;
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25)
    {
LABEL_20:
      if (v25 >= 1)
      {
        v26 = 0;
        v27 = *((double *)a1 + 12);
        v60 = a1;
        v28 = *((_QWORD *)a1 + 13);
        while (1)
        {
          if ((v24 & 0xC000000000000001) != 0)
          {
            v29 = (_QWORD *)MEMORY[0x1BCCF24CC](v26, v24);
          }
          else
          {
            v29 = *(_QWORD **)(v24 + 8 * v26 + 32);
            swift_retain();
          }
          v30 = (void *)MEMORY[0x1BCCF2DD8]();
          v31 = sub_1BC4DD794();
          v32 = v31;
          if (*(_QWORD *)(v28 + 16) && (v33 = sub_1BC559308(v31), (v34 & 1) != 0))
          {
            v35 = (uint64_t *)(*(_QWORD *)(v28 + 56) + 24 * v33);
            v36 = *v35;
            v37 = *((double *)v35 + 1);
            v38 = *((double *)v35 + 2);
            swift_bridgeObjectRetain();
          }
          else
          {
            if (v32 < 0)
            {
              sub_1BC62D388();
              __break(1u);
              return;
            }
            v37 = 0.0;
            if (v32)
            {
              v36 = sub_1BC62C8CC();
              *(_QWORD *)(v36 + 16) = v32;
              bzero((void *)(v36 + 32), 8 * v32);
            }
            else
            {
              v36 = MEMORY[0x1E0DEE9D8];
            }
            v38 = 0.0;
          }
          sub_1BC59CDFC((uint64_t)v29, (char *)v36, a2, a3, v6, v27, v37, v38);
          v40 = v39;
          swift_bridgeObjectRelease();
          v42 = v29[12];
          v41 = v29[13];
          __swift_project_boxed_opaque_existential_1Tm(v29 + 9, v42);
          v43 = (*(double (**)(uint64_t, uint64_t))(v41 + 48))(v42, v41);
          if (qword_1EF428430 != -1)
            swift_once();
          ++v26;
          v44 = v6 + v40;
          v6 = v44 + *(double *)&qword_1EF459BF0;
          objc_autoreleasePoolPop(v30);
          swift_release();
          if (v25 == v26)
          {
            swift_bridgeObjectRelease();
            v6 = v44 + v43 + 0.0;
            v10 = (double *)&unk_1EF459000;
            v11 = &selRef_predicateWithFormat_;
            p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___HRWDDisplayable + 48);
            a1 = v60;
            v8 = (double *)&unk_1EF459000;
            goto LABEL_39;
          }
        }
      }
      __break(1u);
      goto LABEL_56;
    }
  }
  swift_bridgeObjectRelease();
  v6 = 0.0;
LABEL_39:
  v45 = (void *)*((_QWORD *)a1 + 6);
  if (v45)
  {
    v4 = *((double *)a1 + 7);
    v3 = *((double *)a1 + 8);
    v46 = qword_1EF428418;
    v47 = v45;
    v59 = v47;
    if (v46 == -1)
    {
LABEL_41:
      v48 = v8[379];
      if (qword_1EF428490 != -1)
      {
        swift_once();
        v47 = v59;
      }
      v49 = *(double *)&qword_1EF459C50;
      if (p_opt_class_meths[143] != (__objc2_meth_list *)-1)
      {
        swift_once();
        v47 = v59;
      }
      v50 = v10[391];
      v51 = objc_msgSend(v47, v11[443]);
      v52 = sub_1BC62C680();
      v54 = v53;

      swift_bridgeObjectRelease();
      v55 = HIBYTE(v54) & 0xF;
      if ((v54 & 0x2000000000000000) == 0)
        v55 = v52 & 0xFFFFFFFFFFFFLL;
      if (v55)
      {
        if (a3 == 1)
          v56 = v48 + v50 - v49 - v4;
        else
          v56 = v48 + v49;
        v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
        objc_msgSend(v57, sel_setMinimumScaleFactor_, 1.0);
        UIGraphicsPushContext(a2);
        objc_msgSend(v59, sel_drawWithRect_options_context_, 1, v57, v56, v6, v4, v3);
        UIGraphicsPopContext();

        v58 = v57;
      }
      else
      {
        v58 = v59;
      }

      return;
    }
LABEL_56:
    swift_once();
    v47 = v59;
    goto LABEL_41;
  }
}

void sub_1BC59D818(uint64_t a1, void *a2, CGContextRef c, uint64_t a4, double a5, double a6)
{
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGFloat v18;
  CGColor *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  id v32;
  double v33;
  double v34;
  double v35;
  CGContext *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  CGContext *v42;
  double v43;
  double v44;
  void *v45;
  double v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  double v52;
  double v55;
  double v56;
  id v58;
  CGRect v59;

  v9 = *(double *)(a1 + 160);
  v56 = *(double *)(a1 + 152);
  if (qword_1EF428458 != -1)
    swift_once();
  v10 = *(double *)&qword_1EF459C18;
  if (qword_1EF428468 != -1)
    swift_once();
  v11 = *(double *)&qword_1EF459C28;
  if (qword_1EF428418 != -1)
    swift_once();
  v12 = v10 + v11;
  v13 = *(double *)&qword_1EF459BD8;
  v14 = *(double *)&qword_1EF459BD8;
  if (qword_1EF428410 != -1)
  {
    swift_once();
    v14 = *(double *)&qword_1EF459BD8;
  }
  v15 = v9 + v12;
  v16 = *(double *)&qword_1EF459BD0 - v14;
  if (qword_1EF428478 != -1)
    swift_once();
  v17 = v16 - v15;
  v18 = *(double *)&qword_1EF459C38;
  CGContextSaveGState(c);
  if (qword_1EF4287D0 != -1)
    swift_once();
  v55 = v9;
  v19 = (CGColor *)objc_msgSend((id)qword_1EF45A030, sel_CGColor);
  CGContextSetFillColorWithColor(c, v19);

  v59.size.height = 0.5;
  v59.origin.x = v13;
  v59.origin.y = v16 - v15;
  v59.size.width = v18;
  CGContextFillRect(c, v59);
  CGContextRestoreGState(c);
  v20 = *(void **)(a1 + 120);
  v21 = *(double *)(a1 + 128);
  v22 = *(double *)(a1 + 136);
  if (qword_1EF428460 != -1)
    swift_once();
  v23 = *(double *)&qword_1EF459C20;
  v24 = *(double *)&qword_1EF459C38;
  v25 = objc_msgSend(v20, sel_string);
  v26 = sub_1BC62C680();
  v28 = v27;

  swift_bridgeObjectRelease();
  v29 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0)
    v29 = v26 & 0xFFFFFFFFFFFFLL;
  if (v29)
  {
    v30 = v17 + v23;
    if (a4 == 1)
      v31 = v13 + v24 - v21;
    else
      v31 = v13 + 0.0;
    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
    objc_msgSend(v32, sel_setMinimumScaleFactor_, 1.0);
    UIGraphicsPushContext(c);
    objc_msgSend(v20, sel_drawWithRect_options_context_, 1, v32, v31, v30, v21, v22);
    UIGraphicsPopContext();

  }
  v33 = *(double *)&qword_1EF459C20;
  if (qword_1EF428540 != -1)
    swift_once();
  v34 = *(double *)&qword_1EF459D88;
  v35 = *(double *)&qword_1EF459C38;
  v36 = c;
  v37 = objc_msgSend(a2, sel_string);
  v38 = sub_1BC62C680();
  v40 = v39;

  swift_bridgeObjectRelease();
  v41 = HIBYTE(v40) & 0xF;
  if ((v40 & 0x2000000000000000) == 0)
    v41 = v38 & 0xFFFFFFFFFFFFLL;
  v42 = v36;
  if (v41)
  {
    v43 = v17 + v33 + v34;
    if (a4 == 1)
      v44 = v13 + 0.0;
    else
      v44 = v13 + v35 - a5;
    v42 = (CGContext *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
    objc_msgSend(v42, (SEL)&protocolRef_WDNotificationPolicy, 1.0);
    UIGraphicsPushContext(v36);
    objc_msgSend(a2, sel_drawWithRect_options_context_, 1, v42, v44, v43, a5, a6);
    UIGraphicsPopContext();

  }
  v45 = *(void **)(a1 + 144);
  v46 = *(double *)&qword_1EF459C38;
  v47 = objc_msgSend(v45, sel_string);
  v48 = sub_1BC62C680();
  v50 = v49;

  swift_bridgeObjectRelease();
  v51 = HIBYTE(v50) & 0xF;
  if ((v50 & 0x2000000000000000) == 0)
    v51 = v48 & 0xFFFFFFFFFFFFLL;
  if (v51)
  {
    if (a4 == 1)
      v52 = v13 + v46 - v56;
    else
      v52 = v13 + 0.0;
    v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12A0]), sel_init);
    objc_msgSend(v58, (SEL)&protocolRef_WDNotificationPolicy, 1.0);
    UIGraphicsPushContext(v36);
    objc_msgSend(v45, sel_drawWithRect_options_context_, 1, v58, v52, v15 - v55 + v17, v56, v55);
    UIGraphicsPopContext();

  }
}

unint64_t sub_1BC59DD40()
{
  unint64_t result;

  result = qword_1EF433A00;
  if (!qword_1EF433A00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF433A00);
  }
  return result;
}

uint64_t type metadata accessor for FHIRSourceDataSource()
{
  uint64_t result;

  result = qword_1EF437A90;
  if (!qword_1EF437A90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC59DDB8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC59DDF4(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v20 = sub_1BC62A7B4();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v7 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v8 = sub_1BC62A4A8();
  v10 = v9;
  swift_bridgeObjectRelease();

  v11 = type metadata accessor for FHIRRawResourceItem();
  swift_allocObject();
  v12 = a1;
  v13 = a2;
  v14 = sub_1BC4EBE70(v8, v10, v12, v13);

  sub_1BC38DB44(0, (unint64_t *)&unk_1EF42DDB0, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
  sub_1BC62B288();
  v15 = swift_allocObject();
  v19 = xmmword_1BC639590;
  *(_OWORD *)(v15 + 16) = xmmword_1BC639590;
  sub_1BC38DB44(0, &qword_1EF42C5F0, (void (*)(uint64_t))sub_1BC37AE0C);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v19;
  *(_QWORD *)(v16 + 56) = v11;
  *(_QWORD *)(v16 + 64) = sub_1BC347F0C(&qword_1EF433F40, (uint64_t (*)(uint64_t))type metadata accessor for FHIRRawResourceItem, (uint64_t)&protocol conformance descriptor for TextItem);
  *(_QWORD *)(v16 + 32) = v14;
  swift_retain();
  sub_1BC62B258();
  v21 = 0x3C53447961727241;
  v22 = 0xE800000000000000;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v17 = sub_1BC62ADF0();
  swift_release();

  return v17;
}

void sub_1BC59E0C0()
{
  sub_1BC59E0F0();
}

void sub_1BC59E0D8()
{
  sub_1BC59E0F0();
}

void sub_1BC59E0F0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC59E118()
{
  return type metadata accessor for FHIRSourceDataSource();
}

uint64_t sub_1BC59E120()
{
  MEMORY[0x1BCCF35C4](&unk_1BC649800);
  return sub_1BC62B834();
}

uint64_t sub_1BC59E16C()
{
  return sub_1BC347F0C(&qword_1EF437AE0, (uint64_t (*)(uint64_t))type metadata accessor for FHIRSourceDataSource, (uint64_t)&unk_1BC6497D0);
}

BOOL static NSNumber.< infix(_:_:)(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, sel_compare_, a2) == (id)-1;
}

BOOL sub_1BC59E1C0(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, sel_compare_, *a2) == (id)-1;
}

unint64_t sub_1BC59E1FC()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EF437AE8;
  if (!qword_1EF437AE8)
  {
    v1 = sub_1BC497C80();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFD00], v1);
    atomic_store(result, (unint64_t *)&qword_1EF437AE8);
  }
  return result;
}

uint64_t static FeedItemIdentifierFactory.makeComponent(for:prefix:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  unint64_t v12;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v11 = 0x656C69666F72505BLL;
    v12 = 0xE90000000000003ALL;
    v6 = a1;
    v7 = objc_msgSend(v6, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v8 = v11;
    v9 = v12;
  }
  else
  {
    v9 = 0x80000001BC655390;
    v8 = 0xD000000000000013;
  }
  v11 = v8;
  v12 = v9;
  sub_1BC62C764();
  return v11;
}

uint64_t dispatch thunk of static FeedItemIdentifierFactory.makeComponent(for:prefix:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1BC59E394(void *a1)
{
  return static FeedItemIdentifierFactory.makeComponent(for:prefix:)(a1);
}

_QWORD *sub_1BC59E3A8(void *a1, uint64_t a2, void *a3, int a4, void *a5, void *a6, __int128 *a7, uint64_t *a8, void *a9)
{
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  __int128 v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  char *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  __int128 v41;
  __int128 v42;
  char v43;
  id v44;
  id v45;
  id v46;

  v10 = v9;
  v33 = a6;
  v34 = a2;
  LODWORD(v32) = a4;
  v15 = a2;
  v40 = a9;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v31 - v18;
  v20 = *a8;
  v38 = a8[1];
  v39 = v20;
  LOBYTE(v41) = 0;
  sub_1BC59EE70(0, (unint64_t *)&qword_1ED6A4D60);
  swift_allocObject();
  v10[5] = sub_1BC62BF24();
  v36 = (char *)v10 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_parentViewController;
  swift_unknownObjectWeakInit();
  v10[8] = a1;
  *(_QWORD *)&v41 = 0;
  sub_1BC59EDB8(0, (unint64_t *)&qword_1EF437D28, (unint64_t *)&qword_1EF437D30, (unint64_t *)&qword_1EF431480);
  swift_allocObject();
  v37 = a1;
  v10[2] = sub_1BC62BF24();
  sub_1BC34EA24(v15, (uint64_t)v10 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_accountIdentifier);
  *(_QWORD *)&v41 = a3;
  sub_1BC59EDB8(0, (unint64_t *)&qword_1EF42F628, (unint64_t *)&qword_1EF429518, (unint64_t *)&qword_1EF4294F8);
  swift_allocObject();
  v35 = a3;
  v10[3] = sub_1BC62BF24();
  v21 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_isRenderingForConcept;
  *((_BYTE *)v10 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_isRenderingForConcept) = (_BYTE)v32;
  *(_QWORD *)&v41 = a5;
  sub_1BC59EDB8(0, (unint64_t *)&qword_1EF42FD58, (unint64_t *)&qword_1EF42FD60, &qword_1EF42FD68);
  swift_allocObject();
  v32 = a5;
  v10[4] = sub_1BC62BF24();
  v22 = v33;
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_dataProvider) = v33;
  sub_1BC59EE20((uint64_t)a7 + 8, (uint64_t)&v46, &qword_1EF429510, (unint64_t *)&unk_1EF429500);
  sub_1BC59EE20((uint64_t)(a7 + 1), (uint64_t)&v45, (unint64_t *)&qword_1EF429518, (unint64_t *)&qword_1EF4294F8);
  sub_1BC59EE20((uint64_t)a7 + 24, (uint64_t)&v44, (unint64_t *)&unk_1EF429520, (unint64_t *)&qword_1ED6A5920);
  v23 = a7[1];
  v41 = *a7;
  v42 = v23;
  v43 = *((_BYTE *)a7 + 32);
  sub_1BC59EE70(0, (unint64_t *)&unk_1EF437D38);
  swift_allocObject();
  v24 = v22;
  sub_1BC3582B4(&v46);
  sub_1BC3582B4(&v45);
  sub_1BC3582B4(&v44);
  v10[6] = sub_1BC62BF24();
  *(_QWORD *)&v41 = v39;
  *((_QWORD *)&v41 + 1) = v38;
  sub_1BC59ED00();
  swift_allocObject();
  v10[7] = sub_1BC62BF24();
  v25 = v40;
  swift_unknownObjectWeakAssign();
  v26 = v34;
  sub_1BC34EA24(v34, (uint64_t)v19);
  v27 = v10[4];
  v28 = v10[6];
  LODWORD(v15) = *((unsigned __int8 *)v10 + v21);
  type metadata accessor for MedicalRecordTimelineDataSource();
  swift_allocObject();
  swift_retain();
  swift_retain();
  v29 = sub_1BC438A00(v37, (uint64_t)v19, v27, v28, v15, v25);
  sub_1BC5507A4(&v46);
  sub_1BC5507A4(&v45);
  sub_1BC5507A4(&v44);

  sub_1BC3B153C(v26);
  *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_timelineDataSource) = v29;
  v10[5] = v29[5];
  swift_retain();
  swift_release();
  return v10;
}

uint64_t sub_1BC59E7B4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_1BC3B153C(v0 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_accountIdentifier);
  swift_unknownObjectWeakDestroy();
  swift_release();
  return v0;
}

uint64_t sub_1BC59E840()
{
  sub_1BC59E7B4();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC59E864()
{
  return type metadata accessor for MedicalRecordTimelineDataSourceProvider();
}

uint64_t type metadata accessor for MedicalRecordTimelineDataSourceProvider()
{
  uint64_t result;

  result = qword_1EF437B40;
  if (!qword_1EF437B40)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC59E8A8()
{
  unint64_t v0;

  sub_1BC357158(319, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BC59E970()
{
  return sub_1BC59E990();
}

uint64_t sub_1BC59E990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v27;
  void *v28;
  void *v29;

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0F0, (uint64_t (*)(uint64_t))sub_1BC37932C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC63DB50;
  v3 = *(void **)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_dataProvider);
  type metadata accessor for MedicalRecordTimelineAccountDataSource();
  swift_allocObject();
  v6 = v3;
  swift_retain();
  v7 = sub_1BC5EDB8C(v6, v4, v5);
  v8 = sub_1BC347F0C(&qword_1EF437CE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDataSource, (uint64_t)&protocol conformance descriptor for ConceptsDataSource);
  *(_QWORD *)(v2 + 32) = v7;
  *(_QWORD *)(v2 + 40) = v8;
  v9 = v6;
  swift_retain();
  sub_1BC62BF0C();
  swift_release();

  v10 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_parentViewController;
  v11 = (void *)MEMORY[0x1BCCF37A4](v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_parentViewController);
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileDataSource();
  swift_allocObject();
  v12 = sub_1BC3AB38C(v9, v29, v11);
  v13 = sub_1BC347F0C(&qword_1EF437CF0, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeTileDataSource, (uint64_t)&protocol conformance descriptor for ConceptsDataSource);
  *(_QWORD *)(v2 + 48) = v12;
  *(_QWORD *)(v2 + 56) = v13;
  v14 = *(_QWORD *)(v1 + 56);
  type metadata accessor for MedicalRecordTimelineSystemStatusDataSource();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = 0;
  swift_retain_n();
  v16 = ConceptsDataSource.init(arrangedSections:isHidden:)(MEMORY[0x1E0DEE9D8], 0);
  swift_allocObject();
  swift_weakInit();
  sub_1BC59ED00();
  sub_1BC347F0C(&qword_1EF437D08, (uint64_t (*)(uint64_t))sub_1BC59ED00, MEMORY[0x1E0C95FB8]);
  swift_retain();
  v17 = sub_1BC62C0BC();
  swift_release();
  swift_release();
  swift_release();
  v16[6] = v17;
  swift_release();
  v18 = sub_1BC347F0C(&qword_1EF437D10, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineSystemStatusDataSource, (uint64_t)&protocol conformance descriptor for ConceptsDataSource);
  *(_QWORD *)(v2 + 64) = v16;
  *(_QWORD *)(v2 + 72) = v18;
  v19 = *(_QWORD *)(v1 + 24);
  v20 = (void *)MEMORY[0x1BCCF37A4](v10);
  type metadata accessor for MedicalRecordTimelineChartDataSource();
  swift_allocObject();
  v21 = v9;
  swift_retain();
  v22 = sub_1BC429170(v21, v19, v20);
  v23 = sub_1BC347F0C(&qword_1EF437D18, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartDataSource, (uint64_t)&protocol conformance descriptor for ConceptsDataSource);
  *(_QWORD *)(v2 + 80) = v22;
  *(_QWORD *)(v2 + 88) = v23;
  v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_timelineDataSource);
  v25 = sub_1BC347F0C(&qword_1EF437D20, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineDataSource, (uint64_t)&protocol conformance descriptor for ConceptsDataSource);
  *(_QWORD *)(v2 + 96) = v24;
  *(_QWORD *)(v2 + 104) = v25;
  swift_retain();
  return v2;
}

uint64_t sub_1BC59ECD4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC59ECF8(uint64_t *a1)
{
  return sub_1BC5BC97C(a1);
}

void sub_1BC59ED00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF437CF8)
  {
    sub_1BC59ED64();
    v0 = sub_1BC62BF18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF437CF8);
  }
}

void sub_1BC59ED64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF437D00)
  {
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF437D00);
  }
}

void sub_1BC59EDB8(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC358210(255, a3, a4);
    v5 = sub_1BC62BF18();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC59EE20(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v6;

  sub_1BC358210(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1BC59EE70(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC62BF18();
    if (!v4)
      atomic_store(v3, a2);
  }
}

id sub_1BC59EEC8()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v1, sel_setFont_, 0);
  objc_msgSend(v1, sel_setNumberOfLines_, 0);
  objc_msgSend(v1, sel_setTextColor_, v0);

  return v1;
}

void sub_1BC59EF68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unsigned int (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(_QWORD, _QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  v4 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1EF432340, v8);
  MEMORY[0x1E0C80A78](v9);
  v46 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - v15;
  sub_1BC384E68(0, &qword_1EF42B7C8, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v43 - v18;
  sub_1BC59F32C(a1, (uint64_t)v16);
  v20 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v5 + 48);
  if (v20(v16, 1, v4) == 1)
  {
    v21 = type metadata accessor for AccountViewData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v19, 1, 1, v21);
  }
  else
  {
    sub_1BC59F3BC((uint64_t)v16, (uint64_t)v7);
    v22 = sub_1BC62A7B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v7, v22);
    v23 = *(int *)(v4 + 24);
    v24 = &v7[*(int *)(v4 + 20)];
    v25 = *(_QWORD *)v24;
    v26 = *((_QWORD *)v24 + 1);
    v44 = v4;
    v45 = a1;
    v27 = v20;
    v28 = *(_QWORD *)&v7[v23];
    v29 = *(_QWORD *)&v7[v23 + 8];
    v30 = type metadata accessor for AccountViewData(0);
    v31 = &v19[*(int *)(v30 + 20)];
    *(_QWORD *)v31 = v25;
    *((_QWORD *)v31 + 1) = v26;
    v2 = v1;
    v32 = &v19[*(int *)(v30 + 24)];
    *(_QWORD *)v32 = v28;
    *((_QWORD *)v32 + 1) = v29;
    v20 = v27;
    v4 = v44;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v19, 0, 1, v30);
    swift_bridgeObjectRetain();
    a1 = v45;
    swift_bridgeObjectRetain();
    sub_1BC59F380((uint64_t)v7);
  }
  sub_1BC3A1B50((uint64_t)v19);
  sub_1BC384EB4((uint64_t)v19, &qword_1EF42B7C8, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  v33 = sub_1BC46C678();
  sub_1BC59F32C(a1, (uint64_t)v13);
  if (v20(v13, 1, v4) == 1)
  {
    sub_1BC384EB4((uint64_t)v13, &qword_1EF432340, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
  }
  else
  {
    sub_1BC399734();
    v35 = v34;
    sub_1BC59F380((uint64_t)v13);
    if (v35)
    {
      v36 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  v36 = 0;
LABEL_9:
  objc_msgSend(v33, sel_setText_, v36);

  v37 = *(void **)(v2 + qword_1ED6A46A0);
  v38 = v46;
  sub_1BC59F32C(a1, v46);
  if (v20(v38, 1, v4) == 1)
  {
    sub_1BC384EB4(v46, &qword_1EF432340, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
LABEL_13:
    v42 = 0;
    goto LABEL_14;
  }
  v39 = v46;
  sub_1BC3998F4();
  v41 = v40;
  sub_1BC59F380(v39);
  if (!v41)
    goto LABEL_13;
  v42 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
LABEL_14:
  objc_msgSend(v37, sel_setText_, v42);

}

uint64_t sub_1BC59F32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC384E68(0, &qword_1EF432340, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC59F380(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC59F3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC59F400()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;

  v1 = *(void **)(v0 + qword_1ED6A46A0);
  v2 = (void *)objc_opt_self();
  v3 = *MEMORY[0x1E0DC4B10];
  v4 = objc_msgSend(v2, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v1, sel_setFont_, v4);

  v5 = sub_1BC46C678();
  v6 = objc_msgSend(v2, sel_preferredFontForTextStyle_, v3);
  objc_msgSend(v5, sel_setFont_, v6);

}

id sub_1BC59F4D4(uint64_t a1)
{
  return *(id *)(a1 + qword_1ED6A46A0);
}

id AccountStatusSummaryTileFeedItemView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id AccountStatusSummaryTileFeedItemView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for AccountStatusSummaryTileFeedItemView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

uint64_t type metadata accessor for AccountStatusSummaryTileFeedItemView()
{
  uint64_t result;

  result = qword_1ED6A3710;
  if (!qword_1ED6A3710)
    return swift_getSingletonMetadata();
  return result;
}

id sub_1BC59F5D8(void *a1, double a2, double a3, double a4, double a5)
{
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for AccountStatusSummaryTileFeedItemView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id AccountStatusSummaryTileFeedItemView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id AccountStatusSummaryTileFeedItemView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for AccountStatusSummaryTileFeedItemView();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_1BC59F6D8(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AccountStatusSummaryTileFeedItemView();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id AccountStatusSummaryTileFeedItemView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountStatusSummaryTileFeedItemView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC59F754()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AccountStatusSummaryTileFeedItemView()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BC59F794(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  sub_1BC384E68(0, &qword_1EF432340, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - v3;
  sub_1BC59F85C(a1, (uint64_t)&v7 - v3);
  v5 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_1BC59EF68((uint64_t)v4);
  return sub_1BC384EB4((uint64_t)v4, &qword_1EF432340, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
}

uint64_t sub_1BC59F854()
{
  return type metadata accessor for AccountStatusSummaryTileFeedItemView();
}

uint64_t sub_1BC59F85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC59F8CC()
{
  return 0xD000000000000015;
}

id StandardTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  objc_super v8;

  if (a3)
  {
    v5 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for StandardTableViewCell();
  v6 = objc_msgSendSuper2(&v8, sel_initWithStyle_reuseIdentifier_, a1, v5);

  return v6;
}

uint64_t type metadata accessor for StandardTableViewCell()
{
  return objc_opt_self();
}

id StandardTableViewCell.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for StandardTableViewCell();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id StandardTableViewCell.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for StandardTableViewCell);
}

unint64_t sub_1BC59FA28()
{
  return 0xD000000000000012;
}

id sub_1BC59FA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  void *v7;
  void *v8;
  id v9;
  objc_super v11;

  v7 = (void *)a1;
  if (a4)
  {
    sub_1BC62C680();
    v8 = (void *)sub_1BC62C650();
    a1 = swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v11.receiver = v7;
  v11.super_class = (Class)a5(a1);
  v9 = objc_msgSendSuper2(&v11, sel_initWithStyle_reuseIdentifier_, a3, v8);

  return v9;
}

id sub_1BC59FAEC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

id sub_1BC59FB30()
{
  return sub_1BC405B94(type metadata accessor for NoAppTableViewCell);
}

unint64_t sub_1BC59FB68()
{
  return 0xD000000000000013;
}

void sub_1BC59FB84(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  id v30;
  void (*v31)(uint64_t *, _QWORD);
  uint64_t *v32;
  id v33;
  uint64_t aBlock;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  _QWORD *v39;

  v2 = v1;
  v3 = OBJC_IVAR___HRSourceTableViewCell_sourceModel;
  v4 = *(void **)&v1[OBJC_IVAR___HRSourceTableViewCell_sourceModel];
  if (!a1)
  {
    if (!v4)
      return;
    goto LABEL_10;
  }
  if (v4)
  {
    v5 = a1;
    sub_1BC34B6A0(0, &qword_1EF42D9F8);
    v6 = v4;
    v7 = v5;
    LOBYTE(v5) = sub_1BC62CEB4();

    if ((v5 & 1) != 0)
      return;
    if (*(_QWORD *)&v2[v3])
    {
LABEL_10:
      v11 = sub_1BC62BD98();
      v12 = swift_allocBox();
      v14 = v13;
      sub_1BC62BD5C();
      v15 = *(void **)&v2[v3];
      if (v15)
      {
        v16 = objc_msgSend(v15, sel_source);
        v17 = objc_msgSend(v16, sel_name);

        sub_1BC62C680();
      }
      sub_1BC62BD74();
      objc_msgSend(v2, sel_setAccessoryType_, 1);
      v18 = *(void **)&v2[v3];
      if (!v18)
        goto LABEL_17;
      v19 = objc_msgSend(v18, sel_icon);
      if (v19)
      {
        v20 = v19;
        v21 = objc_msgSend(v19, sel_scaledToTargetSize_, *MEMORY[0x1E0D2F4F8], *MEMORY[0x1E0D2F4F0]);
        sub_1BC62BD80();

LABEL_19:
        swift_beginAccess();
        v31 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD08();
        sub_1BC62BCFC();
        v31(&aBlock, 0);
        swift_endAccess();
        v37 = (void *)v11;
        v38 = (void *)MEMORY[0x1E0DC2398];
        v32 = __swift_allocate_boxed_opaque_existential_1(&aBlock);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v32, v14, v11);
        MEMORY[0x1BCCF1DE8](&aBlock);
        swift_release();
        return;
      }
      v22 = *(void **)&v2[v3];
      if (v22)
        v23 = objc_msgSend(v22, sel_source);
      else
LABEL_17:
        v23 = 0;
      v24 = objc_msgSend((id)objc_opt_self(), sel_sharedImageManager);
      v38 = sub_1BC5A06A0;
      v39 = (_QWORD *)v12;
      v25 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v35 = 1107296256;
      v36 = sub_1BC42A188;
      v37 = &block_descriptor_64;
      v26 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v27 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v28 = (_QWORD *)swift_allocObject();
      v28[2] = v23;
      v28[3] = v27;
      v28[4] = v12;
      v38 = sub_1BC5A0718;
      v39 = v28;
      aBlock = v25;
      v35 = 1107296256;
      v36 = sub_1BC46FB0C;
      v37 = &block_descriptor_6_7;
      v29 = _Block_copy(&aBlock);
      v30 = v23;
      swift_retain();
      swift_release();
      objc_msgSend(v24, sel_loadIconForSource_syncHandler_asyncHandler_, v30, v26, v29);
      _Block_release(v29);
      _Block_release(v26);

      goto LABEL_19;
    }
  }
  v8 = objc_msgSend(v2, sel_textLabel);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_setText_, 0);

  }
  v10 = objc_msgSend(v2, sel_imageView);
  if (v10)
  {
    v33 = v10;
    objc_msgSend(v10, sel_setImage_, 0);

  }
}

uint64_t sub_1BC59FFD4(void *a1)
{
  id v2;

  sub_1BC62BD98();
  swift_projectBox();
  swift_beginAccess();
  v2 = a1;
  sub_1BC62BD80();
  return swift_endAccess();
}

uint64_t sub_1BC5A0038(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v9 = sub_1BC62C47C();
  v24 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62C4AC();
  v22 = *(_QWORD *)(v12 - 8);
  v23 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v15 = (void *)sub_1BC62CC74();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a3;
  v16[4] = a4;
  v16[5] = a5;
  aBlock[4] = sub_1BC5A0760;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_12_3;
  v17 = _Block_copy(aBlock);
  v18 = a3;
  swift_retain();
  swift_retain();
  v19 = a1;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC370738();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v14, v11, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v23);
}

void sub_1BC5A0268(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  char v13;
  id v14;

  sub_1BC62BD98();
  swift_projectBox();
  if (a1)
  {
    swift_beginAccess();
    v6 = MEMORY[0x1BCCF37A4](a3 + 16);
    v7 = (id)v6;
    if (v6)
    {
      v8 = *(void **)(v6 + OBJC_IVAR___HRSourceTableViewCell_sourceModel);
      v9 = v8;
      v10 = a1;

      if (v8)
      {
        v7 = objc_msgSend(v9, sel_source);

        if (!a2)
        {
LABEL_11:
          if (v7)
          {

            a1 = v7;
LABEL_14:

            return;
          }
LABEL_13:
          v14 = objc_msgSend(a1, sel_scaledToTargetSize_, *MEMORY[0x1E0D2F4F8], *MEMORY[0x1E0D2F4F0]);
          swift_beginAccess();
          sub_1BC62BD80();
          swift_endAccess();
          goto LABEL_14;
        }
      }
      else
      {
        v7 = 0;
        if (!a2)
          goto LABEL_11;
      }
    }
    else
    {
      v11 = a1;
      if (!a2)
        goto LABEL_11;
    }
    if (!v7)
      goto LABEL_14;
    sub_1BC34B6A0(0, &qword_1EF42DAC0);
    v12 = a2;
    v13 = sub_1BC62CEB4();

    if ((v13 & 1) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
}

id SourceTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v3[OBJC_IVAR___HRSourceTableViewCell_sourceModel] = 0;
  if (a3)
  {
    v5 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for SourceTableViewCell();
  v6 = objc_msgSendSuper2(&v8, sel_initWithStyle_reuseIdentifier_, a1, v5);

  return v6;
}

uint64_t type metadata accessor for SourceTableViewCell()
{
  return objc_opt_self();
}

id SourceTableViewCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SourceTableViewCell.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___HRSourceTableViewCell_sourceModel] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SourceTableViewCell();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

void sub_1BC5A0634()
{
  uint64_t v0;

}

id SourceTableViewCell.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for SourceTableViewCell);
}

uint64_t method lookup function for StandardTableViewCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static StandardTableViewCell.reuseIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t type metadata accessor for NoAppTableViewCell()
{
  return objc_opt_self();
}

uint64_t method lookup function for SourceTableViewCell()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BC5A06A0(void *a1)
{
  return sub_1BC59FFD4(a1);
}

uint64_t block_copy_helper_61(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_61()
{
  return swift_release();
}

uint64_t sub_1BC5A06C0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC5A06E4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5A0718(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC5A0038(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1BC5A0724()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC5A0760()
{
  uint64_t v0;

  sub_1BC5A0268(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BC5A0784()
{
  id v0;
  uint64_t v1;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v0 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_1BC5A084C()
{
  id v0;
  uint64_t v1;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v0 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_1BC5A0918()
{
  id v0;
  uint64_t v1;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v0 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_1BC5A09E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD v20[2];

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v20 - v1;
  v3 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  if (qword_1EF428568 != -1)
    swift_once();
  v4 = (void *)qword_1EF42F6E0;
  v20[1] = *(_QWORD *)algn_1EF42F6E8;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC6395A0;
  v6 = qword_1ED6A4888;
  v20[0] = v4;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v8 = sub_1BC62A4A8();
  v10 = v9;
  swift_bridgeObjectRelease();

  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1BC3644C0();
  *(_QWORD *)(v5 + 64) = v12;
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v10;
  v13 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v14 = sub_1BC62A4A8();
  v16 = v15;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v5 + 96) = v11;
  *(_QWORD *)(v5 + 104) = v12;
  *(_QWORD *)(v5 + 72) = v14;
  *(_QWORD *)(v5 + 80) = v16;
  v17 = (void *)v20[0];
  sub_1BC62A4A8();
  v18 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v2);
  return v18;
}

void sub_1BC5A0CC4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  double v21;
  double v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  _QWORD v38[2];

  v1 = v0;
  v38[0] = sub_1BC62B12C();
  v2 = *(_QWORD *)(v38[0] - 8);
  MEMORY[0x1E0C80A78](v38[0]);
  v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v6);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v1, sel_setBackgroundView_, v7);

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v1, sel_setSelectedBackgroundView_, v8);

  v9 = objc_msgSend(v1, sel_selectedBackgroundView);
  if (v9)
  {
    v10 = v9;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
    v11 = (void *)sub_1BC62CE48();
    objc_msgSend(v10, sel_setBackgroundColor_, v11);

  }
  v12 = objc_msgSend(v1, sel_contentView, v38[0]);
  v13 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI8ListCell_textLabel];
  objc_msgSend(v12, sel_addSubview_, v13);

  v14 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v13, sel_setFont_, v14);

  objc_msgSend(v13, sel_setNumberOfLines_, 0);
  objc_msgSend(v13, sel_setAdjustsFontForContentSizeCategory_, 1);
  v15 = objc_msgSend(v5, sel_labelColor);
  objc_msgSend(v13, sel_setTextColor_, v15);

  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v16 = (void *)objc_opt_self();
  sub_1BC34D844();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BC63A3D0;
  v18 = objc_msgSend(v13, sel_leadingAnchor);
  v19 = objc_msgSend(v1, sel_contentView);
  v20 = objc_msgSend(v19, sel_leadingAnchor);

  sub_1BC62B120();
  sub_1BC62B084();
  v22 = v21;
  (*(void (**)(char *, _QWORD))(v2 + 8))(v4, v38[0]);
  v23 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, v22);

  *(_QWORD *)(v17 + 32) = v23;
  v24 = objc_msgSend(v13, sel_topAnchor);
  v25 = objc_msgSend(v1, sel_contentView);
  v26 = objc_msgSend(v25, sel_topAnchor);

  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26, 12.0);
  *(_QWORD *)(v17 + 40) = v27;
  v28 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v29 = objc_msgSend(v28, sel_layoutMarginsGuide);

  v30 = objc_msgSend(v29, sel_trailingAnchor);
  v31 = objc_msgSend(v13, sel_trailingAnchor);
  v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

  *(_QWORD *)(v17 + 48) = v32;
  v33 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v34 = objc_msgSend(v33, sel_bottomAnchor);

  v35 = objc_msgSend(v13, sel_bottomAnchor);
  v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_constant_, v35, 12.0);

  *(_QWORD *)(v17 + 56) = v36;
  v38[1] = v17;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v37 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_activateConstraints_, v37);

}

uint64_t sub_1BC5A1408@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC5A1458(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1BC37AEB4(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC5A14B0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1BC5A14F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ListCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ListCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC5A157C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t sub_1BC5A1598()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

void (*sub_1BC5A15B4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78))();
  return sub_1BC383B18;
}

void *sub_1BC5A1610(void *a1, uint64_t a2)
{
  return sub_1BC5A1648(a1, a2, (uint64_t (*)(void))sub_1BC558F8C, (unint64_t *)&qword_1ED6A58C0);
}

void *sub_1BC5A162C(void *a1, uint64_t a2)
{
  return sub_1BC5A1648(a1, a2, (uint64_t (*)(void))sub_1BC559208, (unint64_t *)&qword_1ED6A5920);
}

void *sub_1BC5A1648(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4)
{
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  id v11;
  void *v13;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v9 = a3();
      if ((v10 & 1) != 0)
      {
        v8 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v9);
        v11 = v8;
        return v8;
      }
    }
    return 0;
  }
  v6 = a1;
  v7 = sub_1BC62D358();

  if (!v7)
    return 0;
  sub_1BC34B6A0(0, a4);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v8 = v13;
  swift_unknownObjectRelease();
  return v8;
}

void *sub_1BC5A1728(void *a1, uint64_t a2)
{
  return sub_1BC5A1648(a1, a2, (uint64_t (*)(void))sub_1BC55974C, (unint64_t *)&qword_1ED6A5998);
}

uint64_t sub_1BC5A1744@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  if (*(_QWORD *)(a2 + 16) && (result = sub_1BC55974C(result), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(a2 + 56) + 48 * result;
    v8 = *(id *)v6;
    v7 = *(_QWORD *)(v6 + 8);
    v9 = *(_QWORD *)(v6 + 16);
    v10 = *(void **)(v6 + 24);
    v11 = *(_QWORD *)(v6 + 32);
    v12 = *(_QWORD *)(v6 + 40);
    v13 = *(id *)v6;
    swift_retain();
    swift_retain();
    v14 = v10;
    swift_retain();
    result = swift_retain();
  }
  else
  {
    v8 = 0;
    v7 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
  }
  *a3 = v8;
  a3[1] = v7;
  a3[2] = v9;
  a3[3] = v10;
  a3[4] = v11;
  a3[5] = v12;
  return result;
}

uint64_t sub_1BC5A17F4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  unint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  void *v45;
  unint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  char isUniquelyReferenced_nonNull_native;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_59;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v3)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v3 >= 1)
  {
    v5 = (uint64_t *)(v1 + 16);
    v58 = v2 & 0xC000000000000001;
    swift_beginAccess();
    v6 = 0;
    v7 = 0;
    v56 = v2;
    v57 = v3;
    while (1)
    {
      if (v58)
        v9 = (id)MEMORY[0x1BCCF24CC](v6, v2);
      else
        v9 = *(id *)(v2 + 8 * v6 + 32);
      v10 = v9;
      v11 = swift_bridgeObjectRetain();
      sub_1BC5A8B6C(v11, (uint64_t)v10);
      v13 = v12;
      swift_bridgeObjectRelease();

      if (v13)
      {
        v14 = *v5;
        v59 = v7;
        if ((*v5 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v15 = v13;
          if (sub_1BC62D358())
          {
            sub_1BC34B6A0(0, &qword_1EF42CA00);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v16 = v64;
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            v3 = v57;
            if (v64)
              goto LABEL_19;
          }
          else
          {
            swift_bridgeObjectRelease();
            v3 = v57;
          }
        }
        else if (*(_QWORD *)(v14 + 16))
        {
          swift_bridgeObjectRetain();
          v17 = sub_1BC55933C((uint64_t)v13);
          if ((v18 & 1) != 0)
          {
            v16 = *(id *)(*(_QWORD *)(v14 + 56) + 8 * v17);
            swift_bridgeObjectRelease();
            if (v16)
            {
LABEL_19:
              objc_msgSend(v16, sel_addObject_, v10);
              v19 = objc_msgSend(v10, sel_unitString);
              v20 = sub_1BC62C680();
              v22 = v21;

              v23 = objc_msgSend(v13, sel_unitString);
              v24 = sub_1BC62C680();
              v26 = v25;

              if (v20 == v24 && v22 == v26)
              {

                swift_bridgeObjectRelease_n();
              }
              else
              {
                v27 = sub_1BC62D574();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v27 & 1) != 0)
                {
                  swift_beginAccess();
                  v28 = *v5;
                  if ((*v5 & 0xC000000000000001) != 0)
                  {
                    if (v28 >= 0)
                      v28 &= 0xFFFFFFFFFFFFFF8uLL;
                    v29 = v10;
                    v30 = v16;
                    result = sub_1BC62D118();
                    if (__OFADD__(result, 1))
                      goto LABEL_62;
                    *v5 = sub_1BC5A3044(v28, result + 1);
                  }
                  else
                  {
                    v52 = v10;
                    v53 = v16;
                  }
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  v63 = *v5;
                  *v5 = 0x8000000000000000;
                  sub_1BC48C9BC((uint64_t)v16, v10, isUniquelyReferenced_nonNull_native);
                  *v5 = v63;
                  swift_bridgeObjectRelease();
                  swift_endAccess();

                  swift_beginAccess();
                  v55 = (void *)sub_1BC5A270C((unint64_t)v13);
                  swift_endAccess();

                }
                else
                {

                }
              }
              v2 = v56;
              v3 = v57;
              v7 = v59;
              goto LABEL_7;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          v31 = v13;
        }

        v7 = v59;
      }
      v32 = (void *)objc_opt_self();
      v33 = v10;
      v34 = objc_msgSend(v32, sel_setWithObject_, v33);
      swift_beginAccess();
      v1 = *v5;
      v35 = *v5 & 0xC000000000000001;
      if (v34)
      {
        if (v35)
        {
          if (v1 < 0)
            v36 = *v5;
          else
            v36 = v1 & 0xFFFFFFFFFFFFFF8;
          v37 = sub_1BC62D118();
          if (__OFADD__(v37, 1))
          {
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            swift_bridgeObjectRetain();
            result = sub_1BC62D3B8();
            v3 = result;
            if (!result)
              return swift_bridgeObjectRelease();
            goto LABEL_3;
          }
          *v5 = sub_1BC5A3044(v36, v37 + 1);
        }
        v8 = swift_isUniquelyReferenced_nonNull_native();
        v61 = *v5;
        *v5 = 0x8000000000000000;
        sub_1BC48C9BC((uint64_t)v34, v33, v8);
        *v5 = v61;

        swift_bridgeObjectRelease();
      }
      else if (v35)
      {
        if (v1 < 0)
          v2 = *v5;
        else
          v2 = v1 & 0xFFFFFFFFFFFFFF8;
        v38 = v33;
        swift_bridgeObjectRetain();
        v39 = sub_1BC62D358();

        if (v39)
        {
          swift_unknownObjectRelease();
          v40 = sub_1BC62D118();
          v1 = sub_1BC5A3044(v2, v40);
          swift_retain();
          v41 = sub_1BC55933C((uint64_t)v38);
          v43 = v42;
          swift_release();
          if ((v43 & 1) == 0)
            goto LABEL_58;

          v44 = v7;
          v45 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v41);
          sub_1BC5A3B08(v41, v1);
          *v5 = v1;

          v7 = v44;
          swift_bridgeObjectRelease();
          v2 = v56;
          v3 = v57;
        }
        else
        {

          swift_bridgeObjectRelease();
          v2 = v56;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v46 = sub_1BC55933C((uint64_t)v33);
        v48 = v47;
        swift_bridgeObjectRelease();
        if ((v48 & 1) != 0)
        {
          v60 = v7;
          v49 = swift_isUniquelyReferenced_nonNull_native();
          v50 = *v5;
          v62 = *v5;
          *v5 = 0x8000000000000000;
          if ((v49 & 1) == 0)
          {
            sub_1BC5A5F20((void (*)(_QWORD))sub_1BC3CCDF4);
            v50 = v62;
          }

          v51 = *(void **)(*(_QWORD *)(v50 + 56) + 8 * v46);
          sub_1BC5A3B08(v46, v50);
          *v5 = v50;

          swift_bridgeObjectRelease();
          v7 = v60;
        }
        else
        {

        }
      }
      swift_endAccess();

LABEL_7:
      if (v3 == ++v6)
        return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

uint64_t sub_1BC5A1E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  swift_beginAccess();
  if ((*(_QWORD *)(v0 + 16) & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC5A80D8();
  }
  else
  {
    v3 = swift_bridgeObjectRetain();
    v2 = (uint64_t)sub_1BC5A8480(v3);
  }
  v4 = v2;
  swift_bridgeObjectRelease();
  v5 = sub_1BC5A210C(v4);
  swift_release();
  if (!v5)
  {
    sub_1BC3DD57C();
    swift_allocError();
    *(_QWORD *)v12 = 1;
    *(_BYTE *)(v12 + 8) = 1;
    swift_willThrow();
    return (uint64_t)v5;
  }
  v6 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  v7 = v5;
  v8 = sub_1BC5A1648(v7, v6, (uint64_t (*)(void))sub_1BC55933C, &qword_1EF42CA00);
  swift_bridgeObjectRelease();
  if (!v8)
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3550]), sel_init);
  v9 = v8;
  v10 = sub_1BC5A8E0C(v9, v9);

  if (v10[2])
  {
    sub_1BC5A90B0(0, (unint64_t *)&qword_1EF42C9E8, &qword_1EF429110, 0x1E0CB6CD0, &qword_1EF42C9F0);
    v11 = sub_1BC62D400();
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9E0];
  }
  v16 = v11;
  v13 = (_QWORD *)swift_bridgeObjectRetain();
  sub_1BC5A87C4(v13, 1, &v16);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    v5 = sub_1BC5A210C(v16);
    swift_release();
    if (!v5)
    {
      sub_1BC3DD57C();
      swift_allocError();
      *(_QWORD *)v14 = 1;
      *(_BYTE *)(v14 + 8) = 1;
      swift_willThrow();
    }

    return (uint64_t)v5;
  }
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

id sub_1BC5A210C(uint64_t a1)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unsigned int v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v31;
  uint64_t v32;
  int64_t v33;

  v32 = a1 + 64;
  v2 = *(_BYTE *)(a1 + 32);
  v3 = 1 << v2;
  v4 = -1;
  if (1 << v2 < 64)
    v4 = ~(-1 << (1 << v2));
  v5 = v4 & *(_QWORD *)(a1 + 64);
  if (!v5)
  {
    v12 = v2 & 0x3F;
    if (v12 > 6)
    {
      v33 = (unint64_t)(v3 + 63) >> 6;
      v26 = *(_QWORD *)(a1 + 72);
      if (v26)
      {
        v6 = 1;
        goto LABEL_35;
      }
      if (v12 >= 8)
      {
        v26 = *(_QWORD *)(a1 + 80);
        if (v26)
        {
          v6 = 2;
        }
        else
        {
          v26 = *(_QWORD *)(a1 + 88);
          if (!v26)
            goto LABEL_42;
          v6 = 3;
        }
        goto LABEL_35;
      }
    }
    return 0;
  }
  v6 = 0;
  v7 = __clz(__rbit64(v5));
  v8 = (v5 - 1) & v5;
  v33 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    v9 = 8 * v7;
    v10 = *(void **)(*(_QWORD *)(a1 + 48) + v9);
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v9);
    swift_bridgeObjectRetain();
    v31 = v10;
    if (v8)
    {
      while (1)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v6 << 6);
LABEL_27:
        v19 = 8 * v15;
        v20 = *(void **)(*(_QWORD *)(a1 + 48) + v19);
        v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v19);
        if (v11 == v21)
        {
          v22 = v20;
          v23 = objc_msgSend(v31, sel_unitString);
          sub_1BC62C680();

          v24 = objc_msgSend(v22, sel_unitString);
          sub_1BC62C680();

          sub_1BC36E2AC();
          v25 = sub_1BC62D058();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v25 == 1)
            goto LABEL_29;
LABEL_8:

          if (!v8)
            break;
        }
        else
        {
          v13 = v20;
          if (v11 >= v21)
            goto LABEL_8;
          v11 = v21;
LABEL_29:

          v31 = v20;
          if (!v8)
            break;
        }
      }
    }
    v16 = v6 + 1;
    if (!__OFADD__(v6, 1))
      break;
    __break(1u);
LABEL_42:
    if (v12 < 9)
      return 0;
    v26 = *(_QWORD *)(a1 + 96);
    if (v26)
    {
      v6 = 4;
      goto LABEL_35;
    }
    v26 = *(_QWORD *)(a1 + 104);
    if (v26)
    {
      v6 = 5;
      goto LABEL_35;
    }
LABEL_48:
    v27 = 0;
    v28 = 6;
    if (v33 > 6)
      v28 = v33;
    v29 = v28 - 6;
    do
    {
      if (v29 == v27)
        return 0;
      v26 = *(_QWORD *)(a1 + 112 + 8 * v27++);
    }
    while (!v26);
    v6 = v27 + 5;
LABEL_35:
    v8 = (v26 - 1) & v26;
    v7 = __clz(__rbit64(v26)) + (v6 << 6);
  }
  if (v16 >= v33)
    goto LABEL_31;
  v17 = *(_QWORD *)(v32 + 8 * v16);
  ++v6;
  if (v17)
    goto LABEL_26;
  v6 = v16 + 1;
  if (v16 + 1 >= v33)
    goto LABEL_31;
  v17 = *(_QWORD *)(v32 + 8 * v6);
  if (v17)
    goto LABEL_26;
  v6 = v16 + 2;
  if (v16 + 2 >= v33)
    goto LABEL_31;
  v17 = *(_QWORD *)(v32 + 8 * v6);
  if (v17)
    goto LABEL_26;
  v6 = v16 + 3;
  if (v16 + 3 >= v33)
    goto LABEL_31;
  v17 = *(_QWORD *)(v32 + 8 * v6);
  if (v17)
    goto LABEL_26;
  v18 = v16 + 4;
  if (v18 < v33)
  {
    v17 = *(_QWORD *)(v32 + 8 * v18);
    if (v17)
    {
      v6 = v18;
LABEL_26:
      v8 = (v17 - 1) & v17;
      v15 = __clz(__rbit64(v17)) + (v6 << 6);
      goto LABEL_27;
    }
    while (1)
    {
      v6 = v18 + 1;
      if (__OFADD__(v18, 1))
        break;
      if (v6 >= v33)
        goto LABEL_31;
      v17 = *(_QWORD *)(v32 + 8 * v6);
      ++v18;
      if (v17)
        goto LABEL_26;
    }
    __break(1u);
    goto LABEL_48;
  }
LABEL_31:
  swift_release();
  return v31;
}

uint64_t MedicalRecordUnitCollector.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordUnitCollector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double sub_1BC5A24DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  double result;
  uint64_t v16;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1BC558D94(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v16 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BC5A4B20();
      v11 = v16;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56) + 72 * v8;
    v13 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(a3 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a3 + 48) = v13;
    *(_QWORD *)(a3 + 64) = *(_QWORD *)(v12 + 64);
    v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(_OWORD *)(a3 + 16) = v14;
    sub_1BC5A34E0(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_1BC5A25E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BC559014(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BC5A54A0();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1BC62A7B4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56) + 48 * v6;
    v13 = *(_QWORD *)(v12 + 24);
    v14 = *(_BYTE *)(v12 + 32);
    v15 = *(_QWORD *)(v12 + 40);
    *(_BYTE *)a2 = *(_BYTE *)v12;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)(v12 + 8);
    *(_QWORD *)(a2 + 24) = v13;
    *(_BYTE *)(a2 + 32) = v14;
    *(_QWORD *)(a2 + 40) = v15;
    sub_1BC5A385C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t sub_1BC5A270C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_1BC55933C(a1);
    v13 = v12;
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v9 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1BC5A5F20((void (*)(_QWORD))sub_1BC3CCDF4);
        v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = (id)a1;
  v7 = sub_1BC62D358();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  v8 = sub_1BC62D118();
  v9 = sub_1BC5A3044(v5, v8);
  swift_retain();
  a1 = sub_1BC55933C((uint64_t)v6);
  v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v15 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * a1);
  sub_1BC5A3B08(a1, v9);
  *v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

double sub_1BC5A2860@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  double result;
  uint64_t v16;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BC559478(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v16 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BC5A6CB8();
      v9 = v16;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for BrowseCategory();
    sub_1BC3B22E8(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6);
    v12 = *(_QWORD *)(v9 + 56) + 72 * v6;
    v13 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a2 + 48) = v13;
    *(_QWORD *)(a2 + 64) = *(_QWORD *)(v12 + 64);
    v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v12;
    *(_OWORD *)(a2 + 16) = v14;
    sub_1BC5A3F58(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1BC5A2970(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BC558D94(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BC5A70F4(&qword_1ED6A4808, (unint64_t *)&qword_1ED6A4E60);
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1BC5A4454(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1BC5A2A54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  double result;
  uint64_t v16;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BC559014(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v16 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BC5A72C0();
      v9 = v16;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1BC62A7B4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56) + 72 * v6;
    v13 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a2 + 48) = v13;
    *(_QWORD *)(a2 + 64) = *(_QWORD *)(v12 + 64);
    v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v12;
    *(_OWORD *)(a2 + 16) = v14;
    sub_1BC5A4628(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1BC5A2B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    sub_1BC35E318(0, (unint64_t *)&qword_1EF429758, &qword_1ED6A58D8, 0x1E0CB6B00, (unint64_t *)&qword_1ED6A58E0);
    v2 = sub_1BC62D3F4();
    v18 = v2;
    sub_1BC62D2F8();
    v3 = sub_1BC62D364();
    if (v3)
    {
      v4 = v3;
      sub_1BC34B6A0(0, &qword_1ED6A58D8);
      do
      {
        swift_dynamicCast();
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1BC3C1D14(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1BC62CEA8();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1BC62D364();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_1BC5A2DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    sub_1BC35E318(0, &qword_1EF429740, &qword_1EF429748, 0x1E0CB6868, &qword_1EF429750);
    v2 = sub_1BC62D3F4();
    v18 = v2;
    sub_1BC62D2F8();
    v3 = sub_1BC62D364();
    if (v3)
    {
      v4 = v3;
      sub_1BC34B6A0(0, &qword_1EF429748);
      do
      {
        swift_dynamicCast();
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1BC3C2C24(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1BC62CEA8();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1BC62D364();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_1BC5A3044(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    sub_1BC3CCDF4();
    v2 = sub_1BC62D3F4();
    v18 = v2;
    sub_1BC62D2F8();
    v3 = sub_1BC62D364();
    if (v3)
    {
      v4 = v3;
      sub_1BC34B6A0(0, &qword_1EF429110);
      do
      {
        swift_dynamicCast();
        sub_1BC34B6A0(0, &qword_1EF42CA00);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1BC3C48B4(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1BC62CEA8();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1BC62D364();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_1BC5A3290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    sub_1BC3CCAD0();
    v2 = sub_1BC62D3F4();
    v18 = v2;
    sub_1BC62D2F8();
    v3 = sub_1BC62D364();
    if (v3)
    {
      v4 = v3;
      sub_1BC34B6A0(0, &qword_1ED6A5900);
      do
      {
        swift_dynamicCast();
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1BC3C902C(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1BC62CEA8();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1BC62D364();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

unint64_t sub_1BC5A34E0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC62D0AC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BC62D670();
        swift_bridgeObjectRetain();
        sub_1BC62C740();
        v9 = sub_1BC62D6AC();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + 72 * v3;
          v15 = (const void *)(v14 + 72 * v6);
          if (v3 != v6 || (v3 = v6, result >= (unint64_t)v15 + 72))
          {
            result = (unint64_t)memmove((void *)result, v15, 0x48uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BC5A36C0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC62D0AC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1BC62D664();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BC5A385C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_1BC62A7B4();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1BC62D0AC();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1BC62C5C0();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (__int128 *)(v23 + 48 * a1);
            v25 = (__int128 *)(v23 + 48 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 3))
            {
              v26 = *v25;
              v27 = v25[2];
              v24[1] = v25[1];
              v24[2] = v27;
              *v24 = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1BC5A3B08(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1BC62D0AC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1BC62CEA8();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1BC5A3CB8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;

  v4 = sub_1BC62A760();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1BC62D0AC();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v33 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v34 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v32(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_1BC347F0C(&qword_1EF4288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
        v18 = sub_1BC62C5C0();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v33)
        {
          if (v19 >= v33 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_QWORD *)(v22 + 8 * a1);
            v24 = (_QWORD *)(v22 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v23 >= v24 + 1))
            {
              *v23 = *v24;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v33 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1BC5A3F58(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v26 = type metadata accessor for BrowseCategory();
  v4 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1BC62D0AC();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v4 + 72);
      do
      {
        v14 = v13 * v9;
        sub_1BC35EBE0(*(_QWORD *)(a2 + 48) + v13 * v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
        sub_1BC62D670();
        BrowseCategory.rawValue.getter();
        sub_1BC62C740();
        swift_bridgeObjectRelease();
        v15 = sub_1BC62D6AC();
        sub_1BC3B22E8((uint64_t)v6);
        v16 = v15 & v10;
        if ((uint64_t)a1 >= (uint64_t)v12)
        {
          if (v16 < v12)
            goto LABEL_5;
        }
        else if (v16 >= v12)
        {
          goto LABEL_11;
        }
        if ((uint64_t)a1 >= (uint64_t)v16)
        {
LABEL_11:
          if ((uint64_t)(v13 * a1) < v14 || *(_QWORD *)(a2 + 48) + v13 * a1 >= *(_QWORD *)(a2 + 48) + v14 + v13)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v13 * a1 != v14)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (char *)(v17 + 72 * a1);
          v19 = (char *)(v17 + 72 * v9);
          if (a1 != v9 || (a1 = v9, v18 >= v19 + 72))
          {
            memmove(v18, v19, 0x48uLL);
            a1 = v9;
          }
        }
LABEL_5:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v20 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    v21 = *v20;
    v22 = (-1 << a1) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    v22 = *v20;
    v21 = (-1 << a1) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1BC5A41B8(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;
  __int128 *v26;
  __int128 *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;

  v2 = a2;
  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC62D0AC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v34 = v3;
        v11 = v8;
        v12 = v4;
        v13 = 32 * v6;
        v14 = v2;
        v15 = *(_QWORD *)(v2 + 48) + 32 * v6;
        v17 = *(_QWORD *)v15;
        v16 = *(_QWORD *)(v15 + 8);
        v18 = *(_QWORD *)(v15 + 16);
        v19 = *(unsigned __int8 *)(v15 + 24);
        sub_1BC62D670();
        if (v19 == 1)
        {
          if (v18 | v16 | v17)
          {
            v2 = v14;
            sub_1BC62D67C();
            v4 = v12;
            v8 = v11;
            goto LABEL_12;
          }
          sub_1BC62D67C();
        }
        else
        {
          sub_1BC62D67C();
          sub_1BC62D6A0();
          sub_1BC62D6A0();
          sub_1BC62D6A0();
        }
        v4 = v12;
        v8 = v11;
        v2 = v14;
LABEL_12:
        v3 = v34;
        result = sub_1BC62D6AC();
        v20 = result & v7;
        if (v34 >= (uint64_t)v8)
        {
          if (v20 < v8)
            goto LABEL_5;
        }
        else if (v20 >= v8)
        {
          goto LABEL_17;
        }
        if (v34 >= (uint64_t)v20)
        {
LABEL_17:
          v21 = *(_QWORD *)(v2 + 48);
          v22 = (_OWORD *)(v21 + 32 * v34);
          v23 = (_OWORD *)(v21 + v13);
          if (32 * v34 != v13 || v22 >= v23 + 2)
          {
            v24 = v23[1];
            *v22 = *v23;
            v22[1] = v24;
          }
          v25 = *(_QWORD *)(v2 + 56);
          v26 = (__int128 *)(v25 + 48 * v34);
          v27 = (__int128 *)(v25 + 48 * v6);
          if (v34 != v6 || (v3 = v6, v26 >= v27 + 3))
          {
            v9 = *v27;
            v10 = v27[2];
            v26[1] = v27[1];
            v26[2] = v10;
            *v26 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v28 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v29 = *v28;
    v30 = (-1 << v3) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v4 + 8 * (result >> 6));
    v30 = *v28;
    v29 = (-1 << result) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(v2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v33;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_1BC5A4454(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC62D0AC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BC62D670();
        swift_bridgeObjectRetain();
        sub_1BC62C740();
        v9 = sub_1BC62D6AC();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

char *sub_1BC5A4628(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;

  v4 = sub_1BC62A7B4();
  v33 = *(_QWORD *)(v4 - 8);
  result = (char *)MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = (char *)sub_1BC62D0AC();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v32 = (unint64_t)(result + 1) & v11;
      v12 = *(_QWORD *)(v33 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v31(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1BC62C5C0();
        result = (char *)(*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v32)
        {
          if (v19 >= v32 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            result = (char *)(v22 + 72 * a1);
            v23 = (char *)(v22 + 72 * v10);
            if (a1 != v10 || (a1 = v10, result >= v23 + 72))
            {
              result = (char *)memmove(result, v23, 0x48uLL);
              v13 = v17;
              v12 = v15;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v32 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v24;
    v26 = (-1 << a1) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v24;
    v25 = (-1 << a1) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_1BC5A48D4()
{
  return sub_1BC5A5120((unint64_t *)&qword_1EF429758, &qword_1ED6A58D8, 0x1E0CB6B00, (unint64_t *)&qword_1ED6A58E0);
}

id sub_1BC5A48F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  __int128 v27;

  v1 = v0;
  sub_1BC35F4F0();
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 72 * v15;
    v17 = *(_BYTE *)v16;
    v19 = *(void **)(v16 + 8);
    v18 = *(_QWORD *)(v16 + 16);
    v20 = *(_OWORD *)(v16 + 24);
    v21 = *(_OWORD *)(v16 + 40);
    v27 = *(_OWORD *)(v16 + 56);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v22 = *(_QWORD *)(v4 + 56) + 72 * v15;
    *(_BYTE *)v22 = v17;
    *(_QWORD *)(v22 + 8) = v19;
    *(_QWORD *)(v22 + 16) = v18;
    *(_OWORD *)(v22 + 24) = v20;
    *(_OWORD *)(v22 + 40) = v21;
    *(_OWORD *)(v22 + 56) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = *((id *)&v27 + 1);
    result = v19;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A4B04()
{
  return sub_1BC5A4D3C(&qword_1EF4297D0, &qword_1ED6A47E8, (uint64_t)off_1E74D01B8);
}

void *sub_1BC5A4B20()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  _OWORD v30[4];
  uint64_t v31;

  v1 = v0;
  sub_1BC35EB5C();
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v29 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 72 * v15;
    sub_1BC3CCF04(*(_QWORD *)(v2 + 56) + 72 * v15, (uint64_t)v30);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    v22 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v22 = v30[0];
    v23 = v30[1];
    v24 = v30[2];
    v25 = v30[3];
    *(_QWORD *)(v22 + 64) = v31;
    *(_OWORD *)(v22 + 32) = v24;
    *(_OWORD *)(v22 + 48) = v25;
    *(_OWORD *)(v22 + 16) = v23;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v29;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC5A4D20()
{
  return sub_1BC5A4D3C(&qword_1EF4297B8, (unint64_t *)&qword_1ED6A47F8, 0x1E0DC3870);
}

id sub_1BC5A4D3C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v4 = v3;
  sub_1BC35EAA4(0, a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t))MEMORY[0x1E0DECD58]);
  v5 = *v3;
  v6 = sub_1BC62D3DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v4 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v9 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v9 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = 8 * v18;
    v20 = *(void **)(*(_QWORD *)(v5 + 56) + v19);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v19);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = v20;
  }
  v23 = v21 + 2;
  if (v23 >= v16)
    goto LABEL_26;
  v22 = *(_QWORD *)(v9 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v9 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A4EEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1BC3CBD60(0, (unint64_t *)&qword_1EF4296E8, sub_1BC3B95B4, (void (*)(void))sub_1BC35D778);
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 32 * v15;
    v18 = *(void **)(v17 + 24);
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    v22 = *(_OWORD *)(v17 + 8);
    *(_QWORD *)v21 = *(_QWORD *)v17;
    *(_OWORD *)(v21 + 8) = v22;
    *(_QWORD *)(v21 + 24) = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    v23 = (void *)*((_QWORD *)&v22 + 1);
    v24 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = v23;
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC5A50E8()
{
  return sub_1BC5A5B3C((unint64_t *)&qword_1EF4296D8, sub_1BC3B95B4);
}

id sub_1BC5A50FC()
{
  return sub_1BC5A5120(&qword_1EF429740, &qword_1EF429748, 0x1E0CB6868, &qword_1EF429750);
}

id sub_1BC5A5120(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v5 = v4;
  sub_1BC35E318(0, a1, a2, a3, a4);
  v6 = *v4;
  v7 = sub_1BC62D3DC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v5 = v8;
    return result;
  }
  result = (id)(v7 + 64);
  v10 = v6 + 64;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v17)
      goto LABEL_26;
    v25 = *(_QWORD *)(v10 + 8 * v24);
    ++v13;
    if (!v25)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v17)
        goto LABEL_26;
      v25 = *(_QWORD *)(v10 + 8 * v13);
      if (!v25)
        break;
    }
LABEL_25:
    v16 = (v25 - 1) & v25;
    v19 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(void **)(*(_QWORD *)(v6 + 48) + v20);
    v22 = *(void **)(*(_QWORD *)(v6 + 56) + v20);
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v21;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v22;
    v23 = v21;
    result = v22;
  }
  v26 = v24 + 2;
  if (v26 >= v17)
    goto LABEL_26;
  v25 = *(_QWORD *)(v10 + 8 * v26);
  if (v25)
  {
    v13 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v25 = *(_QWORD *)(v10 + 8 * v13);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC5A52D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1BC35EDEC(0, (unint64_t *)&qword_1EF429798);
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A54A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  void *v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  const void *v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  __int128 v44;

  v1 = sub_1BC62A7B4();
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  MEMORY[0x1E0C80A78](v1);
  v37 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35E648();
  v34 = v0;
  v3 = *v0;
  v4 = sub_1BC62D3DC();
  v5 = *(_QWORD *)(v3 + 16);
  v41 = v4;
  if (!v5)
  {
    result = (id)swift_release();
    v33 = v41;
    v32 = v34;
LABEL_28:
    *v32 = v33;
    return result;
  }
  v6 = v4;
  result = (id)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v35 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v35, 8 * v8);
    v6 = v41;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v40 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v36 = (unint64_t)(v11 + 63) >> 6;
  v15 = v37;
  v14 = v38;
  v16 = v39;
  v17 = v41;
  while (1)
  {
    if (v13)
    {
      v42 = (v13 - 1) & v13;
      v43 = v10;
      v18 = __clz(__rbit64(v13)) | (v10 << 6);
      v19 = v40;
      goto LABEL_12;
    }
    v28 = v10 + 1;
    v19 = v40;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *((_QWORD *)v35 + v28);
    v30 = v10 + 1;
    if (!v29)
    {
      v30 = v10 + 2;
      if (v10 + 2 >= v36)
        goto LABEL_26;
      v29 = *((_QWORD *)v35 + v30);
      if (!v29)
        break;
    }
LABEL_25:
    v42 = (v29 - 1) & v29;
    v43 = v30;
    v18 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v14 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v16);
    v21 = 48 * v18;
    v22 = *(_QWORD *)(v19 + 56) + v21;
    v23 = *(_BYTE *)v22;
    v44 = *(_OWORD *)(v22 + 8);
    v24 = *(_QWORD *)(v22 + 24);
    v25 = *(_BYTE *)(v22 + 32);
    v26 = *(void **)(v22 + 40);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v17 + 48) + v20, v15, v16);
    v27 = *(_QWORD *)(v17 + 56) + v21;
    *(_BYTE *)v27 = v23;
    *(_OWORD *)(v27 + 8) = v44;
    *(_QWORD *)(v27 + 24) = v24;
    *(_BYTE *)(v27 + 32) = v25;
    *(_QWORD *)(v27 + 40) = v26;
    result = v26;
    v13 = v42;
    v10 = v43;
  }
  v31 = v10 + 3;
  if (v10 + 3 >= v36)
  {
LABEL_26:
    result = (id)swift_release();
    v32 = v34;
    v33 = v41;
    goto LABEL_28;
  }
  v29 = *((_QWORD *)v35 + v31);
  if (v29)
  {
    v30 = v10 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v36)
      goto LABEL_26;
    v29 = *((_QWORD *)v35 + v30);
    ++v31;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC5A5750()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_1BC35EDEC(0, (unint64_t *)&qword_1EF42C7D8);
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_OWORD *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v22 = v20;
    *(_OWORD *)(v22 + 8) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC5A5924()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_1BC35EDEC(0, (unint64_t *)&qword_1EF429780);
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1BC375540(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1BC35E088(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC5A5B28()
{
  return sub_1BC5A5B3C((unint64_t *)&qword_1EF42C9C8, (void (*)(uint64_t))sub_1BC5A9140);
}

void *sub_1BC5A5B3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  uint64_t v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v3 = v2;
  sub_1BC3CC294(0, a1, a2);
  v4 = *v2;
  v5 = sub_1BC62D3DC();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v3 = v6;
    return result;
  }
  result = (void *)(v5 + 64);
  v8 = v4 + 64;
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v8 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v8 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v20 = v19[1];
    v21 = 8 * v17;
    v22 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v6 + 48) + v18);
    *v23 = *v19;
    v23[1] = v20;
    *(_QWORD *)(*(_QWORD *)(v6 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
    goto LABEL_26;
  v25 = *(_QWORD *)(v8 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v8 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A5D04()
{
  return sub_1BC5A70F4(&qword_1EF42C9B8, &qword_1EF42C9C0);
}

void *sub_1BC5A5D20()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v1 = v0;
  sub_1BC3CC294(0, &qword_1EF42CAE0, (void (*)(uint64_t))type metadata accessor for MedicalRecordChartableSeriesCollector);
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_1BC3CD62C(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    v17 = *(_QWORD *)(v4 + 48) + 40 * v15;
    v18 = v23[0];
    v19 = v23[1];
    *(_QWORD *)(v17 + 32) = v24;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A5F14()
{
  return sub_1BC5A5F20((void (*)(_QWORD))sub_1BC3CCDF4);
}

id sub_1BC5A5F20(void (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  a1(0);
  v3 = *v1;
  v4 = sub_1BC62D3DC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = v19;
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A60C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  sub_1BC35E004();
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1BC375540(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1BC35E088(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A6284()
{
  return sub_1BC5A70F4(&qword_1EF4296C0, (unint64_t *)&qword_1EF429090);
}

void *sub_1BC5A62A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for BrowseCategory();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35F3C4();
  v5 = *v0;
  v6 = sub_1BC62D3DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v26 + 72) * v18;
    sub_1BC35EBE0(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
    sub_1BC35F080((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC5A64C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for BrowseCategory();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35F470();
  v5 = *v0;
  v6 = sub_1BC62D3DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v26 + 72) * v18;
    sub_1BC35EBE0(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20);
    result = (void *)sub_1BC35F080((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC5A66E0()
{
  return sub_1BC5A6A90((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], (void (*)(_QWORD, __n128))sub_1BC35F1F8);
}

void *sub_1BC5A66F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1BC3CC294(0, &qword_1ED6A36F0, (void (*)(uint64_t))sub_1BC3CD2B8);
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A68C4()
{
  return sub_1BC5A70F4(&qword_1ED6A36F8, &qword_1ED6A36E8);
}

void *sub_1BC5A68E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BC3CD158();
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A6A7C()
{
  return sub_1BC5A6A90((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], (void (*)(_QWORD, __n128))sub_1BC3CD0B4);
}

id sub_1BC5A6A90(uint64_t (*a1)(_QWORD), void (*a2)(_QWORD, __n128))
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int64_t v30;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  a2(0, v6);
  v28 = v2;
  v9 = *v2;
  v10 = sub_1BC62D3DC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v28 = v11;
    return result;
  }
  result = (id)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13)
    result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v29 = v9 + 64;
  v30 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v15;
    if (!v25)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v30)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v15);
      if (!v25)
        break;
    }
LABEL_25:
    v18 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v5 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v8, *(_QWORD *)(v9 + 48) + v21, v4);
    v22 = 8 * v20;
    v23 = *(void **)(*(_QWORD *)(v9 + 56) + v22);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v11 + 48) + v21, v8, v4);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + v22) = v23;
    result = v23;
  }
  v26 = v24 + 2;
  if (v26 >= v30)
    goto LABEL_26;
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v15 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v15 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v15);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC5A6CB8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  _OWORD v30[4];
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for BrowseCategory();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35EFEC();
  v6 = *v0;
  v7 = sub_1BC62D3DC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v29 = v1;
  result = (void *)(v7 + 64);
  v10 = v6 + 64;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v17)
      goto LABEL_26;
    v27 = *(_QWORD *)(v10 + 8 * v26);
    ++v13;
    if (!v27)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v17)
        goto LABEL_26;
      v27 = *(_QWORD *)(v10 + 8 * v13);
      if (!v27)
        break;
    }
LABEL_25:
    v16 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    sub_1BC35EBE0(*(_QWORD *)(v6 + 48) + v20, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v21 = 72 * v19;
    sub_1BC35EBE0(*(_QWORD *)(v6 + 56) + v21, (uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BC35EF8C);
    result = (void *)sub_1BC35F080((uint64_t)v5, *(_QWORD *)(v8 + 48) + v20);
    v22 = *(_QWORD *)(v8 + 56) + v21;
    v23 = v30[1];
    v24 = v30[2];
    v25 = v30[3];
    *(_QWORD *)(v22 + 64) = v31;
    *(_OWORD *)(v22 + 32) = v24;
    *(_OWORD *)(v22 + 48) = v25;
    *(_OWORD *)(v22 + 16) = v23;
    *(_OWORD *)v22 = v30[0];
  }
  v28 = v26 + 2;
  if (v28 >= v17)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v29;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v10 + 8 * v28);
  if (v27)
  {
    v13 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v27 = *(_QWORD *)(v10 + 8 * v13);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC5A6F04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;

  v1 = v0;
  sub_1BC35EE94();
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      v9 = v30 + 1;
      if (v30 + 1 >= v13)
        goto LABEL_26;
      v31 = *(_QWORD *)(v6 + 8 * v9);
      if (!v31)
        break;
    }
LABEL_25:
    v12 = (v31 - 1) & v31;
    v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 32 * v15;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *(_BYTE *)(v17 + 24);
    v20 = 48 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(void **)v21;
    v23 = *(void **)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = *(_QWORD *)(v21 + 32);
    v27 = *(void **)(v21 + 40);
    v28 = *(_QWORD *)(v4 + 48) + v16;
    *(_OWORD *)v28 = *(_OWORD *)v17;
    *(_QWORD *)(v28 + 16) = v18;
    *(_BYTE *)(v28 + 24) = v19;
    v29 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v29 = v22;
    v29[1] = v23;
    v29[2] = v24;
    v29[3] = v25;
    v29[4] = v26;
    v29[5] = v27;
    result = sub_1BC35EEF4(v22, v23, v24, v25, v26, v27);
  }
  v32 = v30 + 2;
  if (v32 >= v13)
    goto LABEL_26;
  v31 = *(_QWORD *)(v6 + 8 * v32);
  if (v31)
  {
    v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v9);
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A70D8()
{
  return sub_1BC5A70F4(&qword_1ED6A4808, (unint64_t *)&qword_1ED6A4E60);
}

id sub_1BC5A70F4(unint64_t *a1, unint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  uint64_t v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v3 = v2;
  sub_1BC35D594(0, a1, a2);
  v4 = *v2;
  v5 = sub_1BC62D3DC();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v3 = v6;
    return result;
  }
  result = (id)(v5 + 64);
  v8 = v4 + 64;
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v8 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v8 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v20 = v19[1];
    v21 = 8 * v17;
    v22 = *(void **)(*(_QWORD *)(v4 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v6 + 48) + v18);
    *v23 = *v19;
    v23[1] = v20;
    *(_QWORD *)(*(_QWORD *)(v6 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    result = v22;
  }
  v26 = v24 + 2;
  if (v26 >= v15)
    goto LABEL_26;
  v25 = *(_QWORD *)(v8 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v8 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC5A72AC()
{
  return sub_1BC5A5B3C(&qword_1EF42CA10, (void (*)(uint64_t))sub_1BC5A91A4);
}

void *sub_1BC5A72C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  _OWORD v31[4];
  uint64_t v32;

  v1 = v0;
  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35ED08();
  v6 = *v0;
  v7 = sub_1BC62D3DC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v29 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v30 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 72 * v18;
    sub_1BC35EBE0(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v31, (uint64_t (*)(_QWORD))sub_1BC35ECA8);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    v21 = *(_QWORD *)(v8 + 56) + v20;
    v22 = v31[1];
    v23 = v31[2];
    v24 = v31[3];
    *(_QWORD *)(v21 + 64) = v32;
    *(_OWORD *)(v21 + 32) = v23;
    *(_OWORD *)(v21 + 48) = v24;
    *(_OWORD *)(v21 + 16) = v22;
    *(_OWORD *)v21 = v31[0];
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC5A7520()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  void *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  sub_1BC35EA00();
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 32 * v15;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *(_BYTE *)(v17 + 24);
    v20 = 48 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_BYTE *)v21;
    v23 = *(_QWORD *)(v21 + 24);
    v24 = *(_BYTE *)(v21 + 32);
    v25 = *(void **)(v21 + 40);
    v26 = *(_QWORD *)(v4 + 48) + v16;
    v27 = *(_OWORD *)(v21 + 8);
    *(_OWORD *)v26 = *(_OWORD *)v17;
    *(_QWORD *)(v26 + 16) = v18;
    *(_BYTE *)(v26 + 24) = v19;
    v28 = *(_QWORD *)(v4 + 56) + v20;
    *(_BYTE *)v28 = v22;
    *(_OWORD *)(v28 + 8) = v27;
    *(_QWORD *)(v28 + 24) = v23;
    *(_BYTE *)(v28 + 32) = v24;
    *(_QWORD *)(v28 + 40) = v25;
    result = v25;
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A7704()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  __int128 v29;

  v1 = v0;
  sub_1BC3CBD60(0, &qword_1ED6A59A0, (void (*)(uint64_t))type metadata accessor for CategoryCountProvider, (void (*)(void))sub_1BC35E728);
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = 72 * v15;
    v18 = *(_QWORD *)(v2 + 48) + v17;
    v20 = *(void **)(v18 + 8);
    v19 = *(_QWORD *)(v18 + 16);
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v22 = *(_QWORD *)(v4 + 48) + v17;
    v23 = *(_OWORD *)(v18 + 24);
    v24 = *(_OWORD *)(v18 + 40);
    v29 = *(_OWORD *)(v18 + 56);
    *(_BYTE *)v22 = *(_BYTE *)v18;
    *(_QWORD *)(v22 + 8) = v20;
    *(_QWORD *)(v22 + 16) = v19;
    *(_OWORD *)(v22 + 24) = v23;
    *(_OWORD *)(v22 + 40) = v24;
    *(_OWORD *)(v22 + 56) = v29;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = *((id *)&v29 + 1);
    swift_retain();
    result = v20;
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A7944()
{
  return sub_1BC5A7968((unint64_t *)&qword_1ED6A4E20, &qword_1ED6A48A0, 0x1E0CB6A88, (unint64_t *)&qword_1ED6A4920);
}

id sub_1BC5A7968(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v5 = v4;
  sub_1BC5A90B0(0, a1, a2, a3, a4);
  v6 = *v4;
  v7 = sub_1BC62D3DC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v5 = v8;
    return result;
  }
  result = (id)(v7 + 64);
  v10 = v6 + 64;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v17)
      goto LABEL_26;
    v24 = *(_QWORD *)(v10 + 8 * v23);
    ++v13;
    if (!v24)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v17)
        goto LABEL_26;
      v24 = *(_QWORD *)(v10 + 8 * v13);
      if (!v24)
        break;
    }
LABEL_25:
    v16 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(void **)(*(_QWORD *)(v6 + 48) + v20);
    v22 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v20);
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v21;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v22;
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v17)
    goto LABEL_26;
  v24 = *(_QWORD *)(v10 + 8 * v25);
  if (v24)
  {
    v13 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v24 = *(_QWORD *)(v10 + 8 * v13);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A7B14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  __int128 v29;

  v1 = v0;
  sub_1BC35E6C8();
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = 72 * v15;
    v18 = *(_QWORD *)(v2 + 48) + v17;
    v20 = *(void **)(v18 + 8);
    v19 = *(_QWORD *)(v18 + 16);
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v22 = *(_QWORD *)(v4 + 48) + v17;
    v23 = *(_OWORD *)(v18 + 24);
    v24 = *(_OWORD *)(v18 + 40);
    v29 = *(_OWORD *)(v18 + 56);
    *(_BYTE *)v22 = *(_BYTE *)v18;
    *(_QWORD *)(v22 + 8) = v20;
    *(_QWORD *)(v22 + 16) = v19;
    *(_OWORD *)(v22 + 24) = v23;
    *(_OWORD *)(v22 + 40) = v24;
    *(_OWORD *)(v22 + 56) = v29;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = *((id *)&v29 + 1);
    result = v20;
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC5A7D24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BC35DEEC();
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC5A7EC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  __int128 *v19;
  __int128 v20;
  __int128 v21;
  _OWORD *v22;
  id v23;
  id v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  __int128 v29;
  __int128 v30;

  v1 = v0;
  sub_1BC3CCA38();
  v2 = *v0;
  v3 = sub_1BC62D3DC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 48 * v15;
    v19 = (__int128 *)(*(_QWORD *)(v2 + 56) + v18);
    v29 = *v19;
    v20 = *v19;
    v30 = v19[1];
    v21 = v19[2];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v20;
    v22[1] = v30;
    v22[2] = v21;
    v23 = v17;
    v24 = (id)v29;
    swift_retain();
    swift_retain();
    v25 = *((id *)&v30 + 1);
    swift_retain();
    result = (void *)swift_retain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC5A80CC()
{
  return sub_1BC5A5F20((void (*)(_QWORD))sub_1BC3CCAD0);
}

uint64_t sub_1BC5A80D8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  BOOL v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[4];
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;

  v0 = sub_1BC62A568();
  v28 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC62D118())
  {
    sub_1BC5A90B0(0, (unint64_t *)&qword_1EF42C9E8, &qword_1EF429110, 0x1E0CB6CD0, &qword_1EF42C9F0);
    v3 = sub_1BC62D400();
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9E0];
  }
  v36 = v3;
  v4 = sub_1BC62D2F8();
  swift_unknownObjectRetain();
  v29 = v4;
  v5 = sub_1BC62D364();
  if (v5)
  {
    v7 = v5;
    v8 = v6;
    v27[3] = sub_1BC34B6A0(0, &qword_1EF429110);
    v27[2] = MEMORY[0x1E0DEE9B0] + 8;
    while (1)
    {
      *(_QWORD *)&v32 = v7;
      swift_dynamicCast();
      *(_QWORD *)&v32 = v8;
      sub_1BC34B6A0(0, &qword_1EF42CA00);
      swift_dynamicCast();
      v17 = v35;
      v18 = v34;
      sub_1BC62CDC4();

      sub_1BC347F0C(&qword_1EF437EB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
      sub_1BC62CFEC();
      if (v33)
        break;
      v19 = 0;
LABEL_15:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v2, v0);

      v3 = v36;
      v22 = *(_QWORD *)(v36 + 16);
      if (*(_QWORD *)(v36 + 24) <= v22)
      {
        sub_1BC3C4B8C(v22 + 1, 1);
        v3 = v36;
      }
      result = sub_1BC62CEA8();
      v10 = v3 + 64;
      v11 = -1 << *(_BYTE *)(v3 + 32);
      v12 = result & ~v11;
      v13 = v12 >> 6;
      if (((-1 << v12) & ~*(_QWORD *)(v3 + 64 + 8 * (v12 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v11) >> 6;
        while (++v13 != v24 || (v23 & 1) == 0)
        {
          v25 = v13 == v24;
          if (v13 == v24)
            v13 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v13);
          if (v26 != -1)
          {
            v14 = __clz(__rbit64(~v26)) + (v13 << 6);
            goto LABEL_8;
          }
        }
        goto LABEL_27;
      }
      v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v3 + 64 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
LABEL_8:
      *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = 8 * v14;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + v15) = v17;
      *(_QWORD *)(*(_QWORD *)(v3 + 56) + v15) = v19;
      ++*(_QWORD *)(v3 + 16);
      v7 = sub_1BC62D364();
      v8 = v16;
      if (!v7)
        goto LABEL_25;
    }
    v19 = 0;
    while (1)
    {
      sub_1BC35E088(&v32, &v30);
      __swift_project_boxed_opaque_existential_1Tm(&v30, v31);
      v20 = objc_msgSend(v18, sel_countForObject_, sub_1BC62D568());
      result = swift_unknownObjectRelease();
      v21 = __OFADD__(v19, v20);
      v19 += (uint64_t)v20;
      if (v21)
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v30);
      sub_1BC62CFEC();
      if (!v33)
        goto LABEL_15;
    }
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_release();
    return v3;
  }
  return result;
}

_QWORD *sub_1BC5A8480(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *result;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  id v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;

  v2 = sub_1BC62A568();
  v31 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5A90B0(0, (unint64_t *)&qword_1EF42C9E8, &qword_1EF429110, 0x1E0CB6CD0, &qword_1EF42C9F0);
  result = (_QWORD *)sub_1BC62D3DC();
  v6 = 0;
  v32 = a1;
  v9 = *(_QWORD *)(a1 + 64);
  v8 = a1 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v27 = v8;
  v28 = (unint64_t)(v10 + 63) >> 6;
  v29 = result + 8;
  v30 = result;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v33 = (v12 - 1) & v12;
  v34 = v6;
  for (i = __clz(__rbit64(v12)) | (v6 << 6); ; i = __clz(__rbit64(v15)) + (v16 << 6))
  {
    v40 = i;
    v18 = 8 * i;
    v19 = *(void **)(*(_QWORD *)(v32 + 56) + 8 * i);
    v35 = *(id *)(*(_QWORD *)(v32 + 48) + 8 * i);
    v20 = v19;
    sub_1BC62CDC4();
    sub_1BC347F0C(&qword_1EF437EB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    sub_1BC62CFEC();
    if (v39)
    {
      v21 = 0;
      while (1)
      {
        sub_1BC35E088(&v38, &v36);
        __swift_project_boxed_opaque_existential_1Tm(&v36, v37);
        v22 = objc_msgSend(v20, sel_countForObject_, sub_1BC62D568());
        result = (_QWORD *)swift_unknownObjectRelease();
        v23 = __OFADD__(v21, v22);
        v21 += (uint64_t)v22;
        if (v23)
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v36);
        sub_1BC62CFEC();
        if (!v39)
          goto LABEL_25;
      }
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v21 = 0;
LABEL_25:
    (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v2);

    result = v30;
    *(_QWORD *)((char *)v29 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
    *(_QWORD *)(result[6] + v18) = v35;
    *(_QWORD *)(result[7] + v18) = v21;
    v24 = result[2];
    v23 = __OFADD__(v24, 1);
    v25 = v24 + 1;
    if (v23)
      goto LABEL_30;
    result[2] = v25;
    v12 = v33;
    v6 = v34;
    if (v33)
      goto LABEL_4;
LABEL_5:
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_31;
    if (v14 >= v28)
      return result;
    v15 = *(_QWORD *)(v27 + 8 * v14);
    v16 = v6 + 1;
    if (!v15)
    {
      v16 = v6 + 2;
      if (v6 + 2 >= v28)
        return result;
      v15 = *(_QWORD *)(v27 + 8 * v16);
      if (!v15)
      {
        v16 = v6 + 3;
        if (v6 + 3 >= v28)
          return result;
        v15 = *(_QWORD *)(v27 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v33 = (v15 - 1) & v15;
    v34 = v16;
  }
  v17 = v6 + 4;
  if (v6 + 4 >= v28)
    return result;
  v15 = *(_QWORD *)(v27 + 8 * v17);
  if (v15)
  {
    v16 = v6 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v28)
      return result;
    v15 = *(_QWORD *)(v27 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_18;
  }
LABEL_32:
  __break(1u);
  return result;
}

void sub_1BC5A87C4(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  void *v7;
  _QWORD *v8;
  id v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;

  v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v7 = (void *)a1[4];
  v41 = a1[5];
  swift_bridgeObjectRetain();
  v42 = v7;
  v8 = (_QWORD *)*a3;
  v9 = v7;
  v11 = sub_1BC55933C((uint64_t)v9);
  v12 = v8[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v8[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1BC5A7968((unint64_t *)&qword_1EF42C9E8, &qword_1EF429110, 0x1E0CB6CD0, &qword_1EF42C9F0);
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v21 = 8 * v11;
    *(_QWORD *)(v20[6] + v21) = v9;
    *(_QWORD *)(v20[7] + v21) = v41;
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    v25 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v26 = a1 + 7;
    while (1)
    {
      v27 = *v26;
      v42 = (void *)*(v26 - 1);
      v28 = (_QWORD *)*a3;
      v29 = v42;
      v30 = sub_1BC55933C((uint64_t)v29);
      v32 = v28[2];
      v33 = (v31 & 1) == 0;
      v23 = __OFADD__(v32, v33);
      v34 = v32 + v33;
      if (v23)
        break;
      v35 = v31;
      if (v28[3] < v34)
      {
        sub_1BC3C4B8C(v34, 1);
        v30 = sub_1BC55933C((uint64_t)v29);
        if ((v35 & 1) != (v36 & 1))
          goto LABEL_25;
      }
      if ((v35 & 1) != 0)
        goto LABEL_10;
      v37 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      v38 = 8 * v30;
      *(_QWORD *)(v37[6] + v38) = v29;
      *(_QWORD *)(v37[7] + v38) = v27;
      v39 = v37[2];
      v23 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v23)
        goto LABEL_24;
      v26 += 2;
      v37[2] = v40;
      if (!--v25)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1BC3C4B8C(v14, a2 & 1);
  v16 = sub_1BC55933C((uint64_t)v9);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = (void *)swift_allocError();
    swift_willThrow();
    v19 = v18;
    sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1BC34B6A0(0, &qword_1EF429110);
  sub_1BC62D5EC();
  __break(1u);
LABEL_26:
  sub_1BC62D1D8();
  sub_1BC62C764();
  sub_1BC34B6A0(0, &qword_1EF429110);
  sub_1BC62D2D4();
  sub_1BC62C764();
  sub_1BC62D394();
  __break(1u);
}

void sub_1BC5A8B6C(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  void *v20;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v19 = 0;
    v3 = 0;
    v4 = 0;
    v5 = sub_1BC62D2F8() | 0x8000000000000000;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v3 = ~v6;
    v19 = a1 + 64;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v4 = v8 & *(_QWORD *)(a1 + 64);
    v5 = a1;
  }
  swift_bridgeObjectRetain();
  v9 = 0;
  v17 = v3;
  v18 = (unint64_t)(v3 + 64) >> 6;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_10;
LABEL_8:
  if (v4)
  {
    v10 = (v4 - 1) & v4;
    v11 = __clz(__rbit64(v4)) | (v9 << 6);
    v12 = v9;
    goto LABEL_29;
  }
  v14 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v14 < v18)
    {
      v15 = *(_QWORD *)(v19 + 8 * v14);
      v12 = v9 + 1;
      if (v15)
        goto LABEL_28;
      v12 = v9 + 2;
      if (v9 + 2 >= v18)
        goto LABEL_33;
      v15 = *(_QWORD *)(v19 + 8 * v12);
      if (v15)
        goto LABEL_28;
      v12 = v9 + 3;
      if (v9 + 3 >= v18)
        goto LABEL_33;
      v15 = *(_QWORD *)(v19 + 8 * v12);
      if (v15)
        goto LABEL_28;
      v12 = v9 + 4;
      if (v9 + 4 >= v18)
        goto LABEL_33;
      v15 = *(_QWORD *)(v19 + 8 * v12);
      if (v15)
      {
LABEL_28:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
        v13 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v11);
        if (v13)
        {
          do
          {
            if (objc_msgSend(v13, sel__isCompatibleWithUnit_, a2, v17))
              break;

            v9 = v12;
            v4 = v10;
            if ((v5 & 0x8000000000000000) == 0)
              goto LABEL_8;
LABEL_10:
            if (!sub_1BC62D370())
              break;
            sub_1BC34B6A0(0, &qword_1EF429110);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v13 = v20;
            swift_unknownObjectRelease();
            v12 = v9;
            v10 = v4;
          }
          while (v20);
        }
        goto LABEL_33;
      }
      v12 = v9 + 5;
      if (v9 + 5 < v18)
      {
        v15 = *(_QWORD *)(v19 + 8 * v12);
        if (!v15)
        {
          v16 = v9 + 6;
          while (v18 != v16)
          {
            v15 = *(_QWORD *)(v19 + 8 * v16++);
            if (v15)
            {
              v12 = v16 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    sub_1BC3583F4();
    return;
  }
  __break(1u);
}

_QWORD *sub_1BC5A8E0C(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _BYTE v18[32];
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v17 = a2;
  v3 = sub_1BC62A568();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58];
  v16 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1;
  sub_1BC62CDC4();

  sub_1BC347F0C(&qword_1EF437EB0, v4, MEMORY[0x1E0CAFB80]);
  sub_1BC62CFEC();
  if (v22)
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1BC35E088(&v21, &v19);
      sub_1BC375540((uint64_t)&v19, (uint64_t)v18);
      sub_1BC34B6A0(0, &qword_1EF429110);
      if (swift_dynamicCast())
      {
        v9 = v23;
        __swift_project_boxed_opaque_existential_1Tm(&v19, v20);
        v10 = objc_msgSend(v17, sel_countForObject_, sub_1BC62D568());
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = sub_1BC3B5E64(0, v8[2] + 1, 1, v8);
        v12 = v8[2];
        v11 = v8[3];
        if (v12 >= v11 >> 1)
          v8 = sub_1BC3B5E64((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
        v8[2] = v12 + 1;
        v13 = &v8[2 * v12];
        v13[4] = v9;
        v13[5] = v10;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
      }
      sub_1BC62CFEC();
    }
    while (v22);
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v3);
  return v8;
}

uint64_t type metadata accessor for MedicalRecordUnitCollector()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedicalRecordUnitCollector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordUnitCollector.add(units:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordUnitCollector.preferredUnit()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

void sub_1BC5A90B0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    sub_1BC34B6A0(255, a3);
    sub_1BC35E2D8(a5, a3);
    v8 = sub_1BC62D40C();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BC5A9140()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C9D0)
  {
    sub_1BC35817C(255, (unint64_t *)&qword_1EF42C600);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C9D0);
  }
}

void sub_1BC5A91A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42CA18)
  {
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42CA18);
  }
}

id static UIImage.circleCheckmarkImage.getter()
{
  return sub_1BC5A9228();
}

id static UIImage.circleImage.getter()
{
  return sub_1BC5A9228();
}

id sub_1BC5A9228()
{
  id v0;
  id v1;
  void *v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v1 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v0, 3);

  v2 = (void *)sub_1BC62C650();
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v2, v1);

  return v3;
}

uint64_t static UIImage.notPinnedImage.getter()
{
  sub_1BC462CD0();
  return sub_1BC62CE60();
}

uint64_t static UIImage.pinnedImage.getter()
{
  sub_1BC462CD0();
  return sub_1BC62CE60();
}

void static UIImage.checkmarkSymbol()()
{
  sub_1BC5A9760();
}

UIImage __swiftcall UIImage.scaled(to:)(CGSize to)
{
  void *v1;

  return (UIImage)objc_msgSend(v1, sel_scaledToTargetSize_padding_, to.width, to.height, 0.0, 0.0);
}

id sub_1BC5A93D4(void *a1, double a2, double a3)
{
  return objc_msgSend(a1, sel_scaledToTargetSize_padding_, a2, a3, 0.0, 0.0);
}

UIImage __swiftcall UIImage.scaled(to:padding:)(CGSize to, CGPoint padding)
{
  void *v2;
  double y;
  double x;
  double height;
  double width;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  UIImage result;
  _QWORD v22[6];

  y = padding.y;
  x = padding.x;
  height = to.height;
  width = to.width;
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v7, sel_scale);
  v9 = v8;

  v10 = v9 * width;
  v11 = v9 * height;
  v12 = v9 * x;
  v13 = v9 * y;
  v14 = objc_msgSend(v2, sel_imageRendererFormat);
  objc_msgSend(v14, sel_setOpaque_, 0);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithBounds_format_, v14, 0.0, 0.0, v12 + v12 + v10, v13 + v13 + v11);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v2;
  *(double *)(v16 + 24) = v12;
  *(double *)(v16 + 32) = v13;
  *(double *)(v16 + 40) = v10;
  *(double *)(v16 + 48) = v11;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1BC5A964C;
  *(_QWORD *)(v17 + 24) = v16;
  v22[4] = sub_1BC4E6694;
  v22[5] = v17;
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 1107296256;
  v22[2] = sub_1BC5A9674;
  v22[3] = &block_descriptor_65;
  v18 = _Block_copy(v22);
  v19 = v2;
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v15, sel_imageWithActions_, v18);

  _Block_release(v18);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result.super.isa = (Class)swift_release();
  if ((v14 & 1) == 0)
    return (UIImage)v20;
  __break(1u);
  return result;
}

uint64_t sub_1BC5A9628()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC5A964C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_drawInRect_, *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_1BC5A9664()
{
  return swift_deallocObject();
}

void sub_1BC5A9674(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t block_copy_helper_62(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_62()
{
  return swift_release();
}

Class sub_1BC5A96C0(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;
  Class isa;

  v9 = a1;
  isa = UIImage.scaled(to:padding:)((CGSize)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2), (CGPoint)__PAIR128__(*(unint64_t *)&a5, *(unint64_t *)&a4)).super.isa;

  return isa;
}

void sub_1BC5A9720()
{
  sub_1BC5A9824();
}

void static UIImage.xmarkSymbol()()
{
  sub_1BC5A9760();
}

void sub_1BC5A9760()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_configurationWithScale_, 1);
  v1 = (void *)sub_1BC62C650();
  v2 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v1, v0);

  if (!v2)
    __break(1u);
}

void sub_1BC5A9800()
{
  sub_1BC5A9824();
}

void sub_1BC5A9824()
{
  id v0;
  void *v1;
  id v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_configurationWithScale_, 1);
  v1 = (void *)sub_1BC62C650();
  v2 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v1, v0);

  if (v2)
    v3 = v2;
  else
    __break(1u);
}

id sub_1BC5A9A64()
{
  return sub_1BC3D6614(0, type metadata accessor for UploadNewDataCell.PassthroughButton);
}

uint64_t sub_1BC5A9A74(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;

  v3 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC37ADB0(v3, (uint64_t)v7);
  if (v8)
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    type metadata accessor for UploadNewDataItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = sub_1BC5A9CE4();
      objc_msgSend(v4, sel_setEnabled_, (*(_BYTE *)(v6 + 32) & 1) == 0);

      objc_msgSend(v1, sel_setUserInteractionEnabled_, (*(_BYTE *)(v6 + 32) & 1) == 0);
      swift_release();
    }
  }
  else
  {
    sub_1BC348D78((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC3A0AB8);
  }
  return sub_1BC348D78(a1, (uint64_t (*)(_QWORD))sub_1BC3A0AB8);
}

void (*sub_1BC5A9B98(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell_item;
  v3[6] = v1;
  v3[7] = v4;
  swift_beginAccess();
  return sub_1BC5A9BF0;
}

void sub_1BC5A9BF0(_QWORD **a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1BC37ADB0(v3[6] + v3[7], (uint64_t)v3);
    if (v3[3])
    {
      sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
      type metadata accessor for UploadNewDataItem();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v5 = v3[5];
        v4 = (void *)v3[6];
        v6 = sub_1BC5A9CE4();
        objc_msgSend(v6, sel_setEnabled_, (*(_BYTE *)(v5 + 32) & 1) == 0);

        objc_msgSend(v4, sel_setUserInteractionEnabled_, (*(_BYTE *)(v5 + 32) & 1) == 0);
        swift_release();
      }
    }
    else
    {
      sub_1BC348D78((uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BC3A0AB8);
    }
  }
  free(v3);
}

id sub_1BC5A9CE4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell____lazy_storage___button;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell____lazy_storage___button);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell____lazy_storage___button);
  }
  else
  {
    v4 = (void *)sub_1BC5AAD8C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC5A9E70()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  double v34;
  id v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;

  v1 = v0;
  v2 = sub_1BC62BD98();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1BCCF201C](v4);
  if (qword_1ED6A3308 != -1)
    swift_once();
  v7 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62BD74();
  v8 = (void *)sub_1BC62BC84();
  objc_opt_self();
  v9 = (void *)swift_dynamicCastObjCClass();
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_textLayoutGuide);
    if (v11)
    {
      v12 = v11;
      v42 = v2;
      v13 = objc_msgSend(v1, sel_contentView);
      objc_msgSend(v13, sel_addSubview_, v10);

      v41 = v3;
      objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      v14 = objc_msgSend(v1, sel_contentView);
      objc_msgSend(v10, sel_hk_alignConstraintsWithView_, v14);

      objc_msgSend(v10, sel_setHidden_, 1);
      v15 = objc_msgSend(v1, sel_contentView);
      v16 = sub_1BC5A9CE4();
      objc_msgSend(v15, sel_addSubview_, v16);

      v17 = sub_1BC5A9CE4();
      objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      v18 = sub_1BC5A9CE4();
      v19 = objc_msgSend(v18, sel_leadingAnchor);

      v20 = objc_msgSend(v12, sel_leadingAnchor);
      v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

      objc_msgSend(v21, sel_setActive_, 1);
      v22 = sub_1BC5A9CE4();
      v23 = objc_msgSend(v22, sel_topAnchor);

      v24 = objc_msgSend(v12, sel_topAnchor);
      v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

      objc_msgSend(v25, sel_setActive_, 1);
      v26 = sub_1BC5A9CE4();
      v27 = objc_msgSend(v26, sel_bottomAnchor);

      v28 = objc_msgSend(v12, sel_bottomAnchor);
      v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

      objc_msgSend(v29, sel_setActive_, 1);
      v30 = sub_1BC5A9CE4();
      v31 = objc_msgSend(v30, sel_trailingAnchor);

      v32 = objc_msgSend(v12, sel_trailingAnchor);
      v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

      type metadata accessor for UILayoutPriority(0);
      v43 = 1065353216;
      v44 = 1148846080;
      sub_1BC379B20((unint64_t *)&qword_1EF42AF98, 255, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, MEMORY[0x1E0DC2B88]);
      sub_1BC62BB4C();
      LODWORD(v34) = v45;
      objc_msgSend(v33, sel_setPriority_, v34);
      objc_msgSend(v33, sel_setActive_, 1);
      v35 = sub_1BC5A9CE4();
      LODWORD(v36) = 1148846080;
      objc_msgSend(v35, sel_setContentCompressionResistancePriority_forAxis_, 0, v36);

      sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1BC6395A0;
      *(_QWORD *)(v37 + 32) = sub_1BC62C680();
      *(_QWORD *)(v37 + 40) = v38;
      strcpy((char *)(v37 + 48), "UploadNewData");
      *(_WORD *)(v37 + 62) = -4864;
      v39 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v40 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v1, sel_setAccessibilityIdentifier_, v40);
      objc_msgSend(v1, sel_setAccessibilityTraits_, *MEMORY[0x1E0DC4660]);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v42);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);

    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

id sub_1BC5AA458(uint64_t a1)
{
  return sub_1BC3D6614(a1, type metadata accessor for UploadNewDataCell);
}

uint64_t type metadata accessor for UploadNewDataCell()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UploadNewDataCell.PassthroughButton()
{
  return objc_opt_self();
}

uint64_t sub_1BC5AA4E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

void (*sub_1BC5AA538(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC5A9B98(v2);
  return sub_1BC383B18;
}

uint64_t sub_1BC5AA57C()
{
  return sub_1BC5AABCC();
}

uint64_t sub_1BC5AA59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = v0;
  sub_1BC5AAC88();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62C95C();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1BC348D78((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BC5AAC88);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_1BC62C950();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_1BC62C908();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_1EF437FE0;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1BC5AA76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch();
}

uint64_t sub_1BC5AA784()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[6] = *(_QWORD *)(v0[5] + 40);
  v1 = (_QWORD *)swift_task_alloc();
  v0[7] = v1;
  *v1 = v0;
  v1[1] = sub_1BC5AA7D4;
  return sub_1BC3F851C();
}

uint64_t sub_1BC5AA7D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 72) = v4;
  *v4 = v2;
  v4[1] = sub_1BC5AA864;
  return sub_1BC3F89B8(5);
}

uint64_t sub_1BC5AA864()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC5AA8D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 64);
  sub_1BC379A60(0, &qword_1EF431470);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC639590;
  sub_1BC62D1D8();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_1BC62C764();
  *(_QWORD *)(v0 + 32) = v1;
  sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
  sub_1BC62D2D4();
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  sub_1BC62D64C();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5AAA04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 80);
  sub_1BC379A60(0, &qword_1EF431470);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC639590;
  sub_1BC62D1D8();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_1BC62C764();
  *(_QWORD *)(v0 + 32) = v1;
  sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
  sub_1BC62D2D4();
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  sub_1BC62D64C();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5AAB38()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UploadNewDataItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC5AAB84()
{
  uint64_t v0;

  type metadata accessor for UploadNewDataCell();
  sub_1BC379B20(&qword_1EF435F90, v0, (uint64_t (*)(uint64_t))type metadata accessor for UploadNewDataCell, (uint64_t)&unk_1BC649C7C);
  return sub_1BC62ADA8();
}

uint64_t sub_1BC5AABCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v4[24];
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v1, (uint64_t)v4);
  if (!v5)
    return sub_1BC348D78((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BC3A0AB8);
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UploadNewDataItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    if ((*(_BYTE *)(v3 + 32) & 1) == 0)
      sub_1BC5AA59C();
    return swift_release();
  }
  return result;
}

void sub_1BC5AAC88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4DE0)
  {
    sub_1BC62C95C();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4DE0);
  }
}

uint64_t sub_1BC5AACDC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5AAD08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BC377F18;
  v3[5] = v2;
  return swift_task_switch();
}

uint64_t sub_1BC5AAD68()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5AAD8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_1BC62CF98();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  sub_1BC62CF68();
  if (qword_1ED6A3308 != -1)
    swift_once();
  v7 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62CF74();
  sub_1BC62CF20();
  type metadata accessor for UploadNewDataCell.PassthroughButton();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  v8 = sub_1BC62CFA4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v8;
}

uint64_t sub_1BC5AAF20()
{
  id v0;
  id v1;
  uint64_t v2;

  v0 = sub_1BC58E83C();
  v1 = objc_msgSend(v0, sel_unitString);

  v2 = sub_1BC62C680();
  return v2;
}

uint64_t sub_1BC5AAF80()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v0 = sub_1BC58E83C();
  v1 = objc_msgSend(v0, sel_unitString);

  sub_1BC62C680();
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedConverter);
  v3 = (void *)sub_1BC62C650();
  v4 = objc_msgSend(v2, sel_synonymForUCUMUnitString_, v3);

  v5 = sub_1BC62C680();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1BC5AB058(void *a1, void *a2)
{
  uint64_t inited;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  int64_t v22;
  uint64_t result;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  sub_1BC3CCCF0();
  inited = swift_initStackObject();
  v5 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  if (a1)
  {
    v6 = a1;
    v7 = HKValueRange<>.valueDisplayString(style:)(0);
    v9 = v8;

    v5[4] = v7;
    v5[5] = v9;
    if (a2)
    {
LABEL_3:
      v10 = a2;
      v11 = HKValueRange<>.valueDisplayString(style:)(0);
      v13 = v12;

      goto LABEL_6;
    }
  }
  else
  {
    v7 = 0;
    v9 = 0;
    *(_QWORD *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = 0;
    if (a2)
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v5[6] = v11;
  v5[7] = v13;
  v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v9)
  {
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v13)
      goto LABEL_17;
    goto LABEL_12;
  }
  v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BC3BDEF0(0, 1, 1);
  v15 = v33;
  v17 = v33[2];
  v16 = v33[3];
  if (v17 >= v16 >> 1)
  {
    sub_1BC3BDEF0(v16 > 1, v17 + 1, 1);
    v15 = v33;
  }
  v15[2] = v17 + 1;
  v18 = &v15[2 * v17];
  v18[4] = v7;
  v18[5] = v9;
  if (v13)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_1BC3BDEF0(0, v15[2] + 1, 1);
    v20 = v15[2];
    v19 = v15[3];
    if (v20 >= v19 >> 1)
      sub_1BC3BDEF0(v19 > 1, v20 + 1, 1);
    v15[2] = v20 + 1;
    v21 = &v15[2 * v20];
    v21[4] = v11;
    v21[5] = v13;
  }
LABEL_17:
  swift_release();
  v22 = v15[2];
  if (v22)
  {
    result = sub_1BC3BD748(0, v22, 0);
    v24 = v14;
    v25 = v15 + 5;
    do
    {
      v26 = *v25;
      if (!*v25)
      {
        __break(1u);
        return result;
      }
      v27 = *(v25 - 1);
      v29 = v24[2];
      v28 = v24[3];
      result = swift_bridgeObjectRetain();
      if (v29 >= v28 >> 1)
        result = sub_1BC3BD748(v28 > 1, v29 + 1, 1);
      v25 += 2;
      v24[2] = v29 + 1;
      v30 = &v24[2 * v29];
      v30[4] = v27;
      v30[5] = v26;
      --v22;
    }
    while (v22);
    swift_release();
    v31 = v24[2];
    if (!v31)
      goto LABEL_27;
    goto LABEL_24;
  }
  swift_release();
  v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v31 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (v31)
  {
LABEL_24:
    if (v31 == 2)
    {
      sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
      sub_1BC3B4EE4();
      v32 = sub_1BC62C5D8();
    }
    else
    {
      v32 = v24[4];
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    return v32;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t BloodPressureFormatter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BloodPressureFormatter.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BloodPressureFormatter()
{
  return objc_opt_self();
}

uint64_t method lookup function for BloodPressureFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BloodPressureFormatter.rawUnitString.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of BloodPressureFormatter.niceUnitString.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of BloodPressureFormatter.valueString(for:diastolicRange:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

id CoverageClassificationFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1BC5AB444(unint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;

  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BC424F10(a1, (uint64_t)v3);

  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BC5AB4AC(unint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;

  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BC5ABA7C(a1, (uint64_t)v3);

  swift_bridgeObjectRelease();
  return v4;
}

id CoverageClassificationFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store);
}

uint64_t CoverageClassificationFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context);
}

id CoverageClassificationFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for CoverageClassificationFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1BC5AB578(void *a1)
{
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context) < 2uLL)
    return sub_1BC5AB9D8(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC5AB5C8(int a1, id a2)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = objc_msgSend(a2, sel_type);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_localizedPreferredName);

  if (!v4)
    return 0;
  v5 = sub_1BC62C680();
  v7 = v6;

  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

id CoverageClassificationFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CoverageClassificationFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CoverageClassificationFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoverageClassificationFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC5AB720()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store);
}

uint64_t sub_1BC5AB734()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context);
}

id sub_1BC5AB748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for CoverageClassificationFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1BC5AB7B8(void *a1)
{
  _QWORD *v1;
  uint64_t result;

  if (*(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context) < 2uLL)
    return sub_1BC5AB9D8(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC5AB818(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[4];

  v3 = objc_msgSend(a1, sel_value);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BC62C680();
    v7 = v6;

    v8 = sub_1BC3B5060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_1BC3B5060((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = &v8[2 * v10];
    v11[4] = v5;
    v11[5] = v7;
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = objc_msgSend(a1, sel_name);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1BC62C680();
    v16 = v15;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1BC3B5060(0, v8[2] + 1, 1, v8);
    v18 = v8[2];
    v17 = v8[3];
    if (v18 >= v17 >> 1)
      v8 = sub_1BC3B5060((_QWORD *)(v17 > 1), v18 + 1, 1, v8);
    v8[2] = v18 + 1;
    v19 = &v8[2 * v18];
    v19[4] = v14;
    v19[5] = v16;
  }
  v20 = sub_1BC39CBE4();
  MEMORY[0x1E0C80A78](v20);
  v25[2] = v1;
  v25[3] = a1;
  v21 = Array<A>.newlineJoined.getter((uint64_t)v8);
  v23 = v22;
  swift_bridgeObjectRelease();
  return sub_1BC4AB44C(v21, v23, v20, sub_1BC5ABD5C, v25);
}

uint64_t sub_1BC5AB9D8(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v6;

  v1 = (void *)sub_1BC5AB818(a1);
  v2 = v1;
  v3 = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v4 = v1;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    v3 = v6;
  }

  return v3;
}

uint64_t sub_1BC5ABA7C(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t i;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v16;

  v3 = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_17:
  swift_bridgeObjectRetain();
  v4 = sub_1BC62D3B8();
  if (!v4)
    goto LABEL_18;
LABEL_3:
  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context);
  for (i = 4; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x1BCCF24CC](i - 4, a1);
    else
      v8 = *(id *)(a1 + 8 * i);
    v9 = v8;
    v10 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    if (v5 > 1)
      break;
    v11 = (void *)sub_1BC5AB818(v8);
    v12 = v11;
    if (v11)
    {
      v13 = v11;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
      v7 = v3;
      v3 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v7 = v3;
    }

    sub_1BC3BB208(v7);
    if (v10 == v4)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CoverageClassificationFormatter()
{
  return objc_opt_self();
}

unint64_t sub_1BC5ABC8C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC5ABCB0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC5ABCB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF438110;
  if (!qword_1EF438110)
  {
    v1 = type metadata accessor for CoverageClassificationFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF438110);
  }
  return result;
}

uint64_t method lookup function for CoverageClassificationFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoverageClassificationFormatter.structuredItems(from:country:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of CoverageClassificationFormatter.displayItems(from:country:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CoverageClassificationFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BC5ABD5C()
{
  uint64_t v0;

  return sub_1BC5AB5C8(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24));
}

void __swiftcall RecordTitleWithSubtitleItem.init(title:subtitle:uniqueIdentifier:isFirstSection:)(HealthRecordsUI::RecordTitleWithSubtitleItem *__return_ptr retstr, Swift::String title, Swift::String subtitle, Swift::String uniqueIdentifier, Swift::Bool isFirstSection)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v13;

  object = uniqueIdentifier._object;
  countAndFlagsBits = uniqueIdentifier._countAndFlagsBits;
  v8 = subtitle._object;
  v9 = subtitle._countAndFlagsBits;
  v10 = title._object;
  v11 = title._countAndFlagsBits;
  swift_beginAccess();
  v13 = (void *)qword_1EF436CD8;
  retstr->reuseIdentifier._countAndFlagsBits = qword_1EF436CD0;
  retstr->reuseIdentifier._object = v13;
  retstr->title._countAndFlagsBits = v11;
  retstr->title._object = v10;
  retstr->subtitle._countAndFlagsBits = v9;
  retstr->subtitle._object = v8;
  retstr->uniqueIdentifier._countAndFlagsBits = countAndFlagsBits;
  retstr->uniqueIdentifier._object = object;
  retstr->isFirstSection = isFirstSection;
  swift_bridgeObjectRetain();
}

uint64_t RecordTitleWithSubtitleItem.reuseIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecordTitleWithSubtitleItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RecordTitleWithSubtitleItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t RecordTitleWithSubtitleItem.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecordTitleWithSubtitleItem.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecordTitleWithSubtitleItem.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecordTitleWithSubtitleItem.isFirstSection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t RecordTitleWithSubtitleItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D688();
}

uint64_t RecordTitleWithSubtitleItem.hashValue.getter()
{
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D688();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5AC074()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC5AC0A4()
{
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D688();
}

uint64_t sub_1BC5AC154()
{
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D688();
  return sub_1BC62D6AC();
}

uint64_t _s15HealthRecordsUI27RecordTitleWithSubtitleItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(unsigned __int8 *)(a1 + 64);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(unsigned __int8 *)(a2 + 64);
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
    || (v12 = sub_1BC62D574(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (v14 = sub_1BC62D574(), result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v10)
        return v6 ^ v11 ^ 1u;
      v15 = sub_1BC62D574();
      result = 0;
      if ((v15 & 1) != 0)
        return v6 ^ v11 ^ 1u;
    }
  }
  return result;
}

unint64_t sub_1BC5AC318()
{
  unint64_t result;

  result = qword_1EF438140;
  if (!qword_1EF438140)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for RecordTitleWithSubtitleItem, &type metadata for RecordTitleWithSubtitleItem);
    atomic_store(result, (unint64_t *)&qword_1EF438140);
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordTitleWithSubtitleItem()
{
  return &type metadata for RecordTitleWithSubtitleItem;
}

id sub_1BC5AC4F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaddedView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PaddedView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AccountSourceDataSource()
{
  uint64_t result;

  result = qword_1EF438180;
  if (!qword_1EF438180)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC5AC58C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC5AC5C8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  _QWORD v17[2];

  v16 = sub_1BC62A7B4();
  v4 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccountSourceItem();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1BC38DB44(0, (unint64_t *)&unk_1EF42DDB0, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
  sub_1BC62B288();
  v9 = swift_allocObject();
  v15 = xmmword_1BC639590;
  *(_OWORD *)(v9 + 16) = xmmword_1BC639590;
  sub_1BC38DB44(0, &qword_1EF42C5F0, (void (*)(uint64_t))sub_1BC37AE0C);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v15;
  *(_QWORD *)(v10 + 56) = v7;
  *(_QWORD *)(v10 + 64) = sub_1BC347F0C(&qword_1EF4381D8, (uint64_t (*)(uint64_t))type metadata accessor for AccountSourceItem, (uint64_t)&unk_1BC64AEB0);
  *(_QWORD *)(v10 + 32) = v8;
  v11 = a1;
  v12 = a2;
  swift_retain();
  sub_1BC62B258();
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "MutableArray<");
  HIWORD(v17[1]) = -4864;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v13 = sub_1BC62B2B8();
  swift_release();

  return v13;
}

uint64_t sub_1BC5AC800(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_1BC62C4D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for AccountSourceItem();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  sub_1BC35A280();
  v10 = a1;
  v11 = a2;
  *v7 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  LOBYTE(a2) = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((a2 & 1) != 0)
  {
    sub_1BC38DB44(0, &qword_1EF42C5F0, (void (*)(uint64_t))sub_1BC37AE0C);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v13 + 56) = v8;
    *(_QWORD *)(v13 + 64) = sub_1BC347F0C(&qword_1EF4381D8, (uint64_t (*)(uint64_t))type metadata accessor for AccountSourceItem, (uint64_t)&unk_1BC64AEB0);
    *(_QWORD *)(v13 + 32) = v9;
    swift_retain();
    sub_1BC62B2E8();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC5AC988()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC5AC9B4()
{
  sub_1BC62B300();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5AC9D0()
{
  return type metadata accessor for AccountSourceDataSource();
}

uint64_t sub_1BC5AC9D8()
{
  MEMORY[0x1BCCF35C4](&unk_1BC649EC0);
  return sub_1BC62B834();
}

uint64_t sub_1BC5ACA24()
{
  return sub_1BC347F0C(&qword_1EF4381D0, (uint64_t (*)(uint64_t))type metadata accessor for AccountSourceDataSource, (uint64_t)&unk_1BC649E90);
}

uint64_t sub_1BC5ACA50(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  void **v17;
  char v18;
  void (*v19)(void **, uint64_t);
  id v20;
  uint64_t v21;
  void (*v22)(void **, uint64_t, uint64_t);
  void *v23;
  id v24;
  void *v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  _BYTE *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  _BYTE *v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  _BYTE v68[4];
  int v69;
  os_log_t v70;
  _BYTE *v71;
  uint64_t ObjectType;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;

  ObjectType = swift_getObjectType();
  v3 = sub_1BC62BB34();
  v73 = *(_QWORD *)(v3 - 8);
  v74 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v68[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v71 = &v68[-v7];
  v8 = sub_1BC62B8C4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (void **)&v68[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (void **)&v68[-v14];
  MEMORY[0x1E0C80A78](v13);
  v17 = (void **)&v68[-v16];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(&v68[-v16], *MEMORY[0x1E0D2BEE8], v8);
  v18 = MEMORY[0x1BCCF0B88](a1, v17);
  v19 = *(void (**)(void **, uint64_t))(v9 + 8);
  v19(v17, v8);
  if ((v18 & 1) == 0)
  {
    v22 = *(void (**)(void **, uint64_t, uint64_t))(v9 + 16);
    v22(v15, a1, v8);
    if ((*(unsigned int (**)(void **, uint64_t))(v9 + 88))(v15, v8) == *MEMORY[0x1E0D2BEB8])
    {
      (*(void (**)(void **, uint64_t))(v9 + 96))(v15, v8);
      v23 = *v15;
      if (sub_1BC5AE50C(a1) == 3)
      {
        v24 = objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, 8);
        v25 = v24;
        if (v24)
        {
          v26 = objc_msgSend(v24, sel_displayName);
          v21 = sub_1BC62C680();

        }
        else
        {
          v21 = 0;
        }
        if (!objc_msgSend(v25, sel_largeListIcon))
          objc_msgSend(v25, sel_listIcon);
        objc_msgSend(v25, sel_color);
LABEL_22:

        return v21;
      }
      v38 = objc_msgSend(v1, sel_displayTypeForObjectType_, v23);
      if (v38)
      {
        v25 = v38;
        if (objc_msgSend(v23, sel_isClinicalType))
        {
          v39 = objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, 15);
          v40 = v39;
          if (v39)
          {
            v41 = objc_msgSend(v39, sel_displayName);
            v21 = sub_1BC62C680();

          }
          else
          {
            v21 = 0;
          }
          v64 = (void *)sub_1BC62C650();
          v65 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v64);

          if (v65)
          {
            v66 = objc_msgSend((id)objc_opt_self(), sel_configurationPreferringMulticolor);
            objc_msgSend(v65, sel_imageByApplyingSymbolConfiguration_, v66);

          }
        }
        else
        {
          if ((sub_1BC62CAA0() & 1) == 0)
          {
            v59 = objc_msgSend(v25, sel_displayCategory);
            v60 = objc_msgSend(v59, sel_displayName);

            v21 = sub_1BC62C680();
            v61 = objc_msgSend(v25, sel_displayCategory);
            v62 = objc_msgSend(v61, sel_largeListIcon);

            if (!v62)
              objc_msgSend(v25, sel_listIcon);
            v63 = objc_msgSend(v25, sel_displayCategory);
            objc_msgSend(v63, sel_color);

            goto LABEL_22;
          }
          if (qword_1ED6A3308 != -1)
            swift_once();
          v55 = (id)qword_1ED6A32F0;
          swift_bridgeObjectRetain();
          v21 = sub_1BC62A4A8();
          swift_bridgeObjectRelease();

          v56 = (void *)sub_1BC62C650();
          v57 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v56);

          if (v57)
          {
            v58 = objc_msgSend((id)objc_opt_self(), sel_configurationPreferringMulticolor);
            objc_msgSend(v57, sel_imageByApplyingSymbolConfiguration_, v58);

          }
        }

        return v21;
      }
      v42 = v71;
      sub_1BC62BAF8();
      v43 = v23;
      v44 = sub_1BC62BB28();
      v45 = sub_1BC62CAC4();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = swift_slowAlloc();
        v47 = swift_slowAlloc();
        v76 = (_BYTE *)v47;
        *(_DWORD *)v46 = 136315394;
        v48 = sub_1BC62D718();
        v75 = sub_1BC4991F0(v48, v49, (uint64_t *)&v76);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2080;
        ObjectType = v46 + 14;
        v50 = v43;
        v51 = objc_msgSend(v50, sel_description);
        v52 = sub_1BC62C680();
        v54 = v53;

        v75 = sub_1BC4991F0(v52, v54, (uint64_t *)&v76);
        sub_1BC62CFF8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC30A000, v44, v45, "[%s] Could not get display type from hkType: %s", (uint8_t *)v46, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v47, -1, -1);
        MEMORY[0x1BCCF36A8](v46, -1, -1);

      }
      else
      {

      }
      (*(void (**)(_BYTE *, uint64_t))(v73 + 8))(v42, v74);
    }
    else
    {
      v19(v15, v8);
      sub_1BC62BAF8();
      v22(v12, a1, v8);
      v27 = sub_1BC62BB28();
      v28 = sub_1BC62CADC();
      v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        v30 = swift_slowAlloc();
        v70 = v27;
        v31 = v30;
        v71 = (_BYTE *)swift_slowAlloc();
        v76 = v71;
        *(_DWORD *)v31 = 136315394;
        v69 = v29;
        v32 = sub_1BC62D718();
        v75 = sub_1BC4991F0(v32, v33, (uint64_t *)&v76);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2080;
        v22(v17, (uint64_t)v12, v8);
        v34 = sub_1BC62C6E0();
        v75 = sub_1BC4991F0(v34, v35, (uint64_t *)&v76);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        v19(v12, v8);
        v36 = v70;
        _os_log_impl(&dword_1BC30A000, v70, (os_log_type_t)v69, "[%s] Could not get hktype from identifier: %s", (uint8_t *)v31, 0x16u);
        v37 = v71;
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v37, -1, -1);
        MEMORY[0x1BCCF36A8](v31, -1, -1);

      }
      else
      {
        v19(v12, v8);

      }
      (*(void (**)(_BYTE *, uint64_t))(v73 + 8))(v6, v74);
    }
    return 0;
  }
  if (qword_1ED6A3308 != -1)
    swift_once();
  v20 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v21 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  objc_msgSend((id)objc_opt_self(), sel_hk_medicationsSymbolImage);
  return v21;
}

uint64_t sub_1BC5AD4B8(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BC504A44(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1BC5AFF68(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1BC5AD538(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t, uint64_t);
  char v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  NSObject *v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  unint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  unint64_t v84;
  unint64_t v85;
  char v86;
  void (*v87)(char *, char *, uint64_t);
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  uint64_t v113;
  id v114;
  id v115;
  id v116;
  id v117;
  unint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t);
  char *v123;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v125;
  unint64_t v126;
  id v127;
  id v128;
  id v129;
  uint64_t v130;
  char v131;
  char *v132;
  unint64_t v133;
  char *v134;
  char *v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  id v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  NSObject *v153;
  uint64_t v154;
  uint8_t *v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  unint64_t v163;
  __int128 v164;
  _QWORD *v165;
  char *v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  _QWORD *v175;
  char *v176;
  unint64_t v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  id v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  void (*v193)(char *, uint64_t, uint64_t);
  uint64_t v194;
  char *v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;

  v2 = v1;
  v169 = *v2;
  v173 = sub_1BC62BB34();
  v172 = *(_QWORD *)(v173 - 8);
  v4 = MEMORY[0x1E0C80A78](v173);
  v161 = (char *)&v160 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v168 = (char *)&v160 - v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v160 - v8;
  v10 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v180 = *(_QWORD *)(v10 - 8);
  v181 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v171 = (uint64_t)&v160 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v160 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v190 = (uint64_t)&v160 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v160 - v18);
  v20 = sub_1BC62B8C4();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v167 = (char *)&v160 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v166 = (char *)&v160 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v160 - v27;
  MEMORY[0x1E0C80A78](v26);
  v186 = (char *)&v160 - v29;
  v30 = MEMORY[0x1E0DEE9D8];
  v177 = sub_1BC35BA04(MEMORY[0x1E0DEE9D8]);
  v191 = sub_1BC35BB40(v30);
  v31 = *(_QWORD *)(a1 + 16);
  v182 = v2;
  if (v31)
  {
    v32 = v2[3];
    v33 = (char *)(a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)));
    v189 = *(_QWORD *)(v21 + 72);
    v193 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
    v175 = v19 + 9;
    v176 = v15;
    v165 = v15 + 72;
    v160 = a1;
    swift_bridgeObjectRetain();
    v34 = v33;
    *(_QWORD *)&v35 = 136315394;
    v164 = v35;
    v162 = MEMORY[0x1E0DEE9B8] + 8;
    v174 = (unint64_t)"untUpgradeItemCell";
    v163 = 0x80000001BC654FE0;
    v184 = v9;
    v185 = v21;
    v187 = v28;
    v188 = v19;
    v179 = v20;
    v36 = (uint64_t)v186;
    v192 = v32;
    do
    {
      v195 = v34;
      v38 = v193;
      ((void (*)(uint64_t))v193)(v36);
      v39 = sub_1BC5AE50C(v36);
      if (v39 == 5)
      {
        v40 = sub_1BC5ACA50(v36);
        if (v41)
        {
          v44 = v41;
          v194 = v31;
          if (v41 == 1)
          {
            v45 = v168;
            sub_1BC62BAF8();
            v46 = v167;
            v47 = (void (*)(char *, char *, uint64_t))v193;
            v193(v167, v36, v20);
            v48 = sub_1BC62BB28();
            v49 = v36;
            v50 = sub_1BC62CADC();
            if (os_log_type_enabled(v48, v50))
            {
              v51 = swift_slowAlloc();
              v52 = swift_slowAlloc();
              v196 = v52;
              *(_DWORD *)v51 = v164;
              v53 = sub_1BC62D718();
              v54 = v46;
              *(_QWORD *)(v51 + 4) = sub_1BC4991F0(v53, v55, (uint64_t *)&v196);
              swift_bridgeObjectRelease();
              *(_WORD *)(v51 + 12) = 2080;
              v47(v166, v46, v20);
              v56 = sub_1BC62C6E0();
              *(_QWORD *)(v51 + 14) = sub_1BC4991F0(v56, v57, (uint64_t *)&v196);
              swift_bridgeObjectRelease();
              v58 = v185;
              v59 = *(void (**)(char *, uint64_t))(v185 + 8);
              v60 = v54;
              v28 = v187;
              v59(v60, v20);
              _os_log_impl(&dword_1BC30A000, v48, v50, "[%s] Could not get either category for identifier: %s", (uint8_t *)v51, 0x16u);
              swift_arrayDestroy();
              v61 = v52;
              v9 = v184;
              MEMORY[0x1BCCF36A8](v61, -1, -1);
              MEMORY[0x1BCCF36A8](v51, -1, -1);

              v62 = v45;
              v21 = v58;
              (*(void (**)(char *, uint64_t))(v172 + 8))(v62, v173);
              v59((char *)v49, v20);
            }
            else
            {

              v121 = v185;
              v122 = *(void (**)(char *, uint64_t))(v185 + 8);
              v122(v46, v20);
              v123 = v45;
              v21 = v121;
              (*(void (**)(char *, uint64_t))(v172 + 8))(v123, v173);
              v122((char *)v49, v20);
            }
            v36 = v49;
            v31 = v194;
          }
          else
          {
            v183 = v42;
            v178 = v43;
            v98 = v182[6];
            v99 = v40;
            swift_bridgeObjectRetain();
            swift_retain();
            v100 = sub_1BC5AF0FC(v36);
            v101 = v36;
            v102 = v100;
            v104 = v103;
            v105 = v181;
            v106 = (uint64_t)v176;
            v193(&v176[*(int *)(v181 + 48)], v101, v20);
            type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
            sub_1BC361CE0();
            swift_bridgeObjectRetain();
            v107 = sub_1BC62ADA8();
            v108 = *(int *)(v105 + 52);
            *(_QWORD *)v106 = v107;
            *(_QWORD *)(v106 + 8) = v109;
            v196 = 0xD000000000000033;
            v197 = v163;
            swift_retain();
            sub_1BC62C764();
            swift_release();
            swift_bridgeObjectRelease();
            v110 = v197;
            *(_QWORD *)(v106 + 16) = v196;
            *(_QWORD *)(v106 + 24) = v110;
            *(_QWORD *)(v106 + v108) = 0;
            *(_QWORD *)(v106 + 88) = v99;
            *(_QWORD *)(v106 + 96) = v44;
            *(_QWORD *)(v106 + 56) = v102;
            *(_QWORD *)(v106 + 64) = v104;
            v111 = v165;
            *v165 = 0;
            v111[1] = 0;
            *(_WORD *)(v106 + 48) = 1;
            *(_QWORD *)(v106 + 32) = sub_1BC5B1B28;
            *(_QWORD *)(v106 + 40) = v98;
            v112 = v177;
            v113 = *(_QWORD *)(v177 + 16);
            v170 = v99;
            if (v113)
            {
              v114 = v178;
              v115 = v178;
              swift_bridgeObjectRetain();
              v116 = v183;
              v117 = v183;
              v118 = sub_1BC5590AC(v99, v44, v116, v114);
              v119 = MEMORY[0x1E0DEE9D8];
              if ((v120 & 1) != 0)
              {
                v119 = *(_QWORD *)(*(_QWORD *)(v112 + 56) + 8 * v118);
                swift_bridgeObjectRetain();
              }

              swift_bridgeObjectRelease();
              v21 = v185;
              v31 = v194;
            }
            else
            {
              v119 = MEMORY[0x1E0DEE9D8];
              v21 = v185;
              v31 = v194;
              v114 = v178;
            }
            sub_1BC3AFE24((uint64_t)v176, v171);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v20 = v179;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v119 = sub_1BC3B5190(0, *(_QWORD *)(v119 + 16) + 1, 1, v119);
            v126 = *(_QWORD *)(v119 + 16);
            v125 = *(_QWORD *)(v119 + 24);
            if (v126 >= v125 >> 1)
              v119 = sub_1BC3B5190(v125 > 1, v126 + 1, 1, v119);
            *(_QWORD *)(v119 + 16) = v126 + 1;
            sub_1BC3AFDE0(v171, v119+ ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80))+ *(_QWORD *)(v180 + 72) * v126);
            v127 = v114;
            swift_bridgeObjectRetain();
            v128 = v183;
            v129 = v183;
            v130 = v177;
            v131 = swift_isUniquelyReferenced_nonNull_native();
            v196 = v130;
            sub_1BC48C344(v119, v170, v44, v128, v114, v131);
            v177 = v196;

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            sub_1BC348D78((uint64_t)v176, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
            v36 = (uint64_t)v186;
            (*(void (**)(char *, uint64_t))(v21 + 8))(v186, v20);
            v9 = v184;
            v28 = v187;
          }
        }
        else
        {
          v183 = v42;
          v178 = v43;
          sub_1BC62BAF8();
          v87 = (void (*)(char *, char *, uint64_t))v193;
          v193(v28, v36, v20);
          v88 = sub_1BC62BB28();
          v89 = sub_1BC62CADC();
          if (os_log_type_enabled(v88, v89))
          {
            v90 = swift_slowAlloc();
            v91 = swift_slowAlloc();
            v196 = v91;
            *(_DWORD *)v90 = v164;
            v92 = sub_1BC62D718();
            *(_QWORD *)(v90 + 4) = sub_1BC4991F0(v92, v93, (uint64_t *)&v196);
            swift_bridgeObjectRelease();
            *(_WORD *)(v90 + 12) = 2080;
            v87(v166, v187, v20);
            v94 = sub_1BC62C6E0();
            *(_QWORD *)(v90 + 14) = sub_1BC4991F0(v94, v95, (uint64_t *)&v196);
            swift_bridgeObjectRelease();
            v96 = *(void (**)(char *, uint64_t))(v21 + 8);
            v96(v187, v20);
            _os_log_impl(&dword_1BC30A000, v88, v89, "[%s] Could not get either category name for identifier: %s", (uint8_t *)v90, 0x16u);
            swift_arrayDestroy();
            v97 = v91;
            v28 = v187;
            MEMORY[0x1BCCF36A8](v97, -1, -1);
            MEMORY[0x1BCCF36A8](v90, -1, -1);

            (*(void (**)(char *, uint64_t))(v172 + 8))(v9, v173);
            v96(v186, v20);
            v36 = (uint64_t)v186;
          }
          else
          {

            v37 = *(void (**)(char *, uint64_t))(v21 + 8);
            v37(v28, v20);
            (*(void (**)(char *, uint64_t))(v172 + 8))(v9, v173);
            v37((char *)v36, v20);
          }
        }
      }
      else
      {
        v194 = v31;
        sub_1BC5B2040(v39);
        v63 = v36;
        v65 = v64;
        v67 = v66;
        v68 = v182[6];
        swift_retain();
        v69 = sub_1BC5AF0FC(v63);
        v71 = v70;
        v72 = v181;
        v38((char *)v188 + *(int *)(v181 + 48), v63, v20);
        type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
        sub_1BC361CE0();
        swift_bridgeObjectRetain();
        v73 = sub_1BC62ADA8();
        v74 = *(int *)(v72 + 52);
        v75 = (uint64_t)v188;
        *v188 = v73;
        *(_QWORD *)(v75 + 8) = v76;
        v196 = 0xD000000000000033;
        v197 = v174 | 0x8000000000000000;
        sub_1BC62C764();
        v77 = v197;
        *(_QWORD *)(v75 + 16) = v196;
        *(_QWORD *)(v75 + 24) = v77;
        *(_QWORD *)(v75 + v74) = 0;
        v78 = v191;
        *(_QWORD *)(v75 + 88) = v65;
        *(_QWORD *)(v75 + 96) = v67;
        *(_QWORD *)(v75 + 56) = v69;
        *(_QWORD *)(v75 + 64) = v71;
        v79 = v175;
        *v175 = 0;
        v79[1] = 0;
        *(_WORD *)(v75 + 48) = 1;
        *(_QWORD *)(v75 + 32) = sub_1BC5B1B28;
        *(_QWORD *)(v75 + 40) = v68;
        if (*(_QWORD *)(v78 + 16))
        {
          swift_bridgeObjectRetain();
          v80 = sub_1BC558D94(v65, v67);
          v81 = MEMORY[0x1E0DEE9D8];
          if ((v82 & 1) != 0)
          {
            v81 = *(_QWORD *)(*(_QWORD *)(v78 + 56) + 8 * v80);
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v81 = MEMORY[0x1E0DEE9D8];
        }
        v28 = v187;
        sub_1BC3AFE24(v75, v190);
        v83 = swift_isUniquelyReferenced_nonNull_native();
        v20 = v179;
        if ((v83 & 1) == 0)
          v81 = sub_1BC3B5190(0, *(_QWORD *)(v81 + 16) + 1, 1, v81);
        v85 = *(_QWORD *)(v81 + 16);
        v84 = *(_QWORD *)(v81 + 24);
        if (v85 >= v84 >> 1)
          v81 = sub_1BC3B5190(v84 > 1, v85 + 1, 1, v81);
        *(_QWORD *)(v81 + 16) = v85 + 1;
        sub_1BC3AFDE0(v190, v81+ ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80))+ *(_QWORD *)(v180 + 72) * v85);
        v86 = swift_isUniquelyReferenced_nonNull_native();
        v196 = v78;
        sub_1BC48C4B4(v81, v65, v67, v86);
        v191 = v196;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BC348D78(v75, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        v21 = v185;
        v36 = (uint64_t)v186;
        (*(void (**)(char *, uint64_t))(v185 + 8))(v186, v20);
        v9 = v184;
        v31 = v194;
      }
      v34 = &v195[v189];
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
  }
  v132 = v161;
  v133 = v191;
  v134 = (char *)objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, 8);
  v135 = v134;
  if (v134)
  {
    v136 = objc_msgSend(v134, sel_displayName);
    v137 = sub_1BC62C680();
    v139 = v138;

  }
  else
  {
    v137 = 0;
    v139 = 0;
  }
  v140 = objc_msgSend(v135, sel_largeListIcon);
  if (!v140)
    v140 = objc_msgSend(v135, sel_listIcon);
  v141 = objc_msgSend(v135, sel_color);
  if (v139)
  {
    swift_bridgeObjectRetain_n();
    v142 = (uint64_t)v182;
    swift_retain();
    v143 = swift_bridgeObjectRetain();
    v144 = sub_1BC5B1CB4(v143, v142, v137, v139, v169);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRetain();
    v145 = v140;
    v146 = v141;
    v195 = v135;
    v147 = v140;
    v148 = v137;
    v149 = v177;
    v150 = swift_isUniquelyReferenced_nonNull_native();
    v196 = v149;
    sub_1BC48C344(v144, v148, v139, v147, v141, v150);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v151 = swift_bridgeObjectRetain();
    v152 = sub_1BC5AF914(v151);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC62BAF8();
    v153 = sub_1BC62BB28();
    v154 = sub_1BC62CADC();
    if (os_log_type_enabled(v153, (os_log_type_t)v154))
    {
      v191 = v133;
      v155 = (uint8_t *)swift_slowAlloc();
      v156 = swift_slowAlloc();
      v196 = v156;
      *(_DWORD *)v155 = 136315138;
      v157 = sub_1BC62D718();
      v198 = sub_1BC4991F0(v157, v158, (uint64_t *)&v196);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v153, (os_log_type_t)v154, "[%s] Could not get cycle tracking category name", v155, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v156, -1, -1);
      MEMORY[0x1BCCF36A8](v155, -1, -1);

      (*(void (**)(char *, uint64_t))(v172 + 8))(v161, v173);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v172 + 8))(v132, v173);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v152;
}

uint64_t sub_1BC5AE50C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t result;
  void (*v26)(_BYTE *, uint64_t);
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _BYTE v49[12];
  int v50;
  uint64_t v51;
  void (*ObjectType)(_BYTE *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = v1;
  ObjectType = (void (*)(_BYTE *, uint64_t))swift_getObjectType();
  v4 = sub_1BC62BB34();
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v49[-v8];
  v10 = sub_1BC62B8C4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = &v49[-v16];
  MEMORY[0x1E0C80A78](v15);
  v19 = &v49[-v18];
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16);
  v20(&v49[-v18], a1, v10);
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v11 + 88))(v19, v10) != *MEMORY[0x1E0D2BEB8])
  {
    v26 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
    v26(v19, v10);
    sub_1BC62BAF8();
    v20(v17, a1, v10);
    v27 = sub_1BC62BB28();
    v28 = sub_1BC62CADC();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc();
      v50 = v29;
      v31 = v30;
      v51 = swift_slowAlloc();
      v56 = v51;
      *(_DWORD *)v31 = 136315394;
      v32 = sub_1BC62D718();
      ObjectType = v26;
      v55 = sub_1BC4991F0(v32, v33, &v56);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      v20(v14, (uint64_t)v17, v10);
      v34 = sub_1BC62C6E0();
      v55 = sub_1BC4991F0(v34, v35, &v56);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      ObjectType(v17, v10);
      _os_log_impl(&dword_1BC30A000, v27, (os_log_type_t)v50, "[%s] Could not get hktype from identifier: %s", (uint8_t *)v31, 0x16u);
      v36 = v51;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v36, -1, -1);
      MEMORY[0x1BCCF36A8](v31, -1, -1);
    }
    else
    {
      v26(v17, v10);
    }

    (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v7, v54);
    return 5;
  }
  (*(void (**)(_QWORD *, uint64_t))(v11 + 96))(v19, v10);
  v21 = (void *)*v19;
  v22 = objc_msgSend(v2, sel_displayTypeForObjectType_, *v19);
  if (!v22)
  {
    sub_1BC62BAF8();
    v37 = v21;
    v38 = sub_1BC62BB28();
    v39 = sub_1BC62CAC4();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v56 = v41;
      *(_DWORD *)v40 = 136315394;
      v42 = sub_1BC62D718();
      v55 = sub_1BC4991F0(v42, v43, &v56);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      ObjectType = (void (*)(_BYTE *, uint64_t))(v40 + 14);
      v44 = v37;
      v45 = objc_msgSend(v44, sel_description);
      v46 = sub_1BC62C680();
      v48 = v47;

      v55 = sub_1BC4991F0(v46, v48, &v56);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v38, v39, "[%s] Could not get display type from hkType: %s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v41, -1, -1);
      MEMORY[0x1BCCF36A8](v40, -1, -1);

    }
    else
    {

    }
    (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v9, v54);
    return 5;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, sel_displayTypeIdentifier);

  result = 0;
  switch((unint64_t)v24)
  {
    case 0x5AuLL:
    case 0x5BuLL:
    case 0x5CuLL:
    case 0xF3uLL:
    case 0xF4uLL:
      result = 1;
      break;
    case 0x5FuLL:
      return result;
    case 0x60uLL:
    case 0x9DuLL:
    case 0x9EuLL:
    case 0x9FuLL:
    case 0xA0uLL:
    case 0xA1uLL:
    case 0xA2uLL:
    case 0xA3uLL:
    case 0xA4uLL:
    case 0xA5uLL:
    case 0xA6uLL:
    case 0xA7uLL:
    case 0xA8uLL:
    case 0xA9uLL:
    case 0xAAuLL:
    case 0xABuLL:
    case 0xE5uLL:
    case 0xE6uLL:
    case 0xE7uLL:
    case 0xE8uLL:
    case 0xE9uLL:
    case 0xEAuLL:
    case 0xEBuLL:
      result = 3;
      break;
    case 0x61uLL:
      result = 4;
      break;
    case 0xBFuLL:
    case 0xC0uLL:
    case 0xC1uLL:
      result = 2;
      break;
    default:
      return 5;
  }
  return result;
}

uint64_t sub_1BC5AECC4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v49 = a6;
  v45 = a5;
  v46 = a2;
  v47 = a3;
  v48 = a4;
  v7 = sub_1BC62B8C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62BB34();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v16 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[2];
  if (*(_QWORD *)(v20 + 16))
  {
    v21 = a1[1];
    v45 = *a1;
    v22 = v16;
    v23 = v17;
    sub_1BC3AFE24(v20 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v19);
    swift_bridgeObjectRetain();
    v24 = sub_1BC5B1B40(v20);
    v43 = v25;
    v44 = v24;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v19[*(int *)(v22 + 48)], v7);
    type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
    sub_1BC361CE0();
    swift_bridgeObjectRetain();
    v26 = v48;
    swift_bridgeObjectRetain();
    v27 = sub_1BC62ADA8();
    v29 = v28;
    v30 = swift_retain();
    v41 = v29;
    v31 = v49;
    ClinicalSharingSelectableAuthorizationCategoryItem.init(name:subtitle:category:authorizationIdentifier:associatedItems:isSelectable:isSelected:reuseIdentifier:selectionStateDidUpdate:)(v45, v21, v44, v43, v47, v26, (uint64_t)v10, v20, v49, 1, 0, v27, v41, (uint64_t)sub_1BC5B1B28, v30);
    sub_1BC348D78((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    v32 = 0;
    v33 = v31;
  }
  else
  {
    v46 = v12;
    v47 = v17;
    v48 = v16;
    sub_1BC62BAF8();
    v34 = sub_1BC62BB28();
    v35 = sub_1BC62CADC();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v51 = v37;
      v44 = v11;
      *(_DWORD *)v36 = 136315138;
      v38 = sub_1BC62D718();
      v50 = sub_1BC4991F0(v38, v39, &v51);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v34, v35, "[%s] No first identifier", v36, 0xCu);
      v32 = 1;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v37, -1, -1);
      MEMORY[0x1BCCF36A8](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v44);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v11);
      v32 = 1;
    }
    v22 = v48;
    v33 = v49;
    v23 = v47;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v33, v32, 1, v22);
}

uint64_t sub_1BC5AF02C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((a2 & 1) != 0)
    return sub_1BC5DD6DC(a1, 0);
  swift_beginAccess();
  v9 = *(_QWORD *)(a3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BC5DDE54(&v9, a1);
  result = swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v9 + 16);
  if (v7 < v6)
  {
    __break(1u);
  }
  else
  {
    sub_1BC5DE43C(v6, v7);
    v8 = *(_QWORD *)(a3 + 16);
    *(_QWORD *)(a3 + 16) = v9;
    sub_1BC5DCB08(v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1BC5AF0FC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  char *v16;
  char v17;
  void (*v18)(char *, uint64_t);
  id v19;
  void (*v20)(id *, uint64_t, uint64_t);
  id v21;
  void *v22;
  id v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v4 = sub_1BC62BB34();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = ((char *)&v45 - v8);
  v10 = sub_1BC62B8C4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (id *)((char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v45 - v15;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))((char *)&v45 - v15, *MEMORY[0x1E0D2BEE8], v10);
  v17 = MEMORY[0x1BCCF0B88](a1, v16);
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v16, v10);
  if ((v17 & 1) == 0)
  {
    v20 = *(void (**)(id *, uint64_t, uint64_t))(v11 + 16);
    v20(v14, a1, v10);
    if ((*(unsigned int (**)(id *, uint64_t))(v11 + 88))(v14, v10) == *MEMORY[0x1E0D2BEB8])
    {
      (*(void (**)(id *, uint64_t))(v11 + 96))(v14, v10);
      v7 = (char *)*v14;
      if ((objc_msgSend(*v14, sel_isClinicalType) & 1) != 0)
      {
        v21 = objc_msgSend(v2, sel_displayTypeForObjectType_, v7);
        if (v21)
        {
          v22 = v21;
          v23 = objc_msgSend(v21, sel_localization);
          v24 = objc_msgSend(v23, sel_displayName);

          v2 = (void *)sub_1BC62C680();
          return v2;
        }
        sub_1BC62BAF8();
        v7 = v7;
        v33 = sub_1BC62BB28();
        v34 = sub_1BC62CAC4();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = swift_slowAlloc();
          v45 = swift_slowAlloc();
          v50 = v45;
          *(_DWORD *)v35 = 136315394;
          v36 = sub_1BC62D718();
          v49 = sub_1BC4991F0(v36, v37, &v50);
          sub_1BC62CFF8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v35 + 12) = 2080;
          ObjectType = v35 + 14;
          v38 = objc_msgSend(v7, sel_identifier);
          v39 = sub_1BC62C680();
          v41 = v40;

          v49 = sub_1BC4991F0(v39, v41, &v50);
          sub_1BC62CFF8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC30A000, v33, v34, "[%s] Missing display type for \"%s\"", (uint8_t *)v35, 0x16u);
          v42 = v45;
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v42, -1, -1);
          MEMORY[0x1BCCF36A8](v35, -1, -1);

        }
        else
        {

        }
        (*(void (**)(NSObject *, uint64_t))(v47 + 8))(v9, v48);
        v32 = objc_msgSend(v7, sel_identifier);
LABEL_19:
        v43 = v32;
        v2 = (void *)sub_1BC62C680();

        return v2;
      }
      v32 = objc_msgSend(v7, sel_hk_localizedName);
      if (v32)
        goto LABEL_19;
      __break(1u);
    }
    else
    {
      v18((char *)v14, v10);
      v20((id *)v16, a1, v10);
      v2 = (void *)sub_1BC62C6E0();
      v26 = v25;
      sub_1BC62BAF8();
      swift_bridgeObjectRetain_n();
      v9 = sub_1BC62BB28();
      v27 = sub_1BC62CAC4();
      if (os_log_type_enabled(v9, v27))
      {
        v28 = swift_slowAlloc();
        v29 = swift_slowAlloc();
        v50 = v29;
        *(_DWORD *)v28 = 136315394;
        v30 = sub_1BC62D718();
        v49 = sub_1BC4991F0(v30, v31, &v50);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        swift_bridgeObjectRetain();
        v49 = sub_1BC4991F0((uint64_t)v2, v26, &v50);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BC30A000, v9, v27, "[%s] Unsupported authorization identifier \"%s\"", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v29, -1, -1);
        MEMORY[0x1BCCF36A8](v28, -1, -1);

LABEL_14:
        (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v48);
        return v2;
      }
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  if (qword_1ED6A3308 != -1)
    swift_once();
  v19 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1BC5AF758(uint64_t a1)
{
  return sub_1BC5AF928(a1, (uint64_t)sub_1BC5B18FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_1BC5B1904);
}

uint64_t sub_1BC5AF76C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  _QWORD *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v25;

  v25 = a3;
  swift_bridgeObjectRetain();
  sub_1BC5AD4B8(&v25);
  v7 = v25;
  v8 = objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, 8);
  if (!v8)
    goto LABEL_7;
  v9 = v8;
  v10 = objc_msgSend(v8, sel_displayName);

  v11 = sub_1BC62C680();
  v13 = v12;

  if (v11 == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v15 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_9:
    v23 = *(unsigned __int8 *)(a4 + 40);
    type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    v17 = a1;
    v18 = a2;
    v19 = v7;
    v20 = 1;
    v21 = v23;
    v22 = a4;
    return sub_1BC3E4874(v17, v18, 0, 0, v19, v20, v21, v22);
  }
LABEL_7:
  v16 = *(unsigned __int8 *)(a4 + 40);
  type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v17 = a1;
  v18 = a2;
  v19 = v7;
  v20 = 0;
  v21 = v16;
  v22 = 0;
  return sub_1BC3E4874(v17, v18, 0, 0, v19, v20, v21, v22);
}

uint64_t sub_1BC5AF914(uint64_t a1)
{
  return sub_1BC5AF928(a1, (uint64_t)sub_1BC5AFC50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_1BC5B16B4);
}

uint64_t sub_1BC5AF928(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _BYTE *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  _BYTE v9[16];

  v4 = a3(a1, a2, v3, v9);
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    v7 = swift_bridgeObjectRetain();
    v5 = (uint64_t)sub_1BC3D6714(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v8 = v5;
  sub_1BC3E3424(&v8);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BC5AF9C0(uint64_t a1, unint64_t a2, void *a3, void *a4, _QWORD *a5, uint64_t a6)
{
  _QWORD *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  unint64_t v21;
  char v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  char v33;
  id v34;
  id v35;
  _QWORD *v37;

  v37 = a5;
  swift_bridgeObjectRetain();
  sub_1BC5AD4B8(&v37);
  v11 = v37;
  v12 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v13 = objc_msgSend(v12, sel_categoryWithID_, 8);
  if (!v13)
  {
    v21 = a2;
    if (!a2)
    {
      a1 = 0;
      v21 = 0xE000000000000000;
LABEL_18:
      v33 = *(_BYTE *)(a6 + 40);
      type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
      swift_allocObject();
      v34 = a4;
      swift_retain();
      swift_bridgeObjectRetain();
      v35 = a3;
      v25 = a1;
      v26 = v21;
      v27 = a3;
      v28 = a4;
      v29 = (uint64_t)v11;
      v30 = 1;
      v31 = v33;
      v32 = a6;
      return sub_1BC3E4874(v25, v26, v27, v28, v29, v30, v31, v32);
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, sel_displayName);

  v16 = sub_1BC62C680();
  v18 = v17;

  if (!a2)
  {
    a1 = 0;
    v21 = 0xE000000000000000;
    if (!v18)
      goto LABEL_18;
    goto LABEL_15;
  }
  if (!v18)
  {
    v21 = a2;
    goto LABEL_15;
  }
  if (v16 == a1 && v18 == a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = a2;
    goto LABEL_18;
  }
  v20 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = a2;
  if ((v20 & 1) != 0)
    goto LABEL_18;
LABEL_16:
  v22 = *(_BYTE *)(a6 + 40);
  type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
  swift_allocObject();
  v23 = a4;
  swift_bridgeObjectRetain();
  v24 = a3;
  v25 = a1;
  v26 = v21;
  v27 = a3;
  v28 = a4;
  v29 = (uint64_t)v11;
  v30 = 0;
  v31 = v22;
  v32 = 0;
  return sub_1BC3E4874(v25, v26, v27, v28, v29, v30, v31, v32);
}

uint64_t sub_1BC5AFBF4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalSharingSelectableDataTypesDataSourceProviding()
{
  return objc_opt_self();
}

uint64_t sub_1BC5AFC50(uint64_t a1, unint64_t a2, void *a3, void *a4, _QWORD *a5)
{
  uint64_t v5;

  return sub_1BC5AF9C0(a1, a2, a3, a4, a5, v5);
}

uint64_t sub_1BC5AFC58(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  id v8;

  sub_1BC62D670();
  if (a2)
  {
    sub_1BC62D688();
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    if (a3)
      goto LABEL_3;
LABEL_6:
    sub_1BC62D688();
    if (a4)
      goto LABEL_4;
LABEL_7:
    sub_1BC62D688();
    return sub_1BC62D6AC();
  }
  sub_1BC62D688();
  if (!a3)
    goto LABEL_6;
LABEL_3:
  sub_1BC62D688();
  v7 = a3;
  sub_1BC62CEC0();

  if (!a4)
    goto LABEL_7;
LABEL_4:
  sub_1BC62D688();
  v8 = a4;
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

uint64_t sub_1BC5AFD50()
{
  uint64_t v0;

  return sub_1BC5AFC58(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1BC5AFD5C()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = (void *)v0[2];
  v2 = (void *)v0[3];
  if (v0[1])
  {
    sub_1BC62D688();
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    if (v1)
      goto LABEL_3;
LABEL_6:
    sub_1BC62D688();
    if (v2)
      goto LABEL_4;
    goto LABEL_7;
  }
  sub_1BC62D688();
  if (!v1)
    goto LABEL_6;
LABEL_3:
  sub_1BC62D688();
  v3 = v1;
  sub_1BC62CEC0();

  if (v2)
  {
LABEL_4:
    sub_1BC62D688();
    v4 = v2;
    sub_1BC62CEC0();

    return;
  }
LABEL_7:
  sub_1BC62D688();
}

uint64_t sub_1BC5AFE60()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  v1 = v0[1];
  v3 = (void *)v0[2];
  v2 = (void *)v0[3];
  sub_1BC62D670();
  if (v1)
  {
    sub_1BC62D688();
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_6:
    sub_1BC62D688();
    if (v2)
      goto LABEL_4;
LABEL_7:
    sub_1BC62D688();
    return sub_1BC62D6AC();
  }
  sub_1BC62D688();
  if (!v3)
    goto LABEL_6;
LABEL_3:
  sub_1BC62D688();
  v4 = v3;
  sub_1BC62CEC0();

  if (!v2)
    goto LABEL_7;
LABEL_4:
  sub_1BC62D688();
  v5 = v2;
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

uint64_t sub_1BC5AFF4C(uint64_t a1, uint64_t a2)
{
  return sub_1BC5B158C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(void **)(a2 + 16), *(void **)(a2 + 24));
}

uint64_t sub_1BC5AFF68(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  char v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;

  v2 = v1;
  v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v150 = *(_QWORD *)(v4 - 8);
  v151 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v146 = (uint64_t)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v156 = (uint64_t)&v138 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v138 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v138 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v148 = (uint64_t)&v138 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v138 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v142 = (uint64_t)&v138 - v21;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v138 - v22;
  v159 = a1;
  v24 = a1[1];
  result = sub_1BC62D520();
  if (result >= v24)
  {
    if (v24 < 0)
      goto LABEL_167;
    if (v24)
      return sub_1BC5B0B38(0, v24, 1, v159);
    return result;
  }
  if (v24 >= 0)
    v26 = v24;
  else
    v26 = v24 + 1;
  if (v24 < -1)
    goto LABEL_175;
  v153 = v14;
  v145 = v19;
  v140 = result;
  v141 = v23;
  if (v24 < 2)
  {
    v149 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80));
    v139 = MEMORY[0x1E0DEE9D8];
    if (v24 != 1)
    {
      v32 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v31 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_133:
      if (v32 >= 2)
      {
        v131 = *v159;
        do
        {
          v132 = v32 - 2;
          if (v32 < 2)
            goto LABEL_162;
          if (!v131)
            goto LABEL_174;
          v133 = v31;
          v134 = *(_QWORD *)&v31[16 * v132 + 32];
          v135 = *(_QWORD *)&v31[16 * v32 + 24];
          sub_1BC5B0E24(v131 + *(_QWORD *)(v150 + 72) * v134, v131 + *(_QWORD *)(v150 + 72) * *(_QWORD *)&v31[16 * v32 + 16], v131 + *(_QWORD *)(v150 + 72) * v135, v149);
          if (v2)
            break;
          if (v135 < v134)
            goto LABEL_163;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v133 = sub_1BC504414((uint64_t)v133);
          if (v132 >= *((_QWORD *)v133 + 2))
            goto LABEL_164;
          v136 = &v133[16 * v132 + 32];
          *(_QWORD *)v136 = v134;
          *((_QWORD *)v136 + 1) = v135;
          v137 = *((_QWORD *)v133 + 2);
          if (v32 > v137)
            goto LABEL_165;
          memmove(&v133[16 * v32 + 16], &v133[16 * v32 + 32], 16 * (v137 - v32));
          v31 = v133;
          *((_QWORD *)v133 + 2) = v137 - 1;
          v32 = v137 - 1;
        }
        while (v137 > 2);
      }
LABEL_144:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v139 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v27 = v26 >> 1;
    v28 = sub_1BC62C8CC();
    *(_QWORD *)(v28 + 16) = v27;
    v29 = *(unsigned __int8 *)(v150 + 80);
    v139 = v28;
    v149 = v28 + ((v29 + 32) & ~v29);
  }
  v30 = 0;
  v31 = (char *)MEMORY[0x1E0DEE9D8];
  v155 = v11;
  while (2)
  {
    v33 = v30;
    v34 = v30 + 1;
    v144 = v31;
    v147 = v30;
    if (v30 + 1 >= v24)
    {
      v40 = v30 + 1;
      v41 = (uint64_t)v153;
      goto LABEL_57;
    }
    v35 = *v159;
    v36 = *(_QWORD *)(v150 + 72);
    v37 = (uint64_t)v141;
    sub_1BC3AFE24(*v159 + v36 * v34, (uint64_t)v141);
    v143 = v35;
    v158 = v36;
    sub_1BC3AFE24(v35 + v36 * v33, v142);
    if (*(_QWORD *)(v37 + 64))
    {
      v38 = *(_QWORD *)(v37 + 56);
      v39 = *(_QWORD *)(v37 + 64);
    }
    else
    {
      v38 = 0;
      v39 = 0xE000000000000000;
    }
    if (*(_QWORD *)(v142 + 64))
    {
      v42 = *(_QWORD *)(v142 + 64);
      if (v38 != *(_QWORD *)(v142 + 56))
        goto LABEL_26;
    }
    else
    {
      v42 = 0xE000000000000000;
      if (v38)
      {
LABEL_26:
        LODWORD(v157) = sub_1BC62D574();
        goto LABEL_27;
      }
    }
    if (v39 != v42)
      goto LABEL_26;
    LODWORD(v157) = 0;
LABEL_27:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC348D78(v142, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1BC348D78((uint64_t)v141, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    v40 = v33 + 2;
    v154 = v24;
    if (v33 + 2 >= v24)
      goto LABEL_43;
    v152 = v158 * v34;
    v43 = v143;
    v44 = v40;
    v45 = v158 * v40;
    v46 = (uint64_t)v145;
    while (1)
    {
      sub_1BC3AFE24(v43 + v45, v46);
      v47 = v148;
      sub_1BC3AFE24(v43 + v152, v148);
      if (*(_QWORD *)(v46 + 64))
      {
        v48 = *(_QWORD *)(v46 + 56);
        v49 = *(_QWORD *)(v46 + 64);
        v50 = *(_QWORD *)(v47 + 64);
        if (!v50)
          goto LABEL_34;
      }
      else
      {
        v48 = 0;
        v49 = 0xE000000000000000;
        v50 = *(_QWORD *)(v47 + 64);
        if (!v50)
        {
LABEL_34:
          v52 = 0xE000000000000000;
          if (v48)
            goto LABEL_37;
          goto LABEL_35;
        }
      }
      v51 = *(_QWORD *)(v47 + 56);
      v52 = v50;
      if (v48 != v51)
        goto LABEL_37;
LABEL_35:
      if (v49 == v52)
      {
        v53 = 0;
        goto LABEL_38;
      }
LABEL_37:
      v53 = sub_1BC62D574();
LABEL_38:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC348D78(v148, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      v46 = (uint64_t)v145;
      sub_1BC348D78((uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if (((v157 ^ v53) & 1) != 0)
        break;
      v43 += v158;
      ++v44;
      v24 = v154;
      v11 = v155;
      if (v154 == v44)
      {
        v40 = v154;
        goto LABEL_42;
      }
    }
    v24 = v154;
    v11 = v155;
    v40 = v44;
LABEL_42:
    v33 = v147;
LABEL_43:
    v41 = (uint64_t)v153;
    if ((v157 & 1) != 0)
    {
      if (v40 < v33)
        goto LABEL_168;
      if (v33 < v40)
      {
        v54 = 0;
        v55 = v33;
        v56 = v158 * (v40 - 1);
        v57 = v40 * v158;
        v58 = v55;
        v59 = v55 * v158;
        do
        {
          if (v58 != v40 + v54 - 1)
          {
            v61 = v40;
            v62 = v143;
            if (!v143)
              goto LABEL_173;
            v63 = v143 + v59;
            v157 = v143 + v56;
            sub_1BC3AFDE0(v143 + v59, v146);
            if (v59 < v56 || v63 >= v62 + v57)
            {
              v60 = v157;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v60 = v157;
              if (v59 != v56)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_1BC3AFDE0(v146, v60);
            v40 = v61;
          }
          ++v58;
          --v54;
          v56 -= v158;
          v57 -= v158;
          v59 += v158;
        }
        while (v58 < v40 + v54);
        v24 = v154;
        v11 = v155;
        v41 = (uint64_t)v153;
        v33 = v147;
      }
    }
LABEL_57:
    if (v40 >= v24)
      goto LABEL_83;
    if (__OFSUB__(v40, v33))
      goto LABEL_166;
    if (v40 - v33 >= v140)
      goto LABEL_83;
    if (__OFADD__(v33, v140))
      goto LABEL_169;
    if (v33 + v140 >= v24)
      v64 = v24;
    else
      v64 = v33 + v140;
    if (v64 >= v33)
    {
      if (v40 == v64)
        goto LABEL_83;
      v138 = v2;
      v65 = *(_QWORD *)(v150 + 72);
      v66 = v65 * (v40 - 1);
      v152 = v65;
      v67 = v40 * v65;
      v143 = v64;
      while (2)
      {
        v69 = 0;
        v154 = v40;
        while (2)
        {
          v70 = *v159;
          sub_1BC3AFE24(v67 + v69 + *v159, v41);
          sub_1BC3AFE24(v66 + v69 + v70, (uint64_t)v11);
          v71 = v41;
          v72 = *(_QWORD *)(v41 + 64);
          if (v72)
          {
            v73 = *(_QWORD *)(v71 + 56);
            v74 = v72;
            v75 = *((_QWORD *)v11 + 8);
            if (v75)
              goto LABEL_74;
LABEL_77:
            v77 = 0xE000000000000000;
            if (!v73)
              goto LABEL_78;
LABEL_79:
            v157 = v33;
            LODWORD(v158) = sub_1BC62D574();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v11 = v155;
            sub_1BC348D78((uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
            v41 = (uint64_t)v153;
            sub_1BC348D78((uint64_t)v153, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
            if ((v158 & 1) == 0)
              goto LABEL_68;
            v78 = *v159;
            if (!*v159)
              goto LABEL_171;
            v79 = v78 + v66 + v69;
            sub_1BC3AFDE0(v78 + v67 + v69, v156);
            swift_arrayInitWithTakeFrontToBack();
            sub_1BC3AFDE0(v156, v79);
            v69 -= v152;
            v33 = v157 + 1;
            v68 = v154;
            if (v154 == v157 + 1)
              goto LABEL_69;
            continue;
          }
          break;
        }
        v73 = 0;
        v74 = 0xE000000000000000;
        v75 = *((_QWORD *)v11 + 8);
        if (!v75)
          goto LABEL_77;
LABEL_74:
        v76 = *((_QWORD *)v11 + 7);
        v77 = v75;
        if (v73 != v76)
          goto LABEL_79;
LABEL_78:
        if (v74 != v77)
          goto LABEL_79;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        v11 = v155;
        sub_1BC348D78((uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        v41 = (uint64_t)v153;
        sub_1BC348D78((uint64_t)v153, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_68:
        v68 = v154;
LABEL_69:
        v40 = v68 + 1;
        v66 += v152;
        v67 += v152;
        v33 = v147;
        if (v40 != v143)
          continue;
        break;
      }
      v40 = v143;
      v2 = v138;
LABEL_83:
      if (v40 < v33)
        goto LABEL_161;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v31 = v144;
      else
        v31 = sub_1BC503AB4(0, *((_QWORD *)v144 + 2) + 1, 1, v144);
      v81 = *((_QWORD *)v31 + 2);
      v80 = *((_QWORD *)v31 + 3);
      v32 = v81 + 1;
      v154 = v40;
      if (v81 >= v80 >> 1)
        v31 = sub_1BC503AB4((char *)(v80 > 1), v81 + 1, 1, v31);
      *((_QWORD *)v31 + 2) = v32;
      v82 = v31 + 32;
      v83 = &v31[16 * v81 + 32];
      v84 = v154;
      *(_QWORD *)v83 = v33;
      *((_QWORD *)v83 + 1) = v84;
      if (v81)
      {
        while (2)
        {
          v85 = v32 - 1;
          if (v32 >= 4)
          {
            v90 = &v82[16 * v32];
            v91 = *((_QWORD *)v90 - 8);
            v92 = *((_QWORD *)v90 - 7);
            v96 = __OFSUB__(v92, v91);
            v93 = v92 - v91;
            if (v96)
              goto LABEL_150;
            v95 = *((_QWORD *)v90 - 6);
            v94 = *((_QWORD *)v90 - 5);
            v96 = __OFSUB__(v94, v95);
            v88 = v94 - v95;
            v89 = v96;
            if (v96)
              goto LABEL_151;
            v97 = v32 - 2;
            v98 = &v82[16 * v32 - 32];
            v100 = *(_QWORD *)v98;
            v99 = *((_QWORD *)v98 + 1);
            v96 = __OFSUB__(v99, v100);
            v101 = v99 - v100;
            if (v96)
              goto LABEL_153;
            v96 = __OFADD__(v88, v101);
            v102 = v88 + v101;
            if (v96)
              goto LABEL_156;
            if (v102 >= v93)
            {
              v120 = &v82[16 * v85];
              v122 = *(_QWORD *)v120;
              v121 = *((_QWORD *)v120 + 1);
              v96 = __OFSUB__(v121, v122);
              v123 = v121 - v122;
              if (v96)
                goto LABEL_160;
              v113 = v88 < v123;
            }
            else
            {
LABEL_102:
              if ((v89 & 1) != 0)
                goto LABEL_152;
              v97 = v32 - 2;
              v103 = &v82[16 * v32 - 32];
              v105 = *(_QWORD *)v103;
              v104 = *((_QWORD *)v103 + 1);
              v106 = __OFSUB__(v104, v105);
              v107 = v104 - v105;
              v108 = v106;
              if (v106)
                goto LABEL_155;
              v109 = &v82[16 * v85];
              v111 = *(_QWORD *)v109;
              v110 = *((_QWORD *)v109 + 1);
              v96 = __OFSUB__(v110, v111);
              v112 = v110 - v111;
              if (v96)
                goto LABEL_158;
              if (__OFADD__(v107, v112))
                goto LABEL_159;
              if (v107 + v112 < v88)
                goto LABEL_114;
              v113 = v88 < v112;
            }
            if (v113)
              v85 = v97;
          }
          else
          {
            if (v32 == 3)
            {
              v87 = *((_QWORD *)v31 + 4);
              v86 = *((_QWORD *)v31 + 5);
              v96 = __OFSUB__(v86, v87);
              v88 = v86 - v87;
              v89 = v96;
              goto LABEL_102;
            }
            v114 = *((_QWORD *)v31 + 4);
            v115 = *((_QWORD *)v31 + 5);
            v96 = __OFSUB__(v115, v114);
            v107 = v115 - v114;
            v108 = v96;
LABEL_114:
            if ((v108 & 1) != 0)
              goto LABEL_154;
            v116 = &v82[16 * v85];
            v118 = *(_QWORD *)v116;
            v117 = *((_QWORD *)v116 + 1);
            v96 = __OFSUB__(v117, v118);
            v119 = v117 - v118;
            if (v96)
              goto LABEL_157;
            if (v119 < v107)
              goto LABEL_14;
          }
          v124 = v85 - 1;
          if (v85 - 1 >= v32)
          {
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
            goto LABEL_170;
          }
          if (!*v159)
            goto LABEL_172;
          v125 = v31;
          v126 = &v82[16 * v124];
          v127 = *(_QWORD *)v126;
          v128 = &v82[16 * v85];
          v129 = *((_QWORD *)v128 + 1);
          sub_1BC5B0E24(*v159 + *(_QWORD *)(v150 + 72) * *(_QWORD *)v126, *v159 + *(_QWORD *)(v150 + 72) * *(_QWORD *)v128, *v159 + *(_QWORD *)(v150 + 72) * v129, v149);
          if (v2)
            goto LABEL_144;
          if (v129 < v127)
            goto LABEL_147;
          if (v85 > *((_QWORD *)v125 + 2))
            goto LABEL_148;
          *(_QWORD *)v126 = v127;
          *(_QWORD *)&v82[16 * v124 + 8] = v129;
          v130 = *((_QWORD *)v125 + 2);
          if (v85 >= v130)
            goto LABEL_149;
          v32 = v130 - 1;
          memmove(&v82[16 * v85], v128 + 16, 16 * (v130 - 1 - v85));
          v31 = v125;
          *((_QWORD *)v125 + 2) = v130 - 1;
          v11 = v155;
          if (v130 <= 2)
            goto LABEL_14;
          continue;
        }
      }
      v32 = 1;
LABEL_14:
      v24 = v159[1];
      v30 = v154;
      if (v154 >= v24)
        goto LABEL_133;
      continue;
    }
    break;
  }
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC5B0B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a4;
  v31 = a1;
  v32 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v6 = MEMORY[0x1E0C80A78](v32);
  v37 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v29 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v14 = (char *)&v29 - v13;
  v36 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v40 = v15 * (v36 - 1);
    v34 = v10;
    v35 = v15;
    v39 = v15 * v36;
    v33 = (char *)&v29 - v13;
LABEL_6:
    v16 = 0;
    v17 = v31;
    while (1)
    {
      v18 = *v38;
      sub_1BC3AFE24(v39 + v16 + *v38, (uint64_t)v14);
      sub_1BC3AFE24(v40 + v16 + v18, (uint64_t)v10);
      v19 = v14;
      v20 = *((_QWORD *)v14 + 8);
      if (v20)
      {
        v21 = *((_QWORD *)v19 + 7);
        v22 = v20;
        v23 = *((_QWORD *)v10 + 8);
        if (v23)
          goto LABEL_10;
      }
      else
      {
        v21 = 0;
        v22 = 0xE000000000000000;
        v23 = *((_QWORD *)v10 + 8);
        if (v23)
        {
LABEL_10:
          v24 = *((_QWORD *)v10 + 7);
          v25 = v23;
          if (v21 != v24)
            goto LABEL_15;
          goto LABEL_14;
        }
      }
      v25 = 0xE000000000000000;
      if (v21)
        goto LABEL_15;
LABEL_14:
      if (v22 == v25)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        v10 = v34;
        sub_1BC348D78((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        v14 = v33;
        result = sub_1BC348D78((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_5:
        v40 += v35;
        v39 += v35;
        if (++v36 == v30)
          return result;
        goto LABEL_6;
      }
LABEL_15:
      v26 = sub_1BC62D574();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v34;
      sub_1BC348D78((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      v14 = v33;
      result = sub_1BC348D78((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if ((v26 & 1) == 0)
        goto LABEL_5;
      v27 = *v38;
      if (!*v38)
      {
        __break(1u);
        return result;
      }
      v28 = v27 + v40 + v16;
      sub_1BC3AFDE0(v27 + v39 + v16, v37);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1BC3AFDE0(v37, v28);
      v16 -= v35;
      if (v36 == ++v17)
        goto LABEL_5;
    }
  }
  return result;
}

uint64_t sub_1BC5B0E24(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t result;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v59 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v8 = MEMORY[0x1E0C80A78](v59);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v57 = (uint64_t)&v53 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v53 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v53 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_80;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1)
    goto LABEL_81;
  v21 = (uint64_t)(a2 - a1) / v19;
  v63 = a1;
  v62 = a4;
  v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v19;
      v25 = v57;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v37 = a4 + v24;
      v61 = a4 + v24;
      v63 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v58 = -v19;
        v55 = a1;
        v56 = a4;
        v54 = v10;
        v39 = -v19;
        do
        {
          sub_1BC3AFE24(v37 + v39, v25);
          v40 = a2 + v39;
          sub_1BC3AFE24(a2 + v39, (uint64_t)v10);
          if (*(_QWORD *)(v25 + 64))
          {
            v41 = *(_QWORD *)(v25 + 56);
            v42 = *(_QWORD *)(v25 + 64);
          }
          else
          {
            v41 = 0;
            v42 = 0xE000000000000000;
          }
          v43 = v10;
          v44 = *((_QWORD *)v10 + 8);
          if (v44)
          {
            v45 = *((_QWORD *)v43 + 7);
            v46 = v44;
          }
          else
          {
            v45 = 0;
            v46 = 0xE000000000000000;
          }
          v60 = a2;
          if (v41 == v45 && v42 == v46)
            v47 = 0;
          else
            v47 = sub_1BC62D574();
          v48 = a3 + v39;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = v54;
          sub_1BC348D78((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          v25 = v57;
          sub_1BC348D78(v57, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          if ((v47 & 1) != 0)
          {
            v50 = v55;
            v49 = v56;
            if (a3 < v60 || v48 >= v60)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v60)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v63 += v58;
          }
          else
          {
            v51 = v61;
            v61 += v39;
            v50 = v55;
            v49 = v56;
            if (a3 < v51 || v48 >= v51)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v51)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v40 = v60;
          }
          v37 = v61;
          if (v61 <= v49)
            break;
          a3 += v39;
          a2 = v40;
        }
        while (v40 > v50);
      }
LABEL_78:
      sub_1BC5042FC(&v63, &v62, (uint64_t *)&v61);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v60 = a4 + v23;
    v61 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v58 = v19;
      while (1)
      {
        v27 = a3;
        sub_1BC3AFE24(a2, (uint64_t)v17);
        sub_1BC3AFE24(a4, (uint64_t)v15);
        if (*((_QWORD *)v17 + 8))
        {
          v28 = *((_QWORD *)v17 + 7);
          v29 = *((_QWORD *)v17 + 8);
          v30 = *((_QWORD *)v15 + 8);
          if (v30)
            goto LABEL_25;
        }
        else
        {
          v28 = 0;
          v29 = 0xE000000000000000;
          v30 = *((_QWORD *)v15 + 8);
          if (v30)
          {
LABEL_25:
            v31 = v30;
            if (v28 != *((_QWORD *)v15 + 7))
              goto LABEL_31;
            goto LABEL_29;
          }
        }
        v31 = 0xE000000000000000;
        if (v28)
          goto LABEL_31;
LABEL_29:
        if (v29 == v31)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          sub_1BC348D78((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          sub_1BC348D78((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_36:
          v33 = v63;
          v34 = v58;
          v36 = v62 + v58;
          if (v63 < v62 || v63 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v63 != v62)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v62 = v36;
          v35 = a2;
          goto LABEL_42;
        }
LABEL_31:
        v32 = sub_1BC62D574();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BC348D78((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC348D78((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if ((v32 & 1) == 0)
          goto LABEL_36;
        v33 = v63;
        v34 = v58;
        v35 = a2 + v58;
        if (v63 < a2 || v63 >= v35)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v63 == a2)
        {
          v33 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_42:
        v63 = v33 + v34;
        a4 = v62;
        if (v62 < v60)
        {
          a3 = v27;
          a2 = v35;
          if (v35 < v27)
            continue;
        }
        goto LABEL_78;
      }
    }
    goto LABEL_78;
  }
LABEL_82:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC5B1440(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  if ((a1 & 0xC000000000000001) != 0)
    return sub_1BC62D2EC();
  v2 = *(_QWORD *)(a1 + 64);
  if (v2)
  {
    v3 = 0;
    return __clz(__rbit64(v2)) + v3;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v1 = 1 << v5;
  if (v6 < 7)
    return v1;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = 64;
    return __clz(__rbit64(v2)) + v3;
  }
  v7 = (unint64_t)(v1 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v3 = 64;
  while (v8)
  {
    v10 = *v9++;
    v2 = v10;
    --v8;
    v3 += 64;
    if (v10)
      return __clz(__rbit64(v2)) + v3;
  }
  return v1;
}

uint64_t sub_1BC5B1504(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1BC5B158C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  char v12;
  uint64_t result;
  id v14;
  id v15;
  char v16;
  id v17;
  id v18;
  char v19;

  if (!a2)
  {
    if (a6)
      return 0;
    goto LABEL_8;
  }
  if (!a6)
    return 0;
  if (a1 == a5 && a2 == a6 || (v12 = sub_1BC62D574(), result = 0, (v12 & 1) != 0))
  {
LABEL_8:
    if (a3)
    {
      if (!a7)
        return 0;
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
      v14 = a7;
      v15 = a3;
      v16 = sub_1BC62CEB4();

      if ((v16 & 1) == 0)
        return 0;
    }
    else if (a7)
    {
      return 0;
    }
    if (a4)
    {
      if (a8)
      {
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
        v17 = a8;
        v18 = a4;
        v19 = sub_1BC62CEB4();

        if ((v19 & 1) != 0)
          return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BC5B16B4(uint64_t a1, void (*a2)(uint64_t, uint64_t, void *, void *, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  id v31;
  uint64_t v32;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    result = sub_1BC5B1504(v2);
    v6 = result;
    v7 = 0;
    v8 = v2 + 64;
    v24 = v2 + 80;
    v25 = v3;
    v27 = v2 + 64;
    v28 = v2;
    v26 = v5;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v2 + 32))
    {
      v10 = (unint64_t)v6 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(v2 + 36) != v5)
        goto LABEL_23;
      v30 = v7;
      v11 = *(_QWORD *)(v2 + 56);
      v12 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v6);
      v13 = *v12;
      v14 = v12[1];
      v15 = (void *)v12[2];
      v16 = (void *)v12[3];
      v17 = *(_QWORD *)(v11 + 8 * v6);
      v31 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = v15;
      a2(v13, v14, v15, v16, v17);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1BC62D268();
      sub_1BC62D298();
      v2 = v28;
      sub_1BC62D2A4();
      result = sub_1BC62D274();
      v9 = 1 << *(_BYTE *)(v28 + 32);
      if (v6 >= v9)
        goto LABEL_24;
      v8 = v27;
      v19 = *(_QWORD *)(v27 + 8 * v10);
      if ((v19 & (1 << v6)) == 0)
        goto LABEL_25;
      v5 = v26;
      if (*(_DWORD *)(v28 + 36) != v26)
        goto LABEL_26;
      v20 = v19 & (-2 << (v6 & 0x3F));
      if (v20)
      {
        v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v21 = v10 + 1;
        v22 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v22)
        {
          v23 = *(_QWORD *)(v27 + 8 * v21);
          if (v23)
          {
LABEL_18:
            v9 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v10)
            {
              v23 = *(_QWORD *)(v24 + 8 * v10++);
              if (v23)
              {
                v21 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v7 = v30 + 1;
      v6 = v9;
      if (v30 + 1 == v25)
        return v32;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC5B18FC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return sub_1BC5AF76C(a1, a2, a3, v3);
}

uint64_t sub_1BC5B1904(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    result = sub_1BC5B1504(v2);
    v5 = result;
    v7 = v6;
    v8 = 0;
    v9 = v2 + 64;
    v21 = v2 + 80;
    v22 = v3;
    v23 = v2;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v2 + 32))
    {
      v11 = (unint64_t)v5 >> 6;
      if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(v2 + 36) != v7)
        goto LABEL_23;
      v25 = v8;
      v12 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v5);
      v13 = *v12;
      v14 = v12[1];
      v15 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a2(v13, v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC62D268();
      sub_1BC62D298();
      v2 = v23;
      sub_1BC62D2A4();
      result = sub_1BC62D274();
      v10 = 1 << *(_BYTE *)(v23 + 32);
      if (v5 >= v10)
        goto LABEL_24;
      v16 = *(_QWORD *)(v9 + 8 * v11);
      if ((v16 & (1 << v5)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(v23 + 36) != v7)
        goto LABEL_26;
      v17 = v16 & (-2 << (v5 & 0x3F));
      if (v17)
      {
        v10 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v18 = v11 + 1;
        v19 = (unint64_t)(v10 + 63) >> 6;
        if (v11 + 1 < v19)
        {
          v20 = *(_QWORD *)(v9 + 8 * v18);
          if (v20)
          {
LABEL_18:
            v10 = __clz(__rbit64(v20)) + (v18 << 6);
          }
          else
          {
            while (v19 - 2 != v11)
            {
              v20 = *(_QWORD *)(v21 + 8 * v11++);
              if (v20)
              {
                v18 = v11 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v8 = v25 + 1;
      v5 = v10;
      if (v25 + 1 == v22)
        return v26;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC5B1B28(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1BC5AF02C(a1, a2, v2);
}

uint64_t sub_1BC5B1B40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;

  v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v15 = 0xE000000000000000;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    return 0;
  v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v8 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1BC3AFE24(v7, (uint64_t)v5);
    v10 = v14;
    v9 = v15;
    swift_bridgeObjectRetain();
    v11 = sub_1BC62C74C();
    swift_bridgeObjectRelease();
    if (v11 >= 41)
      break;
    v12 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v12 = v10 & 0xFFFFFFFFFFFFLL;
    if (v12)
      sub_1BC62C764();
    if (*((_QWORD *)v5 + 8))
      sub_1BC62C764();
    sub_1BC348D78((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    v7 += v8;
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      return v14;
    }
  }
  swift_bridgeObjectRelease();
  sub_1BC348D78((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  return v10;
}

uint64_t sub_1BC5B1CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t i;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];
  uint64_t v42;

  v42 = a5;
  v39 = a3;
  v40 = a4;
  v38 = a2;
  sub_1BC5B22C0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v10 = *(_QWORD *)(v37 - 8);
  v11 = MEMORY[0x1E0C80A78](v37);
  v36 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v33 = (uint64_t)&v32 - v13;
  v14 = *(_QWORD *)(a1 + 64);
  v34 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v35 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v20 = MEMORY[0x1E0DEE9D8];
  if (v17)
    goto LABEL_6;
LABEL_7:
  if (__OFADD__(v19++, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v19 >= v35)
    goto LABEL_33;
  v24 = *(_QWORD *)(v34 + 8 * v19);
  if (v24)
    goto LABEL_19;
  v25 = v19 + 1;
  if (v19 + 1 >= v35)
    goto LABEL_33;
  v24 = *(_QWORD *)(v34 + 8 * v25);
  if (v24)
  {
LABEL_18:
    v19 = v25;
LABEL_19:
    v17 = (v24 - 1) & v24;
    for (i = __clz(__rbit64(v24)) + (v19 << 6); ; i = v21 | (v19 << 6))
    {
      v26 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
      v27 = v26[1];
      v28 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
      v41[0] = *v26;
      v41[1] = v27;
      v41[2] = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC5AECC4(v41, v38, v39, v40, v42, (uint64_t)v9);
      if (v5)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v37) == 1)
      {
        result = sub_1BC348D78((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC5B22C0);
        if (!v17)
          goto LABEL_7;
      }
      else
      {
        v29 = v33;
        sub_1BC3AFDE0((uint64_t)v9, v33);
        sub_1BC3AFDE0(v29, v36);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_1BC3B5190(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
        v31 = *(_QWORD *)(v20 + 16);
        v30 = *(_QWORD *)(v20 + 24);
        if (v31 >= v30 >> 1)
          v20 = sub_1BC3B5190(v30 > 1, v31 + 1, 1, v20);
        *(_QWORD *)(v20 + 16) = v31 + 1;
        result = sub_1BC3AFDE0(v36, v20+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v31);
        if (!v17)
          goto LABEL_7;
      }
LABEL_6:
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v20;
  }
  v25 = v19 + 2;
  if (v19 + 2 >= v35)
  {
LABEL_33:
    swift_release();
    return v20;
  }
  v24 = *(_QWORD *)(v34 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v19 + 3;
  if (v19 + 3 >= v35)
    goto LABEL_33;
  v24 = *(_QWORD *)(v34 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v19 + 4;
  if (v19 + 4 >= v35)
    goto LABEL_33;
  v24 = *(_QWORD *)(v34 + 8 * v25);
  if (v24)
    goto LABEL_18;
  while (1)
  {
    v19 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v19 >= v35)
      goto LABEL_33;
    v24 = *(_QWORD *)(v34 + 8 * v19);
    ++v25;
    if (v24)
      goto LABEL_19;
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_1BC5B2040(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC5B2070()
{
  id v0;
  uint64_t v1;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v1;
}

void sub_1BC5B22C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C0B8)
  {
    type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C0B8);
  }
}

void destroy for IdentifierDisplayConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for IdentifierDisplayConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  v6 = v4;
  v7 = v5;
  return a1;
}

_QWORD *assignWithCopy for IdentifierDisplayConfiguration(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  v7 = (void *)a1[3];
  v8 = (void *)a2[3];
  a1[3] = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for IdentifierDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for IdentifierDisplayConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentifierDisplayConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentifierDisplayConfiguration()
{
  return &type metadata for IdentifierDisplayConfiguration;
}

unint64_t sub_1BC5B2514()
{
  unint64_t result;

  result = qword_1EF4382F8;
  if (!qword_1EF4382F8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC649F80, &type metadata for IdentifierDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF4382F8);
  }
  return result;
}

uint64_t sub_1BC5B25A4(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  id v29;
  void *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;
  char *v37;
  int v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  id v43;
  char *v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  id v60;
  int v61;
  char *v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  id v71;
  char *v72;
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  id v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  id v88;
  char *v89;
  objc_class *v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  id v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  objc_super v106;
  id v107;
  uint64_t v108[2];

  v98 = a2;
  v99 = a3;
  v5 = sub_1BC62BB34();
  v104 = *(_QWORD *)(v5 - 8);
  v105 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v102 = (char *)&v92 - v9;
  v10 = sub_1BC62A31C();
  v96 = *(_QWORD *)(v10 - 8);
  v97 = v10;
  MEMORY[0x1E0C80A78](v10);
  v95 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v92 - v16;
  v18 = sub_1BC62A760();
  v101 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v92 - v22;
  MEMORY[0x1E0C80A78](v24);
  v94 = (char *)&v92 - v25;
  *(_QWORD *)&v27 = MEMORY[0x1E0C80A78](v26).n128_u64[0];
  v100 = (char *)&v92 - v28;
  v29 = objc_msgSend(a1, sel_primarySeries, v27);
  if (!v29
    || (v30 = v29,
        v31 = (char *)objc_msgSend(v29, sel_dataSource),
        v103 = v3,
        v32 = v31,
        v30,
        v3 = v103,
        !v32))
  {
LABEL_8:
    sub_1BC62BB04();
    v42 = v3;
    v43 = a1;
    v44 = v42;
    v45 = v43;
    v46 = sub_1BC62BB28();
    v47 = sub_1BC62CAC4();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v103 = (char *)swift_slowAlloc();
      v108[0] = (uint64_t)v103;
      *(_DWORD *)v48 = 136446466;
      v49 = v44;
      v50 = objc_msgSend(v49, sel_description);
      v51 = sub_1BC62C680();
      v53 = v52;

      v107 = (id)sub_1BC4991F0(v51, v53, v108);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2082;
      v107 = objc_msgSend(v45, sel_primarySeries);
      sub_1BC5B3510();
      v54 = sub_1BC62C6E0();
      v107 = (id)sub_1BC4991F0(v54, v55, v108);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v46, v47, "Cannot update %{public}s with a graph view that does not have a primary series with a medical record chart data source. Primary series: %{public}s", (uint8_t *)v48, 0x16u);
      v56 = v103;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v56, -1, -1);
      MEMORY[0x1BCCF36A8](v48, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v7, v105);
  }
  v33 = v32;
  type metadata accessor for MedicalRecordChartDataSource();
  v34 = swift_dynamicCastClass();
  if (!v34)
  {

    goto LABEL_8;
  }
  v92 = v34;
  v35 = objc_msgSend(a1, sel_actualVisibleRange);
  v36 = objc_msgSend(v35, sel_minValue);
  if (!v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v17, 1, 1, v18);
    v14 = v17;
    goto LABEL_23;
  }
  v93 = v35;
  v37 = v33;
  v108[0] = (uint64_t)v36;
  v38 = swift_dynamicCast();
  v39 = v101;
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56);
  v40(v17, v38 ^ 1u, 1, v18);
  v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  if (v41(v17, 1, v18) == 1)
  {
    v14 = v17;
LABEL_22:
    v33 = v37;
    v3 = v103;
    v35 = v93;
LABEL_23:
    sub_1BC377E3C((uint64_t)v14, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v69 = v102;
    sub_1BC62BB04();
    v70 = v3;
    v71 = v35;
    v72 = v70;
    v73 = v71;
    v74 = sub_1BC62BB28();
    v75 = sub_1BC62CAC4();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = swift_slowAlloc();
      v77 = swift_slowAlloc();
      v108[0] = v77;
      *(_DWORD *)v76 = 136446466;
      v78 = v72;
      v79 = objc_msgSend(v78, sel_description);
      v80 = sub_1BC62C680();
      v103 = v33;
      v82 = v81;

      v107 = (id)sub_1BC4991F0(v80, v82, v108);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v76 + 12) = 2082;
      v83 = v73;
      v84 = objc_msgSend(v83, sel_description);
      v85 = sub_1BC62C680();
      v87 = v86;

      v107 = (id)sub_1BC4991F0(v85, v87, v108);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v74, v75, "Cannot update %{public}s without a date-bounded visible range, have: %{public}s", (uint8_t *)v76, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v77, -1, -1);
      MEMORY[0x1BCCF36A8](v76, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v102, v105);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v69, v105);
    }
  }
  v58 = v17;
  v59 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  v59(v100, v58, v18);
  v60 = objc_msgSend(v93, sel_maxValue);
  if (!v60)
  {
    v40(v14, 1, 1, v18);
    goto LABEL_21;
  }
  v108[0] = (uint64_t)v60;
  v61 = swift_dynamicCast();
  v40(v14, v61 ^ 1u, 1, v18);
  if (v41(v14, 1, v18) == 1)
  {
LABEL_21:
    (*(void (**)(char *, uint64_t))(v39 + 8))(v100, v18);
    goto LABEL_22;
  }
  v62 = v94;
  v59(v94, v14, v18);
  v63 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v63(v23, v100, v18);
  v63(v20, v62, v18);
  v64 = v95;
  v65 = sub_1BC62A2F8();
  v66 = *(_QWORD *)(v92 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets);
  if (v66)
  {
    MEMORY[0x1E0C80A78](v65);
    *(&v92 - 2) = (uint64_t)v64;
    swift_bridgeObjectRetain();
    v67 = sub_1BC3D19CC(sub_1BC4F7868, (uint64_t)(&v92 - 4), v66);
    if (v67 >> 62)
      v68 = sub_1BC62D3B8();
    else
      v68 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v68 = 0;
  }
  v88 = v103;
  v89 = &v103[OBJC_IVAR____TtC15HealthRecordsUI37SingleValueCurrentValueViewDataSource_lastCachedNumberOfChartPoints];
  *(_QWORD *)v89 = v68;
  v89[8] = 0;
  v90 = (objc_class *)type metadata accessor for SingleValueCurrentValueViewDataSource();
  v106.receiver = v88;
  v106.super_class = v90;
  objc_msgSendSuper2(&v106, sel_updateDataSourceWithGraphView_displayType_timeScope_, a1, v98, v99);

  (*(void (**)(char *, uint64_t))(v96 + 8))(v64, v97);
  v91 = *(void (**)(char *, uint64_t))(v101 + 8);
  v91(v62, v18);
  return ((uint64_t (*)(char *, uint64_t))v91)(v100, v18);
}

id SingleValueCurrentValueViewDataSource.__allocating_init(dateCache:healthStore:selectedRangeFormatter:)(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(v3), sel_initWithDateCache_healthStore_selectedRangeFormatter_, a1, a2, a3);

  return v7;
}

id SingleValueCurrentValueViewDataSource.init(dateCache:healthStore:selectedRangeFormatter:)(void *a1, void *a2, void *a3)
{
  char *v3;
  char *v7;
  id v8;
  objc_super v10;

  v7 = &v3[OBJC_IVAR____TtC15HealthRecordsUI37SingleValueCurrentValueViewDataSource_lastCachedNumberOfChartPoints];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for SingleValueCurrentValueViewDataSource();
  v8 = objc_msgSendSuper2(&v10, sel_initWithDateCache_healthStore_selectedRangeFormatter_, a1, a2, a3);

  return v8;
}

id SingleValueCurrentValueViewDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SingleValueCurrentValueViewDataSource.init()()
{
  char *v0;
  char *v1;
  objc_super v3;

  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI37SingleValueCurrentValueViewDataSource_lastCachedNumberOfChartPoints];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SingleValueCurrentValueViewDataSource();
  return objc_msgSendSuper2(&v3, sel_init);
}

id SingleValueCurrentValueViewDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueCurrentValueViewDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC5B31A4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t inited;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  _BYTE v25[112];

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v25[-v2];
  v4 = 0;
  if ((v0[OBJC_IVAR____TtC15HealthRecordsUI37SingleValueCurrentValueViewDataSource_lastCachedNumberOfChartPoints + 8] & 1) == 0)
  {
    v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI37SingleValueCurrentValueViewDataSource_lastCachedNumberOfChartPoints];
    v6 = objc_msgSend((id)objc_opt_self(), sel_hk_chartCurrentValueKindFont);
    sub_1BC357158(0, (unint64_t *)&qword_1EF4383B0, (uint64_t (*)(uint64_t))sub_1BC34B5A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
    v8 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1140];
    v9 = v8;
    v10 = objc_msgSend(v0, sel_titleColor);
    v11 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
    *(_QWORD *)(inited + 40) = v10;
    v12 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 64) = v11;
    *(_QWORD *)(inited + 72) = v12;
    *(_QWORD *)(inited + 104) = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    *(_QWORD *)(inited + 80) = v6;
    v13 = v12;
    v14 = v6;
    sub_1BC35B6B4(inited);
    v15 = sub_1BC62A820();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v3, 1, 1, v15);
    if (qword_1EF428550 != -1)
      swift_once();
    v16 = (void *)qword_1EF42F698;
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    v18 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v17 + 16) = xmmword_1BC639590;
    v19 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v17 + 56) = v18;
    *(_QWORD *)(v17 + 64) = v19;
    *(_QWORD *)(v17 + 32) = v5;
    v20 = v16;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    sub_1BC62C6A4();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC377E3C((uint64_t)v3, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    v21 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v22 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BC34B608();
    v23 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v21, sel_initWithString_attributes_, v22, v23);

  }
  return v4;
}

void sub_1BC5B3510()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438308)
  {
    sub_1BC34B6A0(255, &qword_1EF438310);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438308);
  }
}

uint64_t type metadata accessor for SingleValueCurrentValueViewDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SingleValueCurrentValueViewDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SingleValueCurrentValueViewDataSource.title(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t MedicalRecordTimelinePanelHeaderItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC5B35E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  _QWORD v8[2];

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*(id *)(v0 + 48), sel_UUID, v3);
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  strcpy((char *)v8, "PanelHeader.");
  BYTE5(v8[1]) = 0;
  HIWORD(v8[1]) = -5120;
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v8[0];
}

void sub_1BC5B36D8()
{
  uint64_t v0;
  id v1;

  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + 48);
  sub_1BC62CEC0();

}

uint64_t MedicalRecordTimelinePanelHeaderItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelinePanelHeaderItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5B37B8()
{
  uint64_t v0;
  id v1;

  sub_1BC62D670();
  sub_1BC62C740();
  v1 = *(id *)(v0 + 48);
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

uint64_t sub_1BC5B3810()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1BC62D670();
  sub_1BC62C740();
  v2 = *(id *)(v1 + 48);
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

void sub_1BC5B386C()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1BC62C740();
  v2 = *(id *)(v1 + 48);
  sub_1BC62CEC0();

}

uint64_t sub_1BC5B38BC()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  sub_1BC62D670();
  v1 = *v0;
  sub_1BC62C740();
  v2 = *(id *)(v1 + 48);
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

uint64_t sub_1BC5B3914()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC5B3944()
{
  return sub_1BC5B35E8();
}

uint64_t sub_1BC5B3964(_QWORD **a1, _QWORD **a2)
{
  return _s15HealthRecordsUI36MedicalRecordTimelinePanelHeaderItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

id sub_1BC5B3970()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;
  uint64_t v14;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___titleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v6 = (void *)sub_1BC62CDDC();
    objc_msgSend(v5, sel_setFont_, v6);

    v7 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v13 = sub_1BC62C680();
    v14 = v8;
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    v3 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v9, v13, v14);

    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1BC5B3B68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;
  uint64_t v14;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___subtitleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___subtitleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v6 = (void *)sub_1BC62CDDC();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    v7 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v13 = sub_1BC62C680();
    v14 = v8;
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    v3 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v9, v13, v14);

    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

uint64_t sub_1BC5B3D68(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC397AF4(a1, (uint64_t)v5, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item;
  swift_beginAccess();
  sub_1BC595D58((uint64_t)v5, v3, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  swift_endAccess();
  sub_1BC5B3E08();
  return sub_1BC384EB4((uint64_t)v5, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC5B3E08()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t result;
  _QWORD v15[2];
  _QWORD v16[5];

  sub_1BC384E68(0, &qword_1EF42C0C8, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v15 - v2;
  v4 = (uint64_t)&v0[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item];
  swift_beginAccess();
  sub_1BC397AF4(v4, (uint64_t)v16, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  if (v16[3])
  {
    sub_1BC37AE0C();
    type metadata accessor for MedicalRecordTimelinePanelHeaderItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BC62BC60();
      v5 = sub_1BC62BC78();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 0, 1, v5);
      MEMORY[0x1BCCF1FE0](v3);
      v6 = sub_1BC5B3970();
      swift_bridgeObjectRetain();
      v7 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setText_, v7);

      v8 = sub_1BC5B3B68();
      swift_bridgeObjectRetain();
      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setText_, v9);

      v10 = (void *)objc_opt_self();
      v11 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_customConstraints;
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
      swift_bridgeObjectRetain();
      v12 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_deactivateConstraints_, v12);

      *(_QWORD *)&v0[v11] = sub_1BC5B4F7C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v13 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_activateConstraints_, v13);

      objc_msgSend(v0, sel_setNeedsLayout);
      return swift_release();
    }
  }
  else
  {
    sub_1BC384EB4((uint64_t)v16, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  }
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v15[0] = 0xD000000000000026;
  v15[1] = 0x80000001BC664320;
  sub_1BC397AF4(v4, (uint64_t)v16, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  sub_1BC62C6F8();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  result = sub_1BC62D394();
  __break(1u);
  return result;
}

uint64_t sub_1BC5B4168@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item;
  swift_beginAccess();
  return sub_1BC397AF4(v3, a1, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC5B41C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item;
  swift_beginAccess();
  sub_1BC595D58(a1, v3, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  swift_endAccess();
  sub_1BC5B3E08();
  return sub_1BC384EB4(a1, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t (*sub_1BC5B425C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5B42A4;
}

uint64_t sub_1BC5B42A4(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC5B3E08);
}

uint64_t sub_1BC5B42B0(uint64_t a1, _QWORD *a2)
{
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = (void (*)(uint64_t))MEMORY[0x1E0D2AAA0];
  sub_1BC384E68(0, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  sub_1BC397AF4(a1, (uint64_t)&v10 - v6, &qword_1EF42BC08, v4);
  v8 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext;
  swift_beginAccess();
  sub_1BC595D58((uint64_t)v7, v8, &qword_1EF42BC08, v4);
  swift_endAccess();
  sub_1BC5B4398();
  return sub_1BC384EB4((uint64_t)v7, &qword_1EF42BC08, v4);
}

uint64_t sub_1BC5B4398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v27 = sub_1BC62A970();
  v1 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void (*)(uint64_t))MEMORY[0x1E0D2AAA0];
  sub_1BC384E68(0, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  v8 = sub_1BC62ADD8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v0;
  v12 = v0 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext;
  swift_beginAccess();
  sub_1BC397AF4(v12, (uint64_t)v7, &qword_1EF42BC08, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1BC384EB4((uint64_t)v7, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  v14 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v26 = v11;
  v14(v11, v7, v8);
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_1BC62D1D8();
  v15 = sub_1BC62C680();
  v17 = v16;
  swift_bridgeObjectRelease();
  v30 = v15;
  v31 = v17;
  sub_1BC62C764();
  sub_1BC62ADCC();
  v18 = sub_1BC62A964();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v27);
  v29 = v18;
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v20 = v30;
  v19 = v31;
  v21 = sub_1BC5B3970();
  v30 = v20;
  v31 = v19;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  v22 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setAccessibilityIdentifier_, v22);

  v23 = sub_1BC5B3B68();
  v30 = v20;
  v31 = v19;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setAccessibilityIdentifier_, v24);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v26, v8);
}

uint64_t sub_1BC5B46D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext;
  swift_beginAccess();
  return sub_1BC397AF4(v3, a1, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
}

uint64_t sub_1BC5B4730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(uint64_t);

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext;
  swift_beginAccess();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0D2AAA0];
  sub_1BC595D58(a1, v3, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  swift_endAccess();
  sub_1BC5B4398();
  return sub_1BC384EB4(a1, &qword_1EF42BC08, v4);
}

uint64_t (*sub_1BC5B47C4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5B480C;
}

uint64_t sub_1BC5B480C(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC5B4398);
}

id MedicalRecordTimelinePanelHeaderItemCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicalRecordTimelinePanelHeaderItemCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_customConstraints] = MEMORY[0x1E0DEE9D8];
  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext];
  v11 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell();
  v12 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC5B4B38();

  return v12;
}

id sub_1BC5B4B38()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = sub_1BC5B3970();
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = objc_msgSend(v0, sel_contentView);
  v4 = sub_1BC5B3B68();
  objc_msgSend(v3, sel_addSubview_, v4);

  v5 = (void *)objc_opt_self();
  v6 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_customConstraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_deactivateConstraints_, v7);

  *(_QWORD *)&v0[v6] = sub_1BC5B4F7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_activateConstraints_, v8);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

void sub_1BC5B4C9C(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  id v6;
  char v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  objc_super v12;

  v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell();
  objc_msgSendSuper2(&v12, sel_traitCollectionDidChange_, a1);
  v4 = objc_msgSend(v2, sel_traitCollection);
  v5 = v4;
  if (!a1)
  {
    if (!v4)
      return;

    goto LABEL_7;
  }
  if (!v4
    || (sub_1BC34B6A0(0, &qword_1ED6A58F8),
        v6 = a1,
        v7 = sub_1BC62CEB4(),
        v6,
        v6,
        v5,
        (v7 & 1) == 0))
  {
LABEL_7:
    v8 = (void *)objc_opt_self();
    v9 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_customConstraints;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_deactivateConstraints_, v10);

    *(_QWORD *)&v2[v9] = sub_1BC5B4F7C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_activateConstraints_, v11);

    objc_msgSend(v2, sel_setNeedsLayout);
  }
}

id sub_1BC5B4E90()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = (void *)objc_opt_self();
  v2 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_customConstraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  *(_QWORD *)&v0[v2] = sub_1BC5B4F7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v4);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1BC5B4F7C()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;

  sub_1BC34D844();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC63B440;
  v2 = sub_1BC5B3970();
  v3 = objc_msgSend(v2, sel_topAnchor);

  v4 = objc_msgSend(v0, sel_contentView);
  v5 = objc_msgSend(v4, sel_topAnchor);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 4.0);
  *(_QWORD *)(v1 + 32) = v6;
  v7 = sub_1BC5B3970();
  v8 = objc_msgSend(v7, sel_leadingAnchor);

  v9 = objc_msgSend(v0, sel_contentView);
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = objc_msgSend(v8, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v10, 2.0);
  *(_QWORD *)(v1 + 40) = v11;
  v12 = objc_msgSend(v0, sel_contentView);
  v13 = objc_msgSend(v12, sel_trailingAnchor);

  v14 = sub_1BC5B3970();
  v15 = objc_msgSend(v14, sel_trailingAnchor);

  v16 = objc_msgSend(v13, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v15, 2.0);
  *(_QWORD *)(v1 + 48) = v16;
  v17 = sub_1BC5B3B68();
  v18 = objc_msgSend(v17, sel_topAnchor);

  v19 = sub_1BC5B3970();
  v20 = objc_msgSend(v19, sel_bottomAnchor);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
  *(_QWORD *)(v1 + 56) = v21;
  v22 = sub_1BC5B3B68();
  v23 = objc_msgSend(v22, sel_leadingAnchor);

  v24 = sub_1BC5B3970();
  v25 = objc_msgSend(v24, sel_leadingAnchor);

  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
  *(_QWORD *)(v1 + 64) = v26;
  v27 = sub_1BC5B3B68();
  v28 = objc_msgSend(v27, sel_trailingAnchor);

  v29 = sub_1BC5B3970();
  v30 = objc_msgSend(v29, sel_trailingAnchor);

  v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v30);
  *(_QWORD *)(v1 + 72) = v31;
  v32 = objc_msgSend(v0, sel_contentView);
  v33 = objc_msgSend(v32, sel_bottomAnchor);

  v34 = sub_1BC5B3B68();
  v35 = objc_msgSend(v34, sel_bottomAnchor);

  v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v35, 8.0);
  *(_QWORD *)(v1 + 80) = v36;
  sub_1BC62C890();
  return v1;
}

id MedicalRecordTimelinePanelHeaderItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s15HealthRecordsUI36MedicalRecordTimelinePanelHeaderItemC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;

  v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v4 || (v5 = sub_1BC62D574(), result = 0, (v5 & 1) != 0))
  {
    if (a1[4] == a2[4] && a1[5] == a2[5])
      return 1;
    else
      return sub_1BC62D574();
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell()
{
  uint64_t result;

  result = qword_1EF438538;
  if (!qword_1EF438538)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BC5B54B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4383F0;
  if (!qword_1EF4383F0)
  {
    v1 = type metadata accessor for MedicalRecordTimelinePanelHeaderItem();
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordTimelinePanelHeaderItem, v1);
    atomic_store(result, (unint64_t *)&qword_1EF4383F0);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelinePanelHeaderItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC5B5514@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item;
  swift_beginAccess();
  return sub_1BC397AF4(v3, a2, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC5B557C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext;
  swift_beginAccess();
  return sub_1BC397AF4(v3, a2, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
}

uint64_t method lookup function for MedicalRecordTimelinePanelHeaderItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_1BC5B5614()
{
  return type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell();
}

void sub_1BC5B561C()
{
  unint64_t v0;

  sub_1BC384E68(319, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MedicalRecordTimelinePanelHeaderItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.sectionContext.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.sectionContext.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.sectionContext.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.commonInit()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.updateFonts()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.setUpConstraints()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

unint64_t static ClinicalSharingFeedItemIdentifierFactory.makeComponentForPrefix()()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  return 0xD000000000000025;
}

uint64_t static ClinicalSharingFeedItemIdentifierFactory.make(for:profile:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = MEMORY[0x1E0C80A78](v2).n128_u64[0];
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_identifier, v4);
  sub_1BC62A79C();

  v8 = sub_1BC5B58D8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8;
}

uint64_t sub_1BC5B58D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v14;
  unint64_t v15;

  v0 = sub_1BC62A7B4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A53C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC6395A0;
  v5 = (void *)sub_1BC62AA84();
  v14 = 0;
  v15 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  if (v5)
  {
    v14 = 0x656C69666F72505BLL;
    v15 = 0xE90000000000003ALL;
    v6 = v5;
    v7 = objc_msgSend(v6, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v9 = v14;
    v8 = v15;
  }
  else
  {
    v8 = 0x80000001BC655390;
    v9 = 0xD000000000000013;
  }
  v14 = v9;
  v15 = v8;
  sub_1BC62C764();

  v10 = v15;
  *(_QWORD *)(v4 + 32) = v14;
  *(_QWORD *)(v4 + 40) = v10;
  v14 = 0;
  v15 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v14 = 0xD00000000000002BLL;
  v15 = 0x80000001BC666040;
  sub_1BC4997C8();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v11 = v15;
  *(_QWORD *)(v4 + 48) = v14;
  *(_QWORD *)(v4 + 56) = v11;
  v14 = v4;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v12 = sub_1BC62C5D8();
  swift_bridgeObjectRelease();
  return v12;
}

ValueMetadata *type metadata accessor for ClinicalSharingFeedItemIdentifierFactory()
{
  return &type metadata for ClinicalSharingFeedItemIdentifierFactory;
}

uint64_t static AccountIconViewError.== infix(_:_:)()
{
  return 1;
}

uint64_t AccountIconViewError.hash(into:)()
{
  return sub_1BC62D67C();
}

uint64_t AccountIconViewError.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t static AccountIconViewData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if ((sub_1BC62A790() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for AccountIconViewData(0) + 20);
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (_QWORD *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1])
    return 1;
  else
    return sub_1BC62D574();
}

uint64_t type metadata accessor for AccountIconViewData(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF4385D8);
}

uint64_t sub_1BC5B5C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if ((sub_1BC62A790() & 1) == 0)
    return 0;
  v6 = *(int *)(a3 + 20);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1])
    return 1;
  else
    return sub_1BC62D574();
}

__n128 sub_1BC5B5CCC@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  __n128 *v3;
  unint64_t v4;
  unsigned __int8 v5;
  __n128 result;

  v3 = (__n128 *)(v1 + qword_1EF438548);
  swift_beginAccess();
  v4 = v3[1].n128_u64[0];
  v5 = v3[1].n128_u8[8];
  result = *v3;
  *a1 = *v3;
  a1[1].n128_u64[0] = v4;
  a1[1].n128_u8[8] = v5;
  return result;
}

__n128 sub_1BC5B5D28(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  v4 = (__n128 *)(v1 + qword_1EF438548);
  swift_beginAccess();
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u8[8] = v3;
  return result;
}

uint64_t (*sub_1BC5B5D90())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL sub_1BC5B5DD4()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(v0 + qword_1EF438550), sel_image);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

id sub_1BC5B5E20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id result;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  int v33;
  void (*v34)();
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 *v55;
  uint64_t v56;
  char v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  char v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;

  v3 = type metadata accessor for AccountIconViewData(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v64 = (uint64_t)&v63 - v8;
  sub_1BC5B6498();
  v69 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v69 + 64);
  v11 = MEMORY[0x1E0C80A78](v9);
  v12 = MEMORY[0x1E0C80A78](v11);
  v72 = (char *)&v63 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v68 = (uint64_t)&v63 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v67 = (uint64_t)&v63 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v63 - v18;
  sub_1BC5B64EC();
  v21 = v20;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(), sel_isMainThread);
  if ((_DWORD)result)
  {
    v66 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    v65 = v7;
    v71 = v1;
    v25 = v1 + qword_1EF438560;
    swift_beginAccess();
    v26 = (uint64_t)&v23[*(int *)(v21 + 48)];
    sub_1BC35EBE0(v25, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BC5B6498);
    v70 = a1;
    sub_1BC35EBE0(a1, v26, (uint64_t (*)(_QWORD))sub_1BC5B6498);
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    v28 = v3;
    if (v27((uint64_t)v23, 1, v3) == 1)
    {
      v29 = v27(v26, 1, v3);
      v30 = (uint64_t)v72;
      if (v29 == 1)
      {
LABEL_4:
        v31 = (uint64_t (*)(_QWORD))sub_1BC5B6498;
        v32 = (uint64_t)v23;
        return (id)sub_1BC348D78(v32, v31);
      }
      v34 = sub_1BC5B64EC;
      goto LABEL_14;
    }
    sub_1BC35EBE0((uint64_t)v23, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC5B6498);
    v33 = v27(v26, 1, v3);
    v30 = (uint64_t)v72;
    if (v33 == 1)
    {
      v34 = sub_1BC5B64EC;
LABEL_13:
      sub_1BC348D78((uint64_t)v19, type metadata accessor for AccountIconViewData);
LABEL_14:
      v40 = v70;
      sub_1BC348D78((uint64_t)v23, (uint64_t (*)(_QWORD))v34);
      goto LABEL_15;
    }
    v35 = v64;
    sub_1BC375724(v26, v64, type metadata accessor for AccountIconViewData);
    if ((sub_1BC62A790() & 1) == 0)
    {
      sub_1BC348D78(v35, type metadata accessor for AccountIconViewData);
      v34 = sub_1BC5B6498;
      goto LABEL_13;
    }
    v36 = *(int *)(v28 + 20);
    v37 = *(_QWORD *)&v19[v36];
    v38 = *(_QWORD *)&v19[v36 + 8];
    v39 = (_QWORD *)(v35 + v36);
    if (v37 == *v39 && v38 == v39[1])
    {
      sub_1BC348D78(v35, type metadata accessor for AccountIconViewData);
      sub_1BC348D78((uint64_t)v19, type metadata accessor for AccountIconViewData);
      goto LABEL_4;
    }
    v62 = sub_1BC62D574();
    sub_1BC348D78(v35, type metadata accessor for AccountIconViewData);
    sub_1BC348D78((uint64_t)v19, type metadata accessor for AccountIconViewData);
    result = (id)sub_1BC348D78((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BC5B6498);
    v40 = v70;
    if ((v62 & 1) == 0)
    {
LABEL_15:
      v41 = v67;
      sub_1BC35EBE0(v40, v67, (uint64_t (*)(_QWORD))sub_1BC5B6498);
      swift_beginAccess();
      sub_1BC5B654C(v41, v25);
      swift_endAccess();
      v42 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v43 = v28;
      v44 = v68;
      sub_1BC35EBE0(v40, v68, (uint64_t (*)(_QWORD))sub_1BC5B6498);
      sub_1BC35EBE0(v44, v30, (uint64_t (*)(_QWORD))sub_1BC5B6498);
      v45 = (*(unsigned __int8 *)(v69 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      v46 = swift_allocObject();
      *(_QWORD *)(v46 + 16) = v42;
      sub_1BC375724(v44, v46 + v45, (uint64_t (*)(_QWORD))sub_1BC5B6498);
      v47 = v66;
      sub_1BC35EBE0(v25, v66, (uint64_t (*)(_QWORD))sub_1BC5B6498);
      if (v27(v47, 1, v43) == 1)
      {
        swift_retain();
        sub_1BC348D78(v47, (uint64_t (*)(_QWORD))sub_1BC5B6498);
        v77 = 0u;
        v78 = 0u;
        v76 = 0u;
        sub_1BC5B65B4((uint64_t *)&v76, v42, v30);
        swift_release();
        swift_release();
        v32 = v30;
        v31 = (uint64_t (*)(_QWORD))sub_1BC5B6498;
      }
      else
      {
        v48 = (uint64_t)v65;
        sub_1BC375724(v47, (uint64_t)v65, type metadata accessor for AccountIconViewData);
        v49 = v30;
        v50 = qword_1EF438568;
        v51 = v71;
        v52 = (uint64_t *)(v48 + *(int *)(v43 + 20));
        v53 = *v52;
        v54 = v52[1];
        v55 = (__int128 *)(v71 + qword_1EF438548);
        swift_beginAccess();
        v56 = *((_QWORD *)v55 + 2);
        v57 = *((_BYTE *)v55 + 24);
        v73 = *v55;
        v74 = v56;
        v75 = v57;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BC512C94(v53, v54, (uint64_t)&v73, (uint64_t)&v76);
        swift_release();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v76 = v76;
        *(_QWORD *)&v78 = v78;
        v58 = *((id *)&v78 + 1);
        sub_1BC5B65B4((uint64_t *)&v76, v42, v49);

        swift_release();
        sub_1BC348D78(v49, (uint64_t (*)(_QWORD))sub_1BC5B6498);
        v59 = *(_QWORD *)(v51 + v50);
        v60 = *((_QWORD *)v55 + 2);
        v61 = *((_BYTE *)v55 + 24);
        v76 = *v55;
        *(_QWORD *)&v77 = v60;
        BYTE8(v77) = v61;
        swift_retain();
        swift_retain();
        sub_1BC5145D4(v48, (uint64_t *)&v76, v59, sub_1BC5B6A7C, v46);

        swift_release();
        swift_release_n();
        v32 = v48;
        v31 = type metadata accessor for AccountIconViewData;
      }
      return (id)sub_1BC348D78(v32, v31);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC5B6498()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42B7D0)
  {
    type metadata accessor for AccountIconViewData(255);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42B7D0);
  }
}

void sub_1BC5B64EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF438558)
  {
    sub_1BC5B6498();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF438558);
  }
}

uint64_t sub_1BC5B654C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC5B6498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC5B6590()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC5B65B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  void (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  BOOL v35;
  char *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;

  v53 = a3;
  v5 = type metadata accessor for AccountIconViewData(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5B64EC();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5B6498();
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v46 - v17;
  v20 = *a1;
  v19 = a1[1];
  v51 = a1[2];
  v52 = v19;
  v21 = a1[3];
  v22 = a1[4];
  v23 = (void *)a1[5];
  v49 = v22;
  v50 = v21;
  swift_beginAccess();
  v24 = MEMORY[0x1BCCF37A4](a2 + 16);
  if (v24)
  {
    v25 = (char *)v24;
    v47 = v20;
    v48 = v23;
    v26 = v24 + qword_1EF438560;
    swift_beginAccess();
    sub_1BC35EBE0(v26, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC5B6498);
    v27 = (uint64_t)&v12[*(int *)(v10 + 48)];
    sub_1BC35EBE0((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BC5B6498);
    sub_1BC35EBE0(v53, v27, (uint64_t (*)(_QWORD))sub_1BC5B6498);
    v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v28((uint64_t)v12, 1, v5) == 1)
    {
      sub_1BC348D78((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC5B6498);
      if (v28(v27, 1, v5) == 1)
      {
LABEL_15:
        sub_1BC348D78((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BC5B6498);
        v36 = &v25[qword_1EF438570];
        v37 = *(void **)&v25[qword_1EF438570 + 40];
        v38 = v52;
        *(_QWORD *)v36 = v47;
        *((_QWORD *)v36 + 1) = v38;
        v39 = v50;
        *((_QWORD *)v36 + 2) = v51;
        *((_QWORD *)v36 + 3) = v39;
        v40 = v48;
        *((_QWORD *)v36 + 4) = v49;
        *((_QWORD *)v36 + 5) = v40;
        v41 = v40;

        if (!objc_msgSend((id)objc_opt_self(), sel_isMainThread))
        {
          __break(1u);
          return;
        }
        v42 = *(void **)&v25[qword_1EF438550];
        v43 = (id)*((_QWORD *)v36 + 5);
        if (v43)
        {
          if ((*v36 & 1) == 0)
          {
            v44 = *((_QWORD *)v36 + 3);
            if ((v36[32] & 1) != 0)
              v44 = 0x4008000000000000;
            v43 = v43;
            v45 = 0;
            goto LABEL_25;
          }
          v43 = v43;
        }
        v44 = 0;
        v45 = 2;
LABEL_25:
        objc_msgSend(v42, sel_setImage_, v43);
        v54 = v44;
        v55 = v45;
        UIImageView.applyStyle(_:)((uint64_t)&v54);
        sub_1BC37859C((id)v44, v45);

        return;
      }
    }
    else
    {
      sub_1BC35EBE0((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC5B6498);
      if (v28(v27, 1, v5) != 1)
      {
        sub_1BC375724(v27, (uint64_t)v8, type metadata accessor for AccountIconViewData);
        if ((sub_1BC62A790() & 1) != 0)
        {
          v31 = *(int *)(v5 + 20);
          v32 = *(_QWORD *)&v16[v31];
          v33 = *(_QWORD *)&v16[v31 + 8];
          v34 = &v8[v31];
          v35 = v32 == *(_QWORD *)v34 && v33 == *((_QWORD *)v34 + 1);
          if (v35 || (sub_1BC62D574() & 1) != 0)
          {
            sub_1BC348D78((uint64_t)v8, type metadata accessor for AccountIconViewData);
            sub_1BC348D78((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC5B6498);
            sub_1BC348D78((uint64_t)v16, type metadata accessor for AccountIconViewData);
            goto LABEL_15;
          }
        }
        sub_1BC348D78((uint64_t)v8, type metadata accessor for AccountIconViewData);
        sub_1BC348D78((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC5B6498);
        sub_1BC348D78((uint64_t)v16, type metadata accessor for AccountIconViewData);
        v30 = (uint64_t)v12;
        v29 = sub_1BC5B6498;
LABEL_22:
        sub_1BC348D78(v30, (uint64_t (*)(_QWORD))v29);

        return;
      }
      sub_1BC348D78((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC5B6498);
      sub_1BC348D78((uint64_t)v16, type metadata accessor for AccountIconViewData);
    }
    v29 = sub_1BC5B64EC;
    v30 = (uint64_t)v12;
    goto LABEL_22;
  }
}

uint64_t sub_1BC5B69CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BC5B6498();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = type metadata accessor for AccountIconViewData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v0 + v3, 1, v4))
  {
    v5 = sub_1BC62A7B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_1BC5B6A7C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BC5B6498();
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  sub_1BC5B65B4(a1, *(_QWORD *)(v1 + 16), v1 + ((v4 + 24) & ~v4));
}

void sub_1BC5B6ABC(uint64_t a1, void (*a2)(_QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  os_log_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  _QWORD v31[3];
  uint8_t *v32;
  uint64_t v33;
  int v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[6];
  uint64_t v39;

  v4 = sub_1BC62BB34();
  v5 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v13 = *(void **)(a1 + 40);
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v36 = v6;
    v37 = v5;
    v38[0] = v9;
    v15 = v9;
    sub_1BC35E44C();
    swift_willThrowTypedImpl();
    sub_1BC62BB04();
    v16 = v9;
    v17 = v9;
    v18 = sub_1BC62BB28();
    v19 = sub_1BC62CAC4();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v35 = v18;
      v21 = swift_slowAlloc();
      v34 = v20;
      v22 = (uint8_t *)v21;
      v33 = swift_slowAlloc();
      v39 = v33;
      v32 = v22;
      *(_DWORD *)v22 = 136446210;
      v31[1] = v22 + 4;
      v38[0] = v9;
      v23 = v9;
      sub_1BC62D5D4();
      v24 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v31[2] = MEMORY[0x1E0DEE9B8] + 8;
      v25 = sub_1BC62C6F8();
      v38[0] = sub_1BC4991F0(v25, v26, &v39);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      sub_1BC407FDC(v9, v10, v12, v11, v14, v13, 1);
      sub_1BC407FDC(v9, v10, v12, v11, v14, v13, 1);
      v27 = v35;
      v28 = v32;
      _os_log_impl(&dword_1BC30A000, v35, (os_log_type_t)v34, "Error retrieving logo for account: %{public}s", v32, 0xCu);
      v29 = v33;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v29, -1, -1);
      MEMORY[0x1BCCF36A8](v28, -1, -1);

      sub_1BC407FDC(v9, v10, v12, v11, v14, v13, 1);
    }
    else
    {
      sub_1BC407FDC(v9, v10, v12, v11, v14, v13, 1);
      sub_1BC407FDC(v9, v10, v12, v11, v14, v13, 1);

    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
  }
  else
  {
    v38[0] = *(_QWORD *)a1 & 1;
    v38[1] = v10;
    v38[2] = v12;
    v38[3] = v11;
    v38[4] = v14 & 1;
    v38[5] = v13;
    v30 = v13;
    a2(v38);
    sub_1BC407FDC(v9, v10, v12, v11, v14, v13, 0);
  }
}

void sub_1BC5B6E00()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v1 = *(void **)&v0[qword_1EF438550];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v2);

  v3 = (void *)objc_opt_self();
  sub_1BC34D844();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC63A3D0;
  v5 = objc_msgSend(v1, sel_leadingAnchor);
  v6 = objc_msgSend(v0, sel_leadingAnchor);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(v1, sel_trailingAnchor);
  v9 = objc_msgSend(v0, sel_trailingAnchor);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(v1, sel_topAnchor);
  v12 = objc_msgSend(v0, sel_topAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(v4 + 48) = v13;
  v14 = objc_msgSend(v1, sel_bottomAnchor);
  v15 = objc_msgSend(v0, sel_bottomAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v4 + 56) = v16;
  sub_1BC62C890();
  sub_1BC34D89C();
  v17 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v17);

}

void sub_1BC5B7098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  v1 = v0 + qword_1EF438570;
  if (!*(_QWORD *)(v0 + qword_1EF438570 + 40) || (*(_BYTE *)v1 & 1) != 0)
  {
    v2 = 0;
    v3 = 2;
  }
  else
  {
    if ((*(_BYTE *)(v1 + 32) & 1) != 0)
      v2 = 0x4008000000000000;
    else
      v2 = *(_QWORD *)(v1 + 24);
    v3 = 0;
  }
  v4 = v2;
  v5 = v3;
  UIImageView.applyStyle(_:)((uint64_t)&v4);
  sub_1BC37859C((id)v2, v3);
}

void sub_1BC5B7144(void *a1)
{
  char *v1;
  char *v2;
  double v4;
  double v5;
  id v6;
  double v7;
  double v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  objc_super v14;

  v2 = v1;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for AccountIconView(0);
  objc_msgSendSuper2(&v14, sel_traitCollectionDidChange_, a1);
  if (a1)
  {
    objc_msgSend(a1, sel_displayScale);
    v5 = v4;
  }
  else
  {
    v5 = 0.0;
  }
  v6 = objc_msgSend(v2, sel_traitCollection);
  objc_msgSend(v6, sel_displayScale);
  v8 = v7;

  if (!a1 || v5 != v8)
  {
    v9 = &v2[qword_1EF438570];
    if (!*(_QWORD *)&v2[qword_1EF438570 + 40] || (*v9 & 1) != 0)
    {
      v10 = 0;
      v11 = 2;
    }
    else
    {
      v10 = *((_QWORD *)v9 + 3);
      v11 = 0;
      if ((v9[32] & 1) != 0)
        v10 = 0x4008000000000000;
    }
    v12 = v10;
    v13 = v11;
    UIImageView.applyStyle(_:)((uint64_t)&v12);
    sub_1BC37859C((id)v10, v11);
  }
}

void sub_1BC5B726C(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_1BC5B7144(a3);

}

id AccountIconView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id AccountIconView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  objc_super v18;

  v9 = &v4[qword_1EF438548];
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  *(_QWORD *)v9 = 1;
  v9[24] = 1;
  v10 = qword_1EF438550;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_init);
  v13 = &v12[qword_1EF438560];
  v14 = type metadata accessor for AccountIconViewData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = &v12[qword_1EF438570];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_OWORD *)v15 + 2) = 0u;
  v16 = qword_1EF438568;
  if (qword_1ED6A31F0 != -1)
    swift_once();
  *(_QWORD *)&v12[v16] = qword_1ED6A4498;
  swift_retain();

  v18.receiver = v12;
  v18.super_class = (Class)type metadata accessor for AccountIconView(0);
  return objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1BC5B7464(double a1, double a2, double a3, double a4)
{
  return AccountIconView.init(frame:)(a1, a2, a3, a4);
}

id AccountIconView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id AccountIconView.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v3 = &v1[qword_1EF438548];
  *((_QWORD *)v3 + 1) = 0;
  *((_QWORD *)v3 + 2) = 0;
  *(_QWORD *)v3 = 1;
  v3[24] = 1;
  v4 = qword_1EF438550;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, sel_init);
  v7 = &v6[qword_1EF438560];
  v8 = type metadata accessor for AccountIconViewData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = &v6[qword_1EF438570];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  v10 = qword_1EF438568;
  if (qword_1ED6A31F0 != -1)
    swift_once();
  *(_QWORD *)&v6[v10] = qword_1ED6A4498;
  swift_retain();

  v13.receiver = v6;
  v13.super_class = (Class)type metadata accessor for AccountIconView(0);
  v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

id sub_1BC5B7600(uint64_t a1, uint64_t a2, void *a3)
{
  return AccountIconView.init(coder:)(a3);
}

uint64_t sub_1BC5B7624()
{
  uint64_t v0;

  sub_1BC348D78(v0 + qword_1EF438560, (uint64_t (*)(_QWORD))sub_1BC5B6498);
  return swift_release();
}

id AccountIconView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountIconView(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC5B76B0(uint64_t a1)
{

  sub_1BC348D78(a1 + qword_1EF438560, (uint64_t (*)(_QWORD))sub_1BC5B6498);
  return swift_release();
}

uint64_t sub_1BC5B7714(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  sub_1BC5B6498();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35EBE0(a1, (uint64_t)v4, type metadata accessor for AccountIconViewData);
  v5 = type metadata accessor for AccountIconViewData(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_1BC5B5E20((uint64_t)v4);
  return sub_1BC348D78((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BC5B6498);
}

uint64_t type metadata accessor for AccountIconView(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF438638);
}

unint64_t sub_1BC5B77DC()
{
  unint64_t result;

  result = qword_1EF438578;
  if (!qword_1EF438578)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for AccountIconViewError, &type metadata for AccountIconViewError);
    atomic_store(result, (unint64_t *)&qword_1EF438578);
  }
  return result;
}

__n128 sub_1BC5B7820@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  unint64_t v4;
  unsigned __int8 v5;
  __n128 result;

  v3 = (__n128 *)(*a1 + qword_1EF438548);
  swift_beginAccess();
  v4 = v3[1].n128_u64[0];
  v5 = v3[1].n128_u8[8];
  result = *v3;
  *a2 = *v3;
  a2[1].n128_u64[0] = v4;
  a2[1].n128_u8[8] = v5;
  return result;
}

__n128 sub_1BC5B7880(__n128 *a1, _QWORD *a2)
{
  unint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  v4 = *a2 + qword_1EF438548;
  swift_beginAccess();
  result = v6;
  *(__n128 *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for AccountIconViewError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC5B792C + 4 * asc_1BC64A280[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC5B794C + 4 * byte_1BC64A285[v4]))();
}

_BYTE *sub_1BC5B792C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC5B794C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC5B7954(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC5B795C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC5B7964(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC5B796C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AccountIconViewError()
{
  return &type metadata for AccountIconViewError;
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountIconViewData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC62A7B4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AccountIconViewData(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AccountIconViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountIconViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AccountIconViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for AccountIconViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountIconViewData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC5B7C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountIconViewData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC5B7CA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC62A7B4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1BC5B7D24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1BC5B7D94()
{
  unint64_t v0;

  sub_1BC5B6498();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t method lookup function for AccountIconView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountIconView.preferredSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AccountIconView.preferredSize.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AccountIconView.preferredSize.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AccountIconView.hasLogo.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AccountIconView.apply(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t sub_1BC5B7EC8()
{
  return type metadata accessor for AccountIconView(0);
}

void static HealthRecordsViewRouter.navigateBack(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t aBlock;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, void *);
  void *v34;
  void (*v35)(char, void *);
  _QWORD *v36;

  v3 = v2;
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BB04();
  swift_bridgeObjectRetain_n();
  v10 = sub_1BC62BB28();
  v11 = sub_1BC62CADC();
  v12 = os_log_type_enabled(v10, v11);
  v28 = a1;
  v29 = v3;
  if (v12)
  {
    v13 = swift_slowAlloc();
    v27 = v6;
    v14 = v13;
    v15 = swift_slowAlloc();
    v30 = v15;
    aBlock = v3;
    *(_DWORD *)v14 = 136315394;
    swift_getMetatypeMetadata();
    v16 = sub_1BC62C6E0();
    aBlock = sub_1BC4991F0(v16, v17, &v30);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    aBlock = a1;
    v32 = a2;
    swift_bridgeObjectRetain();
    sub_1BC62D5D4();
    v18 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v19 = sub_1BC62C6E0();
    aBlock = sub_1BC4991F0(v19, v20, &v30);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v10, v11, "%s will redirect back to source app %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v15, -1, -1);
    MEMORY[0x1BCCF36A8](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v27);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v21 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v21)
  {
    v22 = v21;
    v23 = v28;
    v24 = (void *)sub_1BC62C650();
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v23;
    v25[3] = a2;
    v25[4] = v29;
    v35 = sub_1BC5BAC0C;
    v36 = v25;
    aBlock = MEMORY[0x1E0C809B0];
    v32 = 1107296256;
    v33 = sub_1BC3EFECC;
    v34 = &block_descriptor_66;
    v26 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v22, sel_openApplicationWithBundleIdentifier_usingConfiguration_completionHandler_, v24, 0, v26);
    _Block_release(v26);

  }
  else
  {
    __break(1u);
  }
}

uint64_t static HealthRecordsViewRouter.navigateToHealthSummaryView()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BC377F18;
  return sub_1BC5B9C78(0xD000000000000018, 0x80000001BC662B60);
}

HealthRecordsUI::CategoryViewReplayableSections_optional __swiftcall CategoryViewReplayableSections.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unsigned int v2;

  v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4)
    LOBYTE(v2) = 3;
  *v1 = v2;
  return (HealthRecordsUI::CategoryViewReplayableSections_optional)rawValue;
}

uint64_t CategoryViewReplayableSections.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

uint64_t sub_1BC5B82AC()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5B82F0()
{
  return sub_1BC62D67C();
}

uint64_t sub_1BC5B831C()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

HealthRecordsUI::CategoryViewReplayableSections_optional sub_1BC5B835C(Swift::Int *a1)
{
  return CategoryViewReplayableSections.init(rawValue:)(*a1);
}

void sub_1BC5B8364(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

id SettingsViewController.replayWith(trace:)(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16) == 2)
    return sub_1BC3F13C8();
  else
    return 0;
}

id sub_1BC5B8390(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16) == 2)
    return sub_1BC3F13C8();
  else
    return 0;
}

_BYTE *RecordCategoryViewController.replayWith(trace:)(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;

  if (*(_BYTE *)(a1 + 16) != 3)
    return 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment] = *(_QWORD *)a1;
  v2 = v1;
  return v1;
}

_BYTE *sub_1BC5B83F4(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;

  if (*(_BYTE *)(a1 + 16) != 3)
    return 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment] = *(_QWORD *)a1;
  v2 = v1;
  return v1;
}

id sub_1BC5B843C()
{
  id v1;

  if (qword_1ED6A31B0 != -1)
    swift_once();
  v1 = (id)qword_1ED6A4670;
  qword_1EF45A090 = type metadata accessor for ViewControllerFactory();
  unk_1EF45A098 = &protocol witness table for ViewControllerFactory;
  qword_1EF45A078 = (uint64_t)v1;
  return v1;
}

uint64_t static HealthRecordsViewRouter.showAllRecordsTimelineView(navigator:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v26 = a1;
  v1 = sub_1BC62BB34();
  v24 = *(_QWORD *)(v1 - 8);
  v25 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC62B630();
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF4287D8 != -1)
    swift_once();
  v23 = v3;
  sub_1BC34E674((uint64_t)&qword_1EF45A078, (uint64_t)v32);
  v10 = v33;
  v29 = v34;
  __swift_project_boxed_opaque_existential_1Tm(v32, v33);
  v11 = swift_storeEnumTagMultiPayload();
  if (qword_1ED6A4878 != -1)
    v11 = swift_once();
  v30 = *(_QWORD *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v11);
  *(&v23 - 2) = v12;
  sub_1BC62AA6C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v13, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();
  swift_release();
  v14 = v31;
  v15 = (void *)(*(uint64_t (**)(char *, void *, uint64_t))(*(_QWORD *)(v29 + 16) + 8))(v9, v31, v10);

  sub_1BC3B22E8((uint64_t)v9);
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
    __swift_project_boxed_opaque_existential_1Tm(v26, v26[3]);
    *v6 = 1;
    v17 = v27;
    v16 = v28;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v27 + 104))(v6, *MEMORY[0x1E0D2B6C8], v28);
    sub_1BC62AEB0();

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v17 + 8))(v6, v16);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
    v19 = v23;
    sub_1BC62BB04();
    v20 = sub_1BC62BB28();
    v21 = sub_1BC62CAC4();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1BC30A000, v20, v21, "Unable to present all health records screen", v22, 2u);
      MEMORY[0x1BCCF36A8](v22, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v19, v25);
  }
}

uint64_t static HealthRecordsViewRouter.showTimelineView(forCategory:preferredSegment:navigator:)(uint64_t a1, unsigned __int8 *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;

  v43 = a3;
  v35 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v35);
  v34 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v34 - v7;
  v9 = sub_1BC62BB34();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62B630();
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = *a2;
  if (qword_1EF4287D8 != -1)
    swift_once();
  v44 = a1;
  v38 = v8;
  sub_1BC34E674((uint64_t)&qword_1EF45A078, (uint64_t)v47);
  v14 = v48;
  v15 = v49;
  v16 = (uint64_t)__swift_project_boxed_opaque_existential_1Tm(v47, v48);
  if (qword_1ED6A4878 != -1)
    v16 = swift_once();
  v45 = *(_QWORD *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v16);
  *(&v34 - 2) = v17;
  sub_1BC62AA6C();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v18, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();
  swift_release();
  v19 = (void *)v46;
  v20 = v44;
  v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 16) + 8))(v44, v46, v14);

  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    type metadata accessor for RecordCategoryViewController();
    v22 = swift_dynamicCastClass();
    if (v22)
      *(_BYTE *)(v22 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment) = v40;
    __swift_project_boxed_opaque_existential_1Tm(v43, v43[3]);
    *v13 = 1;
    v24 = v41;
    v23 = v42;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v41 + 104))(v13, *MEMORY[0x1E0D2B6C8], v42);
    sub_1BC62AEB0();

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v24 + 8))(v13, v23);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    v26 = v39;
    sub_1BC62BB04();
    v27 = (uint64_t)v38;
    sub_1BC3B226C(v20, (uint64_t)v38);
    v28 = sub_1BC62BB28();
    v29 = sub_1BC62CAC4();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v47[0] = v31;
      *(_DWORD *)v30 = 136446210;
      sub_1BC3B226C(v27, v34);
      v32 = sub_1BC62C6F8();
      v46 = sub_1BC4991F0(v32, v33, v47);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      sub_1BC3B22E8(v27);
      _os_log_impl(&dword_1BC30A000, v28, v29, "Unable to present Category room for kind: %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v31, -1, -1);
      MEMORY[0x1BCCF36A8](v30, -1, -1);
    }
    else
    {
      sub_1BC3B22E8(v27);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v26, v37);
  }
}

uint64_t static HealthRecordsViewRouter.showUDCLabsView(navigator:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;

  v26 = a1;
  v1 = sub_1BC62BB34();
  v24 = *(_QWORD *)(v1 - 8);
  v25 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1BC62B630();
  v4 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A31B0 != -1)
    swift_once();
  v23 = v3;
  *v9 = 2;
  v10 = swift_storeEnumTagMultiPayload();
  if (qword_1ED6A4878 != -1)
    v10 = swift_once();
  v28 = *(_QWORD *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v10);
  *(&v22 - 2) = v11;
  sub_1BC62AA6C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v12, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();
  swift_release();
  v13 = v29;
  sub_1BC5536FC((uint64_t)v9);
  v15 = v14;

  sub_1BC3B22E8((uint64_t)v9);
  if (v15)
  {
    __swift_project_boxed_opaque_existential_1Tm(v26, v26[3]);
    *v6 = 1;
    v16 = v27;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0D2B6C8], v27);
    sub_1BC62AEB0();

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v16);
  }
  else
  {
    v18 = v23;
    sub_1BC62BB04();
    v19 = sub_1BC62BB28();
    v20 = sub_1BC62CAC4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1BC30A000, v19, v20, "Unable to present UDC Labs category room", v21, 2u);
      MEMORY[0x1BCCF36A8](v21, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v18, v25);
  }
}

void static HealthRecordsViewRouter.showOnboarding(with:profile:from:)(uint64_t a1@<X0>, void *a2@<X1>, Swift::tuple_viewController_UIViewController_shouldNotDismiss_Bool *a3@<X8>)
{
  void *v5;
  void *v6;
  id v7;
  id v8;

  UIViewController.hrui_presentationCapableViewController()(a3);
  v6 = v5;
  v7 = objc_msgSend(a2, sel_onboardingManager);
  sub_1BC372FBC(a1);
  v8 = (id)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_onboardWithActivity_presentingViewController_, v8, v6);

}

uint64_t static HealthRecordsViewRouter.makeAndPresentAccountDetailViewController(for:from:profile:sourceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[24] = a5;
  v6[25] = v5;
  v6[22] = a3;
  v6[23] = a4;
  v6[20] = a1;
  v6[21] = a2;
  v7 = sub_1BC62A7B4();
  v6[26] = v7;
  v6[27] = *(_QWORD *)(v7 - 8);
  v6[28] = swift_task_alloc();
  v8 = sub_1BC62BB34();
  v6[29] = v8;
  v6[30] = *(_QWORD *)(v8 - 8);
  v6[31] = swift_task_alloc();
  sub_1BC62C944();
  v6[32] = sub_1BC62C938();
  v6[33] = sub_1BC62C908();
  v6[34] = v9;
  return swift_task_switch();
}

uint64_t sub_1BC5B913C@<X0>(Swift::tuple_viewController_UIViewController_shouldNotDismiss_Bool *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (void *)v1[22];
  UIViewController.hrui_presentationCapableViewController()(a1);
  v1[35] = v3;
  v4 = objc_msgSend(v2, sel_clinicalAccountStore);
  v1[36] = v4;
  v5 = sub_1BC62A784();
  v1[37] = v5;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_1BC5B9224;
  v6 = swift_continuation_init();
  v1[10] = MEMORY[0x1E0C809B0];
  v1[11] = 0x40000000;
  v1[12] = sub_1BC38FC10;
  v1[13] = &block_descriptor_4_1;
  v1[14] = v6;
  objc_msgSend(v4, sel_fetchAccountWithIdentifier_completion_, v5, v1 + 10);
  return swift_continuation_await();
}

uint64_t sub_1BC5B9224()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 304) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC5B9280()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char v13;

  v2 = *(void **)(v0 + 288);
  v1 = *(void **)(v0 + 296);
  swift_release();
  v3 = *(void **)(v0 + 120);

  if (qword_1EF4287D8 != -1)
    swift_once();
  v4 = *(void **)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 176);
  v8 = qword_1EF45A090;
  v9 = unk_1EF45A098;
  __swift_project_boxed_opaque_existential_1Tm(qword_1EF45A078, qword_1EF45A090);
  v13 = 0;
  v10 = (void *)(*(uint64_t (**)(void *, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8) + 32))(v3, v7, &v13, v6, v5, 1, v8);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v10);
  objc_msgSend(v4, sel_presentViewController_animated_completion_, v11, 1, 0);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1BC5B93B8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id result;
  void *v28;
  unsigned int v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  _QWORD *v39;
  NSObject *log;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v2 = v0 + 20;
  v1 = v0[20];
  v4 = (void *)v0[37];
  v3 = (void *)v0[38];
  v5 = (void *)v2[16];
  v7 = v2[7];
  v6 = v2[8];
  v8 = v2[6];
  swift_release();
  swift_willThrow();

  sub_1BC62BAF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v1, v8);
  v9 = v3;
  v10 = v3;
  v11 = sub_1BC62BB28();
  v12 = sub_1BC62CAC4();
  if (os_log_type_enabled(v11, v12))
  {
    v42 = *(_QWORD *)(v45 + 240);
    v13 = *(_QWORD *)(v45 + 224);
    v43 = *(_QWORD *)(v45 + 232);
    v44 = *(_QWORD *)(v45 + 248);
    v14 = *(_QWORD *)(v45 + 208);
    v37 = *(_QWORD *)(v45 + 216);
    v38 = *(id *)(v45 + 304);
    v15 = *(_QWORD *)(v45 + 200);
    log = v11;
    v16 = swift_slowAlloc();
    v39 = (_QWORD *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v46 = v41;
    *(_DWORD *)v16 = 136315650;
    *(_QWORD *)(v45 + 128) = v15;
    swift_getMetatypeMetadata();
    v17 = sub_1BC62C6E0();
    *(_QWORD *)(v45 + 136) = sub_1BC4991F0(v17, v18, &v46);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v19 = sub_1BC62D52C();
    *(_QWORD *)(v45 + 144) = sub_1BC4991F0(v19, v20, &v46);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v13, v14);
    *(_WORD *)(v16 + 22) = 2112;
    v21 = v38;
    v22 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v45 + 152) = v22;
    sub_1BC62CFF8();
    *v39 = v22;

    _os_log_impl(&dword_1BC30A000, log, v12, "%s failed to fetch account with ID %s: %@", (uint8_t *)v16, 0x20u);
    sub_1BC4DCD38();
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v39, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v41, -1, -1);
    MEMORY[0x1BCCF36A8](v16, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v43);
  }
  else
  {
    v23 = *(void **)(v45 + 304);
    v24 = *(_QWORD *)(v45 + 240);
    v25 = *(_QWORD *)(v45 + 248);
    v26 = *(_QWORD *)(v45 + 232);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v45 + 216) + 8))(*(_QWORD *)(v45 + 224), *(_QWORD *)(v45 + 208));

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
  }
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v28 = result;
    v29 = objc_msgSend(result, sel_isAppleInternalInstall);

    v30 = *(void **)(v45 + 304);
    v31 = *(void **)(v45 + 280);
    if (v29)
    {
      v32 = (void *)objc_opt_self();
      v33 = (void *)sub_1BC62C650();
      v46 = 0;
      v47 = 0xE000000000000000;
      sub_1BC62D1D8();
      swift_bridgeObjectRelease();
      v46 = 0xD000000000000017;
      v47 = 0x80000001BC6660C0;
      sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      sub_1BC62D52C();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v34 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v35 = (void *)sub_1BC62A550();
      v36 = objc_msgSend(v32, sel_basicAlertControllerWithTitle_message_internalError_, v33, v34, v35);

      objc_msgSend(v31, sel_presentViewController_animated_completion_, v36, 1, 0);
    }
    else
    {

    }
    swift_task_dealloc();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v45 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void static HealthRecordsViewRouter.showAPIAuthorizationSettingsView(forBundleIdentifier:from:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id aBlock[7];

  v4 = v3;
  v7 = a1;
  if (qword_1ED6A4878 != -1)
    a1 = swift_once();
  aBlock[6] = *(id *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](a1);
  sub_1BC62AA6C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v8, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();
  swift_release();
  v9 = aBlock[0];
  v10 = objc_msgSend(aBlock[0], sel_clinicalAccountStore);
  v11 = swift_allocObject();
  *(id *)(v11 + 16) = aBlock[0];
  *(_QWORD *)(v11 + 24) = v7;
  *(_QWORD *)(v11 + 32) = a2;
  *(_QWORD *)(v11 + 40) = v4;
  *(_QWORD *)(v11 + 48) = a3;
  aBlock[4] = sub_1BC5BADF8;
  aBlock[5] = (id)v11;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1BC5B9C30;
  aBlock[3] = &block_descriptor_11_1;
  v12 = _Block_copy(aBlock);
  v13 = v9;
  swift_bridgeObjectRetain();
  v14 = a3;
  swift_release();
  objc_msgSend(v10, sel_shouldShowHealthRecordsSectionWithCompletion_, v12);
  _Block_release(v12);

}

void sub_1BC5B9AAC(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD *v17;
  void *v18;
  id v19;
  _QWORD v20[6];

  if ((a1 & 1) != 0)
  {
    v11 = objc_allocWithZone((Class)type metadata accessor for SettingsViewController());
    v12 = a3;
    v13 = sub_1BC3F40BC(v12);

    sub_1BC5BB140();
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v14 + 32) = a4;
    *(_QWORD *)(v14 + 40) = a5;
    *(_BYTE *)(v14 + 48) = 2;
    v15 = objc_allocWithZone(MEMORY[0x1E0D2F7B8]);
    swift_bridgeObjectRetain();
    v16 = objc_msgSend(v15, sel_initWithRootViewController_, v13);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v14;
    v17[3] = v13;
    v17[4] = &protocol witness table for SettingsViewController;
    v20[4] = sub_1BC5BB1C0;
    v20[5] = v17;
    v20[0] = MEMORY[0x1E0C809B0];
    v20[1] = 1107296256;
    v20[2] = sub_1BC39BE70;
    v20[3] = &block_descriptor_18_1;
    v18 = _Block_copy(v20);
    swift_bridgeObjectRetain();
    v19 = v13;
    swift_release();
    objc_msgSend(a7, sel_presentViewController_animated_completion_, v16, 1, v18);
    _Block_release(v18);

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC5B9C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t sub_1BC5B9C78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v3[24] = swift_task_alloc();
  v4 = sub_1BC62A604();
  v3[25] = v4;
  v3[26] = *(_QWORD *)(v4 - 8);
  v3[27] = swift_task_alloc();
  v5 = sub_1BC62BB34();
  v3[28] = v5;
  v3[29] = *(_QWORD *)(v5 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  return swift_task_switch();
}

id sub_1BC5B9D44()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  NSObject *v3;
  os_log_type_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  BOOL v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  id result;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v1 = v0;
  v2 = v0 + 16;
  sub_1BC62BB04();
  swift_bridgeObjectRetain_n();
  v3 = sub_1BC62BB28();
  v4 = sub_1BC62CADC();
  if (os_log_type_enabled(v3, v4))
  {
    v46 = v0[28];
    v48 = v0[31];
    v5 = v0[22];
    v42 = v0[21];
    v44 = v0[29];
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v49 = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = sub_1BC62D718();
    v0[19] = sub_1BC4991F0(v8, v9, &v49);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[20] = sub_1BC4991F0(v42, v5, &v49);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BC30A000, v3, v4, "%s attempting to navigate user to %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v7, -1, -1);
    v10 = v6;
    v2 = v0 + 16;
    MEMORY[0x1BCCF36A8](v10, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v11(v48, v46);
  }
  else
  {
    v12 = v0[31];
    v13 = v1[28];
    v14 = v1[29];
    swift_bridgeObjectRelease_n();

    v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v1[32] = v11;
  v16 = v1[25];
  v15 = v1[26];
  v17 = v1[24];
  sub_1BC62A5F8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v17, 1, v16) == 1)
  {
    sub_1BC50AFC0(v1[24]);
    v18 = (void *)objc_opt_self();
    v49 = 0;
    v50 = 0xE000000000000000;
    sub_1BC62D1D8();
    swift_bridgeObjectRelease();
    v49 = 0xD00000000000001BLL;
    v50 = 0x80000001BC666120;
    sub_1BC62C764();
    sub_1BC62C764();
    v19 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v18, sel_hk_error_description_, 3, v19);

    swift_willThrow();
    sub_1BC62BB04();
    swift_bridgeObjectRetain();
    v21 = v20;
    swift_bridgeObjectRetain();
    v22 = v20;
    v23 = sub_1BC62BB28();
    v24 = sub_1BC62CAC4();
    v25 = os_log_type_enabled(v23, v24);
    v26 = (void (*)(uint64_t, uint64_t))v1[32];
    v27 = v1[30];
    v28 = v1[28];
    if (v25)
    {
      v47 = (void (*)(uint64_t, uint64_t))v1[32];
      v29 = v1[22];
      v41 = v1[21];
      v45 = v1[28];
      v30 = swift_slowAlloc();
      v31 = (_QWORD *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v49 = v43;
      *(_DWORD *)v30 = 136315650;
      v32 = sub_1BC62D718();
      v1[17] = sub_1BC4991F0(v32, v33, &v49);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      v1[18] = sub_1BC4991F0(v41, v29, &v49);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 22) = 2112;
      v34 = v20;
      v35 = _swift_stdlib_bridgeErrorToNSError();
      v1[15] = v35;
      sub_1BC62CFF8();
      *v31 = v35;

      _os_log_impl(&dword_1BC30A000, v23, v24, "[%s] error creating URL from %s: %@", (uint8_t *)v30, 0x20u);
      sub_1BC4DCD38();
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v31, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v43, -1, -1);
      MEMORY[0x1BCCF36A8](v30, -1, -1);

      v47(v27, v45);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v26(v27, v28);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (id)((uint64_t (*)(void))v1[1])();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[26] + 32))(v1[27], v1[24], v1[25]);
    result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
    v1[33] = result;
    if (result)
    {
      v37 = result;
      v38 = sub_1BC62A598();
      v1[34] = v38;
      v1[7] = v2;
      v1[2] = v1;
      v1[3] = sub_1BC5BA3B4;
      v39 = swift_continuation_init();
      v1[10] = MEMORY[0x1E0C809B0];
      v40 = v1 + 10;
      v40[1] = 0x40000000;
      v40[2] = sub_1BC5BA7A8;
      v40[3] = &block_descriptor_19_1;
      v40[4] = v39;
      objc_msgSend(v37, sel_openURL_configuration_completionHandler_, v38, 0, v40);
      return (id)swift_continuation_await();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1BC5BA3B4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 280) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC5BA414()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 264);
  v1 = *(void **)(v0 + 272);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5BA494()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27[2];

  v1 = *(void **)(v0 + 272);
  v2 = *(void **)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 200);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  v6 = *(void **)(v0 + 280);
  sub_1BC62BB04();
  swift_bridgeObjectRetain();
  v7 = v6;
  swift_bridgeObjectRetain();
  v8 = v6;
  v9 = sub_1BC62BB28();
  v10 = sub_1BC62CAC4();
  if (os_log_type_enabled(v9, v10))
  {
    v25 = *(_QWORD *)(v0 + 240);
    v26 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v24 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 176);
    v22 = *(_QWORD *)(v0 + 168);
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v27[0] = v23;
    *(_DWORD *)v12 = 136315650;
    v14 = sub_1BC62D718();
    *(_QWORD *)(v0 + 136) = sub_1BC4991F0(v14, v15, v27);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 144) = sub_1BC4991F0(v22, v11, v27);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2112;
    v16 = v6;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 120) = v17;
    sub_1BC62CFF8();
    *v13 = v17;

    _os_log_impl(&dword_1BC30A000, v9, v10, "[%s] error creating URL from %s: %@", (uint8_t *)v12, 0x20u);
    sub_1BC4DCD38();
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v23, -1, -1);
    MEMORY[0x1BCCF36A8](v12, -1, -1);

    v26(v25, v24);
  }
  else
  {
    v18 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v19 = *(_QWORD *)(v0 + 240);
    v20 = *(_QWORD *)(v0 + 224);

    swift_bridgeObjectRelease_n();
    v18(v19, v20);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5BA7A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_1BC35E44C();
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
      v8 = sub_1BC62C548();
    else
      v8 = 0;
    v9 = v8;
    sub_1BC5BB1CC((uint64_t)&v9, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

void sub_1BC5BA870(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  NSObject *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];

  v34[1] = *MEMORY[0x1E0C80C00];
  v10 = sub_1BC62BB34();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_1BC62BB04();
    swift_bridgeObjectRetain();
    v14 = a2;
    swift_bridgeObjectRetain();
    v15 = a2;
    v16 = sub_1BC62BB28();
    v17 = sub_1BC62CAC4();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      HIDWORD(v28) = v17;
      v31 = v16;
      v18 = swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v34[0] = v30;
      *(_DWORD *)v18 = 136315650;
      v32 = a5;
      swift_getMetatypeMetadata();
      v19 = sub_1BC62C6E0();
      v32 = sub_1BC4991F0(v19, v20, v34);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      v32 = a3;
      v33 = a4;
      swift_bridgeObjectRetain();
      sub_1BC62D5D4();
      v21 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v22 = sub_1BC62C6E0();
      v32 = sub_1BC4991F0(v22, v23, v34);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2112;
      if (a2)
      {
        v24 = a2;
        v25 = _swift_stdlib_bridgeErrorToNSError();
        v32 = v25;
        sub_1BC62CFF8();
      }
      else
      {
        v32 = 0;
        sub_1BC62CFF8();
        v25 = 0;
      }
      v16 = v31;
      v26 = v29;
      *v29 = v25;

      _os_log_impl(&dword_1BC30A000, v16, BYTE4(v28), "%s failed to open application with bundle ID %s: %@", (uint8_t *)v18, 0x20u);
      sub_1BC4DCD38();
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v26, -1, -1);
      v27 = v30;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v27, -1, -1);
      MEMORY[0x1BCCF36A8](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1BC5BABE8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC5BAC0C(char a1, void *a2)
{
  uint64_t *v2;

  sub_1BC5BA870(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t block_copy_helper_63(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_63()
{
  return swift_release();
}

void sub_1BC5BAC30(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD v21[2];
  char v22;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return;
  v5 = *(_QWORD *)(a1 + 32);
  v18 = a1 + 32;
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 48);
  v20 = a2;
  v8 = a2;
  swift_bridgeObjectRetain();
  v9 = v3 + 1;
  v10 = 1;
LABEL_3:
  v19 = v10;
  ObjectType = swift_getObjectType();
  v21[0] = v5;
  v21[1] = v6;
  v22 = v7;
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a3 + 8);
  v13 = v20;
  sub_1BC5BAF28(v5, v6, v7);
  v14 = (void *)v12(v21, ObjectType, a3);

  sub_1BC5BAF50(v5, v6, v7);
  if (!v14)
    goto LABEL_12;
  swift_getObjectType();
  v15 = swift_conformsToProtocol2();
  if (v15)
    a3 = v15;
  else
    a3 = 0;
  if (v15)
    v16 = v14;
  else
    v16 = 0;
  if (!v16)
  {

LABEL_12:
    v16 = 0;
    a3 = 0;
  }
  v10 = v19;
  v20 = v16;
  while (v9 != ++v10)
  {
    if (v16)
    {
      v17 = v18 + 24 * v19;
      v7 = *(_BYTE *)(v17 + 16);
      v5 = *(_QWORD *)v17;
      v6 = *(_QWORD *)(v17 + 8);
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();

}

uint64_t HealthRecordsViewRouter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t HealthRecordsViewRouter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5BADC4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC5BADF8(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC5B9AAC(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48));
}

unint64_t sub_1BC5BAE0C()
{
  unint64_t result;

  result = qword_1EF4387C0;
  if (!qword_1EF4387C0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for CategoryViewReplayableSections, &type metadata for CategoryViewReplayableSections);
    atomic_store(result, (unint64_t *)&qword_1EF4387C0);
  }
  return result;
}

uint64_t dispatch thunk of ReplayableViewController.replayWith(trace:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t storeEnumTagSinglePayload for CategoryViewReplayableSections(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC5BAEA4 + 4 * byte_1BC64A405[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC5BAED8 + 4 * byte_1BC64A400[v4]))();
}

uint64_t sub_1BC5BAED8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC5BAEE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC5BAEE8);
  return result;
}

uint64_t sub_1BC5BAEF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC5BAEFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC5BAF00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC5BAF08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CategoryViewReplayableSections()
{
  return &type metadata for CategoryViewReplayableSections;
}

uint64_t sub_1BC5BAF28(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ReplayType(uint64_t a1)
{
  return sub_1BC5BAF50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1BC5BAF50(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BC5BAF78(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1BC5BAF80(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ReplayType()
{
  return &type metadata for ReplayType;
}

uint64_t _s15HealthRecordsUI10ReplayTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BC5BAF28(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s15HealthRecordsUI10ReplayTypeOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BC5BAF28(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BC5BAF50(v6, v7, v8);
  return a1;
}

uint64_t _s15HealthRecordsUI10ReplayTypeOwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BC5BAF50(v4, v5, v6);
  return a1;
}

uint64_t _s15HealthRecordsUI10ReplayTypeOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15HealthRecordsUI10ReplayTypeOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReplayTrace()
{
  return &type metadata for ReplayTrace;
}

uint64_t type metadata accessor for HealthRecordsViewRouter()
{
  return objc_opt_self();
}

uint64_t method lookup function for HealthRecordsViewRouter()
{
  return swift_lookUpClassMethod();
}

void sub_1BC5BB140()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438860)
  {
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438860);
  }
}

uint64_t sub_1BC5BB194()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1BC5BB1C0()
{
  uint64_t v0;

  sub_1BC5BAC30(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BC5BB1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC384E68(0, &qword_1EF438868, (void (*)(uint64_t))sub_1BC5BB220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC5BB220()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF429CD8)
  {
    v0 = sub_1BC62C59C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF429CD8);
  }
}

id CGFloat.scaled(for:)(void *a1)
{
  return objc_msgSend(a1, sel__scaledValueForValue_);
}

id sub_1BC5BB2AC()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v3 = v0;
  v4 = objc_msgSend(v1, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v3, sel_setFont_, v5);

  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v6 + 32) = sub_1BC62C680();
  *(_QWORD *)(v6 + 40) = v7;
  strcpy((char *)(v6 + 48), "LabEducation");
  *(_BYTE *)(v6 + 61) = 0;
  *(_WORD *)(v6 + 62) = -5120;
  *(_QWORD *)(v6 + 64) = 0x746E65746E6F43;
  *(_QWORD *)(v6 + 72) = 0xE700000000000000;
  v8 = v3;
  v9 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v10 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v8, sel_setAccessibilityIdentifier_, v10);
  return v8;
}

id sub_1BC5BB4C4()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  v3 = v0;
  v4 = objc_msgSend(v1, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v3, sel_setFont_, v5);

  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v6 + 32) = sub_1BC62C680();
  *(_QWORD *)(v6 + 40) = v7;
  strcpy((char *)(v6 + 48), "LabEducation");
  *(_BYTE *)(v6 + 61) = 0;
  *(_WORD *)(v6 + 62) = -5120;
  *(_QWORD *)(v6 + 64) = 0x7475626972747441;
  *(_QWORD *)(v6 + 72) = 0xEB000000006E6F69;
  v8 = v3;
  v9 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v10 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v8, sel_setAccessibilityIdentifier_, v10);
  return v8;
}

id sub_1BC5BB6E4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  objc_super v17;

  v9 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_arrangedView;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_init);
  v12 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_educationLabel;
  *(_QWORD *)&v11[v12] = sub_1BC5BB2AC();
  v13 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_attributionLabel;
  *(_QWORD *)&v11[v13] = sub_1BC5BB4C4();
  v14 = &v11[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_item];
  *((_QWORD *)v14 + 4) = 0;
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for EducationCell();
  v15 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC5BB93C();

  return v15;
}

id sub_1BC5BB7F8(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  objc_super v11;

  v3 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_arrangedView;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_educationLabel;
  *(_QWORD *)&v5[v6] = sub_1BC5BB2AC();
  v7 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_attributionLabel;
  *(_QWORD *)&v5[v7] = sub_1BC5BB4C4();
  v8 = &v5[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_item];
  *((_QWORD *)v8 + 4) = 0;
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for EducationCell();
  v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

void sub_1BC5BB93C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  double v18;
  double v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35[2];

  v1 = v0;
  v2 = sub_1BC62B12C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v6);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v1, sel_setBackgroundView_, v7);

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v1, sel_setSelectedBackgroundView_, v8);

  v9 = objc_msgSend(v1, sel_selectedBackgroundView);
  if (v9)
  {
    v10 = v9;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
    v11 = (void *)sub_1BC62CE48();
    objc_msgSend(v10, sel_setBackgroundColor_, v11);

  }
  objc_msgSend(v1, sel_setUserInteractionEnabled_, 0);
  v12 = objc_msgSend(v1, sel_contentView);
  v13 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_arrangedView];
  objc_msgSend(v12, sel_addSubview_, v13);

  objc_msgSend(v13, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_educationLabel]);
  objc_msgSend(v13, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_attributionLabel]);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v35[0] = (id)objc_opt_self();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BC63A3D0;
  v15 = objc_msgSend(v13, sel_leadingAnchor);
  v16 = objc_msgSend(v1, sel_contentView);
  v17 = objc_msgSend(v16, sel_leadingAnchor);

  sub_1BC62B120();
  sub_1BC62B084();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v20 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v17, v19);

  *(_QWORD *)(v14 + 32) = v20;
  v21 = objc_msgSend(v13, sel_topAnchor);
  v22 = objc_msgSend(v1, sel_contentView);
  v23 = objc_msgSend(v22, sel_topAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, 0.0);
  *(_QWORD *)(v14 + 40) = v24;
  v25 = objc_msgSend(v1, sel_contentView);
  v26 = objc_msgSend(v25, sel_layoutMarginsGuide);

  v27 = objc_msgSend(v26, sel_trailingAnchor);
  v28 = objc_msgSend(v13, sel_trailingAnchor);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(_QWORD *)(v14 + 48) = v29;
  v30 = objc_msgSend(v1, sel_contentView);
  v31 = objc_msgSend(v30, sel_bottomAnchor);

  v32 = objc_msgSend(v13, sel_bottomAnchor);
  v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, 0.0);

  *(_QWORD *)(v14 + 56) = v33;
  v35[1] = (id)v14;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v34 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v35[0], sel_activateConstraints_, v34);

}

uint64_t sub_1BC5BBE18()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  id v22;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  char v38;
  void *v39;
  void *v40;
  void *v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t (*v50)(char *, uint64_t);
  char *v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint8_t *v63;
  _QWORD *v64;
  unint64_t v65;
  _QWORD *v66;
  _QWORD v67[6];

  v1 = v0;
  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v62 - v7;
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_item];
  swift_beginAccess();
  sub_1BC37ADB0(v9, (uint64_t)v67);
  if (!v67[3])
  {
    sub_1BC37AE60((uint64_t)v67);
    goto LABEL_7;
  }
  sub_1BC37AE0C();
  type metadata accessor for EducationItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    sub_1BC62BAF8();
    v42 = v1;
    v43 = sub_1BC62BB28();
    v44 = sub_1BC62CAC4();
    if (os_log_type_enabled(v43, v44))
    {
      v65 = v2;
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = (_QWORD *)swift_slowAlloc();
      v66 = v46;
      *(_DWORD *)v45 = 136446210;
      sub_1BC37ADB0(v9, (uint64_t)v67);
      sub_1BC357158(0, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v47 = sub_1BC62C6F8();
      v67[0] = sub_1BC4991F0(v47, v48, (uint64_t *)&v66);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v43, v44, "Incorrect view model for EducationCell: %{public}s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v46, -1, -1);
      MEMORY[0x1BCCF36A8](v45, -1, -1);

      return (*(uint64_t (**)(char *, unint64_t))(v3 + 8))(v5, v65);
    }

    v50 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
    v51 = v5;
    return v50(v51, v2);
  }
  v10 = v66;
  v11 = v66 + 2;
  v12 = v66[5];
  v13 = v66[6];
  __swift_project_boxed_opaque_existential_1Tm(v66 + 2, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  if (!v14)
  {
    sub_1BC62BAF8();
    v52 = v1;
    v53 = sub_1BC62BB28();
    v54 = sub_1BC62CAC4();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = (_QWORD *)swift_slowAlloc();
      v66 = v56;
      v65 = v2;
      *(_DWORD *)v55 = 136446210;
      v63 = v55 + 4;
      sub_1BC37ADB0(v9, (uint64_t)v67);
      sub_1BC357158(0, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v57 = sub_1BC62C6F8();
      v67[0] = sub_1BC4991F0(v57, v58, (uint64_t *)&v66);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v53, v54, "No content for EducationItem: %{public}s", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v56, -1, -1);
      MEMORY[0x1BCCF36A8](v55, -1, -1);
      swift_release();

      return (*(uint64_t (**)(char *, unint64_t))(v3 + 8))(v8, v65);
    }

    swift_release();
    v50 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
    v51 = v8;
    return v50(v51, v2);
  }
  sub_1BC357158(0, &qword_1EF4388B8, (uint64_t (*)(uint64_t))sub_1BC5BC908, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(inited + 32) = 77;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  v16 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  v64 = v10;
  v17 = v16;
  *(_QWORD *)(inited + 48) = sub_1BC62CE9C();
  *(_QWORD *)(inited + 56) = 65;
  *(_QWORD *)(inited + 64) = 0xE100000000000000;
  *(_QWORD *)(inited + 72) = sub_1BC62CE9C();
  v18 = sub_1BC35C954(inited);
  v19 = sub_1BC35C970(MEMORY[0x1E0DEE9D8]);
  v20 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_educationLabel];
  v21 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setText_, v21);

  v22 = v20;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v67[0] = v19;
  sub_1BC48CC08((uint64_t)v22, 0x6F69746163756465, 0xEE006C6562614C6ELL, isUniquelyReferenced_nonNull_native);
  v24 = (_QWORD *)v67[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v67[0] = 0xD000000000000016;
  v67[1] = 0x80000001BC6661B0;
  v25 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_arrangedView];
  v26 = (void *)sub_1BC62C650();
  v65 = v18;
  v62 = v17;
  v27 = v64;
  v28 = (void *)sub_1BC62C53C();
  v29 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  swift_bridgeObjectRetain();
  v63 = (uint8_t *)v29;
  v30 = v25;
  v31 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();

  v32 = v27[5];
  v33 = v27[6];
  __swift_project_boxed_opaque_existential_1Tm(v11, v32);
  (*(void (**)(uint64_t, uint64_t))(v33 + 72))(v32, v33);
  if (v34)
  {
    v35 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_attributionLabel];
    objc_msgSend(v35, sel_setHidden_, 0);
    v36 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v35, sel_setText_, v36);

    v37 = v35;
    v38 = swift_isUniquelyReferenced_nonNull_native();
    v66 = v24;
    sub_1BC48CC08((uint64_t)v37, 0xD000000000000010, 0x80000001BC666190, v38);
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    v39 = (void *)sub_1BC62C650();
    v40 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRetain();
    v41 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();

  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_attributionLabel], sel_setHidden_, 1);
  }
  sub_1BC62C764();
  v59 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v60 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v61 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();

  return swift_release();
}

id sub_1BC5BC72C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EducationCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for EducationCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC5BC7D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC5BC824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC5BBE18();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC5BC890(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5BC8D8;
}

uint64_t sub_1BC5BC8D8(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC5BBE18();
  return result;
}

void sub_1BC5BC908()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF4388C0)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A5990);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF4388C0);
  }
}

uint64_t sub_1BC5BC97C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  const void *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v2 = sub_1BC62C47C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62C4AC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = a1[1];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    sub_1BC35A280();
    v14 = sub_1BC62CC74();
    v22 = v3;
    v15 = (void *)v14;
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = v10;
    v16[3] = v11;
    v16[4] = v13;
    aBlock[4] = sub_1BC5BD110;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_67;
    v17 = _Block_copy(aBlock);
    v21 = v6;
    v18 = v17;
    sub_1BC5BD134(v10, v11);
    swift_retain();
    swift_release();
    sub_1BC62C494();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC379B20((unint64_t *)&qword_1ED6A5870, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35811C();
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v9, v5, v18);
    _Block_release(v18);
    swift_release();

    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  }
  return result;
}

uint64_t sub_1BC5BCBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v5[2];

  if (a2 == 1)
  {
    sub_1BC5BD144(a1, 1);
    sub_1BC5BD144(0, 1);
  }
  else if (a2 != 2)
  {
    swift_bridgeObjectRetain();
    sub_1BC5BD144(a1, a2);
    sub_1BC5BD144(0, 1);
    sub_1BC546A60(0);
    v5[0] = a1;
    v5[1] = a2;
    return sub_1BC5BCC64(v5);
  }
  return sub_1BC546A60(1);
}

uint64_t sub_1BC5BCC64(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;

  v13 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *a1;
  v6 = a1[1];
  sub_1BC357158(0, &qword_1EF42C5F0, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  v12 = xmmword_1BC639590;
  *(_OWORD *)(v7 + 16) = xmmword_1BC639590;
  v8 = type metadata accessor for MedicalRecordTimelineSystemStatusItem();
  v9 = (_QWORD *)swift_allocObject();
  type metadata accessor for MedicalRecordTimelineSystemStatusItemCell();
  sub_1BC5BCE90(v5, v6);
  sub_1BC379B20(&qword_1EF4388C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineSystemStatusItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineSystemStatusItemCell);
  v9[4] = sub_1BC62ADA8();
  v9[5] = v10;
  v9[2] = v5;
  v9[3] = v6;
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = sub_1BC379B20(&qword_1EF4388D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineSystemStatusItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineSystemStatusItem);
  *(_QWORD *)(v7 + 32) = v9;
  sub_1BC62AF4C();
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  *(_OWORD *)(swift_allocObject() + 16) = v12;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v13);
  sub_1BC62B270();
  sub_1BC62B2D0();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC5BCE90(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

void MedicalRecordTimelineSystemStatusDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicalRecordTimelineSystemStatusDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t MedicalRecordTimelineSystemStatusDataSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t MedicalRecordTimelineSystemStatusDataSource.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5BCF6C()
{
  MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordTimelineSystemStatusDataSource);
  return sub_1BC62B834();
}

Swift::Void __swiftcall MedicalRecordTimelineSystemStatusDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for MedicalRecordTimelineSystemStatusItemCell();
  sub_1BC379B20(&qword_1EF4388C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineSystemStatusItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineSystemStatusItemCell);
  sub_1BC62CB48();
}

uint64_t sub_1BC5BD010(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF4388D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineSystemStatusDataSource, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineSystemStatusDataSource);
}

uint64_t type metadata accessor for MedicalRecordTimelineSystemStatusDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1BC5BD05C()
{
  type metadata accessor for MedicalRecordTimelineSystemStatusItemCell();
  sub_1BC379B20(&qword_1EF4388C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineSystemStatusItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineSystemStatusItemCell);
  return sub_1BC62CB48();
}

uint64_t method lookup function for MedicalRecordTimelineSystemStatusDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusDataSource.layout(for:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusDataSource.reloadSection(status:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t sub_1BC5BD0D8()
{
  uint64_t v0;

  if ((unint64_t)(*(_QWORD *)(v0 + 24) - 1) >= 2)
    swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5BD110()
{
  uint64_t v0;

  return sub_1BC5BCBCC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_64()
{
  return swift_release();
}

uint64_t sub_1BC5BD134(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
    return sub_1BC5BCE90(a1, a2);
  return a1;
}

uint64_t sub_1BC5BD144(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t type metadata accessor for MedicalRecordDetailViewController(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF438A30);
}

uint64_t sub_1BC5BD16C()
{
  return swift_initClassMetadata2();
}

id sub_1BC5BD1D0(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = a1;
  v2 = sub_1BC5BD23C();

  if (v2)
  {
    sub_1BC34B6A0(0, &qword_1EF438B18);
    v3 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

uint64_t sub_1BC5BD23C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_presentingViewController);

  if (!v1)
    return 0;
  sub_1BC62C680();
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend((id)objc_opt_self(), sel_keyCommandWithInput_modifierFlags_action_, v2, 0, sel_didTapDone_);

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(v4 + 32) = v3;
  v6 = v4;
  sub_1BC62C890();
  return v6;
}

void sub_1BC5BD340(char *a1, uint64_t a2, void *a3)
{
  id v4;

  *(_QWORD *)&a1[qword_1EF438A10] = 0;
  *(_QWORD *)&a1[qword_1EF438A18] = 0;
  v4 = a3;

  sub_1BC62D394();
  __break(1u);
}

void sub_1BC5BD3C0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  objc_class *v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  _QWORD *v19;
  id v20;
  uint64_t v21;
  objc_super v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - v2;
  v4 = *(_QWORD *)&v0[qword_1EF438A28];
  v24 = type metadata accessor for MedicalRecordDetailDataSourceProvider();
  v25 = sub_1BC347F0C(&qword_1EF438B00, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordDetailDataSourceProvider, (uint64_t)&unk_1BC64D118);
  v23 = v4;
  swift_retain();
  sub_1BC62B7E0();
  v5 = (objc_class *)type metadata accessor for MedicalRecordDetailViewController(0);
  v22.receiver = v0;
  v22.super_class = v5;
  objc_msgSendSuper2(&v22, sel_viewDidLoad);
  v6 = qword_1EF438A20;
  v7 = objc_msgSend(*(id *)&v0[qword_1EF438A20], sel_titleDisplayStringForDetailViewController);
  objc_msgSend(v0, sel_setTitle_, v7);

  v8 = objc_msgSend(v0, sel_collectionView);
  if (!v8)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = v8;
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
  objc_msgSend(v9, sel_setBackgroundColor_, v10);

  v11 = objc_msgSend(v0, sel_collectionView);
  if (!v11)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v12 = v11;
  objc_msgSend(v11, sel_contentInset);
  objc_msgSend(v12, sel_setContentInset_, 20.0);

  v13 = *(_QWORD *)(v4 + 56);
  if (v13)
  {
    v14 = *(void **)&v0[v6];
    objc_opt_self();
    v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      v16 = v15;
      v17 = sub_1BC62C95C();
      v18 = MEMORY[0x1E0DF0750];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v3, 1, 1, v17);
      v19 = (_QWORD *)swift_allocObject();
      v19[2] = 0;
      v19[3] = 0;
      v19[4] = v13;
      v19[5] = v16;
      swift_retain_n();
      v20 = v14;
      sub_1BC5BD6B8((uint64_t)v3, (uint64_t)&unk_1EF438B10, (uint64_t)v19);
      swift_release();

      swift_release();
      sub_1BC358494((uint64_t)v3, (uint64_t)&qword_1ED6A4DE0, (uint64_t)v18, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
    }
  }
}

uint64_t sub_1BC5BD664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_1BC3781C0;
  return sub_1BC626088(a5);
}

uint64_t sub_1BC5BD6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - v7;
  sub_1BC5C061C(a1, (uint64_t)v16 - v7);
  v9 = sub_1BC62C95C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BC358494((uint64_t)v8, (uint64_t)&qword_1ED6A4DE0, (uint64_t)MEMORY[0x1E0DF0750], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_1BC62C908();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BC62C950();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

void sub_1BC5BD868(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC5BD3C0();

}

void sub_1BC5BD89C(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MedicalRecordDetailViewController(0);
  v4 = v5.receiver;
  objc_msgSendSuper2(&v5, sel_viewDidAppear_, a3);
  sub_1BC5BE670(1);

}

void sub_1BC5BD904()
{
  void *v0;
  void *v1;
  void (*v2)(void);
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;

  v1 = v0;
  sub_1BC62B7EC();
  v2 = (void (*)(void))sub_1BC62B7F8();
  v2();
  v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_18;
  }
  v4 = v3;
  type metadata accessor for ButtonCell();
  sub_1BC347F0C((unint64_t *)&qword_1EF438B20, (uint64_t (*)(uint64_t))type metadata accessor for ButtonCell, (uint64_t)&unk_1BC64D2F4);
  sub_1BC62CB48();

  v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = v5;
  type metadata accessor for DeleteRecordCell();
  sub_1BC347F0C(&qword_1EF435A10, (uint64_t (*)(uint64_t))type metadata accessor for DeleteRecordCell, (uint64_t)&unk_1BC646F58);
  sub_1BC62CB48();

  v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = v7;
  type metadata accessor for ImageAttachmentCell(0);
  sub_1BC347F0C(&qword_1EF42ADD8, type metadata accessor for ImageAttachmentCell, (uint64_t)&unk_1BC63A788);
  sub_1BC62CB48();

  v9 = objc_msgSend(v1, sel_collectionView);
  if (!v9)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v10 = v9;
  type metadata accessor for PDFAttachmentCell(0);
  sub_1BC347F0C((unint64_t *)&unk_1EF42ADF0, type metadata accessor for PDFAttachmentCell, (uint64_t)&unk_1BC63A788);
  sub_1BC62CB48();

  v11 = objc_msgSend(v1, sel_collectionView);
  if (!v11)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v11;
  type metadata accessor for QRCodeCell();
  sub_1BC347F0C(&qword_1EF42B798, (uint64_t (*)(uint64_t))type metadata accessor for QRCodeCell, (uint64_t)&unk_1BC63B078);
  sub_1BC62CB48();

  v13 = objc_msgSend(v1, sel_collectionView);
  if (!v13)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v14 = v13;
  type metadata accessor for RecordDetailTitleCell();
  sub_1BC347F0C(&qword_1EF4302E0, (uint64_t (*)(uint64_t))type metadata accessor for RecordDetailTitleCell, (uint64_t)&unk_1BC640EF4);
  sub_1BC62CB48();

  v15 = objc_msgSend(v1, sel_collectionView);
  if (!v15)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v16 = v15;
  type metadata accessor for RecordSourceCell();
  sub_1BC347F0C(&qword_1EF42DDA0, (uint64_t (*)(uint64_t))type metadata accessor for RecordSourceCell, (uint64_t)&unk_1BC63D3F4);
  sub_1BC62CB48();

  v17 = objc_msgSend(v1, sel_collectionView);
  if (!v17)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v18 = v17;
  type metadata accessor for ReferenceRangeCell();
  sub_1BC347F0C(&qword_1EF4302E8, (uint64_t (*)(uint64_t))type metadata accessor for ReferenceRangeCell, (uint64_t)&unk_1BC640E64);
  sub_1BC62CB48();

  v19 = objc_msgSend(v1, sel_collectionView);
  if (!v19)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v20 = v19;
  type metadata accessor for TextItemCell();
  sub_1BC347F0C(&qword_1EF429AF8, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&protocol conformance descriptor for TextItemCell);
  sub_1BC62CB48();

  v21 = objc_msgSend(v1, sel_collectionView);
  if (!v21)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v22 = v21;
  type metadata accessor for TitleSubtitleDetailCell();
  sub_1BC347F0C(&qword_1EF42E2B0, (uint64_t (*)(uint64_t))type metadata accessor for TitleSubtitleDetailCell, (uint64_t)&unk_1BC63D9F0);
  sub_1BC62CB48();

  v23 = objc_msgSend(v1, sel_collectionView);
  if (!v23)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v24 = v23;
  type metadata accessor for TitleSubtitleDetailSpinnerCell();
  sub_1BC347F0C(&qword_1EF42E2B8, (uint64_t (*)(uint64_t))type metadata accessor for TitleSubtitleDetailSpinnerCell, (uint64_t)&unk_1BC63D960);
  sub_1BC62CB48();

  v25 = objc_msgSend(v1, sel_collectionView);
  if (!v25)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v26 = v25;
  type metadata accessor for TextAttachmentCell(0);
  sub_1BC347F0C(&qword_1EF42ADE0, type metadata accessor for TextAttachmentCell, (uint64_t)&unk_1BC63A788);
  sub_1BC62CB48();

  v27 = objc_msgSend(v1, sel_collectionView);
  if (!v27)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v28 = v27;
  type metadata accessor for ThumbnailAttachmentCell(0);
  sub_1BC347F0C(&qword_1EF42ADE8, type metadata accessor for ThumbnailAttachmentCell, (uint64_t)&unk_1BC63A788);
  sub_1BC62CB48();

  v29 = objc_msgSend(v1, sel_collectionView);
  if (!v29)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v30 = v29;
  sub_1BC62B714();
  sub_1BC62CB60();

  v31 = objc_msgSend(v1, sel_collectionView);
  if (v31)
  {
    sub_1BC62B60C();
    sub_1BC62CB54();

    return;
  }
LABEL_31:
  __break(1u);
}

void sub_1BC5BDE74(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  __int128 *v5;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[40];

  v2 = (void *)sub_1BC62A928();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_1BC62A928();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1BC62B7C8();
    sub_1BC62B4EC();
    sub_1BC62B060();
    swift_release();
    sub_1BC34E674((uint64_t)v11, (uint64_t)v8);
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    sub_1BC35817C(0, &qword_1EF429AE0);
    if (swift_dynamicCast())
    {
      v5 = v6;
LABEL_6:
      sub_1BC34E718(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
      sub_1BC62B1BC();
      sub_1BC5BE670(0);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      return;
    }
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1BC365820((uint64_t)v6);
    *(_QWORD *)&v6[0] = v4;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429AF0);
    v4 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v8;
      goto LABEL_6;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_1BC365820((uint64_t)v8);
  }
}

uint64_t sub_1BC5BE078(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC62A970();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v9 = a3;
  v10 = a1;
  sub_1BC5BDE74(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC5BE128(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC62A970();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v9 = a3;
  v10 = a1;
  LOBYTE(a1) = sub_1BC5399E4(v9);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a1 & 1;
}

id sub_1BC5BE1E0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v13;

  v5 = sub_1BC62A970();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v9 = a3;
  v10 = a1;
  v11 = sub_1BC5C01A8();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

id sub_1BC5BE294(uint64_t a1, void *a2)
{
  id v2;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD v9[6];

  v2 = a2;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1BC5BE670(0);
    v4 = (void *)sub_1BC62C650();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = v2;
    v6 = (void *)objc_opt_self();
    v9[4] = sub_1BC5C06E4;
    v9[5] = v5;
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 1107296256;
    v9[2] = sub_1BC3A9D80;
    v9[3] = &block_descriptor_31_0;
    v7 = _Block_copy(v9);
    swift_retain();
    swift_release();
    v2 = objc_msgSend(v6, sel_configurationWithIdentifier_previewProvider_actionProvider_, v4, 0, v7);

    swift_release();
    _Block_release(v7);
  }
  return v2;
}

uint64_t sub_1BC5BE3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1BC34B6A0(0, &qword_1EF42BC28);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v5 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v6 = (void *)sub_1BC62C650();
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v6, 0xE000000000000000);

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_bridgeObjectRetain();
  v9 = sub_1BC62CEE4();
  sub_1BC34B6A0(0, &qword_1EF42BC30);
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(v10 + 32) = v9;
  sub_1BC62C890();
  return sub_1BC62CDE8();
}

void sub_1BC5BE5F0()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_generalPasteboard);
  v1 = (id)sub_1BC62C650();
  objc_msgSend(v0, sel_setString_, v1);

}

void sub_1BC5BE670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  uint64_t aBlock;
  uint64_t v22;
  uint64_t (*v23)();
  void *v24;
  void (*v25)(void *, uint64_t);
  uint64_t v26;
  id v27;

  v2 = v1;
  if (qword_1ED6A3198 != -1)
    swift_once();
  v4 = (char *)qword_1ED6A42A0;
  v5 = objc_msgSend((id)objc_opt_self(), sel_supportedRecordCategoriesByCategoryType);
  if (v5)
  {
    v6 = v5;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5920);
    sub_1BC475BC8();
    v7 = sub_1BC62C548();

    v8 = qword_1EF438A20;
    v9 = objc_msgSend(*(id *)(v2 + qword_1EF438A20), sel_recordCategoryType);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v9);
    v11 = sub_1BC5A162C(v10, v7);

    swift_bridgeObjectRelease();
    v12 = objc_msgSend(*(id *)(v2 + v8), sel_primaryConcept);
    v13 = objc_msgSend(v12, sel_identifier);

    if (v11)
    {
      sub_1BC4FC8D8(v11, (uint64_t)&aBlock);
      v14 = aBlock;
      v15 = (void *)v22;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      if (v13)
      {
LABEL_6:
        v16 = *(void **)&v4[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
        v17 = swift_allocObject();
        *(_QWORD *)(v17 + 16) = v4;
        *(_OWORD *)(v17 + 24) = xmmword_1BC64A6D0;
        *(_QWORD *)(v17 + 40) = a1;
        *(_BYTE *)(v17 + 48) = v14;
        v25 = sub_1BC35865C;
        v26 = v17;
        aBlock = MEMORY[0x1E0C809B0];
        v22 = 1107296256;
        v23 = sub_1BC4E2FCC;
        v24 = &block_descriptor_25_0;
        v18 = _Block_copy(&aBlock);
        v19 = v13;
        v20 = v4;
        swift_release();
        objc_msgSend(v16, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v19, 0, v18);
        _Block_release(v18);

LABEL_9:
        return;
      }
    }
    else
    {
      v14 = 11;
      if (v13)
        goto LABEL_6;
    }
    LOBYTE(aBlock) = v14;
    sub_1BC4E4100(4, 19, a1, (char *)&aBlock, 0);
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1BC5BE934(char a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  _QWORD v10[4];

  v3 = objc_msgSend(v1, sel_navigationItem);
  if ((a1 & 1) != 0)
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_didTapDone_);
  else
    v4 = 0;
  v10[3] = type metadata accessor for MedicalRecordDetailViewController(0);
  v10[0] = v1;
  v5 = v1;
  v6 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v10, (uint64_t)sel_tapToRadar_);
  sub_1BC358494((uint64_t)v10, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
  v10[0] = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v7 = v4;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v6)
  {
    v8 = v6;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  sub_1BC34B6A0(0, &qword_1EF4295C8);
  v9 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setRightBarButtonItems_, v9);

}

uint64_t sub_1BC5BEB2C(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  _OWORD v7[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_1BC62D088();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    v5 = a1;
  }
  type metadata accessor for TapToRadarManager();
  static TapToRadarManager.presentTapToRadarDialogue(from:)(a1);

  return sub_1BC358494((uint64_t)v7, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
}

void sub_1BC5BEBC0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC5BEBEC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC5BEC1C()
{
  uint64_t v0;

  return swift_release();
}

id sub_1BC5BEC68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordDetailViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC5BEC9C(uint64_t a1)
{

  return swift_release();
}

uint64_t sub_1BC5BECF4()
{
  return type metadata accessor for MedicalRecordDetailViewController(0);
}

void sub_1BC5BECFC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC5BE934(1);

}

void sub_1BC5BED38(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC5BE934(0);

}

void sub_1BC5BED74()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v1 = objc_msgSend(v0, sel_navigationController);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_viewControllers);
    sub_1BC34B6A0(0, &qword_1EF429570);
    v4 = sub_1BC62C878();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v5 >= 2)
    {
      v7 = objc_msgSend(v2, sel_popViewControllerAnimated_, 1);

      return;
    }

  }
  v6 = objc_msgSend(v0, sel_presentationController);

  if (v6)
    objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1BC5BEED8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  char *v16;
  void *v17;
  void *v18;
  char *v19;
  id v20;
  void *v21;
  char *v22;
  void *v23;
  void *v24;
  uint64_t v25;

  v3 = v2;
  v6 = sub_1BC62C4D0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v9 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D68]), sel_initWithTimeIntervalSinceNow_, 1.0);
  v12 = *(void **)&v3[qword_1EF438A18];
  *(_QWORD *)&v3[qword_1EF438A18] = v11;

  v13 = qword_1EF438A10;
  v14 = *(void **)&v3[qword_1EF438A10];
  if (v14)
    objc_msgSend(v14, sel_removeFromSuperview);
  v15 = objc_allocWithZone((Class)type metadata accessor for HRProgressHUD());
  swift_unknownObjectWeakInit();
  v16 = sub_1BC3CD9A0(0, 0);
  v17 = *(void **)&v3[v13];
  *(_QWORD *)&v3[v13] = v16;

  v18 = *(void **)&v3[v13];
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v3, sel_view);
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v19, sel_setAutoresizingMask_, 45);
      v22 = &v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_text];
      *(_QWORD *)v22 = a1;
      *((_QWORD *)v22 + 1) = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(void **)&v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel];
      if (*((_QWORD *)v22 + 1))
      {
        swift_bridgeObjectRetain();
        v24 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
      }
      else
      {
        v24 = 0;
      }
      objc_msgSend(v23, sel_setText_, v24);

      objc_msgSend(v19, sel_setNeedsLayout);
      objc_msgSend(v21, sel_addSubview_, v19);
      objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator], sel_startAnimating);

      return;
    }
LABEL_12:
    __break(1u);
  }
}

uint64_t sub_1BC5BF154(void *a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  void *v22;
  double v23;
  double v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v28)(_QWORD);
  void *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  id v33;
  uint64_t (*v34)(uint64_t);
  char *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t (*v40)(void *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD);
  void *v49;
  uint64_t v50;
  _QWORD aBlock[6];

  v49 = a1;
  v50 = a3;
  v48 = a2;
  v4 = sub_1BC62C47C();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62C4AC();
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1BC62C4C4();
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v41 - v13;
  v15 = sub_1BC62C4D0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v18 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
  v19 = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) != 0)
  {
    v21 = qword_1EF438A10;
    v22 = *(void **)&v3[qword_1EF438A10];
    if (v22)
    {
      if (!*(_QWORD *)&v3[qword_1EF438A18])
        goto LABEL_8;
      objc_msgSend(*(id *)&v3[qword_1EF438A18], sel_timeIntervalSinceNow);
      v24 = v23;
      if (v23 > 0.01)
      {
        v41 = sub_1BC62CC74();
        sub_1BC62C4B8();
        MEMORY[0x1BCCF17B8](v11, fmin(v24, 1.0));
        v25 = *(void (**)(char *, uint64_t))(v9 + 8);
        v26 = v42;
        v25(v11, v42);
        v27 = (_QWORD *)swift_allocObject();
        v28 = v48;
        v29 = v49;
        v27[2] = v3;
        v27[3] = v29;
        v30 = v50;
        v27[4] = v28;
        v27[5] = v30;
        aBlock[4] = sub_1BC5C0160;
        aBlock[5] = v27;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BC39BE70;
        aBlock[3] = &block_descriptor_10_0;
        v31 = _Block_copy(aBlock);
        v32 = v3;
        v33 = v29;
        swift_retain();
        swift_release();
        sub_1BC62C494();
        aBlock[0] = MEMORY[0x1E0DEE9D8];
        v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
        sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC35811C();
        v35 = v45;
        v36 = v47;
        sub_1BC62D0A0();
        v37 = (void *)v41;
        MEMORY[0x1BCCF1EFC](v14, v8, v35, v31);
        _Block_release(v31);

        (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v36);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
        return ((uint64_t (*)(char *, uint64_t))v25)(v14, v26);
      }
      v22 = *(void **)&v3[v21];
      if (!v22)
      {
        v38 = 0;
      }
      else
      {
LABEL_8:
        objc_msgSend(v22, sel_removeFromSuperview);
        v38 = *(void **)&v3[v21];
      }
      v39 = v49;
      v40 = (uint64_t (*)(void *))v48;
      *(_QWORD *)&v3[v21] = 0;

      return v40(v39);
    }
    else
    {
      return v48(v49);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC5BF534(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  __int128 v7;
  __int128 v8;

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_1BC62D088();
    swift_unknownObjectRelease();
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
    v5 = a1;
  }
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0, v7, v8);

  return sub_1BC358494((uint64_t)&v7, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
}

uint64_t *sub_1BC5BF5CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC62A7B4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1BC5BF694(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_1BC5BF6FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1BC5BF7A0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1BC5BF890(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1BC5BF934(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1BC5BFA24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC5BFA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1BC62A7B4();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1BC5BFA7C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC5BFA88(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1BC62A7B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1BC5BFAD8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62A7B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1BC5BFB10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC62A7B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for PresentationContext(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF438AF0);
}

uint64_t sub_1BC5BFB64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

id sub_1BC5BFBB8(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  char *v11;
  objc_class *v12;
  id v13;
  objc_super v15;

  v7 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[qword_1EF438A10] = 0;
  *(_QWORD *)&v3[qword_1EF438A18] = 0;
  *(_QWORD *)&v3[qword_1EF438A20] = a1;
  sub_1BC5349AC(a3, (uint64_t)v9);
  type metadata accessor for MedicalRecordDetailDataSourceProvider();
  swift_allocObject();
  v10 = a1;
  v11 = v3;
  *(_QWORD *)&v11[qword_1EF438A28] = sub_1BC609A60(v10, a2, (uint64_t)v9);

  v12 = (objc_class *)type metadata accessor for MedicalRecordDetailViewController(0);
  v15.receiver = v11;
  v15.super_class = v12;
  v13 = objc_msgSendSuper2(&v15, sel_initWithCollectionViewLayout_, 0);
  sub_1BC5BE934(0);

  sub_1BC5C06F4(a3);
  return v13;
}

uint64_t sub_1BC5BFCEC(void *a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  id v20;
  uint64_t result;
  uint64_t v22;
  void *v23;
  double v24;
  double v25;
  void *v26;
  char *v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  char *v31;
  id v32;
  char *v33;
  uint64_t (*v34)(uint64_t);
  char *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  _QWORD aBlock[6];

  v49 = a1;
  v7 = sub_1BC62C47C();
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  MEMORY[0x1E0C80A78](v7);
  v45 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62C4AC();
  v43 = *(_QWORD *)(v9 - 8);
  v44 = v9;
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1BC62C4C4();
  v40 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v41 = (char *)&v40 - v14;
  v15 = sub_1BC62C4D0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = a4;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v20 = a3;
  swift_retain();
  *v18 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
  LOBYTE(a3) = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if ((a3 & 1) != 0)
  {
    v22 = qword_1EF438A10;
    v23 = *(void **)&a2[qword_1EF438A10];
    if (v23)
    {
      if (!*(_QWORD *)&a2[qword_1EF438A18])
        goto LABEL_8;
      objc_msgSend(*(id *)&a2[qword_1EF438A18], sel_timeIntervalSinceNow);
      v25 = v24;
      if (v24 > 0.01)
      {
        v26 = (void *)sub_1BC62CC74();
        sub_1BC62C4B8();
        v27 = v41;
        MEMORY[0x1BCCF17B8](v12, fmin(v25, 1.0));
        v40 = *(_QWORD *)(v40 + 8);
        ((void (*)(char *, uint64_t))v40)(v12, v48);
        v28 = (_QWORD *)swift_allocObject();
        v29 = v49;
        v28[2] = a2;
        v28[3] = v29;
        v28[4] = sub_1BC5C0154;
        v28[5] = v19;
        aBlock[4] = sub_1BC5C0160;
        aBlock[5] = v28;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BC39BE70;
        aBlock[3] = &block_descriptor_68;
        v30 = _Block_copy(aBlock);
        v31 = a2;
        v32 = v29;
        swift_retain();
        swift_release();
        v33 = v42;
        sub_1BC62C494();
        aBlock[0] = MEMORY[0x1E0DEE9D8];
        v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
        sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC35811C();
        v35 = v45;
        v36 = v47;
        sub_1BC62D0A0();
        MEMORY[0x1BCCF1EFC](v27, v33, v35, v30);
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v36);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v44);
        ((void (*)(char *, uint64_t))v40)(v27, v48);
        return swift_release();
      }
      v23 = *(void **)&a2[v22];
      if (!v23)
      {
        v38 = 0;
      }
      else
      {
LABEL_8:
        objc_msgSend(v23, sel_removeFromSuperview);
        v38 = *(void **)&a2[v22];
      }
      v39 = v49;
      *(_QWORD *)&a2[v22] = 0;

      v37 = v39;
    }
    else
    {
      v37 = v49;
    }
    sub_1BC52B168(v37, v20, a4);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC5C0128()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC5C0154(void *a1)
{
  uint64_t v1;

  sub_1BC52B168(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t block_copy_helper_65(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_65()
{
  return swift_release();
}

uint64_t sub_1BC5C0180()
{
  uint64_t v0;

  return sub_1BC5BF154(*(void **)(v0 + 24), *(uint64_t (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
}

id sub_1BC5C01A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  _QWORD *v38;
  _BYTE v39[40];
  _BYTE v40[40];

  sub_1BC62B7C8();
  sub_1BC62B4EC();
  sub_1BC62B060();
  swift_release();
  sub_1BC34E674((uint64_t)v40, (uint64_t)v39);
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for RecordDetailTitleItem();
  if (swift_dynamicCast())
  {
    sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v0 = swift_allocObject();
    *(_OWORD *)(v0 + 16) = xmmword_1BC6395A0;
    v2 = v38[2];
    v1 = v38[3];
    v3 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
    v4 = sub_1BC3644C0();
    *(_QWORD *)(v0 + 64) = v4;
    *(_QWORD *)(v0 + 32) = v2;
    *(_QWORD *)(v0 + 40) = v1;
    v5 = v38[4];
    v6 = v38[5];
    *(_QWORD *)(v0 + 96) = v3;
    *(_QWORD *)(v0 + 104) = v4;
    *(_QWORD *)(v0 + 72) = v5;
    *(_QWORD *)(v0 + 80) = v6;
LABEL_9:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1BC62C6B0();
    v17 = v16;
    swift_release();
    goto LABEL_10;
  }
  sub_1BC34E674((uint64_t)v40, (uint64_t)v39);
  type metadata accessor for TitleSubtitleDetailItem(0);
  if (swift_dynamicCast())
  {
    sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BC6395A0;
    v9 = v38[2];
    v8 = v38[3];
    v10 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    v11 = sub_1BC3644C0();
    *(_QWORD *)(v7 + 64) = v11;
    *(_QWORD *)(v7 + 32) = v9;
    *(_QWORD *)(v7 + 40) = v8;
    v12 = v38[4];
    v13 = v38[5];
    *(_QWORD *)(v7 + 96) = v10;
    *(_QWORD *)(v7 + 104) = v11;
    if (!v13)
      v12 = 0;
    v14 = 0xE000000000000000;
    if (v13)
      v14 = v13;
    *(_QWORD *)(v7 + 72) = v12;
    *(_QWORD *)(v7 + 80) = v14;
    goto LABEL_9;
  }
  sub_1BC34E674((uint64_t)v40, (uint64_t)v39);
  type metadata accessor for ReferenceRangeItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    v15 = 0;
    v17 = 0;
    goto LABEL_10;
  }
  v20 = (void *)v38[2];
  if (!v20)
  {
    swift_release();
    goto LABEL_16;
  }
  v21 = v20;
  v22 = objc_msgSend(v21, sel_currentValue);
  v23 = objc_msgSend(v22, sel_displayString);

  v24 = sub_1BC62C680();
  v26 = v25;

  v27 = objc_msgSend(v21, sel_unitString);
  if (v27)
  {
    v28 = v27;
    v29 = sub_1BC62C680();
    v31 = v30;

  }
  else
  {
    v29 = 0;
    v31 = 0;
  }
  sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1BC6395A0;
  v33 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
  v34 = sub_1BC3644C0();
  *(_QWORD *)(v32 + 32) = v24;
  *(_QWORD *)(v32 + 40) = v26;
  *(_QWORD *)(v32 + 96) = v33;
  *(_QWORD *)(v32 + 104) = v34;
  if (v31)
    v35 = v29;
  else
    v35 = 0;
  v36 = 0xE000000000000000;
  if (v31)
    v36 = v31;
  *(_QWORD *)(v32 + 64) = v34;
  *(_QWORD *)(v32 + 72) = v35;
  *(_QWORD *)(v32 + 80) = v36;
  v15 = sub_1BC62C6B0();
  v17 = v37;
  swift_release();

LABEL_10:
  v18 = sub_1BC5BE294(v15, v17);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  return v18;
}

uint64_t sub_1BC5C0570()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC5C05A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BC377F18;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_1BC3781C0;
  return sub_1BC626088(v2);
}

uint64_t sub_1BC5C061C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC5C0678()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5C069C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC5C06C0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC5C06E4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5BE3C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BC5C06EC()
{
  sub_1BC5BE5F0();
}

uint64_t sub_1BC5C06F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PresentationContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id ClinicalNoteRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id ClinicalNoteRecordFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store);
}

uint64_t ClinicalNoteRecordFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context);
}

id ClinicalNoteRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ClinicalNoteRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ClinicalNoteRecordFormatter()
{
  return objc_opt_self();
}

uint64_t sub_1BC5C0838(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC5C116C(a1);
  if (!v2)
    return sub_1BC5C0898(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC5C0898(void *a1)
{
  uint64_t inited;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v25;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B398, (uint64_t (*)(uint64_t))sub_1BC39CBC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC64A770;
  *(_QWORD *)(inited + 32) = sub_1BC61F7B0(a1);
  *(_QWORD *)(inited + 40) = sub_1BC546064(a1);
  sub_1BC39CBE4();
  v3 = a1;
  v4 = sub_1BC506E3C(v3);

  v5 = Array<A>.newlineJoined.getter(v4);
  v7 = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = sub_1BC4A8758(v5, v7);
  v8 = objc_msgSend(v3, sel_authors);
  if (v8)
  {
    v9 = sub_1BC62C878();

    v8 = (id)Array<A>.newlineJoined.getter(v9);
    v11 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  *(_QWORD *)(inited + 56) = sub_1BC4A892C((uint64_t)v8, v11);
  *(_QWORD *)(inited + 64) = sub_1BC5C0E1C(v3);
  *(_QWORD *)(inited + 72) = sub_1BC5C1010(v3);
  sub_1BC62C890();
  v25 = MEMORY[0x1E0DEE9D8];
  v12 = *(void **)(inited + 32);
  if (v12)
  {
    v13 = v12;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v14 = *(void **)(inited + 40);
  if (v14)
  {
    v15 = v14;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v16 = *(void **)(inited + 48);
  if (v16)
  {
    v17 = v16;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v18 = *(void **)(inited + 56);
  if (v18)
  {
    v19 = v18;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v20 = *(void **)(inited + 64);
  if (v20)
  {
    v21 = v20;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v22 = *(void **)(inited + 72);
  if (v22)
  {
    v23 = v22;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  swift_bridgeObjectRelease();
  return v25;
}

id ClinicalNoteRecordFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ClinicalNoteRecordFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ClinicalNoteRecordFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalNoteRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC5C0D10()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store);
}

uint64_t sub_1BC5C0D24()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context);
}

id sub_1BC5C0D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for ClinicalNoteRecordFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1BC5C0DA8(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC5C116C(a1);
  if (!v2)
    return sub_1BC5C0898(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

id sub_1BC5C0E1C(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD v16[4];
  _QWORD v17[4];
  _QWORD v18[4];

  if (qword_1EF428598 != -1)
    swift_once();
  v2 = (id)qword_1EF42F770;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC39CBE4();
  v6 = objc_msgSend(a1, sel_relevantStartDate);
  v7 = objc_msgSend(a1, sel_relevantEndDate);
  v8 = MEMORY[0x1E0C80A78](v7);
  v18[2] = v3;
  v18[3] = v5;
  v9 = MEMORY[0x1E0C80A78](v8);
  v17[2] = v3;
  v17[3] = v5;
  MEMORY[0x1E0C80A78](v9);
  v16[2] = v3;
  v16[3] = v5;
  v10 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v11 = sub_1BC62C680();
  v13 = v12;

  v14 = sub_1BC4AA920(v6, v7, sub_1BC3CF6AC, (uint64_t)v18, sub_1BC3AF328, (uint64_t)v17, (void (*)(id))sub_1BC3CF6AC, (uint64_t)v16, v11, v13);
  swift_bridgeObjectRelease();
  return v14;
}

id sub_1BC5C1010(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1EF428598 != -1)
    swift_once();
  v2 = (id)qword_1EF42F770;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC39CBE4();
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_noteCreationDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BC5C116C(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v16;

  sub_1BC39CBE4();
  v2 = a1;
  v3 = sub_1BC506E3C(v2);

  v4 = Array<A>.newlineJoined.getter(v3);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = sub_1BC4A8758(v4, v6);
  v8 = objc_msgSend(v2, sel_authors);
  if (v8)
  {
    v9 = sub_1BC62C878();

    v8 = (id)Array<A>.newlineJoined.getter(v9);
    v11 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v12 = sub_1BC4A892C((uint64_t)v8, v11);
  v16 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v13 = v7;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v12)
  {
    v14 = v12;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  return v16;
}

unint64_t sub_1BC5C132C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC5C1350();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC5C1350()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF438B78;
  if (!qword_1EF438B78)
  {
    v1 = type metadata accessor for ClinicalNoteRecordFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF438B78);
  }
  return result;
}

uint64_t method lookup function for ClinicalNoteRecordFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClinicalNoteRecordFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ClinicalNoteRecordFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t MedicalRecordTimelineRemovedRecordItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

id static MedicalRecordTimelineRemovedRecordItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1BC3ED754(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16));
}

uint64_t sub_1BC5C13FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1BC4FD4B4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t MedicalRecordTimelineRemovedRecordItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineRemovedRecordItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5C14B0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  sub_1BC62D670();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC4FD4B4(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5C1530()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1BC4FD4B4(v4, v2);
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5C15B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_1BC4FD4B4(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC5C161C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  sub_1BC62D670();
  v1 = *v0;
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1BC4FD4B4(v4, v2);
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

id sub_1BC5C169C(uint64_t a1, uint64_t a2)
{
  return sub_1BC3ED754(*(_QWORD *)(*(_QWORD *)a1 + 16), *(_QWORD *)(*(_QWORD *)a2 + 16));
}

id sub_1BC5C16B0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  objc_class *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  objc_super v25;

  sub_1BC357158(0, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  v12 = sub_1BC62BC18();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v4[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item];
  v17 = (objc_class *)type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell();
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v25.receiver = v4;
  v25.super_class = v17;
  v18 = objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC62A988();
  v19 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC62CDF4();

  v20 = (void *)objc_opt_self();
  v21 = v18;
  v22 = objc_msgSend(v20, sel_currentTraitCollection);
  sub_1BC62BBF4();
  sub_1BC62BC48();
  sub_1BC5E5A5C((uint64_t)v15);
  sub_1BC62BC3C();
  v23 = sub_1BC62BC78();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 0, 1, v23);
  MEMORY[0x1BCCF1FE0](v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

  return v21;
}

id sub_1BC5C18B8(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  objc_class *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  objc_super v21;

  sub_1BC357158(0, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - v4;
  v6 = sub_1BC62BC18();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v1[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item];
  v11 = (objc_class *)type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell();
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v21.receiver = v1;
  v21.super_class = v11;
  v12 = objc_msgSendSuper2(&v21, sel_initWithCoder_, a1);
  v13 = v12;
  if (v12)
  {
    v14 = v12;
    sub_1BC62A988();
    v15 = (id)*MEMORY[0x1E0CD2A68];
    sub_1BC62CDF4();

    v16 = (void *)objc_opt_self();
    v17 = v14;
    v18 = objc_msgSend(v16, sel_currentTraitCollection);
    sub_1BC62BBF4();
    sub_1BC62BC48();
    sub_1BC5E5A5C((uint64_t)v9);
    sub_1BC62BC3C();
    v19 = sub_1BC62BC78();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 0, 1, v19);
    MEMORY[0x1BCCF1FE0](v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  }
  return v13;
}

uint64_t sub_1BC5C1AC0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC5C1B30();
  return sub_1BC37AE60((uint64_t)v5);
}

uint64_t sub_1BC5C1B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  id v16;
  void *v17;
  uint64_t v18;
  double v19;
  void (*v20)(uint64_t *, _QWORD);
  void *v21;
  id v22;
  void (*v23)(uint64_t *, _QWORD);
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(uint64_t *, _QWORD);
  id v29;
  void (*v30)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;

  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v36 - v2;
  v4 = sub_1BC62BBAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62BB64();
  v44 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62BD98();
  v45 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v0 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v14, (uint64_t)v47);
  if (!v48)
    return sub_1BC37AE60((uint64_t)v47);
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for MedicalRecordTimelineRemovedRecordItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v38 = v8;
    v39 = v3;
    v41 = v4;
    v42 = v0;
    v43 = v46;
    sub_1BC62BD8C();
    if (qword_1ED6A4888 != -1)
      swift_once();
    v40 = v5;
    v16 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC62BD74();
    v17 = (void *)objc_opt_self();
    v18 = *MEMORY[0x1E0DC4B10];
    v19 = *MEMORY[0x1E0DC1440];
    result = (uint64_t)objc_msgSend(v17, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B10], *MEMORY[0x1E0DC1440]);
    if (result)
    {
      v37 = v10;
      v20 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
      sub_1BC62BCC0();
      v20(v47, 0);
      v21 = (void *)objc_opt_self();
      v22 = objc_msgSend(v21, sel_labelColor);
      v23 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
      sub_1BC62BCCC();
      v23(v47, 0);
      v24 = *(_QWORD *)(v43 + 16);
      v25 = v11;
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        v26 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v27 = v7;
      v47[0] = v26;
      sub_1BC62D52C();
      sub_1BC62BC9C();
      result = (uint64_t)objc_msgSend(v17, sel__preferredFontForTextStyle_weight_, v18, v19);
      if (result)
      {
        v28 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
        sub_1BC62BCC0();
        v28(v47, 0);
        v29 = objc_msgSend(v21, sel_secondaryLabelColor);
        v30 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
        sub_1BC62BCCC();
        v30(v47, 0);
        v48 = v25;
        v49 = MEMORY[0x1E0DC2398];
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v47);
        (*(void (**)(uint64_t *, char *, uint64_t))(v45 + 16))(boxed_opaque_existential_1, v13, v25);
        MEMORY[0x1BCCF1FC8](v47);
        sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        sub_1BC62BBC4();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
        v32 = v44;
        v33 = v37;
        v34 = v38;
        (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v37, *MEMORY[0x1E0DC1C20], v38);
        v35 = sub_1BC62BB70();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v39, 1, 1, v35);
        sub_1BC62BBA0();
        sub_1BC62BB7C();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v41);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
        sub_1BC62CD40();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v13, v25);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC5C20DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC5C212C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC5C1B30();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC5C2198(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5C21E0;
}

uint64_t sub_1BC5C21E0(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC5C1B30();
  return result;
}

void sub_1BC5C22B0(uint64_t a1, void *a2)
{
  sub_1BC5C231C(a2);
}

id MedicalRecordTimelineRemovedRecordItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC5C22F8(uint64_t a1, void *a2)
{
  sub_1BC5C231C(a2);
}

void sub_1BC5C231C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  id v18;
  char *v19;
  id v20;
  uint64_t v21;
  _QWORD v22[5];

  v2 = v1;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  v10 = v1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v10, (uint64_t)v22);
  if (v22[3])
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    type metadata accessor for MedicalRecordTimelineRemovedRecordItem();
    v11 = swift_dynamicCast();
    if ((v11 & 1) != 0)
    {
      v20 = a1;
      v12 = v21;
      if (qword_1ED6A4878 != -1)
        v11 = swift_once();
      v21 = *(_QWORD *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
      MEMORY[0x1E0C80A78](v11);
      sub_1BC62AA6C();
      v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
      sub_1BC4A7A04();
      sub_1BC379B20((unint64_t *)&qword_1ED6A4B90, 255, v13, MEMORY[0x1E0D2D480]);
      swift_retain();
      sub_1BC62B888();
      swift_release();
      v14 = (void *)v22[0];
      v15 = *(_QWORD *)(v12 + 16);
      v16 = sub_1BC62A7B4();
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
      v17(v9, 1, 1, v16);
      v17(v6, 1, 1, v16);
      objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
      v18 = v14;
      swift_bridgeObjectRetain();
      v19 = sub_1BC356878(v18, 0, (uint64_t)v9, 0, 0, (uint64_t)v6, v15, 0, 0);

      objc_msgSend(v20, sel_showViewController_sender_, v19, v2);
      swift_release();

    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v22);
  }
}

uint64_t type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC5C2610(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF438BB0, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineRemovedRecordItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineRemovedRecordItem);
}

uint64_t type metadata accessor for MedicalRecordTimelineRemovedRecordItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC5C265C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineRemovedRecordItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t method lookup function for MedicalRecordTimelineRemovedRecordItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItemCell.didSelectCell(_:in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItemCell.deselectionBehavior.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t sub_1BC5C2784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BC62C95C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BC62C950();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BC377E3C(a1, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BC62C908();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1BC5C28D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BC62C95C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BC62C950();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BC377E3C(a1, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BC62C908();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  sub_1BC34B508(0, &qword_1EF438F40, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  return swift_task_create();
}

uint64_t sub_1BC5C2A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  v4 = sub_1BC62BB34();
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5C2AB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = v0[21];
  v2 = v0[20];
  v3 = *(void **)(v0[22] + 24);
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v1;
  swift_bridgeObjectRetain();
  v5 = sub_1BC62C86C();
  v0[26] = v5;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1BC5C2BD0;
  v6 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v7 = v0 + 10;
  v7[1] = 0x40000000;
  v7[2] = sub_1BC5C4770;
  v7[3] = &block_descriptor_181;
  v7[4] = v6;
  objc_msgSend(v3, sel_fetchAccountsForGatewaysWithExternalIDs_completion_, v5, v7);
  return swift_continuation_await();
}

uint64_t sub_1BC5C2BD0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

void sub_1BC5C2C30()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 120);

  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v2)
      goto LABEL_7;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      (*(void (**)(uint64_t))(v0 + 8))(v2);
      return;
    }
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)MEMORY[0x1BCCF24CC](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(id *)(v1 + 32);
LABEL_6:
    v2 = (uint64_t)v3;
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1BC5C2CF0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[2];

  v2 = *(void **)(v0 + 208);
  v1 = *(void **)(v0 + 216);
  swift_willThrow();

  sub_1BC62BAF8();
  swift_bridgeObjectRetain();
  swift_retain();
  v3 = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  v4 = v1;
  v5 = sub_1BC62BB28();
  v6 = sub_1BC62CAC4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 216);
    v22 = *(_QWORD *)(v0 + 192);
    v23 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 160);
    v9 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v25[0] = v21;
    *(_DWORD *)v9 = 136315650;
    v10 = sub_1BC5C6CEC();
    *(_QWORD *)(v0 + 128) = sub_1BC4991F0(v10, v11, v25);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 136) = sub_1BC4991F0(v20, v8, v25);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 22) = 2080;
    *(_QWORD *)(v0 + 144) = v7;
    v12 = v7;
    sub_1BC35E44C();
    v13 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 152) = sub_1BC4991F0(v13, v14, v25);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v5, v6, "%s failed to fetch existing account for gateway %s: %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v21, -1, -1);
    MEMORY[0x1BCCF36A8](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    v15 = *(void **)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 192);
    v16 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 184);

    swift_release_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1BC5C2FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[40] = a2;
  v3[41] = v2;
  v3[39] = a1;
  v4 = sub_1BC62A7B4();
  v3[42] = v4;
  v3[43] = *(_QWORD *)(v4 - 8);
  v3[44] = swift_task_alloc();
  v3[45] = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  v5 = sub_1BC62BB34();
  v3[49] = v5;
  v3[50] = *(_QWORD *)(v5 - 8);
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5C30CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0[48];
  v2 = v0[39];
  sub_1BC62BAF8();
  sub_1BC35EBE0(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountLoginUpgradeAction);
  swift_retain_n();
  v3 = sub_1BC62BB28();
  v4 = sub_1BC62CAB8();
  if (os_log_type_enabled(v3, v4))
  {
    v23 = v0[49];
    v24 = v0[53];
    v21 = v0[48];
    v22 = v0[50];
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v25 = v6;
    *(_DWORD *)v5 = 136315394;
    v7 = sub_1BC5C6CEC();
    v0[38] = sub_1BC4991F0(v7, v8, &v25);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v9 = sub_1BC62D52C();
    v0[31] = sub_1BC4991F0(v9, v10, &v25);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC348D78(v21, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    _os_log_impl(&dword_1BC30A000, v3, v4, "%s determining appropriate login/upgrade action for account %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v6, -1, -1);
    MEMORY[0x1BCCF36A8](v5, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v11(v24, v23);
  }
  else
  {
    v12 = v0[53];
    v13 = v0[49];
    v14 = v0[50];
    v15 = v0[48];
    swift_release_n();
    sub_1BC348D78(v15, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountLoginUpgradeAction);

    v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v0[54] = v11;
  v16 = *(void **)(v0[41] + 24);
  v0[55] = v16;
  v17 = sub_1BC62A784();
  v0[56] = v17;
  v0[15] = v0 + 32;
  v0[10] = v0;
  v0[11] = sub_1BC5C33B4;
  v18 = swift_continuation_init();
  v0[18] = MEMORY[0x1E0C809B0];
  v19 = v0 + 18;
  v19[1] = 0x40000000;
  v19[2] = sub_1BC38FC10;
  v19[3] = &block_descriptor_170;
  v19[4] = v18;
  objc_msgSend(v16, sel_fetchAccountWithIdentifier_completion_, v17, v19);
  return swift_continuation_await();
}

uint64_t sub_1BC5C33B4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 456) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_1BC5C3414()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  unint64_t v6;
  _QWORD *v7;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  _QWORD *v21;

  v1 = (void *)v0[56];
  v2 = v0[45];
  v3 = v0[39];
  v4 = (void *)v0[32];
  v0[58] = v4;
  v5 = v4;

  v6 = *(_QWORD *)(v3 + *(int *)(v2 + 20));
  if (v6 >= 3)
  {
    if (v6 == 3)
    {
      v9 = (void *)v0[55];
      v11 = v0[43];
      v10 = v0[44];
      v12 = v0[42];
      v13 = objc_msgSend(v5, sel_identifier);

      sub_1BC62A79C();
      v14 = sub_1BC62A784();
      v0[62] = v14;
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      v0[7] = v0 + 64;
      v0[2] = v0;
      v0[3] = sub_1BC5C37F8;
      v15 = swift_continuation_init();
      v0[23] = MEMORY[0x1E0C809B0];
      v16 = v0 + 23;
      v16[1] = 0x40000000;
      v16[2] = sub_1BC5C5F90;
      v16[3] = &block_descriptor_171;
      v16[4] = v15;
      objc_msgSend(v9, sel_deleteAccountWithIdentifier_deletionReason_completion_, v14, 0, v16);
      return swift_continuation_await();
    }
    else
    {
      v18 = (void *)v0[40];
      v17 = v0[41];
      type metadata accessor for ClinicalAccountUpgradeManager();
      swift_allocObject();
      swift_retain();
      v19 = v5;
      v20 = v18;
      v0[59] = sub_1BC54FA50(v19, v17, v20);

      swift_release();
      v21 = (_QWORD *)swift_task_alloc();
      v0[60] = v21;
      *v21 = v0;
      v21[1] = sub_1BC5C3630;
      return sub_1BC548E44();
    }
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc();
    v0[61] = v7;
    *v7 = v0;
    v7[1] = sub_1BC5C3714;
    return ClinicalAccountManager.startRelogin(to:from:)((uint64_t)v5, v0[40]);
  }
}

uint64_t sub_1BC5C3630()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC5C3684()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 464);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C3714()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 464);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_1BC5C3770()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C37F8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 504) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC5C3858()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 496);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C38E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29[2];

  v2 = *(void **)(v0 + 448);
  v1 = *(void **)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 312);
  swift_willThrow();

  sub_1BC62BAF8();
  sub_1BC35EBE0(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountLoginUpgradeAction);
  swift_retain();
  v5 = v1;
  swift_retain();
  v6 = v1;
  v7 = sub_1BC62BB28();
  v8 = sub_1BC62CAC4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 456);
    v27 = *(_QWORD *)(v0 + 416);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    v26 = *(_QWORD *)(v0 + 392);
    v10 = *(_QWORD *)(v0 + 376);
    v11 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v29[0] = v25;
    *(_DWORD *)v11 = 136315650;
    v12 = sub_1BC5C6CEC();
    *(_QWORD *)(v0 + 264) = sub_1BC4991F0(v12, v13, v29);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v11 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v14 = sub_1BC62D52C();
    *(_QWORD *)(v0 + 224) = sub_1BC4991F0(v14, v15, v29);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC348D78(v10, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    *(_WORD *)(v11 + 22) = 2080;
    *(_QWORD *)(v0 + 232) = v9;
    v16 = v9;
    sub_1BC35E44C();
    v17 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 240) = sub_1BC4991F0(v17, v18, v29);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v7, v8, "%s failed to fetch account %s: %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v25, -1, -1);
    MEMORY[0x1BCCF36A8](v11, -1, -1);

    v28(v27, v26);
  }
  else
  {
    v19 = *(void **)(v0 + 456);
    v20 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    v21 = *(_QWORD *)(v0 + 416);
    v22 = *(_QWORD *)(v0 + 392);
    v23 = *(_QWORD *)(v0 + 376);

    swift_release_n();
    sub_1BC348D78(v23, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountLoginUpgradeAction);

    v20(v21, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C3C50()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30[2];

  v2 = *(void **)(v0 + 496);
  v1 = *(void **)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 312);
  swift_willThrow();

  sub_1BC62BAF8();
  sub_1BC35EBE0(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountLoginUpgradeAction);
  swift_retain();
  v5 = v1;
  swift_retain();
  v6 = v1;
  v7 = sub_1BC62BB28();
  v8 = sub_1BC62CAC4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 504);
    v28 = *(_QWORD *)(v0 + 408);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    v26 = *(void **)(v0 + 464);
    v27 = *(_QWORD *)(v0 + 392);
    v24 = *(_QWORD *)(v0 + 368);
    v10 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v30[0] = v25;
    *(_DWORD *)v10 = 136315650;
    v11 = sub_1BC5C6CEC();
    *(_QWORD *)(v0 + 272) = sub_1BC4991F0(v11, v12, v30);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v13 = sub_1BC62D52C();
    *(_QWORD *)(v0 + 280) = sub_1BC4991F0(v13, v14, v30);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC348D78(v24, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    *(_WORD *)(v10 + 22) = 2080;
    *(_QWORD *)(v0 + 288) = v9;
    v15 = v9;
    sub_1BC35E44C();
    v16 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 296) = sub_1BC4991F0(v16, v17, v30);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v7, v8, "%s failed to delete account %s: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v25, -1, -1);
    MEMORY[0x1BCCF36A8](v10, -1, -1);

    v29(v28, v27);
  }
  else
  {
    v18 = *(void **)(v0 + 504);
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    v20 = *(_QWORD *)(v0 + 408);
    v21 = *(_QWORD *)(v0 + 392);
    v22 = *(_QWORD *)(v0 + 368);

    swift_release_n();
    sub_1BC348D78(v22, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountLoginUpgradeAction);

    v19(v20, v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *ClinicalAccountManager.__allocating_init(profile:)(void *a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)swift_allocObject();
  v3 = MEMORY[0x1E0DEE9E8];
  v2[5] = 0;
  v2[6] = 0;
  v2[4] = v3;
  v2[2] = a1;
  v2[3] = objc_msgSend(a1, sel_clinicalAccountStore);
  return v2;
}

uint64_t ClinicalAccountManager.upgradeAccount(_:presentingViewController:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v3 = v2;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  type metadata accessor for ClinicalAccountUpgradeManager();
  swift_allocObject();
  v9 = a1;
  swift_retain();
  v10 = a2;
  v11 = sub_1BC54FA50(v9, v3, v10);

  swift_release();
  v12 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v11;
  sub_1BC5C2784((uint64_t)v8, (uint64_t)&unk_1EF42BFB8, (uint64_t)v13);
  return swift_release();
}

uint64_t ClinicalAccountManager.startRelogin(to:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v4 = sub_1BC62BB34();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  sub_1BC62C944();
  v3[12] = sub_1BC62C938();
  v3[13] = sub_1BC62C908();
  v3[14] = v5;
  return swift_task_switch();
}

uint64_t sub_1BC5C4200()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  objc_class *v24;
  char *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = objc_msgSend(*(id *)(v0 + 56), sel_hk_window);
  if (!v1)
  {
    v2 = *(void **)(v0 + 56);
    sub_1BC62BAF8();
    swift_retain_n();
    v3 = v2;
    v4 = sub_1BC62BB28();
    v5 = sub_1BC62CAC4();
    v6 = os_log_type_enabled(v4, v5);
    v8 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 72);
    v10 = *(void **)(v0 + 56);
    if (v6)
    {
      v37 = *(_QWORD *)(v0 + 80);
      v11 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v38 = v35;
      *(_DWORD *)v11 = 136315394;
      v12 = sub_1BC5C6CEC();
      v36 = v9;
      *(_QWORD *)(v0 + 32) = sub_1BC4991F0(v12, v13, &v38);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v11 + 12) = 2080;
      v14 = v10;
      v15 = objc_msgSend(v14, sel_description);
      v16 = sub_1BC62C680();
      v18 = v17;

      *(_QWORD *)(v0 + 40) = sub_1BC4991F0(v16, v18, &v38);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v4, v5, "%s attempting to start a relogin session on %s but that view controller has no window", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v35, -1, -1);
      MEMORY[0x1BCCF36A8](v11, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v7, v36);
    }
    else
    {
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F98]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  }
  *(_QWORD *)(v0 + 120) = v1;
  v19 = *(void **)(v0 + 56);
  v20 = *(_QWORD *)(v0 + 64);
  v21 = *(void **)(v0 + 48);
  type metadata accessor for ClinicalAccountDetailsViewController();
  v22 = 8 * (swift_dynamicCastClass() != 0);
  v23 = *(void **)(v20 + 24);
  v24 = (objc_class *)type metadata accessor for ClinicalAccountLoginSession();
  v25 = (char *)objc_allocWithZone(v24);
  *(_QWORD *)&v25[OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession] = 0;
  *(_QWORD *)&v25[OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore] = v23;
  *(_QWORD *)&v25[OBJC_IVAR___HRUIClinicalAccountLoginSession_presentationAnchor] = v1;
  *(_QWORD *)&v25[OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext] = v22;
  *(_QWORD *)(v0 + 16) = v25;
  *(_QWORD *)(v0 + 24) = v24;
  v26 = v23;
  v27 = v1;
  *(_QWORD *)(v0 + 128) = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  v28 = objc_msgSend(v26, sel_healthStore);
  v29 = objc_msgSend(v28, sel_profileIdentifier);
  *(_QWORD *)(v0 + 136) = v29;

  v30 = swift_allocObject();
  *(_QWORD *)(v0 + 144) = v30;
  *(_QWORD *)(v30 + 16) = v21;
  *(_QWORD *)(v30 + 24) = v19;
  v31 = v19;
  v32 = v21;
  v33 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v33;
  *v33 = v0;
  v33[1] = sub_1BC5C45D4;
  return sub_1BC390780(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), (uint64_t)v29, 0, 0, (uint64_t)sub_1BC5CF354, v30);
}

uint64_t sub_1BC5C45D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = *(void **)(v2 + 136);
    swift_release();

  }
  return swift_task_switch();
}

uint64_t sub_1BC5C4644()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C468C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v1 = *(void **)(v0 + 136);
  swift_release();
  swift_release();

  if (qword_1ED6A31B0 != -1)
    swift_once();
  v2 = *(void **)(v0 + 160);
  v4 = *(void **)(v0 + 120);
  v3 = *(void **)(v0 + 128);
  v5 = *(void **)(v0 + 56);
  v6 = objc_msgSend(*(id *)(v0 + 48), sel_gateway);
  v7 = sub_1BC5556FC(v6, v2);
  objc_msgSend(v5, sel_presentViewController_animated_completion_, v7, 1, 0);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C4770(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1BC5CE708(a1, a2, a3, (unint64_t *)&qword_1EF431480);
}

void sub_1BC5C4784(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  id v8;
  id v9;
  _QWORD *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  _QWORD aBlock[6];

  v3 = v2;
  if (qword_1ED6A3308 != -1)
    swift_once();
  v6 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v7 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, 0, v7, 1, 0xE000000000000000);

  v9 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v3;
  v10[3] = a1;
  v10[4] = a2;
  swift_retain();
  v11 = a1;
  v12 = a2;
  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1BC5CFCCC;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39B5A0;
  aBlock[3] = &block_descriptor_21_3;
  v14 = _Block_copy(aBlock);
  swift_release();
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v13, 1, v14, 0xE000000000000000);
  _Block_release(v14);

  objc_msgSend(v8, sel_addAction_, v16);
  v17 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v18 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v18, 0, 0, 0xE000000000000000);

  objc_msgSend(v8, sel_addAction_, v19);
  objc_msgSend(v12, sel_presentViewController_animated_completion_, v8, 1, 0);

}

void ClinicalAccountManager.presentAccounts(presentingViewController:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  _QWORD v17[3];
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v7 = sub_1BC62AB80();
  v8 = *(void **)(v3 + 16);
  v9 = objc_msgSend(v8, sel_healthStore);
  v10 = sub_1BC62AB74();
  sub_1BC62B234();
  v11 = objc_msgSend(v8, sel_healthStore);
  v18 = (void *)v7;
  v19 = MEMORY[0x1E0D2DFE8];
  v17[0] = v10;
  swift_retain();
  v12 = (void *)sub_1BC62B228();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  if (a2)
  {
    v19 = a2;
    v20 = a3;
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 1107296256;
    v17[2] = sub_1BC39BE70;
    v18 = &block_descriptor_69;
    v13 = _Block_copy(v17);
    swift_retain();
    swift_release();
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v12, 1, v13, v17[0]);
  _Block_release(v13);
  v14 = objc_allocWithZone((Class)type metadata accessor for SettingsViewController());
  v15 = v8;
  v16 = sub_1BC3F40BC(v15);

  objc_msgSend(v12, sel_pushViewController_animated_, v16, 0);
  swift_release();

}

uint64_t ClinicalAccountManager.newerAccount(of:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1BC5C4CAC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_gateway);
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_gatewayVersions);
    if (v3)
    {
      v4 = v3;
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF434C40);
      v5 = sub_1BC62C878();
      *(_QWORD *)(v0 + 40) = v5;

      if (v5 >> 62)
        goto LABEL_18;
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      *(_QWORD *)(v0 + 48) = v6;
      if (v6)
      {
        do
        {
          v7 = 0;
          while (1)
          {
            v8 = *(_QWORD *)(v0 + 40);
            v9 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF24CC](v7) : *(id *)(v8 + 8 * v7 + 32);
            v2 = v9;
            *(_QWORD *)(v0 + 56) = v9;
            *(_QWORD *)(v0 + 64) = v7 + 1;
            if (__OFADD__(v7, 1))
              break;
            v10 = *(void **)(v0 + 32);
            v11 = objc_msgSend(v9, sel_minCompatibleAPIVersion);
            if ((uint64_t)objc_msgSend(v10, sel_minCompatibleAPIVersion) < (uint64_t)v11)
            {
              v13 = objc_msgSend(v2, sel_gatewayID);
              v14 = sub_1BC62C680();
              v16 = v15;

              *(_QWORD *)(v0 + 72) = v16;
              v17 = (_QWORD *)swift_task_alloc();
              *(_QWORD *)(v0 + 80) = v17;
              *v17 = v0;
              v17[1] = sub_1BC5C4E9C;
              return sub_1BC5C2A4C(v14, v16);
            }

            v7 = *(_QWORD *)(v0 + 64);
            if (v7 == *(_QWORD *)(v0 + 48))
            {
              v2 = *(void **)(v0 + 32);
              goto LABEL_13;
            }
          }
          __break(1u);
LABEL_18:
          swift_bridgeObjectRetain();
          v18 = sub_1BC62D3B8();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v0 + 48) = v18;
        }
        while (v18);
      }
LABEL_13:
      swift_bridgeObjectRelease();
    }

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1BC5C4E9C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

id sub_1BC5C4F00()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 88);

  if (v1)
  {
    v2 = *(void **)(v0 + 32);
    swift_bridgeObjectRelease();

    v3 = *(_QWORD *)(v0 + 88);
    return (id)(*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  v4 = *(_QWORD *)(v0 + 64);
  if (v4 == *(_QWORD *)(v0 + 48))
  {
LABEL_10:
    v10 = *(void **)(v0 + 32);
    swift_bridgeObjectRelease();

    v3 = 0;
    return (id)(*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  while (1)
  {
    v5 = *(_QWORD *)(v0 + 40);
    result = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF24CC](v4) : *(id *)(v5 + 8 * v4 + 32);
    v7 = result;
    *(_QWORD *)(v0 + 56) = result;
    *(_QWORD *)(v0 + 64) = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    v8 = *(void **)(v0 + 32);
    v9 = objc_msgSend(result, sel_minCompatibleAPIVersion);
    if ((uint64_t)objc_msgSend(v8, sel_minCompatibleAPIVersion) < (uint64_t)v9)
    {
      v11 = objc_msgSend(v7, sel_gatewayID);
      v12 = sub_1BC62C680();
      v14 = v13;

      *(_QWORD *)(v0 + 72) = v14;
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 80) = v15;
      *v15 = v0;
      v15[1] = sub_1BC5C4E9C;
      return (id)sub_1BC5C2A4C(v12, v14);
    }

    v4 = *(_QWORD *)(v0 + 64);
    if (v4 == *(_QWORD *)(v0 + 48))
      goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC5C5060(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[6] = a1;
  v2[7] = v1;
  v3 = sub_1BC62BB34();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v4 = sub_1BC62A7B4();
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5C50F8()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 48), sel_identifier);
  sub_1BC62A79C();

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v2;
  *v2 = v0;
  v2[1] = sub_1BC5C5188;
  v3 = *(_QWORD *)(v0 + 56);
  v2[16] = *(_QWORD *)(v0 + 112);
  v2[17] = v3;
  return swift_task_switch();
}

uint64_t sub_1BC5C5188(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v4 = *v2;
  *(_QWORD *)(v4 + 128) = v1;
  swift_task_dealloc();
  v5 = *(_QWORD *)(v4 + 112);
  v6 = *(_QWORD *)(v4 + 88);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 96) + 8);
  if (v1)
  {
    *(_QWORD *)(v4 + 136) = v7;
    v7(v5, v6);
    return swift_task_switch();
  }
  else
  {
    v7(v5, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
  }
}

uint64_t sub_1BC5C523C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  os_log_type_t type;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(void **)(v0 + 48);
  v2 = *(void **)(v0 + 128);
  sub_1BC62BAF8();
  swift_retain();
  v3 = v1;
  v4 = v2;
  swift_retain();
  v5 = v3;
  v6 = v2;
  v7 = sub_1BC62BB28();
  v8 = sub_1BC62CAC4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 128);
    v30 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
    v10 = *(_QWORD *)(v0 + 104);
    v29 = *(_QWORD *)(v0 + 88);
    v33 = *(_QWORD *)(v0 + 72);
    v34 = *(_QWORD *)(v0 + 64);
    v35 = *(_QWORD *)(v0 + 80);
    type = v8;
    v11 = *(void **)(v0 + 48);
    v12 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v36 = v31;
    *(_DWORD *)v12 = 136315650;
    v13 = sub_1BC5C6CEC();
    *(_QWORD *)(v0 + 16) = sub_1BC4991F0(v13, v14, &v36);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v12 + 12) = 2080;
    v15 = objc_msgSend(v11, sel_identifier);
    sub_1BC62A79C();

    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v16 = sub_1BC62D52C();
    v18 = v17;
    v30(v10, v29);
    *(_QWORD *)(v0 + 24) = sub_1BC4991F0(v16, v18, &v36);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 22) = 2080;
    *(_QWORD *)(v0 + 32) = v9;
    v19 = v9;
    sub_1BC35E44C();
    v20 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 40) = sub_1BC4991F0(v20, v21, &v36);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v7, type, "%s failed to refresh account %s, will return potentially stale instance. Error: %s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v31, -1, -1);
    MEMORY[0x1BCCF36A8](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    v22 = *(void **)(v0 + 128);
    v24 = *(_QWORD *)(v0 + 72);
    v23 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 64);
    v26 = *(void **)(v0 + 48);

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  v27 = *(id *)(v0 + 48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v27);
}

uint64_t sub_1BC5C55C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v4 = sub_1BC62A760();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = swift_task_alloc();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5C5674()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  void *v32;
  uint64_t v33;

  if (objc_msgSend(*(id *)(v0 + 128), sel_userStatus))
  {
    v1 = objc_msgSend(*(id *)(v0 + 128), sel_userStatus);
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v1);
  }
  else
  {
    v2 = 0;
  }
  *(_QWORD *)(v0 + 184) = v2;
  if (objc_msgSend(*(id *)(v0 + 128), sel_multiDeviceStatus))
  {
    v3 = objc_msgSend(*(id *)(v0 + 128), sel_multiDeviceStatus);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v3);
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(v0 + 192) = v4;
  v5 = *(void **)(v0 + 128);
  v6 = *(void **)(*(_QWORD *)(v0 + 136) + 24);
  v33 = sub_1BC62A784();
  *(_QWORD *)(v0 + 200) = v33;
  v7 = objc_msgSend(v5, sel_firstSharedDate);
  v8 = *(_QWORD *)(v0 + 176);
  if (v7)
  {
    v10 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 144);
    sub_1BC62A724();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v9, v11);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v12(v8, 0, 1, v11);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v11) == 1)
    {
      v7 = 0;
    }
    else
    {
      v13 = *(_QWORD *)(v0 + 176);
      v14 = *(_QWORD *)(v0 + 144);
      v15 = *(_QWORD *)(v0 + 152);
      v7 = (id)sub_1BC62A700();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
  }
  else
  {
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 152) + 56);
    v12(*(_QWORD *)(v0 + 176), 1, 1, *(_QWORD *)(v0 + 144));
  }
  *(_QWORD *)(v0 + 208) = v7;
  v16 = objc_msgSend(*(id *)(v0 + 128), sel_lastSharedDate);
  v17 = *(_QWORD *)(v0 + 168);
  if (v16)
  {
    v18 = v16;
    v32 = v6;
    v19 = v4;
    v20 = v2;
    v21 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 160);
    v23 = *(_QWORD *)(v0 + 144);
    sub_1BC62A724();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v17, v22, v23);
    v12(v17, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v17, 1, v23) == 1)
    {
      v24 = 0;
    }
    else
    {
      v25 = *(_QWORD *)(v0 + 168);
      v27 = *(_QWORD *)(v0 + 144);
      v26 = *(_QWORD *)(v0 + 152);
      v24 = sub_1BC62A700();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    }
    v2 = v20;
    v4 = v19;
    v6 = v32;
  }
  else
  {
    v12(*(_QWORD *)(v0 + 168), 1, 1, *(_QWORD *)(v0 + 144));
    v24 = 0;
  }
  *(_QWORD *)(v0 + 216) = v24;
  v28 = objc_msgSend(*(id *)(v0 + 128), sel_primaryDeviceName);
  *(_QWORD *)(v0 + 224) = v28;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1BC5C59B0;
  v29 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v30 = (_QWORD *)(v0 + 80);
  v30[1] = 0x40000000;
  v30[2] = sub_1BC5C656C;
  v30[3] = &block_descriptor_179;
  v30[4] = v29;
  objc_msgSend(v6, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v33, v7, v24, v2, v4, v28, v30);
  return swift_continuation_await();
}

uint64_t sub_1BC5C59B0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 232) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC5C5A10()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = *(void **)(v0 + 216);
  v1 = *(void **)(v0 + 224);
  v4 = *(void **)(v0 + 200);
  v3 = *(void **)(v0 + 208);
  v5 = *(void **)(v0 + 184);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C5A98()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)(v0 + 224);
  v3 = *(void **)(v0 + 208);
  v2 = *(void **)(v0 + 216);
  v5 = *(void **)(v0 + 192);
  v4 = *(void **)(v0 + 200);
  v6 = *(void **)(v0 + 184);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C5B30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v1;
  return swift_task_switch();
}

uint64_t sub_1BC5C5B48()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;

  v1 = v0[17];
  sub_1BC62A778();
  v2 = objc_allocWithZone(MEMORY[0x1E0CB6BB8]);
  v3 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initForClinicalAccountIdentifier_, v3);

  v5 = objc_msgSend(*(id *)(v1 + 16), sel_healthStore);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6BA8]), sel_initWithHealthStore_recipientIdentifier_, v5, v4);
  v0[18] = v6;

  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1BC5C5C8C;
  v7 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  v0[12] = sub_1BC5CE6F4;
  v0[13] = &block_descriptor_177;
  v0[14] = v7;
  objc_msgSend(v6, sel_fetchSharingAuthorizationsWithCompletion_, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_1BC5C5C8C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC5C5CEC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_1BC5C5D24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_1BC5C5D40()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[17];
  sub_1BC62A778();
  v2 = objc_allocWithZone(MEMORY[0x1E0CB6BB8]);
  v3 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initForClinicalAccountIdentifier_, v3);

  v5 = objc_msgSend(*(id *)(v1 + 16), sel_healthStore);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6BA8]), sel_initWithHealthStore_recipientIdentifier_, v5, v4);
  v0[18] = v6;

  sub_1BC34B6A0(0, &qword_1EF42DB80);
  v7 = sub_1BC62C86C();
  v0[19] = v7;
  v0[2] = v0;
  v0[3] = sub_1BC5C5EB0;
  v8 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  v0[12] = sub_1BC5C656C;
  v0[13] = &block_descriptor_175;
  v0[14] = v8;
  objc_msgSend(v6, sel_addSharingAuthorizations_completion_, v7, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_1BC5C5EB0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC5C5F10()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C5F48()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C5F90(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    sub_1BC35E44C();
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1BC5C600C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[19] = a1;
  v2[20] = v1;
  v3 = sub_1BC62BB34();
  v2[21] = v3;
  v2[22] = *(_QWORD *)(v3 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5C607C()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BC62BAF8();
  swift_retain_n();
  v1 = sub_1BC62BB28();
  v2 = sub_1BC62CAB8();
  if (os_log_type_enabled(v1, v2))
  {
    v18 = v0[21];
    v19 = v0[24];
    v16 = v0[19];
    v17 = v0[22];
    v3 = swift_slowAlloc();
    v4 = swift_slowAlloc();
    v20 = v4;
    *(_DWORD *)v3 = 136315394;
    v5 = sub_1BC5C6CEC();
    v0[17] = sub_1BC4991F0(v5, v6, &v20);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v3 + 12) = 2048;
    v0[18] = v16;
    sub_1BC62CFF8();
    _os_log_impl(&dword_1BC30A000, v1, v2, "%s triggering clinical sharing sync with reason %ld", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v4, -1, -1);
    MEMORY[0x1BCCF36A8](v3, -1, -1);

    v7 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v7(v19, v18);
  }
  else
  {
    v8 = v0[24];
    v9 = v0[21];
    v10 = v0[22];
    swift_release_n();

    v7 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v7(v8, v9);
  }
  v0[25] = v7;
  v11 = v0[19];
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EEF8]), sel_init);
  v0[26] = v12;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1BC5C62E4;
  v13 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v14 = v0 + 10;
  v14[1] = 0x40000000;
  v14[2] = sub_1BC5CE7A4;
  v14[3] = &block_descriptor_108;
  v14[4] = v13;
  objc_msgSend(v12, sel_shareHealthDataWithOptions_reason_completion_, 0, v11, v14);
  return swift_continuation_await();
}

uint64_t sub_1BC5C62E4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC5C6344()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  void *v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  swift_bridgeObjectRelease();
  sub_1BC62BAF8();
  swift_retain_n();
  v1 = sub_1BC62BB28();
  v2 = sub_1BC62CADC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(void **)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 184);
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    v13 = *(_QWORD *)(v0 + 168);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v16 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_1BC5C6CEC();
    *(_QWORD *)(v0 + 128) = sub_1BC4991F0(v6, v7, &v16);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BC30A000, v1, v2, "%s clinical sharing sync completed", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v5, -1, -1);
    MEMORY[0x1BCCF36A8](v4, -1, -1);

    v15(v14, v13);
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    v8 = *(void **)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 184);
    v11 = *(_QWORD *)(v0 + 168);
    swift_release_n();

    v9(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C6510()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 208);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C656C(uint64_t a1, int a2, void *a3)
{
  uint64_t result;
  _QWORD *v5;
  id v6;

  if (a2)
    return swift_continuation_throwingResume();
  if (a3)
  {
    sub_1BC35E44C();
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC5C65E4()
{
  uint64_t result;

  result = sub_1BC5C6604();
  byte_1EF438CA0 = result & 1;
  return result;
}

uint64_t sub_1BC5C6604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  SecTaskRef v7;
  __SecTask *v8;
  __CFString *v9;
  CFTypeRef v10;
  uint64_t v11;
  CFErrorRef v12;
  __CFError *v13;
  __CFError *v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  __CFError *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  CFErrorRef v27;
  _BYTE v29[4];
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CFErrorRef error[2];

  error[1] = *(CFErrorRef *)MEMORY[0x1E0C80C00];
  v0 = sub_1BC62BB34();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v2);
  v6 = &v29[-v5];
  v7 = SecTaskCreateFromSelf(0);
  if (!v7)
  {
    sub_1BC62BB10();
    v24 = sub_1BC62BB28();
    v25 = sub_1BC62CAC4();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1BC30A000, v24, v25, "Could not get secTask for account login availability", v26, 2u);
      MEMORY[0x1BCCF36A8](v26, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
    return 0;
  }
  v8 = v7;
  error[0] = 0;
  v9 = (__CFString *)sub_1BC62C650();
  v10 = SecTaskCopyValueForEntitlement(v8, v9, error);

  if (!v10 || (v33 = (uint64_t)v10, swift_unknownObjectRetain(), (swift_dynamicCast() & 1) == 0))
  {
    if (!error[0])
      goto LABEL_15;
    v13 = error[0];
    sub_1BC62BB10();
    v14 = v13;
    v15 = sub_1BC62BB28();
    v16 = sub_1BC62CAC4();
    v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      v18 = swift_slowAlloc();
      v30 = v17;
      v19 = v18;
      v31 = swift_slowAlloc();
      v33 = v31;
      *(_DWORD *)v19 = 136315394;
      v32 = sub_1BC4991F0(0xD000000000000034, 0x80000001BC666640, &v33);
      sub_1BC62CFF8();
      *(_WORD *)(v19 + 12) = 2080;
      v32 = (uint64_t)v14;
      type metadata accessor for CFError(0);
      v20 = v14;
      v21 = sub_1BC62C6E0();
      v32 = sub_1BC4991F0(v21, v22, &v33);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v15, (os_log_type_t)v30, "Could not get value for entitlement %s: %s", (uint8_t *)v19, 0x16u);
      v23 = v31;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v23, -1, -1);
      MEMORY[0x1BCCF36A8](v19, -1, -1);

    }
    else
    {

    }
    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v4, v0);
    v27 = error[0];
    if (error[0])
    {
      swift_unknownObjectRelease();

      v8 = v27;
    }
    else
    {
LABEL_15:
      swift_unknownObjectRelease();
    }

    return 0;
  }
  v11 = v32;
  v12 = error[0];
  swift_unknownObjectRelease();

  if (v12)
  return v11;
}

uint64_t static ClinicalAccountManager.accountLoginAvailable.getter()
{
  if (qword_1EF4287E0 != -1)
    swift_once();
  swift_beginAccess();
  return byte_1EF438CA0;
}

uint64_t static ClinicalAccountManager.accountLoginAvailable.setter(char a1)
{
  uint64_t result;

  if (qword_1EF4287E0 != -1)
    swift_once();
  result = swift_beginAccess();
  byte_1EF438CA0 = a1 & 1;
  return result;
}

uint64_t (*static ClinicalAccountManager.accountLoginAvailable.modify())()
{
  if (qword_1EF4287E0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *ClinicalAccountManager.init(profile:)(void *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9E8];
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = v2;
  v1[2] = a1;
  v1[3] = objc_msgSend(a1, sel_clinicalAccountStore);
  return v1;
}

uint64_t ClinicalAccountManager.fetchAccount(withIdentifier:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v1;
  return swift_task_switch();
}

uint64_t sub_1BC5C6B60()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0[17] + 24);
  v2 = sub_1BC62A784();
  v0[18] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1BC5C6C10;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1BC38FC10;
  v4[3] = &block_descriptor_7_2;
  v4[4] = v3;
  objc_msgSend(v1, sel_fetchAccountWithIdentifier_completion_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_1BC5C6C10()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC5C6C70()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1BC5C6CAC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5C6CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    v1 = sub_1BC5CEC64();
    *(_QWORD *)(v0 + 40) = v1;
    *(_QWORD *)(v0 + 48) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BC5C6D5C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t, _QWORD, _QWORD), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, _QWORD, _QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[2];

  v10 = sub_1BC62BB34();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    if (a2)
    {
      v28 = sub_1BC34A1F4(a2);
      if (v28)
      {
        if (v28 >> 62)
        {
          swift_bridgeObjectRetain();
          v34 = sub_1BC62D3B8();
          swift_bridgeObjectRelease();
          if (v34)
            goto LABEL_8;
        }
        else if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_8:
          sub_1BC62B9FC();
          swift_allocObject();
          sub_1BC62B9F0();
          v29 = swift_bridgeObjectRetain();
          v30 = sub_1BC5CF080(v29);
          swift_bridgeObjectRelease();
          if (v30 >> 62)
            v31 = sub_1BC62D3B8();
          else
            v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v32 = v31;
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
      }
    }
    v32 = 0;
LABEL_16:
    a5(v32, 0, 0);
    return;
  }
  v37 = v12;
  v15 = a3;
  sub_1BC62BAF8();
  v16 = a3;
  swift_retain();
  v17 = a3;
  swift_retain();
  v18 = sub_1BC62BB28();
  v19 = sub_1BC62CAC4();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v35 = a6;
    v21 = v20;
    v22 = swift_slowAlloc();
    v39[0] = v22;
    *(_DWORD *)v21 = 136315394;
    v36 = a5;
    v23 = sub_1BC5C6CEC();
    v38 = sub_1BC4991F0(v23, v24, v39);
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    v38 = (uint64_t)a3;
    v25 = a3;
    sub_1BC35E44C();
    v26 = sub_1BC62C6E0();
    v38 = sub_1BC4991F0(v26, v27, v39);
    sub_1BC62CFF8();
    a5 = v36;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v18, v19, "%s failed to fetch SCD records, cannot determine number of Wallet Cards. Error: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v22, -1, -1);
    MEMORY[0x1BCCF36A8](v21, -1, -1);
  }
  else
  {
    swift_release_n();

  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v37);
  v33 = a3;
  a5(0, 1, a3);

}

uint64_t sub_1BC5C70E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  void (*v28)(_BYTE *, uint64_t, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v72[12];
  int v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, _BYTE *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102[3];

  v9 = v8;
  v96 = a7;
  v97 = a8;
  v86 = a5;
  v87 = a6;
  v83 = a4;
  v82 = a3;
  v84 = a2;
  sub_1BC5CFD94();
  v81 = v11;
  v80 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v79 = &v72[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC5CFE68();
  v88 = *(_QWORD *)(v13 - 8);
  v89 = v13;
  MEMORY[0x1E0C80A78](v13);
  v85 = &v72[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC5D00C0();
  v91 = *(_QWORD *)(v15 - 8);
  v92 = v15;
  MEMORY[0x1E0C80A78](v15);
  v90 = &v72[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC5D01C0(0);
  v94 = *(_QWORD *)(v17 - 8);
  v95 = v17;
  MEMORY[0x1E0C80A78](v17);
  v93 = &v72[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_1BC62A7B4();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  v22 = MEMORY[0x1E0C80A78](v19);
  v99 = &v72[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22);
  v24 = &v72[-v23];
  v25 = sub_1BC62BB34();
  v78 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v27 = &v72[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC62BAF8();
  v28 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16);
  v100 = a1;
  v98 = v28;
  v28(v24, a1, v19);
  swift_retain_n();
  v29 = sub_1BC62BB28();
  v30 = sub_1BC62CADC();
  v31 = v30;
  if (os_log_type_enabled(v29, v30))
  {
    v32 = swift_slowAlloc();
    v76 = (void (*)(uint64_t, _BYTE *, uint64_t))v25;
    v33 = v32;
    v75 = swift_slowAlloc();
    v102[0] = v75;
    *(_DWORD *)v33 = 136315394;
    v77 = v19;
    v34 = sub_1BC5C6CEC();
    v101 = sub_1BC4991F0(v34, v35, v102);
    v73 = v31;
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v36 = sub_1BC62D52C();
    v101 = sub_1BC4991F0(v36, v37, v102);
    v19 = v77;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v24, v19);
    _os_log_impl(&dword_1BC30A000, v29, (os_log_type_t)v73, "%s starting to delete account %s", (uint8_t *)v33, 0x16u);
    v38 = v75;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v38, -1, -1);
    MEMORY[0x1BCCF36A8](v33, -1, -1);

    (*(void (**)(_BYTE *, void (*)(uint64_t, _BYTE *, uint64_t)))(v78 + 8))(v27, v76);
  }
  else
  {
    swift_release_n();
    (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v24, v19);

    (*(void (**)(_BYTE *, uint64_t))(v78 + 8))(v27, v25);
  }
  v39 = *(void **)(v8 + 24);
  v40 = v99;
  v98(v99, v100, v19);
  v41 = *(unsigned __int8 *)(v20 + 80);
  v75 = ((v41 + 24) & ~v41) + v21;
  v42 = (v41 + 24) & ~v41;
  v78 = v42;
  v77 = v41 | 7;
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v39;
  v76 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v20 + 32);
  v76(v43 + v42, v40, v19);
  v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C960D8];
  sub_1BC5CFFDC(0, &qword_1EF438DA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C960D8]);
  sub_1BC5D0080(&qword_1EF438DB8, &qword_1EF438DA8, v44, MEMORY[0x1E0C96108]);
  v45 = v39;
  v46 = v79;
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF438E10, (uint64_t (*)(uint64_t))sub_1BC5CFD94, MEMORY[0x1E0C96148]);
  v47 = v81;
  v48 = sub_1BC62BFFC();
  (*(void (**)(_BYTE *, uint64_t))(v80 + 8))(v46, v47);
  v102[0] = v48;
  v49 = (_QWORD *)swift_allocObject();
  v74 = v9;
  v50 = v82;
  v49[2] = v9;
  v49[3] = v50;
  v49[4] = v83;
  swift_retain();
  sub_1BC38F084(v50);
  sub_1BC62BE88();
  v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95D78];
  sub_1BC5CFFDC(0, &qword_1EF438DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95D78]);
  sub_1BC5CFF4C();
  v52 = MEMORY[0x1E0C95D90];
  sub_1BC5D0080(&qword_1EF438DE0, &qword_1EF438DD0, v51, MEMORY[0x1E0C95D90]);
  v53 = v19;
  sub_1BC347F0C(&qword_1EF438DD8, (uint64_t (*)(uint64_t))sub_1BC5CFF4C, v52);
  v54 = v85;
  sub_1BC62C074();
  swift_release();
  swift_release();
  v55 = (_QWORD *)swift_allocObject();
  v56 = v86;
  v57 = v87;
  v55[2] = v86;
  v55[3] = v57;
  v55[4] = v84;
  sub_1BC38F084(v56);
  sub_1BC5D0154();
  v58 = MEMORY[0x1E0C95B78];
  sub_1BC347F0C(&qword_1EF438DF8, (uint64_t (*)(uint64_t))sub_1BC5CFE68, MEMORY[0x1E0C95B78]);
  v59 = v89;
  v60 = v90;
  sub_1BC62C02C();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v54, v59);
  v61 = swift_allocObject();
  v62 = v74;
  *(_QWORD *)(v61 + 16) = sub_1BC5D0294;
  *(_QWORD *)(v61 + 24) = v62;
  swift_retain();
  sub_1BC62BE88();
  sub_1BC347F0C(&qword_1EF438E08, (uint64_t (*)(uint64_t))sub_1BC5D00C0, MEMORY[0x1E0C95950]);
  v63 = v92;
  v64 = v93;
  sub_1BC62C074();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v91 + 8))(v60, v63);
  v65 = v99;
  v98(v99, v100, v53);
  v66 = (v75 + 7) & 0xFFFFFFFFFFFFFFF8;
  v67 = swift_allocObject();
  *(_QWORD *)(v67 + 16) = v62;
  v76(v67 + v78, v65, v53);
  v68 = (_QWORD *)(v67 + v66);
  v69 = v97;
  *v68 = v96;
  v68[1] = v69;
  sub_1BC347F0C(&qword_1EF438E18, (uint64_t (*)(uint64_t))sub_1BC5D01C0, v58);
  swift_retain();
  swift_retain();
  v70 = v95;
  sub_1BC62C038();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v94 + 8))(v64, v70);
  swift_beginAccess();
  sub_1BC62BEA0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC5C79B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char **v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v69;
  char *v70;
  id v71;
  char *v72;
  _QWORD v73[2];
  char *v74;
  uint64_t v75;
  char *v76;
  id v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v95 = sub_1BC62A7B4();
  MEMORY[0x1E0C80A78](v95);
  v73[1] = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1EF438E50, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v77 = v8;
  v75 = *((_QWORD *)v8 - 1);
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)v73 - v9;
  sub_1BC5D06DC();
  v11 = v10;
  v78 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v76 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5D076C(0);
  v81 = *(_QWORD *)(v13 - 8);
  v82 = v13;
  MEMORY[0x1E0C80A78](v13);
  v79 = (char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5D0854(0);
  v84 = *(_QWORD *)(v15 - 8);
  v85 = v15;
  MEMORY[0x1E0C80A78](v15);
  v80 = (char *)v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5D0878();
  v87 = *(_QWORD *)(v17 - 8);
  v88 = v17;
  MEMORY[0x1E0C80A78](v17);
  v86 = (char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5D09AC();
  v90 = *(_QWORD *)(v19 - 8);
  v91 = v19;
  MEMORY[0x1E0C80A78](v19);
  v89 = (char *)v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5D0A74(0);
  v93 = *(_QWORD *)(v21 - 8);
  v94 = v21;
  MEMORY[0x1E0C80A78](v21);
  v92 = (char *)v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BC62A760();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, v27, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v73 - v29;
  v31 = &selRef_viewIsAppearing_;
  if (objc_msgSend(a1, sel_isSharingToProvider))
  {
    v73[0] = v11;
    v32 = a2;
    v33 = a3;
    v34 = objc_msgSend(a1, sel_clinicalSharingStatus);
    v35 = objc_msgSend(v34, sel_lastSharedDate);

    if (v35)
    {
      sub_1BC62A724();

      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v30, v26, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v30, 0, 1, v23);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v30, 1, v23) != 1)
      {
        sub_1BC377E3C((uint64_t)v30, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
        a3 = v33;
        a2 = v32;
        v31 = (char **)0x1F4D5B000;
        goto LABEL_9;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v30, 1, 1, v23);
    }
    sub_1BC377E3C((uint64_t)v30, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    a3 = v33;
    a2 = v32;
    v11 = v73[0];
    v31 = &selRef_viewIsAppearing_;
  }
  v36 = v11;
  v37 = objc_msgSend(a1, sel_clinicalSharingStatus);
  v38 = objc_msgSend(v37, v31[336]);

  if (v38 != (id)4)
  {
    v39 = objc_msgSend(a1, sel_clinicalSharingStatus);
    v40 = objc_msgSend(v39, v31[336]);

    if (v40 != (id)5)
    {
      v69 = objc_msgSend(a1, sel_identifier);
      sub_1BC62A79C();

      v70 = v74;
      sub_1BC62BF48();
      type metadata accessor for ClinicalAccountManager.FlowError();
      sub_1BC347F0C(&qword_1EF438DB0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t)&unk_1BC64AA68);
      v72 = v76;
      v71 = v77;
      sub_1BC62BF30();
      (*(void (**)(char *, id))(v75 + 8))(v70, v71);
      sub_1BC347F0C(&qword_1EF438EB8, (uint64_t (*)(uint64_t))sub_1BC5D06DC, MEMORY[0x1E0C964C8]);
      v67 = sub_1BC62BFFC();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v72, v36);
      return v67;
    }
  }
LABEL_9:
  v41 = (_QWORD *)swift_allocObject();
  v41[2] = a2;
  v41[3] = a3;
  v41[4] = a1;
  sub_1BC5D0428();
  swift_allocObject();
  sub_1BC38F084(a2);
  v42 = a1;
  v77 = v42;
  v43 = sub_1BC62BF60();
  v78 = v43;
  v44 = objc_msgSend(v42, sel_clinicalSharingStatus);
  v74 = (char *)objc_msgSend(v44, (SEL)v31 + 3504);

  v96 = v43;
  v45 = v83;
  swift_retain();
  sub_1BC62BE88();
  sub_1BC5CFF4C();
  v47 = v46;
  sub_1BC347F0C(&qword_1EF438E38, (uint64_t (*)(uint64_t))sub_1BC5D0428, MEMORY[0x1E0C96108]);
  v48 = sub_1BC347F0C(&qword_1EF438DD8, (uint64_t (*)(uint64_t))sub_1BC5CFF4C, MEMORY[0x1E0C95D90]);
  v49 = v79;
  v75 = v47;
  v76 = (char *)v48;
  sub_1BC62C074();
  swift_release();
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = sub_1BC5D0AE0;
  *(_QWORD *)(v50 + 24) = v45;
  swift_retain();
  sub_1BC62BE88();
  v51 = MEMORY[0x1E0C95B78];
  sub_1BC347F0C(&qword_1EF438E70, (uint64_t (*)(uint64_t))sub_1BC5D076C, MEMORY[0x1E0C95B78]);
  v52 = v80;
  v53 = v82;
  sub_1BC62C074();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v49, v53);
  v54 = swift_allocObject();
  v55 = v74;
  *(_QWORD *)(v54 + 16) = v45;
  *(_QWORD *)(v54 + 24) = v55;
  sub_1BC5D0940();
  sub_1BC347F0C(&qword_1EF438E88, (uint64_t (*)(uint64_t))sub_1BC5D0854, v51);
  sub_1BC347F0C(&qword_1EF438E90, (uint64_t (*)(uint64_t))sub_1BC5D0940, MEMORY[0x1E0C95D90]);
  swift_retain();
  v56 = v85;
  v57 = v86;
  sub_1BC62C0A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v56);
  v58 = swift_allocObject();
  v59 = v77;
  *(_QWORD *)(v58 + 16) = v77;
  type metadata accessor for ClinicalAccountManager.FlowError();
  sub_1BC347F0C(&qword_1EF438EA0, (uint64_t (*)(uint64_t))sub_1BC5D0878, MEMORY[0x1E0C95C38]);
  sub_1BC347F0C(&qword_1EF438DB0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t)&unk_1BC64AA68);
  v60 = v59;
  v61 = v88;
  v62 = v89;
  sub_1BC62C098();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v57, v61);
  v63 = swift_allocObject();
  *(_QWORD *)(v63 + 16) = sub_1BC5D2250;
  *(_QWORD *)(v63 + 24) = v45;
  swift_retain();
  sub_1BC62BE88();
  sub_1BC347F0C(&qword_1EF438EB0, (uint64_t (*)(uint64_t))sub_1BC5D09AC, MEMORY[0x1E0C95BC8]);
  v65 = v91;
  v64 = v92;
  sub_1BC62C074();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v62, v65);
  sub_1BC347F0C(&qword_1EF438EC0, (uint64_t (*)(uint64_t))sub_1BC5D0A74, MEMORY[0x1E0C95B78]);
  v66 = v94;
  v67 = sub_1BC62BFFC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v64, v66);
  return v67;
}

uint64_t sub_1BC5C837C@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  if (a2)
    a2();
  sub_1BC5D0154();
  v8 = *(int *)(v7 + 48);
  v9 = sub_1BC62A7B4();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a4, a1, v9);
  *(_QWORD *)(a4 + v8) = a3;
  return result;
}

uint64_t sub_1BC5C83E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  sub_1BC5D03B0();
  v10 = v9;
  v20 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(a3 + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(_QWORD *)(v15 + ((v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  sub_1BC5D0428();
  sub_1BC347F0C(&qword_1EF438E38, (uint64_t (*)(uint64_t))sub_1BC5D0428, MEMORY[0x1E0C96108]);
  v16 = v13;
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF438E40, (uint64_t (*)(uint64_t))sub_1BC5D03B0, MEMORY[0x1E0C96148]);
  v17 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v10);
  return v17;
}

uint64_t sub_1BC5C8598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t (*v31)(_QWORD);
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _BYTE *v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void *v56;
  uint64_t v57;
  id v58;
  _BYTE v59[12];
  int v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, void *);
  uint64_t v71;
  uint64_t v72[4];
  uint64_t v73;

  v69 = a5;
  v70 = a4;
  v65 = a2;
  v7 = sub_1BC62A7B4();
  v71 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v59[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v59[-v11];
  v13 = sub_1BC62BB34();
  v67 = *(_QWORD *)(v13 - 8);
  v68 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = &v59[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v66 = &v59[-v17];
  v18 = type metadata accessor for ClinicalAccountManager.FlowError();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v62 = &v59[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = MEMORY[0x1E0C80A78](v20);
  v63 = &v59[-v23];
  v24 = MEMORY[0x1E0C80A78](v22);
  v64 = &v59[-v25];
  MEMORY[0x1E0C80A78](v24);
  v27 = &v59[-v26];
  sub_1BC5D02F4();
  MEMORY[0x1E0C80A78](v28);
  v30 = &v59[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC35EBE0(a1, (uint64_t)v30, v31);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v30, 1, v18) == 1)
  {
    sub_1BC62BAF8();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v71 + 16))(v10, a3, v7);
    swift_retain_n();
    v32 = sub_1BC62BB28();
    v33 = sub_1BC62CADC();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v66 = (_BYTE *)swift_slowAlloc();
      v72[0] = (uint64_t)v66;
      *(_DWORD *)v34 = 136315394;
      v35 = sub_1BC5C6CEC();
      v73 = sub_1BC4991F0(v35, v36, v72);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v37 = sub_1BC62D52C();
      v73 = sub_1BC4991F0(v37, v38, v72);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v71 + 8))(v10, v7);
      _os_log_impl(&dword_1BC30A000, v32, v33, "%s successfully deleted account %s", (uint8_t *)v34, 0x16u);
      v39 = v66;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v39, -1, -1);
      MEMORY[0x1BCCF36A8](v34, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(_BYTE *, uint64_t))(v71 + 8))(v10, v7);
    }

    (*(void (**)(_BYTE *, uint64_t))(v67 + 8))(v16, v68);
    return v70(0, 0);
  }
  else
  {
    sub_1BC5D036C((uint64_t)v30, (uint64_t)v27);
    sub_1BC62BAF8();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v71 + 16))(v12, a3, v7);
    sub_1BC35EBE0((uint64_t)v27, (uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
    swift_retain_n();
    v40 = sub_1BC62BB28();
    v41 = sub_1BC62CAC4();
    v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      v43 = swift_slowAlloc();
      v61 = swift_slowAlloc();
      v73 = v61;
      *(_DWORD *)v43 = 136315650;
      v60 = v42;
      v44 = sub_1BC5C6CEC();
      v72[0] = sub_1BC4991F0(v44, v45, &v73);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v46 = sub_1BC62D52C();
      v72[0] = sub_1BC4991F0(v46, v47, &v73);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v71 + 8))(v12, v7);
      *(_WORD *)(v43 + 22) = 2080;
      v71 = v43 + 24;
      v48 = v63;
      v49 = v64;
      sub_1BC35EBE0((uint64_t)v64, (uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
      sub_1BC35EBE0((uint64_t)v48, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
      sub_1BC62D5D4();
      v50 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v51 = sub_1BC62C6E0();
      v53 = v52;
      sub_1BC348D78((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
      v72[0] = sub_1BC4991F0(v51, v53, &v73);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      sub_1BC348D78((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
      _os_log_impl(&dword_1BC30A000, v40, (os_log_type_t)v60, "%s deleting account %s failed with error: %s", (uint8_t *)v43, 0x20u);
      v54 = v61;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v54, -1, -1);
      MEMORY[0x1BCCF36A8](v43, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(_BYTE *, uint64_t))(v71 + 8))(v12, v7);
      sub_1BC348D78((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
    }

    (*(void (**)(_BYTE *, uint64_t))(v67 + 8))(v66, v68);
    v56 = *(void **)&v27[*(int *)(v18 + 24)];
    v57 = v27[*(int *)(v18 + 20)];
    v58 = v56;
    v70(v57, v56);

    return sub_1BC348D78((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
  }
}

uint64_t sub_1BC5C8CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void *v61;
  uint64_t v62;
  void (*v63)(uint64_t, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[4];

  v4 = v3;
  v75 = a2;
  v76 = a3;
  sub_1BC5D03B0();
  v67 = *(_QWORD *)(v6 - 8);
  v68 = v6;
  MEMORY[0x1E0C80A78](v6);
  v66 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5D13A8();
  v70 = *(_QWORD *)(v8 - 8);
  v71 = v8;
  MEMORY[0x1E0C80A78](v8);
  v69 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5D142C(0);
  v73 = *(_QWORD *)(v10 - 8);
  v74 = v10;
  MEMORY[0x1E0C80A78](v10);
  v72 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62A7B4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v78 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v61 - v16;
  v18 = sub_1BC62BB34();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BAF8();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v79 = a1;
  v77 = v22;
  v22(v17, a1, v12);
  swift_retain_n();
  v23 = sub_1BC62BB28();
  v24 = sub_1BC62CADC();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    v65 = v14;
    v27 = v26;
    v62 = swift_slowAlloc();
    v81[0] = v62;
    *(_DWORD *)v27 = 136315394;
    v64 = v19;
    LODWORD(v61) = v25;
    v28 = sub_1BC5C6CEC();
    v80 = sub_1BC4991F0(v28, v29, v81);
    v63 = (void (*)(uint64_t, char *, uint64_t))v18;
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v30 = sub_1BC62D52C();
    v80 = sub_1BC4991F0(v30, v31, v81);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
    _os_log_impl(&dword_1BC30A000, v23, (os_log_type_t)v61, "%s Starting to stop sharing of account %s", (uint8_t *)v27, 0x16u);
    v32 = v62;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v32, -1, -1);
    v33 = v27;
    v14 = v65;
    MEMORY[0x1BCCF36A8](v33, -1, -1);

    (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v64 + 8))(v21, v63);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  v61 = *(void **)(v4 + 24);
  v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 4);
  v35 = v78;
  v77(v78, v79, v12);
  v36 = *(unsigned __int8 *)(v13 + 80);
  v64 = v36 | 7;
  v65 = (v36 + 24) & ~v36;
  v37 = v65;
  v38 = v13;
  v39 = (v14 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
  v62 = v39;
  v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v4;
  v63 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 32);
  v63(v41 + v37, v35, v12);
  *(_QWORD *)(v41 + v39) = 4;
  v42 = v61;
  *(_QWORD *)(v41 + v40) = v61;
  *(_QWORD *)(v41 + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8)) = v34;
  sub_1BC5D0428();
  sub_1BC347F0C(&qword_1EF438E38, (uint64_t (*)(uint64_t))sub_1BC5D0428, MEMORY[0x1E0C96108]);
  swift_retain();
  v43 = v42;
  v44 = v34;
  v45 = v66;
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF438E40, (uint64_t (*)(uint64_t))sub_1BC5D03B0, MEMORY[0x1E0C96148]);
  v46 = v68;
  v47 = sub_1BC62BFFC();

  (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v46);
  v81[0] = v47;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = sub_1BC5D1568;
  *(_QWORD *)(v48 + 24) = v4;
  swift_retain();
  sub_1BC62BE88();
  sub_1BC5CFF4C();
  sub_1BC347F0C(&qword_1EF438DD8, (uint64_t (*)(uint64_t))sub_1BC5CFF4C, MEMORY[0x1E0C95D90]);
  v49 = v69;
  sub_1BC62C074();
  swift_release();
  swift_release();
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = sub_1BC5D1590;
  *(_QWORD *)(v50 + 24) = v4;
  swift_retain();
  sub_1BC62BE88();
  v51 = MEMORY[0x1E0C95B78];
  sub_1BC347F0C(&qword_1EF438F10, (uint64_t (*)(uint64_t))sub_1BC5D13A8, MEMORY[0x1E0C95B78]);
  v53 = v71;
  v52 = v72;
  sub_1BC62C074();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v49, v53);
  v54 = v78;
  v77(v78, v79, v12);
  v55 = v62;
  v56 = swift_allocObject();
  *(_QWORD *)(v56 + 16) = v4;
  v63(v56 + v65, v54, v12);
  v57 = (_QWORD *)(v56 + v55);
  v58 = v76;
  *v57 = v75;
  v57[1] = v58;
  sub_1BC347F0C(&qword_1EF438F18, (uint64_t (*)(uint64_t))sub_1BC5D142C, v51);
  swift_retain();
  swift_retain();
  v59 = v74;
  sub_1BC62C038();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v52, v59);
  swift_beginAccess();
  sub_1BC62BEA0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC5C9424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = sub_1BC62A7B4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  sub_1BC5D03B0();
  v8 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  v23 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A778();
  v11 = objc_allocWithZone(MEMORY[0x1E0CB6BB8]);
  v12 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initForClinicalAccountIdentifier_, v12);

  v14 = objc_msgSend(*(id *)(v2 + 16), sel_healthStore);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6BA8]), sel_initWithHealthStore_recipientIdentifier_, v14, v13);

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v16 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v2;
  *(_QWORD *)(v17 + 24) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v17 + v16, (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_1BC5D0428();
  sub_1BC347F0C(&qword_1EF438E38, (uint64_t (*)(uint64_t))sub_1BC5D0428, MEMORY[0x1E0C96108]);
  swift_retain();
  v18 = v15;
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF438E40, (uint64_t (*)(uint64_t))sub_1BC5D03B0, MEMORY[0x1E0C96148]);
  v19 = v22;
  v20 = sub_1BC62BFFC();

  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v19);
  return v20;
}

uint64_t sub_1BC5C966C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t (*v31)(_QWORD);
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _BYTE *v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v57;
  uint64_t v58;
  _BYTE v59[4];
  int v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(void *);
  uint64_t v72;
  uint64_t v73[4];
  uint64_t v74;

  v70 = a5;
  v71 = a4;
  v66 = a2;
  v7 = sub_1BC62A7B4();
  v72 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v59[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v59[-v11];
  v13 = sub_1BC62BB34();
  v68 = *(_QWORD *)(v13 - 8);
  v69 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = &v59[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v67 = &v59[-v17];
  v18 = type metadata accessor for ClinicalAccountManager.FlowError();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v63 = &v59[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v64 = &v59[-v22];
  MEMORY[0x1E0C80A78](v23);
  v65 = &v59[-v24];
  MEMORY[0x1E0C80A78](v25);
  v27 = &v59[-v26];
  sub_1BC5D02F4();
  MEMORY[0x1E0C80A78](v28);
  v30 = &v59[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC35EBE0(a1, (uint64_t)v30, v31);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v30, 1, v18) == 1)
  {
    sub_1BC62BAF8();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v72 + 16))(v9, a3, v7);
    swift_retain_n();
    v32 = sub_1BC62BB28();
    v33 = sub_1BC62CADC();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v67 = (_BYTE *)swift_slowAlloc();
      v73[0] = (uint64_t)v67;
      *(_DWORD *)v34 = 136315394;
      v35 = sub_1BC5C6CEC();
      v74 = sub_1BC4991F0(v35, v36, v73);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v37 = sub_1BC62D52C();
      v74 = sub_1BC4991F0(v37, v38, v73);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v9, v7);
      _os_log_impl(&dword_1BC30A000, v32, v33, "%s successfully stopped sharing of account %s", (uint8_t *)v34, 0x16u);
      v39 = v67;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v39, -1, -1);
      MEMORY[0x1BCCF36A8](v34, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v9, v7);
    }

    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v15, v69);
    return v71(0);
  }
  else
  {
    sub_1BC5D036C((uint64_t)v30, (uint64_t)v27);
    sub_1BC62BAF8();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v72 + 16))(v12, a3, v7);
    sub_1BC35EBE0((uint64_t)v27, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
    swift_retain_n();
    v40 = sub_1BC62BB28();
    v41 = sub_1BC62CAC4();
    v42 = v41;
    v43 = (uint64_t)v27;
    if (os_log_type_enabled(v40, v41))
    {
      v44 = swift_slowAlloc();
      v61 = swift_slowAlloc();
      v74 = v61;
      *(_DWORD *)v44 = 136315650;
      v60 = v42;
      v45 = sub_1BC5C6CEC();
      v73[0] = sub_1BC4991F0(v45, v46, &v74);
      v62 = v27;
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v47 = sub_1BC62D52C();
      v73[0] = sub_1BC4991F0(v47, v48, &v74);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v12, v7);
      *(_WORD *)(v44 + 22) = 2080;
      v72 = v44 + 24;
      v49 = v64;
      v50 = v65;
      sub_1BC35EBE0((uint64_t)v65, (uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
      sub_1BC35EBE0((uint64_t)v49, (uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
      sub_1BC62D5D4();
      v51 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v52 = sub_1BC62C6E0();
      v54 = v53;
      sub_1BC348D78((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
      v73[0] = sub_1BC4991F0(v52, v54, &v74);
      sub_1BC62CFF8();
      v43 = (uint64_t)v62;
      swift_bridgeObjectRelease();
      sub_1BC348D78((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
      _os_log_impl(&dword_1BC30A000, v40, (os_log_type_t)v60, "%s stopping sharing of account %s failed with error: %s", (uint8_t *)v44, 0x20u);
      v55 = v61;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v55, -1, -1);
      MEMORY[0x1BCCF36A8](v44, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v12, v7);
      sub_1BC348D78((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
    }

    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v67, v69);
    sub_1BC347F0C(&qword_1EF438DB0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t)&unk_1BC64AA68);
    v57 = (void *)swift_allocError();
    sub_1BC35EBE0(v43, v58, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
    v71(v57);

    return sub_1BC348D78(v43, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
  }
}

uint64_t sub_1BC5C9DE8(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  v9 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a2;
  v10[5] = a3;
  v10[6] = a1;
  v11 = a2;
  v12 = a3;
  v13 = a1;
  sub_1BC5C2784((uint64_t)v8, (uint64_t)&unk_1EF438FB8, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1BC5C9ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1BC5C9EF4()
{
  uint64_t v0;

  if (qword_1ED6A31B0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 40) = objc_msgSend(*(id *)(v0 + 16), sel_gateway);
  sub_1BC62C944();
  *(_QWORD *)(v0 + 48) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC5C9FA0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + 40);
  v3 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  swift_release();
  v4 = sub_1BC5556FC(v1, v2);
  objc_msgSend(v3, sel_presentViewController_animated_completion_, v4, 1, 0);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5CA010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1BC3781C0;
  return ClinicalAccountManager.startRelogin(to:from:)(a2, a3);
}

uint64_t sub_1BC5CA074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_1BC62A7B4();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5CA0D8()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_identifier);
  sub_1BC62A79C();

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_1BC5CA158;
  return sub_1BC5CA1C4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BC5CA158()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*v0 + 64);
  v2 = *(_QWORD *)(*v0 + 48);
  v3 = *(_QWORD *)(*v0 + 56);
  v5 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1BC5CA1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v5 = sub_1BC62A7B4();
  v4[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 + 64);
  v4[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5CA22C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v16;
  void *v17;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[12];
  v4 = v0[13];
  v5 = v0[11];
  v6 = v0[8];
  v16 = (void *)v0[9];
  v17 = (void *)v0[10];
  v7 = objc_msgSend(*(id *)(v5 + 24), sel_healthStore);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB63F0]), sel_initWithHealthStore_, v7);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v3);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = (v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v1, v3);
  *(_QWORD *)(v11 + v10) = v16;
  *(_QWORD *)(v11 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)) = v17;
  v0[6] = sub_1BC5D189C;
  v0[7] = v11;
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_1BC431F50;
  v0[5] = &block_descriptor_157;
  v12 = _Block_copy(v0 + 2);
  swift_retain();
  v13 = v16;
  v14 = v17;
  swift_release();
  objc_msgSend(v8, sel_fetchCloudSyncStatusWithCompletion_, v12);
  _Block_release(v12);

  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1BC5CA3C0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  _BYTE v27[4];
  int v28;
  void *v29;

  v28 = a1;
  v29 = a9;
  v12 = sub_1BC62A7B4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v16);
  v18 = &v27[-v17];
  v19 = sub_1BC62C95C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, a7, v12);
  v20 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  *(_BYTE *)(v22 + 32) = v28;
  *(_QWORD *)(v22 + 40) = a6;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v13 + 32))(v22 + v20, v15, v12);
  *(_QWORD *)(v22 + v21) = a8;
  v23 = v29;
  *(_QWORD *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)) = v29;
  swift_retain();
  v24 = a8;
  v25 = v23;
  sub_1BC5C2784((uint64_t)v18, (uint64_t)&unk_1EF438F60, v22);
  return swift_release();
}

uint64_t sub_1BC5CA560(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v8 + 32) = a7;
  *(_QWORD *)(v8 + 40) = a8;
  *(_QWORD *)(v8 + 16) = a5;
  *(_QWORD *)(v8 + 24) = a6;
  *(_BYTE *)(v8 + 104) = a4;
  v9 = sub_1BC62A7B4();
  *(_QWORD *)(v8 + 48) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 56) = v10;
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5CA5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v12;

  if (*(_BYTE *)(v0 + 104) == 1)
  {
    if (qword_1ED6A31B0 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 64);
    v1 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    v5 = *(void **)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
    v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v9 = swift_allocObject();
    *(_QWORD *)(v0 + 80) = v9;
    *(_QWORD *)(v9 + 16) = v6;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v9 + v7, v1, v3);
    *(_QWORD *)(v9 + v8) = v5;
    sub_1BC62C944();
    swift_retain();
    v10 = v5;
    *(_QWORD *)(v0 + 88) = sub_1BC62C938();
    sub_1BC62C908();
    return swift_task_switch();
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v12;
    *v12 = v0;
    v12[1] = sub_1BC5CA7AC;
    return sub_1BC5CA7F8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
}

uint64_t sub_1BC5CA744()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(void **)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release();
  sub_1BC55697C(v3, v2, (uint64_t)&unk_1EF438F78, v1);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5CA7AC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC5CA7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[28] = a2;
  v3[29] = v2;
  v3[27] = a1;
  v4 = sub_1BC62A7B4();
  v3[30] = v4;
  v3[31] = *(_QWORD *)(v4 - 8);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  v5 = sub_1BC62BB34();
  v3[35] = v5;
  v3[36] = *(_QWORD *)(v5 - 8);
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5CA8BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0[27];
  v2 = v0[34];
  v3 = v0[30];
  v4 = v0[31];
  sub_1BC62BAF8();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[40] = v5;
  v5(v2, v1, v3);
  swift_retain_n();
  v6 = sub_1BC62BB28();
  v7 = sub_1BC62CADC();
  if (os_log_type_enabled(v6, v7))
  {
    v31 = v0[36];
    v8 = v0[34];
    v32 = v0[35];
    v33 = v0[39];
    v9 = v0[30];
    v29 = v0[31];
    v10 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v34 = v30;
    *(_DWORD *)v10 = 136315394;
    v11 = sub_1BC5C6CEC();
    v0[25] = sub_1BC4991F0(v11, v12, &v34);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v13 = sub_1BC62D52C();
    v0[26] = sub_1BC4991F0(v13, v14, &v34);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    v15 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v15(v8, v9);
    _os_log_impl(&dword_1BC30A000, v6, v7, "%s will replace account %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v30, -1, -1);
    MEMORY[0x1BCCF36A8](v10, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v16(v33, v32);
  }
  else
  {
    v17 = v0[39];
    v18 = v0[35];
    v19 = v0[36];
    v20 = v0[34];
    v21 = v0[30];
    v22 = v0[31];
    swift_release_n();
    v15 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v15(v20, v21);

    v16 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v16(v17, v18);
  }
  v0[41] = v16;
  v0[42] = v15;
  v23 = v0[28];
  v24 = *(void **)(v0[29] + 24);
  v25 = sub_1BC62A784();
  v0[43] = v25;
  v0[2] = v0;
  v0[3] = sub_1BC5CABB4;
  v26 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v27 = v0 + 10;
  v27[1] = 0x40000000;
  v27[2] = sub_1BC5C656C;
  v27[3] = &block_descriptor_168;
  v27[4] = v26;
  objc_msgSend(v24, sel_replaceAccountWithNewAccountForAccountWithIdentifier_usingCredentialWithPersistentID_completion_, v25, v23, v27);
  return swift_continuation_await();
}

uint64_t sub_1BC5CABB4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 352) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC5CAC14()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);

  sub_1BC62BAF8();
  v1(v2, v4, v3);
  swift_retain_n();
  v5 = sub_1BC62BB28();
  v6 = sub_1BC62CADC();
  if (os_log_type_enabled(v5, v6))
  {
    v24 = *(_QWORD *)(v0 + 304);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v23 = *(_QWORD *)(v0 + 280);
    v7 = *(_QWORD *)(v0 + 264);
    v8 = *(_QWORD *)(v0 + 240);
    v9 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v26 = v21;
    *(_DWORD *)v9 = 136315394;
    v10 = sub_1BC5C6CEC();
    *(_QWORD *)(v0 + 184) = sub_1BC4991F0(v10, v11, &v26);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v12 = sub_1BC62D52C();
    *(_QWORD *)(v0 + 192) = sub_1BC4991F0(v12, v13, &v26);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    v22(v7, v8);
    _os_log_impl(&dword_1BC30A000, v5, v6, "%s successfully replaced account %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v21, -1, -1);
    MEMORY[0x1BCCF36A8](v9, -1, -1);

    v25(v24, v23);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v16 = *(_QWORD *)(v0 + 304);
    v17 = *(_QWORD *)(v0 + 280);
    v18 = *(_QWORD *)(v0 + 264);
    v19 = *(_QWORD *)(v0 + 240);
    swift_release_n();
    v14(v18, v19);

    v15(v16, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5CAEAC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  void (*v24)(uint64_t, uint64_t);
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36[2];

  v2 = *(void **)(v0 + 344);
  v1 = *(void **)(v0 + 352);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 216);
  swift_willThrow();

  sub_1BC62BAF8();
  v3(v4, v6, v5);
  swift_retain();
  v7 = v1;
  swift_retain();
  v8 = v1;
  v9 = sub_1BC62BB28();
  v10 = sub_1BC62CAC4();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 352);
    v31 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v34 = *(_QWORD *)(v0 + 296);
    v35 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
    v33 = *(_QWORD *)(v0 + 280);
    v12 = *(_QWORD *)(v0 + 256);
    v13 = *(_QWORD *)(v0 + 240);
    v14 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v36[0] = v32;
    *(_DWORD *)v14 = 136315650;
    v15 = sub_1BC5C6CEC();
    *(_QWORD *)(v0 + 168) = sub_1BC4991F0(v15, v16, v36);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v14 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v17 = sub_1BC62D52C();
    *(_QWORD *)(v0 + 152) = sub_1BC4991F0(v17, v18, v36);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    v31(v12, v13);
    *(_WORD *)(v14 + 22) = 2080;
    *(_QWORD *)(v0 + 160) = v11;
    v19 = v11;
    sub_1BC35E44C();
    sub_1BC62D5D4();
    v20 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v21 = sub_1BC62C6F8();
    *(_QWORD *)(v0 + 176) = sub_1BC4991F0(v21, v22, v36);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v9, v10, "%s failed to replace account %s. Error: %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v32, -1, -1);
    MEMORY[0x1BCCF36A8](v14, -1, -1);

    v35(v34, v33);
  }
  else
  {
    v23 = *(void **)(v0 + 352);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v26 = *(_QWORD *)(v0 + 296);
    v27 = *(_QWORD *)(v0 + 280);
    v28 = *(_QWORD *)(v0 + 256);
    v29 = *(_QWORD *)(v0 + 240);

    swift_release_n();
    v24(v28, v29);

    v25(v26, v27);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5CB24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1BC3781C0;
  return sub_1BC5CA7F8(a2, a3);
}

uint64_t ClinicalAccountManager.upgrade(account:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BC5CB2CC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  _QWORD *v6;

  v2 = (void *)v0[3];
  v1 = v0[4];
  v3 = (void *)v0[2];
  type metadata accessor for ClinicalAccountUpgradeManager();
  swift_allocObject();
  v4 = v3;
  swift_retain();
  v5 = v2;
  v0[5] = sub_1BC54FA50(v4, v1, v5);

  swift_release();
  v6 = (_QWORD *)swift_task_alloc();
  v0[6] = v6;
  *v6 = v0;
  v6[1] = sub_1BC5CB378;
  return sub_1BC548E44();
}

uint64_t sub_1BC5CB378()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC5CB3CC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BC3781C0;
  return sub_1BC548E44();
}

uint64_t sub_1BC5CB414@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t result;
  uint64_t v13;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1BC5CFFDC(0, &qword_1EF438DA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  v11 = a1;
  result = sub_1BC62BF60();
  *a3 = result;
  return result;
}

void sub_1BC5CB520(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (void *)sub_1BC62A784();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v8);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_1BC5D12F0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC46FB0C;
  aBlock[3] = &block_descriptor_122;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchAccountWithIdentifier_completion_, v11, v14);
  _Block_release(v14);

}

uint64_t sub_1BC5CB680(void *a1, void *a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v23;
  void (*v24)(char *);

  v24 = a3;
  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5CFFDC(0, &qword_1EF438EF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEE030]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v23 - v16;
  if (a1)
  {
    *(_QWORD *)v15 = a1;
    swift_storeEnumTagMultiPayload();
    v18 = a1;
    v17 = v15;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a5, v8);
    if (a2)
      v19 = a2;
    else
      v19 = objc_msgSend((id)objc_opt_self(), sel_hk_error_userInfo_, 0, 0);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v11, v8);
    v20 = type metadata accessor for ClinicalAccountManager.FlowError();
    v17[*(int *)(v20 + 20)] = 1;
    *(_QWORD *)&v17[*(int *)(v20 + 24)] = v19;
    swift_storeEnumTagMultiPayload();
    v21 = a2;
  }
  v24(v17);
  return sub_1BC5D135C((uint64_t)v17);
}

uint64_t sub_1BC5CB83C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t result;
  uint64_t v15;

  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  sub_1BC5D0428();
  swift_allocObject();
  v13 = a1;
  result = sub_1BC62BF60();
  *a4 = result;
  return result;
}

void sub_1BC5CB954(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v17 = a5;
  v9 = sub_1BC62A7B4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (void *)sub_1BC62A784();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_1BC5D05FC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3EFECC;
  aBlock[3] = &block_descriptor_53;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_deleteAccountWithIdentifier_deletionReason_completion_, v12, v17, v15);
  _Block_release(v15);

}

uint64_t sub_1BC5CBABC(char a1, void *a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v21;

  sub_1BC5D064C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    if (qword_1ED6A3198 != -1)
      swift_once();
    sub_1BC4E371C(11, 0, 0);
    v12 = sub_1BC62A7B4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a5, v12);
    swift_storeEnumTagMultiPayload();
    a3(v11);
  }
  else
  {
    if (a2)
    {
      v13 = a2;
    }
    else
    {
      v14 = (void *)objc_opt_self();
      v15 = (void *)sub_1BC62C650();
      v13 = objc_msgSend(v14, sel_hk_error_description_, 0, v15);

    }
    v16 = sub_1BC62A7B4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, a5, v16);
    v17 = type metadata accessor for ClinicalAccountManager.FlowError();
    v11[*(int *)(v17 + 20)] = 6;
    *(_QWORD *)&v11[*(int *)(v17 + 24)] = v13;
    swift_storeEnumTagMultiPayload();
    v18 = a2;
    v19 = v13;
    a3(v11);

  }
  return sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC5D064C);
}

uint64_t sub_1BC5CBCA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1BC5D1C98();
  swift_allocObject();
  swift_retain();
  result = sub_1BC62BF60();
  *a1 = result;
  return result;
}

void sub_1BC5CBD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = *(void **)(a3 + 24);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1BC37C738;
  *(_QWORD *)(v8 + 24) = v6;
  v10[4] = sub_1BC5D1D1C;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1BC46B7BC;
  v10[3] = &block_descriptor_199;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_fetchAllAccountsWithCompletion_, v9);
  _Block_release(v9);
}

uint64_t sub_1BC5CBDE8(unint64_t a1, void *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t i;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD, _QWORD);
  uint64_t v36;
  uint64_t v37;

  v8 = sub_1BC62BB34();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v36 = a4;
    v12 = a2;
    sub_1BC62BAF8();
    v13 = a2;
    v14 = a2;
    v15 = sub_1BC62BB28();
    v16 = sub_1BC62CAC4();
    if (os_log_type_enabled(v15, v16))
    {
      v33 = v9;
      v17 = swift_slowAlloc();
      v34 = v8;
      v18 = (uint8_t *)v17;
      v19 = swift_slowAlloc();
      v35 = a3;
      v20 = (_QWORD *)v19;
      *(_DWORD *)v18 = 138412290;
      v21 = a2;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      v37 = v22;
      v9 = v33;
      sub_1BC62CFF8();
      *v20 = v22;

      _os_log_impl(&dword_1BC30A000, v15, v16, "HKClinicalAccountStore.upgradableAccountsPublisher failed with error: %@", v18, 0xCu);
      sub_1BC3DD918(0, (unint64_t *)&qword_1ED6A4B80, (unint64_t *)&qword_1ED6A4E60, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      v23 = v20;
      a3 = v35;
      MEMORY[0x1BCCF36A8](v23, -1, -1);
      v24 = v18;
      v8 = v34;
      MEMORY[0x1BCCF36A8](v24, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (!a1)
    return a3(MEMORY[0x1E0DEE9D8], 0);
  v37 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC62D3B8();
    v25 = result;
    if (result)
      goto LABEL_9;
LABEL_21:
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x1E0DEE9D8];
    goto LABEL_22;
  }
  v25 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v25)
    goto LABEL_21;
LABEL_9:
  if (v25 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v25; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v28 = (id)MEMORY[0x1BCCF24CC](i, a1);
    else
      v28 = *(id *)(a1 + 8 * i + 32);
    v29 = v28;
    v30 = objc_msgSend(v28, sel_newerAvailableGateway);

    if (v30)
    {
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v31 = v37;
LABEL_22:
  a3(v31, 0);
  return swift_release();
}

uint64_t sub_1BC5CC13C(void (*a1)(char *), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v14;

  sub_1BC5D064C();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
    a3(v9);
  v12 = objc_msgSend(a5, sel_identifier);
  sub_1BC62A79C();

  swift_storeEnumTagMultiPayload();
  a1(v11);
  return sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC5D064C);
}

uint64_t sub_1BC5CC218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v29 = a3;
  v5 = sub_1BC62A7B4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5D03B0();
  v10 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  v28 = v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(void **)(a2 + 24);
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v13 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = (v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16 + v13, v8, v5);
  *(_QWORD *)(v16 + v14) = 5;
  v18 = v25;
  v17 = v26;
  *(_QWORD *)(v16 + v15) = v26;
  *(_QWORD *)(v16 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  sub_1BC5D0428();
  sub_1BC347F0C(&qword_1EF438E38, (uint64_t (*)(uint64_t))sub_1BC5D0428, MEMORY[0x1E0C96108]);
  swift_retain();
  v19 = v17;
  v20 = v18;
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF438E40, (uint64_t (*)(uint64_t))sub_1BC5D03B0, MEMORY[0x1E0C96148]);
  v21 = v27;
  v22 = sub_1BC62BFFC();

  result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v12, v21);
  *v29 = v22;
  return result;
}

uint64_t sub_1BC5CC428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v18[1] = a4;
  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  sub_1BC5D03B0();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1BC5D0428();
  sub_1BC347F0C(&qword_1EF438E38, (uint64_t (*)(uint64_t))sub_1BC5D0428, MEMORY[0x1E0C96108]);
  swift_retain();
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF438E40, (uint64_t (*)(uint64_t))sub_1BC5D03B0, MEMORY[0x1E0C96148]);
  v16 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

uint64_t sub_1BC5CC5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  id v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;

  v52 = a4;
  v40 = a3;
  v42 = a1;
  v7 = type metadata accessor for ClinicalAccountManager.FlowError();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v8;
  MEMORY[0x1E0C80A78](v7);
  v47 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC62A7B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5D03B0();
  v15 = *(_QWORD *)(v14 - 8);
  v44 = v14;
  v45 = v15;
  MEMORY[0x1E0C80A78](v14);
  v43 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5D0D38();
  v18 = *(_QWORD *)(v17 - 8);
  v50 = v17;
  v51 = v18;
  MEMORY[0x1E0C80A78](v17);
  v46 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *(void **)(a2 + 24);
  v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v20 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v23 + v20, v13, v10);
  v24 = v41;
  *(_QWORD *)(v23 + v21) = v40;
  *(_QWORD *)(v23 + v22) = v24;
  v25 = v39;
  *(_QWORD *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)) = v39;
  sub_1BC5D0428();
  sub_1BC347F0C(&qword_1EF438E38, (uint64_t (*)(uint64_t))sub_1BC5D0428, MEMORY[0x1E0C96108]);
  swift_retain();
  v26 = v24;
  v27 = v25;
  v28 = v43;
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF438E40, (uint64_t (*)(uint64_t))sub_1BC5D03B0, MEMORY[0x1E0C96148]);
  v29 = v44;
  v30 = sub_1BC62BFFC();

  (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v29);
  v53 = v30;
  v31 = v47;
  sub_1BC35EBE0(v42, v47, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
  v32 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v33 = swift_allocObject();
  sub_1BC5D036C(v31, v33 + v32);
  sub_1BC5CFF4C();
  sub_1BC347F0C(&qword_1EF438DD8, (uint64_t (*)(uint64_t))sub_1BC5CFF4C, MEMORY[0x1E0C95D90]);
  v34 = v46;
  sub_1BC62C05C();
  swift_release();
  swift_release();
  sub_1BC347F0C(&qword_1EF438ED8, (uint64_t (*)(uint64_t))sub_1BC5D0D38, MEMORY[0x1E0C95B48]);
  v35 = v50;
  v36 = sub_1BC62BFFC();
  result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v34, v35);
  *v52 = v36;
  return result;
}

uint64_t sub_1BC5CC964(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  type metadata accessor for ClinicalAccountManager.FlowError();
  sub_1BC347F0C(&qword_1EF438DB0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t)&unk_1BC64AA68);
  swift_allocError();
  sub_1BC35EBE0(a2, v3, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountManager.FlowError);
  return swift_willThrow();
}

id sub_1BC5CC9E4@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  char v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  id v15;
  _QWORD v16[2];

  sub_1BC357158(0, &qword_1EF438EC8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - v7;
  v9 = *a1;
  v16[1] = v9;
  v10 = v9;
  sub_1BC35E44C();
  v11 = type metadata accessor for ClinicalAccountManager.FlowError();
  v12 = swift_dynamicCast();
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  if ((v12 & 1) != 0)
  {
    v13(v8, 0, 1, v11);
    return (id)sub_1BC5D036C((uint64_t)v8, a3);
  }
  else
  {
    v13(v8, 1, 1, v11);
    sub_1BC377E3C((uint64_t)v8, &qword_1EF438EC8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
    v15 = objc_msgSend(a2, sel_identifier);
    sub_1BC62A79C();

    *(_BYTE *)(a3 + *(int *)(v11 + 20)) = 5;
    *(_QWORD *)(a3 + *(int *)(v11 + 24)) = v9;
    return v9;
  }
}

uint64_t sub_1BC5CCB48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t *v25;

  v23 = a3;
  v24 = a5;
  v25 = a6;
  v9 = sub_1BC62A7B4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a2, v9, v12);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v14, v13, v9);
  v18 = v24;
  *(_QWORD *)(v17 + v15) = v23;
  *(_QWORD *)(v17 + v16) = a4;
  *(_QWORD *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  sub_1BC5D0428();
  swift_allocObject();
  swift_retain();
  v19 = a4;
  v20 = v18;
  result = sub_1BC62BF60();
  *v25 = result;
  return result;
}

void sub_1BC5CCC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t aBlock[7];

  v56 = a6;
  v57 = a5;
  v55 = a2;
  v53 = a1;
  v10 = sub_1BC62A7B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v52 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v44 - v14;
  v16 = sub_1BC62BB34();
  v50 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BAF8();
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v51(v15, a4, v10);
  swift_retain_n();
  v19 = sub_1BC62BB28();
  v20 = sub_1BC62CAB8();
  v49 = v20;
  v21 = os_log_type_enabled(v19, v20);
  v54 = a3;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v47 = a4;
    v23 = v22;
    v45 = swift_slowAlloc();
    aBlock[0] = v45;
    *(_DWORD *)v23 = 136315650;
    v48 = a7;
    v44 = v19;
    v24 = sub_1BC5C6CEC();
    v58 = sub_1BC4991F0(v24, v25, aBlock);
    v46 = v16;
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v26 = sub_1BC62D52C();
    v58 = sub_1BC4991F0(v26, v27, aBlock);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    *(_WORD *)(v23 + 22) = 2080;
    v28 = (id)HKClinicalSharingUserStatusToString();
    v29 = sub_1BC62C680();
    v31 = v30;

    v32 = v29;
    a7 = v48;
    v58 = sub_1BC4991F0(v32, v31, aBlock);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    v33 = v44;
    _os_log_impl(&dword_1BC30A000, v44, (os_log_type_t)v49, "%s updating user status of account %s to %s", (uint8_t *)v23, 0x20u);
    v34 = v45;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v34, -1, -1);
    v35 = v23;
    a4 = v47;
    MEMORY[0x1BCCF36A8](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v46);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v16);
  }
  v36 = (void *)sub_1BC62A784();
  v37 = v52;
  v51(v52, a4, v10);
  v38 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v39 = (v12 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v54;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v40 + v38, v37, v10);
  *(_QWORD *)(v40 + v39) = v57;
  v41 = (_QWORD *)(v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8));
  v42 = v55;
  *v41 = v53;
  v41[1] = v42;
  aBlock[4] = (uint64_t)sub_1BC5D0FD0;
  aBlock[5] = v40;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC3EFECC;
  aBlock[3] = (uint64_t)&block_descriptor_96;
  v43 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v56, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v36, 0, 0, a7, 0, 0, v43);
  _Block_release(v43);

}

uint64_t sub_1BC5CD110(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD), uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v70;
  os_log_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  void (*v75)(_QWORD);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83[4];
  uint64_t v84;

  v80 = a7;
  v76 = a5;
  v82 = a4;
  sub_1BC5D064C();
  v79 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1BC62A7B4();
  v13 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v70 - v17;
  v19 = sub_1BC62BB34();
  v77 = *(_QWORD *)(v19 - 8);
  v78 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v70 - v23;
  if ((a1 & 1) != 0 || !a2)
  {
    sub_1BC62BAF8();
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v51 = v81;
    v50(v15, v82, v81);
    swift_retain_n();
    v52 = sub_1BC62BB28();
    v53 = sub_1BC62CAAC();
    v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      v55 = swift_slowAlloc();
      v74 = v50;
      v56 = v55;
      v73 = swift_slowAlloc();
      v83[0] = v73;
      *(_DWORD *)v56 = 136315650;
      LODWORD(v72) = v54;
      v71 = v52;
      v57 = sub_1BC5C6CEC();
      v84 = sub_1BC4991F0(v57, v58, v83);
      v75 = a6;
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2080;
      sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v59 = sub_1BC62D52C();
      v84 = sub_1BC4991F0(v59, v60, v83);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v51);
      *(_WORD *)(v56 + 22) = 2080;
      v61 = (id)HKClinicalSharingUserStatusToString();
      v62 = sub_1BC62C680();
      v64 = v63;

      v84 = sub_1BC4991F0(v62, v64, v83);
      a6 = v75;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      v52 = v71;
      _os_log_impl(&dword_1BC30A000, v71, (os_log_type_t)v72, "%s successfully updated user status of account %s to %s", (uint8_t *)v56, 0x20u);
      v65 = v73;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v65, -1, -1);
      v66 = v56;
      v50 = v74;
      MEMORY[0x1BCCF36A8](v66, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v51);
    }

    (*(void (**)(char *, uint64_t))(v77 + 8))(v21, v78);
    v50(v12, v82, v51);
    swift_storeEnumTagMultiPayload();
    a6(v12);
  }
  else
  {
    v25 = a2;
    sub_1BC62BAF8();
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v27 = v81;
    v26(v18, v82, v81);
    v28 = a2;
    swift_retain();
    v29 = a2;
    swift_retain();
    v30 = sub_1BC62BB28();
    v31 = sub_1BC62CAC4();
    LODWORD(v74) = v31;
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v73 = (uint64_t)v26;
      v33 = v32;
      v72 = swift_slowAlloc();
      v84 = v72;
      *(_DWORD *)v33 = 136315906;
      v71 = v30;
      v34 = sub_1BC5C6CEC();
      v83[0] = sub_1BC4991F0(v34, v35, &v84);
      v75 = a6;
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v36 = sub_1BC62D52C();
      v83[0] = sub_1BC4991F0(v36, v37, &v84);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v81);
      *(_WORD *)(v33 + 22) = 2080;
      v38 = (id)HKClinicalSharingUserStatusToString();
      v39 = sub_1BC62C680();
      v41 = v40;

      v83[0] = sub_1BC4991F0(v39, v41, &v84);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 32) = 2080;
      v83[0] = (uint64_t)a2;
      v42 = a2;
      v43 = a2;
      sub_1BC35E44C();
      sub_1BC62D5D4();
      v44 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v45 = sub_1BC62C6E0();
      v47 = v46;

      v83[0] = sub_1BC4991F0(v45, v47, &v84);
      sub_1BC62CFF8();
      a6 = v75;
      swift_bridgeObjectRelease();

      v30 = v71;
      _os_log_impl(&dword_1BC30A000, v71, (os_log_type_t)v74, "%s failed to update user status of account %s to %s with error: %s", (uint8_t *)v33, 0x2Au);
      v48 = v72;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v48, -1, -1);
      v49 = v33;
      v26 = (void (*)(char *, uint64_t, uint64_t))v73;
      v27 = v81;
      MEMORY[0x1BCCF36A8](v49, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v27);

    }
    (*(void (**)(char *, uint64_t))(v77 + 8))(v24, v78);
    v26(v12, v82, v27);
    v67 = type metadata accessor for ClinicalAccountManager.FlowError();
    v12[*(int *)(v67 + 20)] = 2;
    *(_QWORD *)&v12[*(int *)(v67 + 24)] = a2;
    swift_storeEnumTagMultiPayload();
    v68 = a2;
    a6(v12);

  }
  return sub_1BC348D78((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BC5D064C);
}

uint64_t sub_1BC5CD870@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t result;
  uint64_t v16;

  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8, v11);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  sub_1BC5D0428();
  swift_allocObject();
  swift_retain();
  v14 = a2;
  result = sub_1BC62BF60();
  *a4 = result;
  return result;
}

void sub_1BC5CD980(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  char *v25;
  unint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t aBlock[6];

  v36 = a5;
  v9 = sub_1BC62A7B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v35 = v11;
  v37 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62BB34();
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BAF8();
  swift_retain_n();
  v15 = sub_1BC62BB28();
  v16 = sub_1BC62CAB8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v32 = a4;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v29 = v10;
    v20 = v19;
    aBlock[0] = v19;
    v31 = v9;
    *(_DWORD *)v18 = 136315138;
    v21 = sub_1BC5C6CEC();
    v30 = a1;
    v38 = sub_1BC4991F0(v21, v22, aBlock);
    v9 = v31;
    sub_1BC62CFF8();
    swift_release_n();
    a1 = v30;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v15, v16, "%s revoking authorization identifiers", v18, 0xCu);
    swift_arrayDestroy();
    v23 = v20;
    v10 = v29;
    MEMORY[0x1BCCF36A8](v23, -1, -1);
    v24 = v18;
    a4 = v32;
    MEMORY[0x1BCCF36A8](v24, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
  v25 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v37, v36, v9);
  v26 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v27 = (char *)swift_allocObject();
  *((_QWORD *)v27 + 2) = a3;
  *((_QWORD *)v27 + 3) = a1;
  *((_QWORD *)v27 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v27[v26], v25, v9);
  aBlock[4] = (uint64_t)sub_1BC5D0CE4;
  aBlock[5] = (uint64_t)v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC3EFECC;
  aBlock[3] = (uint64_t)&block_descriptor_81;
  v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a4, sel_revokeWithCompletion_, v28);
  _Block_release(v28);
}

uint64_t sub_1BC5CDC88(char a1, void *a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1BC5D064C();
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC62BB34();
  v55 = *(_QWORD *)(v15 - 8);
  v56 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v50 - v19;
  if ((a1 & 1) != 0 || !a2)
  {
    v54 = v12;
    sub_1BC62BAF8();
    swift_retain_n();
    v37 = sub_1BC62BB28();
    v38 = sub_1BC62CAAC();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v53 = a6;
      v40 = (uint8_t *)v39;
      v41 = swift_slowAlloc();
      v57 = v41;
      v51 = a5;
      v52 = a4;
      *(_DWORD *)v40 = 136315138;
      v42 = sub_1BC5C6CEC();
      v58 = sub_1BC4991F0(v42, v43, &v57);
      a4 = v52;
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v37, v38, "%s successfully revoked authorization identifiers", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v41, -1, -1);
      v44 = v40;
      a6 = v53;
      MEMORY[0x1BCCF36A8](v44, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v56);
    v48 = sub_1BC62A7B4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v14, a6, v48);
    swift_storeEnumTagMultiPayload();
    a4(v14);
  }
  else
  {
    v53 = a6;
    v21 = a2;
    sub_1BC62BAF8();
    v22 = a2;
    swift_retain();
    v23 = a2;
    swift_retain();
    v24 = sub_1BC62BB28();
    v25 = sub_1BC62CAC4();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v54 = v12;
      v27 = v26;
      v51 = swift_slowAlloc();
      v58 = v51;
      *(_DWORD *)v27 = 136315394;
      v52 = a4;
      v28 = sub_1BC5C6CEC();
      v57 = sub_1BC4991F0(v28, v29, &v58);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      v50 = v27 + 14;
      v57 = (uint64_t)a2;
      v30 = a2;
      v31 = a2;
      sub_1BC35E44C();
      sub_1BC62D5D4();
      v32 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v33 = sub_1BC62C6E0();
      v35 = v34;

      v57 = sub_1BC4991F0(v33, v35, &v58);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v24, v25, "%s failed to revoke authorization identifiers with error: %s", (uint8_t *)v27, 0x16u);
      v36 = v51;
      a4 = v52;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v36, -1, -1);
      MEMORY[0x1BCCF36A8](v27, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v20, v56);
    v45 = sub_1BC62A7B4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v14, v53, v45);
    v46 = type metadata accessor for ClinicalAccountManager.FlowError();
    v14[*(int *)(v46 + 20)] = 3;
    *(_QWORD *)&v14[*(int *)(v46 + 24)] = a2;
    swift_storeEnumTagMultiPayload();
    v47 = a2;
    a4(v14);

  }
  return sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC5D064C);
}

uint64_t sub_1BC5CE1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t);

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a4;
  v8[11] = a5;
  v11 = sub_1BC62A7B4();
  v8[14] = v11;
  v8[15] = *(_QWORD *)(v11 - 8);
  v8[16] = swift_task_alloc();
  v12 = sub_1BC62BB34();
  v8[17] = v12;
  v8[18] = *(_QWORD *)(v12 - 8);
  v8[19] = swift_task_alloc();
  v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF438F28 + dword_1EF438F28);
  v13 = (_QWORD *)swift_task_alloc();
  v8[20] = v13;
  *v13 = v8;
  v13[1] = sub_1BC5CE28C;
  return v15(a5, a6);
}

uint64_t sub_1BC5CE28C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC5CE2F0()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 96))(0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5CE338()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void (*v32)(void *);
  id v33;
  uint64_t v35;
  uint64_t v36;
  NSObject *log;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  sub_1BC62BAF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = v1;
  swift_retain();
  v7 = v1;
  swift_retain();
  v8 = sub_1BC62BB28();
  v9 = sub_1BC62CAC4();
  if (os_log_type_enabled(v8, v9))
  {
    log = v8;
    v10 = *(void **)(v0 + 168);
    v38 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 128);
    v39 = *(_QWORD *)(v0 + 136);
    v40 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 120);
    v13 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v41 = v36;
    *(_DWORD *)v13 = 136315650;
    v14 = sub_1BC5C6CEC();
    *(_QWORD *)(v0 + 48) = sub_1BC4991F0(v14, v15, &v41);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v13 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v16 = sub_1BC62D52C();
    *(_QWORD *)(v0 + 56) = sub_1BC4991F0(v16, v17, &v41);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v11, v12);
    *(_WORD *)(v13 + 22) = 2080;
    *(_QWORD *)(v0 + 64) = v10;
    v18 = v10;
    v19 = v10;
    sub_1BC35E44C();
    sub_1BC62D5D4();
    v20 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v21 = sub_1BC62C6E0();
    v23 = v22;

    *(_QWORD *)(v0 + 72) = sub_1BC4991F0(v21, v23, &v41);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, log, v9, "%s failed to update clinical sharing device status of account %s with error: %s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v36, -1, -1);
    MEMORY[0x1BCCF36A8](v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v39);
  }
  else
  {
    v24 = *(void **)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 144);
    v25 = *(_QWORD *)(v0 + 152);
    v28 = *(_QWORD *)(v0 + 128);
    v27 = *(_QWORD *)(v0 + 136);
    v29 = *(_QWORD *)(v0 + 112);
    v30 = *(_QWORD *)(v0 + 120);
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  }
  v31 = *(void **)(v0 + 168);
  v32 = *(void (**)(void *))(v0 + 96);
  v33 = v31;
  v32(v31);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5CE6F4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1BC5CE708(a1, a2, a3, &qword_1EF42DB80);
}

uint64_t sub_1BC5CE708(uint64_t a1, uint64_t a2, void *a3, unint64_t *a4)
{
  uint64_t v4;
  _QWORD *v6;
  id v7;

  v4 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_1BC35E44C();
    swift_allocError();
    *v6 = a3;
    v7 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1BC34B6A0(0, a4);
    **(_QWORD **)(*(_QWORD *)(v4 + 64) + 40) = sub_1BC62C878();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1BC5CE7A4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1BC5CE708(a1, a2, a3, &qword_1EF42DBA0);
}

uint64_t sub_1BC5CE7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1BC5D0428();
  swift_allocObject();
  swift_retain();
  result = sub_1BC62BF60();
  *a3 = result;
  return result;
}

uint64_t sub_1BC5CE8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v18;

  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - v12;
  v14 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = 0;
  *((_QWORD *)v16 + 3) = 0;
  *((_QWORD *)v16 + 4) = a3;
  *((_QWORD *)v16 + 5) = a1;
  *((_QWORD *)v16 + 6) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v15], (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain();
  swift_retain();
  sub_1BC5C2784((uint64_t)v13, (uint64_t)&unk_1EF438EE8, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1BC5CEA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  v7[3] = a6;
  v7[4] = a7;
  v7[2] = a5;
  sub_1BC5D064C();
  v7[5] = v8;
  v7[6] = swift_task_alloc();
  v9 = (_QWORD *)swift_task_alloc();
  v7[7] = v9;
  *v9 = v7;
  v9[1] = sub_1BC5CEAA0;
  return sub_1BC5C600C(5);
}

uint64_t sub_1BC5CEAA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC5CEB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(void (**)(uint64_t))(v0 + 16);
  v4 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v1, v2, v4);
  swift_storeEnumTagMultiPayload();
  v3(v1);
  sub_1BC348D78(*(_QWORD *)(v0 + 48), (uint64_t (*)(_QWORD))sub_1BC5D064C);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5CEB9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = *(void **)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(void (**)(uint64_t))(v0 + 16);
  v5 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v2, v3, v5);
  v6 = type metadata accessor for ClinicalAccountManager.FlowError();
  *(_BYTE *)(v2 + *(int *)(v6 + 20)) = 4;
  *(_QWORD *)(v2 + *(int *)(v6 + 24)) = v1;
  swift_storeEnumTagMultiPayload();
  v7 = v1;
  v4(v2);

  sub_1BC348D78(*(_QWORD *)(v0 + 48), (uint64_t (*)(_QWORD))sub_1BC5D064C);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5CEC64()
{
  sub_1BC62C764();
  swift_getMetatypeMetadata();
  sub_1BC62C6E0();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  sub_1BC62D2D4();
  sub_1BC62C764();
  return 0;
}

uint64_t sub_1BC5CED28(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - v8;
  v10 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_1BC62C944();
  swift_retain();
  v11 = a3;
  v12 = a4;
  v13 = sub_1BC62C938();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x1E0DF06E8];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = a2;
  v14[5] = v11;
  v14[6] = v12;
  sub_1BC5C2784((uint64_t)v9, (uint64_t)&unk_1EF438D98, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1BC5CEE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v9;

  v6[2] = sub_1BC62C944();
  v6[3] = sub_1BC62C938();
  v9 = (_QWORD *)swift_task_alloc();
  v6[4] = v9;
  *v9 = v6;
  v9[1] = sub_1BC3917E8;
  return ClinicalAccountManager.startRelogin(to:from:)(a5, a6);
}

uint64_t ClinicalAccountManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ClinicalAccountManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5CEF28(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC34B6A0(0, &qword_1ED6A52E8);
    v5 = sub_1BC62C878();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC5CEFC8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1BC5CF030;
  return v5(v2 + 32);
}

uint64_t sub_1BC5CF030()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1BC5CF080(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x1BCCF24CC](v3, a1);
LABEL_9:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_15;
        sub_1BC62B9C0();
        if (v7)
        {
          swift_bridgeObjectRelease();
          sub_1BC62D268();
          sub_1BC62D298();
          sub_1BC62D2A4();
          sub_1BC62D274();
        }
        else
        {

        }
        ++v3;
        if (v6 == v2)
          return v9;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v2 = sub_1BC62D3B8();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BC5CF1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  _QWORD *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[6];

  v5 = objc_msgSend((id)objc_opt_self(), sel_signedClinicalDataRecordType);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  v7 = objc_allocWithZone(MEMORY[0x1E0CB6AF8]);
  v11[4] = sub_1BC5CFC8C;
  v11[5] = v6;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1BC5CEF28;
  v11[3] = &block_descriptor_15_4;
  v8 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  v9 = objc_msgSend(v7, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v5, 0, 0, 0, v8);

  _Block_release(v8);
  swift_release();
  v10 = objc_msgSend(*(id *)(v2 + 24), sel_healthStore);
  objc_msgSend(v10, sel_executeQuery_, v9);

}

uint64_t sub_1BC5CF31C()
{
  return objectdestroyTm_12((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BC5CF328()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC5CF354(void *a1)
{
  uint64_t v1;

  return sub_1BC5C9DE8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1BC5CF35C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  v4 = sub_1BC62A7B4();
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v5 = sub_1BC62BB34();
  v3[27] = v5;
  v3[28] = *(_QWORD *)(v5 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5CF408()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = v0[20];
  v2 = v0[26];
  v3 = v0[23];
  v4 = v0[24];
  sub_1BC62BAF8();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[31] = v5;
  v5(v2, v1, v3);
  swift_retain_n();
  v6 = sub_1BC62BB28();
  v7 = sub_1BC62CAB8();
  if (os_log_type_enabled(v6, v7))
  {
    v33 = v0[28];
    v8 = v0[26];
    v34 = v0[27];
    v35 = v0[30];
    v9 = v0[23];
    v30 = v0[24];
    v31 = v0[21];
    v10 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v36 = v32;
    *(_DWORD *)v10 = 136315650;
    v11 = sub_1BC5C6CEC();
    v0[17] = sub_1BC4991F0(v11, v12, &v36);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v13 = sub_1BC62D52C();
    v0[18] = sub_1BC4991F0(v13, v14, &v36);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    v15 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v15(v8, v9);
    *(_WORD *)(v10 + 22) = 2048;
    v0[19] = v31;
    sub_1BC62CFF8();
    _os_log_impl(&dword_1BC30A000, v6, v7, "%s updating clinical sharing device status of account %s to %ld", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v32, -1, -1);
    MEMORY[0x1BCCF36A8](v10, -1, -1);

    v16 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v16(v35, v34);
  }
  else
  {
    v17 = v0[30];
    v18 = v0[27];
    v19 = v0[28];
    v20 = v0[26];
    v21 = v0[23];
    v22 = v0[24];
    swift_release_n();
    v15 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v15(v20, v21);

    v16 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v16(v17, v18);
  }
  v0[32] = v16;
  v0[33] = v15;
  v23 = v0[22];
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v0[21]);
  v0[34] = v24;
  v25 = *(void **)(v23 + 24);
  v26 = sub_1BC62A784();
  v0[35] = v26;
  v0[2] = v0;
  v0[3] = sub_1BC5CF76C;
  v27 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v28 = v0 + 10;
  v28[1] = 0x40000000;
  v28[2] = sub_1BC5C656C;
  v28[3] = &block_descriptor_143_0;
  v28[4] = v27;
  objc_msgSend(v25, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v26, 0, 0, 0, v24, 0, v28);
  return swift_continuation_await();
}

uint64_t sub_1BC5CF76C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 288) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC5CF7CC()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;

  v1 = *(void **)(v0 + 280);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);

  sub_1BC62BAF8();
  v2(v3, v5, v4);
  swift_retain_n();
  v6 = sub_1BC62BB28();
  v7 = sub_1BC62CAAC();
  if (os_log_type_enabled(v6, v7))
  {
    v26 = *(_QWORD *)(v0 + 232);
    v27 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
    v25 = *(_QWORD *)(v0 + 216);
    v8 = *(_QWORD *)(v0 + 200);
    v9 = *(_QWORD *)(v0 + 184);
    v10 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v28 = v23;
    *(_DWORD *)v10 = 136315394;
    v11 = sub_1BC5C6CEC();
    *(_QWORD *)(v0 + 120) = sub_1BC4991F0(v11, v12, &v28);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v13 = sub_1BC62D52C();
    *(_QWORD *)(v0 + 128) = sub_1BC4991F0(v13, v14, &v28);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    v24(v8, v9);
    _os_log_impl(&dword_1BC30A000, v6, v7, "%s successfully updated clinical sharing device status of account %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v23, -1, -1);
    MEMORY[0x1BCCF36A8](v10, -1, -1);

    v27(v26, v25);
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
    v17 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 184);
    swift_release_n();
    v15(v19, v20);

    v16(v17, v18);
  }
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 296) = v21;
  *v21 = v0;
  v21[1] = sub_1BC5CFA50;
  return sub_1BC5C600C(5);
}

uint64_t sub_1BC5CFA50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC5CFAB4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5CFB18()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 280);
  v2 = *(void **)(v0 + 272);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5CFB98()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t block_copy_helper_66(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_66()
{
  return swift_release();
}

uint64_t type metadata accessor for ClinicalAccountManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ClinicalAccountManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClinicalAccountManager.__allocating_init(profile:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BC5CFC50()
{
  return objectdestroyTm_12((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroyTm_12(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

void sub_1BC5CFC8C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1BC5C6D5C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(uint64_t, _QWORD, _QWORD))(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1BC5CFC98()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC5CFCCC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5CED28(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1BC5CFCD8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC5CFD14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1BC3781C0;
  return sub_1BC5CEE3C(a1, v4, v5, v6, v7, v8);
}

void sub_1BC5CFD94()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF438DA0)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C960D8];
    sub_1BC5CFFDC(255, &qword_1EF438DA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C960D8]);
    sub_1BC5D0080(&qword_1EF438DB8, &qword_1EF438DA8, v0, MEMORY[0x1E0C96108]);
    v1 = sub_1BC62BF84();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF438DA0);
  }
}

uint64_t type metadata accessor for ClinicalAccountManager.FlowError()
{
  uint64_t result;

  result = qword_1EF439018;
  if (!qword_1EF439018)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC5CFE68()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  if (!qword_1EF438DC0)
  {
    sub_1BC5CFF4C();
    v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95D78];
    sub_1BC5CFFDC(255, &qword_1EF438DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95D78]);
    v1 = MEMORY[0x1E0C95D90];
    sub_1BC347F0C(&qword_1EF438DD8, (uint64_t (*)(uint64_t))sub_1BC5CFF4C, MEMORY[0x1E0C95D90]);
    sub_1BC5D0080(&qword_1EF438DE0, &qword_1EF438DD0, v0, v1);
    v2 = sub_1BC62BE28();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1EF438DC0);
  }
}

void sub_1BC5CFF4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438DC8)
  {
    sub_1BC62A7B4();
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1BC347F0C(&qword_1EF438DB0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t)&unk_1BC64AA68);
    v0 = sub_1BC62BE94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438DC8);
  }
}

void sub_1BC5CFFDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v6 = sub_1BC34B6A0(255, (unint64_t *)&qword_1EF431480);
    v7 = type metadata accessor for ClinicalAccountManager.FlowError();
    v8 = sub_1BC347F0C(&qword_1EF438DB0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t)&unk_1BC64AA68);
    v9 = a3(a1, v6, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC5D0080(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC5CFFDC(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC5D00C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438DE8)
  {
    sub_1BC5CFE68();
    sub_1BC5D0154();
    sub_1BC347F0C(&qword_1EF438DF8, (uint64_t (*)(uint64_t))sub_1BC5CFE68, MEMORY[0x1E0C95B78]);
    v0 = sub_1BC62BE10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438DE8);
  }
}

void sub_1BC5D0154()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF438DF0)
  {
    sub_1BC62A7B4();
    type metadata accessor for HKClinicalAccountDeletionReason(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF438DF0);
  }
}

void sub_1BC5D01C0(uint64_t a1)
{
  sub_1BC5D0790(a1, &qword_1EF438E00, (uint64_t (*)(uint64_t))sub_1BC5D00C0, &qword_1EF438E08, MEMORY[0x1E0C95950]);
}

uint64_t sub_1BC5D01E8()
{
  return sub_1BC5D173C((uint64_t (*)(_QWORD, uint64_t))sub_1BC5CB414);
}

uint64_t sub_1BC5D01F4()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5D0228@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC5C79B4(*a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t sub_1BC5D025C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5D0288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC5C837C(a1, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1BC5D0294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC5C83E4(a1, a2, v2);
}

uint64_t sub_1BC5D029C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, _QWORD);
  uint64_t v6;
  uint64_t result;

  v5 = *(uint64_t (**)(uint64_t, _QWORD))(v2 + 16);
  sub_1BC5D0154();
  result = v5(a1, *(_QWORD *)(a1 + *(int *)(v6 + 48)));
  *a2 = result;
  return result;
}

uint64_t sub_1BC5D02E8(uint64_t a1)
{
  return sub_1BC5D165C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))sub_1BC5C8598);
}

void sub_1BC5D02F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438E20)
  {
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1BC347F0C(&qword_1EF438DB0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t)&unk_1BC64AA68);
    v0 = sub_1BC62BE7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438E20);
  }
}

uint64_t sub_1BC5D036C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalAccountManager.FlowError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC5D03B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438E28)
  {
    sub_1BC5D0428();
    sub_1BC347F0C(&qword_1EF438E38, (uint64_t (*)(uint64_t))sub_1BC5D0428, MEMORY[0x1E0C96108]);
    v0 = sub_1BC62BF84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438E28);
  }
}

void sub_1BC5D0428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438E30)
  {
    sub_1BC62A7B4();
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1BC347F0C(&qword_1EF438DB0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t)&unk_1BC64AA68);
    v0 = sub_1BC62BF54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438E30);
  }
}

uint64_t sub_1BC5D04BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BC5CB83C(*(void **)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t objectdestroy_43Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1BC5D0594(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1BC5CB954(a1, a2, *(void **)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BC5D05FC(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC62A7B4() - 8) + 80);
  return sub_1BC5CBABC(a1, a2, *(void (**)(char *))(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5));
}

void sub_1BC5D064C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438E48)
  {
    sub_1BC62A7B4();
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1BC347F0C(&qword_1EF438DB0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t)&unk_1BC64AA68);
    v0 = sub_1BC62D6C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438E48);
  }
}

void sub_1BC5D06DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438E58)
  {
    sub_1BC62A7B4();
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1BC347F0C(&qword_1EF438DB0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t)&unk_1BC64AA68);
    v0 = sub_1BC62D6B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438E58);
  }
}

void sub_1BC5D076C(uint64_t a1)
{
  sub_1BC5D0790(a1, &qword_1EF438E60, (uint64_t (*)(uint64_t))sub_1BC5D0428, &qword_1EF438E38, MEMORY[0x1E0C96108]);
}

void sub_1BC5D0790(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC5CFF4C();
    a3(255);
    sub_1BC347F0C(&qword_1EF438DD8, (uint64_t (*)(uint64_t))sub_1BC5CFF4C, MEMORY[0x1E0C95D90]);
    sub_1BC347F0C(a4, a3, a5);
    v9 = sub_1BC62BE28();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC5D0854(uint64_t a1)
{
  sub_1BC5D0790(a1, &qword_1EF438E68, (uint64_t (*)(uint64_t))sub_1BC5D076C, &qword_1EF438E70, MEMORY[0x1E0C95B78]);
}

void sub_1BC5D0878()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438E78)
  {
    sub_1BC5D0854(255);
    sub_1BC5D0940();
    sub_1BC347F0C(&qword_1EF438E88, (uint64_t (*)(uint64_t))sub_1BC5D0854, MEMORY[0x1E0C95B78]);
    sub_1BC347F0C(&qword_1EF438E90, (uint64_t (*)(uint64_t))sub_1BC5D0940, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC62BE58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438E78);
  }
}

void sub_1BC5D0940()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438E80)
  {
    sub_1BC62A7B4();
    sub_1BC35E44C();
    v0 = sub_1BC62BE94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438E80);
  }
}

void sub_1BC5D09AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438E98)
  {
    sub_1BC5D0878();
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1BC347F0C(&qword_1EF438EA0, (uint64_t (*)(uint64_t))sub_1BC5D0878, MEMORY[0x1E0C95C38]);
    sub_1BC347F0C(&qword_1EF438DB0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, (uint64_t)&unk_1BC64AA68);
    v0 = sub_1BC62BE40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438E98);
  }
}

void sub_1BC5D0A74(uint64_t a1)
{
  sub_1BC5D0790(a1, &qword_1EF438EA8, (uint64_t (*)(uint64_t))sub_1BC5D09AC, &qword_1EF438EB0, MEMORY[0x1E0C95BC8]);
}

uint64_t sub_1BC5D0A98()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC5D0ACC(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;

  return sub_1BC5CC13C(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1BC5D0AD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC5CC218(a1, v2, a2);
}

uint64_t sub_1BC5D0AE0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5CC428(a1, v1, (uint64_t)&unk_1E74E6758, (uint64_t)sub_1BC5D1048);
}

uint64_t sub_1BC5D0B08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1BC5D0B30()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5D0B54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC5CC5C4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BC5D0B6C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC5D0B90@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC5CC9E4(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BC5D0B9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC62A7B4() - 8) + 80);
  return sub_1BC5CD870(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), v1 + ((v3 + 32) & ~v3), a1);
}

uint64_t objectdestroy_71Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC5D0C5C(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D12FC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))sub_1BC5CD980);
}

uint64_t sub_1BC5D0C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC5D0CE4(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC62A7B4() - 8) + 80);
  return sub_1BC5CDC88(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD))(v2 + 24), *(_QWORD *)(v2 + 32), v2 + ((v5 + 40) & ~v5));
}

void sub_1BC5D0D38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438ED0)
  {
    sub_1BC5CFF4C();
    sub_1BC62A7B4();
    sub_1BC347F0C(&qword_1EF438DD8, (uint64_t (*)(uint64_t))sub_1BC5CFF4C, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC62BE1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438ED0);
  }
}

uint64_t sub_1BC5D0DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for ClinicalAccountManager.FlowError();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_1BC5D0E5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClinicalAccountManager.FlowError() - 8) + 80);
  return sub_1BC5CC964(a1, v1 + ((v3 + 16) & ~v3));
}

void sub_1BC5D0EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BC5CCC94(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + v7), *(void **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BC5D0F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5D0FD0(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC5CD110(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + v7), *(void (**)(_QWORD))(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1BC5D1048()
{
  return sub_1BC5D173C((uint64_t (*)(_QWORD, uint64_t))sub_1BC5CE7B8);
}

uint64_t sub_1BC5D1058(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D1218(a1, a2, sub_1BC5CE8B8);
}

uint64_t sub_1BC5D1064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC5D10E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC62A7B4() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1BC3781C0;
  return sub_1BC5CEA28(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroy_28Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC5D120C(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D1218(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1BC5CB520);
}

uint64_t sub_1BC5D1218(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC62A7B4() - 8) + 80);
  return a3(a1, a2, *(_QWORD *)(v3 + 16), v3 + ((v6 + 24) & ~v6));
}

uint64_t objectdestroy_49Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC5D12F0(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D12FC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))sub_1BC5CB680);
}

uint64_t sub_1BC5D12FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC62A7B4() - 8) + 80);
  return a3(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v3 + ((v6 + 32) & ~v6));
}

uint64_t sub_1BC5D135C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC5CFFDC(0, &qword_1EF438EF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEE030]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC5D13A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF438F00)
  {
    sub_1BC5CFF4C();
    sub_1BC347F0C(&qword_1EF438DD8, (uint64_t (*)(uint64_t))sub_1BC5CFF4C, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC62BE28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF438F00);
  }
}

void sub_1BC5D142C(uint64_t a1)
{
  sub_1BC5D0790(a1, &qword_1EF438F08, (uint64_t (*)(uint64_t))sub_1BC5D13A8, &qword_1EF438F10, MEMORY[0x1E0C95B78]);
}

uint64_t objectdestroy_83Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1BC5D14FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC5CCB48(*(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(void **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_1BC5D156C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5D1590(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5CC428(a1, v1, (uint64_t)&unk_1E74E6928, (uint64_t)sub_1BC5D1048);
}

uint64_t objectdestroy_40Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5D1650(uint64_t a1)
{
  return sub_1BC5D165C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))sub_1BC5C966C);
}

uint64_t sub_1BC5D165C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (_QWORD *)(v2 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a2(a1, *(_QWORD *)(v2 + 16), v2 + v5, *v6, v6[1]);
}

uint64_t objectdestroy_98Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC5D173C(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC62A7B4() - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_1BC5D178C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BC377F18;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF438F30 + dword_1EF438F30))(a1, v4);
}

uint64_t sub_1BC5D17FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1BC5D189C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v11 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC5CA3C0(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), v5 + v12, *(void **)(v5 + v13), *(void **)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BC5D193C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1BC5D19E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_BYTE *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 40);
  v11 = v1 + v5;
  v12 = *(_QWORD *)(v1 + v6);
  v13 = *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1BC377F18;
  return sub_1BC5CA560(a1, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1BC5D1AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1BC5D1B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1BC3781C0;
  v7 = (_QWORD *)swift_task_alloc();
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_1BC3781C0;
  return sub_1BC5CA7F8(v4, v5);
}

uint64_t sub_1BC5D1BEC()
{
  id *v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC5D1C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1BC3781C0;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

void sub_1BC5D1C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC5CBD00(a1, a2, v2);
}

void sub_1BC5D1C98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42BCF0)
  {
    sub_1BC3DD918(255, (unint64_t *)&qword_1EF42BCF8, (unint64_t *)&qword_1EF431480, 0x1E0D2EE90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC62BF54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42BCF0);
  }
}

uint64_t sub_1BC5D1D1C(unint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC5CBDE8(a1, a2, *(uint64_t (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24));
}

_QWORD *sub_1BC5D1D24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC62A7B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v10 = *(void **)((char *)a2 + v9);
    v11 = v10;
    *(_QWORD *)((char *)a1 + v9) = v10;
  }
  return a1;
}

void sub_1BC5D1DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_1BC5D1E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = *(void **)(a2 + v7);
  v9 = v8;
  *(_QWORD *)(a1 + v7) = v8;
  return a1;
}

uint64_t sub_1BC5D1E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = *(void **)(a2 + v7);
  v9 = v8;
  v10 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;

  return a1;
}

uint64_t sub_1BC5D1EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1BC5D1F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t sub_1BC5D1FB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC5D1FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BC5D203C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC5D2048(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC62A7B4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1BC5D20C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ClinicalAccountManager.DeletionOutcome(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BC5D2188 + 4 * byte_1BC64A9C5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BC5D21BC + 4 * byte_1BC64A9C0[v4]))();
}

uint64_t sub_1BC5D21BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC5D21C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC5D21CCLL);
  return result;
}

uint64_t sub_1BC5D21D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC5D21E0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BC5D21E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC5D21EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountManager.DeletionOutcome()
{
  return &type metadata for ClinicalAccountManager.DeletionOutcome;
}

unint64_t sub_1BC5D220C()
{
  unint64_t result;

  result = qword_1EF439058;
  if (!qword_1EF439058)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64AAE8, &type metadata for ClinicalAccountManager.DeletionOutcome);
    atomic_store(result, (unint64_t *)&qword_1EF439058);
  }
  return result;
}

BOOL MedicalRecordFormatterContext.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_1BC5D22E4()
{
  unint64_t result;

  result = qword_1EF439060;
  if (!qword_1EF439060)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordFormatterContext, &type metadata for MedicalRecordFormatterContext);
    atomic_store(result, (unint64_t *)&qword_1EF439060);
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordFormatterContext()
{
  return &type metadata for MedicalRecordFormatterContext;
}

uint64_t dispatch thunk of MedicalObjectFormatter.store.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MedicalObjectFormatter.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MedicalObjectFormatter.init(store:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of MedicalObjectFormatter.displayItems(from:country:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of MedicalRecordFormatterProtocol.displayItems(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

id AccountOnboardingSession.makeDataTypeSelectionViewController(for:)(void *a1)
{
  void *v1;
  id v3;
  char *v4;
  id v5;
  id v6;

  v3 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingDataTypeSelectionViewController(0));
  v4 = v1;
  v5 = a1;
  v6 = sub_1BC3658FC(v4, v5);

  return v6;
}

id AccountOnboardingSession.makeNecessaryScopesNotPresentViewController(for:)(void *a1)
{
  id v2;

  v2 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingNecessaryScopesNotPresentViewController());
  return sub_1BC5475B4(a1);
}

BOOL LocalizedEducationContent.hasContentForCurrentLocaleAndCountryCode.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v2 = sub_1BC5D3740(1, 1, a1, a2);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = sub_1BC5D3F8C(v2);
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      v5 = v3 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BC34E674(v5, (uint64_t)&v14);
        v6 = v15;
        v7 = v16;
        __swift_project_boxed_opaque_existential_1Tm(&v14, v15);
        v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 48))(v6, v7);
        v10 = v9;
        swift_bridgeObjectRelease();
        v11 = HIBYTE(v10) & 0xF;
        if ((v10 & 0x2000000000000000) == 0)
          v11 = v8 & 0xFFFFFFFFFFFFLL;
        if (v11)
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        v5 += 40;
        if (!--v4)
        {
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      sub_1BC34E718(&v14, (uint64_t)&v17);
    }
    else
    {
LABEL_9:
      v19 = 0;
      v17 = 0u;
      v18 = 0u;
    }
    swift_bridgeObjectRelease();
    v12 = *((_QWORD *)&v18 + 1) != 0;
    sub_1BC384EB4((uint64_t)&v17, (unint64_t *)&qword_1EF439068, (void (*)(uint64_t))sub_1BC5D43BC);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

uint64_t LocalizedEducationContent.primaryRegionGatedContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3538(1, 1, 0, a1, a2);
}

uint64_t LocalizedEducationContent.titleRegionGatedForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3538(2, 1, 1, a1, a2);
}

uint64_t HKOntologyLocalizedEducationContentSection.attributionsForSection.getter()
{
  return sub_1BC5D2BF0((SEL *)&selRef_attributions);
}

uint64_t LocalizedEducationContent.titleForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3538(2, 0, 1, a1, a2);
}

uint64_t LocalizedEducationContent.primaryContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3538(1, 0, 0, a1, a2);
}

uint64_t LocalizedEducationContent.abstractContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3538(3, 0, 0, a1, a2);
}

uint64_t LocalizedEducationContent.sideEffectsContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3538(4, 0, 0, a1, a2);
}

uint64_t LocalizedEducationContent.pregnancyDescriptionContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3538(5, 0, 0, a1, a2);
}

uint64_t LocalizedEducationContent.lactationDescriptionContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3538(6, 0, 0, a1, a2);
}

uint64_t LocalizedEducationContent.abstractRegionGatedContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3538(3, 1, 0, a1, a2);
}

uint64_t LocalizedEducationContentCodable.codableContent.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t j;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  v5 = *(_QWORD *)(v4(a1, v3) + 16);
  swift_bridgeObjectRelease();
  if (!v5)
    return 0;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F670]), sel_init);
  if (!v6)
    return (uint64_t)v6;
  v7 = v4(a1, v3);
  v8 = MEMORY[0x1E0DEE9D8];
  v50 = MEMORY[0x1E0DEE9D8];
  v46 = *(_QWORD *)(v7 + 16);
  if (v46)
  {
    v45 = v7 + 32;
    v44 = v7;
    swift_bridgeObjectRetain();
    for (i = 0; i != v46; ++i)
    {
      sub_1BC34E674(v45 + 40 * i, (uint64_t)v47);
      v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F678]), sel_init);
      if (v10)
      {
        v11 = v10;
        v12 = v48;
        v13 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        objc_msgSend(v11, sel_setType_, (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13));
        v14 = v48;
        v15 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        (*(void (**)(uint64_t, uint64_t))(v15 + 48))(v14, v15);
        v16 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_setSectionLocalizedContent_, v16);

        v17 = v48;
        v18 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
        v19 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_setSectionLocaleIdentifier_, v19);

        v20 = v48;
        v21 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
        v23 = *(_QWORD *)(v22 + 16);
        if (v23)
        {
          swift_bridgeObjectRetain();
          v24 = v22 + 40;
          do
          {
            swift_bridgeObjectRetain();
            v25 = (void *)sub_1BC62C650();
            objc_msgSend(v11, sel_addSectionCitations_, v25);
            swift_bridgeObjectRelease();

            v24 += 16;
            --v23;
          }
          while (v23);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v26 = v48;
        v27 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
        v29 = *(_QWORD *)(v28 + 16);
        if (v29)
        {
          swift_bridgeObjectRetain();
          v30 = v28 + 40;
          do
          {
            swift_bridgeObjectRetain();
            v31 = (void *)sub_1BC62C650();
            objc_msgSend(v11, sel_addSectionAttributions_, v31);
            swift_bridgeObjectRelease();

            v30 += 16;
            --v29;
          }
          while (v29);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v32 = v48;
        v33 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
        v35 = *(_QWORD *)(v34 + 16);
        if (v35)
        {
          swift_bridgeObjectRetain();
          v36 = v34 + 40;
          do
          {
            swift_bridgeObjectRetain();
            v37 = (void *)sub_1BC62C650();
            objc_msgSend(v11, sel_addSectionValidRegionCodes_, v37);
            swift_bridgeObjectRelease();

            v36 += 16;
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v38 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
        MEMORY[0x1BCCF1B30](v38);
        if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
      }
    }
    swift_bridgeObjectRelease();
    v8 = v50;
  }
  swift_bridgeObjectRelease();
  if (!(v8 >> 62))
  {
    v39 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v39)
      goto LABEL_27;
LABEL_34:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v39 = result;
  if (!result)
    goto LABEL_34;
LABEL_27:
  if (v39 >= 1)
  {
    for (j = 0; j != v39; ++j)
    {
      if ((v8 & 0xC000000000000001) != 0)
        v42 = (id)MEMORY[0x1BCCF24CC](j, v8);
      else
        v42 = *(id *)(v8 + 8 * j + 32);
      v43 = v42;
      objc_msgSend(v6, sel_addSections_, v42, v44);

    }
    goto LABEL_34;
  }
  __break(1u);
  return result;
}

uint64_t HKOntologyLocalizedEducationContentSection.citationsForSection.getter()
{
  return sub_1BC5D2BF0((SEL *)&selRef_citations);
}

uint64_t HKOntologyLocalizedEducationContentSection.validRegionCodesForSection.getter()
{
  return sub_1BC5D2BF0((SEL *)&selRef_validRegionCodes);
}

uint64_t sub_1BC5D2BF0(SEL *a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(v1, *a1);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = v2;
  v4 = sub_1BC62C878();

  return v4;
}

uint64_t HKOntologyLocalizedEducationContentSection.localizedTextForSection.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_localizedText);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BC62C680();

  return v3;
}

uint64_t sub_1BC5D2CAC(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D2CD0(a1, a2, (SEL *)&selRef_citations);
}

uint64_t sub_1BC5D2CB8(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D2CD0(a1, a2, (SEL *)&selRef_attributions);
}

uint64_t sub_1BC5D2CC4(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D2CD0(a1, a2, (SEL *)&selRef_validRegionCodes);
}

uint64_t sub_1BC5D2CD0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v4 = objc_msgSend(*v3, *a3);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  v5 = v4;
  v6 = sub_1BC62C878();

  return v6;
}

uint64_t sub_1BC5D2D28()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_localeIdentifier);
  v2 = sub_1BC62C680();

  return v2;
}

id sub_1BC5D2D7C()
{
  id *v0;

  return objc_msgSend(*v0, sel_sectionType);
}

uint64_t sub_1BC5D2D8C()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_localizedText);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BC62C680();

  return v3;
}

uint64_t HKOntologyLocalizedEducationContent.eduSections.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_sections);
  sub_1BC47A770();
  v2 = sub_1BC62C878();

  v3 = sub_1BC3D1D48(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BC5D2E58()
{
  id *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_sections);
  sub_1BC47A770();
  v2 = sub_1BC62C878();

  v3 = sub_1BC3D1D48(v2);
  swift_bridgeObjectRelease();
  return v3;
}

_QWORD *HKCodableHealthRecordsLocalizedEducationContent.eduSections.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  _QWORD *result;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  __int128 v13[2];
  uint64_t v14;
  char v15[32];
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19[2];
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;

  v1 = sub_1BC62A568();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)objc_msgSend(v0, sel_sectionsCount, v3) < 1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  result = objc_msgSend(v0, sel_sections);
  if (result)
  {
    v12 = v2;
    v7 = result;
    sub_1BC62CE30();
    v11 = v7;

    sub_1BC347F0C(&qword_1EF437EB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    sub_1BC62CFEC();
    if (v22)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        sub_1BC35E088(&v21, v20);
        sub_1BC375540((uint64_t)v20, (uint64_t)v15);
        sub_1BC5D43BC();
        if (swift_dynamicCast())
        {
          sub_1BC34E718(v13, (uint64_t)v19);
          sub_1BC34E718(v19, (uint64_t)&v16);
        }
        else
        {
          v14 = 0;
          memset(v13, 0, sizeof(v13));
          sub_1BC384EB4((uint64_t)v13, (unint64_t *)&qword_1EF439068, (void (*)(uint64_t))sub_1BC5D43BC);
          v16 = 0u;
          v17 = 0u;
          v18 = 0;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        if (*((_QWORD *)&v17 + 1))
        {
          sub_1BC34E718(&v16, (uint64_t)v19);
          sub_1BC34E718(v19, (uint64_t)&v16);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1BC3B5D08(0, v8[2] + 1, 1, v8);
          v10 = v8[2];
          v9 = v8[3];
          if (v10 >= v9 >> 1)
            v8 = sub_1BC3B5D08((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
          v8[2] = v10 + 1;
          sub_1BC34E718(&v16, (uint64_t)&v8[5 * v10 + 4]);
        }
        else
        {
          sub_1BC384EB4((uint64_t)&v16, (unint64_t *)&qword_1EF439068, (void (*)(uint64_t))sub_1BC5D43BC);
        }
        sub_1BC62CFEC();
      }
      while (v22);
    }
    else
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v5, v1);

    return v8;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC5D3190()
{
  return HKCodableHealthRecordsLocalizedEducationContent.eduSections.getter();
}

_QWORD *HKCodableHealthRecordsLocalizedEducationContentSection.citationsForSection.getter()
{
  return sub_1BC5D31EC((SEL *)&selRef_sectionCitationsCount, (SEL *)&selRef_sectionCitations);
}

_QWORD *HKCodableHealthRecordsLocalizedEducationContentSection.attributionsForSection.getter()
{
  return sub_1BC5D31EC((SEL *)&selRef_sectionAttributionsCount, (SEL *)&selRef_sectionAttributions);
}

_QWORD *HKCodableHealthRecordsLocalizedEducationContentSection.validRegionCodesForSection.getter()
{
  return sub_1BC5D31EC((SEL *)&selRef_sectionValidRegionCodesCount, (SEL *)&selRef_sectionValidRegionCodes);
}

_QWORD *sub_1BC5D31EC(SEL *a1, SEL *a2)
{
  void *v2;
  _QWORD *result;
  void *v5;
  _QWORD *v6;

  if ((uint64_t)objc_msgSend(v2, *a1) < 1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  result = objc_msgSend(v2, *a2);
  if (result)
  {
    v5 = result;
    v6 = sub_1BC5D3DA8(result);

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableHealthRecordsLocalizedEducationContentSection.localeIdentifier.getter()
{
  return sub_1BC5D3290((SEL *)&selRef_hasSectionLocaleIdentifier, (SEL *)&selRef_sectionLocaleIdentifier);
}

id HKCodableHealthRecordsLocalizedEducationContentSection.sectionType.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_type);
}

id HKCodableHealthRecordsLocalizedEducationContentSection.localizedTextForSection.getter()
{
  return sub_1BC5D3290((SEL *)&selRef_hasSectionLocalizedContent, (SEL *)&selRef_sectionLocalizedContent);
}

id sub_1BC5D3290(SEL *a1, SEL *a2)
{
  void *v2;
  id result;
  void *v5;
  uint64_t v6;

  if (!objc_msgSend(v2, *a1))
    return 0;
  result = objc_msgSend(v2, *a2);
  if (result)
  {
    v5 = result;
    v6 = sub_1BC62C680();

    return (id)v6;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC5D3308(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3344(a1, a2, (SEL *)&selRef_sectionCitationsCount, (SEL *)&selRef_sectionCitations);
}

_QWORD *sub_1BC5D331C(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3344(a1, a2, (SEL *)&selRef_sectionAttributionsCount, (SEL *)&selRef_sectionAttributions);
}

_QWORD *sub_1BC5D3330(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D3344(a1, a2, (SEL *)&selRef_sectionValidRegionCodesCount, (SEL *)&selRef_sectionValidRegionCodes);
}

_QWORD *sub_1BC5D3344(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  void **v4;
  void *v6;
  _QWORD *result;
  void *v8;
  _QWORD *v9;

  v6 = *v4;
  if ((uint64_t)objc_msgSend(v6, *a3) < 1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  result = objc_msgSend(v6, *a4);
  if (result)
  {
    v8 = result;
    v9 = sub_1BC5D3DA8(result);

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BC5D33B4(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D33EC(a1, a2, (SEL *)&selRef_hasSectionLocaleIdentifier, (SEL *)&selRef_sectionLocaleIdentifier);
}

id sub_1BC5D33C8()
{
  id *v0;

  return objc_msgSend(*v0, sel_type);
}

id sub_1BC5D33D8(uint64_t a1, uint64_t a2)
{
  return sub_1BC5D33EC(a1, a2, (SEL *)&selRef_hasSectionLocalizedContent, (SEL *)&selRef_sectionLocalizedContent);
}

id sub_1BC5D33EC(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  void **v4;
  void *v6;
  id result;
  void *v8;
  uint64_t v9;

  v6 = *v4;
  if (!objc_msgSend(v6, *a3))
    return 0;
  result = objc_msgSend(v6, *a4);
  if (result)
  {
    v8 = result;
    v9 = sub_1BC62C680();

    return (id)v9;
  }
  __break(1u);
  return result;
}

uint64_t LocalizedEducationContent.firstSection(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = v6 + 32;
    while (1)
    {
      sub_1BC34E674(v8, (uint64_t)&v12);
      v9 = v13;
      v10 = v14;
      __swift_project_boxed_opaque_existential_1Tm(&v12, v13);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10) == a1)
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v12);
      v8 += 40;
      if (!--v7)
        goto LABEL_5;
    }
    sub_1BC34E718(&v12, a4);
  }
  else
  {
LABEL_5:
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC5D3538(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1BC5D3740(a1, a2, a4, a5);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_16;
  v7 = sub_1BC5D3F8C(v6);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
  {
    swift_bridgeObjectRelease();
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((a3 & 1) != 0)
      goto LABEL_10;
LABEL_14:
    v21[0] = v10;
    sub_1BC50D870();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A52C8, (uint64_t (*)(uint64_t))sub_1BC50D870, MEMORY[0x1E0DEAF20]);
    v19 = sub_1BC62C5D8();
    goto LABEL_15;
  }
  v9 = v7 + 32;
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1BC34E674(v9, (uint64_t)v21);
    v11 = v22;
    v12 = v23;
    __swift_project_boxed_opaque_existential_1Tm(v21, v22);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
    v15 = v14;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BC3B5060(0, v10[2] + 1, 1, v10);
    v17 = v10[2];
    v16 = v10[3];
    if (v17 >= v16 >> 1)
      v10 = sub_1BC3B5060((_QWORD *)(v16 > 1), v17 + 1, 1, v10);
    v10[2] = v17 + 1;
    v18 = &v10[2 * v17];
    v18[4] = v13;
    v18[5] = v15;
    v9 += 40;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease_n();
  if ((a3 & 1) == 0)
    goto LABEL_14;
LABEL_10:
  if (!v10[2])
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  v19 = v10[4];
  swift_bridgeObjectRetain();
LABEL_15:
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1BC5D3740(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v40[24];
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v8 = sub_1BC62A820();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BC384E68(0, &qword_1EF431B68, (void (*)(uint64_t))MEMORY[0x1E0CB0C48]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = &v40[-v14 - 8];
  result = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a4 + 8))(a3, a4, v13);
  v17 = result;
  if ((a2 & 1) == 0)
  {
LABEL_4:
    v20 = *(_QWORD *)(v17 + 16);
    if (v20)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1BC62A814();
  sub_1BC62A808();
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  v18 = sub_1BC62A7FC();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) == 1)
  {
    result = sub_1BC384EB4((uint64_t)v15, &qword_1EF431B68, (void (*)(uint64_t))MEMORY[0x1E0CB0C48]);
    goto LABEL_4;
  }
  v35 = sub_1BC62A7F0();
  v37 = v36;
  (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v15, v18);
  v38 = sub_1BC479EB4(v17, v35, v37);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v17 = v38;
  v20 = *(_QWORD *)(v38 + 16);
  if (!v20)
    goto LABEL_17;
LABEL_5:
  v21 = 0;
  v46 = MEMORY[0x1E0DEE9D8];
  v22 = v17 + 32;
  while (v21 < *(_QWORD *)(v17 + 16))
  {
    sub_1BC34E674(v22, (uint64_t)&v43);
    v23 = v44;
    v24 = v45;
    __swift_project_boxed_opaque_existential_1Tm(&v43, v44);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24) == a1)
    {
      sub_1BC34E718(&v43, (uint64_t)v40);
      v25 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC3BDA7C(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v46;
      }
      v27 = *(_QWORD *)(v25 + 16);
      v26 = *(_QWORD *)(v25 + 24);
      if (v27 >= v26 >> 1)
        sub_1BC3BDA7C(v26 > 1, v27 + 1, 1);
      v28 = v41;
      v29 = v42;
      v30 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      v31 = MEMORY[0x1E0C80A78](v30);
      v33 = &v40[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(_BYTE *, __n128))(v34 + 16))(v33, v31);
      sub_1BC3DC6C4(v27, (uint64_t)v33, &v46, v28, v29);
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
    }
    else
    {
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
    }
    ++v21;
    v22 += 40;
    if (v20 == v21)
    {
      swift_bridgeObjectRelease();
      return v46;
    }
  }
  __break(1u);
  return result;
}

uint64_t LocalizedEducationContent.hasContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v2 = sub_1BC5D3740(1, 0, a1, a2);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_1BC5D3F8C(v2), swift_bridgeObjectRelease(), (v4 = *(_QWORD *)(v3 + 16)) != 0))
  {
    v5 = v3 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BC34E674(v5, (uint64_t)v13);
      v6 = v14;
      v7 = v15;
      __swift_project_boxed_opaque_existential_1Tm(v13, v14);
      v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 48))(v6, v7);
      v10 = v9;
      swift_bridgeObjectRelease();
      v11 = (v10 & 0x2000000000000000) != 0 ? HIBYTE(v10) & 0xF : v8 & 0xFFFFFFFFFFFFLL;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      if (v11)
        break;
      v5 += 40;
      if (!--v4)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

id HKCodableHealthRecordsSharableViewModel.hasEducation.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hasLocalizedEducationContent);
}

id HKCodableHealthRecordsSharableViewModel.educationPrimaryContent.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;

  if (!objc_msgSend(v0, sel_hasLocalizedEducationContent))
    return 0;
  result = objc_msgSend(v0, sel_localizedEducationContent);
  if (result)
  {
    v2 = result;
    v3 = sub_1BC479428(1, 1, 0);

    return (id)v3;
  }
  __break(1u);
  return result;
}

id HKCodableHealthRecordsSharableViewModel.educationTitle.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  if (!objc_msgSend(v0, sel_hasLocalizedEducationContent))
    goto LABEL_4;
  result = objc_msgSend(v0, sel_localizedEducationContent);
  if (result)
  {
    v2 = result;
    v3 = sub_1BC479428(2, 1, 1);
    v5 = v4;

    if (v5)
      return (id)v3;
LABEL_4:
    if (qword_1ED6A4888 != -1)
      swift_once();
    v6 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v3 = sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    return (id)v3;
  }
  __break(1u);
  return result;
}

id HKCodableHealthRecordsSharableViewModel.uniqueIdentifier.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(v0, sel_conceptIdentifier);
  if (result)
  {
    v2 = result;
    v3 = sub_1BC62C680();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1BC5D3DA8(void *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[32];
  _OWORD v19[2];
  __int128 v20;
  uint64_t v21;

  v2 = sub_1BC62A568();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58];
  v15 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1;
  sub_1BC62CE30();

  sub_1BC347F0C(&qword_1EF437EB0, v3, MEMORY[0x1E0CAFB80]);
  sub_1BC62CFEC();
  if (v21)
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1BC35E088(&v20, v19);
      sub_1BC375540((uint64_t)v19, (uint64_t)v18);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = v16;
        v9 = v17;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1BC3B5060(0, v7[2] + 1, 1, v7);
        v11 = v7[2];
        v10 = v7[3];
        if (v11 >= v10 >> 1)
          v7 = sub_1BC3B5060((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
        v7[2] = v11 + 1;
        v12 = &v7[2 * v11];
        v12[4] = v8;
        v12[5] = v9;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
      }
      sub_1BC62CFEC();
    }
    while (v21);
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1BC5D3F8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  __int128 v52[2];
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;

  v2 = sub_1BC62A820();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A814();
  v6 = sub_1BC62A7CC();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_19:
    v35 = (void *)objc_opt_self();
    v36 = swift_bridgeObjectRetain();
    sub_1BC3D6C54(v36);
    swift_bridgeObjectRelease();
    v37 = (void *)sub_1BC62C86C();
    swift_release();
    v38 = objc_msgSend(v35, sel_preferredLocalizationsFromArray_, v37);

    v39 = (_QWORD *)sub_1BC62C878();
    if (v39[2])
    {
      v41 = v39[4];
      v40 = v39[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v11[2])
      {
        v42 = sub_1BC558D94(v6, v8);
        if ((v43 & 1) != 0)
        {
          v44 = *(_QWORD *)(v11[7] + 8 * v42);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v44;
        }
      }
      swift_bridgeObjectRelease();
      if (v11[2])
      {
        v45 = sub_1BC558D94(v41, v40);
        if ((v46 & 1) != 0)
        {
          v44 = *(_QWORD *)(v11[7] + 8 * v45);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v44;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v49 = v6;
  v50 = v8;
  v10 = a1 + 32;
  v48 = a1;
  swift_bridgeObjectRetain();
  v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    sub_1BC34E674(v10, (uint64_t)v53);
    v12 = v54;
    v13 = v55;
    __swift_project_boxed_opaque_existential_1Tm(v53, v54);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
    v16 = v15;
    sub_1BC34E674((uint64_t)v53, (uint64_t)v52);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v51 = v11;
    v19 = sub_1BC558D94(v14, v16);
    v20 = v11[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (v11[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BC5A5B28();
    }
    else
    {
      sub_1BC3C4258(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_1BC558D94(v14, v16);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_32;
      v19 = v24;
    }
    v11 = v51;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      v11[(v19 >> 6) + 8] |= 1 << v19;
      v26 = (uint64_t *)(v11[6] + 16 * v19);
      *v26 = v14;
      v26[1] = v16;
      *(_QWORD *)(v11[7] + 8 * v19) = MEMORY[0x1E0DEE9D8];
      v27 = v11[2];
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        goto LABEL_31;
      v11[2] = v29;
      swift_bridgeObjectRetain();
    }
    v30 = v11[7];
    v31 = *(_QWORD **)(v30 + 8 * v19);
    v32 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v30 + 8 * v19) = v31;
    if ((v32 & 1) == 0)
    {
      v31 = sub_1BC3B5D08(0, v31[2] + 1, 1, v31);
      *(_QWORD *)(v30 + 8 * v19) = v31;
    }
    v34 = v31[2];
    v33 = v31[3];
    if (v34 >= v33 >> 1)
    {
      v31 = sub_1BC3B5D08((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
      *(_QWORD *)(v30 + 8 * v19) = v31;
    }
    v31[2] = v34 + 1;
    sub_1BC34E718(v52, (uint64_t)&v31[5 * v34 + 4]);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
    v10 += 40;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      v6 = v49;
      v8 = v50;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

unint64_t sub_1BC5D43BC()
{
  unint64_t result;

  result = qword_1EF42C600;
  if (!qword_1EF42C600)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42C600);
  }
  return result;
}

uint64_t dispatch thunk of LocalizedEducationContent.eduSections.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LocalizedEducationContent.titleForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LocalizedEducationContent.primaryContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of LocalizedEducationContent.abstractContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of LocalizedEducationContent.sideEffectsContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of LocalizedEducationContent.pregnancyDescriptionContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of LocalizedEducationContent.lactationDescriptionContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of LocalizedEducationContent.titleRegionGatedForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of LocalizedEducationContent.primaryRegionGatedContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of LocalizedEducationContent.abstractRegionGatedContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of LocalizedEducationSection.attributionsForSection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LocalizedEducationSection.validRegionCodesForSection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of LocalizedEducationSection.sectionType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1BC5D4488()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v3 = sub_1BC62D718();
  sub_1BC62C764();
  v1 = objc_msgSend(*(id *)(v0 + 16), sel_title);
  sub_1BC62C680();

  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BC5D451C()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AccountSourceItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC5D4568()
{
  type metadata accessor for AccountSourceCell();
  sub_1BC347F0C(&qword_1EF435F80, (uint64_t (*)(uint64_t))type metadata accessor for AccountSourceCell, (uint64_t)&unk_1BC64AE50);
  return sub_1BC62ADA8();
}

uint64_t sub_1BC5D45B4()
{
  return sub_1BC5D4488();
}

void sub_1BC5D45D4()
{
  qword_1EF439070 = 0x4028000000000000;
}

void sub_1BC5D45E4()
{
  qword_1EF439078 = 0x4020000000000000;
}

id sub_1BC5D45F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___logoView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___logoView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___logoView);
  }
  else
  {
    if (qword_1EF4283A8 != -1)
      swift_once();
    v4 = objc_msgSend(objc_allocWithZone((Class)WDBrandLogoView), sel_initWithSize_, *(double *)&qword_1EF42A0E0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC5D46B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___titleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v6 = (void *)sub_1BC62CDDC();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTextAlignment_, 1);
    v7 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_1BC5D481C()
{
  return sub_1BC5D4834(&OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___subtitleLabel);
}

id sub_1BC5D4828()
{
  return sub_1BC5D4834(&OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___detailLabel);
}

id sub_1BC5D4834(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = sub_1BC5D488C();
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

id sub_1BC5D488C()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTextAlignment_, 1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  return v0;
}

id sub_1BC5D4994()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___webLinkButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___webLinkButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___webLinkButton);
  }
  else
  {
    v4 = sub_1BC5D49F4(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC5D49F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v1 = sub_1BC62CF2C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62CF08();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1BC62CF98();
  v9 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - v13;
  sub_1BC62CF8C();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DC3060], v5);
  sub_1BC62CF14();
  if (qword_1ED6A4888 != -1)
    swift_once();
  v15 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62CF74();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DC30D0], v1);
  sub_1BC62CF38();
  sub_1BC34B6A0(0, &qword_1EF42E328);
  v16 = v34;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v34);
  sub_1BC34B6A0(0, &qword_1EF42BC28);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC62CEE4();
  v17 = (void *)sub_1BC62CFA4();
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, v33);
  v18 = objc_msgSend(v17, sel_titleLabel);
  v19 = v9;
  if (v18)
  {
    v20 = v18;
    objc_msgSend(v18, sel_setAdjustsFontForContentSizeCategory_, 1);

  }
  v21 = objc_msgSend(v17, sel_titleLabel);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    objc_msgSend(v22, sel_setFont_, v23);

  }
  v24 = objc_msgSend(v17, sel_titleLabel);
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, sel_setNumberOfLines_, 1);

  }
  v26 = objc_msgSend((id)objc_opt_self(), sel_hk_appKeyColor);
  objc_msgSend(v17, sel_setTintColor_, v26);

  sub_1BC359F44();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v27 + 32) = sub_1BC62C680();
  *(_QWORD *)(v27 + 40) = v28;
  strcpy((char *)(v27 + 48), "VisitWebsite");
  *(_BYTE *)(v27 + 61) = 0;
  *(_WORD *)(v27 + 62) = -5120;
  v29 = v17;
  v30 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v31 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v29, sel_setAccessibilityIdentifier_, v31);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v16);
  return v29;
}

id sub_1BC5D4EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id result;
  void *v14;
  void *v15;
  _BYTE v16[24];

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v16[-v4];
  v6 = sub_1BC62A604();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v10 = MEMORY[0x1BCCF37A4](a2 + 16);
  if (!v10)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    return (id)sub_1BC384EB4((uint64_t)v5, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  v11 = (void *)v10;
  v12 = v10 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_accountURL;
  swift_beginAccess();
  sub_1BC397AF4(v12, (uint64_t)v5, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);

  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return (id)sub_1BC384EB4((uint64_t)v5, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v5, v6);
  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (result)
  {
    v14 = result;
    v15 = (void *)sub_1BC62A598();
    objc_msgSend(v14, sel_openURL_configuration_completionHandler_, v15, 0, 0);

    return (id)(*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BC5D5088()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___stackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___stackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setAlignment_, 3);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setSpacing_, 1.17549435e-38);
    objc_msgSend(v4, sel_setBaselineRelativeArrangement_, 0);
    objc_msgSend(v4, sel_setLayoutMarginsRelativeArrangement_, 1);
    objc_msgSend(v4, sel_setPreservesSuperviewLayoutMargins_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_1BC5D5188(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  id v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  objc_super v35;

  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins];
  v10 = *MEMORY[0x1E0D2F3F0];
  *(_QWORD *)v9 = 0x4034000000000000;
  *((_QWORD *)v9 + 1) = v10;
  *((_QWORD *)v9 + 2) = 0;
  *((_QWORD *)v9 + 3) = v10;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___logoView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___detailLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___webLinkButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___stackView] = 0;
  v11 = &v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_accountURL];
  v12 = sub_1BC62A604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = &v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_item];
  v14 = (objc_class *)type metadata accessor for AccountSourceCell();
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  v35.receiver = v4;
  v35.super_class = v14;
  v15 = objc_msgSendSuper2(&v35, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = (void *)objc_opt_self();
  v17 = (char *)v15;
  v18 = objc_msgSend(v16, sel_clearColor);
  objc_msgSend(v17, sel_setBackgroundColor_, v18);

  v19 = sub_1BC5D5088();
  v20 = sub_1BC5D45F4();
  objc_msgSend(v19, sel_addArrangedSubview_, v20);

  v21 = sub_1BC5D5088();
  v22 = sub_1BC5D46B4();
  objc_msgSend(v21, sel_addArrangedSubview_, v22);

  v23 = sub_1BC5D5088();
  v24 = sub_1BC5D481C();
  objc_msgSend(v23, sel_addArrangedSubview_, v24);

  v25 = sub_1BC5D5088();
  v26 = sub_1BC5D4828();
  objc_msgSend(v25, sel_addArrangedSubview_, v26);

  v27 = sub_1BC5D5088();
  v28 = sub_1BC5D4994();
  objc_msgSend(v27, sel_addArrangedSubview_, v28);

  v29 = sub_1BC5D5088();
  objc_msgSend(v29, sel_setDirectionalLayoutMargins_, *(double *)&v17[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins], *(double *)&v17[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins + 8], *(double *)&v17[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins + 16], *(double *)&v17[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins + 24]);

  v30 = objc_msgSend(v17, sel_contentView);
  v31 = sub_1BC5D5088();
  objc_msgSend(v30, sel_addSubview_, v31);

  v32 = sub_1BC5D5088();
  v33 = objc_msgSend(v17, sel_contentView);
  objc_msgSend(v32, sel_hk_alignConstraintsWithView_, v33);

  sub_1BC5D54D8();
  return v17;
}

void sub_1BC5D54D8()
{
  id v0;
  id v1;
  unint64_t v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  id v19;
  int v20;

  v0 = sub_1BC5D5088();
  v1 = objc_msgSend(v0, sel_constraintsAffectingLayoutForAxis_, 1);

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v2 = sub_1BC62C878();

  if (!(v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v5 = 0;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_8;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v3 = (id)MEMORY[0x1BCCF24CC](0, v2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(id *)(v2 + 32);
LABEL_6:
    v4 = v3;
    swift_bridgeObjectRelease();
    type metadata accessor for UILayoutPriority(0);
    sub_1BC347F0C((unint64_t *)&qword_1EF42AF98, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, MEMORY[0x1E0DC2B88]);
    v5 = v4;
    sub_1BC62BB4C();
    LODWORD(v6) = v20;
    objc_msgSend(v5, sel_setPriority_, v6);

LABEL_9:
    v8 = sub_1BC5D46B4();
    v9 = sub_1BC5D481C();
    v19 = sub_1BC5D4828();
    type metadata accessor for UILayoutPriority(0);
    sub_1BC347F0C((unint64_t *)&qword_1EF42AF98, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, MEMORY[0x1E0DC2B88]);
    v10 = v8;
    sub_1BC62BB40();
    LODWORD(v11) = v20;
    objc_msgSend(v10, sel_setContentCompressionResistancePriority_forAxis_, 1, v11);
    sub_1BC62BB40();
    LODWORD(v12) = v20;
    objc_msgSend(v10, sel_setContentHuggingPriority_forAxis_, 1, v12);

    v13 = v9;
    sub_1BC62BB40();
    LODWORD(v14) = v20;
    objc_msgSend(v13, sel_setContentCompressionResistancePriority_forAxis_, 1, v14);
    sub_1BC62BB40();
    LODWORD(v15) = v20;
    objc_msgSend(v13, sel_setContentHuggingPriority_forAxis_, 1, v15);

    v16 = v19;
    sub_1BC62BB40();
    LODWORD(v17) = v20;
    objc_msgSend(v16, sel_setContentCompressionResistancePriority_forAxis_, 1, v17);
    sub_1BC62BB40();
    LODWORD(v18) = v20;
    objc_msgSend(v16, sel_setContentHuggingPriority_forAxis_, 1, v18);

    return;
  }
  __break(1u);
}

uint64_t sub_1BC5D5830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  id v36;
  id v37;
  double v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  double v54;
  id v55;
  id v56;
  double v57;
  id v58;
  _QWORD v59[2];
  _BYTE v60[24];
  uint64_t v61;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v59 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v59 - v8;
  v10 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_item;
  swift_beginAccess();
  sub_1BC397AF4(v10, (uint64_t)v60, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  if (!v61)
    return sub_1BC384EB4((uint64_t)v60, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  sub_1BC37AE0C();
  type metadata accessor for AccountSourceItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v12 = v59[1];
    v13 = sub_1BC5D45F4();
    objc_msgSend(v13, sel_fetchBrandable_dataProvider_, *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24));

    v14 = sub_1BC5D46B4();
    v15 = objc_msgSend(*(id *)(v12 + 16), sel_title);
    if (!v15)
    {
      sub_1BC62C680();
      v15 = (id)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v14, sel_setText_, v15);

    v16 = sub_1BC5D481C();
    v17 = *(void **)(v12 + 16);
    v18 = objc_msgSend(v17, sel_subtitle);
    if (!v18)
    {
      v19 = objc_msgSend(v17, sel_provenance);
      v20 = objc_msgSend(v19, sel_signedClinicalDataIssuer);

      if (!v20)
      {
LABEL_9:
        objc_msgSend(v16, sel_setText_, v20);

        v21 = sub_1BC5D481C();
        v22 = objc_msgSend(v21, sel_text);

        if (!v22)
        {
          v22 = sub_1BC5D481C();
          objc_msgSend(v22, sel_removeFromSuperview);
        }

        v23 = sub_1BC5D4828();
        v24 = objc_msgSend(*(id *)(v12 + 16), sel_displayableSharingSinceTitle);
        objc_msgSend(v23, sel_setText_, v24);

        v25 = sub_1BC5D4828();
        v26 = objc_msgSend(v25, sel_text);

        if (!v26)
        {
          v26 = sub_1BC5D4828();
          objc_msgSend(v26, sel_removeFromSuperview);
        }

        v27 = objc_msgSend(*(id *)(v12 + 16), sel_gateway);
        if (v27)
        {
          v28 = v27;
          v29 = objc_msgSend(v27, sel_informationURL);

          if (v29)
          {
            sub_1BC62A5BC();

            v30 = sub_1BC62A604();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v6, 0, 1, v30);
          }
          else
          {
            v32 = sub_1BC62A604();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v6, 1, 1, v32);
          }
          sub_1BC397AA0((uint64_t)v6, (uint64_t)v9);
        }
        else
        {
          v31 = sub_1BC62A604();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 1, 1, v31);
        }
        v33 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_accountURL;
        swift_beginAccess();
        sub_1BC5D66F4((uint64_t)v9, v33);
        swift_endAccess();
        v34 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        sub_1BC397AF4(v33, (uint64_t)v3, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v35 = sub_1BC62A604();
        LODWORD(v33) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v3, 1, v35);
        sub_1BC384EB4((uint64_t)v3, (unint64_t *)&qword_1EF42B258, v34);
        if ((_DWORD)v33 == 1)
        {
          v36 = sub_1BC5D4994();
          objc_msgSend(v36, sel_removeFromSuperview);

        }
        v37 = sub_1BC5D5088();
        if (qword_1EF4287E8 != -1)
          swift_once();
        v38 = *(double *)&qword_1EF439070;
        v39 = sub_1BC5D45F4();
        objc_msgSend(v37, sel_setCustomSpacing_afterView_, v39, v38);

        v40 = sub_1BC5D481C();
        v41 = objc_msgSend(v40, sel_text);

        if (v41
          || (v42 = sub_1BC5D4828(),
              v41 = objc_msgSend(v42, sel_text),
              v42,
              v41))
        {

          v43 = sub_1BC5D5088();
          if (qword_1EF4287F0 != -1)
            swift_once();
          v44 = qword_1EF439078;
        }
        else
        {
          v43 = sub_1BC5D5088();
          v44 = qword_1EF439070;
        }
        v45 = sub_1BC5D46B4();
        objc_msgSend(v43, sel_setCustomSpacing_afterView_, v45, *(double *)&v44);

        v46 = sub_1BC5D481C();
        v47 = objc_msgSend(v46, sel_text);

        if (v47
          && (v47,
              v48 = sub_1BC5D4828(),
              v49 = objc_msgSend(v48, sel_text),
              v48,
              v49))
        {

          v50 = sub_1BC5D5088();
          if (qword_1EF4287F0 != -1)
            swift_once();
          v51 = qword_1EF439078;
        }
        else
        {
          v50 = sub_1BC5D5088();
          v51 = qword_1EF439070;
        }
        v52 = sub_1BC5D481C();
        objc_msgSend(v50, sel_setCustomSpacing_afterView_, v52, *(double *)&v51);

        v53 = sub_1BC5D5088();
        v54 = *(double *)&qword_1EF439070;
        v55 = sub_1BC5D4828();
        objc_msgSend(v53, sel_setCustomSpacing_afterView_, v55, v54);

        v56 = sub_1BC5D5088();
        v57 = *(double *)&qword_1EF439070 + *(double *)&qword_1EF439070;
        v58 = sub_1BC5D4994();
        objc_msgSend(v56, sel_setCustomSpacing_afterView_, v58, v57);

        sub_1BC5D5F30();
        return swift_release();
      }
      v18 = objc_msgSend(v20, sel_identifier);

    }
    sub_1BC62C680();

    v20 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  return result;
}

void sub_1BC5D5F30()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;

  v0 = sub_1BC5D45F4();
  sub_1BC359F44();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v1 + 32) = sub_1BC62C680();
  *(_QWORD *)(v1 + 40) = v2;
  strcpy((char *)(v1 + 48), "ProviderLogo");
  *(_BYTE *)(v1 + 61) = 0;
  *(_WORD *)(v1 + 62) = -5120;
  *(_QWORD *)(v1 + 64) = 0x6567616D69;
  *(_QWORD *)(v1 + 72) = 0xE500000000000000;
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v0, sel_setAccessibilityIdentifier_, v4);
  v5 = sub_1BC5D46B4();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v6 + 32) = sub_1BC62C680();
  *(_QWORD *)(v6 + 40) = v7;
  strcpy((char *)(v6 + 48), "ProviderName");
  *(_BYTE *)(v6 + 61) = 0;
  *(_WORD *)(v6 + 62) = -5120;
  v8 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v9 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v9);
  v10 = sub_1BC5D481C();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v11 + 32) = sub_1BC62C680();
  *(_QWORD *)(v11 + 40) = v12;
  strcpy((char *)(v11 + 48), "PatientPortal");
  *(_WORD *)(v11 + 62) = -4864;
  v13 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v14 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v10, sel_setAccessibilityIdentifier_, v14);
  v15 = sub_1BC5D4828();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v16 + 32) = sub_1BC62C680();
  *(_QWORD *)(v16 + 40) = v17;
  *(_QWORD *)(v16 + 48) = 0xD000000000000010;
  *(_QWORD *)(v16 + 56) = 0x80000001BC666750;
  v18 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v19 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v15, sel_setAccessibilityIdentifier_, v19);
}

void sub_1BC5D6208()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  objc_super v15;

  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for AccountSourceCell();
  objc_msgSendSuper2(&v15, sel_prepareForReuse);
  v1 = sub_1BC5D45F4();
  objc_msgSend(v1, sel_setImage_, 0);

  v2 = sub_1BC5D46B4();
  objc_msgSend(v2, sel_setText_, 0);

  v3 = sub_1BC5D481C();
  objc_msgSend(v3, sel_setText_, 0);

  v4 = sub_1BC5D4828();
  objc_msgSend(v4, sel_setText_, 0);

  v5 = sub_1BC5D5088();
  v6 = sub_1BC5D45F4();
  objc_msgSend(v5, sel_setCustomSpacing_afterView_, v6, 0.0);

  v7 = sub_1BC5D5088();
  v8 = sub_1BC5D46B4();
  objc_msgSend(v7, sel_setCustomSpacing_afterView_, v8, 0.0);

  v9 = sub_1BC5D5088();
  v10 = sub_1BC5D481C();
  objc_msgSend(v9, sel_setCustomSpacing_afterView_, v10, 0.0);

  v11 = sub_1BC5D5088();
  v12 = sub_1BC5D4828();
  objc_msgSend(v11, sel_setCustomSpacing_afterView_, v12, 0.0);

  v13 = sub_1BC5D5088();
  v14 = sub_1BC5D4994();
  objc_msgSend(v13, sel_setCustomSpacing_afterView_, v14, 0.0);

}

id sub_1BC5D63C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountSourceCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC5D64B8()
{
  return type metadata accessor for AccountSourceCell();
}

uint64_t type metadata accessor for AccountSourceCell()
{
  uint64_t result;

  result = qword_1EF439198;
  if (!qword_1EF439198)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC5D64FC()
{
  unint64_t v0;

  sub_1BC384E68(319, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BC5D65A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_item;
  swift_beginAccess();
  return sub_1BC397AF4(v3, a1, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC5D6600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC5D5830();
  return sub_1BC384EB4(a1, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t (*sub_1BC5D667C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5D66C4;
}

uint64_t sub_1BC5D66C4(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC5D5830();
  return result;
}

uint64_t sub_1BC5D66F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC5D6748()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

id sub_1BC5D676C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5D4EA8(a1, v1);
}

void sub_1BC5D6774()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;

  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins];
  v2 = *MEMORY[0x1E0D2F3F0];
  *(_QWORD *)v1 = 0x4034000000000000;
  *((_QWORD *)v1 + 1) = v2;
  *((_QWORD *)v1 + 2) = 0;
  *((_QWORD *)v1 + 3) = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___logoView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___detailLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___webLinkButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___stackView] = 0;
  v3 = &v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_accountURL];
  v4 = sub_1BC62A604();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = &v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_item];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;

  sub_1BC62D394();
  __break(1u);
}

uint64_t HKMedicalUserDomainConcept.uniqueIdentifier.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_UUID, v3);
  sub_1BC62A79C();

  v7 = sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7;
}

uint64_t HKConcept.displayName.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_localizedPreferredName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BC62C680();

  return v3;
}

uint64_t HKConcept.uniqueIdentifier.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_identifier);
  v2 = objc_msgSend(v1, sel_numberRepresentation);

  v3 = objc_msgSend(v2, sel_description);
  v4 = sub_1BC62C680();

  return v4;
}

uint64_t sub_1BC5D6A3C()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_localizedPreferredName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BC62C680();

  return v3;
}

id sub_1BC5D6AA0()
{
  id *v0;

  return objc_msgSend(*v0, sel_chartsBloodPressure);
}

id sub_1BC5D6AC0()
{
  id *v0;

  return objc_msgSend(*v0, sel_hidesOutOfRangeFilter);
}

uint64_t sub_1BC5D6AE0()
{
  id *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(*v0, sel_identifier);
  v2 = objc_msgSend(v1, sel_numberRepresentation);

  v3 = objc_msgSend(v2, sel_description);
  v4 = sub_1BC62C680();

  return v4;
}

uint64_t HKMedicalUserDomainConcept.displayName.getter()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t countAndFlagsBits;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_preferredLocalizations);

  v2 = sub_1BC62C878();
  countAndFlagsBits = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v2)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t HKMedicalUserDomainConcept.chartsBloodPressure.getter()
{
  return 0;
}

uint64_t HKMedicalUserDomainConcept.hidesOutOfRangeFilter.getter()
{
  return 0;
}

uint64_t sub_1BC5D6C18()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t countAndFlagsBits;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_preferredLocalizations);

  v2 = sub_1BC62C878();
  countAndFlagsBits = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v2)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t HKMedicalRecord.chartableCodedQuantitySet()()
{
  return 0;
}

id sub_1BC5D6CBC()
{
  return 0;
}

void HKMedicalRecord.conceptForChart.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_primaryConcept);
  v5 = objc_msgSend(v4, sel_chartedWithConcept);

  if (!v5)
    v5 = objc_msgSend(v2, sel_primaryConcept);
  v6 = objc_msgSend(v5, sel_identifier);
  v7 = objc_msgSend(v6, sel_numberRepresentation);

  v8 = objc_msgSend(v7, sel_description);
  v9 = sub_1BC62C680();
  v11 = v10;

  v12 = objc_msgSend(v5, sel_localizedPreferredName);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1BC62C680();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0xE000000000000000;
  }
  v17 = objc_msgSend(v5, sel_chartsBloodPressure);
  v18 = objc_msgSend(v5, sel_hidesOutOfRangeFilter);

  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v11;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = v14;
  *(_QWORD *)(a1 + 32) = v16;
  *(_BYTE *)(a1 + 40) = v17;
  *(_BYTE *)(a1 + 41) = v18;
}

id sub_1BC5D6E34()
{
  id *v0;

  return objc_msgSend(*v0, sel_state);
}

void sub_1BC5D6E44(uint64_t a1@<X8>)
{
  HKMedicalRecord.conceptForChart.getter(a1);
}

id sub_1BC5D6E64()
{
  id *v0;

  return objc_msgSend(*v0, sel_recordCategoryType);
}

id sub_1BC5D6E74()
{
  id *v0;

  return objc_msgSend(*v0, sel_chartableCodedQuantitySet);
}

id HKDiagnosticTestResult.chartableCodedQuantitySet()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void (*v28)(char *, uint64_t);
  void *v29;
  id v30;
  void *v31;
  void *v32;
  char *v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  id v46;
  unint64_t v47;
  uint64_t v48[2];

  v1 = v0;
  v48[1] = *MEMORY[0x1E0C80C00];
  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62A760();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11 = MEMORY[0x1E0C80A78](v10).n128_u64[0];
  v13 = (char *)&v41 - v12;
  v14 = objc_msgSend(v1, sel_value, v11);
  v15 = v14;
  if (v14)
  {
    v16 = objc_msgSend(v14, sel_inspectableValue);

    if (!v16)
      return 0;
    if ((objc_msgSend(v1, sel_isDateLess) & 1) != 0)
    {

      return 0;
    }
    v43 = v2;
    v44 = v5;
    v42 = v3;
    v17 = objc_msgSend(v1, sel_diagnosticTestCodingCollection);
    v18 = objc_msgSend(v17, sel_codings);

    sub_1BC34B6A0(0, &qword_1EF429BC0);
    sub_1BC62C878();

    v19 = objc_msgSend(v1, sel_referenceRanges);
    if (v19)
    {
      v20 = v19;
      sub_1BC34B6A0(0, &qword_1EF429BD0);
      v21 = sub_1BC62C878();

    }
    else
    {
      v21 = 0;
    }
    v22 = v16;
    v23 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    if (v21)
    {
      sub_1BC34B6A0(0, &qword_1EF429BD0);
      v24 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = 0;
    }
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6498]), sel_initWithCodings_value_referenceRanges_, v23, v22, v24);

    v26 = objc_msgSend(v1, sel_sortDate);
    v27 = objc_msgSend(v26, sel_date);

    sub_1BC62A724();
    Date.medicalDateAdjustedToCurrentCalendar()((uint64_t)v13);
    v28 = *(void (**)(char *, uint64_t))(v7 + 8);
    v28(v9, v6);
    v29 = (void *)sub_1BC62A700();
    v46 = 0;
    v15 = objc_msgSend(v25, sel_chartableCodedQuantitySetWithDate_error_, v29, &v46);

    v30 = v46;
    if (!v15)
    {
      v31 = v30;
      v32 = (void *)sub_1BC62A55C();

      swift_willThrow();
      v28(v13, v6);
      v33 = v44;
      sub_1BC62BB04();
      v34 = v32;
      v35 = v32;
      v36 = sub_1BC62BB28();
      v37 = sub_1BC62CAC4();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        v39 = swift_slowAlloc();
        *(_DWORD *)v38 = 136446210;
        v48[0] = v39;
        v41 = v38 + 4;
        v46 = 0;
        v47 = 0xE000000000000000;
        v45 = v32;
        sub_1BC35E44C();
        sub_1BC62D2D4();
        v46 = (id)sub_1BC4991F0((uint64_t)v46, v47, v48);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC30A000, v36, v37, "%{public}s", v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v39, -1, -1);
        MEMORY[0x1BCCF36A8](v38, -1, -1);

        (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v43);
      }
      return 0;
    }
    v28(v13, v6);

  }
  return v15;
}

id sub_1BC5D73E0(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = HKDiagnosticTestResult.chartableCodedQuantitySet()();

  return v2;
}

uint64_t dispatch thunk of MedicalRecordChartData.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicalRecordChartData.dateFormat.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MedicalRecordChartData.hasTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MedicalRecordChartData.partOfOutOfRangeSeries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t AttachmentSearchItem.reuseIdentifier.getter()
{
  uint64_t v0;

  type metadata accessor for AttachmentSearchCell();
  sub_1BC379B20(&qword_1EF4391C8, v0, (uint64_t (*)(uint64_t))type metadata accessor for AttachmentSearchCell, (uint64_t)&protocol conformance descriptor for AttachmentSearchCell);
  return sub_1BC62ADA8();
}

uint64_t type metadata accessor for AttachmentSearchCell()
{
  return objc_opt_self();
}

uint64_t AttachmentSearchItem.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1BC5D74C4()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  uint64_t inited;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void **v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v25;
  id v26;
  uint64_t v27;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_previewString + 8);
  if (v1)
  {
    if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_previewStringMatchRanges)
                   + 16))
    {
      v27 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_previewStringMatchRanges);
      v2 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
      swift_bridgeObjectRetain();
      v3 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v1 = objc_msgSend(v2, sel_initWithString_, v3);

      sub_1BC357158(0, (unint64_t *)&qword_1EF4383B0, (uint64_t (*)(uint64_t))sub_1BC34B5A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BC639590;
      v5 = (void *)*MEMORY[0x1E0DC1138];
      *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
      v6 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
      v25 = v5;
      v7 = sub_1BC62CDDC();
      *(_QWORD *)(inited + 64) = v6;
      *(_QWORD *)(inited + 40) = v7;
      sub_1BC35B6B4(inited);
      type metadata accessor for Key(0);
      sub_1BC379B20((unint64_t *)&qword_1EF4383C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC639360);
      v8 = (void *)sub_1BC62C53C();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_addAttributes_range_, v8, 0, objc_msgSend(v1, sel_length));

      v9 = (void *)sub_1BC62CDDC();
      v10 = swift_initStackObject();
      v11 = (void **)MEMORY[0x1E0DC1140];
      *(_OWORD *)(v10 + 16) = xmmword_1BC6395A0;
      v12 = *v11;
      *(_QWORD *)(v10 + 32) = *v11;
      v13 = (void *)objc_opt_self();
      v14 = v12;
      v15 = objc_msgSend(v13, sel_labelColor);
      v16 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
      *(_QWORD *)(v10 + 40) = v15;
      *(_QWORD *)(v10 + 64) = v16;
      *(_QWORD *)(v10 + 72) = v25;
      *(_QWORD *)(v10 + 104) = v6;
      *(_QWORD *)(v10 + 80) = v9;
      v17 = v25;
      v18 = v9;
      sub_1BC35B6B4(v10);
      v19 = *(_QWORD *)(v27 + 16);
      if (v19)
      {
        v26 = v18;
        swift_bridgeObjectRetain();
        v20 = (uint64_t *)(v27 + 40);
        do
        {
          v21 = *(v20 - 1);
          v22 = *v20;
          v23 = (void *)sub_1BC62C53C();
          objc_msgSend(v1, sel_setAttributes_range_, v23, v21, v22);

          v20 += 2;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        v18 = v26;
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t AttachmentSearchItem.__allocating_init(name:previewString:previewStringMatchRanges:record:attachmentUUID:profile:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;

  v16 = swift_allocObject();
  AttachmentSearchItem.init(name:previewString:previewStringMatchRanges:record:attachmentUUID:profile:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

char *AttachmentSearchItem.init(name:previewString:previewStringMatchRanges:record:attachmentUUID:profile:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  id v32;
  id v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v9 = v8;
  v48 = a7;
  v49 = a8;
  v40 = a2;
  v41 = a6;
  v46 = a4;
  v47 = a5;
  v45 = a3;
  v39 = a1;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  v13 = sub_1BC62A760();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v42 = (char *)&v39 - v18;
  v19 = sub_1BC62A7B4();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A7A8();
  v23 = sub_1BC62A778();
  v25 = v24;
  v43 = v20;
  v44 = v19;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  *((_QWORD *)v9 + 2) = v23;
  *((_QWORD *)v9 + 3) = v25;
  v26 = v40;
  v27 = v41;
  *((_QWORD *)v9 + 4) = v39;
  *((_QWORD *)v9 + 5) = v26;
  v28 = objc_msgSend(v27, sel_meaningfulDate);
  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_5;
  }
  v29 = v28;
  sub_1BC62A724();

  v30 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v30(v12, v16, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_5:
    v32 = objc_msgSend(v27, sel_sortDate, v39, v40, v41);
    v33 = objc_msgSend(v32, sel_date);

    v31 = v42;
    sub_1BC62A724();

    sub_1BC3801D0((uint64_t)v12, (uint64_t)&qword_1ED6A4EA0, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BC357158);
    v30 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    goto LABEL_6;
  }
  v31 = v42;
  v30(v42, v12, v13);
LABEL_6:
  v30(&v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_date], v31, v13);
  HKMedicalRecord.categoryKind.getter(&v50);
  v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_categoryKind] = v50;
  v34 = &v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_previewString];
  v35 = v44;
  v36 = v46;
  *(_QWORD *)v34 = v45;
  *((_QWORD *)v34 + 1) = v36;
  v37 = v48;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_previewStringMatchRanges] = v47;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_record] = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(&v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_attachmentUUID], v37, v35);
  *(_QWORD *)&v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_profile] = v49;
  return v9;
}

uint64_t AttachmentSearchItem.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_date;
  v2 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v3 = v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_attachmentUUID;
  v4 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return v0;
}

uint64_t AttachmentSearchItem.__deallocating_deinit()
{
  AttachmentSearchItem.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5D7CA0()
{
  uint64_t v0;

  type metadata accessor for AttachmentSearchCell();
  sub_1BC379B20(&qword_1EF4391C8, v0, (uint64_t (*)(uint64_t))type metadata accessor for AttachmentSearchCell, (uint64_t)&protocol conformance descriptor for AttachmentSearchCell);
  return sub_1BC62ADA8();
}

id sub_1BC5D7CE8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC5D7D68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    v5 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v4, sel_setTextColor_, v5);

    objc_msgSend(v4, sel_setLineBreakMode_, 4);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC5D7E50()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleLabelBottomConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleLabelBottomConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleLabelBottomConstraint];
  }
  else
  {
    v4 = objc_msgSend(v0, sel_contentView);
    v5 = objc_msgSend(v4, sel_safeAreaLayoutGuide);

    v6 = objc_msgSend(v5, sel_bottomAnchor);
    v7 = sub_1BC5D7CE8();
    v8 = objc_msgSend(v7, sel_bottomAnchor);

    if (qword_1EF428800 != -1)
      swift_once();
    v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, *(double *)&qword_1EF4391B0);

    v10 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

uint64_t sub_1BC5D7F80()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabelConstraints;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabelConstraints])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabelConstraints];
  }
  else
  {
    v3 = v0;
    sub_1BC34D844();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BC63A3D0;
    v5 = sub_1BC5D7D68();
    v6 = objc_msgSend(v5, sel_topAnchor);

    v7 = sub_1BC5D7CE8();
    v8 = objc_msgSend(v7, sel_bottomAnchor);

    if (qword_1EF4287F8 != -1)
      swift_once();
    v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, *(double *)&qword_1EF4391A8);

    *(_QWORD *)(v4 + 32) = v9;
    v10 = sub_1BC5D7D68();
    v11 = objc_msgSend(v10, sel_leadingAnchor);

    v12 = objc_msgSend(v3, sel_contentView);
    v13 = objc_msgSend(v12, sel_safeAreaLayoutGuide);

    v14 = objc_msgSend(v13, sel_leadingAnchor);
    if (qword_1EF428808 != -1)
      swift_once();
    v15 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v14, *(double *)&qword_1EF4391B8);

    *(_QWORD *)(v4 + 40) = v15;
    v16 = objc_msgSend(v3, sel_contentView);
    v17 = objc_msgSend(v16, sel_safeAreaLayoutGuide);

    v18 = objc_msgSend(v17, sel_trailingAnchor);
    v19 = sub_1BC5D7D68();
    v20 = objc_msgSend(v19, sel_trailingAnchor);

    v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, *(double *)&qword_1EF4391B8);
    *(_QWORD *)(v4 + 48) = v21;
    v22 = objc_msgSend(v3, sel_contentView);
    v23 = objc_msgSend(v22, sel_bottomAnchor);

    v24 = sub_1BC5D7D68();
    v25 = objc_msgSend(v24, sel_bottomAnchor);

    if (qword_1EF428810 != -1)
      swift_once();
    v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, *(double *)&qword_1EF4391C0);

    *(_QWORD *)(v4 + 56) = v26;
    sub_1BC62C890();
    v2 = v4;
    *(_QWORD *)&v3[v1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AttachmentSearchCell.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC5D834C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[40];

  sub_1BC37ADB0(a1, (uint64_t)v6);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  v4 = MEMORY[0x1E0D2A060];
  sub_1BC3AA078((uint64_t)v6, v3, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
  swift_endAccess();
  sub_1BC5D84B0();
  return sub_1BC3801D0((uint64_t)v6, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, v4, (uint64_t (*)(_QWORD))sub_1BC3A9C44);
}

uint64_t AttachmentSearchCell.item.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  v4 = MEMORY[0x1E0D2A060];
  sub_1BC3AA078(a1, v3, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
  swift_endAccess();
  sub_1BC5D84B0();
  return sub_1BC3801D0(a1, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, v4, (uint64_t (*)(_QWORD))sub_1BC3A9C44);
}

uint64_t sub_1BC5D84B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  ValueMetadata *v56;
  _UNKNOWN **v57;

  v1 = sub_1BC62A670();
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC62A688();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62A694();
  v48 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v44 - v14;
  v16 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = v0;
  v19 = v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v19, (uint64_t)v55);
  if (!v56)
    return sub_1BC3801D0((uint64_t)v55, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for AttachmentSearchItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v21 = v18;
    v22 = v54;
    *v21 = *(_BYTE *)(v54 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_categoryKind);
    v23 = (uint64_t)v21;
    swift_storeEnumTagMultiPayload();
    v24 = sub_1BC5D7CE8();
    v25 = *(_QWORD *)(v22 + 40);
    v45 = *(_QWORD *)(v22 + 32);
    v46 = v24;
    v47 = v22 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_date;
    v26 = swift_bridgeObjectRetain();
    MEMORY[0x1BCCEF4F0](v26);
    sub_1BC62A67C();
    sub_1BC62A658();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v6, v50);
    v27 = *(void (**)(char *, uint64_t))(v48 + 8);
    v27(v9, v7);
    sub_1BC62A664();
    sub_1BC62A64C();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v3, v52);
    v27(v12, v7);
    sub_1BC379B20(qword_1EF4392F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0568], MEMORY[0x1E0CB0560]);
    sub_1BC62A748();
    v27(v15, v7);
    v28 = v55[0];
    v29 = v55[1];
    BrowseCategory.systemImageName.getter();
    v31 = v30;
    if (v30)
    {
      v32 = v25;
      v33 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v34 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v33);

      if (v34)
      {
        v31 = objc_msgSend(v34, sel_imageWithRenderingMode_, 1);

      }
      else
      {
        v31 = 0;
      }
      v35 = v46;
      v25 = v32;
    }
    else
    {
      v35 = v46;
    }
    v36 = v45;
    v37 = BrowseCategory.tintColorForTemplateImage.getter();
    v56 = &type metadata for AttachmentSearchFeedItemViewData;
    v57 = &off_1E74E6FF0;
    v38 = (_QWORD *)swift_allocObject();
    v55[0] = v38;
    v38[2] = v36;
    v38[3] = v25;
    v38[4] = v28;
    v38[5] = v29;
    v38[6] = v31;
    v38[7] = v37;
    v39 = (uint64_t)v35 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
    swift_beginAccess();
    sub_1BC3AA078((uint64_t)v55, v39, (unint64_t *)&qword_1EF42AF38, &qword_1EF42AF40);
    swift_endAccess();
    sub_1BC38BF54();
    sub_1BC3801D0((uint64_t)v55, (uint64_t)&qword_1EF42AF38, (uint64_t)&qword_1EF42AF40, (uint64_t)&protocol descriptor for ConceptTitleViewContentProviding, (uint64_t (*)(_QWORD))sub_1BC3A9C44);

    v40 = sub_1BC5D74C4();
    v41 = v40;
    if (v40)

    sub_1BC5D8994(v41 != 0);
    v42 = sub_1BC5D7D68();
    v43 = sub_1BC5D74C4();
    objc_msgSend(v42, sel_setAttributedText_, v43);
    swift_release();

    return sub_1BC348D78(v23, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  }
  return result;
}

id sub_1BC5D8994(char a1)
{
  char *v1;
  char *v2;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v2 = v1;
  v4 = (void *)objc_opt_self();
  v5 = OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_customConstraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_deactivateConstraints_, v6);

  if ((a1 & 1) != 0)
  {
    v7 = sub_1BC5D7F80();
  }
  else
  {
    sub_1BC34D844();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BC6396B0;
    *(_QWORD *)(v8 + 32) = sub_1BC5D7E50();
    sub_1BC62C890();
    v7 = v8;
  }
  *(_QWORD *)&v2[v5] = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v9);

  return objc_msgSend(v2, sel_setNeedsLayout);
}

uint64_t (*AttachmentSearchCell.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5D8B2C;
}

uint64_t sub_1BC5D8B2C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC5D84B0();
  return result;
}

id AttachmentSearchCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id AttachmentSearchCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  objc_super v40;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_customConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleLabelBottomConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabelConstraints] = 0;
  v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v40.receiver = v4;
  v40.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v40, sel_initWithFrame_, a1, a2, a3, a4);
  v12 = objc_msgSend(v11, sel_contentView);
  v13 = sub_1BC5D7CE8();
  objc_msgSend(v12, sel_addSubview_, v13);

  v14 = objc_msgSend(v11, sel_contentView);
  v15 = sub_1BC5D7D68();
  objc_msgSend(v14, sel_addSubview_, v15);

  v16 = (void *)objc_opt_self();
  v17 = v11;
  v18 = objc_msgSend(v16, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v17, sel_setBackgroundColor_, v18);

  v19 = v17;
  sub_1BC62A988();
  v20 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC62CDF4();

  v21 = (void *)objc_opt_self();
  sub_1BC34D844();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BC639580;
  v23 = sub_1BC5D7CE8();
  v24 = objc_msgSend(v23, sel_leadingAnchor);

  v25 = objc_msgSend(v19, sel_contentView);
  v26 = objc_msgSend(v25, sel_leadingAnchor);

  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  *(_QWORD *)(v22 + 32) = v27;
  v28 = sub_1BC5D7CE8();
  v29 = objc_msgSend(v28, sel_topAnchor);

  v30 = objc_msgSend(v19, sel_contentView);
  v31 = objc_msgSend(v30, sel_topAnchor);

  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v31);
  *(_QWORD *)(v22 + 40) = v32;
  v33 = sub_1BC5D7CE8();
  v34 = objc_msgSend(v33, sel_trailingAnchor);

  v35 = objc_msgSend(v19, sel_contentView);
  v36 = objc_msgSend(v35, sel_trailingAnchor);

  v37 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v36);
  *(_QWORD *)(v22 + 48) = v37;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v38 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_activateConstraints_, v38);

  sub_1BC5D8994(0);
  return v19;
}

id AttachmentSearchCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC5D90D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC5D9120(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  v4 = MEMORY[0x1E0D2A060];
  sub_1BC3AA078(a1, v3, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
  swift_endAccess();
  sub_1BC5D84B0();
  return sub_1BC3801D0(a1, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, v4, (uint64_t (*)(_QWORD))sub_1BC3A9C44);
}

uint64_t (*sub_1BC5D91CC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5D8B2C;
}

uint64_t sub_1BC5D9214()
{
  return sub_1BC62ADA8();
}

void sub_1BC5D921C()
{
  qword_1EF4391A8 = 0x4028000000000000;
}

void sub_1BC5D922C()
{
  qword_1EF4391B0 = 0x402A000000000000;
}

void sub_1BC5D923C()
{
  qword_1EF4391B8 = 0x4030000000000000;
}

void sub_1BC5D924C()
{
  qword_1EF4391C0 = 0x4026000000000000;
}

Swift::Void __swiftcall AttachmentSearchCell.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  sub_1BC5D9288(in);
}

void sub_1BC5D9264(uint64_t a1, void *a2)
{
  sub_1BC5D9288(a2);
}

void sub_1BC5D9288(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  _QWORD v21[2];
  _BYTE v22[24];
  uint64_t v23;

  v3 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - v7;
  v9 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v9, (uint64_t)v22);
  if (v23)
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    type metadata accessor for AttachmentSearchItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v10 = v21[1];
      if (qword_1ED6A31B0 != -1)
        swift_once();
      v11 = *(void **)(v10 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_record);
      v12 = *(void **)(v10 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_profile);
      v13 = v10 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_attachmentUUID;
      v14 = sub_1BC62A7B4();
      v15 = *(_QWORD *)(v14 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
      sub_1BC5349AC((uint64_t)v8, (uint64_t)v5);
      v16 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
      v17 = v11;
      v18 = v12;
      v19 = sub_1BC5BFBB8(v17, v18, (uint64_t)v5);

      v20 = objc_msgSend(v19, sel_navigationItem);
      objc_msgSend(v20, sel_setLargeTitleDisplayMode_, 2);

      sub_1BC348D78((uint64_t)v8, type metadata accessor for PresentationContext);
      objc_msgSend(a1, sel_showViewController_sender_, v19, 0);
      swift_release();

    }
  }
  else
  {
    sub_1BC3801D0((uint64_t)v22, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
  }
}

uint64_t sub_1BC5D94F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t sub_1BC5D954C()
{
  return type metadata accessor for AttachmentSearchItem();
}

uint64_t type metadata accessor for AttachmentSearchItem()
{
  uint64_t result;

  result = qword_1EF439228;
  if (!qword_1EF439228)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC5D9590()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC62A760();
  if (v1 <= 0x3F)
  {
    result = sub_1BC62A7B4();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for AttachmentSearchItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AttachmentSearchItem.__allocating_init(name:previewString:previewStringMatchRanges:record:attachmentUUID:profile:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

void sub_1BC5D9664()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_customConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleLabelBottomConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabelConstraints] = 0;
  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;

  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC5D971C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void destroy for AttachmentSearchFeedItemViewData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for AttachmentSearchFeedItemViewData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  v6 = (void *)a2[5];
  a1[4] = v5;
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v5;
  v8 = v6;
  return a1;
}

_QWORD *assignWithCopy for AttachmentSearchFeedItemViewData(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  v7 = (void *)a1[5];
  v8 = (void *)a2[5];
  a1[5] = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for AttachmentSearchFeedItemViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for AttachmentSearchFeedItemViewData()
{
  return &type metadata for AttachmentSearchFeedItemViewData;
}

id sub_1BC5D98EC()
{
  void *v0;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;

  if ((sub_1BC5DA1A4() & 1) != 0)
    return sub_1BC5DB5D8();
  switch((unint64_t)objc_msgSend(v0, sel_signatureStatus))
  {
    case 1uLL:
      if (qword_1EF428588 != -1)
        goto LABEL_16;
      goto LABEL_7;
    case 2uLL:
      if (qword_1EF428588 != -1)
        swift_once();
      v8 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      v3 = sub_1BC62A4A8();
      v5 = v9;
      swift_bridgeObjectRelease();

      v10 = (void *)sub_1BC62C650();
      v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v10, 0xE000000000000000);

      v11 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
      goto LABEL_14;
    case 3uLL:
      if (qword_1EF428588 != -1)
        swift_once();
      v12 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      v3 = sub_1BC62A4A8();
      v5 = v13;
      swift_bridgeObjectRelease();

      v14 = (void *)sub_1BC62C650();
      v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v14, 0xE000000000000000);

      v11 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
LABEL_14:
      v6 = v11;
      break;
    default:
      if (qword_1EF428588 != -1)
LABEL_16:
        swift_once();
LABEL_7:
      v2 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      v3 = sub_1BC62A4A8();
      v5 = v4;
      swift_bridgeObjectRelease();

      v6 = 0;
      v7 = 0;
      break;
  }
  v15 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v3, v5, 0, v7, v6);
  swift_bridgeObjectRelease();

  return v15;
}

id sub_1BC5D9CCC()
{
  void *v0;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;

  if ((sub_1BC5DA1A4() & 1) != 0)
    return sub_1BC5DB5D8();
  if (objc_msgSend(v0, sel_signatureStatus) == (id)2)
  {
    v2 = objc_msgSend(v0, sel_recordIssuerDisplayName);
    v3 = sub_1BC62C680();
    v5 = v4;

    v6 = (void *)sub_1BC62C650();
    v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v6);

    v8 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
  }
  else
  {
    if (qword_1EF428588 != -1)
      swift_once();
    v9 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    v3 = sub_1BC62A4A8();
    v5 = v10;
    swift_bridgeObjectRelease();

    v8 = 0;
    v7 = 0;
  }
  v11 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v3, v5, 0, v7, v8);
  swift_bridgeObjectRelease();

  return v11;
}

uint64_t sub_1BC5D9EAC(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC505EE8();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BC5DA684(v6);
  return sub_1BC62D274();
}

uint64_t sub_1BC5D9F24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    v5 = swift_bridgeObjectRetain();
    v1 = (uint64_t)sub_1BC3D74CC(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v1 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v8 = v1;
  sub_1BC5D9EAC(&v8);
  v2 = v8;
  if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    if (*(_QWORD *)(v8 + 16))
      goto LABEL_7;
LABEL_13:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1BC62D3B8();
  swift_release();
  if (!v6)
    goto LABEL_13;
LABEL_7:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v3 = (id)MEMORY[0x1BCCF24CC](0, v2);
    goto LABEL_10;
  }
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(id *)(v2 + 32);
LABEL_10:
    v4 = v3;
    swift_release();
    return (uint64_t)v4;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

id sub_1BC5DA01C()
{
  void *v0;
  id v2;
  void *v3;
  char **v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if ((sub_1BC5DA1A4() & 1) != 0)
    return sub_1BC5DB5D8();
  v2 = objc_msgSend(v0, sel_signatureStatus);
  if (v2 == (id)3)
  {
    v3 = (void *)sub_1BC62C650();
    v4 = &selRef_systemRedColor;
  }
  else if (v2 == (id)2)
  {
    v3 = (void *)sub_1BC62C650();
    v4 = &selRef_systemGreenColor;
  }
  else
  {
    v3 = (void *)sub_1BC62C650();
    v4 = &selRef_secondaryLabelColor;
  }
  v5 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v3);

  v6 = objc_msgSend((id)objc_opt_self(), *v4);
  v7 = objc_msgSend(v0, sel_recordIssuerDisplayName);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v8, v10, 0, v5, v6);
  swift_bridgeObjectRelease();

  return v11;
}

uint64_t sub_1BC5DA1A4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void (*v14)(char *, char *, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v1 = v0;
  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62A760();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v18 - v10;
  v12 = objc_msgSend(v1, sel_expirationDate);
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  v13 = v12;
  sub_1BC62A724();

  v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v14(v4, v9, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_1BC36D71C((uint64_t)v4);
    v15 = 0;
    return v15 & 1;
  }
  v14(v11, v4, v5);
  sub_1BC62A730();
  v15 = sub_1BC62A718();
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v9, v5);
  v16(v11, v5);
  return v15 & 1;
}

NSAttributedString __swiftcall HKSignedClinicalDataRecord.attributedMeaningfulDateString(with:)(Swift::String with)
{
  void *v1;
  id v2;
  id v3;
  char v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  NSAttributedString result;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;

  swift_bridgeObjectRetain();
  sub_1BC62C764();
  v2 = objc_msgSend(v1, sel_subject);
  v3 = objc_msgSend(v2, sel_fullName);

  sub_1BC62C680();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v4 = sub_1BC5DA1A4();
  v5 = objc_msgSend((id)objc_opt_self(), sel_configurationWithScale_, 1);
  if ((v4 & 1) != 0)
  {
    v6 = (void *)sub_1BC62C650();
    v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v6, v5);

    if (v7)
    {
LABEL_5:
      v10 = (void *)objc_opt_self();
      v11 = objc_msgSend(v10, sel_secondaryLabelColor);
      v12 = v7;
      v13 = objc_msgSend(v10, sel_secondaryLabelColor);
      v14 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(with._countAndFlagsBits, (uint64_t)with._object, v11, v7, v13);
      swift_bridgeObjectRelease();

      return (NSAttributedString)v14;
    }
    __break(1u);
  }
  v8 = (void *)sub_1BC62C650();
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v8, v5);

  if (v7)
    goto LABEL_5;
  __break(1u);
  return result;
}

Class sub_1BC5DA584(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  Swift::String v6;
  Class isa;

  v2 = sub_1BC62C680();
  v4 = v3;
  v5 = a1;
  v6._countAndFlagsBits = v2;
  v6._object = v4;
  isa = HKSignedClinicalDataRecord.attributedMeaningfulDateString(with:)(v6).super.isa;

  swift_bridgeObjectRelease();
  return isa;
}

BOOL sub_1BC5DA5E4(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  if (objc_msgSend(v1, sel_signatureStatus))
  {
    v2 = objc_msgSend(v1, sel_signatureStatus);

    return v2 == (id)1;
  }
  else
  {

    return 1;
  }
}

BOOL HKSignedClinicalDataRecord.shouldReverifySignature.getter()
{
  void *v0;

  return !objc_msgSend(v0, sel_signatureStatus) || objc_msgSend(v0, sel_signatureStatus) == (id)1;
}

void sub_1BC5DA684(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  id *v26;
  uint64_t v27;
  _BOOL4 v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  void *v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void **v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v133 = sub_1BC62A760();
  v131 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v132 = (char *)&v119 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v119 - v4;
  v6 = a1[1];
  v7 = sub_1BC62D520();
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_133;
    if (v6)
      sub_1BC5DAF68(0, v6, 1, a1);
    return;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_141;
  v124 = v7;
  v120 = a1;
  if (v6 < 2)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    v135 = MEMORY[0x1E0DEE9D8];
    v129 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_100:
      v110 = v130;
      if (v15 >= 2)
      {
        v111 = *v120;
        do
        {
          v112 = v15 - 2;
          if (v15 < 2)
            goto LABEL_128;
          if (!v111)
            goto LABEL_140;
          v113 = v11;
          v114 = v11 + 32;
          v115 = *(_QWORD *)&v11[16 * v112 + 32];
          v116 = *(_QWORD *)&v11[16 * v15 + 24];
          sub_1BC5DB128((void **)(v111 + 8 * v115), (id *)(v111 + 8 * *(_QWORD *)&v114[16 * v15 - 16]), (id *)(v111 + 8 * v116), v129);
          if (v110)
            break;
          if (v116 < v115)
            goto LABEL_129;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v113 = sub_1BC504414((uint64_t)v113);
          if (v112 >= *((_QWORD *)v113 + 2))
            goto LABEL_130;
          v117 = &v113[16 * v112 + 32];
          *(_QWORD *)v117 = v115;
          *((_QWORD *)v117 + 1) = v116;
          v118 = *((_QWORD *)v113 + 2);
          if (v15 > v118)
            goto LABEL_131;
          v11 = v113;
          memmove(&v113[16 * v15 + 16], &v113[16 * v15 + 32], 16 * (v118 - v15));
          *((_QWORD *)v113 + 2) = v118 - 1;
          v15 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v135 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BC62C890();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v9 = v8 >> 1;
    sub_1BC5DB59C();
    v10 = sub_1BC62C8CC();
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    v129 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v135 = v10;
  }
  v12 = 0;
  v13 = *a1;
  v14 = *a1 + 16;
  v121 = *a1 - 8;
  v122 = v14;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v127 = v6;
  v134 = v13;
  while (1)
  {
    v16 = v12 + 1;
    v126 = v12;
    if (v12 + 1 < v6)
    {
      v17 = *(void **)(v13 + 8 * v12);
      v18 = *(id *)(v13 + 8 * v16);
      v19 = v17;
      v20 = objc_msgSend(v18, sel_relevantDate);
      sub_1BC62A724();

      v21 = objc_msgSend(v19, sel_relevantDate);
      v22 = v132;
      sub_1BC62A724();

      v128 = sub_1BC62A73C();
      v23 = *(void (**)(char *, uint64_t))(v131 + 8);
      v24 = v22;
      v25 = v133;
      v23(v24, v133);
      v23(v5, v25);

      v6 = v127;
      v16 = v12 + 2;
      if (v12 + 2 < v6)
      {
        v123 = v11;
        v26 = (id *)(v122 + 8 * v12);
        while (1)
        {
          v27 = v16;
          v28 = v128 == 1;
          v29 = *(v26 - 1);
          v30 = *v26;
          v31 = v29;
          v32 = objc_msgSend(v30, sel_relevantDate);
          sub_1BC62A724();

          v33 = objc_msgSend(v31, sel_relevantDate);
          v34 = v132;
          sub_1BC62A724();

          v35 = sub_1BC62A73C();
          v36 = v34;
          v37 = v133;
          v23(v36, v133);
          v23(v5, v37);

          if (v28 == (v35 != 1))
            break;
          v16 = v27 + 1;
          ++v26;
          v6 = v127;
          if (v127 == v27 + 1)
          {
            v16 = v127;
            v11 = v123;
            goto LABEL_22;
          }
        }
        v11 = v123;
        v6 = v127;
        v16 = v27;
LABEL_22:
        v12 = v126;
      }
      v13 = v134;
      if (v128 == 1)
      {
        if (v16 < v12)
          goto LABEL_134;
        if (v12 < v16)
        {
          v38 = (uint64_t *)(v121 + 8 * v16);
          v39 = v16;
          v40 = v12;
          v41 = (uint64_t *)(v134 + 8 * v12);
          do
          {
            if (v40 != --v39)
            {
              if (!v13)
                goto LABEL_139;
              v42 = *v41;
              *v41 = *v38;
              *v38 = v42;
            }
            ++v40;
            --v38;
            ++v41;
          }
          while (v40 < v39);
        }
      }
    }
    if (v16 < v6)
    {
      if (__OFSUB__(v16, v12))
        goto LABEL_132;
      if (v16 - v12 < v124)
        break;
    }
LABEL_50:
    if (v16 < v12)
      goto LABEL_127;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BC503AB4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v59 = *((_QWORD *)v11 + 2);
    v58 = *((_QWORD *)v11 + 3);
    v15 = v59 + 1;
    v13 = v134;
    if (v59 >= v58 >> 1)
    {
      v109 = sub_1BC503AB4((char *)(v58 > 1), v59 + 1, 1, v11);
      v13 = v134;
      v11 = v109;
    }
    *((_QWORD *)v11 + 2) = v15;
    v60 = v11 + 32;
    v61 = &v11[16 * v59 + 32];
    *(_QWORD *)v61 = v12;
    *((_QWORD *)v61 + 1) = v16;
    v128 = v16;
    if (v59)
    {
      while (1)
      {
        v62 = v15 - 1;
        if (v15 >= 4)
        {
          v67 = &v60[16 * v15];
          v68 = *((_QWORD *)v67 - 8);
          v69 = *((_QWORD *)v67 - 7);
          v73 = __OFSUB__(v69, v68);
          v70 = v69 - v68;
          if (v73)
            goto LABEL_116;
          v72 = *((_QWORD *)v67 - 6);
          v71 = *((_QWORD *)v67 - 5);
          v73 = __OFSUB__(v71, v72);
          v65 = v71 - v72;
          v66 = v73;
          if (v73)
            goto LABEL_117;
          v74 = v15 - 2;
          v75 = &v60[16 * v15 - 32];
          v77 = *(_QWORD *)v75;
          v76 = *((_QWORD *)v75 + 1);
          v73 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          if (v73)
            goto LABEL_119;
          v73 = __OFADD__(v65, v78);
          v79 = v65 + v78;
          if (v73)
            goto LABEL_122;
          if (v79 >= v70)
          {
            v97 = &v60[16 * v62];
            v99 = *(_QWORD *)v97;
            v98 = *((_QWORD *)v97 + 1);
            v73 = __OFSUB__(v98, v99);
            v100 = v98 - v99;
            if (v73)
              goto LABEL_126;
            v90 = v65 < v100;
            goto LABEL_87;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v91 = *((_QWORD *)v11 + 4);
            v92 = *((_QWORD *)v11 + 5);
            v73 = __OFSUB__(v92, v91);
            v84 = v92 - v91;
            v85 = v73;
            goto LABEL_81;
          }
          v64 = *((_QWORD *)v11 + 4);
          v63 = *((_QWORD *)v11 + 5);
          v73 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          v66 = v73;
        }
        if ((v66 & 1) != 0)
          goto LABEL_118;
        v74 = v15 - 2;
        v80 = &v60[16 * v15 - 32];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v83 = __OFSUB__(v81, v82);
        v84 = v81 - v82;
        v85 = v83;
        if (v83)
          goto LABEL_121;
        v86 = &v60[16 * v62];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v73 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v73)
          goto LABEL_124;
        if (__OFADD__(v84, v89))
          goto LABEL_125;
        if (v84 + v89 >= v65)
        {
          v90 = v65 < v89;
LABEL_87:
          if (v90)
            v62 = v74;
          goto LABEL_89;
        }
LABEL_81:
        if ((v85 & 1) != 0)
          goto LABEL_120;
        v93 = &v60[16 * v62];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v73 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v73)
          goto LABEL_123;
        if (v96 < v84)
          goto LABEL_14;
LABEL_89:
        v101 = v62 - 1;
        if (v62 - 1 >= v15)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v13)
          goto LABEL_138;
        v102 = v11;
        v103 = &v60[16 * v101];
        v104 = *(_QWORD *)v103;
        v105 = &v60[16 * v62];
        v106 = *((_QWORD *)v105 + 1);
        v107 = v130;
        sub_1BC5DB128((void **)(v13 + 8 * *(_QWORD *)v103), (id *)(v13 + 8 * *(_QWORD *)v105), (id *)(v13 + 8 * v106), v129);
        v130 = v107;
        if (v107)
          goto LABEL_111;
        if (v106 < v104)
          goto LABEL_113;
        if (v62 > *((_QWORD *)v102 + 2))
          goto LABEL_114;
        *(_QWORD *)v103 = v104;
        *(_QWORD *)&v60[16 * v101 + 8] = v106;
        v108 = *((_QWORD *)v102 + 2);
        if (v62 >= v108)
          goto LABEL_115;
        v11 = v102;
        v15 = v108 - 1;
        memmove(&v60[16 * v62], v105 + 16, 16 * (v108 - 1 - v62));
        *((_QWORD *)v102 + 2) = v108 - 1;
        v13 = v134;
        if (v108 <= 2)
          goto LABEL_14;
      }
    }
    v15 = 1;
LABEL_14:
    v6 = v127;
    v12 = v128;
    if (v128 >= v127)
      goto LABEL_100;
  }
  if (__OFADD__(v12, v124))
    goto LABEL_135;
  if (v12 + v124 >= v6)
    v43 = v6;
  else
    v43 = v12 + v124;
  if (v43 >= v12)
  {
    if (v16 != v43)
    {
      v123 = v11;
      v44 = v121 + 8 * v16;
      v125 = v43;
      do
      {
        v45 = v16;
        v46 = *(void **)(v13 + 8 * v16);
        v128 = v44;
        while (1)
        {
          v47 = *(void **)v44;
          v48 = v46;
          v49 = v47;
          v50 = objc_msgSend(v48, sel_relevantDate);
          sub_1BC62A724();

          v51 = objc_msgSend(v49, sel_relevantDate);
          v52 = v132;
          sub_1BC62A724();

          v53 = sub_1BC62A73C();
          v54 = *(void (**)(char *, uint64_t))(v131 + 8);
          v55 = v52;
          v56 = v133;
          v54(v55, v133);
          v54(v5, v56);

          if (v53 != 1)
            break;
          v13 = v134;
          if (!v134)
            goto LABEL_137;
          v57 = *(void **)v44;
          v46 = *(void **)(v44 + 8);
          *(_QWORD *)v44 = v46;
          *(_QWORD *)(v44 + 8) = v57;
          v44 -= 8;
          if (v45 == ++v12)
            goto LABEL_43;
        }
        v13 = v134;
LABEL_43:
        v16 = v45 + 1;
        v44 = v128 + 8;
        v12 = v126;
      }
      while (v45 + 1 != v125);
      v16 = v125;
      v11 = v123;
    }
    goto LABEL_50;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  sub_1BC62D388();
  __break(1u);
}

void sub_1BC5DAF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a1;
  v7 = sub_1BC62A760();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v30 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  v27 = a2;
  if (a3 != a2)
  {
    v33 = *a4;
    v12 = v33 + 8 * a3 - 8;
LABEL_5:
    v13 = *(void **)(v33 + 8 * a3);
    v14 = v28;
    v29 = v12;
    while (1)
    {
      v15 = *(void **)v12;
      v16 = v13;
      v17 = v15;
      v18 = objc_msgSend(v16, sel_relevantDate);
      sub_1BC62A724();

      v19 = objc_msgSend(v17, sel_relevantDate);
      v20 = v30;
      sub_1BC62A724();

      v21 = sub_1BC62A73C();
      v22 = *(void (**)(char *, uint64_t))(v31 + 8);
      v23 = v20;
      v24 = v32;
      v22(v23, v32);
      v22(v11, v24);

      if (v21 != 1)
      {
LABEL_4:
        ++a3;
        v12 = v29 + 8;
        if (a3 == v27)
          return;
        goto LABEL_5;
      }
      if (!v33)
        break;
      v25 = *(void **)v12;
      v13 = *(void **)(v12 + 8);
      *(_QWORD *)v12 = v13;
      *(_QWORD *)(v12 + 8) = v25;
      v12 -= 8;
      if (a3 == ++v14)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BC5DB128(void **a1, id *a2, id *a3, void **a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id *v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  id *v28;
  void **v29;
  id *v30;
  id *v31;
  char *v32;
  unint64_t v33;
  void **v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t result;
  uint64_t v47;
  void **v48;
  void **v49;
  void **v50;
  id *v51;
  id *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void **v57;
  void **v58;
  id *v59;

  v8 = sub_1BC62A760();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  MEMORY[0x1E0C80A78](v8);
  v54 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v53 = (char *)&v47 - v11;
  v12 = (char *)a2 - (char *)a1;
  v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v13 = (char *)a2 - (char *)a1;
  v14 = v13 >> 3;
  v51 = a3;
  v15 = (char *)a3 - (char *)a2;
  v16 = v15 / 8;
  v59 = a1;
  v58 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_43;
    if (a4 != a2 || &a2[v16] <= a4)
      memmove(a4, a2, 8 * v16);
    v29 = &a4[v16];
    v57 = v29;
    v59 = a2;
    if (v15 < 8 || a1 >= a2)
      goto LABEL_42;
    v30 = v51 - 1;
    v31 = a2;
    v48 = a1;
    v49 = a4;
    v32 = v53;
    while (1)
    {
      v52 = a2;
      v50 = v29;
      v51 = v30 + 1;
      v34 = v29 - 1;
      v35 = *--v31;
      v36 = *(v29 - 1);
      v37 = v35;
      v38 = objc_msgSend(v36, sel_relevantDate);
      sub_1BC62A724();

      v39 = objc_msgSend(v37, sel_relevantDate);
      v40 = v54;
      sub_1BC62A724();

      v41 = sub_1BC62A73C();
      v42 = *(void (**)(char *, uint64_t))(v55 + 8);
      v43 = v40;
      v44 = v56;
      v42(v43, v56);
      v42(v32, v44);

      if (v41 == 1)
        break;
      v57 = v34;
      v31 = v52;
      if (v51 < v50 || v30 >= v50)
      {
        *v30 = *v34;
        v29 = v34;
        goto LABEL_30;
      }
      v33 = (unint64_t)v48;
      v45 = (unint64_t)v49;
      if (v51 != v50)
        *v30 = *v34;
      v29 = v34;
      if ((unint64_t)v34 <= v45)
        goto LABEL_42;
LABEL_31:
      --v30;
      a2 = v31;
      if ((unint64_t)v31 <= v33)
        goto LABEL_42;
    }
    v29 = v50;
    if (v51 != v52 || v30 >= v52)
      *v30 = *v31;
    v59 = v31;
LABEL_30:
    v33 = (unint64_t)v48;
    if (v29 <= v49)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    if (a4 != a1 || &a1[v14] <= a4)
      memmove(a4, a1, 8 * v14);
    v50 = &a4[v14];
    v57 = v50;
    if (v12 >= 8 && a2 < v51)
    {
      v17 = v53;
      do
      {
        v18 = *a4;
        v19 = (id *)*a2;
        v52 = v19;
        v20 = v18;
        v21 = objc_msgSend(v19, sel_relevantDate);
        sub_1BC62A724();

        v22 = objc_msgSend(v20, sel_relevantDate);
        v23 = v54;
        sub_1BC62A724();

        v24 = a4;
        v25 = sub_1BC62A73C();
        v26 = v56;
        v27 = *(void (**)(char *, uint64_t))(v55 + 8);
        v27(v23, v56);
        v27(v17, v26);

        if (v25 == 1)
        {
          v28 = a2 + 1;
          a4 = v24;
          if (a1 < a2 || a1 >= v28 || a1 != a2)
            *a1 = *a2;
        }
        else
        {
          if (a1 != v24)
            *a1 = *v24;
          a4 = v24 + 1;
          v58 = v24 + 1;
          v28 = a2;
        }
        v59 = ++a1;
        if (a4 >= v50)
          break;
        a2 = v28;
      }
      while (v28 < v51);
    }
LABEL_42:
    sub_1BC503C80(&v59, &v58, &v57);
    return 1;
  }
LABEL_43:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

unint64_t sub_1BC5DB59C()
{
  unint64_t result;

  result = qword_1EF42CF28;
  if (!qword_1EF42CF28)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42CF28);
  }
  return result;
}

id sub_1BC5DB5D8()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  if (qword_1EF428588 != -1)
    swift_once();
  v0 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  v4 = (void *)sub_1BC62C650();
  v5 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v4, 0xE000000000000000);

  v6 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
  v7 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v1, v3, 0, v5, v6);
  swift_bridgeObjectRelease();

  return v7;
}

id DynamicView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_1BC5DB764()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
  (*(void (**)(uint64_t))((*v1 & *v0) + 0x80))(v2);
  return (*(uint64_t (**)(void))((*v1 & *v0) + 0x78))();
}

id DynamicView.init()()
{
  void *v0;

  return objc_msgSend(v0, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
}

id sub_1BC5DB7DC()
{
  return DynamicView.init()();
}

id DynamicView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

_QWORD *DynamicView.init(frame:)(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v13;
  objc_class *v14;
  _QWORD *v15;
  uint64_t (*v16)(void);
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  objc_super v21;

  v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v14 = (objc_class *)type metadata accessor for DynamicView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v8) + 0x50), a7, a8);
  v21.receiver = v8;
  v21.super_class = v14;
  v15 = objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = *(uint64_t (**)(void))((*v13 & *v15) + 0x70);
  v17 = v15;
  v18 = v16();
  v19 = (*(uint64_t (**)(uint64_t))((*v13 & *v17) + 0x80))(v18);
  (*(void (**)(uint64_t))((*v13 & *v17) + 0x78))(v19);

  return v17;
}

uint64_t type metadata accessor for DynamicView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicView);
}

_QWORD *sub_1BC5DB930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  return DynamicView.init(frame:)(a5, a6, a7, a8, a1, a2, a3, a4);
}

id DynamicView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

_QWORD *DynamicView.init(coder:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  objc_class *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  objc_super v15;

  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v7 = (objc_class *)type metadata accessor for DynamicView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v15.receiver = v4;
  v15.super_class = v7;
  v8 = objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);
  v9 = v8;
  if (v8)
  {
    v10 = *(uint64_t (**)(void))((*v6 & *v8) + 0x70);
    v11 = v8;
    v12 = v10();
    v13 = (*(uint64_t (**)(uint64_t))((*v6 & *v11) + 0x80))(v12);
    (*(void (**)(uint64_t))((*v6 & *v11) + 0x78))(v13);

  }
  return v9;
}

_QWORD *sub_1BC5DBA54(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return DynamicView.init(coder:)(v3, v4, v5, v6);
}

void sub_1BC5DBA78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  objc_class *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  unsigned int v22;
  objc_super v23;

  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v7 = (objc_class *)type metadata accessor for DynamicView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v23.receiver = v4;
  v23.super_class = v7;
  objc_msgSendSuper2(&v23, sel_traitCollectionDidChange_, a1);
  v8 = objc_msgSend(v4, sel_traitCollection);
  v9 = objc_msgSend(v8, sel_preferredContentSizeCategory);

  if (!a1)
  {

    goto LABEL_11;
  }
  v10 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  v11 = sub_1BC62C680();
  v13 = v12;
  if (v11 == sub_1BC62C680() && v13 == v14)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = sub_1BC62D574();

    swift_bridgeObjectRelease();
    v17 = (id)swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_11;
  }
  v18 = objc_msgSend(v4, sel_traitCollection);
  v19 = objc_msgSend(v18, sel_legibilityWeight);

  v17 = objc_msgSend(a1, sel_legibilityWeight);
  if (v19 == v17)
    goto LABEL_12;
LABEL_11:
  v20 = (*(uint64_t (**)(id))((*v6 & *v4) + 0x78))(v17);
  if (a1)
  {
LABEL_12:
    v21 = objc_msgSend(v4, sel_traitCollection);
    v22 = objc_msgSend(a1, sel_hasDifferentColorAppearanceComparedToTraitCollection_, v21);

    if (!v22)
      return;
  }
  (*(void (**)(uint64_t))((*v6 & *v4) + 0x80))(v20);
}

void sub_1BC5DBC6C(void *a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = a3;
  v8 = a1;
  sub_1BC5DBA78(a3, (uint64_t)v8, v6, v7);

}

id DynamicView.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for DynamicView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1BC5DBD10()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x70))();
}

uint64_t sub_1BC5DBD48()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x78))();
}

uint64_t sub_1BC5DBD80()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x80))();
}

uint64_t sub_1BC5DBDB8()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x60))();
}

uint64_t sub_1BC5DBDF0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for DynamicView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DynamicView.updateAutomationIdentifiers(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DynamicView.apply(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DynamicView.addSubviews()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DynamicView.reloadFonts()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DynamicView.reloadColors()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

void sub_1BC5DBEBC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  char v39;
  void *v40;
  char v41;
  char v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  char v47;
  void *v48;
  char v49;
  uint64_t v50;
  id v51;
  void *v52;
  char v53;
  unint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[72];
  _OWORD v74[4];
  uint64_t v75;

  if (!*(_QWORD *)(a2 + 16))
    return;
  v2 = a2;
  v4 = *((_OWORD *)a1 + 3);
  v74[2] = *((_OWORD *)a1 + 2);
  v74[3] = v4;
  v75 = *((_QWORD *)a1 + 8);
  v5 = *((_OWORD *)a1 + 1);
  v74[0] = *(_OWORD *)a1;
  v74[1] = v5;
  sub_1BC62D670();
  DisplayCategory.hash(into:)((uint64_t)v73);
  v6 = sub_1BC62D6AC();
  v7 = -1 << *(_BYTE *)(v2 + 32);
  v8 = v6 & ~v7;
  v9 = v2 + 56;
  if (((*(_QWORD *)(v2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return;
  v10 = ~v7;
  v11 = *a1;
  v71 = v2 + 56;
  v67 = *((_QWORD *)a1 + 3);
  v66 = *((_QWORD *)a1 + 4);
  v64 = *((_QWORD *)a1 + 2);
  v65 = *((_QWORD *)a1 + 5);
  *(_QWORD *)&v74[0] = *((_QWORD *)a1 + 6);
  v62 = *((_QWORD *)a1 + 7);
  v68 = v2;
  v70 = ~v7;
  v69 = v11;
  while (1)
  {
    v12 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 72 * v8);
    if (*(unsigned __int8 *)v12 != v11)
      goto LABEL_5;
    v14 = (void *)v12[1];
    v13 = v12[2];
    v15 = v12[3];
    v72 = v12[4];
    v17 = v12[5];
    v16 = v12[6];
    v18 = v12[7];
    v19 = (void *)v12[8];
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = v19;
    v21 = v14;
    if ((sub_1BC62CEB4() & 1) == 0)
    {
LABEL_4:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v68;

      v10 = v70;
      v9 = v71;
      v11 = v69;
      goto LABEL_5;
    }
    v22 = v15;
    if (v15)
    {
      v23 = v17;
      v24 = v18;
      if (!v67)
        goto LABEL_4;
      v25 = v13 == v64 && v22 == v67;
      v26 = v16;
      if (!v25 && (sub_1BC62D574() & 1) == 0)
        goto LABEL_4;
    }
    else
    {
      v23 = v17;
      v24 = v18;
      v26 = v16;
      if (v67)
        goto LABEL_4;
    }
    v27 = v72 == v66 && v23 == v65;
    if (!v27 && (sub_1BC62D574() & 1) == 0)
      goto LABEL_4;
    if ((unint64_t)v26 >> 62)
    {
      swift_bridgeObjectRetain();
      v28 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v29 = *(_QWORD *)&v74[0];
    v30 = *(_QWORD *)&v74[0] >> 62;
    v63 = *(_QWORD *)&v74[0];
    if (*(_QWORD *)&v74[0] >> 62)
    {
      swift_bridgeObjectRetain();
      v57 = sub_1BC62D3B8();
      sub_1BC3FE9FC((uint64_t)v74);
      v29 = v63;
      if (v28 != v57)
        goto LABEL_4;
    }
    else if (v28 != *(_QWORD *)((*(_QWORD *)&v74[0] & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    if (v28)
    {
      v31 = v26 & 0xFFFFFFFFFFFFFF8;
      v32 = (v26 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v26 < 0)
        v31 = v26;
      if ((unint64_t)v26 >> 62)
        v32 = v31;
      v33 = v29 & 0xFFFFFFFFFFFFFF8;
      v34 = (v29 & 0xFFFFFFFFFFFFFF8) + 32;
      v61 = v29 & 0xFFFFFFFFFFFFFF8;
      if (v29 < 0)
        v33 = v29;
      if (v30)
        v34 = v33;
      if (v32 != v34)
        break;
    }
LABEL_45:
    if ((sub_1BC3ED4CC(v24, v62) & 1) == 0)
      goto LABEL_4;
    v42 = sub_1BC62CEB4();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v2 = v68;
    v10 = v70;
    v9 = v71;
    v11 = v69;
    if ((v42 & 1) != 0)
      return;
LABEL_5:
    v8 = (v8 + 1) & v10;
    if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      return;
  }
  if ((v28 & 0x8000000000000000) == 0)
  {
    v60 = v26 & 0xC000000000000001;
    if ((v26 & 0xC000000000000001) != 0)
    {
      v35 = (id)MEMORY[0x1BCCF24CC](0, v26);
    }
    else
    {
      if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_77;
      v35 = *(id *)(v26 + 32);
    }
    v36 = v35;
    v59 = v63 & 0xC000000000000001;
    if ((v63 & 0xC000000000000001) != 0)
    {
      v37 = (id)MEMORY[0x1BCCF24CC](0);
    }
    else
    {
      if (!*(_QWORD *)(v61 + 16))
        goto LABEL_78;
      v37 = *(id *)(v63 + 32);
    }
    v38 = v37;
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    v39 = sub_1BC62CEB4();
    v40 = v36;
    v41 = v39;

    if ((v41 & 1) == 0)
      goto LABEL_4;
    if (v28 != 1)
    {
      if (v60)
      {
        v43 = (id)MEMORY[0x1BCCF24CC](1, v26);
      }
      else
      {
        if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
          goto LABEL_81;
        v43 = *(id *)(v26 + 40);
      }
      v44 = v43;
      if (v59)
      {
        v45 = (id)MEMORY[0x1BCCF24CC](1, v63);
      }
      else
      {
        if (*(_QWORD *)(v61 + 16) < 2uLL)
          goto LABEL_82;
        v45 = *(id *)(v63 + 40);
      }
      v46 = v45;
      v47 = sub_1BC62CEB4();
      v48 = v44;
      v49 = v47;

      if ((v49 & 1) == 0)
        goto LABEL_4;
      v58 = 2 - v28;
      v50 = 6;
      while (v58 + v50 != 6)
      {
        v54 = v50 - 4;
        if (v60)
        {
          v55 = (id)MEMORY[0x1BCCF24CC](v50 - 4, v26);
        }
        else
        {
          if (v54 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_79;
          v55 = *(id *)(v26 + 8 * v50);
        }
        v56 = v55;
        if (v59)
        {
          v51 = (id)MEMORY[0x1BCCF24CC](v50 - 4, v63);
        }
        else
        {
          if (v54 >= *(_QWORD *)(v61 + 16))
            goto LABEL_80;
          v51 = *(id *)(v63 + 8 * v50);
        }
        v52 = v51;
        v53 = sub_1BC62CEB4();

        ++v50;
        if ((v53 & 1) == 0)
          goto LABEL_4;
      }
    }
    goto LABEL_45;
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
}

uint64_t sub_1BC5DC4E0(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_1BC62D148();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_1BC62CEA8(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_1BC62CEB4();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_1BC62CEB4();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_1BC5DC63C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1BC62B8C4();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_1BC347F0C(&qword_1EF42C7A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF08]),
        v6 = sub_1BC62C5C0(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
      v12 = sub_1BC62C644();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

BOOL sub_1BC5DC7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = sub_1BC62D664();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1BC5DC888(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1BC62A7B4();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]), v6 = sub_1BC62C5C0(), v7 = -1 << *(_BYTE *)(a2 + 32), v8 = v6 & ~v7, ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_1BC347F0C((unint64_t *)&qword_1EF429288, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v12 = sub_1BC62C644();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t ClinicalSharingSelectedDataTypesContext.__allocating_init(selectedItems:selectedItemsDidUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = swift_allocObject();
  v7 = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v7;
  swift_beginAccess();
  v8 = *(_QWORD *)(v6 + 40);
  *(_QWORD *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 48) = a3;
  sub_1BC36D770(v8);
  return v6;
}

uint64_t sub_1BC5DCAA4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  sub_1BC5DCB08(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC5DCB08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  sub_1BC357158(0, &qword_1EF42DB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - v4;
  v6 = sub_1BC62B8C4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v37 = (char *)&v34 - v10;
  v11 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  v16 = swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1BC3EDA48(v16, a1);
  result = swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    v18 = v12;
    v35 = v14;
    v36 = v11;
    v19 = *v15;
    v20 = *(_QWORD *)(*v15 + 16);
    if (v20)
    {
      v34 = v1;
      v21 = v19 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
      v39 = *(_QWORD *)(v18 + 72);
      swift_bridgeObjectRetain();
      v22 = MEMORY[0x1E0DEE9D8];
      v23 = v38;
      v25 = (uint64_t)v35;
      v24 = v36;
      do
      {
        sub_1BC3AFE24(v21, v25);
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, v25 + *(int *)(v24 + 48), v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
        sub_1BC3AFE68(v25);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
        {
          sub_1BC5DE6D8((uint64_t)v5, &qword_1EF42DB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        }
        else
        {
          v26 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
          v27 = v37;
          v26(v37, v5, v6);
          v26(v23, v27, v6);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v22 = sub_1BC3B52BC(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
          v29 = *(_QWORD *)(v22 + 16);
          v28 = *(_QWORD *)(v22 + 24);
          if (v29 >= v28 >> 1)
            v22 = sub_1BC3B52BC(v28 > 1, v29 + 1, 1, v22);
          *(_QWORD *)(v22 + 16) = v29 + 1;
          v30 = v22
              + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
              + *(_QWORD *)(v7 + 72) * v29;
          v23 = v38;
          v26((char *)v30, v38, v6);
          v25 = (uint64_t)v35;
          v24 = v36;
        }
        v21 += v39;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
      v1 = v34;
    }
    else
    {
      v22 = MEMORY[0x1E0DEE9D8];
    }
    v31 = sub_1BC58BFF8(v22);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 24) = v31;
    result = swift_bridgeObjectRelease();
    if ((*(_BYTE *)(v1 + 32) & 1) == 0)
    {
      result = swift_beginAccess();
      v32 = *(void (**)(uint64_t))(v1 + 40);
      if (v32)
      {
        v33 = swift_retain();
        v32(v33);
        return sub_1BC36D770((uint64_t)v32);
      }
    }
  }
  return result;
}

uint64_t sub_1BC5DCE74()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC5DCEA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  sub_1BC5DCB08(v3);
  return swift_bridgeObjectRelease();
}

void (*sub_1BC5DCF00(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return sub_1BC5DCF68;
}

void sub_1BC5DCF68(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC5DCB08(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC5DCB08(v4);
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t sub_1BC5DCFD8@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = *(_QWORD *)(v3 + 48);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BC4E6694;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BC38F084(v4);
}

uint64_t sub_1BC5DD060(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC4E6694;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;
  *(_QWORD *)(v7 + 48) = v5;
  sub_1BC38F084(v3);
  return sub_1BC36D770(v8);
}

uint64_t sub_1BC5DD10C()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 40);
  sub_1BC38F084(v1);
  return v1;
}

uint64_t sub_1BC5DD158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return sub_1BC36D770(v5);
}

uint64_t (*sub_1BC5DD1A8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ClinicalSharingSelectedDataTypesContext.init(selectedItems:selectedItemsDidUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v6;
  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 48) = a3;
  sub_1BC36D770(v7);
  return v3;
}

uint64_t sub_1BC5DD25C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v2;
  if ((a2 & 1) != 0)
    return sub_1BC5DD6DC(a1, 0);
  swift_beginAccess();
  v9 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BC5DDE54(&v9, a1);
  result = swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v9 + 16);
  if (v7 < v6)
  {
    __break(1u);
  }
  else
  {
    sub_1BC5DE43C(v6, v7);
    v8 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = v9;
    sub_1BC5DCB08(v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC5DD334(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];

  v3 = v2;
  LODWORD(v4) = a2;
  v40 = (char *)*v2;
  v6 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - v11;
  v13 = sub_1BC62BB34();
  v42 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BB04();
  sub_1BC3AFE24(a1, (uint64_t)v12);
  v16 = sub_1BC62BB28();
  v17 = sub_1BC62CADC();
  v41 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v37 = v4;
    v4 = v18;
    v36 = swift_slowAlloc();
    v44[0] = v36;
    *(_DWORD *)v4 = 136315394;
    v39 = v7;
    v19 = sub_1BC62D718();
    v38 = a1;
    v43 = sub_1BC4991F0(v19, v20, v44);
    v40 = v9;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    v35 = v13;
    v21 = v3;
    v22 = v6;
    v24 = *((_QWORD *)v12 + 2);
    v23 = *((_QWORD *)v12 + 3);
    swift_bridgeObjectRetain();
    v25 = v24;
    v7 = v39;
    v43 = sub_1BC4991F0(v25, v23, v44);
    v9 = v40;
    a1 = v38;
    sub_1BC62CFF8();
    v6 = v22;
    v3 = v21;
    swift_bridgeObjectRelease();
    sub_1BC3AFE68((uint64_t)v12);
    _os_log_impl(&dword_1BC30A000, v16, (os_log_type_t)v41, "[%s] Adding data type with identifier '%s' to the selected data types array", (uint8_t *)v4, 0x16u);
    v26 = v36;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v26, -1, -1);
    v27 = v4;
    LOBYTE(v4) = v37;
    MEMORY[0x1BCCF36A8](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v35);
  }
  else
  {
    sub_1BC3AFE68((uint64_t)v12);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v13);
  }
  v28 = v3[3];
  v29 = a1 + *(int *)(v6 + 48);
  swift_bridgeObjectRetain();
  LOBYTE(v29) = sub_1BC5DC63C(v29, v28);
  result = swift_bridgeObjectRelease();
  if ((v29 & 1) == 0)
  {
    *((_BYTE *)v3 + 32) = v4 & 1;
    sub_1BC3AFE24(a1, (uint64_t)v9);
    swift_beginAccess();
    v31 = v3[2];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v31 = sub_1BC3B5190(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
    v33 = *(_QWORD *)(v31 + 16);
    v32 = *(_QWORD *)(v31 + 24);
    if (v33 >= v32 >> 1)
      v31 = sub_1BC3B5190(v32 > 1, v33 + 1, 1, v31);
    *(_QWORD *)(v31 + 16) = v33 + 1;
    sub_1BC3AFDE0((uint64_t)v9, v31+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v33);
    v34 = v3[2];
    v3[2] = v31;
    sub_1BC5DCB08(v34);
    result = swift_bridgeObjectRelease();
    *((_BYTE *)v3 + 32) = 0;
  }
  return result;
}

uint64_t sub_1BC5DD6DC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23[3];
  uint64_t v24;

  v3 = v2;
  LODWORD(v4) = a2;
  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BB04();
  v9 = sub_1BC62BB28();
  v10 = sub_1BC62CADC();
  if (os_log_type_enabled(v9, v10))
  {
    v21 = v5;
    v11 = swift_slowAlloc();
    v22 = (int)v4;
    v4 = (uint8_t *)v11;
    v12 = swift_slowAlloc();
    v23[0] = v12;
    v20 = v6;
    *(_DWORD *)v4 = 136315138;
    v13 = sub_1BC62D718();
    v24 = sub_1BC4991F0(v13, v14, v23);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v9, v10, "[%s] Adding array of data types to selected items", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v12, -1, -1);
    v15 = v4;
    LOBYTE(v4) = v22;
    MEMORY[0x1BCCF36A8](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_retain();
  v16 = swift_bridgeObjectRetain();
  v17 = sub_1BC5DDB38(v16, v3);
  swift_bridgeObjectRelease();
  swift_release();
  *(_BYTE *)(v3 + 32) = v4 & 1;
  swift_beginAccess();
  v24 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_1BC3BB398(v17);
  v18 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v24;
  sub_1BC5DCB08(v18);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(v3 + 32) = 0;
  return result;
}

uint64_t ClinicalSharingSelectedDataTypesContext.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC36D770(*(_QWORD *)(v0 + 40));
  return v0;
}

uint64_t ClinicalSharingSelectedDataTypesContext.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC36D770(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5DD980(uint64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v3 = v5;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1BC3B5CEC(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(_QWORD *)v3 = v5;
  }
  v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_1BC37AE0C();
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_20;
  v15 = v5[2];
  v16 = __OFSUB__(v15, a2);
  v17 = v15 - a2;
  if (v16)
    goto LABEL_26;
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v14 + 40);
    v19 = (char *)&v5[5 * a2 + 4];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17])
      memmove(v18, v19, 40 * v17);
    v20 = v5[2];
    v16 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v16)
    {
      v5[2] = v21;
LABEL_20:
      sub_1BC34E674(a3, v14);
      return sub_1BC5DE6D8(a3, &qword_1EF439468, (uint64_t (*)(uint64_t))sub_1BC37AE0C, MEMORY[0x1E0DEC628]);
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC5DDB38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, unint64_t, uint64_t);
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v36 = a2;
  v4 = sub_1BC62B8C4();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v7 = MEMORY[0x1E0C80A78](v32);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v28 - v11;
  result = MEMORY[0x1E0DEE9D8];
  v40 = MEMORY[0x1E0DEE9D8];
  v35 = *(_QWORD *)(a1 + 16);
  if (v35)
  {
    v14 = 0;
    v15 = *(_QWORD *)(v10 + 72);
    v33 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v34 = a1 + v33;
    v30 = (char *)&v28 - v11;
    v31 = v9;
    v28 = v2;
    v29 = v15;
    while (1)
    {
      sub_1BC3AFE24(v34 + v15 * v14, (uint64_t)v12);
      v16 = *(_QWORD *)(v36 + 24);
      if (*(_QWORD *)(v16 + 16))
      {
        v37 = v14;
        v17 = &v12[*(int *)(v32 + 48)];
        sub_1BC347F0C(&qword_1EF42C7A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF08]);
        swift_bridgeObjectRetain();
        v39 = v17;
        v18 = sub_1BC62C5C0();
        v19 = -1 << *(_BYTE *)(v16 + 32);
        v20 = v18 & ~v19;
        if (((*(_QWORD *)(v16 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
        {
          v21 = ~v19;
          v22 = *(_QWORD *)(v38 + 72);
          v23 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
          while (1)
          {
            v23(v6, *(_QWORD *)(v16 + 48) + v22 * v20, v4);
            sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
            v24 = sub_1BC62C644();
            (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
            if ((v24 & 1) != 0)
              break;
            v20 = (v20 + 1) & v21;
            if (((*(_QWORD *)(v16 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
              goto LABEL_10;
          }
          swift_bridgeObjectRelease();
          v12 = v30;
          sub_1BC3AFE68((uint64_t)v30);
          v9 = v31;
          v14 = v37;
          v15 = v29;
          goto LABEL_4;
        }
LABEL_10:
        swift_bridgeObjectRelease();
        v12 = v30;
        v9 = v31;
        v14 = v37;
        v15 = v29;
      }
      sub_1BC3AFDE0((uint64_t)v12, (uint64_t)v9);
      v25 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC3BD79C(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v40;
      }
      v27 = *(_QWORD *)(v25 + 16);
      v26 = *(_QWORD *)(v25 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1BC3BD79C(v26 > 1, v27 + 1, 1);
        v25 = v40;
      }
      *(_QWORD *)(v25 + 16) = v27 + 1;
      sub_1BC3AFDE0((uint64_t)v9, v25 + v33 + v27 * v15);
LABEL_4:
      if (++v14 == v35)
        return v40;
    }
  }
  return result;
}

uint64_t sub_1BC5DDE54(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t result;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  BOOL v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  char *v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v5 = MEMORY[0x1E0C80A78](v4);
  v64 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v63 = (uint64_t)&v60 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v60 - v10);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (uint64_t *)((char *)&v60 - v13);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v60 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v60 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v22 = MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v60 - v26;
  v68 = a1;
  v28 = *a1;
  v29 = *(_QWORD *)(v28 + 16);
  if (!v29)
    return 0;
  v70 = (_QWORD *)v25;
  v71 = (_QWORD *)v24;
  v30 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v61 = v28 + v30;
  v31 = *(_QWORD *)(a2 + 16);
  v75 = *(_QWORD *)(v23 + 72);
  v65 = a2 + v30;
  swift_bridgeObjectRetain();
  v32 = 0;
  v69 = v27;
  v66 = v30;
  v67 = a2;
  v74 = v31;
  v62 = v28;
  v60 = v29;
  while (!v31)
  {
LABEL_4:
    if (++v32 == v29)
    {
LABEL_54:
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v28 + 16);
    }
  }
  v73 = v32;
  v72 = v61 + v75 * v32;
  swift_bridgeObjectRetain();
  v33 = v65;
  v34 = v31;
  while (1)
  {
    sub_1BC3AFE24(v33, (uint64_t)v27);
    v36 = v72;
    if (*((_QWORD *)v27 + 2) == *(_QWORD *)(v72 + 16) && *((_QWORD *)v27 + 3) == *(_QWORD *)(v72 + 24))
      break;
    v38 = sub_1BC62D574();
    v39 = (uint64_t)v27;
    v40 = v70;
    sub_1BC3AFE24(v39, (uint64_t)v70);
    v41 = v36;
    v42 = v71;
    sub_1BC3AFE24(v41, (uint64_t)v71);
    if ((v38 & 1) != 0)
      goto LABEL_16;
    sub_1BC3AFE68((uint64_t)v40);
    sub_1BC3AFE68((uint64_t)v42);
    v27 = v69;
    sub_1BC3AFE68((uint64_t)v69);
LABEL_8:
    v33 += v75;
    if (!--v34)
    {
      swift_bridgeObjectRelease();
      v32 = v73;
      v31 = v74;
      v28 = v62;
      v29 = v60;
      goto LABEL_4;
    }
  }
  v43 = (uint64_t)v27;
  v40 = v70;
  sub_1BC3AFE24(v43, (uint64_t)v70);
  v44 = v36;
  v42 = v71;
  sub_1BC3AFE24(v44, (uint64_t)v71);
LABEL_16:
  if (*v40 != *v42 || v40[1] != v42[1])
  {
    v35 = sub_1BC62D574();
    sub_1BC3AFE68((uint64_t)v40);
    sub_1BC3AFE68((uint64_t)v42);
    v27 = v69;
    sub_1BC3AFE68((uint64_t)v69);
    if ((v35 & 1) != 0)
      goto LABEL_19;
    goto LABEL_8;
  }
  sub_1BC3AFE68((uint64_t)v40);
  sub_1BC3AFE68((uint64_t)v42);
  sub_1BC3AFE68((uint64_t)v69);
LABEL_19:
  v45 = v62;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v73;
  v47 = v73 + 1;
  if (__OFADD__(v73, 1))
  {
LABEL_63:
    __break(1u);
    return result;
  }
  v48 = *(_QWORD *)(v45 + 16);
  if (v47 == v48)
    return result;
  v49 = v66;
  while (2)
  {
    if (v47 >= v48)
    {
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    v72 = v47 * v75;
    v73 = result;
    sub_1BC3AFE24(v45 + v49 + v47 * v75, (uint64_t)v20);
    swift_bridgeObjectRetain();
    v50 = 0;
    v28 = v65;
    do
    {
      v52 = v50 + 1;
      if (__OFADD__(v50, 1))
      {
        __break(1u);
        goto LABEL_54;
      }
      sub_1BC3AFE24(v28, (uint64_t)v17);
      if (*((_QWORD *)v17 + 2) == *((_QWORD *)v20 + 2) && *((_QWORD *)v17 + 3) == *((_QWORD *)v20 + 3))
      {
        sub_1BC3AFE24((uint64_t)v17, (uint64_t)v14);
        sub_1BC3AFE24((uint64_t)v20, (uint64_t)v11);
      }
      else
      {
        v54 = sub_1BC62D574();
        sub_1BC3AFE24((uint64_t)v17, (uint64_t)v14);
        sub_1BC3AFE24((uint64_t)v20, (uint64_t)v11);
        if ((v54 & 1) == 0)
        {
          sub_1BC3AFE68((uint64_t)v14);
          sub_1BC3AFE68((uint64_t)v11);
          sub_1BC3AFE68((uint64_t)v17);
          goto LABEL_25;
        }
      }
      if (*v14 == *v11 && v14[1] == v11[1])
      {
        sub_1BC3AFE68((uint64_t)v14);
        sub_1BC3AFE68((uint64_t)v11);
        sub_1BC3AFE68((uint64_t)v17);
LABEL_37:
        swift_bridgeObjectRelease();
        sub_1BC3AFE68((uint64_t)v20);
        v49 = v66;
        result = v73;
        goto LABEL_48;
      }
      v51 = sub_1BC62D574();
      sub_1BC3AFE68((uint64_t)v14);
      sub_1BC3AFE68((uint64_t)v11);
      sub_1BC3AFE68((uint64_t)v17);
      if ((v51 & 1) != 0)
        goto LABEL_37;
LABEL_25:
      ++v50;
      v28 += v75;
    }
    while (v52 != v74);
    swift_bridgeObjectRelease();
    sub_1BC3AFE68((uint64_t)v20);
    result = v73;
    v49 = v66;
    if (v73 != v47)
    {
      if ((v73 & 0x8000000000000000) != 0)
        goto LABEL_58;
      v55 = *v68;
      v56 = *(_QWORD *)(*v68 + 16);
      if (v73 >= v56)
        goto LABEL_59;
      v57 = v55 + v66;
      v58 = v73 * v75;
      result = sub_1BC3AFE24(v55 + v66 + v73 * v75, v63);
      if (v47 >= v56)
        goto LABEL_60;
      sub_1BC3AFE24(v57 + v72, v64);
      result = swift_isUniquelyReferenced_nonNull_native();
      *v68 = v55;
      if ((result & 1) == 0)
      {
        result = sub_1BC4DE444(v55);
        v55 = result;
        *v68 = result;
      }
      v49 = v66;
      if (v73 >= *(_QWORD *)(v55 + 16))
        goto LABEL_61;
      result = sub_1BC5DE738(v64, v55 + v66 + v58);
      if (v47 >= *(_QWORD *)(*v68 + 16))
        goto LABEL_62;
      sub_1BC5DE738(v63, *v68 + v49 + v72);
      result = v73;
    }
    v59 = __OFADD__(result++, 1);
    if (v59)
      goto LABEL_57;
LABEL_48:
    v59 = __OFADD__(v47++, 1);
    if (v59)
      goto LABEL_56;
    v45 = *v68;
    v48 = *(_QWORD *)(*v68 + 16);
    if (v47 != v48)
      continue;
    return result;
  }
}

uint64_t sub_1BC5DE43C(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1BC3B5190(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC5DE5E4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ClinicalSharingSelectedDataTypesContext()
{
  return objc_opt_self();
}

uint64_t method lookup function for ClinicalSharingSelectedDataTypesContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItems.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItems.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItems.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItemsDidUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItemsDidUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItemsDidUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.__allocating_init(selectedItems:selectedItemsDidUpdate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectionStatesDidUpdate(for:selected:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.addDataType(_:byPassDataSourceUpdates:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.addDataTypes(_:byPassDataSourceUpdates:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t sub_1BC5DE6D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;

  sub_1BC357158(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BC5DE714()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5DE738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t AccountStatusSummaryTileSettingsManager.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  sub_1BC5DF494();
  return v2;
}

uint64_t static AccountStatusSummaryTileSettingsManager.Keys.accountId.getter()
{
  return 0x49746E756F636361;
}

uint64_t static AccountStatusSummaryTileSettingsManager.Keys.tileType.getter()
{
  return 0x65707954656C6974;
}

unint64_t static AccountStatusSummaryTileSettingsManager.Keys.suiteName.getter()
{
  return 0xD000000000000029;
}

uint64_t AccountStatusSummaryTileSettingsManager.init(healthStore:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = v2;
  v3 = a1;
  sub_1BC5DF494();

  return v1;
}

id sub_1BC5DE84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  id v8;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;

  v1 = v0;
  v2 = sub_1BC62B8F4();
  v4 = v3;
  swift_beginAccess();
  v5 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1BC558D94(v2, v4);
    if ((v7 & 1) != 0)
    {
      v8 = *(id *)(*(_QWORD *)(v5 + 56) + 8 * v6);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v10 = *(void **)(v1 + 16);
  v11 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  swift_bridgeObjectRetain();
  v12 = v10;
  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_initWithCategory_domainName_healthStore_, 2, v13, v12);

  swift_beginAccess();
  v15 = v14;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = 0x8000000000000000;
  sub_1BC48C884((uint64_t)v15, v2, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 24) = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v15;
}

uint64_t sub_1BC5DE9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  sub_1BC37458C();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC5DE84C();
  v6 = sub_1BC62CB24();

  v9[1] = v6;
  sub_1BC37460C();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A3620, (uint64_t (*)(uint64_t))sub_1BC37460C, MEMORY[0x1E0C96108]);
  sub_1BC62C02C();
  swift_release();
  sub_1BC347F0C(&qword_1ED6A35D8, (uint64_t (*)(uint64_t))sub_1BC37458C, MEMORY[0x1E0C95950]);
  v7 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v7;
}

uint64_t sub_1BC5DEB30@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1BC62A760();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
  *a2 = (_DWORD)result == 1;
  return result;
}

uint64_t sub_1BC5DEB7C(int a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void);
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  int v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89[2];

  v80 = a1;
  v82 = *v2;
  sub_1BC34B508(0, &qword_1EF439470, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96098]);
  v84 = *(_QWORD *)(v4 - 8);
  v85 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v73 - v5;
  sub_1BC5E0A8C(0, &qword_1EF439478, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v86 = *(_QWORD *)(v7 - 8);
  v87 = v7;
  MEMORY[0x1E0C80A78](v7);
  v83 = (char *)&v73 - v8;
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4EA0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v9);
  v79 = (char *)&v73 - v10;
  v11 = sub_1BC62BB34();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v73 - v16;
  sub_1BC384E68(0, &qword_1ED6A3D50, (void (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v73 - v19;
  v21 = sub_1BC62B918();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v81 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a2 + 16)
    || (v24 = sub_1BC558D94(0x49746E756F636361, 0xE900000000000064), (v25 & 1) == 0)
    || !*(_QWORD *)(a2 + 16))
  {
LABEL_8:
    sub_1BC62BAF8();
    swift_bridgeObjectRetain_n();
    v35 = sub_1BC62BB28();
    v36 = sub_1BC62CAC4();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v89[0] = v38;
      *(_DWORD *)v37 = 136315394;
      v78 = v12;
      v88 = v82;
      swift_getMetatypeMetadata();
      v39 = sub_1BC62C6E0();
      v77 = v11;
      v88 = sub_1BC4991F0(v39, v40, v89);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      v82 = v37 + 14;
      v88 = a2;
      sub_1BC3B9200();
      swift_bridgeObjectRetain_n();
      sub_1BC62D5D4();
      v41 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v42 = sub_1BC62C6E0();
      v44 = v43;
      swift_bridgeObjectRelease();
      v88 = sub_1BC4991F0(v42, v44, v89);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v35, v36, "[%s] failed to track account summary tile appearance, not enough information provided in userInfo: %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v38, -1, -1);
      MEMORY[0x1BCCF36A8](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v14, v77);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    v46 = v86;
    v45 = v87;
    v48 = v84;
    v47 = v85;
    v49 = v83;
    sub_1BC62BF48();
    sub_1BC35E44C();
    sub_1BC62BF30();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v47);
    sub_1BC5E0A4C(&qword_1EF439480, &qword_1EF439478, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
    v50 = sub_1BC62BFFC();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v45);
    return v50;
  }
  v75 = v21;
  v76 = v22;
  v26 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v24);
  v28 = *v26;
  v27 = v26[1];
  swift_bridgeObjectRetain();
  v29 = sub_1BC558D94(0x65707954656C6974, 0xE800000000000000);
  if ((v30 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v73 = v28;
  v74 = v27;
  v31 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v29);
  v33 = *v31;
  v32 = v31[1];
  swift_bridgeObjectRetain_n();
  sub_1BC62B900();
  v34 = v75;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v20, 1, v75) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC384EB4((uint64_t)v20, &qword_1ED6A3D50, (void (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
    goto LABEL_8;
  }
  v87 = v33;
  v78 = v12;
  v52 = v76;
  v53 = v81;
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v81, v20, v34);
  sub_1BC62BAF8();
  swift_bridgeObjectRetain_n();
  v54 = v32;
  swift_bridgeObjectRetain();
  v55 = sub_1BC62BB28();
  v56 = sub_1BC62CADC();
  v57 = v56;
  v58 = v52;
  if (os_log_type_enabled(v55, v56))
  {
    v59 = swift_slowAlloc();
    LODWORD(v86) = v57;
    v60 = v59;
    v61 = swift_slowAlloc();
    v77 = v11;
    v62 = v61;
    v89[0] = v61;
    *(_DWORD *)v60 = 136315906;
    v88 = v82;
    swift_getMetatypeMetadata();
    v63 = sub_1BC62C6E0();
    v88 = sub_1BC4991F0(v63, v64, v89);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 12) = 2080;
    swift_bridgeObjectRetain();
    v88 = sub_1BC4991F0(v87, v54, v89);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v60 + 22) = 1024;
    v65 = v80;
    LODWORD(v88) = v80 & 1;
    sub_1BC62CFF8();
    *(_WORD *)(v60 + 28) = 2080;
    swift_bridgeObjectRetain();
    v88 = sub_1BC4991F0(v73, v74, v89);
    v53 = v81;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BC30A000, v55, (os_log_type_t)v86, "[%s] setting account summary %s tile dismissal to %{BOOL}d for account %s", (uint8_t *)v60, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v62, -1, -1);
    MEMORY[0x1BCCF36A8](v60, -1, -1);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v17, v77);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v17, v11);
    v65 = v80;
  }
  v66 = sub_1BC5DE84C();
  v67 = (uint64_t)v79;
  v68 = v75;
  if ((v65 & 1) != 0)
  {
    sub_1BC62A754();
    v69 = sub_1BC62A760();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v67, 0, 1, v69);
  }
  else
  {
    v70 = sub_1BC62A760();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v67, 1, 1, v70);
  }
  v71 = sub_1BC62CB30();
  swift_bridgeObjectRelease();

  sub_1BC384EB4(v67, (unint64_t *)&qword_1ED6A4EA0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v88 = v71;
  v72 = MEMORY[0x1E0C960D8];
  sub_1BC5E0A8C(0, (unint64_t *)&qword_1EF429C38, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC5E0A4C(&qword_1EF429C40, (unint64_t *)&qword_1EF429C38, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v72, MEMORY[0x1E0C96108]);
  v50 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v53, v68);
  swift_release();
  return v50;
}

void sub_1BC5DF494()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD v23[2];
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  v3 = sub_1BC62BB34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v8 = (void *)sub_1BC62C650();
  v9 = objc_msgSend(v7, sel_initWithSuiteName_, v8);

  if (v9)
  {
    v10 = objc_msgSend(v9, sel_dictionaryRepresentation);
    v11 = sub_1BC62C548();

    if (*(_QWORD *)(v11 + 16))
    {
      sub_1BC62BAF8();
      swift_retain_n();
      v12 = sub_1BC62BB28();
      v13 = sub_1BC62CADC();
      if (os_log_type_enabled(v12, v13))
      {
        v26 = v2;
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v25 = v15;
        *(_DWORD *)v14 = 136446210;
        v23[1] = v14 + 4;
        v24 = v14;
        v27 = *v1;
        v28 = v15;
        sub_1BC5E13EC();
        v16 = sub_1BC62C6E0();
        v27 = sub_1BC4991F0(v16, v17, &v28);
        sub_1BC62CFF8();
        swift_release_n();
        v2 = v26;
        swift_bridgeObjectRelease();
        v18 = v13;
        v19 = v24;
        _os_log_impl(&dword_1BC30A000, v12, v18, "[%{public}s] Migrating account status summary tile dismissal states", v24, 0xCu);
        v20 = v25;
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v20, -1, -1);
        MEMORY[0x1BCCF36A8](v19, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v21 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      MEMORY[0x1E0C80A78](v21);
      v23[-2] = v1;
      v23[-1] = v2;
      sub_1BC5E1230(v11, (void (*)(uint64_t, uint64_t, _BYTE *))sub_1BC5E0AF8);
      swift_bridgeObjectRelease();
      v22 = (void *)sub_1BC62C650();
      objc_msgSend(v9, sel_hk_removeObjectsForKeysWithPrefix_, v22);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BC5DF7BC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  _QWORD v44[2];
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53[5];

  v53[4] = *(id *)MEMORY[0x1E0C80C00];
  v8 = sub_1BC62BB34();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62B918();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC62A760();
  v50 = *(_QWORD *)(v15 - 8);
  v51 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BC62C7B8();
  if ((result & 1) != 0)
  {
    sub_1BC375540(a3, (uint64_t)v53);
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v47 = v9;
      v48 = v8;
      swift_bridgeObjectRetain();
      v19 = sub_1BC62C74C();
      v20 = sub_1BC388DA8(v19, a1, a2);
      v22 = v21;
      v24 = v23;
      v26 = v25;
      swift_bridgeObjectRelease();
      v27 = MEMORY[0x1BCCF19D4](v20, v22, v24, v26);
      v29 = v28;
      swift_bridgeObjectRelease();
      sub_1BC62A640();
      (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0D2EDB8], v11);
      v30 = sub_1BC5DE84C();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v31 = (void *)sub_1BC62A700();
      v32 = (void *)sub_1BC62C650();
      v53[0] = 0;
      LODWORD(v24) = objc_msgSend(v30, sel_setDate_forKey_error_, v31, v32, v53);

      v33 = v53[0];
      if ((_DWORD)v24)
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v17, v51);
        return swift_bridgeObjectRelease();
      }
      else
      {
        v34 = v33;
        v35 = (void *)sub_1BC62A55C();

        swift_willThrow();
        v36 = v49;
        sub_1BC62BAF8();
        swift_retain_n();
        swift_bridgeObjectRetain();
        v37 = sub_1BC62BB28();
        v38 = sub_1BC62CAC4();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = swift_slowAlloc();
          v40 = (void *)swift_slowAlloc();
          v45 = v40;
          *(_DWORD *)v39 = 136446466;
          v44[1] = v39 + 4;
          v52 = *a4;
          v53[0] = v40;
          sub_1BC5E13EC();
          v46 = v35;
          v41 = sub_1BC62C6E0();
          v52 = sub_1BC4991F0(v41, v42, (uint64_t *)v53);
          sub_1BC62CFF8();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v39 + 12) = 2082;
          swift_bridgeObjectRetain();
          v52 = sub_1BC4991F0(v27, v29, (uint64_t *)v53);
          sub_1BC62CFF8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BC30A000, v37, v38, "[%{public}s] Failed to migrate account status summary tile dismissal for: %{public}s", (uint8_t *)v39, 0x16u);
          v43 = v45;
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v43, -1, -1);
          MEMORY[0x1BCCF36A8](v39, -1, -1);

        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v48);
        return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v17, v51);
      }
    }
  }
  return result;
}

uint64_t sub_1BC5DFC70()
{
  sub_1BC62C764();
  return 0x746E756F6363615BLL;
}

uint64_t sub_1BC5DFCC0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD);
  id v19;
  void (*v20)(char *, uint64_t);
  id v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *boxed_opaque_existential_1;
  void *v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  char v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  void *v57;
  id v58;
  id v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t result;
  _QWORD v68[2];
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  unsigned int v71;
  void (*v72)(char *, _QWORD, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint8_t *v84;
  _QWORD *v85;
  __int128 aBlock;
  __int128 v87;
  uint64_t (*v88)(uint64_t, void *);
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;

  v75 = a2;
  v92 = *MEMORY[0x1E0C80C00];
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC62A7B4();
  v79 = *(_QWORD *)(v10 - 8);
  v80 = v10;
  MEMORY[0x1E0C80A78](v10);
  v78 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62B918();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BC62A760();
  v82 = *(_QWORD *)(v16 - 8);
  v83 = v16;
  MEMORY[0x1E0C80A78](v16);
  v81 = (char *)v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A754();
  v18 = *(void (**)(_QWORD))(v13 + 104);
  v71 = *MEMORY[0x1E0D2EDC0];
  v72 = (void (*)(char *, _QWORD, uint64_t))v18;
  v18(v15);
  v19 = sub_1BC5DE84C();
  v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v73 = v15;
  v74 = v12;
  v70 = v20;
  v20(v15, v12);
  *(_QWORD *)&aBlock = 0;
  v21 = objc_msgSend(v19, sel_allValuesWithError_, &aBlock);

  v22 = (id)aBlock;
  if (!v21)
  {
    v55 = v22;
    v56 = v7;
    v57 = (void *)sub_1BC62A55C();

    swift_willThrow();
    sub_1BC62BAF8();
    v58 = v57;
    v59 = v57;
    v60 = sub_1BC62BB28();
    v61 = sub_1BC62CAC4();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      v63 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v63;
      *(_DWORD *)v62 = 136315138;
      v84 = v62 + 4;
      *(_QWORD *)&v90 = v57;
      v64 = v57;
      sub_1BC35E44C();
      v65 = sub_1BC62C6E0();
      *(_QWORD *)&v90 = sub_1BC4991F0(v65, v66, (uint64_t *)&aBlock);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v60, v61, "HKKeyValueDomain returned error when attempting to fetch ids of dismissed upgrade tiles: %s", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v63, -1, -1);
      MEMORY[0x1BCCF36A8](v62, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v81, v83);
  }
  v23 = (_QWORD *)sub_1BC62C548();

  if (a1 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    v24 = sub_1BC62D3B8();
  }
  else
  {
    v24 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v68[1] = v3;
  v69 = a3;
  if (!v24)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    v47 = v73;
    v48 = v74;
    v72(v73, v71, v74);
    v49 = sub_1BC5DE84C();
    v70(v47, v48);
    v50 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v51 = swift_allocObject();
    v52 = v75;
    v53 = v69;
    *(_QWORD *)(v51 + 16) = v75;
    *(_QWORD *)(v51 + 24) = v53;
    v88 = sub_1BC5E146C;
    v89 = v51;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v87 = sub_1BC3EFECC;
    *((_QWORD *)&v87 + 1) = &block_descriptor_70;
    v54 = _Block_copy(&aBlock);
    sub_1BC38F084(v52);
    swift_release();
    objc_msgSend(v49, sel_setValuesWithDictionary_completion_, v50, v54);
    _Block_release(v54);

    return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v81, v83);
  }
  v77 = a1 & 0xC000000000000001;
  v25 = 4;
  v76 = a1;
  while (1)
  {
    if (v77)
      v26 = (_QWORD *)MEMORY[0x1BCCF24CC](v25 - 4, a1);
    else
      v26 = *(id *)(a1 + 8 * v25);
    v3 = v26;
    if (__OFADD__(v25 - 4, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v84 = (uint8_t *)(v25 - 3);
    v27 = v24;
    v28 = v83;
    v91 = v83;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v90);
    (*(void (**)(uint64_t *, char *, uint64_t))(v82 + 16))(boxed_opaque_existential_1, v81, v28);
    v30 = v3;
    v31 = objc_msgSend(v3, sel_identifier);
    v32 = v78;
    sub_1BC62A79C();

    a3 = sub_1BC62A778();
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v32, v80);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v85 = v23;
    v3 = v23;
    a1 = sub_1BC558D94(a3, v34);
    v37 = v23[2];
    v38 = (v36 & 1) == 0;
    v39 = v37 + v38;
    if (__OFADD__(v37, v38))
      goto LABEL_30;
    v40 = v36;
    if (v23[3] < v39)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v23 = v85;
      if ((v36 & 1) != 0)
        goto LABEL_6;
    }
    else
    {
      v3 = &v85;
      sub_1BC5A5924();
      v23 = v85;
      if ((v40 & 1) != 0)
      {
LABEL_6:
        sub_1BC35E088((_OWORD *)(v23[7] + 32 * a1), &aBlock);
        sub_1BC35E088(&v90, (_OWORD *)(v23[7] + 32 * a1));
        goto LABEL_7;
      }
    }
LABEL_19:
    v23[(a1 >> 6) + 8] |= 1 << a1;
    v43 = (uint64_t *)(v23[6] + 16 * a1);
    *v43 = a3;
    v43[1] = v34;
    sub_1BC35E088(&v90, (_OWORD *)(v23[7] + 32 * a1));
    v44 = v23[2];
    v45 = __OFADD__(v44, 1);
    v46 = v44 + 1;
    if (v45)
      goto LABEL_31;
    v23[2] = v46;
    aBlock = 0u;
    v87 = 0u;
    swift_bridgeObjectRetain();
LABEL_7:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1BC39BD2C((uint64_t)&aBlock);
    ++v25;
    v24 = v27;
    a1 = v76;
    if (v84 == (uint8_t *)v27)
      goto LABEL_23;
  }
  sub_1BC3C3F38(v39, isUniquelyReferenced_nonNull_native);
  v3 = v85;
  v41 = sub_1BC558D94(a3, v34);
  if ((v40 & 1) == (v42 & 1))
  {
    a1 = v41;
    v23 = v85;
    if ((v40 & 1) != 0)
      goto LABEL_6;
    goto LABEL_19;
  }
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC5E0440(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v7 = sub_1BC62BB34();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v12 = a2;
    sub_1BC62BAF8();
    v13 = a2;
    v14 = a2;
    v15 = sub_1BC62BB28();
    v16 = sub_1BC62CAC4();
    if (os_log_type_enabled(v15, v16))
    {
      v26 = a4;
      v17 = swift_slowAlloc();
      v25 = v7;
      v18 = (uint8_t *)v17;
      v19 = swift_slowAlloc();
      v27 = (uint64_t)a2;
      v28 = v19;
      *(_DWORD *)v18 = 136315138;
      v24[1] = v18 + 4;
      v20 = a2;
      sub_1BC35E44C();
      v21 = sub_1BC62C6E0();
      v27 = sub_1BC4991F0(v21, v22, &v28);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v15, v16, "HKKeyValueDomain returned error when attempting to set ids of dismissed upgrade tiles: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v19, -1, -1);
      MEMORY[0x1BCCF36A8](v18, -1, -1);

      result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v25);
    }
    else
    {

      result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
  }
  if (a3)
  {
    v23 = swift_retain();
    a3(v23);
    return sub_1BC36D770((uint64_t)a3);
  }
  return result;
}

_QWORD *sub_1BC5E0674(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  os_log_t v28;
  void *v29;
  uint64_t v31;
  os_log_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36[2];

  v36[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1BC62B918();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC5DE84C();
  v36[0] = 0;
  v11 = objc_msgSend(v10, sel_allValuesWithError_, v36);

  v12 = v36[0];
  if (v11)
  {
    v13 = sub_1BC62C548();
    v14 = v12;

    v15 = sub_1BC3D6C54(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v36[0];
    v17 = (void *)sub_1BC62A55C();

    swift_willThrow();
    sub_1BC62BAF8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    v18 = v17;
    v19 = v17;
    v20 = sub_1BC62BB28();
    v21 = sub_1BC62CAC4();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v33 = (void *)swift_slowAlloc();
      v36[0] = v33;
      *(_DWORD *)v22 = 136315394;
      v34 = v6;
      v32 = v20;
      v23 = sub_1BC62B90C();
      v35 = sub_1BC4991F0(v23, v24, (uint64_t *)v36);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      *(_WORD *)(v22 + 12) = 2080;
      v35 = (uint64_t)v17;
      v25 = v17;
      sub_1BC35E44C();
      v26 = sub_1BC62C6E0();
      v35 = sub_1BC4991F0(v26, v27, (uint64_t *)v36);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      v28 = v32;
      _os_log_impl(&dword_1BC30A000, v32, v21, "HKKeyValueDomain error when attempting to fetch ids of dismissed tiles of type %s: %s", (uint8_t *)v22, 0x16u);
      v29 = v33;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v29, -1, -1);
      MEMORY[0x1BCCF36A8](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v34);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v15;
}

uint64_t AccountStatusSummaryTileSettingsManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AccountStatusSummaryTileSettingsManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5E0A4C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC5E0A8C(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC5E0A8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC35E44C();
    v7 = a3(a1, MEMORY[0x1E0DEE9C0] + 8, v6, MEMORY[0x1E0DEDB38]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC5E0AF8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BC5DF7BC(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

unint64_t sub_1BC5E0B04(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = a5[7] + 72 * result;
  *(_QWORD *)(v6 + 64) = *(_QWORD *)(a4 + 64);
  v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = v7;
  v8 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v8;
  v9 = a5[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a5[2] = v11;
  return result;
}

unint64_t sub_1BC5E0B68(unint64_t result, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a3[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(double *)(a3[6] + v4) = a4;
  *(_QWORD *)(a3[7] + v4) = a2;
  v5 = a3[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a3[2] = v7;
  return result;
}

unint64_t sub_1BC5E0BB0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 32 * result);
  *v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  *(_QWORD *)(a7[7] + 8 * result) = a6;
  v8 = a7[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a7[2] = v10;
  return result;
}

uint64_t sub_1BC5E0C00(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1BC62A7B4();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = (_OWORD *)(a4[7] + 48 * a1);
  v12 = a3[2];
  v13 = *a3;
  v11[1] = a3[1];
  v11[2] = v12;
  *v11 = v13;
  v14 = a4[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a4[2] = v16;
  return result;
}

_OWORD *sub_1BC5E0CAC(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BC35E088(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_1BC5E0D14(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = a4[6] + 40 * result;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

_OWORD *sub_1BC5E0D70(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1BC35E088(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_1BC5E0DD4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for BrowseCategory();
  result = sub_1BC35F080(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_1BC5E0E64(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1BC5E0EAC(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_1BC5E0EF4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for BrowseCategory();
  result = sub_1BC35F080(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1);
  v11 = a4[7] + 72 * a1;
  *(_QWORD *)(v11 + 64) = *(_QWORD *)(a3 + 64);
  v12 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v11 + 48) = v12;
  v13 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v13;
  v14 = a4[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a4[2] = v16;
  return result;
}

uint64_t sub_1BC5E0FA0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a7[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a7[6] + 32 * a1;
  *(_QWORD *)v8 = a2;
  *(_QWORD *)(v8 + 8) = a3;
  *(_QWORD *)(v8 + 16) = a4;
  *(_BYTE *)(v8 + 24) = a5 & 1;
  result = sub_1BC5E15A0(a6, a7[7] + 48 * a1);
  v10 = a7[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a7[2] = v12;
  return result;
}

uint64_t sub_1BC5E1018(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1BC62A7B4();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = a4[7] + 72 * a1;
  *(_QWORD *)(v11 + 64) = *(_QWORD *)(a3 + 64);
  v12 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v11 + 48) = v12;
  v13 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v13;
  v14 = a4[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a4[2] = v16;
  return result;
}

unint64_t sub_1BC5E10CC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _OWORD *a6, _QWORD *a7)
{
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = a7[6] + 32 * result;
  *(_QWORD *)v7 = a2;
  *(_QWORD *)(v7 + 8) = a3;
  *(_QWORD *)(v7 + 16) = a4;
  *(_BYTE *)(v7 + 24) = a5 & 1;
  v8 = (_OWORD *)(a7[7] + 48 * result);
  v9 = a6[1];
  *v8 = *a6;
  v8[1] = v9;
  v8[2] = a6[2];
  v10 = a7[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a7[2] = v12;
  return result;
}

unint64_t sub_1BC5E1134(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = a4[6] + 72 * result;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v6;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v7 = a4[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a4[2] = v9;
  return result;
}

unint64_t sub_1BC5E1194(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_1BC5E11D8(unint64_t result, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  v4 = (_OWORD *)(a4[7] + 48 * result);
  v5 = a3[1];
  *v4 = *a3;
  v4[1] = v5;
  v4[2] = a3[2];
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_1BC5E1230(uint64_t a1, void (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD v18[2];
  _BYTE v19[32];
  uint64_t v20;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v20 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v20 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v20 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    sub_1BC375540(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v19);
    v18[0] = v13;
    v18[1] = v14;
    swift_bridgeObjectRetain();
    a2(v13, v14, v19);
    result = sub_1BC5E14F8((uint64_t)v18);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v20 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1BC5E13EC()
{
  unint64_t result;

  result = qword_1ED6A3F28;
  if (!qword_1ED6A3F28)
  {
    type metadata accessor for AccountStatusSummaryTileSettingsManager();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A3F28);
  }
  return result;
}

uint64_t type metadata accessor for AccountStatusSummaryTileSettingsManager()
{
  return objc_opt_self();
}

uint64_t sub_1BC5E1440()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5E146C(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC5E0440(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t block_copy_helper_67(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_67()
{
  return swift_release();
}

uint64_t method lookup function for AccountStatusSummaryTileSettingsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.__allocating_init(healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.shouldShowAccountStatusSummaryTile(for:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.setAccountStatusSummaryTileAppearance(dismissed:userInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.migrateFromUserDefault()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.key(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.dismissUpgradeTiles(for:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.previouslyDismissedAccountIDs(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

ValueMetadata *type metadata accessor for AccountStatusSummaryTileSettingsManager.Keys()
{
  return &type metadata for AccountStatusSummaryTileSettingsManager.Keys;
}

uint64_t sub_1BC5E14F8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC5E1534();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC5E1534()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6A3F30)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6A3F30);
  }
}

uint64_t sub_1BC5E15A0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy48_8(a2, a1);
  return a2;
}

uint64_t static HealthRecordsMigrator.currentVersion.getter()
{
  return 1;
}

id HealthRecordsMigrator.__allocating_init(healthStore:)(void *a1)
{
  objc_class *v1;
  id v3;
  uint64_t v4;
  id v5;
  id v6;

  v3 = objc_allocWithZone(v1);
  if (qword_1ED6A4898 != -1)
    swift_once();
  v4 = qword_1ED6A7228;
  v5 = objc_allocWithZone(v1);
  swift_retain();
  v6 = sub_1BC5E2780(a1, v4);

  swift_release();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v6;
}

id HealthRecordsMigrator.init(healthStore:)(void *a1)
{
  objc_class *ObjectType;
  uint64_t v3;
  id v4;
  id v5;

  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_1ED6A4898 != -1)
    swift_once();
  v3 = qword_1ED6A7228;
  v4 = objc_allocWithZone(ObjectType);
  swift_retain();
  v5 = sub_1BC5E2780(a1, v3);

  swift_release();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t HealthRecordsMigrator.migrateIfNeeded(completion:)(uint64_t (*a1)(_QWORD), uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  char *v10;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;

  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)&v2[OBJC_IVAR___HRHealthRecordsMigrator_searchIndexController])
  {
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = v2;
    v9[3] = a1;
    v9[4] = a2;
    v10 = v2;
    swift_retain();
    sub_1BC5E1BBC((uint64_t)sub_1BC5E2A40, (uint64_t)v9);
    return swift_release();
  }
  else
  {
    sub_1BC62BB10();
    v12 = sub_1BC62BB28();
    v13 = sub_1BC62CADC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1BC30A000, v12, v13, "Unable to perform health record search index migration since private SearchIndex is unsupported for non-sandbox process", v14, 2u);
      MEMORY[0x1BCCF36A8](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return a1(0);
  }
}

void sub_1BC5E1978(void *a1, char a2, char *a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint8_t *v23;
  _QWORD v24[2];

  v10 = sub_1BC62BB34();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v24[1] = a1;
    v15 = a1;
    sub_1BC35E44C();
    swift_willThrowTypedImpl();
    v16 = a1;
    a4(a1);
    sub_1BC407FD0(a1, 1);
    sub_1BC407FD0(a1, 1);
  }
  else if (a1 == (void *)1)
  {
    ((void (*)(_QWORD, __n128))a4)(0, v12);
  }
  else
  {
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = a4;
    v17[3] = a5;
    v17[4] = a3;
    if (*(_QWORD *)&a3[OBJC_IVAR___HRHealthRecordsMigrator_searchIndexController])
    {
      swift_retain_n();
      v18 = a3;
      swift_retain();
      sub_1BC6256CC((uint64_t)sub_1BC5E2D24, (uint64_t)v17);
      swift_release();
      swift_release();
    }
    else
    {
      swift_retain_n();
      v19 = a3;
      sub_1BC62BB10();
      v20 = sub_1BC62BB28();
      v21 = sub_1BC62CADC();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v24[0] = v19;
        v23 = v22;
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_1BC30A000, v20, v21, "Unable to perform health record search index migration since private SearchIndex is unsupported for non-sandbox process", v22, 2u);
        MEMORY[0x1BCCF36A8](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      sub_1BC5E1E20(1, (uint64_t)a4, a5);
      swift_release();
    }
    swift_release();

  }
}

void sub_1BC5E1BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BB10();
  v10 = sub_1BC62BB28();
  v11 = sub_1BC62CADC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1BC30A000, v10, v11, "Fetching DataVersion...", v12, 2u);
    MEMORY[0x1BCCF36A8](v12, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = *(void **)(v3 + OBJC_IVAR___HRHealthRecordsMigrator_keyValueDomain);
  v14 = (void *)sub_1BC62C650();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  aBlock[4] = sub_1BC5E2C68;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC4E2FCC;
  aBlock[3] = &block_descriptor_71;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_numberForKey_completion_, v14, v16);
  _Block_release(v16);

}

void sub_1BC5E1DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_1BC62A550();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_1BC5E1E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t aBlock[6];

  v4 = v3;
  v8 = sub_1BC62BB34();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BB10();
  v12 = sub_1BC62BB28();
  v13 = sub_1BC62CADC();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v31 = a2;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v30 = v3;
    v17 = v16;
    v32 = a1;
    aBlock[0] = v16;
    v28 = v8;
    v29 = a3;
    *(_DWORD *)v15 = 136446210;
    v18 = sub_1BC62D52C();
    v32 = sub_1BC4991F0(v18, v19, aBlock);
    a3 = v29;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v12, v13, "Setting DataVersion to %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    v20 = v17;
    v4 = v30;
    MEMORY[0x1BCCF36A8](v20, -1, -1);
    v21 = v15;
    a2 = v31;
    MEMORY[0x1BCCF36A8](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v22 = *(void **)(v4 + OBJC_IVAR___HRHealthRecordsMigrator_keyValueDomain);
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  v24 = (void *)sub_1BC62C650();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a2;
  *(_QWORD *)(v25 + 24) = a3;
  aBlock[4] = (uint64_t)sub_1BC5E2D54;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC3EFECC;
  aBlock[3] = (uint64_t)&block_descriptor_19_2;
  v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_setNumber_forKey_completion_, v23, v24, v26);
  _Block_release(v26);

}

void sub_1BC5E20D4(void *a1, void *a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD);
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v8 = sub_1BC62BB34();
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v8).n128_u64[0];
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    v13 = objc_msgSend(a1, sel_integerValue, v10);
  else
    v13 = 0;
  if (a2)
    v14 = a2;
  else
    v14 = v13;
  v15 = a2;
  sub_1BC62BB10();
  sub_1BC5E2C88(v14, a2 != 0);
  sub_1BC5E2C88(v14, a2 != 0);
  v16 = sub_1BC62BB28();
  v17 = sub_1BC62CADC();
  if (os_log_type_enabled(v16, v17))
  {
    v28 = a4;
    v18 = swift_slowAlloc();
    v29 = a3;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v27 = v9;
    v21 = v20;
    v32 = v20;
    v26 = v8;
    *(_DWORD *)v19 = 136446210;
    v25 = v19 + 4;
    v30 = (uint64_t)v14;
    v31 = a2 != 0;
    sub_1BC5E2C88(v14, a2 != 0);
    sub_1BC5E2C94();
    v22 = sub_1BC62C6F8();
    v30 = sub_1BC4991F0(v22, v23, &v32);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC407FD0(v14, a2 != 0);
    sub_1BC407FD0(v14, a2 != 0);
    _os_log_impl(&dword_1BC30A000, v16, v17, "Fetched DataVersion: %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v21, -1, -1);
    v24 = v19;
    a3 = v29;
    MEMORY[0x1BCCF36A8](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v26);
  }
  else
  {
    sub_1BC407FD0(v14, a2 != 0);
    sub_1BC407FD0(v14, a2 != 0);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  a3(v14, a2 != 0);
  sub_1BC407FD0(v14, a2 != 0);
}

void sub_1BC5E235C(int a1, void *a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  _QWORD v23[2];
  void (*v24)(_QWORD);
  int v25;
  uint64_t v26;
  uint64_t v27;

  LODWORD(v7) = a1;
  v8 = sub_1BC62BB34();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BB10();
  v12 = a2;
  v13 = a2;
  v14 = sub_1BC62BB28();
  v15 = sub_1BC62CADC();
  if (!os_log_type_enabled(v14, v15))
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v21 = a2;
    if (a2)
      goto LABEL_10;
    goto LABEL_8;
  }
  v25 = (int)v7;
  v23[1] = a4;
  v24 = a3;
  v7 = (uint8_t *)swift_slowAlloc();
  v16 = swift_slowAlloc();
  v27 = v16;
  *(_DWORD *)v7 = 136446210;
  v17 = (uint64_t)a2;
  if (!a2)
  {
    v17 = 0;
    if ((v25 & 1) == 0)
    {
      sub_1BC514B90();
      v17 = swift_allocError();
    }
  }
  v26 = v17;
  v18 = a2;
  sub_1BC357158(0, (unint64_t *)&unk_1ED6A4E80, (uint64_t (*)(uint64_t))sub_1BC35E44C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v19 = sub_1BC62C6F8();
  v26 = sub_1BC4991F0(v19, v20, &v27);
  sub_1BC62CFF8();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_1BC30A000, v14, v15, "Set DataVersion: %{public}s", v7, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1BCCF36A8](v16, -1, -1);
  MEMORY[0x1BCCF36A8](v7, -1, -1);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  a3 = v24;
  LOBYTE(v7) = v25;
  v21 = a2;
  if (!a2)
  {
LABEL_8:
    if ((v7 & 1) == 0)
    {
      sub_1BC514B90();
      v21 = (void *)swift_allocError();
    }
  }
LABEL_10:
  v22 = a2;
  a3(v21);

}

id HealthRecordsMigrator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HealthRecordsMigrator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HealthRecordsMigrator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC5E271C(void *a1, void (*a2)(void *), uint64_t a3)
{
  id v5;

  if (a1)
  {
    v5 = a1;
    a2(a1);

  }
  else
  {
    sub_1BC5E1E20(1, (uint64_t)a2, a3);
  }
}

id sub_1BC5E2780(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  objc_class *ObjectType;
  objc_super v25;
  uint64_t v26;

  v22 = a1;
  v23 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1BC62CC68();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62CC20();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1BC62C4AC();
  MEMORY[0x1E0C80A78](v9);
  v21 = OBJC_IVAR___HRHealthRecordsMigrator_queue;
  v20 = sub_1BC35A280();
  v10 = v2;
  sub_1BC62C494();
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1BC5E2D5C();
  sub_1BC357158(0, &qword_1ED6A58B0, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC4E65CC();
  sub_1BC62D0A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v3);
  *(_QWORD *)&v2[v21] = sub_1BC62CCA4();
  v11 = &v10[OBJC_IVAR___HRHealthRecordsMigrator_healthRecordsKeyValueDomain];
  *(_QWORD *)v11 = 0xD000000000000020;
  *((_QWORD *)v11 + 1) = 0x80000001BC666C20;
  v12 = &v10[OBJC_IVAR___HRHealthRecordsMigrator_dataVersionKey];
  *(_QWORD *)v12 = 0x7372655661746164;
  *((_QWORD *)v12 + 1) = 0xEB000000006E6F69;
  v13 = v22;
  v14 = v23;
  *(_QWORD *)&v10[OBJC_IVAR___HRHealthRecordsMigrator_healthStore] = v22;
  *(_QWORD *)&v10[OBJC_IVAR___HRHealthRecordsMigrator_searchIndexController] = v14;
  v15 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  swift_retain();
  v16 = v13;
  v17 = (void *)sub_1BC62C650();
  v18 = objc_msgSend(v15, sel_initWithCategory_domainName_healthStore_, 1, v17, v16);

  *(_QWORD *)&v10[OBJC_IVAR___HRHealthRecordsMigrator_keyValueDomain] = v18;
  v25.receiver = v10;
  v25.super_class = ObjectType;
  return objc_msgSendSuper2(&v25, sel_init);
}

void sub_1BC5E2A40(void *a1, char a2)
{
  uint64_t v2;

  sub_1BC5E1978(a1, a2 & 1, *(char **)(v2 + 16), *(void (**)(void *))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t type metadata accessor for HealthRecordsMigrator()
{
  return objc_opt_self();
}

uint64_t method lookup function for HealthRecordsMigrator()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BC5E2A7C(char *a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;

  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  if (*(_QWORD *)&a1[OBJC_IVAR___HRHealthRecordsMigrator_searchIndexController])
  {
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a1;
    v9[3] = sub_1BC5E2C5C;
    v9[4] = v8;
    _Block_copy(a2);
    v10 = a1;
    swift_retain();
    sub_1BC5E1BBC((uint64_t)sub_1BC5E2DB0, (uint64_t)v9);
    swift_release();
    return swift_release();
  }
  else
  {
    _Block_copy(a2);
    sub_1BC62BB10();
    v12 = sub_1BC62BB28();
    v13 = sub_1BC62CADC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1BC30A000, v12, v13, "Unable to perform health record search index migration since private SearchIndex is unsupported for non-sandbox process", v14, 2u);
      MEMORY[0x1BCCF36A8](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    a2[2](a2, 0);
    return swift_release();
  }
}

uint64_t sub_1BC5E2C38()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1BC5E2C5C(uint64_t a1)
{
  uint64_t v1;

  sub_1BC5E1DD4(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BC5E2C68(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC5E20D4(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t block_copy_helper_68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_68()
{
  return swift_release();
}

id sub_1BC5E2C88(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

void sub_1BC5E2C94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4830)
  {
    sub_1BC35E44C();
    v0 = sub_1BC62D6C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4830);
  }
}

uint64_t sub_1BC5E2CF8()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BC5E2D24(void *a1)
{
  uint64_t v1;

  sub_1BC5E271C(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC5E2D30()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC5E2D54(int a1, void *a2)
{
  uint64_t v2;

  sub_1BC5E235C(a1, a2, *(void (**)(_QWORD))(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1BC5E2D5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A58E8;
  if (!qword_1ED6A58E8)
  {
    v1 = sub_1BC62CC20();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A58E8);
  }
  return result;
}

uint64_t sub_1BC5E2DB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v4);
  v6 = (id *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35EBE0(v2 + *(int *)(v4 + 36), (uint64_t)v9, v10);
  sub_1BC35EBE0(v2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
  v11 = sub_1BC62A760();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    v13 = objc_msgSend(v6[1], sel_modificationDate);
    sub_1BC62A724();

    sub_1BC348D78((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC34631C);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v9, v11);
  }
  return sub_1BC348D78((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
}

void sub_1BC5E2F14(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v22;
  double v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 v66;

  v61 = a2;
  sub_1BC34631C();
  *(_QWORD *)&v23 = MEMORY[0x1E0C80A78](v22).n128_u64[0];
  v60 = (uint64_t)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1;
  v26 = objc_msgSend(a1, sel_categoryTypes, v23);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  v27 = sub_1BC62C878();

  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    v28 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v64 = a6;
  v65 = a7;
  v62 = a4;
  v63 = a5;
  if (v28)
  {
    if ((v27 & 0xC000000000000001) != 0)
    {
      v29 = (id)MEMORY[0x1BCCF24CC](0, v27);
    }
    else
    {
      if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v29 = *(id *)(v27 + 32);
    }
    v30 = v29;
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v30, sel_integerValue);

  }
  else
  {
    swift_bridgeObjectRelease();
    v31 = 0;
  }
  v59 = a14;
  v58 = a13;
  v57 = a12;
  v55 = a10;
  v56 = a11;
  DisplayCategory.Kind.init(rawValue:)((Swift::Int)v31);
  v54 = v66;
  v32 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v33 = objc_msgSend(v32, sel_preferredLocalizations);

  v34 = sub_1BC62C878();
  v35 = v25;
  v36 = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v34);
  swift_bridgeObjectRelease();
  v37 = sub_1BC62A760();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(a3, 1, v37) == 1)
  {
    v39 = objc_msgSend(v25, sel_modificationDate);
    v40 = a8;
    v41 = a3;
    v42 = v39;
    v43 = v60;
    sub_1BC62A724();

    a3 = v41;
    a8 = v40;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v43, 0, 1, v37);
  }
  else
  {
    v43 = v60;
    sub_1BC35EBE0(a3, v60, (uint64_t (*)(_QWORD))sub_1BC34631C);
  }
  v44 = v61;
  v45 = v54;
  if (v54 == 11)
    v45 = 0;
  *(_BYTE *)a9 = v45;
  *(_QWORD *)(a9 + 8) = v35;
  *(_QWORD *)(a9 + 16) = v44;
  *(Swift::String *)(a9 + 24) = v36;
  *(_QWORD *)(a9 + 40) = v62;
  v46 = (int *)type metadata accessor for UserDomainConceptViewData();
  sub_1BC3EFC38(v43, a9 + v46[9]);
  *(_QWORD *)(a9 + v46[10]) = v63;
  v47 = (_QWORD *)(a9 + v46[11]);
  v48 = v65;
  *v47 = v64;
  v47[1] = v48;
  v49 = (_QWORD *)(a9 + v46[12]);
  v50 = v55;
  *v49 = a8;
  v49[1] = v50;
  v51 = a9 + v46[13];
  *(_QWORD *)v51 = v56;
  *(_BYTE *)(v51 + 8) = v57 & 1;
  v52 = a9 + v46[14];
  *(_QWORD *)v52 = v58;
  *(_BYTE *)(v52 + 8) = v59 & 1;
  sub_1BC348D78(a3, (uint64_t (*)(_QWORD))sub_1BC34631C);
}

uint64_t UserDomainConceptViewData.meaningfulDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UserDomainConceptViewData();
  return sub_1BC35EBE0(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(_QWORD))sub_1BC34631C);
}

uint64_t UserDomainConceptViewData.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  int *v10;
  void *v11;
  id v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_1BC62A760();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62D67C();
  v9 = *(id *)(v0 + 8);
  sub_1BC62CEC0();

  sub_1BC62D67C();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D67C();
  v10 = (int *)type metadata accessor for UserDomainConceptViewData();
  sub_1BC35EBE0(v1 + v10[9], (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BC34631C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1BC62D688();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1BC62D688();
    sub_1BC347F0C(&qword_1EF4288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1BC62C5CC();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v11 = *(void **)(v1 + v10[10]);
  sub_1BC62D688();
  if (v11)
  {
    v12 = v11;
    sub_1BC62CEC0();

  }
  if (*(_QWORD *)(v1 + v10[11] + 8))
  {
    sub_1BC62D688();
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC62D688();
  }
  if (*(_QWORD *)(v1 + v10[12] + 8))
  {
    sub_1BC62D688();
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC62D688();
  }
  if (*(_BYTE *)(v1 + v10[13] + 8) == 1)
  {
    sub_1BC62D688();
  }
  else
  {
    sub_1BC62D688();
    sub_1BC62D67C();
  }
  if (*(_BYTE *)(v1 + v10[14] + 8) == 1)
    return sub_1BC62D688();
  sub_1BC62D688();
  return sub_1BC62D67C();
}

uint64_t UserDomainConceptViewData.hashValue.getter()
{
  sub_1BC62D670();
  UserDomainConceptViewData.hash(into:)();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5E3638()
{
  sub_1BC62D670();
  UserDomainConceptViewData.hash(into:)();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5E3678()
{
  sub_1BC62D670();
  UserDomainConceptViewData.hash(into:)();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5E36B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC35EBE0(v2 + *(int *)(a1 + 36), a2, (uint64_t (*)(_QWORD))sub_1BC34631C);
}

uint64_t _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t result;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  int *v37;
  id v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  _QWORD *v56;
  int v57;
  uint64_t v58;
  _QWORD *v59;
  char v60;
  _QWORD *v61;
  char v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;

  v4 = sub_1BC62A760();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC348D18();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v63 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v63 - v19;
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2)
    return 0;
  v66 = v4;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  if ((sub_1BC62CEB4() & 1) == 0 || a1[2] != a2[2])
    return 0;
  if (a1[3] != a2[3] || a1[4] != a2[4])
  {
    v21 = sub_1BC62D574();
    result = 0;
    if ((v21 & 1) == 0)
      return result;
  }
  if (a1[5] != a2[5])
    return 0;
  v23 = (int *)type metadata accessor for UserDomainConceptViewData();
  v24 = v23[9];
  v64 = a1;
  sub_1BC35EBE0((uint64_t)a1 + v24, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BC34631C);
  v25 = v23[9];
  v65 = a2;
  sub_1BC35EBE0((uint64_t)a2 + v25, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC34631C);
  v26 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1BC35EBE0((uint64_t)v20, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC34631C);
  sub_1BC35EBE0((uint64_t)v18, v26, (uint64_t (*)(_QWORD))sub_1BC34631C);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v28 = v66;
  if (v27((uint64_t)v11, 1, v66) == 1)
  {
    sub_1BC348D78((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC34631C);
    sub_1BC348D78((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BC34631C);
    if (v27(v26, 1, v28) == 1)
    {
      sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC34631C);
      goto LABEL_17;
    }
LABEL_13:
    sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC348D18);
    return 0;
  }
  sub_1BC35EBE0((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC34631C);
  if (v27(v26, 1, v28) == 1)
  {
    sub_1BC348D78((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC34631C);
    sub_1BC348D78((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BC34631C);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v28);
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v26, v28);
  sub_1BC347F0C(&qword_1EF428D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v29 = sub_1BC62C644();
  v30 = *(void (**)(char *, uint64_t))(v5 + 8);
  v30(v7, v28);
  sub_1BC348D78((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC34631C);
  sub_1BC348D78((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BC34631C);
  v30(v15, v28);
  sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC34631C);
  if ((v29 & 1) == 0)
    return 0;
LABEL_17:
  v31 = v23[10];
  v32 = v64;
  v33 = *(void **)((char *)v64 + v31);
  v34 = *(void **)((char *)v65 + v31);
  if (v33)
  {
    if (!v34)
      return 0;
    sub_1BC34B6A0(0, &qword_1EF4302F8);
    v35 = v34;
    v36 = v33;
    v37 = v23;
    v38 = v36;
    v39 = sub_1BC62CEB4();

    v23 = v37;
    if ((v39 & 1) == 0)
      return 0;
  }
  else if (v34)
  {
    return 0;
  }
  v40 = v23[11];
  v41 = (_QWORD *)((char *)v32 + v40);
  v42 = *(_QWORD *)((char *)v32 + v40 + 8);
  v43 = v65;
  v44 = (_QWORD *)((char *)v65 + v40);
  v45 = v44[1];
  if (v42)
  {
    if (!v45)
      return 0;
    if (*v41 != *v44 || v42 != v45)
    {
      v46 = sub_1BC62D574();
      result = 0;
      if ((v46 & 1) == 0)
        return result;
    }
  }
  else if (v45)
  {
    return 0;
  }
  v47 = v23[12];
  v48 = (_QWORD *)((char *)v32 + v47);
  v49 = *(_QWORD *)((char *)v32 + v47 + 8);
  v50 = (_QWORD *)((char *)v43 + v47);
  v51 = v50[1];
  if (!v49)
  {
    if (v51)
      return 0;
LABEL_36:
    v53 = v23[13];
    v54 = (_QWORD *)((char *)v32 + v53);
    v55 = *((_BYTE *)v32 + v53 + 8);
    v56 = (_QWORD *)((char *)v43 + v53);
    v57 = *((unsigned __int8 *)v43 + v53 + 8);
    if ((v55 & 1) != 0)
    {
      if (v57)
        goto LABEL_42;
    }
    else
    {
      if (*v54 != *v56)
        LOBYTE(v57) = 1;
      if ((v57 & 1) == 0)
      {
LABEL_42:
        v58 = v23[14];
        v59 = (_QWORD *)((char *)v32 + v58);
        v60 = *((_BYTE *)v32 + v58 + 8);
        v61 = (_QWORD *)((char *)v43 + v58);
        v62 = *((_BYTE *)v43 + v58 + 8);
        if ((v60 & 1) != 0)
        {
          if ((v62 & 1) != 0)
            return 1;
        }
        else
        {
          if (*v59 != *v61)
            v62 = 1;
          if ((v62 & 1) == 0)
            return 1;
        }
      }
    }
    return 0;
  }
  if (!v51)
    return 0;
  if (*v48 == *v50 && v49 == v51)
    goto LABEL_36;
  v52 = sub_1BC62D574();
  result = 0;
  if ((v52 & 1) != 0)
    goto LABEL_36;
  return result;
}

uint64_t type metadata accessor for UserDomainConceptViewData()
{
  uint64_t result;

  result = qword_1EF439518;
  if (!qword_1EF439518)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC5E3C3C()
{
  return sub_1BC347F0C(&qword_1EF4394B8, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, (uint64_t)&protocol conformance descriptor for UserDomainConceptViewData);
}

_QWORD *initializeBufferWithCopyOfBuffer for UserDomainConceptViewData(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = (void *)a2[1];
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a2[5];
    v9 = a3[9];
    v10 = (void *)(a1 + v9);
    v11 = (char *)a2 + v9;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v12 = sub_1BC62A760();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    v15 = v7;
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1BC34631C();
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v18 = a3[10];
    v19 = a3[11];
    v20 = *(void **)((char *)a2 + v18);
    *(_QWORD *)((char *)v4 + v18) = v20;
    v21 = (_QWORD *)((char *)v4 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[12];
    v25 = a3[13];
    v26 = (_QWORD *)((char *)v4 + v24);
    v27 = (uint64_t *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (char *)v4 + v25;
    v30 = (uint64_t)a2 + v25;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = *(_BYTE *)(v30 + 8);
    v31 = a3[14];
    v32 = (char *)v4 + v31;
    v33 = (uint64_t)a2 + v31;
    *(_QWORD *)v32 = *(_QWORD *)v33;
    v32[8] = *(_BYTE *)(v33 + 8);
    v34 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for UserDomainConceptViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1BC62A760();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserDomainConceptViewData(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = a3[9];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1BC62A760();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v6;
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1BC34631C();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v16 = a3[10];
  v17 = a3[11];
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = (_QWORD *)(a1 + v17);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[12];
  v23 = a3[13];
  v24 = (_QWORD *)(a1 + v22);
  v25 = (_QWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a1 + v23;
  v28 = a2 + v23;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a3[14];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  v32 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserDomainConceptViewData(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v8 = v6;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = a3[9];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1BC62A760();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1BC34631C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = a3[10];
  v19 = *(void **)(a1 + v18);
  v20 = *(void **)(a2 + v18);
  *(_QWORD *)(a1 + v18) = v20;
  v21 = v20;

  v22 = a3[11];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[12];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = a3[13];
  v29 = a1 + v28;
  v30 = (uint64_t *)(a2 + v28);
  v31 = *v30;
  *(_BYTE *)(v29 + 8) = *((_BYTE *)v30 + 8);
  *(_QWORD *)v29 = v31;
  v32 = a3[14];
  v33 = a1 + v32;
  v34 = (uint64_t *)(a2 + v32);
  v35 = *v34;
  *(_BYTE *)(v33 + 8) = *((_BYTE *)v34 + 8);
  *(_QWORD *)v33 = v35;
  return a1;
}

uint64_t initializeWithTake for UserDomainConceptViewData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = a3[9];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BC62A760();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BC34631C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a3[14];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  return a1;
}

uint64_t assignWithTake for UserDomainConceptViewData(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = a3[9];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1BC62A760();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BC34631C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[10];
  v17 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);

  v18 = a3[11];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[12];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[13];
  v29 = a3[14];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserDomainConceptViewData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC5E4518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BC34631C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for UserDomainConceptViewData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC5E45A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BC34631C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_1BC5E4614()
{
  unint64_t v0;

  sub_1BC34631C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

double static ViewMetrics.defaultPadding.getter()
{
  return 16.0;
}

double static ViewMetrics.defaultInterItemPadding.getter()
{
  return 8.0;
}

double static ViewMetrics.baselineTop.getter()
{
  return 27.0;
}

double static ViewMetrics.baselineInterLabel.getter()
{
  return 24.0;
}

double static ViewMetrics.baselineBottom.getter()
{
  return 13.0;
}

double static ViewMetrics.singleRowBaselineTop.getter()
{
  return 29.0;
}

double static ViewMetrics.singleRowBaselineBottom.getter()
{
  return 15.0;
}

ValueMetadata *type metadata accessor for ViewMetrics()
{
  return &type metadata for ViewMetrics;
}

uint64_t sub_1BC5E4718@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC62B0D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BC5E4740(id *a1)
{
  id v1;

  v1 = *a1;
  return sub_1BC62B0E4();
}

uint64_t sub_1BC5E4768@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC62B0C0();
  *a1 = result;
  return result;
}

uint64_t sub_1BC5E4790(id *a1)
{
  id v1;

  v1 = *a1;
  return sub_1BC62B0CC();
}

uint64_t ConceptListViewDataSourceProvider.__allocating_init(categoryPredicate:sourceProfile:store:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  ConceptListViewDataSourceProvider.init(categoryPredicate:sourceProfile:store:)(a1, a2, a3);
  return v6;
}

id sub_1BC5E480C(uint64_t *a1, void *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  objc_super v43;
  uint64_t v44;

  v3 = *a1;
  v4 = (void *)a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v41 = a1[4];
  v7 = a1[6];
  v42 = a1[5];
  v9 = a1[7];
  v8 = (void *)a1[8];
  if (v4)
    v10 = *a1;
  else
    v10 = 11;
  sub_1BC62AC10();
  LOBYTE(v44) = v10;
  v39 = a2;
  v11 = objc_msgSend(a2, sel_healthStore);
  v12 = objc_msgSend(v11, sel_profileIdentifier);

  v13 = static FeedItem.predicateForHealthRecordsData(categoryKind:sourceProfile:)((unsigned __int8 *)&v44, v12);
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1BC359B60(v3, v4, v5, v6, v41, v42, v7, v9, v8);
  }
  else
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v14 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

  }
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC639570;
  *(_QWORD *)(v15 + 32) = v13;
  v38 = v13;
  v16 = objc_msgSend(v39, sel_healthStore);
  v17 = objc_msgSend(v16, sel_profileIdentifier);

  v18 = _s15HealthRecordsUI35AddAccountFeedItemIdentifierFactoryV011makeGeneralab10OnboardingH03forSSSo09HKProfileH0CSg_tFZ_0(v17);
  v20 = v19;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  sub_1BC52184C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC6395A0;
  v22 = sub_1BC62ABF8();
  v24 = v23;
  v25 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
  v26 = sub_1BC3644C0();
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v24;
  *(_QWORD *)(v21 + 96) = v25;
  *(_QWORD *)(v21 + 104) = v26;
  *(_QWORD *)(v21 + 64) = v26;
  *(_QWORD *)(v21 + 72) = v18;
  *(_QWORD *)(v21 + 80) = v20;
  swift_bridgeObjectRetain();
  v27 = sub_1BC62CA64();

  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 40) = v27;
  v44 = v15;
  sub_1BC62C890();
  v28 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v28);

  *(_QWORD *)&v40[qword_1EF42C0D8] = v29;
  *(_QWORD *)&v40[qword_1EF42C0E0] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v40[qword_1EF42C0D0] = v39;
  v30 = objc_allocWithZone(MEMORY[0x1E0DC3610]);
  v31 = v29;
  v32 = v39;
  v33 = objc_msgSend(v30, sel_init);
  v43.receiver = v40;
  v43.super_class = (Class)type metadata accessor for FeedItemListViewController();
  v34 = objc_msgSendSuper2(&v43, sel_initWithCollectionViewLayout_, v33);

  v35 = v34;
  v36 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setTitle_, v36);

  return v35;
}

void sub_1BC5E4C50(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  char v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType();
  v4 = v6.receiver;
  objc_msgSendSuper2(&v6, sel_viewDidAppear_, a3);
  if (qword_1ED6A3198 != -1)
    swift_once();
  v5 = 11;
  sub_1BC4E4100(2, 15, 1, &v5, 0);

}

uint64_t sub_1BC5E4CFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[40];

  v3 = *(void **)(v1 + qword_1EF42C0D0);
  v4 = *(id *)(v1 + qword_1EF42C0D8);
  v5 = objc_msgSend(v3, sel_healthStore);
  v6 = objc_msgSend(v5, sel_profileIdentifier);

  sub_1BC62CB90();
  v7 = type metadata accessor for ConceptListViewDataSourceProvider();
  v8 = swift_allocObject();
  ConceptListViewDataSourceProvider.init(categoryPredicate:sourceProfile:store:)(v4, v6, (uint64_t)v11);
  a1[3] = v7;
  result = sub_1BC379B20((unint64_t *)&qword_1EF42B3F8, v9, (uint64_t (*)(uint64_t))type metadata accessor for ConceptListViewDataSourceProvider, (uint64_t)&protocol conformance descriptor for ConceptListViewDataSourceProvider);
  a1[4] = result;
  *a1 = v8;
  return result;
}

void sub_1BC5E4DEC()
{
  qword_1EF439578 = 0x4036000000000000;
}

id ConceptListViewDataSourceProvider.categoryPredicate.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

_QWORD *ConceptListViewDataSourceProvider.init(categoryPredicate:sourceProfile:store:)(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  _BYTE v17[40];

  v4 = v3;
  sub_1BC357158(0, &qword_1EF439580, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v17[-v9 - 8];
  v4[2] = a1;
  sub_1BC34E674(a3, (uint64_t)(v4 + 3));
  sub_1BC34E674(a3, (uint64_t)v17);
  v11 = sub_1BC62AD54();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1BC62B600();
  swift_allocObject();
  v12 = a2;
  v13 = a1;
  v14 = sub_1BC62B5F4();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  v4[8] = v14;
  v4[9] = a2;
  return v4;
}

uint64_t sub_1BC5E4F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BC52184C(0, (unint64_t *)&qword_1EF42A0F0, (unint64_t *)&qword_1EF42A0F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v0 + 32) = sub_1BC5E4FA4();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1BC62B5DC();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = sub_1BC62B5D0();
  *(_QWORD *)(v0 + 72) = v3;
  return v0;
}

uint64_t sub_1BC5E4FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  void (*v41)(_QWORD *, _QWORD);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  void *v46;
  void (*v47)(_QWORD *, _QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  id v59;
  _QWORD v60[4];

  v1 = v0;
  v2 = sub_1BC62B12C();
  v56 = *(_QWORD *)(v2 - 8);
  v57 = v2;
  MEMORY[0x1E0C80A78](v2);
  v55 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v53[0] = (char *)v53 - v5;
  sub_1BC357158(0, &qword_1EF42D368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v53 - v7;
  sub_1BC62AC10();
  v54 = (id)MEMORY[0x1BCCEFEBC]();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v53[1] = v9;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC63A3D0;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  sub_1BC52184C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC6395A0;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1BC3644C0();
  strcpy((char *)(v11 + 32), "pluginPackage");
  *(_WORD *)(v11 + 46) = -4864;
  *(_QWORD *)(v11 + 96) = v12;
  *(_QWORD *)(v11 + 104) = v13;
  *(_QWORD *)(v11 + 64) = v13;
  *(_QWORD *)(v11 + 72) = 0xD000000000000025;
  *(_QWORD *)(v11 + 80) = 0x80000001BC654E10;
  *(_QWORD *)(v10 + 32) = sub_1BC62CA64();
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = sub_1BC62AA78();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = swift_allocObject();
  v58 = xmmword_1BC639590;
  *(_OWORD *)(v17 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x1E0D2D510], v14);
  v18 = sub_1BC62AB2C();
  v20 = v19;
  v21 = sub_1BC62A31C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 1, 1, v21);
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v58;
  v23 = *(void **)(v1 + 72);
  *(_QWORD *)(v22 + 32) = v23;
  v24 = v23;
  v25 = MEMORY[0x1BCCEFEA4](v17, v18, v20, v8, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3E23B8((uint64_t)v8);
  v26 = *(void **)(v1 + 16);
  *(_QWORD *)(v10 + 40) = v25;
  *(_QWORD *)(v10 + 48) = v26;
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = v58;
  v28 = v26;
  *(_QWORD *)(v27 + 32) = sub_1BC62B5E8();
  v29 = MEMORY[0x1BCCEFED4](v27);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 56) = v29;
  v60[0] = v10;
  v30 = v53[0];
  sub_1BC62C890();
  v31 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v32 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v31);

  v33 = v54;
  objc_msgSend(v54, sel_setPredicate_, v32);

  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1BC6396B0;
  v35 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v36 = (void *)sub_1BC62C650();
  v37 = objc_msgSend(v35, sel_initWithKey_ascending_selector_, v36, 1, sel_localizedStandardCompare_);

  *(_QWORD *)(v34 + 32) = v37;
  v60[0] = v34;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v38 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setSortDescriptors_, v38);

  swift_beginAccess();
  sub_1BC34E674(v1 + 24, (uint64_t)v60);
  __swift_project_boxed_opaque_existential_1Tm(v60, v60[3]);
  v39 = v33;
  v40 = (void *)sub_1BC62A9D0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v39, v40, 0, 0);

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
  sub_1BC62B0FC();
  v41 = (void (*)(_QWORD *, _QWORD))sub_1BC62B114();
  v43 = v42;
  v44 = sub_1BC62B0B4();
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48);
  if (!v45(v43, 1, v44))
  {
    swift_getKeyPath();
    v46 = (void *)objc_opt_self();
    if (qword_1EF428818 != -1)
      swift_once();
    v59 = objc_msgSend(v46, sel_absoluteDimension_, *(double *)&qword_1EF439578);
    sub_1BC62B0A8();
  }
  v41(v60, 0);
  v47 = (void (*)(_QWORD *, _QWORD))sub_1BC62B114();
  if (!v45(v48, 1, v44))
  {
    swift_getKeyPath();
    v59 = objc_msgSend((id)objc_opt_self(), sel_absoluteDimension_, 0.0);
    sub_1BC62B0A8();
  }
  v47(v60, 0);
  sub_1BC379AA4();
  v49 = v56;
  v50 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v30, v57);
  v51 = sub_1BC62AF34();

  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v30, v50);
  sub_1BC379B20((unint64_t *)&qword_1EF42A240, 255, (uint64_t (*)(uint64_t))sub_1BC379AA4, MEMORY[0x1E0D2B7F8]);
  return v51;
}

uint64_t sub_1BC5E56EC()
{
  return sub_1BC62B5DC();
}

uint64_t sub_1BC5E570C()
{
  return sub_1BC62B5D0();
}

uint64_t ConceptListViewDataSourceProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_release();

  return v0;
}

uint64_t ConceptListViewDataSourceProvider.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC5E579C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BC52184C(0, (unint64_t *)&qword_1EF42A0F0, (unint64_t *)&qword_1EF42A0F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v0 + 32) = sub_1BC5E4FA4();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1BC62B5DC();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = sub_1BC62B5D0();
  *(_QWORD *)(v0 + 72) = v3;
  return v0;
}

uint64_t sub_1BC5E5818@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 24;
  swift_beginAccess();
  return sub_1BC34E674(v3, a2);
}

uint64_t type metadata accessor for ConceptListViewController()
{
  uint64_t result;

  result = qword_1EF439588;
  if (!qword_1EF439588)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC5E58A4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC5E58E0()
{
  return type metadata accessor for ConceptListViewController();
}

uint64_t type metadata accessor for ConceptListViewDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConceptListViewDataSourceProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.store.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.store.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.store.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.__allocating_init(categoryPredicate:sourceProfile:store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.selectedDataSources(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.makePromotionDataSource()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.makeArticleDataSource()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1BC5E5964@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC62B0C0();
  *a1 = result;
  return result;
}

uint64_t sub_1BC5E598C(id *a1)
{
  id v1;

  v1 = *a1;
  return sub_1BC62B0CC();
}

uint64_t sub_1BC5E59B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC62B0D8();
  *a1 = result;
  return result;
}

uint64_t sub_1BC5E59DC(id *a1)
{
  id v1;

  v1 = *a1;
  return sub_1BC62B0E4();
}

id sub_1BC5E5A04(void *a1)
{
  id v1;
  void *v2;
  char **v3;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  v2 = (void *)objc_opt_self();
  v3 = &selRef_tertiarySystemGroupedBackgroundColor;
  if (v1 != (id)2)
    v3 = &selRef_secondarySystemFillColor;
  return objc_msgSend(v2, *v3);
}

id sub_1BC5E5A5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  char v7;
  id v8;
  void *v9;
  id v10;
  _QWORD aBlock[6];

  v2 = sub_1BC62BC18();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62BBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((v6 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_4:
    v8 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
    aBlock[4] = sub_1BC5E5A04;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC4CB70C;
    aBlock[3] = &block_descriptor_72;
    v9 = _Block_copy(aBlock);
    v10 = objc_msgSend(v8, sel_initWithDynamicProvider_, v9);
    _Block_release(v9);
    swift_release();
    return v10;
  }
  v7 = sub_1BC62BBDC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
    goto LABEL_4;
  return objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
}

uint64_t block_copy_helper_69(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_69()
{
  return swift_release();
}

uint64_t Calendar.endOfDay(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, _QWORD, uint64_t);
  void (*v13)(char *, uint64_t);
  void (*v14)(char *, uint64_t);
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a1;
  v1 = sub_1BC62A8C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62A760();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A844();
  v12 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v12(v4, *MEMORY[0x1E0CB1130], v1);
  sub_1BC62A88C();
  v13 = *(void (**)(char *, uint64_t))(v2 + 8);
  v13(v4, v1);
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v12(v4, *MEMORY[0x1E0CB1188], v1);
    sub_1BC62A88C();
    v13(v4, v1);
    return ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  }
  return result;
}

uint64_t Calendar.oneDay(after:)(uint64_t a1)
{
  return sub_1BC5E5DBC(a1, MEMORY[0x1E0CB1130]);
}

uint64_t Calendar.oneSecond(before:)(uint64_t a1)
{
  return sub_1BC5E5DBC(a1, MEMORY[0x1E0CB1188]);
}

uint64_t sub_1BC5E5DBC(uint64_t a1, unsigned int *a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = sub_1BC62A8C8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, *a2, v3, v5);
  sub_1BC62A88C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1BC5E5E74@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a4;
  sub_1BC5E6AB8();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5E6CD8(0);
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  *(_QWORD *)&v11 = MEMORY[0x1E0C80A78](v10).n128_u64[0];
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a2, sel_gatewayVersions, v11);
  if (v14)
  {
    v15 = v14;
    sub_1BC50D8C4();
    v16 = sub_1BC62C878();

  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
  }
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  v29 = v16;
  MEMORY[0x1E0C80A78](v17);
  *(&v24 - 4) = (uint64_t)&v29;
  *(&v24 - 3) = (uint64_t)sub_1BC5E6D98;
  *(&v24 - 2) = v18;
  sub_1BC5E6B34();
  sub_1BC5E6C34();
  v19 = a1;
  v20 = a2;
  v21 = a3;
  sub_1BC62C2CC();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC62C200();
  sub_1BC347F0C(&qword_1EF439700, (uint64_t (*)(uint64_t))sub_1BC5E6AB8, MEMORY[0x1E0CDD950]);
  v22 = v27;
  sub_1BC62C374();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v22);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v28, v13, v25);
}

id sub_1BC5E60C8@<X0>(id *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  id v7;
  id v8;
  id v9;
  id v11;

  v11 = *a1;
  *a5 = a2;
  a5[1] = a3;
  a5[2] = a4;
  a5[3] = v11;
  v7 = a2;
  v8 = a3;
  v9 = a4;
  return v11;
}

uint64_t sub_1BC5E6110@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, char *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;

  v57 = a2;
  v58 = a3;
  v56 = a1;
  sub_1BC5E72AC();
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  MEMORY[0x1E0C80A78](v7);
  v59 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v9).n128_u64[0];
  v54 = (char *)&v48 - v11;
  v12 = objc_msgSend(a4, sel_gatewayID, v10);
  v55 = sub_1BC62C680();
  v53 = v13;

  v14 = objc_msgSend(a4, sel_FHIRVersion);
  v15 = objc_msgSend(v14, sel_stringRepresentation);

  v16 = sub_1BC62C680();
  v18 = v17;

  v62 = (id)v16;
  v63 = v18;
  sub_1BC62C764();
  v19 = objc_msgSend(a4, sel_FHIRVersion);
  v20 = objc_msgSend(v19, sel_FHIRRelease);

  sub_1BC62C680();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v51 = v63;
  v52 = v62;
  v62 = objc_msgSend(a4, sel_minCompatibleAPIVersion);
  v21 = sub_1BC62D52C();
  v49 = v22;
  v50 = v21;
  v23 = objc_msgSend(a4, sel_gatewayBatchID);
  v48 = sub_1BC62C680();
  v25 = v24;

  sub_1BC62C200();
  v26 = (_QWORD *)swift_allocObject();
  v27 = v56;
  v28 = v57;
  v26[2] = v56;
  v26[3] = v28;
  v29 = v58;
  v26[4] = v58;
  v26[5] = a4;
  v30 = v27;
  v31 = v28;
  v32 = v29;
  v33 = a4;
  v34 = v54;
  sub_1BC62C3EC();
  v35 = v59;
  v36 = v60;
  v37 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  v38 = v61;
  v37(v59, v34, v61);
  *(_QWORD *)a5 = 0x79617765746147;
  v39 = v55;
  *((_QWORD *)a5 + 1) = 0xE700000000000000;
  *((_QWORD *)a5 + 2) = v39;
  *((_QWORD *)a5 + 3) = v53;
  *((_QWORD *)a5 + 4) = 1380534342;
  v41 = v51;
  v40 = v52;
  *((_QWORD *)a5 + 5) = 0xE400000000000000;
  *((_QWORD *)a5 + 6) = v40;
  *((_QWORD *)a5 + 7) = v41;
  *((_QWORD *)a5 + 8) = 1447117645;
  v43 = v49;
  v42 = v50;
  *((_QWORD *)a5 + 9) = 0xE400000000000000;
  *((_QWORD *)a5 + 10) = v42;
  *((_QWORD *)a5 + 11) = v43;
  *((_QWORD *)a5 + 12) = 0x4449206863746142;
  v44 = v48;
  *((_QWORD *)a5 + 13) = 0xE800000000000000;
  *((_QWORD *)a5 + 14) = v44;
  *((_QWORD *)a5 + 15) = v25;
  sub_1BC5E7230();
  v37(&a5[*(int *)(v45 + 96)], v35, v38);
  v46 = *(void (**)(char *, uint64_t))(v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46(v34, v38);
  v46(v35, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BC5E64E4(void *a1, int a2, void *a3, id a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  _QWORD *v17;
  void *v18;
  id v19;
  id v20;
  _QWORD v21[6];

  v7 = objc_msgSend(a4, sel_gatewayID);
  sub_1BC62C680();

  v8 = objc_msgSend(a4, sel_gatewayBatchID);
  sub_1BC62C680();

  v9 = objc_allocWithZone((Class)WDClinicalGatewayProxy);
  v10 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithGatewayID_batchID_, v10, v11);

  if (qword_1ED6A31B0 != -1)
    swift_once();
  v13 = objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController);
  v14 = v12;
  v15 = objc_msgSend(v13, sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, 7, 0, 0, a1, 0);
  objc_msgSend(v15, sel_setGatewayProxyToTry_, v14);
  v16 = objc_msgSend(a1, sel_onboardingManager);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a3;
  v17[3] = v15;
  v17[4] = nullsub_1;
  v17[5] = 0;
  v21[4] = sub_1BC4A7A7C;
  v21[5] = v17;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 1107296256;
  v21[2] = sub_1BC42A188;
  v21[3] = &block_descriptor_73;
  v18 = _Block_copy(v21);
  v19 = a3;
  v20 = v15;
  swift_release();
  objc_msgSend(v16, sel_registerInflightOnboardingViewController_completion_, v20, v18);
  _Block_release(v18);

}

uint64_t sub_1BC5E6728@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  sub_1BC36E2AC();
  swift_bridgeObjectRetain();
  v2 = sub_1BC62C338();
  v4 = v3;
  v6 = v5 & 1;
  sub_1BC62C2A8();
  v7 = sub_1BC62C2E4();
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  sub_1BC4040D0(v2, v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v14 = sub_1BC62C338();
  v16 = v15;
  LOBYTE(v2) = v17 & 1;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v13;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v14;
  *(_QWORD *)(a1 + 56) = v15;
  *(_BYTE *)(a1 + 64) = v17 & 1;
  *(_QWORD *)(a1 + 72) = v18;
  sub_1BC404110(v7, v9, v13);
  swift_bridgeObjectRetain();
  sub_1BC404110(v14, v16, v2);
  swift_bridgeObjectRetain();
  sub_1BC4040D0(v14, v16, v2);
  swift_bridgeObjectRelease();
  sub_1BC4040D0(v7, v9, v13);
  return swift_bridgeObjectRelease();
}

__n128 sub_1BC5E68A8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  __n128 result;
  __int128 v10;
  __n128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  char v17;
  uint64_t v18;

  v2 = sub_1BC62C1B8();
  sub_1BC5E6728((uint64_t)&v11);
  v3 = v12;
  v4 = v13;
  v5 = v14;
  v6 = v15;
  v7 = v17;
  v8 = v18;
  result = v11;
  v10 = v16;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(_BYTE *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  return result;
}

uint64_t sub_1BC5E6948()
{
  sub_1BC357158(0, &qword_1EF439710, (uint64_t (*)(uint64_t))sub_1BC5E7230, MEMORY[0x1E0CE0648]);
  sub_1BC404310(&qword_1EF439728, &qword_1EF439710, (uint64_t (*)(uint64_t))sub_1BC5E7230);
  return sub_1BC62C440();
}

uint64_t sub_1BC5E69D8@<X0>(uint64_t a1@<X8>)
{
  void **v1;

  return sub_1BC5E5E74(*v1, v1[1], v1[2], a1);
}

uint64_t HKClinicalGatewayReference.id.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_gatewayID);
  v2 = sub_1BC62C680();

  return v2;
}

void sub_1BC5E6A38(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*v1, sel_gatewayID);
  v4 = sub_1BC62C680();
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

ValueMetadata *type metadata accessor for InternalGatewayVersionsView()
{
  return &type metadata for InternalGatewayVersionsView;
}

uint64_t sub_1BC5E6AA8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BC5E6AB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4396C8)
  {
    sub_1BC5E6B34();
    sub_1BC5E6C34();
    v0 = sub_1BC62C2D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4396C8);
  }
}

void sub_1BC5E6B34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4396D0)
  {
    sub_1BC357158(255, &qword_1EF4396D8, (uint64_t (*)(uint64_t))sub_1BC50D8C4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC5E6BD4();
    v0 = sub_1BC62C434();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4396D0);
  }
}

unint64_t sub_1BC5E6BD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4396E0;
  if (!qword_1EF4396E0)
  {
    sub_1BC357158(255, &qword_1EF4396D8, (uint64_t (*)(uint64_t))sub_1BC50D8C4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF48], v1);
    atomic_store(result, (unint64_t *)&qword_1EF4396E0);
  }
  return result;
}

unint64_t sub_1BC5E6C34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF4396E8;
  if (!qword_1EF4396E8)
  {
    sub_1BC5E6B34();
    v2 = v1;
    v3 = sub_1BC5E6C94();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CDFEE8], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF4396E8);
  }
  return result;
}

unint64_t sub_1BC5E6C94()
{
  unint64_t result;

  result = qword_1EF4396F0;
  if (!qword_1EF4396F0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64B64C, &type metadata for InternalGatewayVersionsView.GatewayVersionCell);
    atomic_store(result, (unint64_t *)&qword_1EF4396F0);
  }
  return result;
}

void sub_1BC5E6CD8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_1EF4396F8)
  {
    sub_1BC5E6AB8();
    v5[0] = v2;
    v5[1] = sub_1BC347F0C(&qword_1EF439700, (uint64_t (*)(uint64_t))sub_1BC5E6AB8, MEMORY[0x1E0CDD950]);
    v3 = MEMORY[0x1BCCF357C](a1, v5, MEMORY[0x1E0CDE578], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EF4396F8);
  }
}

uint64_t sub_1BC5E6D64()
{
  id *v0;

  return swift_deallocObject();
}

id sub_1BC5E6D98@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  void **v2;

  return sub_1BC5E60C8(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1BC5E6DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  sub_1BC357158(0, &qword_1EF4396D8, (uint64_t (*)(uint64_t))sub_1BC50D8C4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC5E6BD4();
  sub_1BC5E6C94();
  sub_1BC347F0C(&qword_1EF439708, (uint64_t (*)(uint64_t))sub_1BC50D8C4, (uint64_t)&protocol conformance descriptor for HKClinicalGatewayReference);
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BC62C428();
}

uint64_t sub_1BC5E6EA8()
{
  uint64_t *v0;

  return sub_1BC5E6DA4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BC5E6EB4()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1BC5E6ED8@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  void (*v4)(_OWORD *__return_ptr, uint64_t *);
  double result;
  __int128 v6;
  _OWORD v7[2];
  uint64_t v8;

  v4 = *(void (**)(_OWORD *__return_ptr, uint64_t *))(v2 + 16);
  v8 = *a1;
  v4(v7, &v8);
  result = *(double *)v7;
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
  return result;
}

void destroy for InternalGatewayVersionsView.GatewayVersionCell(id *a1)
{

}

_QWORD *initializeWithCopy for InternalGatewayVersionsView.GatewayVersionCell(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

uint64_t assignWithCopy for InternalGatewayVersionsView.GatewayVersionCell(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  return a1;
}

uint64_t assignWithTake for InternalGatewayVersionsView.GatewayVersionCell(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for InternalGatewayVersionsView.GatewayVersionCell()
{
  return &type metadata for InternalGatewayVersionsView.GatewayVersionCell;
}

_QWORD *initializeBufferWithCopyOfBuffer for InternalGatewayVersionsInfo(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for InternalGatewayVersionsInfo(id *a1)
{

}

uint64_t _s15HealthRecordsUI27InternalGatewayVersionsInfoVwca_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for InternalGatewayVersionsInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for InternalGatewayVersionsInfo()
{
  return &type metadata for InternalGatewayVersionsInfo;
}

uint64_t sub_1BC5E71B4()
{
  sub_1BC5E6AB8();
  sub_1BC347F0C(&qword_1EF439700, (uint64_t (*)(uint64_t))sub_1BC5E6AB8, MEMORY[0x1E0CDD950]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BC5E7214()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BC5E7224@<X0>(char *a1@<X8>)
{
  void **v1;

  return sub_1BC5E6110(v1[2], v1[3], v1[4], v1[5], a1);
}

void sub_1BC5E7230()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1EF439718)
  {
    sub_1BC5E72AC();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EF439718);
  }
}

void sub_1BC5E72AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF439720)
  {
    v0 = sub_1BC62C3F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF439720);
  }
}

uint64_t sub_1BC5E7308()
{
  id *v0;

  return swift_deallocObject();
}

void sub_1BC5E7344()
{
  uint64_t v0;

  sub_1BC5E64E4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(id *)(v0 + 40));
}

uint64_t sub_1BC5E7350()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_70()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for InternalGatewayVersionsView.GatewayVersionCell.LeftRightView()
{
  return &type metadata for InternalGatewayVersionsView.GatewayVersionCell.LeftRightView;
}

unint64_t sub_1BC5E73B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[3];

  result = qword_1EF439730;
  if (!qword_1EF439730)
  {
    sub_1BC5E743C();
    v2 = v1;
    v3 = sub_1BC404310(&qword_1EF439728, &qword_1EF439710, (uint64_t (*)(uint64_t))sub_1BC5E7230);
    v4[0] = MEMORY[0x1E0CE0400];
    v4[1] = v3;
    v4[2] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CDFF98], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF439730);
  }
  return result;
}

void sub_1BC5E743C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF439738)
  {
    sub_1BC357158(255, &qword_1EF439710, (uint64_t (*)(uint64_t))sub_1BC5E7230, MEMORY[0x1E0CE0648]);
    v0 = sub_1BC62C458();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF439738);
  }
}

uint64_t sub_1BC5E74B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BC5E74C4()
{
  return sub_1BC347F0C(&qword_1EF439740, (uint64_t (*)(uint64_t))sub_1BC577E7C, MEMORY[0x1E0CDFB10]);
}

uint64_t Array<A>.newlineJoined.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    v3 = MEMORY[0x1E0DEE9D8];
    do
    {
      v8 = *(v2 - 1);
      v7 = *v2;
      v9 = HIBYTE(*v2) & 0xF;
      if ((*v2 & 0x2000000000000000) == 0)
        v9 = v8 & 0xFFFFFFFFFFFFLL;
      if (v9)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BC3BD748(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v5 = *(_QWORD *)(v3 + 16);
        v4 = *(_QWORD *)(v3 + 24);
        if (v5 >= v4 >> 1)
          sub_1BC3BD748(v4 > 1, v5 + 1, 1);
        *(_QWORD *)(v3 + 16) = v5 + 1;
        v6 = v3 + 16 * v5;
        *(_QWORD *)(v6 + 32) = v8;
        *(_QWORD *)(v6 + 40) = v7;
      }
      v2 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  sub_1BC50D870();
  sub_1BC3B4EE4();
  v10 = sub_1BC62C5D8();
  swift_release();
  return v10;
}

id HRNewlineJoinedStrings()
{
  uint64_t v0;
  void *v1;

  v0 = sub_1BC62C878();
  Array<A>.newlineJoined.getter(v0);
  swift_bridgeObjectRelease();
  v1 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  return v1;
}

id sub_1BC5E76B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  _BYTE v12[24];
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___store;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___store);
  if (!v2)
  {
    v4 = v0;
    v5 = v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
    swift_beginAccess();
    sub_1BC3A9BF4(v5, (uint64_t)v12, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
    if (v13)
    {
      sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
      sub_1BC35817C(0, &qword_1EF42BC40);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v6 = *((_QWORD *)&v15 + 1);
        if (*((_QWORD *)&v15 + 1))
        {
          v7 = v16;
          __swift_project_boxed_opaque_existential_1Tm(&v14, *((uint64_t *)&v15 + 1));
          v8 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
LABEL_10:
          v9 = *(void **)(v4 + v1);
          *(_QWORD *)(v4 + v1) = v8;
          v3 = v8;

          v2 = 0;
          goto LABEL_11;
        }
      }
      else
      {
        v16 = 0;
        v14 = 0u;
        v15 = 0u;
      }
    }
    else
    {
      sub_1BC3801D0((uint64_t)v12, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
      v14 = 0u;
      v15 = 0u;
      v16 = 0;
    }
    sub_1BC3801D0((uint64_t)&v14, (uint64_t)&unk_1EF42BC38, (uint64_t)&qword_1EF42BC40, (uint64_t)&protocol descriptor for UDCItem, (uint64_t (*)(_QWORD))sub_1BC3A9C44);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
    goto LABEL_10;
  }
  v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___store);
LABEL_11:
  v10 = v2;
  return v3;
}

id sub_1BC5E7884()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  double v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  sub_1BC384E68(0, &qword_1EF42BC10, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - v3;
  v5 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___button;
  v6 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___button];
  if (v6)
  {
    v7 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___button];
  }
  else
  {
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3518]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_1BC34B6A0(0, &qword_1EF42BC28);
    *(_QWORD *)(swift_allocObject() + 16) = v0;
    v0;
    v9 = (void *)sub_1BC62CEE4();
    objc_msgSend(v8, sel_addAction_forControlEvents_, v9, 64);

    sub_1BC5E7A84();
    static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
    v10 = sub_1BC62CF98();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 0, 1, v10);
    sub_1BC62CFB0();
    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v11) = 1148846080;
    objc_msgSend(v8, sel_setContentHuggingPriority_forAxis_, 0, v11);
    objc_msgSend(v8, sel_setAlpha_, 0.0);
    v12 = *(void **)&v1[v5];
    *(_QWORD *)&v1[v5] = v8;
    v7 = v8;

    v6 = 0;
  }
  v13 = v6;
  return v7;
}

uint64_t sub_1BC5E7A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];

  v1 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v1);
  v3 = (id *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1BC3A9BF4(v4, (uint64_t)v14, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v14[3])
  {
    sub_1BC3801D0((uint64_t)v14, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
    goto LABEL_7;
  }
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UDCRecentItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v10 = 0;
    return v10 & 1;
  }
  sub_1BC3AA02C(v13 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v3);
  swift_release();
  v5 = v3[1];
  sub_1BC348D78((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
  if (qword_1ED6A4878 != -1)
    swift_once();
  v6 = qword_1ED6A54F0;
  v7 = sub_1BC5E76B0();
  v8 = objc_msgSend(v7, sel_profileIdentifier);

  v13 = *(_QWORD *)(v6 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v9);
  *(&v12 - 2) = v6;
  *(&v12 - 1) = (uint64_t)v8;
  sub_1BC62AA6C();
  sub_1BC62BA74();
  sub_1BC3A9E00();
  swift_retain();
  sub_1BC62B888();

  swift_release();
  v10 = sub_1BC62BA50();

  swift_release();
  return v10 & 1;
}

char *sub_1BC5E7D00(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  objc_class *v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  objc_super v33;

  sub_1BC384E68(0, &qword_1EF42C0C8, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  v12 = sub_1BC62BC18();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___store] = 0;
  v16 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView;
  v17 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  v18 = v4;
  *(_QWORD *)&v4[v16] = objc_msgSend(v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView;
  *(_QWORD *)&v18[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v18[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___button] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_activeConstraints] = MEMORY[0x1E0DEE9D8];
  v18[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode] = 0;
  v20 = &v18[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item];
  *((_QWORD *)v20 + 4) = 0;
  *(_OWORD *)v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  v21 = &v18[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_sectionContext];
  v22 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);

  v23 = (objc_class *)type metadata accessor for RecentUDCCell();
  v33.receiver = v18;
  v33.super_class = v23;
  v24 = (char *)objc_msgSendSuper2(&v33, sel_initWithFrame_, a1, a2, a3, a4);
  v25 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView]);

  v26 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v24[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView]);

  v27 = objc_msgSend(v24, sel_contentView);
  v28 = sub_1BC5E7884();
  objc_msgSend(v27, sel_addSubview_, v28);

  sub_1BC62A988();
  v29 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC62CDF4();

  v30 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  sub_1BC62BBF4();
  sub_1BC62BC48();
  sub_1BC5E5A5C((uint64_t)v15);
  sub_1BC62BC3C();
  v31 = sub_1BC62BC78();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v11, 0, 1, v31);
  MEMORY[0x1BCCF1FE0](v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1BC5E9C48();
  sub_1BC5E8568();

  return v24;
}

id sub_1BC5E8078(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___store] = 0;
  v3 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView;
  v4 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___button] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_activeConstraints] = MEMORY[0x1E0DEE9D8];
  v5[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode] = 0;
  v7 = &v5[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item];
  *((_QWORD *)v7 + 4) = 0;
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v8 = &v5[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_sectionContext];
  v9 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for RecentUDCCell();
  v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

void sub_1BC5E81F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  objc_super v17;

  v1 = v0;
  sub_1BC384E68(0, &qword_1EF42C0C8, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  v5 = sub_1BC62BC18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for RecentUDCCell();
  v17.receiver = v0;
  v17.super_class = v9;
  objc_msgSendSuper2(&v17, sel_awakeFromNib);
  v10 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v10, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView]);

  v11 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v11, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView]);

  v12 = objc_msgSend(v1, sel_contentView);
  v13 = sub_1BC5E7884();
  objc_msgSend(v12, sel_addSubview_, v13);

  sub_1BC62A988();
  v14 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC62CDF4();

  v15 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  sub_1BC62BBF4();
  sub_1BC62BC48();
  sub_1BC5E5A5C((uint64_t)v8);
  sub_1BC62BC3C();
  v16 = sub_1BC62BC78();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 0, 1, v16);
  MEMORY[0x1BCCF1FE0](v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BC5E9C48();
  sub_1BC5E8568();
}

void sub_1BC5E845C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCF37A4](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_1BC5E8568();
    v4 = objc_msgSend(v3, sel_contentView);
    objc_msgSend(v4, sel_layoutIfNeeded);

  }
}

void sub_1BC5E8568()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  id v6;
  double v7;
  _BYTE *v8;
  id v9;
  _BYTE *v10;
  id v11;
  double v12;
  _BYTE *v13;

  v1 = v0;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView);
  v4 = (_BYTE *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
  if (v2 == 1)
  {
    swift_beginAccess();
    *v4 = 1;
    sub_1BC38B554();
    v5 = (_BYTE *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode);
    swift_beginAccess();
    *v5 = 1;
    v6 = sub_1BC38B0D8();
    v7 = 0.0;
    if ((*v5 & 1) == 0)
    {
      if (qword_1EF4283D8 != -1)
        swift_once();
      v7 = -*(double *)&qword_1EF459B18;
    }
    objc_msgSend(v6, sel_setConstant_, v7);

    v8 = (_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView)
                 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
    swift_beginAccess();
    *v8 = 1;
    sub_1BC44796C();
    v9 = sub_1BC5E7884();
    objc_msgSend(v9, sel_setAlpha_, 1.0);
  }
  else
  {
    swift_beginAccess();
    *v4 = 0;
    sub_1BC38B554();
    v10 = (_BYTE *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode);
    swift_beginAccess();
    *v10 = 0;
    v11 = sub_1BC38B0D8();
    v12 = 0.0;
    if ((*v10 & 1) == 0)
    {
      if (qword_1EF4283D8 != -1)
        swift_once();
      v12 = -*(double *)&qword_1EF459B18;
    }
    objc_msgSend(v11, sel_setConstant_, v12);

    v13 = (_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView)
                  + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
    swift_beginAccess();
    *v13 = 0;
    sub_1BC44796C();
    v9 = sub_1BC5E7884();
    objc_msgSend(v9, sel_setAlpha_, 0.0);
  }

  sub_1BC5E9C48();
}

void sub_1BC5E87BC()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  void (**v3)(char *, uint64_t);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  int *v17;
  uint64_t v18;
  id v19;
  void *v20;
  char *v21;
  char *v22;
  unsigned __int8 *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  char *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  void *v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  char v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  id v108;
  id v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  char *v118;
  id v119;
  void *v120;
  uint64_t v121;
  id v122;
  char *v123;
  void (**v124)(char *, uint64_t);
  uint64_t v125;
  _QWORD v126[3];
  ValueMetadata *v127;
  _UNKNOWN **v128;
  void *v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  char v137;
  char *v138;

  v1 = v0;
  v2 = sub_1BC62BB34();
  v3 = *(void (***)(char *, uint64_t))(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1EF42BC10, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v92 - v7;
  v9 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item];
  swift_beginAccess();
  sub_1BC3A9BF4(v12, (uint64_t)v126, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v127)
  {
    sub_1BC3801D0((uint64_t)v126, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
LABEL_8:
    sub_1BC62BAF8();
    v23 = v1;
    v24 = sub_1BC62BB28();
    v25 = sub_1BC62CAC4();
    if (os_log_type_enabled(v24, v25))
    {
      v125 = v2;
      v26 = (uint8_t *)swift_slowAlloc();
      v123 = (char *)swift_slowAlloc();
      v138 = v123;
      *(_DWORD *)v26 = 136446210;
      v122 = v26 + 4;
      v124 = v3;
      sub_1BC3A9BF4(v12, (uint64_t)v126, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
      sub_1BC3A9C44(0, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
      v27 = sub_1BC62C6F8();
      v126[0] = sub_1BC4991F0(v27, v28, (uint64_t *)&v138);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v24, v25, "Incorrect view model for UDCRecentCell: %{public}s", v26, 0xCu);
      v29 = v123;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v29, -1, -1);
      MEMORY[0x1BCCF36A8](v26, -1, -1);

      v124[1](v5, v125);
    }
    else
    {

      v3[1](v5, v2);
    }
    return;
  }
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UDCRecentItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_8;
  v107 = v8;
  v109 = v138;
  v13 = &v138[OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData];
  *v11 = v138[OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData];
  swift_storeEnumTagMultiPayload();
  if (qword_1ED6A4878 != -1)
    swift_once();
  v14 = qword_1ED6A54F0;
  v15 = sub_1BC5E76B0();
  v138 = *(char **)(v14 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v15);
  sub_1BC62AA6C();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
  sub_1BC3A9E00();
  swift_retain();
  sub_1BC62B888();

  swift_release();
  v16 = (void *)v126[0];
  v17 = (int *)type metadata accessor for UserDomainConceptViewData();
  v18 = (uint64_t)&v13[v17[9]];
  v19 = v16;
  v20 = (void *)sub_1BC3A9E48(v18, v19);
  v22 = v21;
  v108 = v19;

  if (v22)
  {
    v119 = v20;
  }
  else
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v30 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v119 = (id)sub_1BC62A4A8();
    v22 = v31;
    swift_bridgeObjectRelease();

  }
  v32 = *((_QWORD *)v13 + 4);
  v118 = (char *)*((_QWORD *)v13 + 3);
  v121 = v32;
  swift_bridgeObjectRetain();
  BrowseCategory.systemImageName.getter();
  if (v33
    && (v34 = (void *)sub_1BC62C650(),
        swift_bridgeObjectRelease(),
        v35 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v34),
        v34,
        v35))
  {
    v123 = (char *)objc_msgSend(v35, sel_imageWithRenderingMode_, 1);

  }
  else
  {
    v123 = 0;
  }
  v122 = BrowseCategory.tintColorForTemplateImage.getter();
  v36 = *(void **)&v13[v17[10]];
  if (!v36)
    goto LABEL_22;
  v37 = v36;
  if (!objc_msgSend(v37, sel_hasRenderableContent))
  {

LABEL_22:
    v38 = 0;
    goto LABEL_23;
  }
  v38 = objc_msgSend((id)objc_opt_self(), sel_referenceRangeViewDataFromInspectableValueInRange_, v37);

LABEL_23:
  v39 = v17[12];
  v40 = &v13[v17[11]];
  v41 = *((_QWORD *)v40 + 1);
  v115 = *(_QWORD *)v40;
  v43 = *(_QWORD *)&v13[v39];
  v42 = *(_QWORD *)&v13[v39 + 8];
  LODWORD(v120) = v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LODWORD(v114) = sub_1BC5E7A84();
  v116 = v38;
  v44 = v38;
  swift_bridgeObjectRetain();
  v45 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46 = v123;
  v47 = v122;
  v124 = (void (**)(char *, uint64_t))v1;
  v110 = v11;
  if (v42)
  {
    v48 = sub_1BC62C710();
    v125 = v49;
    swift_bridgeObjectRelease();
  }
  else
  {
    v125 = 0;
    v48 = v43;
  }
  v105 = v48;
  v50 = v125;
  swift_bridgeObjectRetain();
  v51 = v121;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v52 = v46;
  v53 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  v54 = *(uint64_t *)((char *)v124 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView);
  v127 = &type metadata for UserDomainConceptFeedItemViewData;
  v128 = &protocol witness table for UserDomainConceptFeedItemViewData;
  v55 = swift_allocObject();
  v126[0] = v55;
  *(_QWORD *)(v55 + 16) = v118;
  *(_QWORD *)(v55 + 24) = v51;
  *(_QWORD *)(v55 + 32) = v119;
  *(_QWORD *)(v55 + 40) = v22;
  v56 = v122;
  *(_QWORD *)(v55 + 48) = v123;
  *(_QWORD *)(v55 + 56) = v56;
  v57 = v115;
  *(_QWORD *)(v55 + 64) = v116;
  *(_QWORD *)(v55 + 72) = v57;
  *(_QWORD *)(v55 + 80) = v45;
  *(_QWORD *)(v55 + 88) = v48;
  v117 = v45;
  *(_QWORD *)(v55 + 96) = v50;
  *(_QWORD *)(v55 + 104) = 0;
  v125 = v50;
  *(_BYTE *)(v55 + 112) = 1;
  v58 = (int)v120;
  *(_BYTE *)(v55 + 113) = (_BYTE)v120;
  v85 = (v114 & 1) == 0;
  *(_BYTE *)(v55 + 114) = v114 & 1;
  *(_WORD *)(v55 + 115) = 256;
  v59 = v54 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  v60 = 0x10000;
  if (v85)
    v60 = 0;
  v114 = v60;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v102 = v52;
  v103 = v53;
  v104 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC3AA078((uint64_t)v126, v59, (unint64_t *)&qword_1EF42AF38, &qword_1EF42AF40);
  swift_endAccess();
  sub_1BC38BF54();
  sub_1BC3801D0((uint64_t)v126, (uint64_t)&qword_1EF42AF38, (uint64_t)&qword_1EF42AF40, (uint64_t)&protocol descriptor for ConceptTitleViewContentProviding, (uint64_t (*)(_QWORD))sub_1BC3A9C44);
  v61 = *(uint64_t *)((char *)v124 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView);
  v106 = v61;
  v62 = 1;
  if (v58)
    v62 = 257;
  v63 = v62 | v114;
  v64 = v61 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  swift_beginAccess();
  v113 = *(_QWORD *)v64;
  v112 = *(_QWORD *)(v64 + 8);
  v99 = *(_QWORD *)(v64 + 16);
  v65 = v51;
  v98 = *(_QWORD *)(v64 + 24);
  v97 = *(void **)(v64 + 32);
  v96 = *(void **)(v64 + 40);
  v120 = *(void **)(v64 + 48);
  v66 = *(_QWORD *)(v64 + 64);
  v114 = *(_QWORD *)(v64 + 56);
  v67 = *(_QWORD *)(v64 + 80);
  v111 = *(_QWORD *)(v64 + 72);
  v68 = *(_QWORD *)(v64 + 88);
  v101 = *(unsigned int *)(v64 + 96);
  v100 = *(unsigned __int8 *)(v64 + 100);
  v69 = v101 | (v100 << 32);
  *(_QWORD *)v64 = v118;
  *(_QWORD *)(v64 + 8) = v65;
  *(_QWORD *)(v64 + 16) = v119;
  *(_QWORD *)(v64 + 24) = v22;
  v70 = v122;
  *(_QWORD *)(v64 + 32) = v123;
  *(_QWORD *)(v64 + 40) = v70;
  v71 = v115;
  *(_QWORD *)(v64 + 48) = v116;
  *(_QWORD *)(v64 + 56) = v71;
  v72 = v105;
  *(_QWORD *)(v64 + 64) = v117;
  *(_QWORD *)(v64 + 72) = v72;
  *(_QWORD *)(v64 + 80) = v125;
  *(_QWORD *)(v64 + 88) = 0;
  *(_DWORD *)(v64 + 96) = v63;
  *(_BYTE *)(v64 + 100) = 1;
  swift_bridgeObjectRetain();
  v123 = v22;
  swift_bridgeObjectRetain();
  v118 = v102;
  v122 = v103;
  v119 = v104;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v95 = v69;
  v94 = v68;
  v93 = v67;
  v73 = v113;
  v74 = v112;
  v75 = v99;
  v76 = v98;
  v77 = v97;
  v78 = v96;
  sub_1BC3EE064(v113, v112, v99, v98, v97, v96, v120);
  v79 = v120;
  v80 = v114;
  sub_1BC3EDFF4(v73, v74, v75, v76, v77, v78, v120);
  v126[0] = v73;
  v126[1] = v74;
  v126[2] = v75;
  v127 = (ValueMetadata *)v76;
  v128 = (_UNKNOWN **)v77;
  v129 = v78;
  v130 = v79;
  v131 = v80;
  v132 = v66;
  v133 = v111;
  v134 = v93;
  v135 = v94;
  v137 = v100;
  v136 = v101;
  sub_1BC446F3C((uint64_t)v126);
  sub_1BC3EDFF4(v113, v112, v75, v76, v77, v78, v120);
  v81 = sub_1BC5E7884();
  sub_1BC5E7A84();
  v82 = v107;
  static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
  v83 = sub_1BC62CF98();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 0, 1, v83);
  sub_1BC62CFB0();

  v84 = sub_1BC5E7A84();
  v85 = (v84 & 1) == 0;
  if ((v84 & 1) != 0)
    v86 = 0x7475426E69706E55;
  else
    v86 = 0x6F747475426E6950;
  if (v85)
    v87 = 0xE90000000000006ELL;
  else
    v87 = 0xEB000000006E6F74;
  sub_1BC5E9970(v86, v87);
  v89 = v88;
  swift_bridgeObjectRelease();
  if (v89)
  {
    v90 = sub_1BC5E7884();
    v91 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v90, sel_setAccessibilityIdentifier_, v91);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    sub_1BC348D78((uint64_t)v110, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  }
  else
  {
    sub_1BC348D78((uint64_t)v110, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1BC5E9694()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  v22 = sub_1BC62A970();
  v2 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void (*)(uint64_t))MEMORY[0x1E0D2AAA0];
  sub_1BC384E68(0, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = sub_1BC62ADD8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_sectionContext;
  swift_beginAccess();
  sub_1BC397AF4(v13, (uint64_t)v8, &qword_1EF42BC08, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1BC3AA0C8((uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1BC62ADCC();
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_1BC62D1D8();
  v15 = sub_1BC62C680();
  v17 = v16;
  swift_bridgeObjectRelease();
  v24 = v15;
  v25 = v17;
  sub_1BC62C764();
  v23 = sub_1BC62A964();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v23 = sub_1BC62A958();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v18 = v24;
  v19 = v25;
  v20 = (void *)sub_1BC62C650();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v20);

  swift_bridgeObjectRetain();
  sub_1BC38BC14(v18, v19);
  sub_1BC447C6C(v18, v19);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BC5E9970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD v16[2];
  _BYTE v17[24];
  uint64_t v18;

  v5 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v2 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1BC3A9BF4(v8, (uint64_t)v17, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v18)
  {
    sub_1BC3801D0((uint64_t)v17, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
    return 0;
  }
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UDCRecentItem();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  sub_1BC3AA02C(v16[1] + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v7);
  swift_release();
  v10 = *((_QWORD *)v7 + 3);
  v9 = *((_QWORD *)v7 + 4);
  swift_bridgeObjectRetain();
  sub_1BC348D78((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC6398E0;
  strcpy((char *)(v11 + 32), "LabLatestView");
  *(_WORD *)(v11 + 46) = -4864;
  *(_QWORD *)(v11 + 48) = a1;
  *(_QWORD *)(v11 + 56) = a2;
  *(_QWORD *)(v11 + 64) = v10;
  *(_QWORD *)(v11 + 72) = v9;
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v13 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v13)
    return 0;
  v14 = sub_1BC62C680();

  return v14;
}

void sub_1BC5E9C48()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  double v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  double v46;
  id v47;
  id v48;
  id v49;
  id v50;
  double v51;
  id v52;
  id v53;
  id v54;
  SEL *v55;
  double v56;
  int v57;
  id v58;
  id v59;
  unint64_t v60;
  const char *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  char v73;
  double v74;
  uint64_t v75;
  id v76;
  id v77;
  void *v78;
  uint64_t v79;
  id v80;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_activeConstraints];
  swift_beginAccess();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v80 = v2;
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC64B700;
  v6 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView];
  v7 = objc_msgSend(v6, sel_leadingAnchor);
  v8 = objc_msgSend(v1, sel_contentView);
  v9 = objc_msgSend(v8, (SEL)&selRef_dateCache + 6);

  v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(_QWORD *)(v5 + 32) = v10;
  v11 = objc_msgSend(v6, sel_topAnchor);
  v12 = objc_msgSend(v1, sel_contentView);
  v13 = objc_msgSend(v12, sel_topAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(_QWORD *)(v5 + 40) = v14;
  v15 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView];
  v16 = objc_msgSend(v15, sel_leadingAnchor);
  v17 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v18 = objc_msgSend(v17, sel_leadingAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(_QWORD *)(v5 + 48) = v19;
  v20 = objc_msgSend(v15, sel_trailingAnchor);
  v21 = sub_1BC5E7884();
  v22 = objc_msgSend(v21, (SEL)&selRef_dateCache + 6);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, -7.0);
  *(_QWORD *)(v5 + 56) = v23;
  v24 = objc_msgSend(v15, sel_topAnchor);
  v25 = objc_msgSend(v6, sel_bottomAnchor);
  v26 = objc_msgSend(v24, sel_constraintGreaterThanOrEqualToAnchor_constant_, v25, 7.0);

  LODWORD(v27) = 1140129792;
  objc_msgSend(v26, sel_setPriority_, v27);
  *(_QWORD *)(v5 + 64) = v26;
  v28 = objc_msgSend(v15, sel_bottomAnchor);
  v29 = objc_msgSend(v1, sel_contentView);
  v30 = objc_msgSend(v29, sel_bottomAnchor);

  v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v30);
  *(_QWORD *)(v5 + 72) = v31;
  v32 = sub_1BC5E7884();
  v33 = objc_msgSend(v32, sel_centerYAnchor);

  v34 = objc_msgSend(v1, sel_contentView);
  v35 = objc_msgSend(v34, sel_centerYAnchor);

  v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
  *(_QWORD *)(v5 + 80) = v36;
  v37 = sub_1BC5E7884();
  v38 = objc_msgSend(v37, sel_heightAnchor);

  v39 = sub_1BC5E7884();
  v40 = objc_msgSend(v39, sel_widthAnchor);

  v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_multiplier_, v40, 1.0);
  *(_QWORD *)(v5 + 88) = v41;
  v42 = sub_1BC5E7884();
  v43 = objc_msgSend(v42, sel_widthAnchor);

  v44 = objc_msgSend(v1, sel_traitCollection);
  v45 = objc_msgSend(v44, sel_preferredContentSizeCategory);
  LOBYTE(v26) = sub_1BC62CD1C();

  v46 = 32.0;
  if ((v26 & 1) != 0)
    v46 = 64.0;
  v47 = objc_msgSend(v43, sel_constraintEqualToConstant_, v46);

  *(_QWORD *)(v5 + 96) = v47;
  v48 = objc_msgSend(v1, sel_contentView);
  v49 = objc_msgSend(v48, sel_heightAnchor);

  v50 = objc_msgSend(v49, sel_constraintGreaterThanOrEqualToConstant_, 115.0);
  LODWORD(v51) = 1148846080;
  objc_msgSend(v50, sel_setPriority_, v51);
  *(_QWORD *)(v5 + 104) = v50;
  v52 = objc_msgSend(v1, sel_contentView);
  v53 = objc_msgSend(v52, sel_heightAnchor);

  v54 = objc_msgSend(v53, sel_constraintEqualToConstant_, 115.0);
  v55 = (SEL *)&selRef_titleLabel;
  LODWORD(v56) = 1132068864;
  objc_msgSend(v54, sel_setPriority_, v56);
  *(_QWORD *)(v5 + 112) = v54;
  sub_1BC62C890();
  *v3 = v5;
  swift_bridgeObjectRelease();
  v57 = v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode];
  v58 = objc_msgSend(v6, sel_trailingAnchor);
  v59 = sub_1BC5E7884();
  v60 = (unint64_t)objc_msgSend(v59, sel_leadingAnchor);

  v61 = sel_constraintEqualToAnchor_constant_;
  if (v57 == 1)
  {
    v62 = objc_msgSend(v58, sel_constraintEqualToAnchor_constant_, v60, -7.0);

    v63 = sub_1BC5E7884();
    v64 = objc_msgSend(v63, sel_trailingAnchor);

    v65 = objc_msgSend(v1, sel_contentView);
    v55 = (SEL *)objc_msgSend(v65, sel_trailingAnchor);

    v58 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v55, -16.0);
    swift_beginAccess();
    v60 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v1 = (char *)sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      v66 = (uint64_t)(v1 + 2);
      if (!__OFADD__(v1, 2))
        goto LABEL_12;
    }
    else
    {
      v1 = *(char **)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
      v66 = (uint64_t)(v1 + 2);
      if (!__OFADD__(v1, 2))
        goto LABEL_12;
    }
    __break(1u);
  }
  v62 = objc_msgSend(v58, v61, v60, 7.0);

  v67 = sub_1BC5E7884();
  v68 = objc_msgSend(v67, v55[7]);

  v69 = objc_msgSend(v1, sel_contentView);
  v70 = objc_msgSend(v69, v55[7]);

  v71 = objc_msgSend(v1, sel_traitCollection);
  v72 = objc_msgSend(v71, sel_preferredContentSizeCategory);
  v73 = sub_1BC62CD1C();

  v74 = 56.0;
  if ((v73 & 1) == 0)
    v74 = 24.0;
  v58 = objc_msgSend(v68, sel_constraintEqualToAnchor_constant_, v70, v74);

  swift_beginAccess();
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v79 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    v66 = v79 + 2;
    if (!__OFADD__(v79, 2))
      goto LABEL_12;
LABEL_22:
    __break(1u);
    return;
  }
  v75 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v66 = v75 + 2;
  if (__OFADD__(v75, 2))
    goto LABEL_22;
LABEL_12:
  sub_1BC5EC1EC(v66, 1);
  sub_1BC62C890();
  v76 = v62;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v77 = v58;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  swift_endAccess();

  swift_bridgeObjectRetain();
  v78 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v80, sel_activateConstraints_, v78);

}

uint64_t sub_1BC5EA6B4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t result;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;

  v5 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v5);
  v7 = (id *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = v2 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1BC3A9BF4(v8, (uint64_t)v28, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v29)
    return sub_1BC3801D0((uint64_t)v28, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UDCRecentItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    sub_1BC3AA02C(v27 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v7);
    swift_release();
    v10 = v7[1];
    sub_1BC348D78((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
    if (qword_1ED6A4878 != -1)
      swift_once();
    v11 = qword_1ED6A54F0;
    v12 = sub_1BC5E76B0();
    v27 = *(_QWORD *)(v11 + OBJC_IVAR___HRProfileManager_lock);
    MEMORY[0x1E0C80A78](v12);
    *(&v26 - 2) = v13;
    *(&v26 - 1) = v11;
    sub_1BC62AA6C();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
    sub_1BC3A9E00();
    swift_retain();
    sub_1BC62B888();

    swift_release();
    v14 = (void *)v28[0];
    if (qword_1ED6A31B0 != -1)
      swift_once();
    v15 = objc_allocWithZone((Class)type metadata accessor for UserDomainConceptDetailViewController());
    v16 = v10;
    v17 = v14;
    v18 = sub_1BC4E89A4(v16, v17);

    sub_1BC3A9BF4(a1, (uint64_t)v28, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC34B508);
    v19 = v29;
    if (v29)
    {
      v20 = __swift_project_boxed_opaque_existential_1Tm(v28, v29);
      v21 = *(_QWORD *)(v19 - 8);
      v22 = MEMORY[0x1E0C80A78](v20);
      v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v21 + 16))(v24, v22);
      v25 = sub_1BC62D568();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v19);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
    }
    else
    {
      v25 = 0;
    }
    objc_msgSend(a2, sel_showViewController_sender_, v18, v25);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BC5EAB04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t inited;
  id v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;

  v2 = v1;
  v4 = sub_1BC62BABC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v11);
  v13 = (id *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = v2 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1BC3A9BF4(v14, (uint64_t)&v53, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v55)
    return sub_1BC3801D0((uint64_t)&v53, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
  v15 = sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UDCRecentItem();
  v51 = v15;
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    return result;
  v47 = v8;
  v48 = v10;
  v49 = v7;
  v44 = v5;
  v45 = v4;
  v46 = a1;
  sub_1BC3AA02C(v52 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v13);
  swift_release();
  v50 = v13[1];
  sub_1BC348D78((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
  if (qword_1ED6A4878 != -1)
    swift_once();
  v17 = qword_1ED6A54F0;
  v18 = sub_1BC5E76B0();
  v19 = objc_msgSend(v18, sel_profileIdentifier);

  v52 = *(_QWORD *)(v17 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v20);
  *(&v44 - 2) = v17;
  *(&v44 - 1) = (uint64_t)v19;
  sub_1BC62AA6C();
  sub_1BC62BA74();
  sub_1BC3A9E00();
  swift_retain();
  sub_1BC62B888();

  swift_release();
  v21 = v53;
  v22 = sub_1BC5E7A84();
  v23 = (v22 & 1) == 0;
  if ((v22 & 1) != 0)
    v24 = 0x7475426E69706E55;
  else
    v24 = 0x6F747475426E6950;
  if (v23)
    v25 = 0xE90000000000006ELL;
  else
    v25 = 0xEB000000006E6F74;
  sub_1BC5E9970(v24, v25);
  v27 = v26;
  v28 = swift_bridgeObjectRelease();
  if (v27)
  {
    v29 = (void *)sub_1BC5E7884(v28);
    v30 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v29, sel_setAccessibilityIdentifier_, v30);

  }
  sub_1BC3A9BF4(v14, (uint64_t)&v53, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v55)
  {

    swift_release();
    return sub_1BC3801D0((uint64_t)&v53, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v31 = *(_QWORD *)(v52 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration);
    swift_release();
    v32 = v21;
    v33 = sub_1BC62BA2C();
    if (v33 >> 62)
      v34 = sub_1BC62D3B8();
    else
      v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    v36 = (uint64_t)v48;
    v35 = (uint64_t)v49;
    swift_bridgeObjectRelease();
    if (!v34)
    {
      v37 = sub_1BC5E76B0();
      type metadata accessor for OnboardingTileAppearanceManager();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = v37;
      v39 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
      v40 = v37;
      v41 = (void *)sub_1BC62C650();
      v42 = objc_msgSend(v39, sel_initWithCategory_domainName_healthStore_, 0, v41, v40);

      *(_QWORD *)(inited + 24) = v42;
      swift_storeEnumTagMultiPayload();
      sub_1BC370C18(1, v36);
      swift_release();
      swift_release();
      sub_1BC348D78(v36, (uint64_t (*)(_QWORD))type metadata accessor for OnboardingViewIdentifier);
    }
    v43 = v50;
    ListConceptManager.togglePinState(for:onCommitHandler:)(v50, 0, 0, v35);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v35, v45);
    if (qword_1ED6A3198 != -1)
      swift_once();
    v53 = v31;
    v54 = 0;
    sub_1BC4E4C94((uint64_t)v43, v32, v46, 0, &v53);

    return swift_release();
  }
  else
  {

    return swift_release();
  }
}

id sub_1BC5EB0C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecentUDCCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC5EB19C()
{
  return type metadata accessor for RecentUDCCell();
}

uint64_t type metadata accessor for RecentUDCCell()
{
  uint64_t result;

  result = qword_1EF4397A8;
  if (!qword_1EF4397A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC5EB1E0()
{
  unint64_t v0;

  sub_1BC384E68(319, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BC5EB29C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  return sub_1BC3A9BF4(v3, a1, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
}

uint64_t sub_1BC5EB30C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  v4 = MEMORY[0x1E0D2A060];
  sub_1BC3AA078(a1, v3, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
  swift_endAccess();
  sub_1BC5E87BC();
  return sub_1BC3801D0(a1, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, v4, (uint64_t (*)(_QWORD))sub_1BC3A9C44);
}

uint64_t (*sub_1BC5EB3B8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5EB400;
}

uint64_t sub_1BC5EB400(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC5E87BC);
}

uint64_t sub_1BC5EB40C(void *a1, void *a2)
{
  id v4;
  _QWORD v6[4];

  v6[3] = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  v6[0] = a1;
  v4 = a1;
  sub_1BC5EA6B4((uint64_t)v6, a2);
  return sub_1BC3801D0((uint64_t)v6, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BC34B508);
}

uint64_t sub_1BC5EB49C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_sectionContext;
  swift_beginAccess();
  return sub_1BC397AF4(v3, a1, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
}

uint64_t sub_1BC5EB4FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_sectionContext;
  swift_beginAccess();
  sub_1BC3AA114(a1, v3);
  swift_endAccess();
  sub_1BC5E9694();
  return sub_1BC3AA0C8(a1);
}

uint64_t (*sub_1BC5EB568(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5EB5B0;
}

uint64_t sub_1BC5EB5B0(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC5E9694);
}

id sub_1BC5EB5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  id v5;
  _QWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  v1 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v1);
  v3 = (id *)((char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1BC3A9BF4(v4, (uint64_t)v8, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (!v9)
  {
    sub_1BC3801D0((uint64_t)v8, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
    return 0;
  }
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for UDCRecentItem();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  sub_1BC3AA02C(v7[1] + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v3);
  swift_release();
  v5 = v3[1];
  sub_1BC348D78((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
  return v5;
}

id sub_1BC5EB718()
{
  return sub_1BC5EB5BC();
}

void sub_1BC5EB738(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v3 = v2;
  v5 = a1 & 1;
  sub_1BC384E68(0, &qword_1EF42BC10, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)aBlock - v7;
  if (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode) != v5)
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode) = v5;
    v9 = sub_1BC5E7884();
    sub_1BC5E7A84();
    static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
    v10 = sub_1BC62CF98();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
    sub_1BC62CFB0();

    if ((a2 & 1) != 0)
    {
      v11 = (void *)objc_opt_self();
      v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1BC5EC320;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC39BE70;
      aBlock[3] = &block_descriptor_74;
      v13 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v11, sel_animateWithDuration_animations_, v13, 0.25);
      _Block_release(v13);
    }
    else
    {
      sub_1BC5E8568();
    }
  }
}

void sub_1BC5EB8CC(char a1, char a2)
{
  sub_1BC5EB738(a1, a2);
}

id sub_1BC5EB8EC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if ((sub_1BC5E7A84() & 1) != 0)
    v1 = sub_1BC3AA1B4((uint64_t)sub_1BC5EC340, v0);
  else
    v1 = sub_1BC3AA3D0((uint64_t)sub_1BC5EC340, v0);
  v2 = v1;
  sub_1BC5E9970(0xD000000000000013, 0x80000001BC650BE0);
  if (v3)
  {
    v4 = v2;
    v5 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  }
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(v6 + 32) = v2;
  sub_1BC62C890();
  sub_1BC34B6A0(0, &qword_1EF42BC18);
  v7 = v2;
  v8 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v8);
  swift_release();

  return v9;
}

void sub_1BC5EBA9C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = a5 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCF37A4](v6);
  if (v7)
  {
    v8 = (void *)v7;
    sub_1BC5EAB04(2);
    ((void (*)(uint64_t))a3)(1);

  }
  else
  {
    a3();
  }
}

id sub_1BC5EBB1C()
{
  return sub_1BC5EB8EC();
}

uint64_t sub_1BC5EBB3C()
{
  id v0;
  uint64_t v1;

  if ((sub_1BC5E7A84() & 1) != 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
  }
  else if (qword_1ED6A4888 != -1)
  {
    swift_once();
  }
  v0 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v1;
}

id sub_1BC5EBC70()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  id (*v13)(uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;

  v1 = v0;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4 = (void *)objc_opt_self();
  v15 = sub_1BC5EC348;
  v16 = v2;
  v5 = MEMORY[0x1E0C809B0];
  v11 = MEMORY[0x1E0C809B0];
  v12 = 1107296256;
  v13 = sub_1BC3A9D48;
  v14 = &block_descriptor_11_2;
  v6 = _Block_copy(&v11);
  v7 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  v15 = sub_1BC5EC368;
  v16 = v3;
  v11 = v5;
  v12 = 1107296256;
  v13 = sub_1BC3A9D80;
  v14 = &block_descriptor_14_1;
  v8 = _Block_copy(&v11);
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v4, sel_configurationWithIdentifier_previewProvider_actionProvider_, 0, v6, v8);
  swift_release();
  swift_release();
  _Block_release(v8);
  _Block_release(v6);
  swift_release();
  return v9;
}

uint64_t sub_1BC5EBE04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[5];

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCF37A4](v2);
  if (!v3)
    return 0;
  v4 = (void *)v3;
  v5 = v3 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1BC3A9BF4(v5, (uint64_t)v19, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC3A9C44);
  if (v19[3])
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    type metadata accessor for UDCRecentItem();
    if ((swift_dynamicCast() & 1) == 0
      || ((v6 = *(_QWORD *)(v18 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration),
           swift_release(),
           v6 <= 4)
        ? (v7 = ((1 << v6) & 0x13) == 0)
        : (v7 = 1),
          v7))
    {

      return 0;
    }
    else
    {
      sub_1BC5EBB3C();
      sub_1BC5E7A84();
      v9 = (void *)sub_1BC62C650();
      v10 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v9);

      sub_1BC34B6A0(0, &qword_1EF42BC28);
      v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v12 = (void *)sub_1BC62CEE4();
      sub_1BC5E9970(0x73657250676E6F4CLL, 0xE900000000000073);
      if (v13)
      {
        v14 = v12;
        v15 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setAccessibilityIdentifier_, v15, 0, 0, 0, sub_1BC5EC370, v11);

      }
      sub_1BC34B6A0(0, &qword_1EF42BC30);
      sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1BC6396B0;
      *(_QWORD *)(v16 + 32) = v12;
      v19[0] = v16;
      sub_1BC62C890();
      v8 = sub_1BC62CDE8();

    }
  }
  else
  {

    sub_1BC3801D0((uint64_t)v19, (uint64_t)&qword_1EF43AE70, (uint64_t)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC3A9C44);
    return 0;
  }
  return v8;
}

void sub_1BC5EC174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCF37A4](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1BC5EAB04(1);

  }
}

id sub_1BC5EC1C8()
{
  return sub_1BC5EBC70();
}

uint64_t sub_1BC5EC1EC(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x1BCCF24D8](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_1BC5EC2A8()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC5EC2FC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC5EC320()
{
  uint64_t v0;

  sub_1BC5E845C(v0);
}

uint64_t block_copy_helper_71(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_71()
{
  return swift_release();
}

void sub_1BC5EC340(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_1BC5EBA9C(a1, a2, a3, a4, v4);
}

id sub_1BC5EC348()
{
  return sub_1BC3A8EBC();
}

uint64_t sub_1BC5EC368(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5EBE04(a1, v1);
}

void sub_1BC5EC370(uint64_t a1)
{
  uint64_t v1;

  sub_1BC5EC174(a1, v1);
}

uint64_t sub_1BC5EC378()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC5EC39C()
{
  return sub_1BC5EAB04(0);
}

uint64_t MedicalRecordTimelineSystemStatusItem.SystemStatus.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = v0[1];
  if (v1 == 1)
    return sub_1BC62D67C();
  v3 = *v0;
  sub_1BC62D67C();
  if (!v1)
    return sub_1BC62D688();
  sub_1BC62D688();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  return sub_1BC5BD144(v3, v1);
}

uint64_t MedicalRecordTimelineSystemStatusItem.SystemStatus.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  v1 = v0[1];
  sub_1BC62D670();
  if (v1 == 1)
  {
    sub_1BC62D67C();
  }
  else
  {
    sub_1BC62D67C();
    sub_1BC62D688();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_1BC62C740();
      sub_1BC5BD144(v2, v1);
    }
  }
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5EC50C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = v0[1];
  if (v1 == 1)
    return sub_1BC62D67C();
  v3 = *v0;
  sub_1BC62D67C();
  if (!v1)
    return sub_1BC62D688();
  sub_1BC62D688();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  return sub_1BC5BD144(v3, v1);
}

uint64_t sub_1BC5EC59C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  v1 = v0[1];
  sub_1BC62D670();
  if (v1 == 1)
  {
    sub_1BC62D67C();
  }
  else
  {
    sub_1BC62D67C();
    sub_1BC62D688();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_1BC62C740();
      sub_1BC5BD144(v2, v1);
    }
  }
  return sub_1BC62D6AC();
}

uint64_t MedicalRecordTimelineSystemStatusItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static MedicalRecordTimelineSystemStatusItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a2 + 16);
  v5 = v2;
  return _s15HealthRecordsUI37MedicalRecordTimelineSystemStatusItemC0gH0O2eeoiySbAE_AEtFZ_0((uint64_t *)&v5, (uint64_t *)&v4) & 1;
}

uint64_t sub_1BC5EC69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 24);
  if (v1 == 1)
    return sub_1BC62D67C();
  v3 = *(_QWORD *)(v0 + 16);
  sub_1BC62D67C();
  sub_1BC62D688();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    v4 = v3;
    v5 = v1;
  }
  else
  {
    v4 = v3;
    v5 = 0;
  }
  return sub_1BC5BD144(v4, v5);
}

uint64_t MedicalRecordTimelineSystemStatusItem.deinit()
{
  uint64_t v0;

  sub_1BC5BD144(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineSystemStatusItem.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BC5BD144(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5EC7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BC62D670();
  sub_1BC62C740();
  v1 = *(_QWORD *)(v0 + 24);
  if (v1 == 1)
  {
    sub_1BC62D67C();
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 16);
    sub_1BC62D67C();
    sub_1BC62D688();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_1BC62C740();
      v3 = v2;
      v4 = v1;
    }
    else
    {
      v3 = v2;
      v4 = 0;
    }
    sub_1BC5BD144(v3, v4);
  }
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5EC870()
{
  return sub_1BC5EC7B4();
}

uint64_t sub_1BC5EC890()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  sub_1BC62C740();
  v2 = *(_QWORD *)(v1 + 24);
  if (v2 == 1)
    return sub_1BC62D67C();
  v4 = *(_QWORD *)(v1 + 16);
  sub_1BC62D67C();
  sub_1BC62D688();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    v5 = v4;
    v6 = v2;
  }
  else
  {
    v5 = v4;
    v6 = 0;
  }
  return sub_1BC5BD144(v5, v6);
}

uint64_t sub_1BC5EC940()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BC62D670();
  v1 = *v0;
  sub_1BC62C740();
  v2 = *(_QWORD *)(v1 + 24);
  if (v2 == 1)
  {
    sub_1BC62D67C();
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 16);
    sub_1BC62D67C();
    sub_1BC62D688();
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_1BC62C740();
      v4 = v3;
      v5 = v2;
    }
    else
    {
      v4 = v3;
      v5 = 0;
    }
    sub_1BC5BD144(v4, v5);
  }
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5EC9FC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(*(_QWORD *)a1 + 16);
  v4 = *(_OWORD *)(*(_QWORD *)a2 + 16);
  v5 = v2;
  return _s15HealthRecordsUI37MedicalRecordTimelineSystemStatusItemC0gH0O2eeoiySbAE_AEtFZ_0((uint64_t *)&v5, (uint64_t *)&v4) & 1;
}

id sub_1BC5ECA38()
{
  return sub_1BC49C4B8(&OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell____lazy_storage___spinner, (uint64_t (*)(void))sub_1BC5ECA4C);
}

id sub_1BC5ECA4C()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  objc_msgSend(v0, sel_setAlpha_, 0.4);
  objc_msgSend(v0, sel_setHidesWhenStopped_, 1);
  v5 = sub_1BC62C680();
  v6 = v1;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v5, v6);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_1BC5ECB94()
{
  return sub_1BC49C4B8(&OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1BC5ECBA8);
}

id sub_1BC5ECBA8()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  objc_msgSend(v0, sel_setAlpha_, 0.4);
  v5 = sub_1BC62C680();
  v6 = v1;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v5, v6);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_1BC5ECCE8(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  objc_class *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  objc_super v47;

  sub_1BC384E68(0, &qword_1EF42C0C8, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - v10;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell____lazy_storage___spinner] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell____lazy_storage___titleLabel] = 0;
  v12 = &v4[OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item];
  v13 = (objc_class *)type metadata accessor for MedicalRecordTimelineSystemStatusItemCell();
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0;
  v47.receiver = v4;
  v47.super_class = v13;
  v14 = objc_msgSendSuper2(&v47, sel_initWithFrame_, a1, a2, a3, a4);
  v15 = objc_msgSend(v14, sel_contentView);
  v16 = sub_1BC5ECA38();
  objc_msgSend(v15, sel_addSubview_, v16);

  v17 = objc_msgSend(v14, sel_contentView);
  v18 = sub_1BC5ECB94();
  objc_msgSend(v17, sel_addSubview_, v18);

  v19 = v14;
  sub_1BC62BC60();
  v20 = sub_1BC62BC78();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
  MEMORY[0x1BCCF1FE0](v11);

  v21 = sub_1BC5ECA38();
  v22 = objc_msgSend(v21, sel_topAnchor);

  v23 = objc_msgSend(v19, sel_contentView);
  v24 = objc_msgSend(v23, sel_topAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, 16.0);
  objc_msgSend(v25, sel_setActive_, 1);

  v26 = sub_1BC5ECA38();
  v27 = objc_msgSend(v26, sel_centerXAnchor);

  v28 = objc_msgSend(v19, sel_contentView);
  v29 = objc_msgSend(v28, sel_centerXAnchor);

  v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  objc_msgSend(v30, sel_setActive_, 1);

  v31 = sub_1BC5ECB94();
  v32 = objc_msgSend(v31, sel_topAnchor);

  v33 = sub_1BC5ECA38();
  v34 = objc_msgSend(v33, sel_bottomAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 8.0);
  objc_msgSend(v35, sel_setActive_, 1);

  v36 = sub_1BC5ECB94();
  v37 = objc_msgSend(v36, sel_centerXAnchor);

  v38 = objc_msgSend(v19, sel_contentView);
  v39 = objc_msgSend(v38, sel_centerXAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  objc_msgSend(v40, sel_setActive_, 1);

  v41 = sub_1BC5ECB94();
  v42 = objc_msgSend(v41, sel_bottomAnchor);

  v43 = objc_msgSend(v19, sel_contentView);
  v44 = objc_msgSend(v43, sel_bottomAnchor);

  v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v44, -16.0);
  objc_msgSend(v45, sel_setActive_, 1);

  return v19;
}

uint64_t sub_1BC5ED218(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC5ED288();
  return sub_1BC37AE60((uint64_t)v5);
}

uint64_t sub_1BC5ED288()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];

  v1 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v5, (uint64_t)v23);
  if (!v23[3])
  {
    sub_1BC37AE60((uint64_t)v23);
LABEL_6:
    sub_1BC62BAF8();
    v9 = v0;
    v10 = sub_1BC62BB28();
    v11 = sub_1BC62CAC4();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v21 = v1;
      v13 = (uint8_t *)v12;
      v14 = swift_slowAlloc();
      v22 = v14;
      *(_DWORD *)v13 = 136446210;
      sub_1BC37ADB0(v5, (uint64_t)v23);
      sub_1BC384E68(0, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
      v15 = sub_1BC62C6F8();
      v23[0] = sub_1BC4991F0(v15, v16, &v22);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v10, v11, "Incorrect view model for MedicalRecordTimelineSystemStatusItem: %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v14, -1, -1);
      MEMORY[0x1BCCF36A8](v13, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v21);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineSystemStatusItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  v6 = *(_QWORD *)(v22 + 24);
  if (v6 == 1)
  {
    v7 = sub_1BC5ECB94();
    objc_msgSend(v7, sel_setText_, 0);

    v8 = sub_1BC5ECA38();
    objc_msgSend(v8, sel_stopAnimating);
  }
  else
  {
    v18 = *(_QWORD *)(v22 + 16);
    swift_bridgeObjectRetain();
    v19 = sub_1BC5ECB94();
    if (v6)
    {
      v20 = (void *)sub_1BC62C650();
      sub_1BC5BD144(v18, v6);
    }
    else
    {
      v20 = 0;
    }
    objc_msgSend(v19, sel_setText_, v20);

    v8 = sub_1BC5ECA38();
    objc_msgSend(v8, sel_startAnimating);
  }

  return swift_release();
}

uint64_t sub_1BC5ED590@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC5ED5E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC5ED288();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC5ED64C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5ED694;
}

uint64_t sub_1BC5ED694(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC5ED288();
  return result;
}

id MedicalRecordTimelineSystemStatusItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineSystemStatusItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s15HealthRecordsUI37MedicalRecordTimelineSystemStatusItemC0gH0O2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v3 != 1)
  {
    if (v5 != 1)
    {
      if (v3)
      {
        if (!v5)
        {
          v6 = *a2;
          v7 = 0;
          goto LABEL_6;
        }
        if (v2 == v4 && v3 == v5)
        {
          sub_1BC5BCE90(*a1, v3);
          sub_1BC5BCE90(v2, v3);
          sub_1BC5BD144(v2, v3);
          sub_1BC5BD144(v2, v3);
          return 1;
        }
        v9 = sub_1BC62D574();
        sub_1BC5BCE90(v4, v5);
        sub_1BC5BCE90(v2, v3);
        sub_1BC5BD144(v2, v3);
        sub_1BC5BD144(v4, v5);
        if ((v9 & 1) == 0)
          return 0;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BC5BCE90(v4, v5);
        sub_1BC5BCE90(v2, 0);
        sub_1BC5BD144(v2, 0);
        sub_1BC5BD144(v4, v5);
        if (v5)
          goto LABEL_7;
      }
      return 1;
    }
LABEL_5:
    v6 = *a2;
    v7 = a2[1];
LABEL_6:
    sub_1BC5BCE90(v6, v7);
    sub_1BC5BCE90(v2, v3);
LABEL_7:
    sub_1BC5BD144(v2, v3);
    sub_1BC5BD144(v4, v5);
    return 0;
  }
  if (v5 != 1)
    goto LABEL_5;
  sub_1BC5BD144(*a1, 1);
  sub_1BC5BD144(v4, 1);
  return v5;
}

uint64_t type metadata accessor for MedicalRecordTimelineSystemStatusItemCell()
{
  return objc_opt_self();
}

unint64_t sub_1BC5ED8F0()
{
  unint64_t result;

  result = qword_1EF4397C0;
  if (!qword_1EF4397C0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordTimelineSystemStatusItem.SystemStatus, &type metadata for MedicalRecordTimelineSystemStatusItem.SystemStatus);
    atomic_store(result, (unint64_t *)&qword_1EF4397C0);
  }
  return result;
}

unint64_t sub_1BC5ED938()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4397C8;
  if (!qword_1EF4397C8)
  {
    v1 = type metadata accessor for MedicalRecordTimelineSystemStatusItem();
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordTimelineSystemStatusItem, v1);
    atomic_store(result, (unint64_t *)&qword_1EF4397C8);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelineSystemStatusItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC5ED99C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineSystemStatusItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t getEnumTagSinglePayload for MedicalRecordTimelineSystemStatusItem.SystemStatus(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MedicalRecordTimelineSystemStatusItem.SystemStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordTimelineSystemStatusItem.SystemStatus()
{
  return &type metadata for MedicalRecordTimelineSystemStatusItem.SystemStatus;
}

uint64_t method lookup function for MedicalRecordTimelineSystemStatusItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItemCell.didSelectCell(_:in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItemCell.deselectionBehavior.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

_QWORD *sub_1BC5EDB8C(void *a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;

  v3[5] = a1;
  v3[6] = a2;
  v3[7] = a3;
  v3[8] = 0;
  v5 = a1;
  swift_retain();
  v6 = a3;
  v7 = ConceptsDataSource.init(arrangedSections:isHidden:)(MEMORY[0x1E0DEE9D8], 0);
  swift_allocObject();
  swift_weakInit();
  sub_1BC5EE9FC();
  sub_1BC379B20(&qword_1EF439A78, 255, (uint64_t (*)(uint64_t))sub_1BC5EE9FC, MEMORY[0x1E0C95FB8]);
  swift_retain();
  v8 = sub_1BC62C0BC();
  swift_release();
  swift_release();
  swift_release();

  v7[8] = v8;
  swift_release();
  return v7;
}

uint64_t sub_1BC5EDCB0(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  _QWORD aBlock[6];

  v2 = sub_1BC62C47C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62C4AC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = result;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v13 = sub_1BC62CC74();
    v19 = v3;
    v14 = (void *)v13;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v10;
    *(_QWORD *)(v15 + 24) = v12;
    aBlock[4] = sub_1BC5EEAF0;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_75;
    v16 = _Block_copy(aBlock);
    v17 = v10;
    swift_retain();
    swift_release();
    sub_1BC62C494();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC379B20((unint64_t *)&qword_1ED6A5870, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35811C();
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v9, v5, v16);
    _Block_release(v16);
    swift_release();

    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

void sub_1BC5EDF00(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    sub_1BC546A60(0);
    sub_1BC5EDF5C(v1);

  }
  else
  {
    sub_1BC546A60(1);
  }
}

uint64_t sub_1BC5EDF5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t i;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  _QWORD v39[3];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46[2];
  _BYTE v47[40];
  uint64_t v48[6];
  __int128 v49;
  _QWORD v50[5];
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;

  v2 = v1;
  v4 = sub_1BC62A7B4();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = xmmword_1BC63C060;
  v6 = type metadata accessor for MedicalRecordTimelineAccountHeaderItem();
  v7 = (_QWORD *)swift_allocObject();
  type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell();
  sub_1BC379B20(&qword_1EF4398E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountHeaderItemCell);
  v8 = a1;
  v7[3] = sub_1BC62ADA8();
  v7[4] = v9;
  v7[2] = v8;
  v50[3] = v6;
  v50[4] = sub_1BC379B20(&qword_1EF4398E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountHeaderItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountHeaderItem);
  v50[0] = v7;
  if (qword_1EF4287E0 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_1EF438CA0 == 1 && objc_msgSend(v8, sel_needsLogin))
  {
    v10 = *(void **)(v2 + 56);
    v11 = type metadata accessor for MedicalRecordTimelineAccountReconnectItem();
    v12 = (_QWORD *)swift_allocObject();
    type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell();
    sub_1BC379B20(&qword_1EF439910, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountReconnectItemCell);
    v13 = v8;
    v14 = v10;
    v12[4] = sub_1BC62ADA8();
    v12[5] = v15;
    v12[2] = v13;
    v12[3] = v14;
    *((_QWORD *)&v52 + 1) = v11;
    v53 = sub_1BC379B20(&qword_1EF439918, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountReconnectItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountReconnectItem);
    *(_QWORD *)&v51 = v12;
  }
  else
  {
    v53 = 0;
    v51 = 0u;
    v52 = 0u;
  }
  v39[2] = v50;
  if ((byte_1EF438CA0 & 1) != 0 && objc_msgSend(v8, sel_wantsGatewayUpgrade))
  {
    v16 = *(void **)(v2 + 56);
    v17 = type metadata accessor for MedicalRecordTimelineAccountUpgradeItem();
    v18 = (_QWORD *)swift_allocObject();
    type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell();
    sub_1BC379B20(&qword_1EF439900, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeItemCell);
    v19 = v8;
    v20 = v16;
    v18[4] = sub_1BC62ADA8();
    v18[5] = v21;
    v18[2] = v19;
    v18[3] = v20;
    *((_QWORD *)&v55 + 1) = v17;
    v56 = sub_1BC379B20(&qword_1EF439908, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeItem);
    *(_QWORD *)&v54 = v18;
  }
  else
  {
    v56 = 0;
    v54 = 0u;
    v55 = 0u;
  }
  v22 = type metadata accessor for MedicalRecordTimelineAccountDetailsItem();
  v23 = (_QWORD *)swift_allocObject();
  type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell();
  sub_1BC379B20(&qword_1EF4398F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountDetailsItemCell);
  v24 = v8;
  v23[3] = sub_1BC62ADA8();
  v23[4] = v25;
  v23[2] = v24;
  v58 = v22;
  v59 = sub_1BC379B20(&qword_1EF4398F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDetailsItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountDetailsItem);
  v57 = v23;
  v39[1] = sub_1BC62AF4C();
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
  v48[0] = MEMORY[0x1E0DEE9D8];
  for (i = 4; i != 24; i += 5)
  {
    sub_1BC37ADB0((uint64_t)&v48[i + 4], (uint64_t)v47);
    sub_1BC3AC824((uint64_t)v47, (uint64_t)&v43);
    if (v44)
    {
      sub_1BC34E718(&v43, (uint64_t)v46);
      sub_1BC34E718(v46, (uint64_t)&v43);
      v27 = (_QWORD *)v48[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v27 = sub_1BC3B5CEC(0, v27[2] + 1, 1, v27);
        v48[0] = (uint64_t)v27;
      }
      v29 = v27[2];
      v28 = v27[3];
      if (v29 >= v28 >> 1)
        v48[0] = (uint64_t)sub_1BC3B5CEC((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
      v30 = v44;
      v31 = v45;
      v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v43, v44);
      v33 = MEMORY[0x1E0C80A78](v32);
      v35 = (char *)v39 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v36 + 16))(v35, v33);
      sub_1BC5EE8E8(v29, (uint64_t)v35, v48, v30, v31);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
    }
    else
    {
      sub_1BC37AE60((uint64_t)&v43);
    }
  }
  sub_1BC357158(0, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayDestroy();
  v37 = v40;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v37, v42);
  sub_1BC62B270();
  sub_1BC62B2D0();
  swift_release();
  return swift_bridgeObjectRelease();
}

void MedicalRecordTimelineAccountDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicalRecordTimelineAccountDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC5EE5C8()
{
  uint64_t v0;

  swift_release();
  return swift_release();
}

uint64_t MedicalRecordTimelineAccountDataSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v0;
}

uint64_t MedicalRecordTimelineAccountDataSource.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5EE684()
{
  MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordTimelineAccountDataSource);
  return sub_1BC62B834();
}

Swift::Void __swiftcall MedicalRecordTimelineAccountDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell();
  sub_1BC379B20(&qword_1EF4398E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountHeaderItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell();
  sub_1BC379B20(&qword_1EF439910, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountReconnectItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell();
  sub_1BC379B20(&qword_1EF439900, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell();
  sub_1BC379B20(&qword_1EF4398F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountDetailsItemCell);
  sub_1BC62CB48();
}

uint64_t sub_1BC5EE7DC()
{
  type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell();
  sub_1BC379B20(&qword_1EF4398E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountHeaderItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell();
  sub_1BC379B20(&qword_1EF439910, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountReconnectItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell();
  sub_1BC379B20(&qword_1EF439900, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountUpgradeItemCell);
  sub_1BC62CB48();
  type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell();
  sub_1BC379B20(&qword_1EF4398F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountDetailsItemCell);
  return sub_1BC62CB48();
}

uint64_t sub_1BC5EE8E8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1BC34E718(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1BC5EE960(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF439920, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDataSource, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountDataSource);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedicalRecordTimelineAccountDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDataSource.layout(for:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDataSource.reloadSection(account:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t sub_1BC5EE9D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC5EE9F4(void **a1)
{
  return sub_1BC5EDCB0(a1);
}

void sub_1BC5EE9FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF437D28)
  {
    sub_1BC5EEA60();
    v0 = sub_1BC62BF18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF437D28);
  }
}

void sub_1BC5EEA60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF437D30)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1EF431480);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF437D30);
  }
}

uint64_t sub_1BC5EEAC4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC5EEAF0()
{
  uint64_t v0;

  sub_1BC5EDF00(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_72(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_72()
{
  return swift_release();
}

uint64_t type metadata accessor for SharingDataSource(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF439AD0);
}

uint64_t sub_1BC5EEB24()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC5EEBA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t (*v9)(uint64_t *, uint64_t);
  uint64_t result;
  id v11;
  char v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;

  v2 = sub_1BC62C4D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = qword_1EF439A80;
  v6 = *(id *)(a1 + qword_1EF439A80);
  sub_1BC5F066C(v6);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v5 = sub_1BC62CC74();
  v7 = *MEMORY[0x1E0DEF740];
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 104);
  v13(v5, v7, v2);
  v8 = sub_1BC62C4F4();
  v9 = *(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8);
  result = v9(v5, v2);
  if ((v8 & 1) != 0)
  {
    swift_retain();
    sub_1BC62ADB4();
    swift_release();
    sub_1BC62B2E8();

    swift_bridgeObjectRelease();
    swift_release();
    v11 = *(id *)(a1 + v14);
    sub_1BC5F1010(v11);
    *v5 = sub_1BC62CC74();
    v13(v5, v7, v2);
    v12 = sub_1BC62C4F4();
    result = v9(v5, v2);
    if ((v12 & 1) != 0)
    {
      swift_retain();
      sub_1BC62B2E8();

      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1BC5EED90(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(uint64_t);
  _QWORD aBlock[6];

  v2 = v1;
  v4 = a1 & 1;
  v5 = sub_1BC62C47C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62C4AC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(unsigned __int8 *)(v2 + qword_1EF439AC8);
  *(_BYTE *)(v2 + qword_1EF439AC8) = a1;
  if (v13 != v4)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v14 = (void *)sub_1BC62CC74();
    aBlock[4] = sub_1BC5F5CBC;
    aBlock[5] = v2;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_68_0;
    v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_1BC62C494();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v16, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35811C();
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v12, v8, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_1BC5EEFA0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t *v72;
  _QWORD *v73;
  uint64_t ObjectType;
  uint64_t v75;
  uint64_t v76;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102[3];
  uint64_t v103;
  uint64_t v104;

  v3 = v2;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD08];
  sub_1BC5F61F4(0, &qword_1EF439F38, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource, MEMORY[0x1E0D2B498], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD08]);
  v89 = *(_QWORD *)(v7 - 8);
  v90 = v7;
  MEMORY[0x1E0C80A78](v7);
  v91 = (char *)&v84 - v8;
  sub_1BC5F61F4(0, &qword_1EF439F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB00], MEMORY[0x1E0D2AAF8], v6);
  v87 = v9;
  v86 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v88 = (char *)&v84 - v10;
  v101 = sub_1BC62A7B4();
  v99 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v13);
  *(_QWORD *)(v3 + qword_1EF439AB8) = MEMORY[0x1E0DEE9D8];
  v14 = qword_1EF439AC0;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  swift_retain();
  v15 = (void *)sub_1BC62CC74();
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EF08]), sel_initWithDelegateQueue_, v15);

  *(_QWORD *)(v3 + v14) = v16;
  *(_BYTE *)(v3 + qword_1EF439AC8) = 0;
  *(_QWORD *)(v3 + qword_1EF439A80) = a1;
  *(_QWORD *)(v3 + qword_1EF439A88) = a2;
  v17 = qword_1ED6A3308;
  v85 = a1;
  v93 = a2;
  swift_retain();
  if (v17 != -1)
    swift_once();
  v18 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62BD44();
  v19 = sub_1BC62AD3C();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v21 = sub_1BC62AD24();
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = v22;
  v24 = *(_QWORD *)(sub_1BC62B288() - 8);
  v25 = *(_QWORD *)(v24 + 72);
  v26 = *(unsigned __int8 *)(v24 + 80);
  v27 = (v26 + 32) & ~v26;
  v98 = v23;
  v95 = v26 | 7;
  v96 = v27 + v25;
  v28 = swift_allocObject();
  v100 = xmmword_1BC639590;
  *(_OWORD *)(v28 + 16) = xmmword_1BC639590;
  v97 = v27;
  sub_1BC62A7A8();
  sub_1BC62A778();
  v99 = *(_QWORD *)(v99 + 8);
  ((void (*)(char *, uint64_t))v99)(v12, v101);
  v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC62B270();
  sub_1BC62B690();
  swift_allocObject();
  sub_1BC62B678();
  v103 = v19;
  v30 = sub_1BC347F0C((unint64_t *)&qword_1ED6A4108, v20, MEMORY[0x1E0D2A8A0]);
  v104 = v30;
  v102[0] = v21;
  v92 = v21;
  swift_retain();
  v31 = sub_1BC62B054();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v102);
  v94 = v3;
  *(_QWORD *)(v3 + qword_1EF439A98) = v31;
  swift_retain();
  v32 = sub_1BC3B6550(0, 1, 1, v29);
  v34 = v32[2];
  v33 = v32[3];
  if (v34 >= v33 >> 1)
    v32 = sub_1BC3B6550((_QWORD *)(v33 > 1), v34 + 1, 1, v32);
  v35 = sub_1BC5F618C();
  v32[2] = v34 + 1;
  v36 = &v32[2 * v34];
  v36[4] = v31;
  v36[5] = v35;
  *(_OWORD *)(swift_allocObject() + 16) = v100;
  sub_1BC62A7A8();
  sub_1BC62A778();
  ((void (*)(char *, uint64_t))v99)(v12, v101);
  sub_1BC62B270();
  swift_allocObject();
  sub_1BC62B678();
  v103 = v19;
  v104 = v30;
  v102[0] = v92;
  swift_retain();
  v37 = MEMORY[0x1E0D2B148];
  v38 = sub_1BC62B054();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v102);
  v39 = v94;
  *(_QWORD *)(v94 + qword_1EF439A90) = v38;
  v40 = v32[2];
  v41 = v32[3];
  swift_retain();
  if (v40 >= v41 >> 1)
    v32 = sub_1BC3B6550((_QWORD *)(v41 > 1), v40 + 1, 1, v32);
  v32[2] = v40 + 1;
  v42 = &v32[2 * v40];
  v42[4] = v38;
  v42[5] = v35;
  *(_OWORD *)(swift_allocObject() + 16) = v100;
  sub_1BC62A7A8();
  sub_1BC62A778();
  v43 = v101;
  v44 = (void (*)(char *, uint64_t))v99;
  ((void (*)(char *, uint64_t))v99)(v12, v101);
  sub_1BC62B270();
  v102[0] = 0;
  v102[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  strcpy((char *)v102, "MutableArray<");
  HIWORD(v102[1]) = -4864;
  sub_1BC62A7A8();
  sub_1BC62A778();
  v44(v12, v43);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  sub_1BC62B2F4();
  swift_allocObject();
  v45 = sub_1BC62B2B8();
  *(_QWORD *)(v39 + qword_1EF439AA0) = v45;
  v46 = v32[2];
  v47 = v32[3];
  swift_retain();
  if (v46 >= v47 >> 1)
    v32 = sub_1BC3B6550((_QWORD *)(v47 > 1), v46 + 1, 1, v32);
  v32[2] = v46 + 1;
  v48 = &v32[2 * v46];
  v48[4] = v45;
  v48[5] = v37;
  *(_OWORD *)(swift_allocObject() + 16) = v100;
  sub_1BC41EB3C(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = v100;
  v50 = type metadata accessor for StopSharingItem(0);
  swift_allocObject();
  v51 = v85;
  v52 = v93;
  swift_retain();
  v53 = sub_1BC5F4DA4(v51, v52);

  *(_QWORD *)(v49 + 56) = v50;
  *(_QWORD *)(v49 + 64) = sub_1BC347F0C(&qword_1EF439F68, type metadata accessor for StopSharingItem, (uint64_t)&unk_1BC64C5C8);
  *(_QWORD *)(v49 + 32) = v53;
  sub_1BC62A7A8();
  sub_1BC62A778();
  v54 = v101;
  v55 = (void (*)(char *, uint64_t))v99;
  ((void (*)(char *, uint64_t))v99)(v12, v101);
  sub_1BC62B270();
  strcpy((char *)v102, "ArrayDS<");
  BYTE1(v102[1]) = 0;
  WORD1(v102[1]) = 0;
  HIDWORD(v102[1]) = -402653184;
  sub_1BC62A7A8();
  sub_1BC62A778();
  v55(v12, v54);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  sub_1BC62ADFC();
  v56 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB00];
  swift_allocObject();
  sub_1BC62ADF0();
  v57 = *MEMORY[0x1E0D2ACF8];
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 104))(v88, v57, v87);
  sub_1BC5F61F4(0, &qword_1EF439F40, v56, MEMORY[0x1E0D2AAF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD40]);
  swift_allocObject();
  swift_retain();
  v58 = sub_1BC62AFA0();
  v59 = v94;
  *(_QWORD *)(v94 + qword_1EF439AB0) = v58;
  v60 = v32[2];
  v61 = v32[3];
  swift_retain();
  if (v60 >= v61 >> 1)
    v32 = sub_1BC3B6550((_QWORD *)(v61 > 1), v60 + 1, 1, v32);
  v62 = sub_1BC5F60BC();
  v32[2] = v60 + 1;
  v63 = &v32[2 * v60];
  v63[4] = v58;
  v63[5] = v62;
  v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource();
  swift_allocObject();
  v65 = v51;
  sub_1BC3F5624(v64, v51, 1, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 104))(v91, v57, v90);
  sub_1BC5F61F4(0, &qword_1EF439F70, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource, MEMORY[0x1E0D2B498], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD40]);
  swift_allocObject();
  swift_retain();
  v66 = sub_1BC62AFA0();
  *(_QWORD *)(v59 + qword_1EF439AA8) = v66;
  v67 = v32[2];
  v68 = v32[3];
  swift_retain();
  if (v67 >= v68 >> 1)
    v32 = sub_1BC3B6550((_QWORD *)(v68 > 1), v67 + 1, 1, v32);
  v69 = sub_1BC5F6254();
  v32[2] = v67 + 1;
  v70 = &v32[2 * v67];
  v70[4] = v66;
  v70[5] = v69;
  swift_release();
  v71 = v32[2];
  if (v71)
  {
    swift_bridgeObjectRetain_n();
    v72 = v32 + 5;
    v73 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v75 = *(v72 - 1);
      if (v75)
      {
        v76 = *v72;
        swift_unknownObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v102[0] = (uint64_t)v73;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v73 = sub_1BC3B51A4(0, v73[2] + 1, 1, v73);
          v102[0] = (uint64_t)v73;
        }
        v79 = v73[2];
        v78 = v73[3];
        if (v79 >= v78 >> 1)
        {
          v73 = sub_1BC3B51A4((_QWORD *)(v78 > 1), v79 + 1, 1, v73);
          v102[0] = (uint64_t)v73;
        }
        ObjectType = swift_getObjectType();
        sub_1BC4607A0(v79, v75, v102, ObjectType, v76);
      }
      v72 += 2;
      --v71;
    }
    while (v71);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  v80 = sub_1BC62B504();
  swift_retain();
  sub_1BC5EFF28(v65);
  v81 = *(void **)(v80 + qword_1EF439AC0);
  objc_msgSend(v81, sel_setDelegate_, v80);
  v82 = v81;
  objc_msgSend(v82, sel_resume);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return v80;
}

void sub_1BC5EFC48()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t sub_1BC5EFCE4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + qword_1EF439AC0);
  objc_msgSend(v1, sel_invalidate);
  objc_msgSend(v1, sel_setDelegate_, 0);
  v2 = sub_1BC62B4F8();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1BC5EFDCC()
{
  sub_1BC5EFCE4();
  return swift_deallocClassInstance();
}

unint64_t sub_1BC5EFDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t result;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_1BC62B3C0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SharingDataSource(0);
  v6 = sub_1BC62B048();
  result = sub_1BC62B4A4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result >= *(_QWORD *)(v6 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v8 = v6 + 16 * result;
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_QWORD *)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v9) = sub_1BC3B1254(v9, v10, *(_QWORD **)(v1 + qword_1EF439AB8));
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    sub_1BC62B36C();
  else
    sub_1BC62B330();
  sub_1BC62B48C();
  v11 = sub_1BC62B3B4();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

uint64_t sub_1BC5EFF28(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t *, uint64_t);
  uint64_t result;
  char v19;
  id v20;
  id v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t (*v23)(uint64_t *, uint64_t);
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD08];
  sub_1BC5F61F4(0, &qword_1EF439F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB00], MEMORY[0x1E0D2AAF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD08]);
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x1E0C80A78](v5);
  v56 = (char *)&v55 - v6;
  sub_1BC5F61F4(0, &qword_1EF439F38, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource, MEMORY[0x1E0D2B498], v4);
  v60 = v7;
  v63 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v55 - v8;
  v10 = sub_1BC62C4D0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v2 + qword_1EF439A80);
  *(_QWORD *)(v2 + qword_1EF439A80) = a1;
  v15 = a1;

  sub_1BC5F066C(v15);
  v61 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v13 = sub_1BC62CC74();
  v16 = *MEMORY[0x1E0DEF740];
  v59 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 104);
  v59(v13, v16, v10);
  LOBYTE(a1) = sub_1BC62C4F4();
  v17 = *(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8);
  result = v17(v13, v10);
  if ((a1 & 1) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  swift_retain();
  sub_1BC62ADB4();
  swift_release();
  sub_1BC62B2E8();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BC5F1010(v15);
  *v13 = sub_1BC62CC74();
  v59(v13, v16, v10);
  v19 = sub_1BC62C4F4();
  result = v17(v13, v10);
  if ((v19 & 1) == 0)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    return result;
  }
  v62 = qword_1EF439AA0;
  swift_retain();
  sub_1BC62B2E8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  v20 = objc_msgSend(v15, sel_clinicalSharingStatus);
  v21 = objc_msgSend(v20, sel_userStatus);

  v22 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 104);
  v63 = v2;
  v23 = v17;
  v24 = *MEMORY[0x1E0D2AD00];
  v25 = *MEMORY[0x1E0D2ACF8];
  if (v21 == (id)2)
    v26 = v24;
  else
    v26 = v25;
  v22(v9, v26, v60);
  sub_1BC62AF88();
  swift_release();
  v27 = qword_1EF439AB0;
  swift_retain();
  if (objc_msgSend(v15, sel_isSharingToProvider))
    v28 = v24;
  else
    v28 = v25;
  v29 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 104))(v56, v28, v58);
  sub_1BC62AF88();
  swift_release();
  sub_1BC5F14A0(v15);
  *v13 = sub_1BC62CC74();
  v59(v13, v16, v10);
  v30 = sub_1BC62C4F4();
  result = v23(v13, v10);
  if ((v30 & 1) == 0)
    goto LABEL_27;
  swift_retain();
  sub_1BC62ADB4();
  swift_release();
  sub_1BC62B2E8();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC5F61F4(0, &qword_1EF439F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB00], MEMORY[0x1E0D2AAF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD40]);
  v32 = v31;
  sub_1BC5F60BC();
  swift_retain();
  v61 = v32;
  v33 = sub_1BC62B048();
  swift_release();
  v34 = *(_QWORD *)(v33 + 16);
  v35 = MEMORY[0x1E0DEE9D8];
  if (v34)
  {
    v64 = MEMORY[0x1E0DEE9D8];
    swift_retain();
    sub_1BC3BD748(0, v34, 0);
    v36 = v64;
    v37 = sub_1BC5F6124();
    v58 = v33;
    v59 = (void (*)(uint64_t *, uint64_t, uint64_t))v37;
    v38 = v33 + 40;
    v60 = v27;
    do
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BC62B138();
      swift_getObjectType();
      sub_1BC62AFD0();
      swift_release();
      swift_unknownObjectRelease();
      v39 = sub_1BC62B4D4();
      v41 = v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v64 = v36;
      v43 = *(_QWORD *)(v36 + 16);
      v42 = *(_QWORD *)(v36 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_1BC3BD748(v42 > 1, v43 + 1, 1);
        v36 = v64;
      }
      v38 += 16;
      *(_QWORD *)(v36 + 16) = v43 + 1;
      v44 = v36 + 16 * v43;
      *(_QWORD *)(v44 + 32) = v39;
      *(_QWORD *)(v44 + 40) = v41;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    v29 = v63;
    swift_release();
    v35 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v36 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BC62B2F4();
  swift_retain();
  v45 = sub_1BC62B048();
  swift_release();
  v46 = *(_QWORD *)(v45 + 16);
  if (v46)
  {
    v61 = v36;
    v64 = v35;
    swift_retain();
    sub_1BC3BD748(0, v46, 0);
    v47 = v64;
    v48 = v45 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BC62B294();
      swift_release();
      v49 = sub_1BC62B4D4();
      v51 = v50;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v64 = v47;
      v53 = *(_QWORD *)(v47 + 16);
      v52 = *(_QWORD *)(v47 + 24);
      if (v53 >= v52 >> 1)
      {
        sub_1BC3BD748(v52 > 1, v53 + 1, 1);
        v47 = v64;
      }
      v48 += 16;
      *(_QWORD *)(v47 + 16) = v53 + 1;
      v54 = v47 + 16 * v53;
      *(_QWORD *)(v54 + 32) = v49;
      *(_QWORD *)(v54 + 40) = v51;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease();
    v29 = v63;
    swift_release();
    v36 = v61;
  }
  else
  {
    swift_bridgeObjectRelease();
    v47 = MEMORY[0x1E0DEE9D8];
  }
  v64 = v36;
  sub_1BC3BB0B8(v47);
  *(_QWORD *)(v29 + qword_1EF439AB8) = v64;
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BC5F066C(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  id v73;
  id v74;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  const __CFString *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;

  v2 = objc_msgSend(a1, sel_clinicalSharingStatus);
  v3 = objc_msgSend(v2, sel_userStatus);

  if (v3 != (id)2)
  {
    v4 = objc_msgSend(a1, sel_clinicalSharingStatus);
    v5 = objc_msgSend(v4, sel_userStatus);

    if (v5 != (id)4)
    {
      v6 = objc_msgSend(a1, sel_clinicalSharingStatus);
      v7 = objc_msgSend(v6, sel_userStatus);

      if (v7 != (id)5)
        return (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  if (qword_1ED6A3308 != -1)
    swift_once();
  v8 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v9 = sub_1BC62A4A8();
  v11 = v10;
  swift_bridgeObjectRelease();

  v88 = a1;
  v12 = objc_msgSend(a1, sel_displayableLastSharedToProviderDate);
  v13 = sub_1BC62C680();
  v15 = v14;

  sub_1BC359F44();
  v86 = v16;
  v17 = swift_allocObject();
  v84 = xmmword_1BC6395A0;
  *(_OWORD *)(v17 + 16) = xmmword_1BC6395A0;
  v85 = CFSTR("UIA.Health.Sharing");
  *(_QWORD *)(v17 + 32) = sub_1BC62C680();
  *(_QWORD *)(v17 + 40) = v18;
  *(_QWORD *)(v17 + 48) = 0x6F6C70557473614CLL;
  *(_QWORD *)(v17 + 56) = 0xEA00000000006461;
  v19 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v20 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v20)
  {
    v21 = sub_1BC62C680();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  v24 = type metadata accessor for TitleSubtitleDetailItem(0);
  v25 = (_QWORD *)swift_allocObject();
  sub_1BC62A7A8();
  v25[2] = v9;
  v25[3] = v11;
  v25[4] = v13;
  v25[5] = v15;
  v25[6] = 0;
  v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v25[7] = MEMORY[0x1E0DEE9D8];
  v25[8] = v21;
  v25[9] = v23;
  swift_retain();
  v27 = sub_1BC3B5CEC(0, 1, 1, v26);
  v29 = v27[2];
  v28 = v27[3];
  if (v29 >= v28 >> 1)
    v27 = sub_1BC3B5CEC((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
  v30 = v88;
  v93 = v24;
  v31 = sub_1BC347F0C(&qword_1EF42B7C0, type metadata accessor for TitleSubtitleDetailItem, (uint64_t)&unk_1BC63DA50);
  v94 = v31;
  *(_QWORD *)&v92 = v25;
  v27[2] = v29 + 1;
  sub_1BC34E718(&v92, (uint64_t)&v27[5 * v29 + 4]);
  v83 = qword_1EF439AC8;
  if (*(_BYTE *)(v87 + qword_1EF439AC8) == 1)
  {
    v32 = objc_msgSend(v30, sel_clinicalSharingStatus);
    objc_msgSend(v32, sel_userStatus);

    v33 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    v82 = sub_1BC62A4A8();
    v48 = v47;
    swift_bridgeObjectRelease();

    if (qword_1ED6A4888 != -1)
      swift_once();
    v49 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v50 = sub_1BC62A4A8();
    v52 = v51;
    swift_bridgeObjectRelease();

    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = v84;
    *(_QWORD *)(v53 + 32) = sub_1BC62C680();
    *(_QWORD *)(v53 + 40) = v54;
    *(_QWORD *)(v53 + 48) = 0x737574617453;
    *(_QWORD *)(v53 + 56) = 0xE600000000000000;
    v55 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v56 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v56)
    {
      v57 = sub_1BC62C680();
      v59 = v58;

    }
    else
    {
      v57 = 0;
      v59 = 0;
    }
    v61 = type metadata accessor for TitleSubtitleDetailItemWithSpinner(0);
    v62 = (_QWORD *)swift_allocObject();
    sub_1BC62A7A8();
    v62[2] = v50;
    v62[3] = v52;
    v62[4] = v82;
    v62[5] = v48;
    v62[6] = v57;
    v62[7] = v59;
    v90 = v61;
    v91 = sub_1BC347F0C(&qword_1EF42D200, type metadata accessor for TitleSubtitleDetailItemWithSpinner, (uint64_t)&unk_1BC63D9C0);
    *(_QWORD *)&v89 = v62;
  }
  else
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v34 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v82 = sub_1BC62A4A8();
    v36 = v35;
    swift_bridgeObjectRelease();

    v37 = sub_1BC42DD98();
    v39 = v38;
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v84;
    *(_QWORD *)(v40 + 32) = sub_1BC62C680();
    *(_QWORD *)(v40 + 40) = v41;
    *(_QWORD *)(v40 + 48) = 0x737574617453;
    *(_QWORD *)(v40 + 56) = 0xE600000000000000;
    v42 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v43 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v43)
    {
      v44 = sub_1BC62C680();
      v46 = v45;

    }
    else
    {
      v44 = 0;
      v46 = 0;
    }
    v60 = (_QWORD *)swift_allocObject();
    sub_1BC62A7A8();
    v60[2] = v82;
    v60[3] = v36;
    v60[4] = v37;
    v60[5] = v39;
    v60[6] = 0;
    v60[7] = MEMORY[0x1E0DEE9D8];
    v60[8] = v44;
    v60[9] = v46;
    v90 = v24;
    v91 = v31;
    *(_QWORD *)&v89 = v60;
  }
  sub_1BC34E718(&v89, (uint64_t)&v92);
  sub_1BC34E674((uint64_t)&v92, (uint64_t)&v89);
  v95 = v27;
  v64 = v27[2];
  v63 = v27[3];
  v65 = v88;
  if (v64 >= v63 >> 1)
    v95 = sub_1BC3B5CEC((_QWORD *)(v63 > 1), v64 + 1, 1, v27);
  v66 = v90;
  v67 = v91;
  v68 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v89, v90);
  MEMORY[0x1E0C80A78](v68);
  v70 = (char *)&v82 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v71 + 16))(v70);
  sub_1BC5EE8E8(v64, (uint64_t)v70, (uint64_t *)&v95, v66, v67);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v89);
  v72 = v95;
  if (objc_msgSend(v65, sel_state) == (id)1
    && objc_msgSend(v65, sel_isSharingToProvider)
    && (v73 = objc_msgSend(v65, sel_clinicalSharingStatus),
        v74 = objc_msgSend(v73, sel_multiDeviceStatus),
        v73,
        v74 != (id)2))
  {
    v76 = *(_BYTE *)(v87 + v83);
    swift_retain();
    v77 = sub_1BC62AF4C();
    swift_release();
    v78 = type metadata accessor for UploadNewDataItem();
    v79 = swift_allocObject();
    *(_QWORD *)(v79 + 16) = 0xD000000000000011;
    *(_QWORD *)(v79 + 24) = 0x80000001BC6673A0;
    *(_BYTE *)(v79 + 32) = v76;
    *(_QWORD *)(v79 + 40) = v77;
    v80 = v72[2];
    v81 = v72[3];
    swift_retain();
    if (v80 >= v81 >> 1)
      v72 = sub_1BC3B5CEC((_QWORD *)(v81 > 1), v80 + 1, 1, v72);
    v90 = v78;
    v91 = sub_1BC347F0C(&qword_1EF439F28, (uint64_t (*)(uint64_t))type metadata accessor for UploadNewDataItem, (uint64_t)&unk_1BC649C04);
    *(_QWORD *)&v89 = v79;
    v72[2] = v80 + 1;
    sub_1BC34E718(&v89, (uint64_t)&v72[5 * v80 + 4]);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v92);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v92);
    swift_release();
  }
  return v72;
}

uint64_t sub_1BC5F1010(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t PrimaryDeviceItem;
  id v33;
  uint64_t v34;
  uint64_t v36;
  _OWORD v37[6];
  uint64_t v38;

  v2 = v1;
  if (objc_msgSend(a1, sel_isSharingToProvider)
    && (v4 = objc_msgSend(a1, sel_clinicalSharingStatus),
        v5 = objc_msgSend(v4, sel_multiDeviceStatus),
        v4,
        v5 == (id)4))
  {
    sub_1BC5F5204(a1, *(_QWORD *)(v2 + qword_1EF439A88), v37);
    sub_1BC41EB3C(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v6 + 56) = &type metadata for ClinicalSharingPausedItem;
    *(_QWORD *)(v6 + 64) = sub_1BC5F5D44();
    v7 = swift_allocObject();
    *(_QWORD *)(v6 + 32) = v7;
    v8 = v37[5];
    *(_OWORD *)(v7 + 80) = v37[4];
    *(_OWORD *)(v7 + 96) = v8;
    *(_QWORD *)(v7 + 112) = v38;
    v9 = v37[1];
    *(_OWORD *)(v7 + 16) = v37[0];
    *(_OWORD *)(v7 + 32) = v9;
    v10 = v37[3];
    *(_OWORD *)(v7 + 48) = v37[2];
    *(_OWORD *)(v7 + 64) = v10;
  }
  else if (objc_msgSend(a1, sel_isSharingToProvider)
         && (v11 = objc_msgSend(a1, sel_clinicalSharingStatus),
             v12 = objc_msgSend(v11, sel_multiDeviceStatus),
             v11,
             v12 == (id)2))
  {
    v13 = objc_msgSend(a1, sel_clinicalSharingStatus);
    v14 = objc_msgSend(v13, sel_primaryDeviceName);

    v6 = MEMORY[0x1E0DEE9D8];
    if (v14)
    {
      v36 = sub_1BC62C680();
      v16 = v15;

      if (qword_1ED6A3308 != -1)
        swift_once();
      v17 = (id)qword_1ED6A32F0;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1BC6395A0;
      v19 = objc_msgSend(a1, sel_title, 0xE000000000000000);
      v20 = sub_1BC62C680();
      v22 = v21;

      v23 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
      v24 = sub_1BC3644C0();
      *(_QWORD *)(v18 + 32) = v20;
      *(_QWORD *)(v18 + 40) = v22;
      *(_QWORD *)(v18 + 96) = v23;
      *(_QWORD *)(v18 + 104) = v24;
      *(_QWORD *)(v18 + 64) = v24;
      *(_QWORD *)(v18 + 72) = v36;
      *(_QWORD *)(v18 + 80) = v16;
      v25 = sub_1BC62C6B0();
      v27 = v26;
      swift_bridgeObjectRelease();
      v28 = type metadata accessor for TextItem();
      v29 = (_QWORD *)swift_allocObject();
      type metadata accessor for TextItemCell();
      sub_1BC347F0C(&qword_1EF429AF8, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&protocol conformance descriptor for TextItemCell);
      v29[10] = sub_1BC62ADA8();
      v29[11] = v30;
      v29[2] = v25;
      v29[3] = v27;
      v29[4] = 0;
      v29[5] = 0;
      v29[6] = 0;
      v29[7] = v6;
      v29[8] = 0;
      v29[9] = 0;
      v31 = *(_QWORD *)(v2 + qword_1EF439A88);
      PrimaryDeviceItem = type metadata accessor for MakePrimaryDeviceItem(0);
      swift_allocObject();
      v33 = a1;
      swift_retain();
      v34 = sub_1BC5F5540(v33, v31);

      sub_1BC41EB3C(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1BC6395A0;
      *(_QWORD *)(v6 + 56) = v28;
      *(_QWORD *)(v6 + 64) = sub_1BC347F0C(&qword_1EF439F00, (uint64_t (*)(uint64_t))type metadata accessor for TextItem, (uint64_t)&protocol conformance descriptor for TextItem);
      *(_QWORD *)(v6 + 32) = v29;
      *(_QWORD *)(v6 + 96) = PrimaryDeviceItem;
      *(_QWORD *)(v6 + 104) = sub_1BC347F0C(&qword_1EF439F08, type metadata accessor for MakePrimaryDeviceItem, (uint64_t)&unk_1BC64C5C8);
      *(_QWORD *)(v6 + 72) = v34;
    }
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return v6;
}

uint64_t sub_1BC5F14A0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t started;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[3];
  uint64_t v30;

  v3 = sub_1BC62A7B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(a1, sel_isSharingToProvider) & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  v7 = objc_msgSend(a1, sel_clinicalSharingStatus);
  v8 = objc_msgSend(v7, sel_userStatus);

  if (v8 == (id)4)
    return MEMORY[0x1E0DEE9D8];
  v9 = objc_msgSend(a1, sel_clinicalSharingStatus);
  v10 = objc_msgSend(v9, sel_userStatus);

  if (v10 == (id)5)
    return MEMORY[0x1E0DEE9D8];
  sub_1BC5F5768(v29);
  v13 = *(_QWORD *)(v1 + qword_1EF439A88);
  started = type metadata accessor for StartSharingItem(0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI16StartSharingItem_account) = a1;
  v16 = a1;
  v28 = v13;
  swift_retain();
  v17 = objc_msgSend(v16, sel_identifier);
  sub_1BC62A79C();

  if (qword_1ED6A3308 != -1)
    swift_once();
  v18 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v27 = sub_1BC62A4A8();
  v20 = v19;
  swift_bridgeObjectRelease();

  v21 = objc_msgSend((id)objc_opt_self(), sel_linkColor);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  v22 = sub_1BC62CDDC();

  *(_QWORD *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID, v6, v3);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) = v28;
  v23 = (uint64_t *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelText);
  *v23 = v27;
  v23[1] = v20;
  *(_QWORD *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor) = v21;
  *(_QWORD *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont) = v22;
  *(_BYTE *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) = 1;
  sub_1BC41EB3C(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v11 + 56) = &type metadata for TopAlignedIconListItem;
  *(_QWORD *)(v11 + 64) = sub_1BC5F5CC4();
  v24 = swift_allocObject();
  *(_QWORD *)(v11 + 32) = v24;
  v25 = v29[1];
  *(_OWORD *)(v24 + 16) = v29[0];
  *(_OWORD *)(v24 + 32) = v25;
  *(_OWORD *)(v24 + 48) = v29[2];
  *(_QWORD *)(v24 + 64) = v30;
  *(_QWORD *)(v11 + 96) = started;
  *(_QWORD *)(v11 + 104) = sub_1BC347F0C(&qword_1EF439EF8, type metadata accessor for StartSharingItem, (uint64_t)&unk_1BC64C5C8);
  *(_QWORD *)(v11 + 72) = v15;
  return v11;
}

void sub_1BC5F1888()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC5F18B4()
{
  return type metadata accessor for SharingDataSource(0);
}

uint64_t sub_1BC5F18BC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a4;
  swift_retain();
  sub_1BC5F5954(v6);

  return swift_release();
}

void sub_1BC5F1910(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5;
  id v6;

  v5 = a3;
  swift_retain();
  v6 = a4;
  sub_1BC5F5AB4();

  swift_release();
}

void sub_1BC5F196C()
{
  uint64_t v0;

}

uint64_t sub_1BC5F197C()
{
  return sub_1BC5F1A60(&OBJC_IVAR____TtC15HealthRecordsUI16StartSharingItem_account);
}

uint64_t sub_1BC5F1988()
{
  return type metadata accessor for StartSharingItem(0);
}

uint64_t type metadata accessor for StartSharingItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF439BB0);
}

void sub_1BC5F19A8(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t v4;
  id v5;

  v4 = *v2;
  v5 = objc_msgSend(objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController), sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, 8, 1, 0, *(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) + 16), *(_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI16StartSharingItem_account));
  objc_msgSend(a2, sel_showViewController_sender_, v5, v4);

}

void sub_1BC5F1A44()
{
  uint64_t v0;

}

uint64_t sub_1BC5F1A54()
{
  return sub_1BC5F1A60(&OBJC_IVAR____TtC15HealthRecordsUI15StopSharingItem_account);
}

uint64_t sub_1BC5F1A60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  v4 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1BC359FDC(v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5F1B34()
{
  return type metadata accessor for StopSharingItem(0);
}

uint64_t type metadata accessor for StopSharingItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF439CD8);
}

uint64_t sub_1BC5F1B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1BC5F1B68()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[2];
  v0[4] = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager);
  v0[5] = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI15StopSharingItem_account);
  sub_1BC62C944();
  v0[6] = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC5F1BF8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 40);
  v2 = *(void **)(v0 + 24);
  swift_release();
  sub_1BC5C4784(v1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5F1C40(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  _QWORD *v7;
  id v8;

  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a2;
  v7[4] = a4;
  v8 = a3;
  swift_retain();
  sub_1BC6015CC((uint64_t)sub_1BC5F4800, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1BC5F1CB0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD aBlock[6];
  uint64_t v65;

  v60 = a2;
  v7 = sub_1BC62C47C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62C4AC();
  v61 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC62BB34();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v55 - v19;
  v63 = v21;
  if (a1)
  {
    v59 = v8;
    v22 = a1;
    sub_1BC62BAF8();
    v23 = a1;
    v24 = a1;
    v25 = sub_1BC62BB28();
    v26 = sub_1BC62CAC4();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc();
      v57 = swift_slowAlloc();
      v65 = v57;
      *(_DWORD *)v28 = 136446466;
      v56 = v27;
      aBlock[0] = a4;
      swift_getMetatypeMetadata();
      v58 = v14;
      v29 = sub_1BC62C6E0();
      aBlock[0] = sub_1BC4991F0(v29, v30, &v65);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      v55 = v28 + 14;
      aBlock[0] = a1;
      v31 = a1;
      v32 = a1;
      sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
      sub_1BC62D5D4();
      v33 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v34 = sub_1BC62C6E0();
      v36 = v35;

      aBlock[0] = sub_1BC4991F0(v34, v36, &v65);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v25, (os_log_type_t)v56, "[%{public}s]: failed to stop sharing with error: %{public}s", (uint8_t *)v28, 0x16u);
      v37 = v57;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v37, -1, -1);
      MEMORY[0x1BCCF36A8](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v58);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v14);
    }
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v48 = (void *)sub_1BC62CC74();
    v49 = swift_allocObject();
    v50 = v60;
    *(_QWORD *)(v49 + 16) = a1;
    *(_QWORD *)(v49 + 24) = v50;
    aBlock[4] = sub_1BC5F481C;
    aBlock[5] = v49;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_13_3;
    v51 = _Block_copy(aBlock);
    v52 = a1;
    v53 = v50;
    swift_release();
    sub_1BC62C494();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35811C();
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v13, v10, v51);
    _Block_release(v51);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v13, v62);
  }
  else
  {
    v38 = a3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate;
    if (MEMORY[0x1BCCF37A4](v38, v18))
    {
      v39 = *(_QWORD *)(v38 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v39 + 16))(ObjectType, v39);
      swift_unknownObjectRelease();
    }
    sub_1BC62BAF8();
    v41 = sub_1BC62BB28();
    v42 = sub_1BC62CAAC();
    if (os_log_type_enabled(v41, v42))
    {
      v58 = v14;
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v65 = v44;
      *(_DWORD *)v43 = 136446210;
      aBlock[0] = a4;
      swift_getMetatypeMetadata();
      v45 = sub_1BC62C6E0();
      aBlock[0] = sub_1BC4991F0(v45, v46, &v65);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v41, v42, "[%{public}s]: successfully stopped sharing", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v44, -1, -1);
      MEMORY[0x1BCCF36A8](v43, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v16, v58);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v16, v14);
    }
  }
}

void sub_1BC5F22F4(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v3 = (void *)objc_opt_self();
  if (qword_1ED6A3308 != -1)
    swift_once();
  v4 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1BC62A550();
  v7 = objc_msgSend(v3, sel_basicAlertControllerWithTitle_message_internalError_, 0, v5, v6, 0xE000000000000000);

  objc_msgSend(a2, sel_presentViewController_animated_completion_, v7, 1, 0);
}

void sub_1BC5F2450(uint64_t a1, void *a2)
{
  sub_1BC5F4180(a2);
}

uint64_t sub_1BC5F2474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  v2 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1BC359FDC(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5F2530()
{
  return type metadata accessor for MakePrimaryDeviceItem(0);
}

uint64_t type metadata accessor for MakePrimaryDeviceItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF439DF0);
}

uint64_t sub_1BC5F254C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1BC5F2580(uint64_t a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(void *);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t (**v31)(void *);
  id v32;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v39 = sub_1BC62A7B4();
  v37 = *(_QWORD *)(v39 - 8);
  v7 = *(_QWORD *)(v37 + 64);
  MEMORY[0x1E0C80A78](v39);
  v38 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - v10;
  v12 = &a2[OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate];
  if (MEMORY[0x1BCCF37A4](&a2[OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate], v9))
  {
    v34 = a4;
    v35 = a3;
    v13 = *((_QWORD *)v12 + 1);
    ObjectType = swift_getObjectType();
    if (qword_1ED6A3308 != -1)
      swift_once();
    v15 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    v16 = sub_1BC62A4A8();
    v18 = v17;
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24))(v16, v18, ObjectType, v13);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    a4 = v34;
    a3 = v35;
  }
  v19 = *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager];
  v20 = &a2[OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID];
  v21 = (uint64_t (*)(void *))swift_allocObject();
  *((_QWORD *)v21 + 2) = a2;
  *((_QWORD *)v21 + 3) = a3;
  *((_QWORD *)v21 + 4) = a4;
  v22 = sub_1BC62C95C();
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v36 = v11;
  v23(v11, 1, 1, v22);
  v24 = v37;
  v25 = v38;
  v26 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v35 = a2;
  v27 = v39;
  v26(v38, v20, v39);
  v28 = (*(unsigned __int8 *)(v24 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v29 = (v7 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = (char *)swift_allocObject();
  *((_QWORD *)v30 + 2) = 0;
  *((_QWORD *)v30 + 3) = 0;
  *((_QWORD *)v30 + 4) = v19;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v30[v28], v25, v27);
  *(_QWORD *)&v30[v29] = 3;
  v31 = (uint64_t (**)(void *))&v30[(v29 + 15) & 0xFFFFFFFFFFFFFFF8];
  *v31 = sub_1BC5F4C5C;
  v31[1] = v21;
  swift_retain();
  v32 = a3;
  swift_retain();
  swift_retain();
  sub_1BC5C2784((uint64_t)v36, (uint64_t)&unk_1EF439EE8, (uint64_t)v30);
  swift_release();
  return swift_release();
}

uint64_t sub_1BC5F2888(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v8 = sub_1BC62C47C();
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BC62C4AC();
  v11 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v14 = (void *)sub_1BC62CC74();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a1;
  v15[4] = a3;
  v15[5] = a4;
  aBlock[4] = sub_1BC5F4D6C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_32_0;
  v16 = _Block_copy(aBlock);
  swift_retain();
  v17 = a1;
  v18 = a3;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v21);
}

uint64_t sub_1BC5F2AB4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  void (*v12)(uint64_t, void (*)(void *), uint64_t, uint64_t, uint64_t);
  id v13;

  v7 = a1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate;
  result = MEMORY[0x1BCCF37A4](a1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  if (result)
  {
    v9 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a3;
    *(_QWORD *)(v11 + 24) = a4;
    v12 = *(void (**)(uint64_t, void (*)(void *), uint64_t, uint64_t, uint64_t))(v9 + 32);
    v13 = a3;
    v12(a2, sub_1BC5F4D9C, v11, ObjectType, v9);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1BC5F2B80(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v41 - v11;
  if (a1)
  {
    sub_1BC62BAF8();
    v13 = a1;
    v14 = a1;
    v15 = sub_1BC62BB28();
    v16 = sub_1BC62CAC4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v42 = a2;
      v19 = v18;
      v45 = v18;
      *(_DWORD *)v17 = 136446466;
      v44 = a3;
      swift_getMetatypeMetadata();
      v43 = v6;
      v20 = sub_1BC62C6E0();
      v44 = sub_1BC4991F0(v20, v21, &v45);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      v41 = v17 + 14;
      v44 = (uint64_t)a1;
      v22 = a1;
      v23 = a1;
      sub_1BC41EB3C(0, (unint64_t *)&unk_1ED6A4E80, (unint64_t *)&qword_1ED6A59C0, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1BC62D5D4();
      v24 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v25 = sub_1BC62C6E0();
      v27 = v26;

      v44 = sub_1BC4991F0(v25, v27, &v45);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v15, v16, "[%{public}s]: failed to change primary device with error: %{public}s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      v28 = v19;
      a2 = v42;
      MEMORY[0x1BCCF36A8](v28, -1, -1);
      MEMORY[0x1BCCF36A8](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    v36 = (void *)objc_opt_self();
    if (qword_1ED6A3308 != -1)
      swift_once();
    v37 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v38 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v39 = (void *)sub_1BC62A550();
    v40 = objc_msgSend(v36, sel_basicAlertControllerWithTitle_message_internalError_, 0, v38, v39);

    objc_msgSend(a2, sel_presentViewController_animated_completion_, v40, 1, 0);
  }
  else
  {
    sub_1BC62BAF8();
    v29 = sub_1BC62BB28();
    v30 = sub_1BC62CAAC();
    if (os_log_type_enabled(v29, (os_log_type_t)v30))
    {
      v31 = swift_slowAlloc();
      v43 = v6;
      v32 = (uint8_t *)v31;
      v33 = swift_slowAlloc();
      v45 = v33;
      *(_DWORD *)v32 = 136446210;
      v44 = a3;
      swift_getMetatypeMetadata();
      v34 = sub_1BC62C6E0();
      v44 = sub_1BC4991F0(v34, v35, &v45);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v29, (os_log_type_t)v30, "[%{public}s]: successfully changed primary device", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v33, -1, -1);
      MEMORY[0x1BCCF36A8](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
  }
}

void sub_1BC5F30C0(uint64_t a1, void *a2)
{
  sub_1BC5F4824(a2);
}

_QWORD *sub_1BC5F30E4(_QWORD *result, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  uint64_t v8;

  if (result)
  {
    swift_beginAccess();
    v4 = *(_OWORD *)(a3 + 96);
    v7[4] = *(_OWORD *)(a3 + 80);
    v7[5] = v4;
    v8 = *(_QWORD *)(a3 + 112);
    v5 = *(_OWORD *)(a3 + 32);
    v7[0] = *(_OWORD *)(a3 + 16);
    v7[1] = v5;
    v6 = *(_OWORD *)(a3 + 64);
    v7[2] = *(_OWORD *)(a3 + 48);
    v7[3] = v6;
    sub_1BC5F5DFC(v7);
    sub_1BC5F315C();
    return sub_1BC5F5E8C(v7);
  }
  return result;
}

uint64_t sub_1BC5F315C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v0 = sub_1BC62BB34();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClinicalAccountDetailsViewController();
  v4 = swift_dynamicCastClass();
  if (v4)
  {
    v5 = (void *)v4;
    swift_unknownObjectRetain();
    sub_1BC5F3298(v5);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1BC62BAF8();
    v7 = sub_1BC62BB28();
    v8 = sub_1BC62CAC4();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BC30A000, v7, v8, "Clincal SharingPausedItemDelegate must be a view controller", v9, 2u);
      MEMORY[0x1BCCF36A8](v9, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

void sub_1BC5F3298(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t ObjectType;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t (*v26)(void *);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t (**v37)(void *);
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v52 = (uint64_t)&v47 - v7;
  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v8);
  v51 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v47 - v12;
  swift_getObjectType();
  v14 = swift_conformsToProtocol2();
  if (v14)
    v15 = v14;
  else
    v15 = 0;
  if (v14)
    v16 = a1;
  else
    v16 = 0;
  if (v16)
  {
    v48 = v9;
    v49 = v8;
    ObjectType = swift_getObjectType();
    v18 = qword_1ED6A3308;
    v19 = a1;
    if (v18 != -1)
      swift_once();
    v20 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    v21 = sub_1BC62A4A8();
    v23 = v22;
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v21, v23, ObjectType, v15);
    swift_bridgeObjectRelease();
    v24 = *((_QWORD *)v50 + 12);
    v25 = objc_msgSend(*((id *)v50 + 11), sel_identifier);
    sub_1BC62A79C();

    v26 = (uint64_t (*)(void *))swift_allocObject();
    *((_QWORD *)v26 + 2) = v16;
    *((_QWORD *)v26 + 3) = v15;
    *((_QWORD *)v26 + 4) = v19;
    v27 = sub_1BC62C95C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v52, 1, 1, v27);
    v28 = v48;
    v29 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v30 = v51;
    v31 = v13;
    v50 = v13;
    v32 = v19;
    v33 = v49;
    v29(v51, v31, v49);
    v34 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v35 = (v10 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = (char *)swift_allocObject();
    *((_QWORD *)v36 + 2) = 0;
    *((_QWORD *)v36 + 3) = 0;
    *((_QWORD *)v36 + 4) = v24;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v36[v34], v30, v33);
    *(_QWORD *)&v36[v35] = 3;
    v37 = (uint64_t (**)(void *))&v36[(v35 + 15) & 0xFFFFFFFFFFFFFFF8];
    *v37 = sub_1BC5F5F4C;
    v37[1] = v26;
    v38 = v32;
    swift_retain();
    swift_retain();
    sub_1BC5C2784(v52, (uint64_t)&unk_1EF439F18, (uint64_t)v36);

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v50, v33);
  }
  else
  {
    sub_1BC62BAF8();
    v39 = sub_1BC62BB28();
    v40 = sub_1BC62CAD0();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v54 = v42;
      *(_DWORD *)v41 = 136315138;
      v53 = sub_1BC4991F0(0xD000000000000019, 0x80000001BC64BD80, &v54);
      sub_1BC62CFF8();
      _os_log_impl(&dword_1BC30A000, v39, v40, "[%s] Parent view controller did not conform to AccountActionDelegate, cannot resume sharing.", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v42, -1, -1);
      MEMORY[0x1BCCF36A8](v41, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v43 = (void *)objc_opt_self();
    if (qword_1ED6A3308 != -1)
      swift_once();
    v44 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v45 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v46 = objc_msgSend(v43, sel_basicAlertControllerWithTitle_message_internalError_, 0, v45, 0);

    objc_msgSend(a1, sel_presentViewController_animated_completion_, v46, 1, 0);
  }
}

uint64_t sub_1BC5F3840(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v8 = sub_1BC62C47C();
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BC62C4AC();
  v11 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v14 = (void *)sub_1BC62CC74();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a1;
  v15[5] = a4;
  aBlock[4] = sub_1BC5F604C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_61_1;
  v16 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  v17 = a1;
  v18 = a4;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v21);
}

uint64_t sub_1BC5F3A6C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t ObjectType;
  uint64_t v8;
  void (*v9)(uint64_t, void (*)(ValueMetadata *), uint64_t, uint64_t, uint64_t);
  id v10;

  ObjectType = swift_getObjectType();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a4;
  v9 = *(void (**)(uint64_t, void (*)(ValueMetadata *), uint64_t, uint64_t, uint64_t))(a2 + 32);
  v10 = a4;
  v9(a3, sub_1BC5F607C, v8, ObjectType, a2);
  return swift_release();
}

void sub_1BC5F3AFC(ValueMetadata *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  ValueMetadata *v11;
  ValueMetadata *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  ValueMetadata *v18;
  ValueMetadata *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  ValueMetadata *v24;
  NSObject *v25;
  uint64_t v26;
  uint8_t *v27;
  ValueMetadata *v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  ValueMetadata *v37;
  void *v38;
  ValueMetadata *v39;
  ValueMetadata *v40;

  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v36 - v9;
  if (a1)
  {
    sub_1BC62BAF8();
    v11 = a1;
    v12 = a1;
    v13 = sub_1BC62BB28();
    v14 = sub_1BC62CAC4();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v37 = (ValueMetadata *)swift_slowAlloc();
      v40 = v37;
      *(_DWORD *)v15 = 136446466;
      v38 = a2;
      v39 = &type metadata for ClinicalSharingPausedItem;
      sub_1BC5F6084();
      v16 = sub_1BC62C6E0();
      v39 = (ValueMetadata *)sub_1BC4991F0(v16, v17, (uint64_t *)&v40);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      v36 = v15 + 14;
      v39 = a1;
      v18 = a1;
      v19 = a1;
      sub_1BC41EB3C(0, (unint64_t *)&unk_1ED6A4E80, (unint64_t *)&qword_1ED6A59C0, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1BC62D5D4();
      v20 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v21 = sub_1BC62C6E0();
      v23 = v22;

      v39 = (ValueMetadata *)sub_1BC4991F0(v21, v23, (uint64_t *)&v40);
      sub_1BC62CFF8();
      a2 = v38;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v13, v14, "[%{public}s]: failed to update multi device status with error: %{public}s", (uint8_t *)v15, 0x16u);
      v24 = v37;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v24, -1, -1);
      MEMORY[0x1BCCF36A8](v15, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v31 = (void *)objc_opt_self();
    if (qword_1ED6A3308 != -1)
      swift_once();
    v32 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v33 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v34 = (void *)sub_1BC62A550();
    v35 = objc_msgSend(v31, sel_basicAlertControllerWithTitle_message_internalError_, 0, v33, v34);

    objc_msgSend(a2, sel_presentViewController_animated_completion_, v35, 1, 0);
  }
  else
  {
    sub_1BC62BAF8();
    v25 = sub_1BC62BB28();
    v26 = sub_1BC62CAAC();
    if (os_log_type_enabled(v25, (os_log_type_t)v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = (ValueMetadata *)swift_slowAlloc();
      *(_DWORD *)v27 = 136446210;
      v39 = v28;
      v40 = &type metadata for ClinicalSharingPausedItem;
      sub_1BC5F6084();
      v29 = sub_1BC62C6E0();
      v40 = (ValueMetadata *)sub_1BC4991F0(v29, v30, (uint64_t *)&v39);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v25, (os_log_type_t)v26, "[%{public}s]: successfully changed updated sharing status", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v28, -1, -1);
      MEMORY[0x1BCCF36A8](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
}

void sub_1BC5F4020(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t (*sub_1BC5F4048())()
{
  return nullsub_1;
}

uint64_t sub_1BC5F4058()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC5F4084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*sub_1BC5F40B8())()
{
  return nullsub_1;
}

uint64_t sub_1BC5F40C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*sub_1BC5F40FC())()
{
  return nullsub_1;
}

uint64_t sub_1BC5F410C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  sub_1BC38F084(v1);
  return v1;
}

uint64_t sub_1BC5F413C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC36D770(*(_QWORD *)(v2 + 72));
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*sub_1BC5F4170())()
{
  return nullsub_1;
}

void sub_1BC5F4180(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  _QWORD *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v3 = *v1;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - v5;
  swift_getObjectType();
  v7 = swift_conformsToProtocol2();
  if (v7)
    v8 = v7;
  else
    v8 = 0;
  if (v7)
    v9 = a1;
  else
    v9 = 0;
  if (v9)
    v10 = a1;
  else
    v8 = 0;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = v8;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  v11 = *(void **)((char *)v1 + OBJC_IVAR____TtC15HealthRecordsUI15StopSharingItem_account);
  if (objc_msgSend(v11, sel_isSharingToProvider)
    && (v12 = objc_msgSend(v11, sel_clinicalSharingStatus),
        v13 = objc_msgSend(v12, sel_multiDeviceStatus),
        v12,
        v13 == (id)2)
    && objc_msgSend(v11, sel_needsRelogin))
  {
    v14 = sub_1BC62C95C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = v1;
    v15[5] = a1;
    v16 = a1;
    swift_retain();
    sub_1BC5C2784((uint64_t)v6, (uint64_t)&unk_1EF439EE0, (uint64_t)v15);
    swift_release();
  }
  else
  {
    v36 = v3;
    if (qword_1ED6A3308 != -1)
      swift_once();
    v17 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BC639590;
    v19 = objc_msgSend(v11, sel_title);
    v20 = sub_1BC62C680();
    v22 = v21;

    *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v18 + 64) = sub_1BC3644C0();
    *(_QWORD *)(v18 + 32) = v20;
    *(_QWORD *)(v18 + 40) = v22;
    sub_1BC62C6B0();
    swift_bridgeObjectRelease();
    v23 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v24 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, 0, v23, 0);

    v25 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v26 = (_QWORD *)swift_allocObject();
    v26[2] = v1;
    v26[3] = a1;
    v26[4] = v36;
    v27 = a1;
    swift_retain();
    v28 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1BC5F4744;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39B5A0;
    aBlock[3] = &block_descriptor_76;
    v29 = _Block_copy(aBlock);
    swift_release();
    v30 = (void *)objc_opt_self();
    v31 = objc_msgSend(v30, sel_actionWithTitle_style_handler_, v28, 2, v29);
    _Block_release(v29);

    objc_msgSend(v24, sel_addAction_, v31);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v32 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v33 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v34 = objc_msgSend(v30, sel_actionWithTitle_style_handler_, v33, 1, 0);

    objc_msgSend(v24, sel_addAction_, v34);
    objc_msgSend(v27, sel_presentViewController_animated_completion_, v24, 1, 0);

  }
}

uint64_t sub_1BC5F4734()
{
  return objectdestroyTm_13((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BC5F4744(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5F1C40(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t block_copy_helper_73(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_73()
{
  return swift_release();
}

uint64_t sub_1BC5F4768()
{
  return objectdestroy_2Tm_4((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BC5F4774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1BC377F18;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_1BC5F47D4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5F4800(void *a1)
{
  uint64_t v1;

  return sub_1BC5F1CB0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BC5F480C()
{
  return objectdestroyTm_13((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

void sub_1BC5F481C()
{
  uint64_t v0;

  sub_1BC5F22F4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1BC5F4824(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  _QWORD *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  _QWORD aBlock[6];

  v3 = *v1;
  swift_getObjectType();
  v4 = swift_conformsToProtocol2();
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    v6 = a1;
  else
    v6 = 0;
  if (v6)
    v7 = a1;
  else
    v5 = 0;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = v5;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  if (qword_1ED6A3308 != -1)
    swift_once();
  v8 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, 0, v9, 1, 0xE000000000000000);

  v11 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v1;
  v12[3] = a1;
  v12[4] = v3;
  v13 = a1;
  swift_retain();
  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1BC5F4C04;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39B5A0;
  aBlock[3] = &block_descriptor_19_3;
  v15 = _Block_copy(aBlock);
  swift_release();
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_actionWithTitle_style_handler_, v14, 2, v15, 0xE000000000000000);
  _Block_release(v15);

  objc_msgSend(v10, sel_addAction_, v17);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v18 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v19 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v16, sel_actionWithTitle_style_handler_, v19, 1, 0, 0xE000000000000000);

  objc_msgSend(v10, sel_addAction_, v20);
  objc_msgSend(v13, sel_presentViewController_animated_completion_, v10, 1, 0);

}

uint64_t sub_1BC5F4BF4()
{
  return objectdestroyTm_13((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BC5F4C04(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5F2580(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BC5F4C10()
{
  return objectdestroyTm_13((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroyTm_13(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject();
}

uint64_t sub_1BC5F4C5C(void *a1)
{
  uint64_t v1;

  return sub_1BC5F2888(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BC5F4C6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(sub_1BC62A7B4() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = *(_QWORD *)((char *)v1 + v6);
  v11 = (uint64_t)v1 + v5;
  v12 = (_QWORD *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  v13 = *v12;
  v14 = v12[1];
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_1BC3781C0;
  return sub_1BC5CE1BC(a1, v7, v8, v9, v11, v10, v13, v14);
}

uint64_t sub_1BC5F4D38()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC5F4D6C()
{
  uint64_t v0;

  return sub_1BC5F2AB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BC5F4D78()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC5F4D9C(void *a1)
{
  uint64_t v1;

  sub_1BC5F2B80(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC5F4DA4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t *v16;
  uint64_t v18;

  v5 = sub_1BC62A7B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI15StopSharingItem_account) = a1;
  v9 = objc_msgSend(a1, sel_identifier);
  sub_1BC62A79C();

  if (qword_1ED6A3308 != -1)
    swift_once();
  v10 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v11 = sub_1BC62A4A8();
  v13 = v12;
  swift_bridgeObjectRelease();

  v14 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
  v15 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID, v8, v5);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) = a2;
  v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelText);
  *v16 = v11;
  v16[1] = v13;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor) = v14;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont) = v15;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) = 0;
  return v2;
}

void sub_1BC5F4FD8(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;

  v34 = a8;
  v35 = a2;
  v37 = a4;
  v38 = a6;
  v30 = (uint64_t)a3;
  v32 = a10;
  v33 = a1;
  v14 = sub_1BC62A7B4();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62AF10();
  v36 = sub_1BC62ADA8();
  v39 = 0;
  v40 = 0xE000000000000000;
  v29 = v19;
  swift_bridgeObjectRetain();
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v39 = 0xD00000000000001ALL;
  v40 = 0x80000001BC667330;
  sub_1BC62A7A8();
  sub_1BC347F0C((unint64_t *)&qword_1EF429280, v15, MEMORY[0x1E0CB09F0]);
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v14);
  v20 = v40;
  v31 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = a3;
  swift_bridgeObjectRetain();
  v22 = v34;
  v23 = v32;
  sub_1BC38F084(v34);
  v24 = v33;
  v25 = v35;
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v26 = v29;
  swift_bridgeObjectRelease_n();
  sub_1BC36D770(v22);
  swift_release();

  *a9 = v36;
  a9[1] = v26;
  a9[2] = v31;
  a9[3] = v20;
  v27 = v37;
  a9[4] = v30;
  a9[5] = v27;
  v28 = v38;
  a9[6] = a5;
  a9[7] = v28;
  a9[8] = a7;
  a9[9] = v22;
  a9[10] = v23;
  a9[11] = (uint64_t)v24;
  a9[12] = v25;
}

uint64_t sub_1BC5F5204@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t result;
  void *v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[6];
  uint64_t v46;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v6 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v7 = sub_1BC62A4A8();
  v9 = v8;
  swift_bridgeObjectRelease();

  v10 = (void *)MEMORY[0x1BCCF19F8](v7, v9);
  swift_bridgeObjectRelease();
  v11 = swift_allocObject();
  v12 = (void *)qword_1ED6A32F0;
  v40 = a1;
  swift_retain();
  v42 = v10;
  v13 = a2;
  v14 = v12;
  swift_bridgeObjectRetain();
  v15 = sub_1BC62A4A8();
  v17 = v16;
  swift_bridgeObjectRelease();

  v18 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v19 = sub_1BC62A4A8();
  v21 = v20;
  swift_bridgeObjectRelease();

  sub_1BC5F4FD8(v40, v13, v10, v15, v17, v19, v21, 0, (uint64_t *)v45, 0);
  v22 = v45[5];
  *(_OWORD *)(v11 + 80) = v45[4];
  *(_OWORD *)(v11 + 96) = v22;
  *(_QWORD *)(v11 + 112) = v46;
  v23 = v45[1];
  *(_OWORD *)(v11 + 16) = v45[0];
  *(_OWORD *)(v11 + 32) = v23;
  v24 = v45[3];
  *(_OWORD *)(v11 + 48) = v45[2];
  *(_OWORD *)(v11 + 64) = v24;
  swift_beginAccess();
  v25 = *(_QWORD *)(v11 + 88);
  *(_QWORD *)(v11 + 88) = sub_1BC5F5DF4;
  *(_QWORD *)(v11 + 96) = v11;
  swift_retain();
  sub_1BC36D770(v25);
  v26 = *(_QWORD *)(v11 + 24);
  v27 = *(_QWORD *)(v11 + 40);
  v43 = *(_QWORD *)(v11 + 32);
  v44 = *(_QWORD *)(v11 + 16);
  v28 = *(void **)(v11 + 48);
  v29 = *(_QWORD *)(v11 + 64);
  v39 = *(_QWORD *)(v11 + 72);
  v41 = *(_QWORD *)(v11 + 56);
  v30 = *(_QWORD *)(v11 + 80);
  v31 = *(_QWORD *)(v11 + 88);
  v32 = *(_QWORD *)(v11 + 96);
  v37 = v28;
  v38 = *(void **)(v11 + 104);
  v33 = *(_QWORD *)(v11 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = v28;
  swift_bridgeObjectRetain();
  sub_1BC38F084(v31);
  v35 = v38;
  swift_retain();
  result = swift_release();
  *a3 = v44;
  a3[1] = v26;
  a3[2] = v43;
  a3[3] = v27;
  a3[4] = v37;
  a3[5] = v41;
  a3[6] = v29;
  a3[7] = v39;
  a3[8] = v30;
  a3[9] = v31;
  a3[10] = v32;
  a3[11] = v35;
  a3[12] = v33;
  return result;
}

uint64_t sub_1BC5F5540(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t *v16;
  uint64_t v18;

  v5 = sub_1BC62A7B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_identifier);
  sub_1BC62A79C();

  if (qword_1ED6A3308 != -1)
    swift_once();
  v10 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v11 = sub_1BC62A4A8();
  v13 = v12;
  swift_bridgeObjectRelease();

  v14 = objc_msgSend((id)objc_opt_self(), sel_linkColor);
  v15 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID, v8, v5);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) = a2;
  v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelText);
  *v16 = v11;
  v16[1] = v13;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor) = v14;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont) = v15;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) = 0;
  return v2;
}

void sub_1BC5F5768(_QWORD *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v2 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  v6 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v7 = sub_1BC62A4A8();
  v9 = v8;
  swift_bridgeObjectRelease();

  if (qword_1ED6A4918 != -1)
    swift_once();
  v10 = (id)qword_1ED6A5980;
  v11 = (void *)sub_1BC62C650();
  v12 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v11, v10, 0xE000000000000000);

  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x80000001BC6671A0;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = v7;
  a1[5] = v9;
  a1[6] = v12;
}

void sub_1BC5F5954(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v2 = v1;
  v4 = sub_1BC62A7B4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v6 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v7 = MEMORY[0x1E0C80A78](v4).n128_u64[0];
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_accountIdentifiers, v7);
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v5, MEMORY[0x1E0CB09C8]);
  v11 = sub_1BC62C9E0();

  v12 = objc_msgSend(*(id *)(v2 + qword_1EF439A80), sel_identifier);
  sub_1BC62A79C();

  LOBYTE(v12) = sub_1BC5DC888((uint64_t)v9, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  if ((v12 & 1) != 0)
  {
    swift_retain();
    sub_1BC62AF4C();
    swift_release();
    sub_1BC3F5D0C(0);
    swift_release();
    sub_1BC5EED90(1);
  }
}

void sub_1BC5F5AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(uint64_t);
  _QWORD aBlock[6];

  v1 = sub_1BC62C47C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62C4AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v0 + qword_1EF439AC8);
  *(_BYTE *)(v0 + qword_1EF439AC8) = 0;
  if (v9 == 1)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v10 = (void *)sub_1BC62CC74();
    aBlock[4] = sub_1BC5F5CBC;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_38_2;
    v11 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_1BC62C494();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35811C();
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v8, v4, v11);
    _Block_release(v11);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1BC5F5CBC()
{
  uint64_t v0;

  return sub_1BC5EEBA0(v0);
}

unint64_t sub_1BC5F5CC4()
{
  unint64_t result;

  result = qword_1EF439EF0;
  if (!qword_1EF439EF0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC648BD8, &type metadata for TopAlignedIconListItem);
    atomic_store(result, (unint64_t *)&qword_1EF439EF0);
  }
  return result;
}

uint64_t sub_1BC5F5D08()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_1BC5F5D44()
{
  unint64_t result;

  result = qword_1EF439F10;
  if (!qword_1EF439F10)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64BE4C, &type metadata for ClinicalSharingPausedItem);
    atomic_store(result, (unint64_t *)&qword_1EF439F10);
  }
  return result;
}

uint64_t objectdestroy_43Tm_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88))
    swift_release();

  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1BC5F5DF4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC5F30E4(a1, a2, v2);
}

_QWORD *sub_1BC5F5DFC(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v2 = (void *)a1[4];
  v3 = a1[9];
  v4 = (void *)a1[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v2;
  swift_bridgeObjectRetain();
  sub_1BC38F084(v3);
  v6 = v4;
  swift_retain();
  return a1;
}

_QWORD *sub_1BC5F5E8C(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = (void *)a1[4];
  v3 = a1[9];
  v4 = (void *)a1[11];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC36D770(v3);
  swift_release();

  return a1;
}

uint64_t sub_1BC5F5F20()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC5F5F4C(void *a1)
{
  uint64_t v1;

  return sub_1BC5F3840(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5F6000()
{
  return objectdestroy_2Tm_4((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_2Tm_4(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_unknownObjectRelease();
  a1(*(_QWORD *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_1BC5F604C()
{
  uint64_t v0;

  return sub_1BC5F3A6C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1BC5F6058()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC5F607C(ValueMetadata *a1)
{
  uint64_t v1;

  sub_1BC5F3AFC(a1, *(void **)(v1 + 16));
}

unint64_t sub_1BC5F6084()
{
  unint64_t result;

  result = qword_1EF439F20;
  if (!qword_1EF439F20)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF439F20);
  }
  return result;
}

unint64_t sub_1BC5F60BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF439F48;
  if (!qword_1EF439F48)
  {
    sub_1BC5F61F4(255, &qword_1EF439F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB00], MEMORY[0x1E0D2AAF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD40]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D2AD60], v1);
    atomic_store(result, (unint64_t *)&qword_1EF439F48);
  }
  return result;
}

unint64_t sub_1BC5F6124()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF439F50;
  if (!qword_1EF439F50)
  {
    sub_1BC5F61F4(255, &qword_1EF439F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB00], MEMORY[0x1E0D2AAF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD40]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D2AD58], v1);
    atomic_store(result, (unint64_t *)&qword_1EF439F50);
  }
  return result;
}

unint64_t sub_1BC5F618C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF439F58;
  if (!qword_1EF439F58)
  {
    sub_1BC5F61F4(255, &qword_1EF439F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B750], MEMORY[0x1E0D2B148], MEMORY[0x1E0D2AA60]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D2AA70], v1);
    atomic_store(result, (unint64_t *)&qword_1EF439F58);
  }
  return result;
}

void sub_1BC5F61F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a5(a1, v9, a4);
    if (!v11)
      atomic_store(v10, a2);
  }
}

unint64_t sub_1BC5F6254()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF439F78;
  if (!qword_1EF439F78)
  {
    sub_1BC5F61F4(255, &qword_1EF439F70, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource, MEMORY[0x1E0D2B498], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD40]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D2AD60], v1);
    atomic_store(result, (unint64_t *)&qword_1EF439F78);
  }
  return result;
}

uint64_t destroy for ClinicalSharingPausedItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 72))
    swift_release();

  return swift_release();
}

_QWORD *initializeWithCopy for ClinicalSharingPausedItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v7 = (void *)a2[4];
  v6 = a2[5];
  a1[4] = v7;
  a1[5] = v6;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  a1[8] = a2[8];
  v10 = a2 + 9;
  v9 = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    v12 = a2[10];
    a1[9] = v9;
    a1[10] = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 9) = *v10;
  }
  v13 = (void *)a2[11];
  v14 = a2[12];
  a1[11] = v13;
  a1[12] = v14;
  v15 = v13;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ClinicalSharingPausedItem(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a2[9];
  if (!a1[9])
  {
    if (v7)
    {
      v9 = a2[10];
      a1[9] = v7;
      a1[10] = v9;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  v8 = a2[10];
  a1[9] = v7;
  a1[10] = v8;
  swift_retain();
  swift_release();
LABEL_8:
  v10 = (void *)a2[11];
  v11 = (void *)a1[11];
  a1[11] = v10;
  v12 = v10;

  a1[12] = a2[12];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ClinicalSharingPausedItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 72))
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v8;
      *(_QWORD *)(a1 + 80) = v10;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  swift_release();
LABEL_8:

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingPausedItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingPausedItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingPausedItem()
{
  return &type metadata for ClinicalSharingPausedItem;
}

uint64_t AccountStateProvider.requiresOnboardingPublisher.getter()
{
  return swift_retain();
}

uint64_t AccountStateProvider.accountStatePublisher.getter()
{
  return swift_retain();
}

uint64_t AccountStateProvider.ingestionStatePublisher.getter()
{
  return swift_retain();
}

uint64_t AccountStateProvider.indexManagerStatePublisher.getter()
{
  return swift_retain();
}

uint64_t sub_1BC5F6730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96180];
  sub_1BC5F6D94(0, &qword_1ED6A4D98, (unint64_t *)&qword_1ED6A5330, (uint64_t)&type metadata for HealthRecordsSupportedChange, MEMORY[0x1E0C96180]);
  v4 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  v31 = v4;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v27 - v5;
  sub_1BC5F6D94(0, &qword_1ED6A4DA8, (unint64_t *)&qword_1ED6A5360, (uint64_t)&type metadata for AccountStateChange, v2);
  v8 = v7;
  v29 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - v9;
  sub_1BC5F6DF4();
  v12 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  v33 = v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC5F6F5C();
  v16 = *(_QWORD *)(v15 - 8);
  v34 = v15;
  v35 = v16;
  MEMORY[0x1E0C80A78](v15);
  v28 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(v1 + 64), sel_addAccountStateChangeListener_, *(_QWORD *)(v1 + 80));
  objc_msgSend(*(id *)(v1 + 48), sel_addHealthRecordsSupportedChangeListener_, *(_QWORD *)(v1 + 88));
  objc_msgSend(*(id *)(v1 + 56), sel_addIngestionStateListener_, *(_QWORD *)(v1 + 96));
  objc_msgSend(*(id *)(v1 + 72), sel_registerAsConceptObserver_onQueue_, *(_QWORD *)(v1 + 104), 0);
  swift_beginAccess();
  v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198];
  sub_1BC5F6D94(0, &qword_1ED6A53A8, (unint64_t *)&qword_1ED6A5360, (uint64_t)&type metadata for AccountStateChange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BF9C();
  swift_endAccess();
  swift_beginAccess();
  sub_1BC5F6D94(0, (unint64_t *)&unk_1ED6A5398, (unint64_t *)&qword_1ED6A5330, (uint64_t)&type metadata for HealthRecordsSupportedChange, v18);
  sub_1BC62BF9C();
  swift_endAccess();
  sub_1BC5F6F14(&qword_1ED6A4DA0, &qword_1ED6A4DA8, (unint64_t *)&qword_1ED6A5360, (uint64_t)&type metadata for AccountStateChange);
  sub_1BC5F6F14((unint64_t *)&unk_1ED6A4D88, &qword_1ED6A4D98, (unint64_t *)&qword_1ED6A5330, (uint64_t)&type metadata for HealthRecordsSupportedChange);
  v19 = v30;
  sub_1BC62C020();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v19);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1BC5F7038;
  *(_QWORD *)(v20 + 24) = v1;
  swift_retain();
  sub_1BC62BE88();
  v21 = MEMORY[0x1E0C95D78];
  sub_1BC486DB4(0, &qword_1ED6A4D30, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC347F0C(&qword_1ED6A4CC8, (uint64_t (*)(uint64_t))sub_1BC5F6DF4, MEMORY[0x1E0C95698]);
  sub_1BC486140((unint64_t *)&unk_1ED6A4D20, &qword_1ED6A4D30, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v21, MEMORY[0x1E0C95D90]);
  v22 = v28;
  v23 = v32;
  sub_1BC62C0C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v23);
  sub_1BC347F0C(&qword_1ED6A4CE8, (uint64_t (*)(uint64_t))sub_1BC5F6F5C, MEMORY[0x1E0C95B78]);
  swift_retain();
  v24 = v34;
  v25 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v24);
  *(_QWORD *)(v1 + 112) = v25;
  return swift_release();
}

uint64_t sub_1BC5F6B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t (*v10)(void);
  id v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC45DB10();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(a3 + 64);
  *(_QWORD *)(swift_allocObject() + 16) = v9;
  v10 = MEMORY[0x1E0C960D8];
  sub_1BC486DB4(0, (unint64_t *)&qword_1ED6A4D70, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC486140(&qword_1ED6A4D68, (unint64_t *)&qword_1ED6A4D70, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v10, MEMORY[0x1E0C96108]);
  v11 = v9;
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1ED6A4D78, (uint64_t (*)(uint64_t))sub_1BC45DB10, MEMORY[0x1E0C96148]);
  v12 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v12;
}

id *AccountStateProvider.deinit()
{
  id *v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v0;
}

uint64_t AccountStateProvider.__deallocating_deinit()
{
  AccountStateProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AccountStateProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for AccountStateProvider()
{
  return swift_lookUpClassMethod();
}

void sub_1BC5F6D94(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC403CE4(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC5F6DF4()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6A4CD0)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96180];
    sub_1BC5F6D94(255, &qword_1ED6A4DA8, (unint64_t *)&qword_1ED6A5360, (uint64_t)&type metadata for AccountStateChange, MEMORY[0x1E0C96180]);
    sub_1BC5F6D94(255, &qword_1ED6A4D98, (unint64_t *)&qword_1ED6A5330, (uint64_t)&type metadata for HealthRecordsSupportedChange, v0);
    sub_1BC5F6F14(&qword_1ED6A4DA0, &qword_1ED6A4DA8, (unint64_t *)&qword_1ED6A5360, (uint64_t)&type metadata for AccountStateChange);
    sub_1BC5F6F14((unint64_t *)&unk_1ED6A4D88, &qword_1ED6A4D98, (unint64_t *)&qword_1ED6A5330, (uint64_t)&type metadata for HealthRecordsSupportedChange);
    v1 = sub_1BC62BDE0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6A4CD0);
  }
}

uint64_t sub_1BC5F6F14(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC5F6D94(255, a2, a3, a4, MEMORY[0x1E0C96180]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C96190], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC5F6F5C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6A4CF0)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC486DB4(255, &qword_1ED6A4D30, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC5F6DF4();
    sub_1BC486140((unint64_t *)&unk_1ED6A4D20, &qword_1ED6A4D30, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v0, MEMORY[0x1E0C95D90]);
    sub_1BC347F0C(&qword_1ED6A4CC8, (uint64_t (*)(uint64_t))sub_1BC5F6DF4, MEMORY[0x1E0C95698]);
    v1 = sub_1BC62BE28();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6A4CF0);
  }
}

uint64_t sub_1BC5F7038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC5F6B8C(a1, a2, v2);
}

uint64_t sub_1BC5F7040()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5F7064@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(a1, a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1BC5F7090()
{
  return sub_1BC62BF00();
}

uint64_t sub_1BC5F70C4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC5F70E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  objc_class *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  objc_class *v24;
  id v25;
  char *v26;
  char *v27;
  id v28;
  objc_class *v29;
  id v30;
  char *v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  objc_super v37;
  objc_super v38;
  objc_super v39;
  objc_super v40;
  id v41;
  uint64_t v42;
  uint64_t v43;

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198];
  sub_1BC5F6D94(0, (unint64_t *)&unk_1ED6A5398, (unint64_t *)&qword_1ED6A5330, (uint64_t)&type metadata for HealthRecordsSupportedChange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - v6;
  sub_1BC5F6D94(0, &qword_1ED6A53A8, (unint64_t *)&qword_1ED6A5360, (uint64_t)&type metadata for AccountStateChange, v4);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v34 - v11;
  LOBYTE(v41) = 0;
  sub_1BC486DB4(0, (unint64_t *)&qword_1ED6A4D60, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95F88]);
  swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1BC62BF24();
  *(_QWORD *)(v2 + 112) = 0;
  *(_QWORD *)(v2 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6768]), sel_initWithHealthStore_, a1);
  *(_QWORD *)(v2 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EEB8]), sel_initWithHealthStore_, a1);
  *(_QWORD *)(v2 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EE98]), sel_initWithHealthStore_, a1);
  *(_QWORD *)(v2 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB64D0]), sel_initWithHealthStore_, a1);
  v13 = (objc_class *)type metadata accessor for AccountStateChangeListener();
  v14 = (char *)objc_allocWithZone(v13);
  v15 = &v14[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener__latestChange];
  v41 = 0;
  v42 = 0;
  v43 = 0;
  sub_1BC403CE4(0, (unint64_t *)&qword_1ED6A5360);
  v16 = v14;
  sub_1BC62BF90();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v12, v9);
  v17 = OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_changePublisher;
  sub_1BC3583FC();
  swift_allocObject();
  *(_QWORD *)&v16[v17] = sub_1BC62BEE8();
  v18 = &v16[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_handler];
  *(_QWORD *)v18 = nullsub_1;
  *((_QWORD *)v18 + 1) = 0;

  v40.receiver = v16;
  v40.super_class = v13;
  *(_QWORD *)(v2 + 80) = objc_msgSendSuper2(&v40, sel_init);
  v19 = (objc_class *)type metadata accessor for HealthRecordsSupportedStateChangeListener();
  v20 = (char *)objc_allocWithZone(v19);
  v21 = &v20[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener__latestChange];
  v41 = 0;
  LOBYTE(v42) = 0;
  sub_1BC403CE4(0, (unint64_t *)&qword_1ED6A5330);
  v22 = v20;
  sub_1BC62BF90();
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v21, v7, v36);
  v23 = &v22[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener_handler];
  *(_QWORD *)v23 = nullsub_1;
  *((_QWORD *)v23 + 1) = 0;

  v39.receiver = v22;
  v39.super_class = v19;
  *(_QWORD *)(v2 + 88) = objc_msgSendSuper2(&v39, sel_init);
  v24 = (objc_class *)type metadata accessor for IngestionStateChangeListener();
  v25 = objc_allocWithZone(v24);
  v41 = 0;
  LOBYTE(v42) = 1;
  sub_1BC5F7584(0, (unint64_t *)&qword_1ED6A4B40, (unint64_t *)&qword_1ED6A4B58, type metadata accessor for HKClinicalIngestionState);
  swift_allocObject();
  v26 = (char *)v25;
  *(_QWORD *)&v26[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_changePublisher] = sub_1BC62BF24();
  v27 = &v26[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_handler];
  *(_QWORD *)v27 = nullsub_1;
  *((_QWORD *)v27 + 1) = 0;

  v38.receiver = v26;
  v38.super_class = v24;
  *(_QWORD *)(v2 + 96) = objc_msgSendSuper2(&v38, sel_init);
  v28 = objc_msgSend(*(id *)(v2 + 72), sel_currentConceptIndexerState);
  v29 = (objc_class *)type metadata accessor for IndexManagerStateChangeListener();
  v30 = objc_allocWithZone(v29);
  v41 = v28;
  LOBYTE(v42) = 0;
  sub_1BC5F7584(0, &qword_1ED6A4B50, &qword_1ED6A4B78, type metadata accessor for HKConceptIndexManagerState);
  swift_allocObject();
  v31 = (char *)v30;
  *(_QWORD *)&v31[OBJC_IVAR____TtC15HealthRecordsUI31IndexManagerStateChangeListener_changePublisher] = sub_1BC62BF24();

  v37.receiver = v31;
  v37.super_class = v29;
  v32 = (char *)objc_msgSendSuper2(&v37, sel_init);
  *(_QWORD *)(v2 + 104) = v32;
  *(_QWORD *)(v2 + 24) = *(_QWORD *)(*(_QWORD *)(v2 + 80)
                                   + OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_changePublisher);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(*(_QWORD *)(v2 + 96)
                                   + OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_changePublisher);
  *(_QWORD *)(v2 + 40) = *(_QWORD *)&v32[OBJC_IVAR____TtC15HealthRecordsUI31IndexManagerStateChangeListener_changePublisher];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BC5F6730();
  return v2;
}

void sub_1BC5F7584(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC384E68(255, a3, a4);
    v5 = sub_1BC62BF18();
    if (!v6)
      atomic_store(v5, a2);
  }
}

id MedicationDispenseFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___HRMedicationDispenseFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___HRMedicationDispenseFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1BC5F7658()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  objc_super v13;

  v1 = OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter);
  }
  else
  {
    v4 = *(void **)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter_store);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter_context);
    v6 = (objc_class *)type metadata accessor for MedicationDosageFormatter();
    v7 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = v4;
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = v5;
    v13.receiver = v7;
    v13.super_class = v6;
    v8 = v4;
    v9 = objc_msgSendSuper2(&v13, sel_init);
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

uint64_t sub_1BC5F7724(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;

  v2 = objc_msgSend(a1, sel_dosages);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = v2;
  sub_1BC34B6A0(0, &qword_1EF42D040);
  v4 = sub_1BC62C878();

  v5 = sub_1BC5F7658();
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    v11 = swift_bridgeObjectRetain();
    v6 = (uint64_t)sub_1BC3D6978(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v12 = v6;
  sub_1BC44A7EC((uint64_t *)&v12);
  v7 = v12;
  v8 = v5;
  v9 = sub_1BC44BBBC(v7);
  swift_bridgeObjectRelease();
  swift_release();

  return v9;
}

id MedicationDispenseFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter_store);
}

uint64_t MedicationDispenseFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter_context);
}

id MedicationDispenseFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___HRMedicationDispenseFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___HRMedicationDispenseFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MedicationDispenseFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

unint64_t sub_1BC5F78CC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicationDispenseFormatter_context);
  if (v2 == 1)
    return sub_1BC5F8728(a1);
  if (!v2)
    return sub_1BC5F792C(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC5F792C(void *a1)
{
  uint64_t inited;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v18;

  sub_1BC42567C();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC649140;
  *(_QWORD *)(inited + 32) = sub_1BC5F8020(a1);
  *(_QWORD *)(inited + 40) = sub_1BC61F814(a1);
  *(_QWORD *)(inited + 48) = sub_1BC5F7EB4(a1);
  *(_QWORD *)(inited + 56) = sub_1BC5F8238(a1);
  *(_QWORD *)(inited + 64) = sub_1BC5F83A4(a1);
  *(_QWORD *)(inited + 72) = sub_1BC5F8510(a1);
  *(_QWORD *)(inited + 80) = sub_1BC546064(a1);
  sub_1BC62C890();
  v18 = MEMORY[0x1E0DEE9D8];
  v3 = *(void **)(inited + 32);
  if (v3)
  {
    v4 = v3;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v5 = *(void **)(inited + 40);
  if (v5)
  {
    v6 = v5;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v7 = *(void **)(inited + 48);
  if (v7)
  {
    v8 = v7;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v9 = *(void **)(inited + 56);
  if (v9)
  {
    v10 = v9;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v11 = *(void **)(inited + 64);
  if (v11)
  {
    v12 = v11;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v13 = *(void **)(inited + 72);
  if (v13)
  {
    v14 = v13;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v15 = *(void **)(inited + 80);
  if (v15)
  {
    v16 = v15;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  swift_bridgeObjectRelease();
  return v18;
}

id MedicationDispenseFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicationDispenseFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationDispenseFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDispenseFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC5F7D78()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR___HRMedicationDispenseFormatter_store);
}

uint64_t sub_1BC5F7D8C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR___HRMedicationDispenseFormatter_context);
}

id sub_1BC5F7DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for MedicationDispenseFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___HRMedicationDispenseFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR___HRMedicationDispenseFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

unint64_t sub_1BC5F7E1C(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t result;

  v2 = *(_QWORD *)(*v1 + OBJC_IVAR___HRMedicationDispenseFormatter_context);
  if (v2 == 1)
    return sub_1BC5F8728(a1);
  if (!v2)
    return sub_1BC5F792C(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MedicationDispenseFormatter()
{
  return objc_opt_self();
}

id sub_1BC5F7EB4(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_earliestDosageDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1BC5F8020(void *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;

  v1 = objc_msgSend(a1, sel_quantityDispensed);
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_displayString);

    v4 = sub_1BC62C680();
    v6 = v5;

    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v8 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000);

      v10 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1BC5F8238(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_handOverDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1BC5F83A4(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_preparationDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1BC5F8510(void *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;

  v1 = objc_msgSend(a1, sel_daysSupplyQuantity);
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_displayString);

    v4 = sub_1BC62C680();
    v6 = v5;

    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v8 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000);

      v10 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

unint64_t sub_1BC5F8728(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  void *v7;
  id v8;
  uint64_t v10;
  unint64_t v11;

  v2 = sub_1BC5F8020(a1);
  v3 = sub_1BC5F8510(a1);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v4 = v2;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v3)
  {
    v5 = v3;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v6 = v11;

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10 >= 2)
      return v6;
  }
  else if (*(uint64_t *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
    return v6;
  }
  v7 = (void *)sub_1BC546064(a1);
  if (v7)
  {
    v8 = v7;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    return v11;
  }
  return v6;
}

unint64_t sub_1BC5F8900(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC5F8924();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC5F8924()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF439FD8;
  if (!qword_1EF439FD8)
  {
    v1 = type metadata accessor for MedicationDispenseFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF439FD8);
  }
  return result;
}

uint64_t method lookup function for MedicationDispenseFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationDispenseFormatter.structuredItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationDispenseFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MedicationDispenseFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

id sub_1BC5F89B4()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  if (!objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
    return 0;
  v0 = (void *)sub_1BC62C650();
  v1 = (void *)sub_1BC62C650();
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_alertControllerWithTitle_message_preferredStyle_, v0, v1, 1);

  if (qword_1ED6A4888 != -1)
    swift_once();
  v3 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v4, 0, 0, 0xE000000000000000);

  objc_msgSend(v2, sel_addAction_, v5);
  return v2;
}

id HealthRecordsNotAvailableViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id HealthRecordsNotAvailableViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  id v6;
  objc_super v8;

  if (a2)
  {
    v5 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for HealthRecordsNotAvailableViewController();
  v6 = objc_msgSendSuper2(&v8, sel_initWithNibName_bundle_, v5, a3);

  return v6;
}

uint64_t type metadata accessor for HealthRecordsNotAvailableViewController()
{
  return objc_opt_self();
}

id HealthRecordsNotAvailableViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id HealthRecordsNotAvailableViewController.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for HealthRecordsNotAvailableViewController();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id HealthRecordsNotAvailableViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthRecordsNotAvailableViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for HealthRecordsNotAvailableViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static HealthRecordsNotAvailableViewController.presentableInstance()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t BrowseCategory.sidebarFeedItemIdentifier.getter()
{
  uint64_t v1;

  v1 = sub_1BC62C71C();
  sub_1BC62C764();
  sub_1BC5FC964();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v1;
}

id BrowseCategory.image.getter()
{
  return sub_1BC5F97A8(sub_1BC5FC724, &qword_1ED6A4908, (id *)&qword_1ED6A5978);
}

id BrowseCategory.tintColorForTemplateImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned int EnumCaseMultiPayload;
  id v5;
  id v6;
  id result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  _BYTE v17[8];
  void *v18;
  void *v19;

  v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BC3B226C(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload > 8)
    goto LABEL_16;
  if (((1 << EnumCaseMultiPayload) & 0xDC) != 0)
  {
    if (qword_1ED6A3208 != -1)
      swift_once();
    v5 = (id)qword_1ED6A47F0;
LABEL_6:
    v6 = v5;
    return v5;
  }
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 8)
    {
      if (qword_1EF428630 != -1)
        swift_once();
      v5 = (id)qword_1EF4330C8;
      goto LABEL_6;
    }
LABEL_16:
    sub_1BC3B22E8((uint64_t)v3);
    return 0;
  }
  v8 = *v3;
  v9 = sub_1BC55B770();
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = sub_1BC558FD8(v8);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(v9 + 56) + 72 * v10;
      v13 = *(void **)(v12 + 8);
      v14 = *(void **)(v12 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = v14;
      v5 = v13;
      swift_bridgeObjectRelease();
LABEL_19:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  swift_bridgeObjectRelease();
  result = objc_msgSend((id)objc_opt_self(), sel_unknownRecordCategory);
  if (result)
  {
    sub_1BC4FC8D8(result, (uint64_t)v17);
    v5 = v18;
    v15 = v19;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

id BrowseCategory.systemImage.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  BrowseCategory.systemImageName.getter();
  if (!v0)
    return 0;
  v1 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v1);

  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, sel_imageWithRenderingMode_, 1);

  return v3;
}

void BrowseCategory.localizedTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v1);
  sub_1BC3B226C(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)&loc_1BC5F91D4 + *((int *)qword_1BC5F9570 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BC5F91E4()
{
  id v0;
  uint64_t v1;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v0 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v1;
}

void BrowseCategory.systemImageName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _BYTE v16[8];
  _BYTE v17[8];
  void *v18;
  void *v19;

  v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC3B226C(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v5 = *v3;
    v6 = sub_1BC55B770();
    if (*(_QWORD *)(v6 + 16) && (v7 = sub_1BC558FD8(v5), (v8 & 1) != 0))
    {
      v9 = *(_QWORD *)(v6 + 56) + 72 * v7;
      v10 = *(_BYTE *)v9;
      v11 = *(void **)(v9 + 8);
      v12 = *(void **)(v9 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = v12;
      v14 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v15 = objc_msgSend((id)objc_opt_self(), sel_unknownRecordCategory);
      if (!v15)
      {
        __break(1u);
        return;
      }
      sub_1BC4FC8D8(v15, (uint64_t)v17);
      v10 = v17[0];
      v14 = v18;
      v13 = v19;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v16[7] = v10;
    DisplayCategory.Kind.systemImageName.getter();
    return;
  }
  if (EnumCaseMultiPayload != 8 && EnumCaseMultiPayload != 4)
    sub_1BC3B22E8((uint64_t)v3);
}

id BrowseCategory.coloredImage.getter()
{
  return sub_1BC5F97A8(BrowseCategory.coloredImageName.getter, &qword_1ED6A4918, (id *)&qword_1ED6A5980);
}

id sub_1BC5F97A8(void (*a1)(void), _QWORD *a2, id *a3)
{
  void *v5;
  id v6;
  id v7;
  void *v8;

  a1();
  v6 = v5;
  if (v5)
  {
    if (*a2 != -1)
      swift_once();
    v7 = *a3;
    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v8, v7, 0);

  }
  return v6;
}

uint64_t sub_1BC5F9868()
{
  uint64_t result;

  sub_1BC62A244();
  swift_allocObject();
  result = sub_1BC62A238();
  qword_1EF43A030 = result;
  return result;
}

uint64_t static BrowseCategory.account(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1BC356030();
  v5 = (uint64_t *)(a2 + *(int *)(v4 + 48));
  v6 = objc_msgSend(a1, sel_identifier);
  sub_1BC62A79C();

  v7 = objc_msgSend(a1, sel_title);
  v8 = sub_1BC62C680();
  v10 = v9;

  *v5 = v8;
  v5[1] = v10;
  type metadata accessor for BrowseCategory();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BC5F9950()
{
  uint64_t result;

  result = sub_1BC5F996C();
  qword_1ED6A4EB8 = result;
  return result;
}

uint64_t sub_1BC5F996C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = type metadata accessor for BrowseCategory();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC5FD494((uint64_t)&unk_1E74D2610, (uint64_t)&unk_1E74D33E0);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BDC0C(0, v5, 0);
    v6 = 0;
    v7 = v12;
    do
    {
      *v3 = *(_BYTE *)(v4 + v6 + 32);
      swift_storeEnumTagMultiPayload();
      v12 = v7;
      v9 = *(_QWORD *)(v7 + 16);
      v8 = *(_QWORD *)(v7 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1BC3BDC0C(v8 > 1, v9 + 1, 1);
        v7 = v12;
      }
      ++v6;
      *(_QWORD *)(v7 + 16) = v9 + 1;
      sub_1BC35F080((uint64_t)v3, v7+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v9);
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BC357158(0, &qword_1ED6A53B8, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC639590;
  swift_storeEnumTagMultiPayload();
  v12 = v10;
  sub_1BC3BBE14(v7);
  return v12;
}

uint64_t static BrowseCategory.allCasesExceptAccounts.getter()
{
  if (qword_1ED6A31C8 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static BrowseCategory.allCasesExceptAccounts.setter(uint64_t a1)
{
  if (qword_1ED6A31C8 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED6A4EB8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static BrowseCategory.allCasesExceptAccounts.modify())()
{
  if (qword_1ED6A31C8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static BrowseCategory.regularSubcategories.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = type metadata accessor for BrowseCategory();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A31D8 != -1)
    swift_once();
  v4 = off_1ED6A4EC8;
  v5 = *((_QWORD *)off_1ED6A4EC8 + 2);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BC3BDC0C(0, v5, 0);
    v7 = 0;
    v6 = v12;
    do
    {
      *v3 = v4[v7 + 32];
      swift_storeEnumTagMultiPayload();
      v12 = v6;
      v9 = *(_QWORD *)(v6 + 16);
      v8 = *(_QWORD *)(v6 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1BC3BDC0C(v8 > 1, v9 + 1, 1);
        v6 = v12;
      }
      ++v7;
      *(_QWORD *)(v6 + 16) = v9 + 1;
      sub_1BC35F080((uint64_t)v3, v6+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v9);
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t static BrowseCategory.hiddenWhenEmpty.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BC357158(0, &qword_1ED6A53B8, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BrowseCategory() - 8) + 80);
  v1 = (v0 + 32) & ~v0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC639590;
  swift_storeEnumTagMultiPayload();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC639590;
  *(_BYTE *)(v3 + v1) = 8;
  swift_storeEnumTagMultiPayload();
  sub_1BC3BBE14(v3);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC639590;
  *(_BYTE *)(v4 + v1) = 9;
  swift_storeEnumTagMultiPayload();
  sub_1BC3BBE14(v4);
  return v2;
}

uint64_t sub_1BC5F9F70()
{
  sub_1BC62D670();
  sub_1BC62C740();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5F9FC0()
{
  return sub_1BC62C740();
}

uint64_t sub_1BC5F9FD8()
{
  sub_1BC62D670();
  sub_1BC62C740();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5FA024@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC62D430();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BC5FA074(_QWORD *a1@<X8>)
{
  *a1 = 0x65756C6156776172;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1BC5FA090()
{
  return 0x65756C6156776172;
}

uint64_t sub_1BC5FA0A8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC62D430();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BC5FA0FC()
{
  sub_1BC5FD5C0();
  return sub_1BC62D700();
}

uint64_t sub_1BC5FA124()
{
  sub_1BC5FD5C0();
  return sub_1BC62D70C();
}

uint64_t BrowseCategory.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v38 = a2;
  v4 = sub_1BC62BB34();
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&unk_1ED6A4E40, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - v7;
  sub_1BC5FD648(0, &qword_1ED6A4810, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - v12;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC5FD5C0();
  sub_1BC62D6DC();
  if (v2)
  {
LABEL_8:
    v30 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v30);
  }
  v15 = v38;
  v14 = v39;
  v35 = a1;
  v16 = sub_1BC62D46C();
  v18 = v17;
  v19 = v10;
  v20 = v13;
  v34 = v19;
  v21 = v16;
  swift_bridgeObjectRetain();
  BrowseCategory.init(rawValue:)(v21, v18, (uint64_t)v8);
  v22 = type metadata accessor for BrowseCategory();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v8, 1, v22) == 1)
  {
    v38 = v21;
    sub_1BC377E3C((uint64_t)v8, (unint64_t *)&unk_1ED6A4E40, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory);
    v23 = v14;
    sub_1BC62BAE0();
    v24 = v18;
    swift_bridgeObjectRetain_n();
    v25 = sub_1BC62BB28();
    v26 = sub_1BC62CAC4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v41 = v28;
      v33 = v20;
      *(_DWORD *)v27 = 136446210;
      swift_bridgeObjectRetain();
      v29 = v38;
      v40 = sub_1BC4991F0(v38, v24, &v41);
      v20 = v33;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC30A000, v25, v26, "Unable to decode BrowseCategory from rawValue: %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v28, -1, -1);
      MEMORY[0x1BCCF36A8](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v37);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v37);
      v29 = v38;
    }
    sub_1BC5FD604();
    swift_allocError();
    *v31 = v29;
    v31[1] = v24;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v34);
    a1 = v35;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v34);
  swift_bridgeObjectRelease();
  sub_1BC35F080((uint64_t)v8, v15);
  v30 = (uint64_t)v35;
  return __swift_destroy_boxed_opaque_existential_1Tm(v30);
}

uint64_t BrowseCategory.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a3;
  v5 = sub_1BC62BB34();
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - v12;
  sub_1BC357158(0, (unint64_t *)&unk_1ED6A4E40, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v39 - v18;
  v20 = type metadata accessor for BrowseCategory();
  v42 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 != 0xD000000000000011 || a2 != 0x80000001BC667760)
    && (sub_1BC62D574() & 1) == 0
    && (a1 != 0xD000000000000010 || a2 != 0x80000001BC667780)
    && (sub_1BC62D574() & 1) == 0
    && (a1 != 0x73746E756F636361 || a2 != 0xEE00726564616548)
    && (sub_1BC62D574() & 1) == 0
    && (a1 != 0x756F636341646461 || a2 != 0xEA0000000000746ELL)
    && (sub_1BC62D574() & 1) == 0
    && (a1 != 0xD000000000000011 || a2 != 0x80000001BC6677A0)
    && (sub_1BC62D574() & 1) == 0
    && (a1 != 0xD000000000000011 || a2 != 0x80000001BC6677C0)
    && (sub_1BC62D574() & 1) == 0)
  {
    if (a1 == 0xD00000000000001DLL && a2 == 0x80000001BC6677E0 || (sub_1BC62D574() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v23 = v41;
      swift_storeEnumTagMultiPayload();
      goto LABEL_6;
    }
    if ((sub_1BC62C7B8() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1BC5FB670(a1, a2, v19);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v19, 1, v20) == 1)
      {
        sub_1BC377E3C((uint64_t)v19, (unint64_t *)&unk_1ED6A4E40, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory);
        sub_1BC62BAE0();
        swift_bridgeObjectRetain();
        v26 = sub_1BC62BB28();
        v27 = sub_1BC62CAC4();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc();
          v29 = swift_slowAlloc();
          v44 = v29;
          *(_DWORD *)v28 = 136642819;
          swift_bridgeObjectRetain();
          v43 = sub_1BC4991F0(a1, a2, &v44);
          sub_1BC62CFF8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BC30A000, v26, v27, "Invalid subcategory: %{sensitive}s", v28, 0xCu);
          v24 = 1;
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v29, -1, -1);
          MEMORY[0x1BCCF36A8](v28, -1, -1);

          (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v40);
LABEL_49:
          v23 = v41;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v23, v24, 1, v20);
        }

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v40);
        goto LABEL_48;
      }
      swift_bridgeObjectRelease();
      v34 = (uint64_t)v19;
    }
    else
    {
      if ((sub_1BC62C7B8() & 1) == 0)
      {
        sub_1BC62BAE0();
        swift_bridgeObjectRetain();
        v35 = sub_1BC62BB28();
        v36 = sub_1BC62CAC4();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = (uint8_t *)swift_slowAlloc();
          v38 = swift_slowAlloc();
          v44 = v38;
          *(_DWORD *)v37 = 136642819;
          swift_bridgeObjectRetain();
          v43 = sub_1BC4991F0(a1, a2, &v44);
          sub_1BC62CFF8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BC30A000, v35, v36, "Invalid browseCategoryRawValue: %{sensitive}s", v37, 0xCu);
          v24 = 1;
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v38, -1, -1);
          MEMORY[0x1BCCF36A8](v37, -1, -1);

          (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v40);
          goto LABEL_49;
        }

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v40);
        goto LABEL_48;
      }
      swift_bridgeObjectRetain();
      sub_1BC5FBB20(a1, a2, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v16, 1, v20) == 1)
      {
        sub_1BC377E3C((uint64_t)v16, (unint64_t *)&unk_1ED6A4E40, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory);
        sub_1BC62BAE0();
        swift_bridgeObjectRetain();
        v30 = sub_1BC62BB28();
        v31 = sub_1BC62CAC4();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc();
          v33 = swift_slowAlloc();
          v44 = v33;
          *(_DWORD *)v32 = 136642819;
          swift_bridgeObjectRetain();
          v43 = sub_1BC4991F0(a1, a2, &v44);
          sub_1BC62CFF8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BC30A000, v30, v31, "Invalid account: %{sensitive}s", v32, 0xCu);
          v24 = 1;
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v33, -1, -1);
          MEMORY[0x1BCCF36A8](v32, -1, -1);

          (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
          goto LABEL_49;
        }

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
LABEL_48:
        v24 = 1;
        goto LABEL_49;
      }
      swift_bridgeObjectRelease();
      v34 = (uint64_t)v16;
    }
    sub_1BC35F080(v34, (uint64_t)v22);
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
LABEL_5:
  v23 = v41;
LABEL_6:
  sub_1BC35F080((uint64_t)v22, v23);
  v24 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v23, v24, 1, v20);
}

uint64_t BrowseCategory.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC5FD648(0, &qword_1ED6A5308, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC5FD5C0();
  sub_1BC62D6F4();
  BrowseCategory.rawValue.getter();
  sub_1BC62D4D8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

void BrowseCategory.rawValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[6];
  uint64_t v8;

  v8 = sub_1BC62BB34();
  v7[5] = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v1 = sub_1BC62C6D4();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1BC62A268();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BC62A7B4();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v4);
  sub_1BC3B226C(v0, (uint64_t)v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)&loc_1BC5FB0F4 + dword_1BC5FB64C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC5FB104()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  strcpy((char *)(v1 - 264), "subcategory:");
  *(_BYTE *)(v1 - 251) = 0;
  *(_WORD *)(v1 - 250) = -5120;
  *(_QWORD *)(v1 - 232) = v2;
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v1 - 264);
}

uint64_t sub_1BC5FB670@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  Swift::Int v24;
  char v25;
  char v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  uint64_t v43;
  char v44;
  _QWORD v45[3];

  if ((sub_1BC62C7B8() & 1) == 0)
    goto LABEL_55;
  result = sub_1BC62C7B8();
  if ((result & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC62C74C();
    v8 = sub_1BC62C74C();
    v9 = __OFSUB__(v7, v8);
    v10 = v7 - v8;
    if (v9)
    {
      __break(1u);
      goto LABEL_69;
    }
    v11 = sub_1BC3ACA10(v10, a1, a2);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x1BCCF19D4](v11, v13, v15, v17);
    v19 = v18;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    a2 = v19;
  }
  v20 = HIBYTE(a2) & 0xF;
  v21 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v22 = HIBYTE(a2) & 0xF;
  else
    v22 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v22)
    goto LABEL_55;
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v24 = (Swift::Int)sub_1BC5FD134(a1, a2, 10);
    v26 = v44;
    swift_bridgeObjectRelease();
LABEL_48:
    if ((v26 & 1) == 0)
    {
      v45[0] = v24;
      if (a1 == sub_1BC62D52C() && a2 == v36)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v38 = sub_1BC62D574();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v38 & 1) == 0)
          goto LABEL_56;
      }
      DisplayCategory.Kind.init(rawValue:)(v24);
      if (LOBYTE(v45[0]) && LOBYTE(v45[0]) != 11)
      {
        *a3 = v45[0];
        v40 = type metadata accessor for BrowseCategory();
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(a3, 0, 1, v40);
      }
LABEL_56:
      v39 = type metadata accessor for BrowseCategory();
      return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(a3, 1, 1, v39);
    }
LABEL_55:
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
    {
      v23 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_13:
      v24 = (Swift::Int)sub_1BC5FD218(v23, v21, 10);
      v26 = v25 & 1;
      goto LABEL_48;
    }
LABEL_69:
    v23 = (unsigned __int8 *)sub_1BC62D250();
    goto LABEL_13;
  }
  v45[0] = a1;
  v45[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v20)
      goto LABEL_71;
    if (v20 == 1 || (BYTE1(a1) - 48) > 9u)
      goto LABEL_35;
    v24 = (BYTE1(a1) - 48);
    if (v20 != 2)
    {
      if ((BYTE2(a1) - 48) > 9u)
        goto LABEL_35;
      v24 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
      v27 = v20 - 3;
      if (v27)
      {
        v28 = (unsigned __int8 *)v45 + 3;
        while (1)
        {
          v29 = *v28 - 48;
          if (v29 > 9)
            goto LABEL_35;
          v30 = 10 * v24;
          if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63)
            goto LABEL_35;
          v24 = v30 + v29;
          if (__OFADD__(v30, v29))
            goto LABEL_35;
          v26 = 0;
          ++v28;
          if (!--v27)
            goto LABEL_48;
        }
      }
    }
LABEL_47:
    v26 = 0;
    goto LABEL_48;
  }
  if (a1 != 45)
  {
    if (!v20 || (a1 - 48) > 9u)
      goto LABEL_35;
    v24 = (a1 - 48);
    if (v20 != 1)
    {
      if ((BYTE1(a1) - 48) > 9u)
        goto LABEL_35;
      v24 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
      v31 = v20 - 2;
      if (v31)
      {
        v32 = (unsigned __int8 *)v45 + 2;
        while (1)
        {
          v33 = *v32 - 48;
          if (v33 > 9)
            goto LABEL_35;
          v34 = 10 * v24;
          if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63)
            goto LABEL_35;
          v24 = v34 + v33;
          if (__OFADD__(v34, v33))
            goto LABEL_35;
          v26 = 0;
          ++v32;
          if (!--v31)
            goto LABEL_48;
        }
      }
    }
    goto LABEL_47;
  }
  if (v20)
  {
    if (v20 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      if (v20 == 2)
      {
        v26 = 0;
        v24 = -(uint64_t)(BYTE1(a1) - 48);
        goto LABEL_48;
      }
      if ((BYTE2(a1) - 48) <= 9u)
      {
        v24 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
        v35 = v20 - 3;
        if (!v35)
          goto LABEL_47;
        v41 = (unsigned __int8 *)v45 + 3;
        while (1)
        {
          v42 = *v41 - 48;
          if (v42 > 9)
            break;
          v43 = 10 * v24;
          if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63)
            break;
          v24 = v43 - v42;
          if (__OFSUB__(v43, v42))
            break;
          v26 = 0;
          ++v41;
          if (!--v35)
            goto LABEL_48;
        }
      }
    }
LABEL_35:
    v24 = 0;
    v26 = 1;
    goto LABEL_48;
  }
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_1BC5FBB20@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  _QWORD *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  unint64_t v49;
  char v50;
  uint64_t *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v58 - v9;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v63 = (char *)&v58 - v12;
  v13 = sub_1BC62A7B4();
  v64 = *(_QWORD *)(v13 - 8);
  v65 = v13;
  MEMORY[0x1E0C80A78](v13);
  v62 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC62C6D4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1BC62C7B8() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1BC62BAE0();
    v32 = sub_1BC62BB28();
    v33 = sub_1BC62CAC4();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_1BC30A000, v32, v33, "rawValue must start with 'account:'", v34, 2u);
      MEMORY[0x1BCCF36A8](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_11;
  }
  if ((sub_1BC62C7B8() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1BC62C74C();
    v20 = sub_1BC62C74C();
    v21 = __OFSUB__(v19, v20);
    v22 = v19 - v20;
    if (v21)
    {
      __break(1u);
LABEL_29:
      swift_once();
      goto LABEL_7;
    }
    v23 = sub_1BC3ACA10(v22, a1, a2);
    v25 = v24;
    v60 = v6;
    v61 = v7;
    v26 = a3;
    v28 = v27;
    v30 = v29;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCF19D4](v23, v25, v28, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v26;
  }
  sub_1BC62C6BC();
  a1 = sub_1BC62C68C();
  v19 = v31;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v19 >> 60 == 15)
  {
LABEL_11:
    v35 = type metadata accessor for BrowseCategory();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a3, 1, 1, v35);
  }
  if (qword_1EF428820 != -1)
    goto LABEL_29;
LABEL_7:
  sub_1BC3B9200();
  sub_1BC4130E0(&qword_1EF42E7D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  v59 = a1;
  sub_1BC62A22C();
  v37 = v66;
  if (!*(_QWORD *)(v66 + 16))
  {
    v46 = v59;
    goto LABEL_23;
  }
  v38 = sub_1BC558D94(1684957547, 0xE400000000000000);
  v39 = v59;
  if ((v40 & 1) == 0
    || ((v41 = (_QWORD *)(*(_QWORD *)(v37 + 56) + 16 * v38), *v41 != 0x746E756F636361)
     || v41[1] != 0xE700000000000000)
    && (sub_1BC62D574() & 1) == 0
    || !*(_QWORD *)(v37 + 16)
    || (sub_1BC558D94(25705, 0xE200000000000000), (v42 & 1) == 0))
  {
    v46 = v39;
LABEL_23:
    sub_1BC35E5E8(v46, v19);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v43 = (uint64_t)v63;
  sub_1BC62A76C();
  swift_bridgeObjectRelease();
  v44 = v64;
  v45 = v65;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v43, 1, v65) == 1)
  {
    sub_1BC35E5E8(v59, v19);
    swift_bridgeObjectRelease();
    sub_1BC377E3C(v43, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
    goto LABEL_11;
  }
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 32);
  v48 = v62;
  v47(v62, v43, v45);
  if (!*(_QWORD *)(v37 + 16) || (v49 = sub_1BC558D94(0x656C746974, 0xE500000000000000), (v50 & 1) == 0))
  {
    sub_1BC35E5E8(v59, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v48, v45);
    goto LABEL_11;
  }
  v51 = (uint64_t *)(*(_QWORD *)(v37 + 56) + 16 * v49);
  v52 = a3;
  v54 = *v51;
  v53 = v51[1];
  swift_bridgeObjectRetain();
  sub_1BC35E5E8(v59, v19);
  swift_bridgeObjectRelease();
  sub_1BC356030();
  v56 = &v52[*(int *)(v55 + 48)];
  v47(v52, (uint64_t)v48, v45);
  *(_QWORD *)v56 = v54;
  *((_QWORD *)v56 + 1) = v53;
  v57 = type metadata accessor for BrowseCategory();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v52, 0, 1, v57);
}

uint64_t sub_1BC5FC2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseCategory.init(rawValue:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), a2);
}

void sub_1BC5FC2F0(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  BrowseCategory.rawValue.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BC5FC314@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseCategory.init(from:)(a1, a2);
}

uint64_t sub_1BC5FC328(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC5FD648(0, &qword_1ED6A5308, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC5FD5C0();
  sub_1BC62D6F4();
  BrowseCategory.rawValue.getter();
  sub_1BC62D4D8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC5FC420()
{
  sub_1BC62D670();
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5FC478()
{
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC5FC4B4()
{
  sub_1BC62D670();
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5FC508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  BrowseCategory.rawValue.getter();
  v1 = v0;
  v3 = v2;
  BrowseCategory.rawValue.getter();
  if (v1 == v5 && v3 == v4)
    v6 = 1;
  else
    v6 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

void sub_1BC5FC594()
{
  qword_1EF43A038 = 0x4042000000000000;
}

double static BrowseCategory.defaultIconDimension.getter()
{
  if (qword_1EF428830 != -1)
    swift_once();
  return *(double *)&qword_1EF43A038;
}

void BrowseCategory.coloredImageName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v1);
  sub_1BC3B226C(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BC5FC66C + 4 * byte_1BC64BFD0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1BC5FC680()
{
  sub_1BC5FC66C();
}

void sub_1BC5FC6A4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC356030();
  swift_bridgeObjectRelease();
  v1 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  sub_1BC5FC66C();
}

void sub_1BC5FC6E4()
{
  sub_1BC5FC66C();
}

void sub_1BC5FC708()
{
  sub_1BC5FC66C();
}

void sub_1BC5FC724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v1);
  sub_1BC3B226C(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)&loc_1BC5FC7A0 + *((int *)qword_1BC5FC940 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

void sub_1BC5FC964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1BC62A7B4();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC3B226C(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1BC5FCA20 + 4 * byte_1BC64BFD9[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC5FCA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  BrowseCategory.rawValue.getter();
  *(_QWORD *)(v0 - 64) = v1;
  *(_QWORD *)(v0 - 56) = v2;
  return sub_1BC62C7C4();
}

void sub_1BC5FCA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BC356030();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  *(_QWORD *)(v4 - 64) = 0x2D746E756F636361;
  *(_QWORD *)(v4 - 56) = 0xE800000000000000;
  sub_1BC62A778();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  JUMPOUT(0x1BC5FCA50);
}

uint64_t BrowseCategory.init(kind:)@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *a1;
  type metadata accessor for BrowseCategory();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static BrowseCategory.unreadableData.getter@<X0>(_BYTE *a1@<X8>)
{
  *a1 = 8;
  type metadata accessor for BrowseCategory();
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for BrowseCategory()
{
  uint64_t result;

  result = qword_1ED6A5448;
  if (!qword_1ED6A5448)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1BC5FCBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC499810();
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1BC5FCC00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1BC62C7AC();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1BCCF1A58](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1BC5FCC78()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1BC62C7D0();
  v4 = sub_1BC5FCCF4(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BC5FCCF4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1BC5FCE38(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1BC5FCBA0(v9, 0);
      v12 = sub_1BC5FCF24((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1BCCF1A04](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1BCCF1A04);
LABEL_9:
      sub_1BC62D250();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1BCCF1A04]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1BC5FCE38(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1BC5FCC00(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1BC5FCC00(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1BC62C794();
  }
  __break(1u);
  return result;
}

unint64_t sub_1BC5FCF24(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1BC5FCC00(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1BC62C7A0();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1BC62D250();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1BC5FCC00(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1BC62C77C();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unsigned __int8 *sub_1BC5FD134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1BC62C7C4();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1BC5FCC78();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1BC62D250();
  }
LABEL_7:
  v11 = sub_1BC5FD218(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1BC5FD218(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1BC5FD494(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  unint64_t v13;
  unint64_t v14;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = result + 32;
  v6 = (unsigned __int8 *)(a2 + 32);
  v7 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v4 <= v2)
      v8 = v2;
    else
      v8 = v4;
    while (1)
    {
      if (v4 == v8)
      {
        __break(1u);
        return result;
      }
      v9 = *(unsigned __int8 *)(v5 + v4++);
      v10 = *(_QWORD *)(a2 + 16);
      if (!v10)
        break;
      v11 = v6;
      while (1)
      {
        v12 = *v11++;
        if (v12 == v9)
          break;
        if (!--v10)
          goto LABEL_14;
      }
      if (v4 == v2)
        return v7;
    }
LABEL_14:
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_1BC3BDE1C(0, *(_QWORD *)(v7 + 16) + 1, 1);
    v14 = *(_QWORD *)(v7 + 16);
    v13 = *(_QWORD *)(v7 + 24);
    if (v14 >= v13 >> 1)
      result = sub_1BC3BDE1C(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v7 + 16) = v14 + 1;
    *(_BYTE *)(v7 + v14 + 32) = v9;
  }
  while (v4 != v2);
  return v7;
}

unint64_t sub_1BC5FD5C0()
{
  unint64_t result;

  result = qword_1ED6A5420;
  if (!qword_1ED6A5420)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64C298, &type metadata for BrowseCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A5420);
  }
  return result;
}

unint64_t sub_1BC5FD604()
{
  unint64_t result;

  result = qword_1EF43A040;
  if (!qword_1EF43A040)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for BrowseCategoryError, &type metadata for BrowseCategoryError);
    atomic_store(result, (unint64_t *)&qword_1EF43A040);
  }
  return result;
}

void sub_1BC5FD648(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC5FD5C0();
    v7 = a3(a1, &type metadata for BrowseCategory.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC5FD6A4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF429B28)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF429B28);
  }
}

unint64_t sub_1BC5FD708()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A5440;
  if (!qword_1ED6A5440)
  {
    v1 = type metadata accessor for BrowseCategory();
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for BrowseCategory, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A5440);
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseCategoryError()
{
  return &type metadata for BrowseCategoryError;
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseCategory(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1BC62A7B4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    sub_1BC356030();
    v9 = *(int *)(v8 + 48);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for BrowseCategory(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_1BC62A7B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    sub_1BC356030();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for BrowseCategory(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BC62A7B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    sub_1BC356030();
    v8 = *(int *)(v7 + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v11;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithCopy for BrowseCategory(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  if (a1 != a2)
  {
    sub_1BC3B22E8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BC62A7B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      sub_1BC356030();
      v8 = *(int *)(v7 + 48);
      v9 = &a1[v8];
      v10 = &a2[v8];
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

char *initializeWithTake for BrowseCategory(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BC62A7B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    sub_1BC356030();
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for BrowseCategory(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1BC3B22E8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BC62A7B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      sub_1BC356030();
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BC5FDB58()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  v2[4] = &unk_1BC64C148;
  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BrowseCategory.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC5FDC1C + 4 * byte_1BC64BFE2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC5FDC3C + 4 * byte_1BC64BFE7[v4]))();
}

_BYTE *sub_1BC5FDC1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC5FDC3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC5FDC44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC5FDC4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC5FDC54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC5FDC5C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BrowseCategory.CodingKeys()
{
  return &type metadata for BrowseCategory.CodingKeys;
}

unint64_t sub_1BC5FDC7C()
{
  unint64_t result;

  result = qword_1EF43A048;
  if (!qword_1EF43A048)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64C270, &type metadata for BrowseCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF43A048);
  }
  return result;
}

unint64_t sub_1BC5FDCC4()
{
  unint64_t result;

  result = qword_1ED6A5430;
  if (!qword_1ED6A5430)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64C1A8, &type metadata for BrowseCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A5430);
  }
  return result;
}

unint64_t sub_1BC5FDD0C()
{
  unint64_t result;

  result = qword_1ED6A5428;
  if (!qword_1ED6A5428)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64C1D0, &type metadata for BrowseCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A5428);
  }
  return result;
}

double sub_1BC5FDD50()
{
  double result;

  result = 0.0;
  __asm { FMOV            V1.2D, #14.0 }
  xmmword_1EF45A120 = _Q1;
  *(_OWORD *)&qword_1EF45A130 = xmmword_1BC63A930;
  return result;
}

void sub_1BC5FDD6C()
{
  qword_1EF45A140 = 0x4020000000000000;
}

id sub_1BC5FDD7C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR___HRConceptHeaderCell____lazy_storage___bottomConstraint;
  v2 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell____lazy_storage___bottomConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR___HRConceptHeaderCell____lazy_storage___bottomConstraint];
  }
  else
  {
    v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel], sel_bottomAnchor);
    v5 = objc_msgSend(v0, sel_pillBackgroundView);
    v6 = objc_msgSend(v5, sel_bottomAnchor);

    if (qword_1EF428838 != -1)
      swift_once();
    v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&qword_1EF45A130);

    v8 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void *sub_1BC5FDE98()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___HRConceptHeaderCell_headerImage);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1BC5FDF2C(void *a1)
{
  sub_1BC5FE40C(a1, &OBJC_IVAR___HRConceptHeaderCell_headerImage, (unint64_t *)&qword_1ED6A47F8);
}

void (*sub_1BC5FDF48(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1 + OBJC_IVAR___HRConceptHeaderCell_headerImage);
  swift_beginAccess();
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  return sub_1BC5FDFBC;
}

void sub_1BC5FDFBC(uint64_t a1, char a2)
{
  sub_1BC5FE55C(a1, a2, sub_1BC5FDF2C);
}

uint64_t sub_1BC5FE040()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___HRConceptHeaderCell_title);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC5FE100(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  BOOL v8;

  v5 = (uint64_t *)(v2 + OBJC_IVAR___HRConceptHeaderCell_title);
  swift_beginAccess();
  result = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  if (v7)
  {
    if (a2)
    {
      v8 = result == a1 && v7 == a2;
      if (v8 || (sub_1BC62D574() & 1) != 0)
        return swift_bridgeObjectRelease();
    }
  }
  else if (!a2)
  {
    return result;
  }
  sub_1BC5FEEE0();
  return swift_bridgeObjectRelease();
}

void (*sub_1BC5FE1A0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRConceptHeaderCell_title;
  v3[5] = v1;
  v3[6] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = v5[1];
  v3[3] = *v5;
  v3[4] = v6;
  swift_bridgeObjectRetain();
  return sub_1BC5FE214;
}

void sub_1BC5FE214(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  BOOL v15;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v7 = (uint64_t *)(v5 + v4);
  v9 = *v7;
  v8 = v7[1];
  *v7 = v3;
  v7[1] = v6;
  v10 = (uint64_t *)(v2[5] + v2[6]);
  if ((a2 & 1) != 0)
  {
    v12 = *v10;
    v11 = v10[1];
    swift_bridgeObjectRetain();
    if (v8)
    {
      if (v11)
      {
        v13 = v9 == v12 && v8 == v11;
        if (v13 || (sub_1BC62D574() & 1) != 0)
          goto LABEL_20;
      }
      goto LABEL_19;
    }
    if (v11)
    {
LABEL_19:
      sub_1BC5FEEE0();
LABEL_20:
      swift_bridgeObjectRelease();
    }
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v14 = v10[1];
  if (v8)
  {
    if (v14)
    {
      v15 = v9 == *v10 && v8 == v14;
      if (v15 || (sub_1BC62D574() & 1) != 0)
        goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v14)
  {
LABEL_23:
    sub_1BC5FEEE0();
    goto LABEL_24;
  }
LABEL_25:
  free(v2);
}

id sub_1BC5FE318(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id *v3;

  v3 = (id *)(a1 + *a3);
  swift_beginAccess();
  return *v3;
}

void *sub_1BC5FE35C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___HRConceptHeaderCell_categoryColor);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1BC5FE3F0(void *a1)
{
  sub_1BC5FE40C(a1, &OBJC_IVAR___HRConceptHeaderCell_categoryColor, (unint64_t *)&qword_1ED6A5970);
}

void sub_1BC5FE40C(void *a1, _QWORD *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  void **v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  char v12;

  v5 = v3;
  v7 = (void **)(v5 + *a2);
  swift_beginAccess();
  v8 = *v7;
  *v7 = a1;
  v9 = a1;
  if (!v8)
  {
    if (!a1)
    {
LABEL_7:
      v10 = v8;
      goto LABEL_8;
    }
LABEL_6:
    sub_1BC5FEEE0();
    goto LABEL_7;
  }
  if (!a1)
    goto LABEL_6;
  sub_1BC34B6A0(0, a3);
  v10 = v8;
  v11 = v9;
  v12 = sub_1BC62CEB4();

  if ((v12 & 1) == 0)
    goto LABEL_6;
LABEL_8:

}

void (*sub_1BC5FE4DC(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1 + OBJC_IVAR___HRConceptHeaderCell_categoryColor);
  swift_beginAccess();
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  return sub_1BC5FE550;
}

void sub_1BC5FE550(uint64_t a1, char a2)
{
  sub_1BC5FE55C(a1, a2, sub_1BC5FE3F0);
}

void sub_1BC5FE55C(uint64_t a1, char a2, void (*a3)(id))
{
  void *v4;
  id v5;
  id *v6;
  id v7;

  v4 = *(void **)a1;
  v6 = (id *)(*(_QWORD *)a1 + 24);
  v5 = *v6;
  if ((a2 & 1) != 0)
  {
    v7 = v5;
    a3(v5);

  }
  else
  {
    a3(*(id *)(*(_QWORD *)a1 + 24));
  }
  free(v4);
}

void sub_1BC5FE614()
{
  char *v0;
  void *v1;
  double v2;
  id v3;
  id v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  objc_msgSendSuper2(&v6, sel_setupSubviews);
  v1 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel];
  objc_msgSend(v1, sel_setNumberOfLines_, 0);
  objc_msgSend(v1, sel_setLineBreakMode_, 0);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1, v2);
  v3 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4B10], 1024);
  objc_msgSend(v1, sel_setFont_, v3);

  v4 = objc_msgSend(v0, sel_pillBackgroundView);
  objc_msgSend(v4, sel_addSubview_, v1);

  v5 = objc_msgSend(v0, sel_pillBackgroundView);
  objc_msgSend(v5, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR___HRConceptHeaderCell_chevronView]);

}

void sub_1BC5FE7A0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  objc_super v25;

  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  objc_msgSendSuper2(&v25, sel_setUpConstraints);
  v23 = (id)objc_opt_self();
  sub_1BC34D844();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC640FA0;
  v2 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel];
  v3 = objc_msgSend(v2, sel_leadingAnchor);
  v4 = objc_msgSend(v0, sel_pillBackgroundView);
  v5 = objc_msgSend(v4, sel_leadingAnchor);

  if (qword_1EF428838 != -1)
    swift_once();
  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, *((double *)&xmmword_1EF45A120 + 1), v23);

  *(_QWORD *)(v1 + 32) = v6;
  v7 = objc_msgSend(v2, sel_topAnchor);
  v8 = objc_msgSend(v0, sel_pillBackgroundView);
  v9 = objc_msgSend(v8, sel_topAnchor);

  v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v9, *(double *)&xmmword_1EF45A120);
  *(_QWORD *)(v1 + 40) = v10;
  *(_QWORD *)(v1 + 48) = sub_1BC5FDD7C();
  v11 = objc_msgSend(v2, sel_trailingAnchor);
  v12 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell_chevronView];
  v13 = objc_msgSend(v12, sel_leadingAnchor);
  if (qword_1EF428840 != -1)
    swift_once();
  v14 = objc_msgSend(v11, sel_constraintLessThanOrEqualToAnchor_constant_, v13, -*(double *)&qword_1EF45A140);

  *(_QWORD *)(v1 + 56) = v14;
  v15 = objc_msgSend(v12, sel_firstBaselineAnchor);
  v16 = objc_msgSend(v2, sel_firstBaselineAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v1 + 64) = v17;
  v18 = objc_msgSend(v12, sel_trailingAnchor);
  v19 = objc_msgSend(v0, sel_pillBackgroundView);
  v20 = objc_msgSend(v19, sel_trailingAnchor);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, -*(double *)&qword_1EF45A138);
  *(_QWORD *)(v1 + 72) = v21;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v22 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_activateConstraints_, v22);

}

id sub_1BC5FEBEC(id a1)
{
  void *v1;
  id result;
  id v4;
  double v5;
  objc_super v6;

  result = objc_msgSend(v1, sel_intendedPlacement);
  if (result != a1)
  {
    if ((a1 == (id)2) == (objc_msgSend(v1, sel_intendedPlacement) != (id)2))
    {
      v4 = sub_1BC5FDD7C();
      if (qword_1EF428838 != -1)
        swift_once();
      v5 = *(double *)&xmmword_1EF45A120;
      if (a1 != (id)2)
        v5 = -0.0;
      objc_msgSend(v4, sel_setConstant_, *(double *)&qword_1EF45A130 - v5);

    }
    v6.receiver = v1;
    v6.super_class = (Class)type metadata accessor for ConceptHeaderCell();
    return objc_msgSendSuper2(&v6, sel_setIntendedPlacement_, a1);
  }
  return result;
}

void sub_1BC5FED74(void *a1)
{
  void *v1;
  id v3;
  double v4;
  double v5;
  double v6;
  id v7;
  id v8;
  id v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  objc_msgSendSuper2(&v10, sel__traitCollectionDidChange_, a1);
  v3 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v3, sel_displayScale);
  v5 = v4;

  if (!a1)
    goto LABEL_4;
  objc_msgSend(a1, sel_displayScale);
  if (v5 != v6)
    goto LABEL_4;
  v7 = objc_msgSend(v1, sel_traitCollection);
  v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  LODWORD(v7) = sub_1BC62CD1C() & 1;
  v9 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  LODWORD(v8) = sub_1BC62CD1C() & 1;

  if ((_DWORD)v8 != (_DWORD)v7)
LABEL_4:
    sub_1BC5FEEE0();
}

void sub_1BC5FEEE0()
{
  char *v0;
  id *v1;
  id v2;
  char *v3;
  id v4;
  id v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  void **v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;

  v1 = (id *)&v0[OBJC_IVAR___HRConceptHeaderCell_headerImage];
  swift_beginAccess();
  if (*v1)
    v2 = objc_msgSend(*v1, sel_imageWithRenderingMode_, 2);
  else
    v2 = 0;
  v3 = &v0[OBJC_IVAR___HRConceptHeaderCell_title];
  swift_beginAccess();
  if (!*((_QWORD *)v3 + 1))
  {

    objc_msgSend(*(id *)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel], sel_setAttributedText_, 0);
    return;
  }
  if (!v2)
  {
    v9 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel];
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v8);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v4 = objc_msgSend(v0, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  v6 = sub_1BC62CD1C();
  v7 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel];
  if ((v6 & 1) != 0)
  {
    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setText_, v8);

LABEL_10:
    return;
  }
  v10 = objc_msgSend(*(id *)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel], sel_font);
  if (v10)
  {
    v11 = v10;
    sub_1BC34B6A0(0, &qword_1EF436CA8);
    v12 = objc_msgSend(v0, sel_traitCollection);
    objc_msgSend(v12, sel_displayScale);
    v14 = v13;

    v15 = (void **)&v0[OBJC_IVAR___HRConceptHeaderCell_categoryColor];
    swift_beginAccess();
    v16 = *v15;
    v17 = (void *)objc_opt_self();
    v18 = v16;
    v19 = objc_msgSend(v17, sel_labelColor);
    v20 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v21 = v2;
    v22 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v20, sel_initWithLeadingImage_text_font_displayScale_imageTintColor_textColor_adjustsImageSizeForAccessibilityContentSizeCategory_, v21, v22, v11, v18, v19, 1, v14);

    if (objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
    {
      v24 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v25 = (void *)sub_1BC62C650();
      v26 = objc_msgSend(v24, sel_initWithString_, v25);

      objc_msgSend(v23, sel_insertAttributedString_atIndex_, v26, 0);
    }
    objc_msgSend(v7, sel_setAttributedText_, v23);

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1BC5FF26C()
{
  unint64_t result;

  result = qword_1EF43A068;
  if (!qword_1EF43A068)
  {
    type metadata accessor for ConceptHeaderCell();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF43A068);
  }
  return result;
}

uint64_t type metadata accessor for ConceptHeaderCell()
{
  return objc_opt_self();
}

id ConceptHeaderCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id ConceptHeaderCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  char *v15;
  void *v16;
  id v17;
  objc_super v19;

  v6 = OBJC_IVAR___HRConceptHeaderCell_titleLabel;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_init);
  v9 = OBJC_IVAR___HRConceptHeaderCell_chevronView;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v10, sel_setContentMode_, 4);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
  v11 = (void *)sub_1BC62CE54();
  objc_msgSend(v10, sel_setImage_, v11);

  v12 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v10, sel_setTintColor_, v12);

  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v13) = 1148846080;
  objc_msgSend(v10, sel_setContentHuggingPriority_forAxis_, 0, v13);
  LODWORD(v14) = 1148846080;
  objc_msgSend(v10, sel_setContentCompressionResistancePriority_forAxis_, 0, v14);
  *(_QWORD *)&v8[v9] = v10;
  *(_QWORD *)&v8[OBJC_IVAR___HRConceptHeaderCell____lazy_storage___bottomConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___HRConceptHeaderCell_headerImage] = 0;
  v15 = &v8[OBJC_IVAR___HRConceptHeaderCell_title];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  *(_QWORD *)&v8[OBJC_IVAR___HRConceptHeaderCell_categoryColor] = 0;

  if (a3)
  {
    v16 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v19.receiver = v8;
  v19.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  v17 = objc_msgSendSuper2(&v19, sel_initWithStyle_reuseIdentifier_, a1, v16);

  return v17;
}

id ConceptHeaderCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ConceptHeaderCell.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  char *v12;
  id v13;
  objc_super v15;

  v3 = OBJC_IVAR___HRConceptHeaderCell_titleLabel;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = OBJC_IVAR___HRConceptHeaderCell_chevronView;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v7, sel_setContentMode_, 4);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
  v8 = (void *)sub_1BC62CE54();
  objc_msgSend(v7, sel_setImage_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v7, sel_setTintColor_, v9);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v10) = 1148846080;
  objc_msgSend(v7, sel_setContentHuggingPriority_forAxis_, 0, v10);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 0, v11);
  *(_QWORD *)&v5[v6] = v7;
  *(_QWORD *)&v5[OBJC_IVAR___HRConceptHeaderCell____lazy_storage___bottomConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___HRConceptHeaderCell_headerImage] = 0;
  v12 = &v5[OBJC_IVAR___HRConceptHeaderCell_title];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR___HRConceptHeaderCell_categoryColor] = 0;

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  v13 = objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);

  return v13;
}

id ConceptHeaderCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC5FF8E8@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___HRConceptHeaderCell_headerImage, a2);
}

void sub_1BC5FF8F4(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1BC5FDF2C(v1);
}

uint64_t sub_1BC5FF920@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___HRConceptHeaderCell_title);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC5FF974(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1BC5FE100(v1, v2);
}

id sub_1BC5FF9B0@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___HRConceptHeaderCell_categoryColor, a2);
}

void sub_1BC5FF9BC(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1BC5FE3F0(v1);
}

uint64_t method lookup function for ConceptHeaderCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConceptHeaderCell.headerImage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConceptHeaderCell.headerImage.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConceptHeaderCell.headerImage.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConceptHeaderCell.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ConceptHeaderCell.title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ConceptHeaderCell.title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ConceptHeaderCell.categoryColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ConceptHeaderCell.categoryColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ConceptHeaderCell.categoryColor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

id sub_1BC5FFAF0()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for ViewControllerFactory();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1ED6A5980 = (uint64_t)result;
  return result;
}

id static NSBundle.healthRecordsUI.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A4918, (id *)&qword_1ED6A5980);
}

id sub_1BC5FFB60(uint64_t a1)
{
  return sub_1BC5FFB7C(a1, &qword_1EF43A0B8, 0x1E0D2F298, &qword_1EF43A0B0);
}

id sub_1BC5FFB7C(uint64_t a1, unint64_t *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjCClassFromMetadata;
  id result;

  sub_1BC34B6A0(0, a2);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  *a4 = result;
  return result;
}

id static NSBundle.healthToolbox.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428850, (id *)&qword_1EF43A0B0);
}

id sub_1BC5FFBEC(uint64_t a1)
{
  return sub_1BC5FFB7C(a1, (unint64_t *)&unk_1ED6A5910, 0x1E0D2F8B8, &qword_1ED6A5978);
}

id static NSBundle.healthUI.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A4908, (id *)&qword_1ED6A5978);
}

id BloodPressureChartSeries.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BloodPressureChartSeries.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureChartSeries();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for BloodPressureChartSeries()
{
  return objc_opt_self();
}

id BloodPressureChartSeries.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureChartSeries();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC5FFDE0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = qword_1EF43A0E8;
  v2 = *(void **)(v0 + qword_1EF43A0E8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF43A0E8);
  }
  else
  {
    v4 = (void *)sub_1BC5FFE40();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC5FFE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  _QWORD v10[3];
  _QWORD v11[4];

  v0 = sub_1BC62B5AC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A4878 != -1)
    swift_once();
  v4 = qword_1ED6A54F0;
  sub_1BC62B72C();
  sub_1BC62B594();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_project_boxed_opaque_existential_1Tm(v11, v11[3]);
  v5 = (void *)sub_1BC62B588();
  v10[1] = *(_QWORD *)(v4 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v5);
  v10[-2] = v6;
  v10[-1] = v4;
  sub_1BC62AA6C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v7, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();

  swift_release();
  v8 = v10[2];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  return v8;
}

void sub_1BC5FFFFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD aBlock[6];

  v0 = sub_1BC62B5AC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A3198 != -1)
    swift_once();
  sub_1BC4E371C(0, 3, 0);
  if (qword_1ED6A31B0 != -1)
    swift_once();
  v4 = sub_1BC5FFDE0();
  sub_1BC62B72C();
  v5 = (void *)sub_1BC62B5A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = objc_msgSend(objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController), sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, 3, 0, 0, v4, 0);
  v7 = objc_msgSend(v4, sel_onboardingManager);
  v8 = objc_msgSend(v7, sel_getPendingOnboardingGatewayAndClear);

  objc_msgSend(v6, sel_setGatewayProxyToTry_, v8);
  v9 = objc_msgSend(v4, sel_onboardingManager);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v5;
  v10[3] = v6;
  v10[4] = 0;
  v10[5] = 0;
  aBlock[4] = sub_1BC4A7A7C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC42A188;
  aBlock[3] = &block_descriptor_77;
  v11 = _Block_copy(aBlock);
  v12 = v5;
  v13 = v6;
  swift_release();
  objc_msgSend(v9, sel_registerInflightOnboardingViewController_completion_, v13, v11);
  _Block_release(v11);

}

uint64_t ProfileOnboardingActionViewController.__allocating_init(context:)(char *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ProfileOnboardingActionViewController.init(context:)(a1);
}

uint64_t ProfileOnboardingActionViewController.init(context:)(char *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v3 = sub_1BC62B5AC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - v8;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - v12;
  *(_QWORD *)&v1[qword_1EF43A0E8] = 0;
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v14((char *)&v23 - v12, (uint64_t)a1, v3, v11);
  v15 = qword_1ED6A3D40;
  v16 = qword_1ED6A31B0;
  v17 = v1;
  if (v16 != -1)
    swift_once();
  v18 = (void *)qword_1ED6A4670;
  *(_QWORD *)&v17[v15] = qword_1ED6A4670;
  v17[qword_1ED6A3D38] = -4;
  v19 = v18;

  ((void (*)(char *, char *, uint64_t))v14)(v9, v13, v3);
  ((void (*)(char *, char *, uint64_t))v14)(v6, v9, v3);
  v20 = sub_1BC62B738();
  v21 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21(v9, v3);
  v21(v13, v3);
  v21(a1, v3);
  return v20;
}

void sub_1BC6003F8()
{
  uint64_t v0;

}

id ProfileOnboardingActionViewController.__deallocating_deinit()
{
  return sub_1BC361C8C(type metadata accessor for ProfileOnboardingActionViewController);
}

void sub_1BC600414(uint64_t a1)
{

}

void sub_1BC600424()
{
  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC60047C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t result;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[5];

  v1 = v0;
  v25 = sub_1BC62AD9C();
  v2 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62AAF0();
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - v9;
  sub_1BC62AF04();
  v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v12 = sub_1BC62AB80();
  v13 = qword_1EF43A140;
  v14 = objc_msgSend(*(id *)(v1 + qword_1EF43A140), sel_healthStore);
  v15 = sub_1BC62AB74();
  v16 = objc_msgSend(*(id *)(v1 + v13), sel_healthStore);
  v27 = v12;
  v28 = MEMORY[0x1E0D2DFE8];
  v26 = v15;
  swift_retain();
  sub_1BC6006C4((uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0D2A9C0], v25);
  v29[3] = sub_1BC62B6CC();
  v29[4] = MEMORY[0x1E0D2B7A0];
  __swift_allocate_boxed_opaque_existential_1(v29);
  sub_1BC62B6C0();
  sub_1BC62AEF8();
  result = sub_1BC62AD60();
  if (result)
  {
    v18 = (void *)result;
    v19 = v11;
    sub_1BC62B84C();

    sub_1BC6006C4((uint64_t)v7);
    sub_1BC62AAE4();
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
    if (v21)
    {
      sub_1BC62AED4();

      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {

      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC6006C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  _QWORD v23[8];
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  v1 = sub_1BC62AA78();
  v23[3] = *(_QWORD *)(v1 - 8);
  v23[4] = v1;
  MEMORY[0x1E0C80A78](v1);
  v23[5] = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC62BB34();
  v23[1] = *(_QWORD *)(v3 - 8);
  v23[2] = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62AC58();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1BC62AC88();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A4918 != -1)
    swift_once();
  v24 = v9;
  v23[0] = v5;
  v10 = (id)qword_1ED6A5980;
  sub_1BC62AC4C();
  if (qword_1ED6A4888 != -1)
    swift_once();
  v11 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v12 = sub_1BC62A4A8();
  v23[6] = v13;
  v23[7] = v12;
  swift_bridgeObjectRelease();

  v14 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v15 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v16 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v17 = v24;
  sub_1BC62AC7C();
  sub_1BC62A298();
  swift_allocObject();
  sub_1BC62A28C();
  LOBYTE(v28) = 0;
  sub_1BC600F54();
  v18 = sub_1BC62A280();
  v20 = v19;
  swift_release();
  sub_1BC35D4EC(v18, v20);
  v21 = (void *)sub_1BC62AA90();
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1BC62D3B8())
    sub_1BC601180(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for ProfileOnboardingActionViewController(0);
  sub_1BC347F0C(&qword_1EF43A1A0, type metadata accessor for ProfileOnboardingActionViewController, (uint64_t)&protocol conformance descriptor for PromotionTileViewActionHandlerShim<A>);
  sub_1BC62AAA8();
  swift_bridgeObjectRelease();

  sub_1BC35D530(v18, v20);
  sub_1BC35D530(v18, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v17, v26);
}

void sub_1BC600DC8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC600DF4()
{
  uint64_t v0;

}

id sub_1BC600E04()
{
  return sub_1BC361C8C(type metadata accessor for OnboardingTableViewCell);
}

void sub_1BC600E10(uint64_t a1)
{

}

id sub_1BC600E20()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + qword_1EF43A140), sel_healthStore);
}

uint64_t sub_1BC600E50()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_74()
{
  return swift_release();
}

uint64_t type metadata accessor for ProfileOnboardingActionViewController(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF43A0F0);
}

uint64_t sub_1BC600EB8()
{
  return sub_1BC600F0C();
}

uint64_t method lookup function for ProfileOnboardingActionViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BC600ED8()
{
  return type metadata accessor for ProfileOnboardingActionViewController(0);
}

uint64_t type metadata accessor for OnboardingTableViewCell(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF43A148);
}

uint64_t sub_1BC600EF4()
{
  return sub_1BC600F0C();
}

uint64_t sub_1BC600F0C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC600F4C()
{
  return type metadata accessor for OnboardingTableViewCell(0);
}

unint64_t sub_1BC600F54()
{
  unint64_t result;

  result = qword_1EF43A198;
  if (!qword_1EF43A198)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for AddAccountFeedItemData, &type metadata for AddAccountFeedItemData);
    atomic_store(result, (unint64_t *)&qword_1EF43A198);
  }
  return result;
}

uint64_t sub_1BC600F98(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  sub_1BC34B6A0(0, &qword_1EF42DAB0);
  if (a2 >> 62)
  {
    v4 = sub_1BC62D3D0();
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
      return v4;
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      objc_opt_self();
      if (!swift_dynamicCastObjCClass())
        goto LABEL_10;
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_1BC62D1D8();
  sub_1BC62C764();
  sub_1BC62D718();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_1BC62D718();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  result = sub_1BC62D3A0();
  __break(1u);
  return result;
}

void sub_1BC601180(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_1BC3F4408();
      v3 = sub_1BC62D1B4();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v41 = v4;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    while (1)
    {
      v8 = sub_1BC600F98(v7, a1);
      v9 = __OFADD__(v7++, 1);
      if (v9)
      {
        __break(1u);
        goto LABEL_37;
      }
      v10 = v8;
      v11 = sub_1BC62CEA8();
      v12 = -1 << *(_BYTE *)(v3 + 32);
      v13 = v11 & ~v12;
      v14 = v13 >> 6;
      v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
      v16 = 1 << v13;
      if (((1 << v13) & v15) != 0)
      {
        sub_1BC34B6A0(0, &qword_1EF42DAB0);
        v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v18 = sub_1BC62CEB4();

        if ((v18 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v4 = v41;
          goto LABEL_12;
        }
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_1BC62CEB4();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v4 = v41;
      }
      *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
      v22 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v22, 1);
      v23 = v22 + 1;
      if (v9)
        goto LABEL_38;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_12:
      if (v7 == v4)
        return;
    }
  }
  v24 = 0;
  v39 = a1 + 32;
  v40 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v40)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_1BC62CEA8();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_1BC34B6A0(0, &qword_1EF42DAB0);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_1BC62CEB4();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_1BC62CEB4();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_39;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v41)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t dispatch thunk of DynamicViewProtocol.addSubviews()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DynamicViewProtocol.reloadFonts()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DynamicViewProtocol.reloadColors()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DynamicViewProtocol.apply(viewData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1BC601504()
{
  uint64_t v0;

  type metadata accessor for AccountActionCell();
  sub_1BC379B20(&qword_1EF435F78, v0, (uint64_t (*)(uint64_t))type metadata accessor for AccountActionCell, (uint64_t)&unk_1BC64C568);
  return sub_1BC62ADA8();
}

uint64_t sub_1BC60154C()
{
  uint64_t v1;

  v1 = sub_1BC62D718();
  sub_1BC62C764();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BC6015CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate;
  v7 = MEMORY[0x1BCCF37A4](v6);
  v8 = *(_QWORD *)(v6 + 8);
  if (v7)
  {
    ObjectType = swift_getObjectType();
    v10 = qword_1ED6A3308;
    swift_unknownObjectRetain();
    if (v10 != -1)
      swift_once();
    v11 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    v12 = sub_1BC62A4A8();
    v14 = v13;
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(v12, v14, ObjectType, v8);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  v15 = v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v7;
  v16[3] = v8;
  v16[4] = a1;
  v16[5] = a2;
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BC5C8CC0(v15, (uint64_t)sub_1BC602AEC, (uint64_t)v16);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_1BC601778()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void (*v10)(uint64_t *, _QWORD);
  id v11;
  void (*v12)(uint64_t *, _QWORD);
  id v13;
  id v14;
  id v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  _QWORD v26[2];
  uint64_t v27[3];
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = sub_1BC62BD98();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v6, (uint64_t)v27);
  if (!v28)
    return sub_1BC37AE60((uint64_t)v27);
  sub_1BC37AE0C();
  type metadata accessor for AccountActionItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v8 = v26[1];
    MEMORY[0x1BCCF201C]();
    swift_bridgeObjectRetain();
    sub_1BC62BD74();
    v9 = *(id *)(v8 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor);
    v10 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCCC();
    v10(v27, 0);
    v11 = *(id *)(v8 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont);
    v12 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCC0();
    v12(v27, 0);
    if (*(_BYTE *)(v8 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) == 1)
    {
      v13 = objc_msgSend(v1, sel_traitCollection);
      v14 = objc_msgSend(v13, sel_preferredContentSizeCategory);

      LOBYTE(v13) = sub_1BC62CD1C();
      if ((v13 & 1) == 0)
      {
        if (qword_1EF428748 != -1)
          swift_once();
        v15 = objc_msgSend((id)objc_opt_self(), sel_hk_transparentInterfaceImageWithSize_, *(double *)&xmmword_1EF45A020, 0.01);
        sub_1BC62BD80();
      }
    }
    v28 = v2;
    v29 = MEMORY[0x1E0DC2398];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
    (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(boxed_opaque_existential_1, v5, v2);
    MEMORY[0x1BCCF1FC8](v27);
    sub_1BC359F44();
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v17 + 32) = sub_1BC62C680();
    *(_QWORD *)(v17 + 40) = v18;
    v19 = (void *)sub_1BC62C650();
    v20 = objc_msgSend(v19, sel_removeSpecialCharactersAndWhiteSpaces);

    v21 = sub_1BC62C680();
    v23 = v22;

    *(_QWORD *)(v17 + 48) = v21;
    *(_QWORD *)(v17 + 56) = v23;
    v24 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v25 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v1, sel_setAccessibilityIdentifier_, v25);
    objc_msgSend(v1, sel_setAccessibilityTraits_, *MEMORY[0x1E0DC4660]);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

id sub_1BC601BEC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountActionCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AccountActionCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC601C4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC601C9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC601778();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC601D08(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC601D50;
}

uint64_t sub_1BC601D50(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC601778();
  return result;
}

uint64_t sub_1BC601D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  v2 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1BC359FDC(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC601E24()
{
  return type metadata accessor for AccountActionItem();
}

uint64_t type metadata accessor for AccountActionItem()
{
  uint64_t result;

  result = qword_1EF43A200;
  if (!qword_1EF43A200)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC601E68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t dispatch thunk of AccountActionDelegate.didDeleteAccount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AccountActionDelegate.didStopSharing()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AccountActionDelegate.showActivity(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of AccountActionDelegate.hideActivity(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_1BC601F30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 136))();
}

uint64_t sub_1BC601F58()
{
  return sub_1BC60154C();
}

uint64_t sub_1BC601F78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v10 = sub_1BC62C47C();
  v25 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62C4AC();
  v23 = *(_QWORD *)(v13 - 8);
  v24 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35A280();
  v16 = (void *)sub_1BC62CC74();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a1;
  v17[5] = a4;
  v17[6] = a5;
  aBlock[4] = sub_1BC602B2C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_21_4;
  v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  v19 = a1;
  swift_retain();
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC379B20((unint64_t *)&qword_1ED6A5870, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v15, v12, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v15, v24);
}

uint64_t sub_1BC6021A4(uint64_t a1, uint64_t a2)
{
  return sub_1BC6022E0(a1, a2, (uint64_t)&unk_1E74E8590, (uint64_t)sub_1BC602AB8, (uint64_t)&block_descriptor_12_4);
}

uint64_t sub_1BC6021C0(uint64_t result, uint64_t a2)
{
  uint64_t ObjectType;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (result)
  {
    ObjectType = swift_getObjectType();
    if (qword_1ED6A3308 != -1)
      swift_once();
    v4 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    v5 = sub_1BC62A4A8();
    v7 = v6;
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 24))(v5, v7, ObjectType, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC6022C4(uint64_t a1, uint64_t a2)
{
  return sub_1BC6022E0(a1, a2, (uint64_t)&unk_1E74E8540, (uint64_t)sub_1BC602AB0, (uint64_t)&block_descriptor_6_8);
}

uint64_t sub_1BC6022E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v9 = sub_1BC62C47C();
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62C4AC();
  v21 = *(_QWORD *)(v12 - 8);
  v22 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35A280();
  v15 = (void *)sub_1BC62CC74();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  aBlock[4] = a4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = a5;
  v17 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC379B20((unint64_t *)&qword_1ED6A5870, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v14, v11, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v22);
}

uint64_t sub_1BC6024E0(uint64_t result, uint64_t a2)
{
  uint64_t ObjectType;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (result)
  {
    ObjectType = swift_getObjectType();
    if (qword_1ED6A4888 != -1)
      swift_once();
    v4 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v5 = sub_1BC62A4A8();
    v7 = v6;
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 24))(v5, v7, ObjectType, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC6025E4(char a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v10 = sub_1BC62C47C();
  v26 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62C4AC();
  v24 = *(_QWORD *)(v13 - 8);
  v25 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35A280();
  v16 = (void *)sub_1BC62CC74();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  *(_QWORD *)(v17 + 32) = a2;
  *(_BYTE *)(v17 + 40) = a1;
  *(_QWORD *)(v17 + 48) = a5;
  aBlock[4] = sub_1BC602A60;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_78;
  v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  v19 = a2;
  v20 = a5;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC379B20((unint64_t *)&qword_1ED6A5870, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v15, v12, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v15, v25);
}

void sub_1BC602810(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5)
{
  uint64_t ObjectType;
  id v10;
  void *v11;
  id v12;

  if (a1)
  {
    ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t (*)(), _QWORD, uint64_t, uint64_t))(a2 + 32))(a3, nullsub_1, 0, ObjectType, a2);
  }
  if (a4)
  {
    if (a4 == 5)
    {
      if (qword_1ED6A3308 != -1)
        swift_once();
      v10 = (id)qword_1ED6A32F0;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (qword_1ED6A4888 != -1)
        swift_once();
      v10 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
    }
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v11 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    if (a3)
      a3 = (void *)sub_1BC62A550();
    v12 = objc_msgSend((id)objc_opt_self(), sel_basicAlertControllerWithTitle_message_internalError_, 0, v11, a3, 0xE000000000000000);

    objc_msgSend(a5, sel_presentViewController_animated_completion_, v12, 1, 0);
  }
}

uint64_t sub_1BC602A2C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_1BC602A60()
{
  uint64_t v0;

  sub_1BC602810(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t block_copy_helper_75(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_75()
{
  return swift_release();
}

uint64_t sub_1BC602A8C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC602AB0()
{
  uint64_t v0;

  return sub_1BC6024E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC602AB8()
{
  uint64_t v0;

  return sub_1BC6021C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC602AC0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC602AEC(void *a1)
{
  uint64_t *v1;

  return sub_1BC601F78(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1BC602AF8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1BC602B2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  if (v0[2])
  {
    v2 = v0[5];
    v1 = v0[6];
    v4 = v0[3];
    v3 = v0[4];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v2, v1, ObjectType, v4);
  }
}

id ProviderNotFoundView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id ProviderNotFoundView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;

  v9 = *MEMORY[0x1E0DC4AE8];
  v10 = (void *)objc_opt_self();
  v11 = v4;
  v12 = objc_msgSend(v10, sel_configurationWithTextStyle_scale_, v9, 2);
  v13 = (void *)sub_1BC62C650();
  v14 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v13, v12);

  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v14);
  *(_QWORD *)&v11[OBJC_IVAR___HRProviderNotFoundView_glyphView] = v15;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  *(_QWORD *)&v11[OBJC_IVAR___HRProviderNotFoundView_providerStatusLabel] = v16;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for ProviderNotFoundView();
  v17 = objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC602E08();

  return v17;
}

uint64_t type metadata accessor for ProviderNotFoundView()
{
  return objc_opt_self();
}

id sub_1BC602E08()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  double v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  double v28;
  int v30;

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 1);
  v1 = *(void **)&v0[OBJC_IVAR___HRProviderNotFoundView_glyphView];
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_secondaryLabelColor);
  objc_msgSend(v1, sel_setTintColor_, v3);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v1);
  v4 = objc_msgSend(v1, sel_centerXAnchor);
  v5 = objc_msgSend(v0, sel_centerXAnchor);
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  objc_msgSend(v6, sel_setActive_, 1);
  v7 = objc_msgSend(v1, sel_topAnchor);
  v8 = objc_msgSend(v0, sel_topAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 16.0);

  objc_msgSend(v9, sel_setActive_, 1);
  LODWORD(v10) = 1148846080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1, v10);
  v11 = *(void **)&v0[OBJC_IVAR___HRProviderNotFoundView_providerStatusLabel];
  objc_msgSend(v11, sel_setAdjustsFontForContentSizeCategory_, 1);
  v12 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v11, sel_setFont_, v12);

  objc_msgSend(v11, sel_setNumberOfLines_, 0);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v13 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setText_, v14, 0xE000000000000000);

  objc_msgSend(v11, sel_setLineBreakMode_, 0);
  objc_msgSend(v11, sel_setTextAlignment_, 1);
  v15 = objc_msgSend(v2, sel_systemGrayColor);
  objc_msgSend(v11, sel_setTextColor_, v15);

  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v11);
  v16 = objc_msgSend(v11, sel_leadingAnchor);
  v17 = objc_msgSend(v0, sel_leadingAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 16.0);

  objc_msgSend(v18, sel_setActive_, 1);
  v19 = objc_msgSend(v11, sel_trailingAnchor);
  v20 = objc_msgSend(v0, sel_trailingAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, -16.0);

  objc_msgSend(v21, sel_setActive_, 1);
  v22 = objc_msgSend(v11, sel_topAnchor);
  v23 = objc_msgSend(v1, sel_bottomAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 12.0);

  objc_msgSend(v24, sel_setActive_, 1);
  v25 = objc_msgSend(v11, sel_bottomAnchor);
  v26 = objc_msgSend(v0, sel_bottomAnchor);
  v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v26, 8.0);

  objc_msgSend(v27, sel_setActive_, 1);
  type metadata accessor for UILayoutPriority(0);
  sub_1BC449AAC();
  sub_1BC62BB4C();
  LODWORD(v28) = v30;
  return objc_msgSend(v11, sel_setContentCompressionResistancePriority_forAxis_, 1, v28);
}

id ProviderNotFoundView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProviderNotFoundView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ProviderNotFoundView()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BC603418()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *sub_1BC603420(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1BC603474(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC6034F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC60354C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BC603594(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s12SortedRecordVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s12SortedRecordVMn);
}

ValueMetadata *_s13SortedSectionVMa()
{
  return &_s13SortedSectionVN;
}

uint64_t _s10SortedDataVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s10SortedDataVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  v12 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v12;
  v10 = *(_QWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s10SortedDataVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[16];
  a1[15] = a2[15];
  a1[16] = v4;
  swift_retain();
  swift_release();
  v5 = a2[18];
  a1[17] = a2[17];
  a1[18] = v5;
  swift_retain();
  swift_release();
  v6 = a2[20];
  a1[19] = a2[19];
  a1[20] = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s10SortedDataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  v9 = *(_QWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = v9;
  swift_release();
  return a1;
}

uint64_t _s10SortedDataVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s10SortedDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s10SortedDataVMa()
{
  return &_s10SortedDataVN;
}

uint64_t sub_1BC603A68(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12[2];
  char v13;

  v3 = v1;
  sub_1BC3B2CF8(0, &qword_1EF43A3B0, (uint64_t (*)(void))sub_1BC604FD0, (uint64_t)&_s13SortedSectionV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC604FD0();
  sub_1BC62D6F4();
  v11[0] = 0;
  sub_1BC62D4D8();
  if (!v2)
  {
    v11[0] = 1;
    sub_1BC62D4D8();
    sub_1BC410F7C((uint64_t *)(v3 + 32), (uint64_t)v12);
    sub_1BC410F7C(v12, (uint64_t)v11);
    v13 = 2;
    sub_1BC605058();
    sub_1BC62D4FC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1BC603BEC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[16];
  uint64_t v15;

  v15 = a3;
  v14[13] = a2;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC3B2CF8(0, &qword_1EF43A530, (uint64_t (*)(void))sub_1BC605A2C, (uint64_t)&_s13SortedRecordsO18MetadataCodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v14[11] = *(_QWORD *)(v5 - 8);
  v14[12] = v5;
  MEMORY[0x1E0C80A78](v5);
  v14[10] = (char *)v14 - v6;
  sub_1BC3B2CF8(0, &qword_1EF43A538, (uint64_t (*)(void))sub_1BC605A70, (uint64_t)&_s13SortedRecordsO21ThreeValuesCodingKeysON, v4);
  v14[8] = *(_QWORD *)(v7 - 8);
  v14[9] = v7;
  MEMORY[0x1E0C80A78](v7);
  v14[7] = (char *)v14 - v8;
  sub_1BC3B2CF8(0, &qword_1EF43A540, (uint64_t (*)(void))sub_1BC605AB4, (uint64_t)&_s13SortedRecordsO22ValueInRangeCodingKeysON, v4);
  v14[5] = *(_QWORD *)(v9 - 8);
  v14[6] = v9;
  MEMORY[0x1E0C80A78](v9);
  v14[4] = (char *)v14 - v10;
  sub_1BC3B2CF8(0, &qword_1EF43A548, (uint64_t (*)(void))sub_1BC605AF8, (uint64_t)&_s13SortedRecordsO15ValueCodingKeysON, v4);
  v14[2] = *(_QWORD *)(v11 - 8);
  v14[3] = v11;
  MEMORY[0x1E0C80A78](v11);
  sub_1BC3B2CF8(0, &qword_1EF43A550, (uint64_t (*)(void))sub_1BC605B3C, (uint64_t)&_s13SortedRecordsO15PlainCodingKeysON, v4);
  v14[1] = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1BC3B2CF8(0, &qword_1EF43A558, (uint64_t (*)(void))sub_1BC605B80, (uint64_t)&_s13SortedRecordsO10CodingKeysON, v4);
  v14[14] = *(_QWORD *)(v13 - 8);
  v14[15] = v13;
  MEMORY[0x1E0C80A78](v13);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC605B80();
  sub_1BC62D6F4();
  __asm { BR              X10 }
}

uint64_t sub_1BC603E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 72) = 0;
  sub_1BC605B3C();
  v4 = *(_QWORD *)(v3 - 104);
  sub_1BC62D4B4();
  *(_QWORD *)(v3 - 72) = *(_QWORD *)(v3 - 120);
  sub_1BC605CAC(0, &qword_1EF43A518, &qword_1EF42C528, (uint64_t (*)(void))sub_1BC3B8E24, (uint64_t)&_s15FormattedRecordVN);
  sub_1BC606450();
  sub_1BC62D4FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 216) + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 8))(v1, v4);
}

uint64_t sub_1BC6041E0()
{
  sub_1BC604FD0();
  return sub_1BC62D700();
}

uint64_t sub_1BC604208()
{
  sub_1BC604FD0();
  return sub_1BC62D70C();
}

double sub_1BC604230@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_1BC604D58(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1BC604270(_QWORD *a1)
{
  return sub_1BC603A68(a1);
}

uint64_t sub_1BC6042A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC6042D4 + 4 * byte_1BC64C635[*v0]))(0x6E69616C70, 0xE500000000000000);
}

uint64_t sub_1BC6042D4()
{
  return 0x65756C6176;
}

uint64_t sub_1BC6042E4()
{
  return 0x526E4965756C6176;
}

uint64_t sub_1BC604304()
{
  return 0x6C61566565726874;
}

uint64_t sub_1BC604324()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1BC60433C()
{
  sub_1BC605B80();
  return sub_1BC62D700();
}

uint64_t sub_1BC604364()
{
  sub_1BC605B80();
  return sub_1BC62D70C();
}

uint64_t sub_1BC60438C()
{
  sub_1BC605A2C();
  return sub_1BC62D700();
}

uint64_t sub_1BC6043B4()
{
  sub_1BC605A2C();
  return sub_1BC62D70C();
}

uint64_t sub_1BC6043DC()
{
  sub_1BC605B3C();
  return sub_1BC62D700();
}

uint64_t sub_1BC604404()
{
  sub_1BC605B3C();
  return sub_1BC62D70C();
}

uint64_t sub_1BC60442C()
{
  sub_1BC605A70();
  return sub_1BC62D700();
}

uint64_t sub_1BC604454()
{
  sub_1BC605A70();
  return sub_1BC62D70C();
}

uint64_t sub_1BC60447C()
{
  sub_1BC605AF8();
  return sub_1BC62D700();
}

uint64_t sub_1BC6044A4()
{
  sub_1BC605AF8();
  return sub_1BC62D70C();
}

uint64_t sub_1BC6044CC()
{
  sub_1BC605AB4();
  return sub_1BC62D700();
}

uint64_t sub_1BC6044F4()
{
  sub_1BC605AB4();
  return sub_1BC62D70C();
}

uint64_t sub_1BC60451C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_1BC605284(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

void sub_1BC604548(_QWORD *a1)
{
  uint64_t v1;

  sub_1BC603BEC(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

BOOL sub_1BC604564(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1BC604574()
{
  return sub_1BC62D67C();
}

uint64_t sub_1BC604598(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72656469766F7270 && a2 == 0xE800000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7364726F636572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC6046E4()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC604728(char a1)
{
  if (!a1)
    return 0x656C746974;
  if (a1 == 1)
    return 0x72656469766F7270;
  return 0x7364726F636572;
}

uint64_t sub_1BC60477C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v5 = v4;
  v7 = *(_QWORD *)(a2 + 24);
  v19 = *(_QWORD *)(a2 + 16);
  v18 = v7;
  v8 = _s12SortedRecordV10CodingKeysOMa(255, v19, v7, a4);
  MEMORY[0x1BCCF35C4](&unk_1BC64C990, v8);
  v9 = sub_1BC62D508();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - v11;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC62D6F4();
  LOBYTE(v23) = 0;
  v13 = v20;
  sub_1BC62D4D8();
  if (!v13)
  {
    v14 = v18;
    LOBYTE(v23) = 1;
    sub_1BC62D4C0();
    v23 = *(_QWORD *)(v5 + 32);
    v22 = 2;
    v15 = sub_1BC62C8E4();
    v21 = *(_QWORD *)(v14 + 16);
    MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF10], v15, &v21);
    sub_1BC62D4FC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BC604924@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v26 = a5;
  v7 = _s12SortedRecordV10CodingKeysOMa(255, a2, a3, a4);
  MEMORY[0x1BCCF35C4](&unk_1BC64C990, v7);
  v28 = sub_1BC62D4A8();
  v8 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v10 = (char *)&v24 - v9;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  v27 = v10;
  v11 = (uint64_t)v29;
  sub_1BC62D6DC();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v29 = a1;
  v12 = v8;
  v14 = v26;
  v13 = v27;
  LOBYTE(v32) = 0;
  v15 = sub_1BC62D46C();
  v17 = v16;
  LOBYTE(v32) = 1;
  swift_bridgeObjectRetain();
  v18 = sub_1BC62D454();
  v20 = v19;
  v25 = v18;
  v21 = sub_1BC62C8E4();
  v31 = 2;
  v30 = *(_QWORD *)(a3 + 8);
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF40], v21, &v30);
  sub_1BC62D490();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v28);
  v22 = v32;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v14 = v15;
  v14[1] = v17;
  v14[2] = v25;
  v14[3] = v20;
  v14[4] = v22;
  return result;
}

BOOL sub_1BC604BB4(char *a1, char *a2)
{
  return sub_1BC604564(*a1, *a2);
}

uint64_t sub_1BC604BC8()
{
  return sub_1BC6046E4();
}

uint64_t sub_1BC604BD4()
{
  return sub_1BC604574();
}

uint64_t sub_1BC604BE0()
{
  sub_1BC62D670();
  sub_1BC604574();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC604C24()
{
  char *v0;

  return sub_1BC604728(*v0);
}

uint64_t sub_1BC604C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC604598(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC604C5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC605A24();
  *a1 = result;
  return result;
}

uint64_t sub_1BC604C84(uint64_t a1)
{
  MEMORY[0x1BCCF35C4](&unk_1BC64C990, a1);
  return sub_1BC62D700();
}

uint64_t sub_1BC604CB8(uint64_t a1)
{
  MEMORY[0x1BCCF35C4](&unk_1BC64C990, a1);
  return sub_1BC62D70C();
}

double sub_1BC604CEC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;

  sub_1BC604924(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, (uint64_t *)v8);
  if (!v4)
  {
    result = *(double *)v8;
    v7 = v8[1];
    *(_OWORD *)a4 = v8[0];
    *(_OWORD *)(a4 + 16) = v7;
    *(_QWORD *)(a4 + 32) = v9;
  }
  return result;
}

uint64_t sub_1BC604D38(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC60477C(a1, a2, a3, a4);
}

uint64_t _s12SortedRecordV10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s12SortedRecordV10CodingKeysOMn);
}

uint64_t sub_1BC604D58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v24 = a2;
  sub_1BC3B2CF8(0, &qword_1EF43A398, (uint64_t (*)(void))sub_1BC604FD0, (uint64_t)&_s13SortedSectionV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC604FD0();
  sub_1BC62D6DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v9 = v6;
  v10 = v24;
  v29 = 0;
  v11 = sub_1BC62D46C();
  v13 = v12;
  v23 = v11;
  v28 = 1;
  swift_bridgeObjectRetain();
  v14 = sub_1BC62D46C();
  v16 = v15;
  v21 = v14;
  v27 = 2;
  sub_1BC605014();
  swift_bridgeObjectRetain();
  v22 = v16;
  sub_1BC62D490();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v17 = v25;
  v18 = v26;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  v19 = v22;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v10 = v23;
  *(_QWORD *)(v10 + 8) = v13;
  *(_QWORD *)(v10 + 16) = v21;
  *(_QWORD *)(v10 + 24) = v19;
  *(_QWORD *)(v10 + 32) = v17;
  *(_BYTE *)(v10 + 40) = v18;
  return result;
}

unint64_t sub_1BC604FD0()
{
  unint64_t result;

  result = qword_1EF43A3A0;
  if (!qword_1EF43A3A0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64C940, &_s13SortedSectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF43A3A0);
  }
  return result;
}

unint64_t sub_1BC605014()
{
  unint64_t result;

  result = qword_1EF43A3A8;
  if (!qword_1EF43A3A8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64C918, &_s13SortedRecordsON);
    atomic_store(result, (unint64_t *)&qword_1EF43A3A8);
  }
  return result;
}

unint64_t sub_1BC605058()
{
  unint64_t result;

  result = qword_1EF43A3B8[0];
  if (!qword_1EF43A3B8[0])
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64C8F0, &_s13SortedRecordsON);
    atomic_store(result, qword_1EF43A3B8);
  }
  return result;
}

ValueMetadata *_s13SortedSectionV10CodingKeysOMa()
{
  return &_s13SortedSectionV10CodingKeysON;
}

uint64_t _s13SortedSectionV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC6050FC + 4 * byte_1BC64C63F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC605130 + 4 * byte_1BC64C63A[v4]))();
}

uint64_t sub_1BC605130(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC605138(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC605140);
  return result;
}

uint64_t sub_1BC60514C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC605154);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC605158(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC605160(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13SortedRecordsOMa()
{
  return &_s13SortedRecordsON;
}

void sub_1BC60517C()
{
  JUMPOUT(0x1BCCF35C4);
}

unint64_t sub_1BC605190()
{
  unint64_t result;

  result = qword_1EF43A440;
  if (!qword_1EF43A440)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64C8C8, &_s13SortedSectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF43A440);
  }
  return result;
}

unint64_t sub_1BC6051D8()
{
  unint64_t result;

  result = qword_1EF43A448;
  if (!qword_1EF43A448)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64C838, &_s13SortedSectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF43A448);
  }
  return result;
}

unint64_t sub_1BC605220()
{
  unint64_t result;

  result = qword_1EF43A450;
  if (!qword_1EF43A450)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64C860, &_s13SortedSectionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF43A450);
  }
  return result;
}

void sub_1BC605264()
{
  JUMPOUT(0x1BCCF35C4);
}

void sub_1BC605274()
{
  JUMPOUT(0x1BCCF35C4);
}

uint64_t sub_1BC605284(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v27[16];
  _QWORD *v28;
  uint64_t v29;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC3B2CF8(0, &qword_1EF43A458, (uint64_t (*)(void))sub_1BC605A2C, (uint64_t)&_s13SortedRecordsO18MetadataCodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v27[7] = v3;
  v27[10] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v27[15] = (char *)v27 - v4;
  sub_1BC3B2CF8(0, &qword_1EF43A468, (uint64_t (*)(void))sub_1BC605A70, (uint64_t)&_s13SortedRecordsO21ThreeValuesCodingKeysON, v2);
  v27[5] = v5;
  v27[11] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v27[14] = (char *)v27 - v6;
  sub_1BC3B2CF8(0, &qword_1EF43A478, (uint64_t (*)(void))sub_1BC605AB4, (uint64_t)&_s13SortedRecordsO22ValueInRangeCodingKeysON, v2);
  v27[8] = *(_QWORD *)(v7 - 8);
  v27[9] = v7;
  MEMORY[0x1E0C80A78](v7);
  v27[13] = (char *)v27 - v8;
  sub_1BC3B2CF8(0, &qword_1EF43A488, (uint64_t (*)(void))sub_1BC605AF8, (uint64_t)&_s13SortedRecordsO15ValueCodingKeysON, v2);
  v27[6] = v9;
  v27[2] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v27[12] = (char *)v27 - v10;
  sub_1BC3B2CF8(0, &qword_1EF43A498, (uint64_t (*)(void))sub_1BC605B3C, (uint64_t)&_s13SortedRecordsO15PlainCodingKeysON, v2);
  v27[3] = *(_QWORD *)(v11 - 8);
  v27[4] = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v27 - v12;
  sub_1BC3B2CF8(0, &qword_1EF43A4A8, (uint64_t (*)(void))sub_1BC605B80, (uint64_t)&_s13SortedRecordsO10CodingKeysON, v2);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v27 - v17;
  v20 = a1[3];
  v19 = a1[4];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v20);
  sub_1BC605B80();
  v21 = v29;
  sub_1BC62D6DC();
  if (!v21)
  {
    v27[1] = v13;
    v29 = v16;
    v22 = sub_1BC62D49C();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      v23 = (char *)&loc_1BC605548 + 4 * byte_1BC64C644[*(unsigned __int8 *)(v22 + 32)];
      v27[0] = *(unsigned __int8 *)(v22 + 32);
      __asm { BR              X9 }
    }
    v19 = sub_1BC62D238();
    swift_allocError();
    v25 = v24;
    sub_1BC4141CC();
    *v25 = &_s13SortedRecordsON;
    sub_1BC62D448();
    sub_1BC62D220();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v15);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  return v19;
}

void sub_1BC6056D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = 1;
  sub_1BC605AF8();
  sub_1BC62D43C();
  if (!v0)
  {
    sub_1BC605CAC(0, &qword_1EF43A500, &qword_1EF42C540, (uint64_t (*)(void))sub_1BC3B8ED4, (uint64_t)&_s20FormattedRecordValueVN);
    sub_1BC605EE0();
    sub_1BC62D490();
    JUMPOUT(0x1BC6059E8);
  }
  JUMPOUT(0x1BC605688);
}

void sub_1BC60577C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v4 - 72) = 2;
  sub_1BC605AB4();
  v5 = v0;
  sub_1BC62D43C();
  if (!v1)
  {
    sub_1BC605CAC(0, &qword_1EF43A4E8, &qword_1EF42C558, (uint64_t (*)(void))sub_1BC3B8F84, (uint64_t)&_s27FormattedRecordValueInRangeVN);
    sub_1BC605DF8();
    v6 = *(_QWORD *)(v4 - 152);
    sub_1BC62D490();
    v7 = *(_QWORD *)(v4 - 88);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 160) + 8))(v5, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v2);
    __swift_destroy_boxed_opaque_existential_1Tm(*(_QWORD *)(v4 - 96));
    JUMPOUT(0x1BC6056ACLL);
  }
  JUMPOUT(0x1BC605688);
}

void sub_1BC605824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v4 - 72) = 3;
  sub_1BC605A70();
  sub_1BC62D43C();
  if (!v1)
  {
    sub_1BC605CAC(0, &qword_1EF43A4D0, &qword_1EF42C570, (uint64_t (*)(void))sub_1BC3B9034, (uint64_t)&_s22FormattedRecord3ValuesVN);
    sub_1BC605D10();
    v5 = *(_QWORD *)(v4 - 184);
    sub_1BC62D490();
    v6 = *(_QWORD *)(v4 - 88);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v0, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v2);
    __swift_destroy_boxed_opaque_existential_1Tm(*(_QWORD *)(v4 - 96));
    JUMPOUT(0x1BC6056ACLL);
  }
  JUMPOUT(0x1BC605688);
}

void sub_1BC6058E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 72) = 4;
  sub_1BC605A2C();
  v3 = v1;
  sub_1BC62D43C();
  if (!v0)
  {
    sub_1BC605CAC(0, &qword_1EF43A4B8, &qword_1EF42C588, (uint64_t (*)(void))sub_1BC3B913C, (uint64_t)&_s23FormattedRecordMetadataVN);
    sub_1BC605BC4();
    v4 = *(_QWORD *)(v2 - 168);
    sub_1BC62D490();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v3, v4);
    swift_bridgeObjectRelease();
    JUMPOUT(0x1BC605A04);
  }
  JUMPOUT(0x1BC605688);
}

uint64_t sub_1BC605A24()
{
  return 3;
}

unint64_t sub_1BC605A2C()
{
  unint64_t result;

  result = qword_1EF43A460;
  if (!qword_1EF43A460)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64D034, &_s13SortedRecordsO18MetadataCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF43A460);
  }
  return result;
}

unint64_t sub_1BC605A70()
{
  unint64_t result;

  result = qword_1EF43A470;
  if (!qword_1EF43A470)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64CFE4, &_s13SortedRecordsO21ThreeValuesCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF43A470);
  }
  return result;
}

unint64_t sub_1BC605AB4()
{
  unint64_t result;

  result = qword_1EF43A480;
  if (!qword_1EF43A480)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64CF94, &_s13SortedRecordsO22ValueInRangeCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF43A480);
  }
  return result;
}

unint64_t sub_1BC605AF8()
{
  unint64_t result;

  result = qword_1EF43A490;
  if (!qword_1EF43A490)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64CF44, &_s13SortedRecordsO15ValueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF43A490);
  }
  return result;
}

unint64_t sub_1BC605B3C()
{
  unint64_t result;

  result = qword_1EF43A4A0;
  if (!qword_1EF43A4A0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64CEF4, &_s13SortedRecordsO15PlainCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF43A4A0);
  }
  return result;
}

unint64_t sub_1BC605B80()
{
  unint64_t result;

  result = qword_1EF43A4B0;
  if (!qword_1EF43A4B0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64CEA4, &_s13SortedRecordsO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF43A4B0);
  }
  return result;
}

unint64_t sub_1BC605BC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF43A4C0;
  if (!qword_1EF43A4C0)
  {
    sub_1BC605CAC(255, &qword_1EF43A4B8, &qword_1EF42C588, (uint64_t (*)(void))sub_1BC3B913C, (uint64_t)&_s23FormattedRecordMetadataVN);
    v2 = v1;
    v3 = sub_1BC605C44();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF43A4C0);
  }
  return result;
}

unint64_t sub_1BC605C44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF43A4C8;
  if (!qword_1EF43A4C8)
  {
    sub_1BC3B2CF8(255, &qword_1EF42C588, (uint64_t (*)(void))sub_1BC3B913C, (uint64_t)&_s23FormattedRecordMetadataVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    result = MEMORY[0x1BCCF35C4](&unk_1BC64C72C, v1);
    atomic_store(result, (unint64_t *)&qword_1EF43A4C8);
  }
  return result;
}

void sub_1BC605CAC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BC3B2CF8(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    v6 = sub_1BC62C8E4();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BC605D10()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF43A4D8;
  if (!qword_1EF43A4D8)
  {
    sub_1BC605CAC(255, &qword_1EF43A4D0, &qword_1EF42C570, (uint64_t (*)(void))sub_1BC3B9034, (uint64_t)&_s22FormattedRecord3ValuesVN);
    v2 = v1;
    v3 = sub_1BC605D90();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF43A4D8);
  }
  return result;
}

