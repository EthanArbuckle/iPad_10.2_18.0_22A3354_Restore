uint64_t sub_1BC454558(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  uint64_t (*v38)(uint64_t *, uint64_t *);
  int v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;

  v6 = a4 + 1;
  if (a4 + 1 >= a3)
  {
    v22 = 0;
    *a1 = v6;
  }
  else
  {
    v8 = (uint64_t *)(a2 + 48 * v6);
    v9 = *v8;
    v10 = v8[1];
    v11 = v8[2];
    v12 = v8[3];
    v13 = v8[4];
    LOBYTE(v8) = *((_BYTE *)v8 + 40);
    v47 = v9;
    v48 = v10;
    v49 = v11;
    v50 = v12;
    v51 = v13;
    v52 = (char)v8;
    v14 = (uint64_t *)(a2 + 48 * a4);
    v15 = *v14;
    v16 = v14[1];
    v17 = v14[2];
    v18 = v14[3];
    v19 = v14[4];
    LOBYTE(v14) = *((_BYTE *)v14 + 40);
    v41 = v15;
    v42 = v16;
    v43 = v17;
    v44 = v18;
    v45 = v19;
    v46 = (char)v14;
    v53 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = a5(&v47, &v41);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v39 = v21;
      v38 = a5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = a4 + 2;
      if (a4 + 2 >= a3)
      {
LABEL_10:
        v22 = v39;
      }
      else
      {
        v24 = v53 + 48 * a4 + 72;
        while (1)
        {
          v25 = *(_QWORD *)(v24 + 32);
          v26 = *(_QWORD *)(v24 + 40);
          v27 = *(_QWORD *)(v24 + 48);
          v28 = *(_QWORD *)(v24 + 56);
          v29 = *(_BYTE *)(v24 + 64);
          v47 = *(_QWORD *)(v24 + 24);
          v48 = v25;
          v53 = v25;
          v49 = v26;
          v50 = v27;
          v51 = v28;
          v52 = v29;
          v30 = *(_QWORD *)(v24 - 16);
          v31 = *(_QWORD *)(v24 - 8);
          v32 = *(_QWORD *)v24;
          v33 = *(_QWORD *)(v24 + 8);
          v34 = *(_BYTE *)(v24 + 16);
          v41 = *(_QWORD *)(v24 - 24);
          v42 = v30;
          v43 = v31;
          v44 = v32;
          v45 = v33;
          v46 = v34;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v35 = v38(&v47, &v41);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v22 = v39;
          if (((v39 ^ v35) & 1) != 0)
            break;
          ++v23;
          v24 += 48;
          if (a3 == v23)
          {
            v23 = a3;
            goto LABEL_10;
          }
        }
      }
      *a1 = v23;
    }
  }
  return v22 & 1;
}

uint64_t sub_1BC4547F0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t (*v39)(uint64_t *, uint64_t *);
  int v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = a4 + 1;
  if (a4 + 1 >= a3)
  {
    v22 = 0;
    *a1 = v6;
  }
  else
  {
    v8 = (uint64_t *)(a2 + 48 * v6);
    v9 = v8[1];
    v10 = v8[2];
    v11 = v8[3];
    v12 = v8[4];
    v13 = v8[5];
    v48 = *v8;
    v49 = v9;
    v50 = v10;
    v51 = v11;
    v52 = v12;
    v53 = v13;
    v14 = (uint64_t *)(a2 + 48 * a4);
    v15 = v14[1];
    v16 = v14[2];
    v17 = v14[3];
    v18 = v14[4];
    v19 = v14[5];
    v42 = *v14;
    v43 = v15;
    v44 = v16;
    v45 = v17;
    v46 = v18;
    v47 = v19;
    v54 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = a5(&v48, &v42);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v40 = v21;
      v39 = a5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = a4 + 2;
      if (a4 + 2 >= a3)
      {
LABEL_10:
        v22 = v40;
      }
      else
      {
        v24 = (_QWORD *)(v54 + 48 * a4 + 72);
        v25 = v24;
        while (1)
        {
          v26 = v24[5];
          v54 = v24[4];
          v27 = v25[6];
          v25 += 6;
          v28 = v24[7];
          v29 = v24[8];
          v30 = v24[2];
          v48 = v24[3];
          v49 = v54;
          v50 = v26;
          v51 = v27;
          v52 = v28;
          v53 = v29;
          v31 = *(v24 - 3);
          v32 = *(v24 - 2);
          v33 = *(v24 - 1);
          v34 = *v24;
          v35 = v24[1];
          v42 = v31;
          v43 = v32;
          v44 = v33;
          v45 = v34;
          v46 = v35;
          v47 = v30;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v36 = v39(&v48, &v42);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v22 = v40;
          if (((v40 ^ v36) & 1) != 0)
            break;
          ++v23;
          v24 = v25;
          if (a3 == v23)
          {
            v23 = a3;
            goto LABEL_10;
          }
        }
      }
      *a1 = v23;
    }
  }
  return v22 & 1;
}

uint64_t sub_1BC454A6C(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char *v55;
  char *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t result;
  char *v64;
  char *v65;
  char *v66;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char *v86;
  const void *v87[2];
  char *v88;

  v6 = v5;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = (a2 - __src) / 48;
  v12 = a3 - (_QWORD)a2;
  v13 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v88 = __src;
  v87[0] = __dst;
  if (v11 < v13)
  {
    if (v10 > -48)
    {
      v14 = 48 * v11;
      if (__dst != __src || &__src[v14] <= __dst)
        memmove(__dst, __src, v14);
      v66 = &__dst[v14];
      v86 = &__dst[v14];
      if ((unint64_t)v8 < a3 && v10 >= 48)
      {
        v15 = __dst;
        while (1)
        {
          v70 = v9;
          v72 = v8;
          v16 = *((_QWORD *)v8 + 1);
          v17 = *((_QWORD *)v8 + 2);
          v18 = *((_QWORD *)v8 + 3);
          v19 = *((_QWORD *)v8 + 4);
          v20 = v8[40];
          v80 = *(_QWORD *)v8;
          v81 = v16;
          v82 = v17;
          v83 = v18;
          v84 = v19;
          v85 = v20;
          v21 = *((_QWORD *)v15 + 1);
          v22 = *((_QWORD *)v15 + 2);
          v23 = *((_QWORD *)v15 + 3);
          v24 = *((_QWORD *)v15 + 4);
          v25 = v15[40];
          v74 = *(_QWORD *)v15;
          v75 = v21;
          v76 = v22;
          v77 = v23;
          v78 = v24;
          v79 = v25;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v26 = a5(&v80, &v74);
          if (v6)
            goto LABEL_48;
          v27 = v26;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
          {
            v28 = v70;
            v29 = v72 + 48;
            if (v70 >= v72 && v70 < v29)
            {
              v6 = 0;
              if (v70 != v72)
              {
                v30 = *(_OWORD *)v72;
                v31 = *((_OWORD *)v72 + 2);
                *((_OWORD *)v70 + 1) = *((_OWORD *)v72 + 1);
                *((_OWORD *)v70 + 2) = v31;
                *(_OWORD *)v70 = v30;
              }
              goto LABEL_20;
            }
            v34 = *(_OWORD *)v72;
            v35 = *((_OWORD *)v72 + 2);
            *((_OWORD *)v70 + 1) = *((_OWORD *)v72 + 1);
            *((_OWORD *)v70 + 2) = v35;
            *(_OWORD *)v70 = v34;
          }
          else
          {
            v28 = v70;
            v29 = v72;
            if (v70 != v15)
            {
              v32 = *(_OWORD *)v15;
              v33 = *((_OWORD *)v15 + 2);
              *((_OWORD *)v70 + 1) = *((_OWORD *)v15 + 1);
              *((_OWORD *)v70 + 2) = v33;
              *(_OWORD *)v70 = v32;
            }
            v15 += 48;
            v87[0] = v15;
          }
          v6 = 0;
LABEL_20:
          v9 = v28 + 48;
          v88 = v9;
          if (v15 < v66)
          {
            v8 = v29;
            if ((unint64_t)v29 < a3)
              continue;
          }
          break;
        }
      }
LABEL_47:
      sub_1BC503DD4((void **)&v88, v87, &v86);
      return 1;
    }
LABEL_50:
    result = sub_1BC62D418();
    __break(1u);
    return result;
  }
  if (v12 <= -48)
    goto LABEL_50;
  v36 = 48 * v13;
  if (__dst != a2 || &a2[v36] <= __dst)
    memmove(__dst, a2, 48 * v13);
  v37 = &__dst[v36];
  v86 = &__dst[v36];
  v88 = v8;
  if (v9 >= v8 || v12 < 48)
    goto LABEL_47;
  v64 = __dst;
  v38 = (char *)(a3 - 48);
  v39 = v8;
  v71 = v9;
  while (1)
  {
    v69 = v38;
    v73 = v8;
    v65 = v37;
    v40 = *((_QWORD *)v37 - 6);
    v42 = *((_QWORD *)v37 - 5);
    v41 = v37 - 48;
    v43 = *((_QWORD *)v37 - 4);
    v44 = *((_QWORD *)v37 - 3);
    v45 = *((_QWORD *)v37 - 2);
    v46 = *(v37 - 8);
    v80 = v40;
    v81 = v42;
    v82 = v43;
    v83 = v44;
    v84 = v45;
    v85 = v46;
    v47 = *((_QWORD *)v39 - 6);
    v48 = *((_QWORD *)v39 - 5);
    v39 -= 48;
    v49 = *((_QWORD *)v39 + 2);
    v50 = *((_QWORD *)v39 + 3);
    v51 = *((_QWORD *)v39 + 4);
    v52 = v39[40];
    v74 = v47;
    v75 = v48;
    v76 = v49;
    v77 = v50;
    v78 = v51;
    v79 = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53 = a5(&v80, &v74);
    if (v6)
      break;
    v54 = v53;
    v55 = v69 + 48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v54 & 1) != 0)
    {
      v56 = v69;
      v37 = v65;
      if (v55 != v73 || v69 >= v73)
      {
        v57 = *(_OWORD *)v39;
        v58 = *((_OWORD *)v39 + 2);
        *((_OWORD *)v69 + 1) = *((_OWORD *)v39 + 1);
        *((_OWORD *)v69 + 2) = v58;
        *(_OWORD *)v69 = v57;
      }
      v88 = v39;
    }
    else
    {
      v86 = v41;
      v39 = v73;
      v56 = v69;
      if (v55 >= v65 && v69 < v65)
      {
        v6 = 0;
        if (v55 != v65)
        {
          v59 = *(_OWORD *)v41;
          v60 = *((_OWORD *)v41 + 2);
          *((_OWORD *)v69 + 1) = *((_OWORD *)v41 + 1);
          *((_OWORD *)v69 + 2) = v60;
          *(_OWORD *)v69 = v59;
        }
        v37 = v41;
        goto LABEL_43;
      }
      v61 = *(_OWORD *)v41;
      v62 = *((_OWORD *)v41 + 2);
      *((_OWORD *)v69 + 1) = *((_OWORD *)v41 + 1);
      *((_OWORD *)v69 + 2) = v62;
      *(_OWORD *)v69 = v61;
      v37 = v41;
    }
    v6 = 0;
LABEL_43:
    if (v39 > v71)
    {
      v38 = v56 - 48;
      v8 = v39;
      if (v37 > v64)
        continue;
    }
    goto LABEL_47;
  }
LABEL_48:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC503DD4((void **)&v88, v87, &v86);
  return 1;
}

uint64_t sub_1BC454F98(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5;
  char *v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char *v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t result;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;

  v7 = a2;
  v8 = __src;
  v9 = a2 - __src;
  v10 = (a2 - __src) / 24;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v60 = __src;
  v59 = __dst;
  if (v10 >= v12)
  {
    if (v11 > -24)
    {
      v28 = v5;
      if (__dst != a2 || &a2[24 * v12] <= __dst)
        memmove(__dst, a2, 24 * v12);
      v29 = &__dst[24 * v12];
      v58 = v29;
      v60 = v7;
      if (v8 < v7 && v11 >= 24)
      {
        v45 = __dst;
        v46 = v8;
        v30 = a3 - 24;
        v31 = v7;
        while (1)
        {
          v47 = v29;
          v49 = v7;
          v32 = *((_QWORD *)v29 - 3);
          v33 = *((_QWORD *)v29 - 2);
          v29 -= 24;
          v34 = *((_QWORD *)v29 + 2);
          v55 = v32;
          v56 = v33;
          v57 = v34;
          v35 = *((_QWORD *)v31 - 3);
          v36 = *((_QWORD *)v31 - 2);
          v31 -= 24;
          v37 = *((_QWORD *)v31 + 2);
          v52 = v35;
          v53 = v36;
          v54 = v37;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v38 = a5(&v55, &v52);
          if (v28)
            break;
          v39 = v38;
          v40 = (char *)(v30 + 24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v39 & 1) != 0)
          {
            v29 = v47;
            v41 = (unint64_t)v46;
            if (v40 != v49 || v30 >= (unint64_t)v49)
            {
              v42 = *(_OWORD *)v31;
              *(_QWORD *)(v30 + 16) = *((_QWORD *)v31 + 2);
              *(_OWORD *)v30 = v42;
            }
            v60 = v31;
          }
          else
          {
            v58 = v29;
            v41 = (unint64_t)v46;
            v31 = v49;
            if (v40 < v47 || v30 >= (unint64_t)v47 || v40 != v47)
            {
              v43 = *(_OWORD *)v29;
              *(_QWORD *)(v30 + 16) = *((_QWORD *)v29 + 2);
              *(_OWORD *)v30 = v43;
            }
          }
          v28 = 0;
          if ((unint64_t)v31 > v41)
          {
            v30 -= 24;
            v7 = v31;
            if (v29 > v45)
              continue;
          }
          goto LABEL_45;
        }
LABEL_44:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_45:
      sub_1BC503E90((void **)&v60, (const void **)&v59, &v58);
      return 1;
    }
  }
  else if (v9 > -24)
  {
    if (__dst != __src || &__src[24 * v10] <= __dst)
      memmove(__dst, __src, 24 * v10);
    v48 = &__dst[24 * v10];
    v58 = v48;
    if ((unint64_t)v7 < a3 && v9 >= 24)
    {
      v13 = __dst;
      v14 = v5;
      while (1)
      {
        v15 = v8;
        v16 = *((_QWORD *)v7 + 1);
        v17 = v7;
        v18 = *((_QWORD *)v7 + 2);
        v55 = *(_QWORD *)v7;
        v56 = v16;
        v57 = v18;
        v19 = *((_QWORD *)v13 + 1);
        v20 = *((_QWORD *)v13 + 2);
        v52 = *(_QWORD *)v13;
        v53 = v19;
        v54 = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = a5(&v55, &v52);
        if (v14)
          goto LABEL_44;
        v22 = v21;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
        {
          v23 = v17 + 24;
          v24 = v15;
          if (v15 >= v17 && v15 < v23)
          {
            v14 = 0;
            if (v15 != v17)
            {
              v25 = *(_OWORD *)v17;
              *((_QWORD *)v15 + 2) = *((_QWORD *)v17 + 2);
              *(_OWORD *)v15 = v25;
            }
            goto LABEL_20;
          }
          v27 = *(_OWORD *)v17;
          *((_QWORD *)v15 + 2) = *((_QWORD *)v17 + 2);
          *(_OWORD *)v15 = v27;
        }
        else
        {
          v24 = v15;
          if (v15 != v13)
          {
            v26 = *(_OWORD *)v13;
            *((_QWORD *)v15 + 2) = *((_QWORD *)v13 + 2);
            *(_OWORD *)v15 = v26;
          }
          v13 += 24;
          v59 = v13;
          v23 = v17;
        }
        v14 = 0;
LABEL_20:
        v8 = v24 + 24;
        v60 = v8;
        if (v13 < v48)
        {
          v7 = v23;
          if ((unint64_t)v23 < a3)
            continue;
        }
        goto LABEL_45;
      }
    }
    goto LABEL_45;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC4553E8(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  char *v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t result;
  char *v63;
  char *v64;
  char *v67;
  char *__dsta;
  char *__dstb;
  char *v70;
  char *v71;
  char *__srca;
  char *__srcb;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  const void *v96;
  char *v97;

  v5 = a2;
  v6 = __src;
  v7 = a2 - __src;
  v8 = (a2 - __src) / 80;
  v9 = a3 - (_QWORD)a2;
  v10 = (uint64_t)(a3 - (_QWORD)a2) / 80;
  v97 = __src;
  v96 = __dst;
  v70 = __dst;
  if (v8 >= v10)
  {
    if (v9 > -80)
    {
      if (__dst != a2 || &a2[80 * v10] <= __dst)
      {
        memmove(__dst, a2, 80 * v10);
        __dst = v70;
      }
      v33 = &__dst[80 * v10];
      v95 = v33;
      v97 = v5;
      if (v6 >= v5 || v9 < 80)
        goto LABEL_44;
      v34 = (char *)(a3 - 80);
      v35 = v5;
      __dstb = v6;
      while (1)
      {
        v67 = v34;
        __srcb = v5;
        v63 = v33;
        v36 = *((_QWORD *)v33 - 10);
        v37 = *((_QWORD *)v33 - 9);
        v38 = v33 - 80;
        v39 = *((_QWORD *)v33 - 8);
        v40 = *((_QWORD *)v38 + 3);
        v41 = *((_QWORD *)v38 + 4);
        v42 = *((_QWORD *)v38 + 5);
        v43 = *((_QWORD *)v38 + 6);
        v44 = *((_QWORD *)v38 + 7);
        v45 = *((_QWORD *)v38 + 8);
        v46 = *((_QWORD *)v38 + 9);
        v85 = v36;
        v86 = v37;
        v87 = v39;
        v88 = v40;
        v89 = v41;
        v90 = v42;
        v91 = v43;
        v92 = v44;
        v93 = v45;
        v94 = v46;
        v47 = *((_QWORD *)v35 - 10);
        v48 = *((_QWORD *)v35 - 9);
        v35 -= 80;
        v49 = *((_QWORD *)v35 + 2);
        v50 = *((_QWORD *)v35 + 3);
        v51 = *((_QWORD *)v35 + 4);
        v52 = *((_QWORD *)v35 + 5);
        v53 = *((_QWORD *)v35 + 6);
        v54 = *((_QWORD *)v35 + 7);
        v56 = *((_QWORD *)v35 + 8);
        v55 = *((_QWORD *)v35 + 9);
        v75 = v47;
        v76 = v48;
        v77 = v49;
        v78 = v50;
        v79 = v51;
        v80 = v52;
        v81 = v53;
        v82 = v54;
        v83 = v56;
        v84 = v55;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v57 = a5(&v85, &v75);
        if (v74)
          goto LABEL_43;
        v58 = v57;
        v59 = v67 + 80;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v58 & 1) != 0)
        {
          v60 = v67;
          if (v59 != __srcb || v67 >= __srcb)
            memmove(v67, v35, 0x50uLL);
          v97 = v35;
          v61 = __dstb;
          v33 = v63;
        }
        else
        {
          v95 = v38;
          v60 = v67;
          if (v59 < v63 || v67 >= v63 || v59 != v63)
            memmove(v67, v38, 0x50uLL);
          v35 = __srcb;
          v33 = v38;
          v61 = __dstb;
        }
        if (v33 > v70)
        {
          v34 = v60 - 80;
          v5 = v35;
          if (v35 > v61)
            continue;
        }
        goto LABEL_44;
      }
    }
  }
  else if (v7 > -80)
  {
    if (__dst != __src || &__src[80 * v8] <= __dst)
    {
      memmove(__dst, __src, 80 * v8);
      __dst = v70;
    }
    v64 = &__dst[80 * v8];
    v95 = v64;
    if ((unint64_t)v5 >= a3 || v7 < 80)
      goto LABEL_44;
    while (1)
    {
      __dsta = v6;
      v11 = *((_QWORD *)v5 + 1);
      v12 = *((_QWORD *)v5 + 2);
      v13 = *((_QWORD *)v5 + 3);
      v14 = *((_QWORD *)v5 + 4);
      v15 = *((_QWORD *)v5 + 5);
      v16 = *((_QWORD *)v5 + 6);
      v17 = *((_QWORD *)v5 + 7);
      v18 = *((_QWORD *)v5 + 8);
      v19 = *((_QWORD *)v5 + 9);
      v71 = __dst;
      __srca = v5;
      v85 = *(_QWORD *)v5;
      v86 = v11;
      v87 = v12;
      v88 = v13;
      v89 = v14;
      v90 = v15;
      v91 = v16;
      v92 = v17;
      v93 = v18;
      v94 = v19;
      v20 = *((_QWORD *)__dst + 1);
      v21 = *((_QWORD *)__dst + 2);
      v22 = *((_QWORD *)__dst + 3);
      v23 = *((_QWORD *)__dst + 4);
      v24 = *((_QWORD *)__dst + 5);
      v25 = *((_QWORD *)__dst + 6);
      v26 = *((_QWORD *)__dst + 7);
      v27 = *((_QWORD *)__dst + 8);
      v28 = *((_QWORD *)__dst + 9);
      v75 = *(_QWORD *)__dst;
      v76 = v20;
      v77 = v21;
      v78 = v22;
      v79 = v23;
      v80 = v24;
      v81 = v25;
      v82 = v26;
      v83 = v27;
      v84 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = a5(&v85, &v75);
      if (v74)
        break;
      v30 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {
        v31 = __srca + 80;
        v32 = __dsta;
        if (__dsta < __srca || __dsta >= v31 || __dsta != __srca)
          memmove(__dsta, __srca, 0x50uLL);
        __dst = v71;
      }
      else
      {
        v32 = __dsta;
        v31 = __srca;
        if (__dsta != v71 || __dsta >= v71 + 80)
          memmove(__dsta, v71, 0x50uLL);
        v96 = v71 + 80;
        __dst = v71 + 80;
      }
      v6 = v32 + 80;
      v97 = v6;
      if (__dst < v64)
      {
        v5 = v31;
        if ((unint64_t)v31 < a3)
          continue;
      }
      goto LABEL_44;
    }
LABEL_43:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_44:
    sub_1BC503F4C((void **)&v97, &v96, &v95);
    return 1;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC4559D4(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  char *v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t result;
  char *v61;
  char *v62;
  char *v65;
  char *__dsta;
  char *__dstb;
  char *v68;
  char *v69;
  char *__srca;
  char *__srcb;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char *v91;
  const void *v92[2];
  char *v93;

  v5 = a2;
  v6 = __src;
  v7 = a2 - __src;
  v8 = (a2 - __src) / 72;
  v9 = a3 - (_QWORD)a2;
  v10 = (uint64_t)(a3 - (_QWORD)a2) / 72;
  v93 = __src;
  v92[0] = __dst;
  v68 = __dst;
  if (v8 >= v10)
  {
    if (v9 > -72)
    {
      v33 = 72 * v10;
      if (__dst != a2 || &a2[v33] <= __dst)
      {
        memmove(__dst, a2, 72 * v10);
        __dst = v68;
      }
      v34 = &__dst[v33];
      v91 = &__dst[v33];
      v93 = v5;
      if (v6 < v5 && v9 >= 72)
      {
        v35 = (char *)(a3 - 72);
        v36 = v5;
        __dstb = v6;
        while (1)
        {
          v65 = v35;
          __srcb = v5;
          v61 = v34;
          v38 = *((_QWORD *)v34 - 9);
          v37 = *((_QWORD *)v34 - 8);
          v34 -= 72;
          v39 = *((_QWORD *)v34 + 2);
          v40 = *((_QWORD *)v34 + 3);
          v41 = *((_QWORD *)v34 + 4);
          v42 = *((_QWORD *)v34 + 5);
          v43 = *((_QWORD *)v34 + 6);
          v44 = *((_QWORD *)v34 + 7);
          v45 = v34[64];
          v82 = v38;
          v83 = v37;
          v84 = v39;
          v85 = v40;
          v86 = v41;
          v87 = v42;
          v88 = v43;
          v89 = v44;
          v90 = v45;
          v46 = *((_QWORD *)v36 - 9);
          v47 = *((_QWORD *)v36 - 8);
          v36 -= 72;
          v48 = *((_QWORD *)v36 + 2);
          v49 = *((_QWORD *)v36 + 3);
          v50 = *((_QWORD *)v36 + 4);
          v51 = *((_QWORD *)v36 + 5);
          v52 = *((_QWORD *)v36 + 6);
          v53 = *((_QWORD *)v36 + 7);
          v54 = v36[64];
          v73 = v46;
          v74 = v47;
          v75 = v48;
          v76 = v49;
          v77 = v50;
          v78 = v51;
          v79 = v52;
          v80 = v53;
          v81 = v54;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v55 = a5(&v82, &v73);
          if (v72)
            goto LABEL_43;
          v56 = v55;
          v72 = 0;
          v57 = v65 + 72;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 & 1) != 0)
          {
            v58 = v65;
            if (v57 != __srcb || v65 >= __srcb)
              memmove(v65, v36, 0x48uLL);
            v93 = v36;
            v59 = __dstb;
            v34 = v61;
          }
          else
          {
            v91 = v34;
            v58 = v65;
            if (v57 < v61 || v65 >= v61)
            {
              memmove(v65, v34, 0x48uLL);
              v36 = __srcb;
            }
            else
            {
              v36 = __srcb;
              if (v57 != v61)
                memmove(v65, v34, 0x48uLL);
            }
            v59 = __dstb;
          }
          if (v34 > v68)
          {
            v35 = v58 - 72;
            v5 = v36;
            if (v36 > v59)
              continue;
          }
          break;
        }
      }
LABEL_42:
      sub_1BC504004((void **)&v93, v92, &v91);
      return 1;
    }
  }
  else if (v7 > -72)
  {
    v11 = 72 * v8;
    if (__dst != __src || &__src[v11] <= __dst)
    {
      memmove(__dst, __src, v11);
      __dst = v68;
    }
    v62 = &__dst[v11];
    v91 = &__dst[v11];
    if ((unint64_t)v5 < a3 && v7 >= 72)
    {
      while (1)
      {
        __dsta = v6;
        v12 = *((_QWORD *)v5 + 1);
        v13 = *((_QWORD *)v5 + 2);
        v14 = *((_QWORD *)v5 + 3);
        v15 = *((_QWORD *)v5 + 4);
        v16 = *((_QWORD *)v5 + 5);
        v17 = *((_QWORD *)v5 + 6);
        v18 = *((_QWORD *)v5 + 7);
        v69 = __dst;
        __srca = v5;
        v19 = v5[64];
        v82 = *(_QWORD *)v5;
        v83 = v12;
        v84 = v13;
        v85 = v14;
        v86 = v15;
        v87 = v16;
        v88 = v17;
        v89 = v18;
        v90 = v19;
        v20 = *((_QWORD *)__dst + 1);
        v21 = *((_QWORD *)__dst + 2);
        v22 = *((_QWORD *)__dst + 3);
        v23 = *((_QWORD *)__dst + 4);
        v24 = *((_QWORD *)__dst + 5);
        v25 = *((_QWORD *)__dst + 6);
        v26 = *((_QWORD *)__dst + 7);
        v27 = __dst[64];
        v73 = *(_QWORD *)__dst;
        v74 = v20;
        v75 = v21;
        v76 = v22;
        v77 = v23;
        v78 = v24;
        v79 = v25;
        v80 = v26;
        v81 = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28 = a5(&v82, &v73);
        if (v72)
          break;
        v29 = v28;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
        {
          v30 = __srca + 72;
          v31 = __dsta;
          if (__dsta < __srca || __dsta >= v30 || __dsta != __srca)
            memmove(__dsta, __srca, 0x48uLL);
          __dst = v69;
        }
        else
        {
          v31 = __dsta;
          v32 = v69;
          v30 = __srca;
          if (__dsta != v69)
          {
            memmove(__dsta, v69, 0x48uLL);
            v32 = v69;
          }
          __dst = v32 + 72;
          v92[0] = __dst;
        }
        v72 = 0;
        v6 = v31 + 72;
        v93 = v6;
        if (__dst < v62)
        {
          v5 = v30;
          if ((unint64_t)v30 < a3)
            continue;
        }
        goto LABEL_42;
      }
LABEL_43:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC504004((void **)&v93, v92, &v91);
      return 1;
    }
    goto LABEL_42;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC455F6C(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  char *v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t result;
  char *v61;
  unint64_t v62;
  char *v63;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  const void *v84[2];
  char *v85;

  v6 = v5;
  v7 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = (a2 - __src) / 48;
  v12 = a3 - (_QWORD)a2;
  v13 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v85 = __src;
  v84[0] = __dst;
  if (v11 < v13)
  {
    if (v10 > -48)
    {
      if (__dst != __src || &__src[48 * v11] <= __dst)
        memmove(__dst, __src, 48 * v11);
      v63 = &v7[48 * v11];
      v83 = v63;
      if ((unint64_t)v8 < a3 && v10 >= 48)
      {
        while (1)
        {
          v67 = v9;
          v69 = v8;
          v14 = *((_QWORD *)v8 + 1);
          v15 = *((_QWORD *)v8 + 2);
          v16 = *((_QWORD *)v8 + 3);
          v17 = *((_QWORD *)v8 + 4);
          v18 = *((_QWORD *)v8 + 5);
          v77 = *(_QWORD *)v8;
          v78 = v14;
          v79 = v15;
          v80 = v16;
          v81 = v17;
          v82 = v18;
          v19 = *((_QWORD *)v7 + 1);
          v20 = *((_QWORD *)v7 + 2);
          v21 = *((_QWORD *)v7 + 3);
          v22 = *((_QWORD *)v7 + 4);
          v23 = *((_QWORD *)v7 + 5);
          v71 = *(_QWORD *)v7;
          v72 = v19;
          v73 = v20;
          v74 = v21;
          v75 = v22;
          v76 = v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v24 = a5(&v77, &v71);
          if (v6)
            goto LABEL_47;
          v25 = v24;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v25 & 1) != 0)
          {
            v26 = v67;
            v27 = v69 + 48;
            if (v67 >= v69 && v67 < v27)
            {
              v6 = 0;
              if (v67 != v69)
              {
                v28 = *(_OWORD *)v69;
                v29 = *((_OWORD *)v69 + 2);
                *((_OWORD *)v67 + 1) = *((_OWORD *)v69 + 1);
                *((_OWORD *)v67 + 2) = v29;
                *(_OWORD *)v67 = v28;
              }
              goto LABEL_19;
            }
            v32 = *(_OWORD *)v69;
            v33 = *((_OWORD *)v69 + 2);
            *((_OWORD *)v67 + 1) = *((_OWORD *)v69 + 1);
            *((_OWORD *)v67 + 2) = v33;
            *(_OWORD *)v67 = v32;
          }
          else
          {
            v26 = v67;
            v27 = v69;
            if (v67 != v7)
            {
              v30 = *(_OWORD *)v7;
              v31 = *((_OWORD *)v7 + 2);
              *((_OWORD *)v67 + 1) = *((_OWORD *)v7 + 1);
              *((_OWORD *)v67 + 2) = v31;
              *(_OWORD *)v67 = v30;
            }
            v7 += 48;
            v84[0] = v7;
          }
          v6 = 0;
LABEL_19:
          v9 = v26 + 48;
          v85 = v9;
          if (v7 < v63)
          {
            v8 = v27;
            if ((unint64_t)v27 < a3)
              continue;
          }
          break;
        }
      }
LABEL_46:
      sub_1BC5040C0((void **)&v85, v84, &v83);
      return 1;
    }
LABEL_49:
    result = sub_1BC62D418();
    __break(1u);
    return result;
  }
  if (v12 <= -48)
    goto LABEL_49;
  if (__dst != a2 || &a2[48 * v13] <= __dst)
    memmove(__dst, a2, 48 * v13);
  v34 = &v7[48 * v13];
  v83 = v34;
  v85 = v8;
  if (v9 >= v8 || v12 < 48)
    goto LABEL_46;
  v61 = v7;
  v35 = (char *)(a3 - 48);
  v36 = v8;
  v68 = v9;
  while (1)
  {
    v66 = v35;
    v70 = v8;
    v62 = (unint64_t)v34;
    v37 = *((_QWORD *)v34 - 6);
    v39 = *((_QWORD *)v34 - 5);
    v38 = v34 - 48;
    v40 = *((_QWORD *)v34 - 4);
    v41 = *((_QWORD *)v34 - 3);
    v42 = *((_QWORD *)v34 - 2);
    v43 = *((_QWORD *)v38 + 5);
    v77 = v37;
    v78 = v39;
    v79 = v40;
    v80 = v41;
    v81 = v42;
    v82 = v43;
    v44 = *((_QWORD *)v36 - 6);
    v45 = *((_QWORD *)v36 - 5);
    v36 -= 48;
    v46 = *((_QWORD *)v36 + 2);
    v47 = *((_QWORD *)v36 + 3);
    v48 = *((_QWORD *)v36 + 4);
    v49 = *((_QWORD *)v36 + 5);
    v71 = v44;
    v72 = v45;
    v73 = v46;
    v74 = v47;
    v75 = v48;
    v76 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = a5(&v77, &v71);
    if (v6)
      break;
    v51 = v50;
    v52 = v66 + 48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v51 & 1) != 0)
    {
      v53 = v66;
      v34 = (char *)v62;
      if (v52 != v70 || v66 >= v70)
      {
        v54 = *(_OWORD *)v36;
        v55 = *((_OWORD *)v36 + 2);
        *((_OWORD *)v66 + 1) = *((_OWORD *)v36 + 1);
        *((_OWORD *)v66 + 2) = v55;
        *(_OWORD *)v66 = v54;
      }
      v85 = v36;
    }
    else
    {
      v83 = v38;
      v36 = v70;
      v53 = v66;
      if ((unint64_t)v52 >= v62 && (unint64_t)v66 < v62)
      {
        v6 = 0;
        if (v52 != (char *)v62)
        {
          v56 = *(_OWORD *)v38;
          v57 = *((_OWORD *)v38 + 2);
          *((_OWORD *)v66 + 1) = *((_OWORD *)v38 + 1);
          *((_OWORD *)v66 + 2) = v57;
          *(_OWORD *)v66 = v56;
        }
        v34 = v38;
        goto LABEL_42;
      }
      v58 = *(_OWORD *)v38;
      v59 = *((_OWORD *)v38 + 2);
      *((_OWORD *)v66 + 1) = *((_OWORD *)v38 + 1);
      *((_OWORD *)v66 + 2) = v59;
      *(_OWORD *)v66 = v58;
      v34 = v38;
    }
    v6 = 0;
LABEL_42:
    if (v36 > v68)
    {
      v35 = v53 - 48;
      v8 = v36;
      if (v34 > v61)
        continue;
    }
    goto LABEL_46;
  }
LABEL_47:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC5040C0((void **)&v85, v84, &v83);
  return 1;
}

uint64_t sub_1BC45647C(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(__int128 *, __int128 *), uint64_t a6, void (*a7)(char **, _QWORD *, char **))
{
  char *v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  char v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char *v34;
  unint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char *v51;
  char *v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t result;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v69;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  _QWORD v85[2];
  char *v86;

  v7 = a2;
  v8 = __src;
  v9 = a2 - __src;
  v10 = (a2 - __src) / 56;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 56;
  v86 = __src;
  v85[0] = __dst;
  v64 = __dst;
  if (v10 < v12)
  {
    if (v9 > -56)
    {
      if (__dst != __src || &__src[56 * v10] <= __dst)
      {
        memmove(__dst, __src, 56 * v10);
        __dst = v64;
      }
      v66 = &__dst[56 * v10];
      v84 = v66;
      if ((unint64_t)v7 < a3 && v9 >= 56)
      {
        v63 = (char *)v85[0];
        v13 = v86;
        while (1)
        {
          v65 = v13;
          v14 = v8;
          v15 = *((_QWORD *)v7 + 2);
          v16 = v7[24];
          v17 = *((_QWORD *)v7 + 4);
          v18 = *((_QWORD *)v7 + 5);
          v19 = *((_QWORD *)v7 + 6);
          v20 = v7;
          v78 = *(_OWORD *)v7;
          v79 = v15;
          v80 = v16;
          v81 = v17;
          v82 = v18;
          v83 = v19;
          v21 = *((_QWORD *)__dst + 2);
          v22 = __dst[24];
          v23 = *((_QWORD *)__dst + 4);
          v24 = *((_QWORD *)__dst + 5);
          v25 = *((_QWORD *)__dst + 6);
          v26 = __dst;
          v72 = *(_OWORD *)__dst;
          v73 = v21;
          v74 = v22;
          v75 = v23;
          v76 = v24;
          v77 = v25;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v27 = a5(&v78, &v72);
          if (v71)
          {
            v85[0] = v63;
            v86 = v65;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a7(&v86, v85, &v84);
            return 1;
          }
          v28 = v27;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v28 & 1) != 0)
            break;
          __dst = v26 + 56;
          v30 = v26;
          v29 = v20;
          v63 = v26 + 56;
          if (v14 != v26)
            goto LABEL_18;
LABEL_19:
          v13 = v14 + 56;
          if (__dst < v66)
          {
            v7 = v29;
            v8 = v14 + 56;
            if ((unint64_t)v29 < a3)
              continue;
          }
          v85[0] = v63;
          v86 = v14 + 56;
          goto LABEL_41;
        }
        v29 = v20 + 56;
        __dst = v26;
        if (v14 < v20 || v14 >= v29)
        {
          v30 = v20;
        }
        else
        {
          v30 = v20;
          if (v14 == v20)
            goto LABEL_19;
        }
LABEL_18:
        v31 = *(_OWORD *)v30;
        v32 = *((_OWORD *)v30 + 1);
        v33 = *((_OWORD *)v30 + 2);
        *((_QWORD *)v14 + 6) = *((_QWORD *)v30 + 6);
        *((_OWORD *)v14 + 1) = v32;
        *((_OWORD *)v14 + 2) = v33;
        *(_OWORD *)v14 = v31;
        goto LABEL_19;
      }
LABEL_41:
      a7(&v86, v85, &v84);
      return 1;
    }
    goto LABEL_45;
  }
  if (v11 <= -56)
  {
LABEL_45:
    result = sub_1BC62D418();
    __break(1u);
    return result;
  }
  if (__dst != a2 || &a2[56 * v12] <= __dst)
  {
    memmove(__dst, a2, 56 * v12);
    __dst = v64;
  }
  v34 = &__dst[56 * v12];
  v84 = v34;
  v86 = v7;
  if (v8 >= v7 || v11 < 56)
    goto LABEL_41;
  v62 = v8;
  v35 = a3 - 56;
  v36 = v7;
  while (1)
  {
    v67 = v34;
    v69 = v7;
    v37 = *(_OWORD *)(v34 - 56);
    v34 -= 56;
    v38 = *((_QWORD *)v34 + 2);
    v39 = v34[24];
    v40 = *((_QWORD *)v34 + 4);
    v41 = *((_QWORD *)v34 + 5);
    v42 = *((_QWORD *)v34 + 6);
    v78 = v37;
    v79 = v38;
    v80 = v39;
    v81 = v40;
    v82 = v41;
    v83 = v42;
    v43 = *(_OWORD *)(v36 - 56);
    v36 -= 56;
    v44 = *((_QWORD *)v36 + 2);
    v45 = v36[24];
    v46 = *((_QWORD *)v36 + 4);
    v47 = *((_QWORD *)v36 + 5);
    v48 = *((_QWORD *)v36 + 6);
    v72 = v43;
    v73 = v44;
    v74 = v45;
    v75 = v46;
    v76 = v47;
    v77 = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v49 = a5(&v78, &v72);
    if (v71)
      break;
    v50 = v49;
    v51 = (char *)(v35 + 56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v50 & 1) != 0)
    {
      v34 = v67;
      v52 = v64;
      v53 = v62;
      if (v51 != v69 || v35 >= (unint64_t)v69)
      {
        v54 = *(_OWORD *)v36;
        v55 = *((_OWORD *)v36 + 1);
        v56 = *((_OWORD *)v36 + 2);
        *(_QWORD *)(v35 + 48) = *((_QWORD *)v36 + 6);
        *(_OWORD *)(v35 + 16) = v55;
        *(_OWORD *)(v35 + 32) = v56;
        *(_OWORD *)v35 = v54;
      }
      v86 = v36;
    }
    else
    {
      v84 = v34;
      v52 = v64;
      v53 = v62;
      v36 = v69;
      if (v51 < v67 || v35 >= (unint64_t)v67 || v51 != v67)
      {
        v57 = *(_OWORD *)v34;
        v58 = *((_OWORD *)v34 + 1);
        v59 = *((_OWORD *)v34 + 2);
        *(_QWORD *)(v35 + 48) = *((_QWORD *)v34 + 6);
        *(_OWORD *)(v35 + 16) = v58;
        *(_OWORD *)(v35 + 32) = v59;
        *(_OWORD *)v35 = v57;
      }
    }
    if (v34 > v52)
    {
      v35 -= 56;
      v7 = v36;
      if (v36 > v53)
        continue;
    }
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a7(&v86, v85, &v84);
  return 1;
}

uint64_t sub_1BC456970(char *__src, char *a2, unint64_t a3, char *a4, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char *v33;
  unint64_t v34;
  char *v35;
  uint64_t result;
  char *v37;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;

  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v47 = __src;
  v46 = a4;
  if (v10 >= v12 >> 4)
  {
    if (v11 <= -16)
      goto LABEL_50;
    if (a4 != a2 || &a2[16 * v13] <= a4)
      memmove(a4, a2, 16 * v13);
    v23 = &a4[16 * v13];
    v45 = v23;
    v47 = v6;
    if (v7 >= v6 || v11 < 16)
    {
LABEL_49:
      sub_1BC503D2C((void **)&v47, (const void **)&v46, &v45);
      return 1;
    }
    v24 = (char *)(a3 - 16);
    v25 = v6;
    v37 = v7;
    while (1)
    {
      v26 = (unint64_t)v23;
      v28 = *((_QWORD *)v23 - 1);
      v27 = v23 - 16;
      v43 = *((_QWORD *)v23 - 2);
      v44 = v28;
      v29 = *((_QWORD *)v25 - 2);
      v30 = *((_QWORD *)v25 - 1);
      v25 -= 16;
      v41 = v29;
      v42 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31 = a5(&v43, &v41);
      if (v5)
        goto LABEL_48;
      v32 = v31;
      v33 = v24 + 16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v32 & 1) != 0)
      {
        v23 = (char *)v26;
        if (v33 != v6 || v24 >= v6)
          *(_OWORD *)v24 = *(_OWORD *)v25;
        v47 = v25;
      }
      else
      {
        v45 = v27;
        if ((unint64_t)v33 >= v26 && (unint64_t)v24 < v26)
        {
          v34 = (unint64_t)v37;
          if (v33 != (char *)v26)
            *(_OWORD *)v24 = *(_OWORD *)v27;
          v25 = v6;
          v23 = v27;
          v35 = a4;
          v5 = 0;
          goto LABEL_45;
        }
        *(_OWORD *)v24 = *(_OWORD *)v27;
        v25 = v6;
        v23 = v27;
      }
      v35 = a4;
      v5 = 0;
      v34 = (unint64_t)v37;
LABEL_45:
      if ((unint64_t)v25 > v34)
      {
        v24 -= 16;
        v6 = v25;
        if (v23 > v35)
          continue;
      }
      goto LABEL_49;
    }
  }
  if (v8 > -16)
  {
    v14 = a4;
    if (a4 != __src || &__src[16 * v10] <= a4)
      memmove(a4, __src, 16 * v10);
    v15 = &a4[16 * v10];
    v45 = v15;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      while (1)
      {
        v16 = v7;
        v17 = *((_QWORD *)v6 + 1);
        v43 = *(_QWORD *)v6;
        v44 = v17;
        v18 = *((_QWORD *)v14 + 1);
        v41 = *(_QWORD *)v14;
        v42 = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = a5(&v43, &v41);
        if (v5)
          break;
        v20 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
        {
          v21 = v6 + 16;
          v22 = v16;
          if (v16 < v6 || v16 >= v21)
          {
            *(_OWORD *)v16 = *(_OWORD *)v6;
          }
          else if (v16 != v6)
          {
            *(_OWORD *)v16 = *(_OWORD *)v6;
          }
        }
        else
        {
          v22 = v16;
          if (v16 != v14)
            *(_OWORD *)v16 = *(_OWORD *)v14;
          v14 += 16;
          v46 = v14;
          v21 = v6;
        }
        v7 = v22 + 16;
        v47 = v7;
        if (v14 < v15)
        {
          v6 = v21;
          if ((unint64_t)v21 < a3)
            continue;
        }
        goto LABEL_49;
      }
LABEL_48:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_49;
  }
LABEL_50:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC456CFC(uint64_t a1, void (*a2)(_QWORD *__return_ptr, _OWORD *, uint64_t), uint64_t a3, uint64_t a4, uint64_t (*a5)(BOOL, unint64_t, uint64_t), uint64_t (*a6)(uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  _QWORD v44[3];
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[4];
  uint64_t v50;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    return v7;
  v50 = MEMORY[0x1E0DEE9D8];
  a5(0, v6, 0);
  v7 = v50;
  result = a6(a1);
  v12 = result;
  v13 = 0;
  v14 = a1 + 64;
  v34 = v6;
  v35 = v11;
  v36 = a1 + 64;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(_BYTE *)(a1 + 32))
  {
    v17 = (unint64_t)v12 >> 6;
    if ((*(_QWORD *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v11)
      goto LABEL_24;
    v38 = v13;
    v18 = *(_QWORD *)(a1 + 56);
    v19 = (_OWORD *)(*(_QWORD *)(a1 + 48) + 48 * v12);
    v21 = v19[1];
    v20 = v19[2];
    v49[0] = *v19;
    v49[1] = v21;
    v49[2] = v20;
    v22 = *(_QWORD *)(v18 + 8 * v12);
    sub_1BC456FD0((uint64_t)v49);
    swift_bridgeObjectRetain();
    a2(v44, v49, v22);
    v23 = v44[1];
    v43 = v44[0];
    v24 = v44[2];
    v42 = v45;
    v40 = v47;
    v41 = v46;
    v39 = v48;
    sub_1BC3CC428((uint64_t)v49);
    result = swift_bridgeObjectRelease();
    v50 = v7;
    v25 = *(_QWORD *)(v7 + 16);
    v26 = *(_QWORD *)(v7 + 24);
    if (v25 >= v26 >> 1)
    {
      result = a5(v26 > 1, v25 + 1, 1);
      v7 = v50;
    }
    *(_QWORD *)(v7 + 16) = v25 + 1;
    v27 = v7 + 56 * v25;
    *(_QWORD *)(v27 + 32) = v43;
    *(_QWORD *)(v27 + 40) = v23;
    *(_QWORD *)(v27 + 48) = v24;
    *(_BYTE *)(v27 + 56) = v42;
    *(_QWORD *)(v27 + 64) = v41;
    *(_QWORD *)(v27 + 72) = v40;
    *(_QWORD *)(v27 + 80) = v39;
    v15 = 1 << *(_BYTE *)(a1 + 32);
    if (v12 >= v15)
      goto LABEL_25;
    v14 = a1 + 64;
    v28 = *(_QWORD *)(v36 + 8 * v17);
    if ((v28 & (1 << v12)) == 0)
      goto LABEL_26;
    v11 = v35;
    if (*(_DWORD *)(a1 + 36) != v35)
      goto LABEL_27;
    v29 = v28 & (-2 << (v12 & 0x3F));
    if (v29)
    {
      v15 = __clz(__rbit64(v29)) | v12 & 0xFFFFFFFFFFFFFFC0;
      v16 = v34;
    }
    else
    {
      v30 = v17 + 1;
      v31 = (unint64_t)(v15 + 63) >> 6;
      v16 = v34;
      if (v17 + 1 < v31)
      {
        v32 = *(_QWORD *)(v36 + 8 * v30);
        if (v32)
        {
LABEL_20:
          v15 = __clz(__rbit64(v32)) + (v30 << 6);
        }
        else
        {
          while (v31 - 2 != v17)
          {
            v32 = *(_QWORD *)(a1 + 80 + 8 * v17++);
            if (v32)
            {
              v30 = v17 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v13 = v38 + 1;
    v12 = v15;
    if (v38 + 1 == v16)
      return v7;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

double sub_1BC456FAC@<D0>(__n128 *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v3;
  double result;

  *(_QWORD *)&result = sub_1BC44F18C(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3).n128_u64[0];
  return result;
}

BOOL sub_1BC456FB4(_OWORD *a1, _OWORD *a2)
{
  return sub_1BC45719C(a1, a2);
}

uint64_t sub_1BC456FD0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC456FF8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL sub_1BC45701C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1BC44F544(*a1, a1[1], *a2, a2[1], *(_QWORD *)(v2 + 16));
}

double sub_1BC457048@<D0>(__n128 *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v3;
  double result;

  *(_QWORD *)&result = sub_1BC44EEF4(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3).n128_u64[0];
  return result;
}

void sub_1BC457054(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BC3B90E4(255, a3, a4, a5);
    v6 = sub_1BC62CFE0();
    if (!v7)
      atomic_store(v6, a2);
  }
}

double sub_1BC4570AC@<D0>(__n128 *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v3;
  double result;

  *(_QWORD *)&result = sub_1BC44EC30(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3).n128_u64[0];
  return result;
}

BOOL sub_1BC4570B8(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v9[4];
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = a1[3];
  v13 = a1[2];
  v14 = v4;
  v15 = *((_BYTE *)a1 + 64);
  v5 = a1[1];
  v11 = *a1;
  v12 = v5;
  v6 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v6;
  v10 = *(_BYTE *)(a2 + 64);
  v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  return sub_1BC40CA38(v9, v3) == -1;
}

double sub_1BC45712C@<D0>(__n128 *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v3;
  double result;

  *(_QWORD *)&result = sub_1BC44E7E8(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3).n128_u64[0];
  return result;
}

BOOL sub_1BC457138(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v10[5];
  __int128 v11[5];

  v3 = *(_QWORD *)(v2 + 16);
  v4 = a1[3];
  v10[2] = a1[2];
  v10[3] = v4;
  v5 = a1[4];
  v6 = a1[1];
  v10[0] = *a1;
  v10[1] = v6;
  v7 = a2[3];
  v11[2] = a2[2];
  v11[3] = v7;
  v11[4] = a2[4];
  v8 = *a2;
  v11[1] = a2[1];
  v10[4] = v5;
  v11[0] = v8;
  return sub_1BC44F3E8(v10, v11, v3);
}

double sub_1BC457194@<D0>(__n128 *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v3;
  double result;

  *(_QWORD *)&result = sub_1BC44E56C(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3).n128_u64[0];
  return result;
}

BOOL sub_1BC45719C(_OWORD *a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[6];

  v3 = *(_QWORD *)(v2 + 16);
  v4 = a1[1];
  v7[3] = *a1;
  v7[4] = v4;
  v7[5] = a1[2];
  v5 = a2[1];
  v7[0] = *a2;
  v7[1] = v5;
  v7[2] = a2[2];
  return sub_1BC40BBCC((uint64_t)v7, v3) == -1;
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)_s13ConfigurationVMa();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1BC62A8D4();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = v3 + v1[5];
  v7 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  v8 = v3 + v1[9];
  v9 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  v5(v3 + v1[12], v4);
  return swift_deallocObject();
}

uint64_t sub_1BC457320(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v8;

  sub_1BC457054(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1BC457384@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;

  v3 = objc_msgSend(*(id *)(v1 + qword_1EF42C0D0), sel_healthStore);
  v4 = objc_msgSend(v3, sel_profileIdentifier);

  sub_1BC62CB90();
  v5 = type metadata accessor for HealthRecordsFeedDataSourceProvider();
  v6 = swift_allocObject();
  sub_1BC34E718(&v9, v6 + 16);
  *(_QWORD *)(v6 + 56) = v4;
  a1[3] = v5;
  result = sub_1BC379B20(&qword_1EF430548, v7, (uint64_t (*)(uint64_t))type metadata accessor for HealthRecordsFeedDataSourceProvider, (uint64_t)&protocol conformance descriptor for HealthRecordsFeedDataSourceProvider);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t HealthRecordsFeedDataSourceProvider.__allocating_init(sourceProfile:store:)(uint64_t a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1BC34E718(a2, v4 + 16);
  *(_QWORD *)(v4 + 56) = a1;
  return v4;
}

id sub_1BC4574A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalAllHealthRecordsFeedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC4574DC()
{
  qword_1EF430420 = 0x4036000000000000;
}

uint64_t HealthRecordsFeedDataSourceProvider.init(sourceProfile:store:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;

  sub_1BC34E718(a2, v2 + 16);
  *(_QWORD *)(v2 + 56) = a1;
  return v2;
}

uint64_t sub_1BC457520()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC3792D8();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v0 + 32) = sub_1BC457568();
  *(_QWORD *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1BC457568()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void (*v16)(_QWORD *, _QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  void *v21;
  void (*v22)(_QWORD *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD v27[4];
  id v28;

  v1 = sub_1BC62B12C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v27 - v6 + 16;
  v28 = v0;
  swift_beginAccess();
  sub_1BC34E674((uint64_t)(v0 + 2), (uint64_t)v27);
  __swift_project_boxed_opaque_existential_1Tm(v27, v27[3]);
  v8 = (void *)sub_1BC62A9D0();
  sub_1BC457A80();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC639590;
  v10 = (void *)v0[7];
  *(_QWORD *)(v9 + 32) = v10;
  v11 = type metadata accessor for HealthRecordsFeedDataSourceProvider();
  v13 = sub_1BC379B20(&qword_1EF430550, v12, (uint64_t (*)(uint64_t))type metadata accessor for HealthRecordsFeedDataSourceProvider, (uint64_t)&protocol conformance descriptor for HealthRecordsFeedDataSourceProvider);
  v14 = v10;
  v15 = MEMORY[0x1BCCEFFC4](v8, v9, v11, v13);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  sub_1BC62B0FC();
  v16 = (void (*)(_QWORD *, _QWORD))sub_1BC62B114();
  v18 = v17;
  v19 = sub_1BC62B0B4();
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
  if (v20(v18, 1, v19))
  {
    v16(v27, 0);
  }
  else
  {
    v26 = v15;
    swift_getKeyPath();
    v21 = (void *)objc_opt_self();
    if (qword_1EF4285C8 != -1)
      swift_once();
    v28 = objc_msgSend(v21, sel_absoluteDimension_, *(double *)&qword_1EF430420);
    sub_1BC62B0A8();
    v16(v27, 0);
  }
  v22 = (void (*)(_QWORD *, _QWORD))sub_1BC62B114();
  if (!v20(v23, 1, v19))
  {
    swift_getKeyPath();
    v28 = objc_msgSend((id)objc_opt_self(), sel_absoluteDimension_, 0.0);
    sub_1BC62B0A8();
  }
  v22(v27, 0);
  sub_1BC379AA4();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  v24 = sub_1BC62AF34();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  sub_1BC379B20((unint64_t *)&qword_1EF42A240, 255, (uint64_t (*)(uint64_t))sub_1BC379AA4, MEMORY[0x1E0D2B7F8]);
  return v24;
}

uint64_t HealthRecordsFeedDataSourceProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return v0;
}

uint64_t HealthRecordsFeedDataSourceProvider.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1BC457900()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC3792D8();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v0 + 32) = sub_1BC457568();
  *(_QWORD *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1BC45794C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 16;
  swift_beginAccess();
  return sub_1BC34E674(v3, a2);
}

uint64_t type metadata accessor for InternalAllHealthRecordsFeedViewController()
{
  uint64_t result;

  result = qword_1EF430428;
  if (!qword_1EF430428)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC4579D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC457A14()
{
  return type metadata accessor for InternalAllHealthRecordsFeedViewController();
}

uint64_t type metadata accessor for HealthRecordsFeedDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for HealthRecordsFeedDataSourceProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthRecordsFeedDataSourceProvider.store.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of HealthRecordsFeedDataSourceProvider.store.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of HealthRecordsFeedDataSourceProvider.store.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of HealthRecordsFeedDataSourceProvider.__allocating_init(sourceProfile:store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of HealthRecordsFeedDataSourceProvider.selectedDataSources(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

void sub_1BC457A80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42A228)
  {
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42A228);
  }
}

void sub_1BC457AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1BC62C4D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC35A280();
  *v5 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(v1 + 64);
    if (v7)
    {
      v8 = *(void **)(v1 + 104);
      v9 = *(void **)(v7 + qword_1EF433DD0);
      *(_QWORD *)(v7 + qword_1EF433DD0) = v8;
      v10 = v8;
      swift_retain();
      sub_1BC4EB6A4(v9);
      swift_release();

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC457BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v13 - v2;
  v4 = sub_1BC62C95C();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  swift_retain();
  if (v7 == 1)
  {
    sub_1BC377E3C((uint64_t)v3, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
    v8 = 0;
    v9 = 0;
  }
  else
  {
    sub_1BC62C950();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v8 = sub_1BC62C908();
      v9 = v10;
      swift_unknownObjectRelease();
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
  }
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = &unk_1EF4307B8;
  *(_QWORD *)(v11 + 24) = v6;
  if (v9 | v8)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v8;
    v13[3] = v9;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1BC457DD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v1 = v0;
  v2 = *(void **)(*(_QWORD *)(v0 + 24) + 16);
  type metadata accessor for PatientDetailsDataSource();
  swift_allocObject();
  v3 = v2;
  v4 = sub_1BC4EC170(v3);

  v5 = *(void **)(v1 + 104);
  v6 = *(void **)(v4 + qword_1EF433DD0);
  *(_QWORD *)(v4 + qword_1EF433DD0) = v5;
  v7 = v5;
  sub_1BC4EB6A4(v6);

  *(_QWORD *)(v1 + 64) = v4;
  swift_retain();
  swift_release();
  return v4;
}

uint64_t sub_1BC457E88()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  id v7;

  v1 = (_QWORD *)v0;
  v2 = objc_msgSend(*(id *)(v0 + 16), sel_provenance);
  v3 = objc_msgSend(v2, sel_type);

  if (v3)
    return 0;
  v6 = (void *)v1[2];
  v5 = v1[3];
  type metadata accessor for DownloadDetailsDataSource();
  swift_allocObject();
  v7 = v6;
  swift_retain();
  v1[9] = sub_1BC515A9C(v7, v5);
  swift_release();
  result = v1[9];
  if (result)
    return swift_retain();
  return result;
}

id sub_1BC457F4C()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = v0;
  if (qword_1EF4287E0 != -1)
    swift_once();
  swift_beginAccess();
  result = 0;
  if (byte_1EF438CA0 == 1)
  {
    result = objc_msgSend(*(id *)(v0 + 16), sel_gateway);
    if (result)
    {
      v3 = result;
      if ((_sSo17HKClinicalGatewayC15HealthRecordsUIE29supportsSharingToProviderObjCSbvg_0() & 1) != 0)
      {
        v5 = *(void **)(v0 + 16);
        v4 = *(_QWORD *)(v0 + 24);
        type metadata accessor for SharingDataSource(0);
        swift_allocObject();
        v6 = v5;
        swift_retain();
        *(_QWORD *)(v1 + 80) = sub_1BC5EEFA0(v6, v4);
        swift_release();
        v7 = *(void (**)(uint64_t))(v1 + 88);
        if (v7)
        {
          sub_1BC38F084(*(_QWORD *)(v1 + 88));
          v8 = swift_retain();
          v7(v8);
          sub_1BC36D770((uint64_t)v7);
          swift_release();
        }

        result = *(id *)(v1 + 80);
        if (result)
          return (id)swift_retain();
      }
      else
      {

        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BC4580B4(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  uint64_t result;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;

  v2 = v1;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - v5;
  v7 = sub_1BC62C4D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC35A280();
  v11 = a1;
  *v10 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  LOBYTE(a1) = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((a1 & 1) != 0)
  {
    v13 = (void *)v2[2];
    v2[2] = v11;

    if (v2[4])
    {
      v14 = *(void **)(v2[3] + 16);
      swift_retain();
      v15 = objc_msgSend(v14, sel_clinicalSourcesDataProvider);
      sub_1BC5AC800(v11, v15);
      swift_release();

    }
    v16 = v2[7];
    if (v16)
    {
      v17 = sub_1BC62C95C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
      v18 = (_QWORD *)swift_allocObject();
      v18[2] = 0;
      v18[3] = 0;
      v18[4] = v16;
      v18[5] = v11;
      swift_retain_n();
      v19 = v11;
      sub_1BC5C2784((uint64_t)v6, (uint64_t)&unk_1EF4307A8, (uint64_t)v18);
      swift_release();
      swift_release();
    }
    if (v2[9])
    {
      swift_retain();
      sub_1BC515FB8(v11);
      swift_release();
    }
    if (v2[10])
    {
      swift_retain();
      sub_1BC5EFF28(v11);
      swift_release();
    }
    return sub_1BC457BEC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC4582F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(*(id *)(v1 + 16), sel_identifier);
  sub_1BC62A79C();

  v8 = (void *)sub_1BC62A784();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = objc_msgSend(v6, sel__privateSourceForClinicalAccountIdentifier_name_, v8, 0);

  v10 = objc_msgSend(*(id *)(*(_QWORD *)(v1 + 24) + 16), sel_clinicalSourcesDataProvider);
  aBlock[4] = sub_1BC459AFC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3FF57C;
  aBlock[3] = &block_descriptor_28;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_fetchAccountOwnerForSource_completion_, v9, v11);
  _Block_release(v11);

}

uint64_t sub_1BC458478(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v4 = sub_1BC62C47C();
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62C4AC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35A280();
  v11 = (void *)sub_1BC62CC74();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_1BC459B48;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_14_0;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1BC458684(uint64_t a1, unint64_t a2)
{
  char *v4;
  char *v5;
  char *v6;
  void *v7;
  char *v8;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = (char *)sub_1BC62D3B8();
    if (!v4)
      goto LABEL_9;
  }
  else
  {
    v4 = *(char **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      v7 = *(void **)(a1 + 104);
      *(_QWORD *)(a1 + 104) = v4;
      v8 = v4;

      sub_1BC457AE4();
      return;
    }
  }
  v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    v6 = (char *)MEMORY[0x1BCCF24CC](v5, a2);
    goto LABEL_8;
  }
  if (((unint64_t)v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v5 < *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = (char *)*(id *)(a2 + 8 * (_QWORD)v5 + 32);
LABEL_8:
    v4 = v6;
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1BC458768()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BC36D770(*(_QWORD *)(v0 + 88));

  return v0;
}

uint64_t sub_1BC4587D4()
{
  sub_1BC458768();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalAccountDetailsDataSourceProvider()
{
  return objc_opt_self();
}

_QWORD *sub_1BC458814()
{
  return sub_1BC4590A0();
}

uint64_t sub_1BC458834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a4;
  v5 = sub_1BC62BB34();
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC458894()
{
  _QWORD *v0;
  void *v1;
  id v2;
  _QWORD *v3;

  v1 = *(void **)(v0[8] + 16);
  v0[12] = v1;
  v2 = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[13] = v3;
  *v3 = v0;
  v3[1] = sub_1BC458900;
  return ClinicalAccountManager.newerAccount(of:)((uint64_t)v2);
}

uint64_t sub_1BC458900(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = *(void **)(v4 + 96);
    *(_QWORD *)(v4 + 120) = a1;

  }
  return swift_task_switch();
}

uint64_t sub_1BC45897C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (void *)v0[15];
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_title);
    v3 = sub_1BC62C680();
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  v0[16] = v3;
  v0[17] = v5;
  sub_1BC62C944();
  v0[18] = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC458A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 128);
  swift_release();
  sub_1BC458D3C(v2, v1);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BC458A8C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC458AC4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 112);

  sub_1BC62BAF8();
  v2 = v1;
  v3 = v1;
  v4 = sub_1BC62BB28();
  v5 = sub_1BC62CAC4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 72);
    v22 = *(_QWORD *)(v0 + 88);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v23 = v8;
    *(_QWORD *)(v0 + 48) = v6;
    v9 = v6;
    v10 = v6;
    sub_1BC3B9914(0, (unint64_t *)&qword_1ED6A59C0);
    sub_1BC62D5D4();
    v11 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1BC62D088();
    swift_unknownObjectRelease();
    v12 = sub_1BC62C6E0();
    v14 = v13;

    *(_QWORD *)(v0 + 56) = sub_1BC4991F0(v12, v14, &v23);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v4, v5, "Failed to fetch newer accounts: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v8, -1, -1);
    MEMORY[0x1BCCF36A8](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    v15 = *(void **)(v0 + 112);
    v17 = *(_QWORD *)(v0 + 80);
    v16 = *(_QWORD *)(v0 + 88);
    v18 = *(_QWORD *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC458D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  result = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - v8;
  if (a2)
  {
    v10 = sub_1BC62A820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    sub_1BC3B98BC(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 64) = sub_1BC3644C0();
    *(_QWORD *)(v11 + 32) = a1;
    *(_QWORD *)(v11 + 40) = a2;
    v12 = qword_1ED6A4888;
    swift_bridgeObjectRetain();
    if (v12 != -1)
      swift_once();
    v13 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    v14 = sub_1BC62C6A4();
    v16 = v15;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC377E3C((uint64_t)v9, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    v17 = *(_QWORD *)(v3 + 40);
    if (v17)
    {
      v18 = (uint64_t *)(v17 + qword_1EF42F818);
      v19 = *(_QWORD *)(v17 + qword_1EF42F818);
      v20 = *(_QWORD *)(v17 + qword_1EF42F818 + 8);
      *v18 = v14;
      v18[1] = v16;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BC433554(v19, v20);
      sub_1BC430800();
      swift_release();
    }
    result = swift_bridgeObjectRelease();
    v21 = *(_QWORD *)(v3 + 48);
    if (v21)
    {
      v22 = *(_QWORD *)(v21 + qword_1EF42F818);
      v23 = *(_QWORD *)(v21 + qword_1EF42F818 + 8);
      *(_OWORD *)(v21 + qword_1EF42F818) = xmmword_1BC6396A0;
      swift_retain();
      sub_1BC433554(v22, v23);
      sub_1BC430800();
      return swift_release();
    }
  }
  else
  {
    v24 = *(_QWORD *)(v3 + 40);
    if (v24)
    {
      v25 = *(_QWORD *)(v24 + qword_1EF42F818);
      v26 = *(_QWORD *)(v24 + qword_1EF42F818 + 8);
      *(_OWORD *)(v24 + qword_1EF42F818) = xmmword_1BC6396A0;
      swift_retain();
      sub_1BC433554(v25, v26);
      sub_1BC430800();
      result = swift_release();
    }
    v27 = *(_QWORD *)(v3 + 48);
    if (v27)
    {
      v28 = *(_QWORD *)(v27 + qword_1EF42F818);
      v29 = *(_QWORD *)(v27 + qword_1EF42F818 + 8);
      *(_OWORD *)(v27 + qword_1EF42F818) = xmmword_1BC639690;
      swift_retain();
      sub_1BC433554(v28, v29);
      sub_1BC430800();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BC459058(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v3;

  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  v3 = a1;
  swift_retain();
  sub_1BC457BEC();
  sub_1BC4582F4();
  return v2;
}

_QWORD *sub_1BC4590A0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t ObjectType;
  uint64_t v57;
  uint64_t v58;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v60;
  unint64_t v61;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  _QWORD *v78;
  __int128 v79;
  uint64_t v80;
  _QWORD v81[15];

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v67 = (char *)&v63 - v3;
  sub_1BC4334E0();
  v76 = v4;
  v74 = *(char **)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = xmmword_1BC6411A0;
  v7 = (void *)v0[2];
  v8 = v0[3];
  v9 = *(void **)(v8 + 16);
  v10 = v7;
  v11 = objc_msgSend(v9, sel_clinicalSourcesDataProvider);
  type metadata accessor for AccountSourceDataSource();
  swift_allocObject();
  v12 = sub_1BC5AC5C8(v10, v11);
  v1[4] = v12;
  swift_retain();
  swift_release();
  v80 = v12;
  v81[0] = MEMORY[0x1E0D2B148];
  v13 = (void *)v1[2];
  v73 = type metadata accessor for DeleteAccountDataSource(0);
  v14 = swift_allocObject();
  v75 = xmmword_1BC6396A0;
  *(_OWORD *)(v14 + qword_1EF42F818) = xmmword_1BC6396A0;
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = v15;
  v17 = *(_QWORD *)(sub_1BC62B288() - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = *(unsigned __int8 *)(v17 + 80);
  v20 = (v19 + 32) & ~v19;
  v72 = v16;
  v70 = v20 + v18;
  v69 = v19 | 7;
  v21 = swift_allocObject();
  v77 = xmmword_1BC639590;
  *(_OWORD *)(v21 + 16) = xmmword_1BC639590;
  v71 = v20;
  sub_1BC3B98BC(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0);
  v68 = v22;
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v77;
  v24 = type metadata accessor for DeleteAccountItem(0);
  swift_allocObject();
  swift_retain_n();
  v25 = v13;
  swift_retain();
  v26 = sub_1BC432630(v25, v8);
  *(_QWORD *)(v23 + 56) = v24;
  v66 = sub_1BC347F0C(&qword_1EF430790, type metadata accessor for DeleteAccountItem, (uint64_t)&unk_1BC64C5C8);
  *(_QWORD *)(v23 + 64) = v66;
  *(_QWORD *)(v23 + 32) = v26;
  sub_1BC62B258();
  *(_OWORD *)(swift_allocObject() + 16) = v75;
  v65 = type metadata accessor for DeleteAccountSourceDataSource(0);
  *(_OWORD *)(swift_allocObject() + qword_1EF42F7B8) = v75;
  *(_QWORD *)(v14 + qword_1EF42F810) = sub_1BC62B678();
  swift_release();
  v27 = *MEMORY[0x1E0D2ACF8];
  v64 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v74 + 13);
  v64(v6, v27, v76);
  swift_retain();
  v74 = v6;
  v28 = sub_1BC62AFA0();

  v29 = v8;
  swift_release();
  v1[5] = v28;
  swift_retain();
  swift_release();
  v30 = sub_1BC347F0C(&qword_1EF430798, type metadata accessor for DeleteAccountDataSource, MEMORY[0x1E0D2AD60]);
  v81[1] = v28;
  v81[2] = v30;
  if (qword_1EF4287E0 != -1)
    swift_once();
  swift_beginAccess();
  v31 = 0;
  v32 = 0;
  if (byte_1EF438CA0 == 1)
  {
    v33 = MEMORY[0x1E0DEE9D8];
    v34 = (void *)v1[2];
    type metadata accessor for AccountLoginDataSource(0);
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + qword_1EF429CF8) = v33;
    *(_QWORD *)(v35 + qword_1EF429CF0) = v8;
    swift_retain_n();
    v36 = v34;
    v31 = sub_1BC62B678();
    v37 = sub_1BC62C95C();
    v38 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v67, 1, 1, v37);
    v39 = (_QWORD *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0;
    v39[4] = v31;
    v39[5] = v36;
    swift_retain_n();
    v40 = v36;
    sub_1BC5C2784(v38, (uint64_t)&unk_1EF4307A0, (uint64_t)v39);
    swift_release();

    swift_release();
    swift_release();
    v1[7] = v31;
    swift_retain();
    swift_release();
    v32 = MEMORY[0x1E0D2B148];
  }
  v67 = (char *)&v80;
  v81[3] = v31;
  v81[4] = v32;
  v81[5] = sub_1BC457DD8();
  v81[6] = MEMORY[0x1E0D2B148];
  v41 = (void *)v1[2];
  v42 = swift_allocObject();
  v75 = xmmword_1BC639690;
  *(_OWORD *)(v42 + qword_1EF42F818) = xmmword_1BC639690;
  *(_OWORD *)(swift_allocObject() + 16) = v77;
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v77;
  swift_allocObject();
  swift_retain_n();
  v44 = v41;
  swift_retain();
  v45 = sub_1BC432630(v44, v29);
  v46 = v66;
  *(_QWORD *)(v43 + 56) = v24;
  *(_QWORD *)(v43 + 64) = v46;
  *(_QWORD *)(v43 + 32) = v45;
  sub_1BC62B258();
  *(_OWORD *)(swift_allocObject() + 16) = v75;
  *(_OWORD *)(swift_allocObject() + qword_1EF42F7B8) = v75;
  *(_QWORD *)(v42 + qword_1EF42F810) = sub_1BC62B678();
  swift_release();
  v64(v74, *MEMORY[0x1E0D2AD00], v76);
  swift_retain();
  v47 = sub_1BC62AFA0();

  swift_release();
  v1[6] = v47;
  swift_retain();
  swift_release();
  v81[7] = v47;
  v81[8] = v30;
  v81[9] = sub_1BC457E88();
  v81[10] = v48;
  v81[11] = sub_1BC457F4C();
  v81[12] = v49;
  if (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
  {
    v50 = (void *)v1[2];
    type metadata accessor for InternalDetailsDataSource(0);
    swift_allocObject();
    swift_retain();
    v51 = v50;
    v52 = sub_1BC51C32C(v51, v29);

    swift_release();
    v53 = MEMORY[0x1E0D2AAF8];
  }
  else
  {
    v52 = 0;
    v53 = 0;
  }
  v54 = 0;
  v81[13] = v52;
  v81[14] = v53;
  v55 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v57 = v81[v54 - 1];
    if (v57)
    {
      v58 = v81[v54];
      swift_unknownObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v78 = v55;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v55 = sub_1BC3B51A4(0, v55[2] + 1, 1, v55);
        v78 = v55;
      }
      v61 = v55[2];
      v60 = v55[3];
      if (v61 >= v60 >> 1)
      {
        v55 = sub_1BC3B51A4((_QWORD *)(v60 > 1), v61 + 1, 1, v55);
        v78 = v55;
      }
      ObjectType = swift_getObjectType();
      sub_1BC4607A0(v61, v57, (uint64_t *)&v78, ObjectType, v58);
    }
    v54 += 2;
  }
  while (v54 != 16);
  sub_1BC459A18();
  swift_arrayDestroy();
  return v55;
}

uint64_t sub_1BC4599DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC430904(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;

  if ((unint64_t)(*(_QWORD *)(v0 + 24) - 1) >= 2)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC459A18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C5C8)
  {
    sub_1BC3B9914(255, (unint64_t *)&qword_1EF42A0F8);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C5C8);
  }
}

uint64_t sub_1BC459A84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC3781C0;
  return sub_1BC375E48(a1, v4, v5, v7, v6);
}

uint64_t sub_1BC459AFC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC458478(a1, v1);
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t sub_1BC459B1C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC459B48()
{
  uint64_t v0;

  sub_1BC458684(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC459B54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC377F18;
  return sub_1BC375E48(a1, v4, v5, v7, v6);
}

uint64_t sub_1BC459BCC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC459BF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC3781C0;
  return sub_1BC458834(a1, v4, v5, v6);
}

uint64_t sub_1BC459C64()
{
  swift_release();
  return swift_deallocObject();
}

id HKUIMetricColors.init(keyColor:)(void *a1)
{
  id v2;
  id v3;
  id v4;

  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v2, sel_setKeyColor_, a1);
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemLightGrayColor);
  objc_msgSend(v2, sel_setContextViewPrimaryTextColor_, v3);

  v4 = objc_msgSend(v2, sel_contextViewPrimaryTextColor);
  objc_msgSend(v2, sel_setContextViewSecondaryTextColor_, v4);

  return v2;
}

id static HKUIMetricColors.chartFilterDefaultForSingle()()
{
  return sub_1BC459DA0((SEL *)&selRef_hk_chartOverlayBackgroundColor);
}

id sub_1BC459D70()
{
  swift_getObjCClassMetadata();
  return static HKUIMetricColors.chartFilterDefaultForSingle()();
}

id static HKUIMetricColors.chartFilterDefaultForMultiple()()
{
  return sub_1BC459DA0((SEL *)&selRef_hk_chartBackgroundColor);
}

id sub_1BC459DA0(SEL *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, *a1);
  objc_msgSend(v2, sel_setKeyColor_, v4);
  v5 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v2, sel_setContextViewPrimaryTextColor_, v5);

  v6 = objc_msgSend(v2, sel_contextViewPrimaryTextColor);
  objc_msgSend(v2, sel_setContextViewSecondaryTextColor_, v6);

  return v2;
}

id sub_1BC459E88()
{
  swift_getObjCClassMetadata();
  return static HKUIMetricColors.chartFilterDefaultForMultiple()();
}

id ConceptFeedItemBrowseTitleView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

double sub_1BC459EFC()
{
  double result;

  result = 8.0;
  xmmword_1EF459E20 = xmmword_1BC641270;
  *(_OWORD *)&qword_1EF459E30 = xmmword_1BC640F90;
  return result;
}

void sub_1BC459F1C()
{
  qword_1EF459E40 = 0x4020000000000000;
}

id sub_1BC459F2C()
{
  id v0;
  id v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v2) = 1132068864;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v2);
  LODWORD(v3) = 1132068864;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v4 + 32) = sub_1BC62C680();
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = 0xD00000000000001ELL;
  *(_QWORD *)(v4 + 56) = 0x80000001BC641270;
  *(_QWORD *)(v4 + 64) = 0x656C746954;
  *(_QWORD *)(v4 + 72) = 0xE500000000000000;
  v6 = v0;
  v7 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v8 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v8);
  return v6;
}

id sub_1BC45A0F4()
{
  id v0;
  id v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v2) = 1148846080;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v2);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  LODWORD(v4) = 1132068864;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v4);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v5 + 32) = sub_1BC62C680();
  *(_QWORD *)(v5 + 40) = v6;
  *(_QWORD *)(v5 + 48) = 0xD00000000000001ELL;
  *(_QWORD *)(v5 + 56) = 0x80000001BC641270;
  *(_QWORD *)(v5 + 64) = 1702125892;
  *(_QWORD *)(v5 + 72) = 0xE400000000000000;
  v7 = v0;
  v8 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v9 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v9);
  return v7;
}

id sub_1BC45A2D0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___bottomConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___bottomConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___bottomConstraint];
  }
  else
  {
    v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel], sel_bottomAnchor);
    v5 = objc_msgSend(v0, sel_bottomAnchor);
    if (qword_1EF4285D0 != -1)
      swift_once();
    v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, -*(double *)&qword_1EF459E30);

    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BC45A3C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateChevronConstraint;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateChevronConstraint);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateChevronConstraint);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView), sel_leadingAnchor);
    v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel), sel_trailingAnchor);
    if (qword_1EF4285D8 != -1)
      swift_once();
    v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, *(double *)&qword_1EF459E40);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BC45A4C8()
{
  return sub_1BC45A4F0(&OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateTrailingConstraint, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel);
}

id sub_1BC45A4DC()
{
  return sub_1BC45A4F0(&OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___chevronTrailingConstraint, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView);
}

id sub_1BC45A4F0(uint64_t *a1, _QWORD *a2)
{
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v3 = *a1;
  v4 = *(void **)&v2[*a1];
  if (v4)
  {
    v5 = *(id *)&v2[*a1];
  }
  else
  {
    v6 = objc_msgSend(*(id *)&v2[*a2], sel_trailingAnchor);
    v7 = objc_msgSend(v2, sel_trailingAnchor);
    if (qword_1EF4285D0 != -1)
      swift_once();
    v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v7, -*(double *)&qword_1EF459E38);

    v9 = *(void **)&v2[v3];
    *(_QWORD *)&v2[v3] = v8;
    v5 = v8;

    v4 = 0;
  }
  v10 = v4;
  return v5;
}

void *sub_1BC45A5E0()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1BC45A62C(void *a1)
{
  sub_1BC38B494(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage);
}

uint64_t (*sub_1BC45A638())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC45A67C()
{
  return sub_1BC38BBC4(&OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title);
}

uint64_t sub_1BC45A688(uint64_t a1, uint64_t a2)
{
  return sub_1BC38B344(a1, a2, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title);
}

uint64_t (*sub_1BC45A694())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC45A6D8()
{
  return sub_1BC38BBC4(&OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString);
}

uint64_t sub_1BC45A6E4(uint64_t a1, uint64_t a2)
{
  return sub_1BC38B344(a1, a2, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString);
}

uint64_t (*sub_1BC45A6F0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void *sub_1BC45A734()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1BC45A780(void *a1)
{
  sub_1BC38B494(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor);
}

uint64_t (*sub_1BC45A78C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC45A7D0()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron);
  swift_beginAccess();
  return *v1;
}

void sub_1BC45A814(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  id v4;
  id v5;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron);
  swift_beginAccess();
  *v3 = a1;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView), sel_setHidden_, a1 & 1);
  v4 = sub_1BC45A3C8();
  objc_msgSend(v4, sel_setActive_, (*v3 & 1) == 0);

  v5 = sub_1BC45A4C8();
  objc_msgSend(v5, sel_setActive_, *v3);

}

void (*sub_1BC45A8C4(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC45A91C;
}

void sub_1BC45A91C(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = v3[4];
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView), sel_setHidden_, *(unsigned __int8 *)(v4 + v5));
    v6 = sub_1BC45A3C8();
    objc_msgSend(v6, sel_setActive_, (*(_BYTE *)(v4 + v5) & 1) == 0);

    v7 = sub_1BC45A4C8();
    objc_msgSend(v7, sel_setActive_, *(unsigned __int8 *)(v4 + v5));

  }
  free(v3);
}

uint64_t sub_1BC45A9BC()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  return *v1;
}

void sub_1BC45AA00(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1
               + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  *v3 = a1;
  sub_1BC45B79C();
}

void (*sub_1BC45AA54(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC45AA9C;
}

void sub_1BC45AA9C(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC45B79C();
}

uint64_t sub_1BC45AACC()
{
  return sub_1BC38BBC4(&OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier);
}

void sub_1BC45AAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = v2;
  v6 = (_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease();
  if (v6[1])
  {
    v7 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel);
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

    v9 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel);
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

  }
}

void (*sub_1BC45AC1C(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC45AC74;
}

void sub_1BC45AC74(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = (uint64_t *)(v4 + v3[4]);
    v6 = v5[1];
    if (v6)
    {
      v7 = *v5;
      v8 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel);
      v12 = *v5;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRetain();
      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v12, v6);

      v10 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel);
      v13 = v6;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v11 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11, v7, v13);

    }
  }
  free(v3);
}

uint64_t sub_1BC45ADA8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC38CC9C(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData;
  swift_beginAccess();
  sub_1BC38CD44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC45AE18();
  return sub_1BC38CD88((uint64_t)v5);
}

void sub_1BC45AE18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void **v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void **v39;
  void *v40;
  uint64_t v41;

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData);
  swift_beginAccess();
  v3 = v2[3];
  if (v3)
  {
    v4 = v2[4];
    v5 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    v6 = *(_QWORD *)(v3 - 8);
    MEMORY[0x1E0C80A78](v5);
    v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v3);
  }
  else
  {
    v9 = 0;
  }
  v10 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage);
  swift_beginAccess();
  v11 = *v10;
  *v10 = (void *)v9;

  v12 = v2[3];
  if (v12)
  {
    v13 = v2[4];
    v14 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    v15 = *(_QWORD *)(v12 - 8);
    MEMORY[0x1E0C80A78](v14);
    v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v12);
  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  v21 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title);
  swift_beginAccess();
  *v21 = v18;
  v21[1] = v20;
  swift_bridgeObjectRelease();
  v22 = v2[3];
  if (!v22)
    goto LABEL_9;
  v23 = v2[4];
  v24 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
  v25 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v25 + 16))(v27);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v22);
  if (!v30)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    v30 = 0xE100000000000000;
    v28 = 32;
  }
  v31 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString);
  swift_beginAccess();
  *v31 = v28;
  v31[1] = v30;
  swift_bridgeObjectRelease();
  v32 = v2[3];
  if (v32)
  {
    v33 = v2[4];
    v34 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    v35 = *(_QWORD *)(v32 - 8);
    MEMORY[0x1E0C80A78](v34);
    v37 = (char *)&v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v37);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 32))(v32, v33);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v32);
  }
  else
  {
    v38 = 0;
  }
  v39 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor);
  swift_beginAccess();
  v40 = *v39;
  *v39 = (void *)v38;

  sub_1BC45B79C();
  sub_1BC45BA38();
  sub_1BC45BC64();
}

uint64_t sub_1BC45B18C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData;
  swift_beginAccess();
  return sub_1BC38CC9C(v3, a1);
}

uint64_t sub_1BC45B1DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData;
  swift_beginAccess();
  sub_1BC38CD44(a1, v3);
  swift_endAccess();
  sub_1BC45AE18();
  return sub_1BC38CD88(a1);
}

void (*sub_1BC45B248(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC45B290;
}

void sub_1BC45B290(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC45AE18();
}

char *ConceptFeedItemBrowseTitleView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  double v19;
  double v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  objc_super v35;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_minimumViewHeight] = 0x404E000000000000;
  v9 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryIconImageView;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
  v11 = v4;
  v12 = objc_msgSend(v10, sel_init);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v4[v9] = v12;
  v13 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel;
  *(_QWORD *)&v11[v13] = sub_1BC459F2C();
  v14 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel;
  *(_QWORD *)&v11[v14] = sub_1BC45A0F4();
  v15 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v16, sel_setContentMode_, 4);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
  v17 = (void *)sub_1BC62CE54();
  objc_msgSend(v16, sel_setImage_, v17);

  v18 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v16, sel_setTintColor_, v18);

  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v19) = 1148846080;
  objc_msgSend(v16, sel_setContentHuggingPriority_forAxis_, 0, v19);
  LODWORD(v20) = 1148846080;
  objc_msgSend(v16, sel_setContentCompressionResistancePriority_forAxis_, 0, v20);
  *(_QWORD *)&v11[v15] = v16;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___bottomConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateChevronConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateTrailingConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___chevronTrailingConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage] = 0;
  v21 = &v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = &v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor] = 0;
  v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron] = 0;
  v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing] = 1;
  v23 = &v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v24 = &v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData];
  *(_OWORD *)v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((_QWORD *)v24 + 4) = 0;

  v35.receiver = v11;
  v35.super_class = (Class)type metadata accessor for ConceptFeedItemBrowseTitleView();
  v25 = (char *)objc_msgSendSuper2(&v35, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v25, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v26 = *(void **)&v25[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  v27 = (void *)sub_1BC62CDDC();
  objc_msgSend(v26, sel_setFont_, v27);

  v28 = *(void **)&v25[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel];
  v29 = (void *)sub_1BC62CDDC();
  objc_msgSend(v28, sel_setFont_, v29);

  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryIconImageView]);
  objc_msgSend(v25, sel_addSubview_, v26);
  objc_msgSend(v25, sel_addSubview_, v28);
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView]);
  sub_1BC45BC64();
  sub_1BC38DB44(0, (unint64_t *)&qword_1EF429250, (void (*)(uint64_t))sub_1BC3571B0);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BC639590;
  v31 = sub_1BC62BDD4();
  v32 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v30 + 32) = v31;
  *(_QWORD *)(v30 + 40) = v32;
  v33 = v25;
  MEMORY[0x1BCCF20E8](v30, sel_traitCollectionDidChangeWithTraitEnvironment_previousTraitCollection_);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v33;
}

void sub_1BC45B79C()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  id v4;
  char *v5;
  void *v6;
  uint64_t inited;
  void **v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryIconImageView];
  v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage];
  swift_beginAccess();
  objc_msgSend(v1, sel_setImage_, *(_QWORD *)v2);
  v3 = objc_msgSend(v0, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  LOBYTE(v3) = sub_1BC62CD1C();
  objc_msgSend(v1, sel_setHidden_, v3 & 1);
  v5 = &v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title];
  swift_beginAccess();
  if (*((_QWORD *)v5 + 1))
  {
    v6 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel];
    sub_1BC38DB44(0, (unint64_t *)&qword_1EF4383B0, (void (*)(uint64_t))sub_1BC34B5A0);
    inited = swift_initStackObject();
    v8 = (void **)MEMORY[0x1E0DC1140];
    *(_OWORD *)(inited + 16) = xmmword_1BC639590;
    v9 = *v8;
    *(_QWORD *)(inited + 32) = *v8;
    v10 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v11 = v9;
    v12 = objc_msgSend(v10, sel_labelColor);
    *(_QWORD *)(inited + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
    *(_QWORD *)(inited + 40) = v12;
    sub_1BC35B6B4(inited);
    v13 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v14 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BC34B608();
    v15 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v13, sel_initWithString_attributes_, v14, v15);

    objc_msgSend(v6, sel_setAttributedText_, v16);
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel], sel_setAttributedText_, 0);
    objc_msgSend(v1, sel_setImage_, 0);
  }
}

uint64_t type metadata accessor for ConceptFeedItemBrowseTitleView()
{
  return objc_opt_self();
}

void sub_1BC45BA38()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  void **v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel);
  swift_beginAccess();
  sub_1BC38DB44(0, (unint64_t *)&qword_1EF4383B0, (void (*)(uint64_t))sub_1BC34B5A0);
  inited = swift_initStackObject();
  v3 = (void **)MEMORY[0x1E0DC1140];
  *(_OWORD *)(inited + 16) = xmmword_1BC639590;
  v4 = *v3;
  *(_QWORD *)(inited + 32) = *v3;
  v5 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v6 = v4;
  v7 = objc_msgSend(v5, sel_secondaryLabelColor);
  *(_QWORD *)(inited + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
  *(_QWORD *)(inited + 40) = v7;
  sub_1BC35B6B4(inited);
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v10 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_initWithString_attributes_, v9, v10);

  objc_msgSend(v1, sel_setAttributedText_, v11);
}

void sub_1BC45BC64()
{
  char *v0;
  void *v1;
  uint64_t *v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  id v7;
  double v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  double v79;
  double v80;
  double v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  void *v86;
  uint64_t *v87;

  v1 = (void *)objc_opt_self();
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_activeConstraints];
  swift_beginAccess();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  v4 = objc_msgSend(v0, sel_heightAnchor);
  v5 = objc_msgSend(v4, sel_constraintGreaterThanOrEqualToConstant_, *(double *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_minimumViewHeight]);

  LODWORD(v6) = 1148829696;
  objc_msgSend(v5, sel_setPriority_, v6);
  v7 = sub_1BC45A4DC();
  LODWORD(v8) = 1148846080;
  objc_msgSend(v7, sel_setPriority_, v8);

  v9 = objc_msgSend(v0, sel_traitCollection);
  v10 = objc_msgSend(v9, sel_preferredContentSizeCategory);

  LOBYTE(v9) = sub_1BC62CD1C();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v87 = v2;
  v86 = v5;
  if ((v9 & 1) != 0)
  {
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BC63A940;
    v12 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel];
    v13 = objc_msgSend(v12, sel_leadingAnchor);
    v14 = objc_msgSend(v0, sel_leadingAnchor);
    if (qword_1EF4285D0 != -1)
      swift_once();
    v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, *((double *)&xmmword_1EF459E20 + 1));

    *(_QWORD *)(v11 + 32) = v15;
    v16 = objc_msgSend(v12, sel_topAnchor);
    v17 = objc_msgSend(v0, sel_topAnchor);
    v18 = objc_msgSend(v16, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v17, *(double *)&xmmword_1EF459E20);

    *(_QWORD *)(v11 + 40) = v18;
    v19 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel];
    v20 = objc_msgSend(v19, sel_topAnchor);
    v21 = objc_msgSend(v12, sel_bottomAnchor);
    v22 = objc_msgSend(v20, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v21, 2.0);

    *(_QWORD *)(v11 + 48) = v22;
    v23 = objc_msgSend(v19, (SEL)&selRef_dateCache + 6);
    v24 = objc_msgSend(v0, (SEL)&selRef_dateCache + 6);
    v25 = objc_msgSend(v23, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v24, *((double *)&xmmword_1EF459E20 + 1));

    *(_QWORD *)(v11 + 56) = v25;
    v26 = objc_msgSend(v19, sel_bottomAnchor);
    v27 = objc_msgSend(v0, sel_safeAreaLayoutGuide);
    v28 = objc_msgSend(v27, sel_bottomAnchor);

    v29 = objc_msgSend(v26, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v28, -*(double *)&qword_1EF459E30);
    *(_QWORD *)(v11 + 64) = v29;
    v30 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView];
    v31 = objc_msgSend(v30, (SEL)&selRef_dateCache + 6);
    v32 = objc_msgSend(v12, sel_trailingAnchor);
    v33 = objc_msgSend(v31, sel_constraintGreaterThanOrEqualToAnchor_constant_, v32, *(double *)&qword_1EF459E38);

    *(_QWORD *)(v11 + 72) = v33;
    v34 = objc_msgSend(v30, (SEL)&selRef_dateCache + 6);
    v35 = objc_msgSend(v19, sel_trailingAnchor);
    v36 = objc_msgSend(v34, sel_constraintGreaterThanOrEqualToAnchor_constant_, v35, *(double *)&qword_1EF459E38);

    *(_QWORD *)(v11 + 80) = v36;
    *(_QWORD *)(v11 + 88) = sub_1BC45A4DC();
    v37 = objc_msgSend(v30, sel_firstBaselineAnchor);
    v38 = objc_msgSend(v12, sel_firstBaselineAnchor);
    v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

    v40 = v86;
    *(_QWORD *)(v11 + 96) = v39;
    *(_QWORD *)(v11 + 104) = v86;
    sub_1BC62C890();
    *v87 = v11;
    v41 = v86;
    swift_bridgeObjectRelease();
    v42 = v1;
  }
  else
  {
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1BC641280;
    *(_QWORD *)(v43 + 32) = sub_1BC45A4DC();
    v44 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryIconImageView];
    v45 = objc_msgSend(v44, sel_leadingAnchor);
    v46 = objc_msgSend(v0, sel_leadingAnchor);
    if (qword_1EF4285D0 != -1)
      swift_once();
    v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v46, *((double *)&xmmword_1EF459E20 + 1));

    *(_QWORD *)(v43 + 40) = v47;
    v48 = objc_msgSend(v44, sel_centerYAnchor);
    v49 = objc_msgSend(v0, sel_centerYAnchor);
    v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

    *(_QWORD *)(v43 + 48) = v50;
    v51 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel];
    v52 = objc_msgSend(v51, sel_leadingAnchor);
    v53 = objc_msgSend(v44, sel_trailingAnchor);
    v54 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, v53, 16.0);

    *(_QWORD *)(v43 + 56) = v54;
    v55 = objc_msgSend(v51, sel_topAnchor);
    v56 = objc_msgSend(v0, sel_topAnchor);
    v57 = objc_msgSend(v55, sel_constraintEqualToAnchor_constant_, v56, *(double *)&xmmword_1EF459E20);

    *(_QWORD *)(v43 + 64) = v57;
    v58 = objc_msgSend(v51, sel_trailingAnchor);
    v59 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel];
    v60 = objc_msgSend(v59, sel_leadingAnchor);
    v85 = v44;
    v61 = objc_msgSend(v58, sel_constraintLessThanOrEqualToAnchor_constant_, v60, -*(double *)&qword_1EF459E38);

    *(_QWORD *)(v43 + 72) = v61;
    *(_QWORD *)(v43 + 80) = sub_1BC45A2D0();
    v62 = objc_msgSend(v59, sel_topAnchor);
    v63 = objc_msgSend(v0, sel_topAnchor);
    v64 = objc_msgSend(v62, sel_constraintEqualToAnchor_constant_, v63, *(double *)&xmmword_1EF459E20);

    *(_QWORD *)(v43 + 88) = v64;
    v65 = objc_msgSend(v59, sel_bottomAnchor);
    v66 = objc_msgSend(v0, sel_bottomAnchor);
    v67 = objc_msgSend(v65, sel_constraintGreaterThanOrEqualToAnchor_constant_, v66, -*(double *)&qword_1EF459E30);

    *(_QWORD *)(v43 + 96) = v67;
    v68 = objc_msgSend(v59, sel_leadingAnchor);
    v69 = objc_msgSend(v51, sel_trailingAnchor);
    if (qword_1EF4285D8 != -1)
      swift_once();
    v70 = objc_msgSend(v68, sel_constraintEqualToAnchor_constant_, v69, *(double *)&qword_1EF459E40);

    *(_QWORD *)(v43 + 104) = v70;
    v71 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView], sel_centerYAnchor);
    v72 = objc_msgSend(v59, sel_centerYAnchor);
    v73 = objc_msgSend(v71, sel_constraintEqualToAnchor_, v72);

    *(_QWORD *)(v43 + 112) = v73;
    v40 = v86;
    *(_QWORD *)(v43 + 120) = sub_1BC45A3C8();
    *(_QWORD *)(v43 + 128) = v86;
    sub_1BC62C890();
    *v87 = v43;
    v74 = v86;
    swift_bridgeObjectRelease();
    v75 = objc_msgSend(v44, sel_image);
    v42 = v1;
    if (v75)
    {
      v76 = v75;
      v77 = objc_msgSend(v85, sel_widthAnchor);
      v78 = objc_msgSend(v85, sel_heightAnchor);
      objc_msgSend(v76, sel_size);
      v80 = v79;
      objc_msgSend(v76, sel_size);
      v82 = objc_msgSend(v77, sel_constraintEqualToAnchor_multiplier_, v78, v80 / v81);

      swift_beginAccess();
      v83 = v82;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((*v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
      swift_endAccess();

    }
  }
  swift_bridgeObjectRetain();
  v84 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_activateConstraints_, v84);

}

id ConceptFeedItemBrowseTitleView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptFeedItemBrowseTitleView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC45C920@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage, a2);
}

void sub_1BC45C92C(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1BC38B3E0(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage);
}

uint64_t sub_1BC45C948@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title, a2);
}

uint64_t sub_1BC45C954(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC38B2C8(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title);
}

uint64_t sub_1BC45C970@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString, a2);
}

uint64_t sub_1BC45C97C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC38B2C8(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString);
}

id sub_1BC45C998@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor, a2);
}

void sub_1BC45C9A4(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1BC38B3E0(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor);
}

uint64_t sub_1BC45C9C0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron, a2);
}

void sub_1BC45C9CC(unsigned __int8 *a1)
{
  sub_1BC45A814(*a1);
}

uint64_t sub_1BC45C9F0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing, a2);
}

void sub_1BC45C9FC(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(*a2
               + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  *v3 = v2;
  sub_1BC45B79C();
}

uint64_t sub_1BC45CA54@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier, a2);
}

void sub_1BC45CA60(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1BC45AAD8(v1, v2);
}

uint64_t sub_1BC45CA9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData;
  swift_beginAccess();
  return sub_1BC38CC9C(v3, a2);
}

uint64_t method lookup function for ConceptFeedItemBrowseTitleView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.headerImage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.headerImage.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.headerImage.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.dateString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.dateString.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.dateString.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.categoryColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.categoryColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.categoryColor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesChevron.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesChevron.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesChevron.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesHeaderSymbolForAccessibilitySizing.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesHeaderSymbolForAccessibilitySizing.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesHeaderSymbolForAccessibilitySizing.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.baseAccessibilityIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.baseAccessibilityIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.baseAccessibilityIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.viewData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.viewData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.viewData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x228))();
}

void sub_1BC45CDA0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_minimumViewHeight] = 0x404E000000000000;
  v2 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryIconImageView;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v2] = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel;
  *(_QWORD *)&v1[v4] = sub_1BC459F2C();
  v5 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel;
  *(_QWORD *)&v1[v5] = sub_1BC45A0F4();
  v6 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v7, sel_setContentMode_, 4);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
  v8 = (void *)sub_1BC62CE54();
  objc_msgSend(v7, sel_setImage_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v7, sel_setTintColor_, v9);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v10) = 1148846080;
  objc_msgSend(v7, sel_setContentHuggingPriority_forAxis_, 0, v10);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 0, v11);
  *(_QWORD *)&v1[v6] = v7;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___bottomConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateChevronConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateTrailingConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___chevronTrailingConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage] = 0;
  v12 = &v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title];
  *v12 = 0;
  v12[1] = 0;
  v13 = &v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString];
  *v13 = 0;
  v13[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing] = 1;
  v14 = &v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier];
  *v14 = 0;
  v14[1] = 0;
  v15 = &v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_QWORD *)v15 + 4) = 0;

  sub_1BC62D394();
  __break(1u);
}

void sub_1BC45D074(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!a1)
  {

    goto LABEL_9;
  }
  v5 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  v6 = sub_1BC62C680();
  v8 = v7;
  if (v6 == sub_1BC62C680() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  v11 = sub_1BC62D574();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
LABEL_9:
    sub_1BC45B79C();
    sub_1BC45BA38();
    sub_1BC45BC64();
  }
}

uint64_t type metadata accessor for RecordConceptsDataSource()
{
  uint64_t result;

  result = qword_1EF430880;
  if (!qword_1EF430880)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC45D1C8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC45D214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;

  v1 = v0;
  v2 = sub_1BC62C4D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v5 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v7 = qword_1EF430878;
  v8 = objc_msgSend(*(id *)(v1 + qword_1EF430878), sel_conceptNameItems);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  v9 = sub_1BC62C878();

  v10 = sub_1BC45D7CC(v9, (void (*)(unint64_t, id))sub_1BC45D7C4);
  swift_bridgeObjectRelease();
  v20 = v10;
  if (objc_msgSend(*(id *)(v1 + v7), sel_state) == (id)1)
  {
    sub_1BC45D920();
    v12 = v11;
    v14 = v13;
    swift_arrayDestroy();
    type metadata accessor for TitleSubtitleDetailItem(0);
    v15 = (_QWORD *)swift_allocObject();
    v16 = sub_1BC62A7A8();
    v15[2] = 0xD000000000000013;
    v15[3] = 0x80000001BC65A2E0;
    v15[4] = 0xD00000000000001CLL;
    v15[5] = 0x80000001BC65A300;
    v17 = MEMORY[0x1E0DEE9D8];
    v15[6] = 0;
    v15[7] = v17;
    v15[8] = v12;
    v15[9] = v14;
    MEMORY[0x1BCCF1B30](v16);
    if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_4:
      sub_1BC62C8D8();
      sub_1BC62C890();
      v10 = v20;
      goto LABEL_5;
    }
LABEL_7:
    sub_1BC62C8B4();
    goto LABEL_4;
  }
LABEL_5:
  sub_1BC3D1D2C(v10);
  swift_bridgeObjectRelease();
  sub_1BC62B2E8();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BC45D48C(uint64_t a1, void *a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;

  sub_1BC359F44();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(inited + 32) = 0x43747065636E6F43;
  *(_QWORD *)(inited + 40) = 0xEB000000006C6C65;
  v23 = a1;
  *(_QWORD *)(inited + 48) = sub_1BC62D52C();
  *(_QWORD *)(inited + 56) = v5;
  sub_1BC45D920();
  v7 = v6;
  v9 = v8;
  swift_setDeallocating();
  swift_arrayDestroy();
  v10 = objc_msgSend(a2, sel_title, v23);
  if (!v10)
    __break(1u);
  v11 = v10;
  v12 = sub_1BC62C680();
  v14 = v13;

  v15 = objc_msgSend(a2, sel_subtitle);
  if (v15)
  {
    v16 = v15;
    v17 = sub_1BC62C680();
    v19 = v18;

  }
  else
  {
    v17 = 0;
    v19 = 0;
  }
  type metadata accessor for TitleSubtitleDetailItem(0);
  v20 = (_QWORD *)swift_allocObject();
  sub_1BC62A7A8();
  v20[2] = v12;
  v20[3] = v14;
  v20[4] = v17;
  v20[5] = v19;
  v21 = MEMORY[0x1E0DEE9D8];
  v20[6] = 0;
  v20[7] = v21;
  v20[8] = v7;
  v20[9] = v9;
  return v20;
}

void sub_1BC45D644()
{
  sub_1BC45D674();
}

void sub_1BC45D65C()
{
  sub_1BC45D674();
}

void sub_1BC45D674()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC45D69C()
{
  uint64_t v0;

}

uint64_t sub_1BC45D6AC()
{

  return swift_deallocClassInstance();
}

uint64_t sub_1BC45D6E8()
{
  return type metadata accessor for RecordConceptsDataSource();
}

unint64_t sub_1BC45D6F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;

  v2 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC62BD38();
  v3 = sub_1BC62AD3C();
  swift_allocObject();
  v4 = sub_1BC62AD24();
  a1[3] = v3;
  result = sub_1BC38AD74();
  a1[4] = result;
  *a1 = v4;
  return result;
}

_QWORD *sub_1BC45D7C4(uint64_t a1, void *a2)
{
  return sub_1BC45D48C(a1, a2);
}

uint64_t sub_1BC45D7CC(unint64_t a1, void (*a2)(unint64_t, id))
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9D8];
  sub_1BC62D28C();
  if (a1 >> 62)
    goto LABEL_13;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x1BCCF24CC](v4, a1);
LABEL_7:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_12;
        a2(v4, v5);

        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
        ++v4;
        if (v7 == v3)
          goto LABEL_14;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
      v3 = sub_1BC62D3B8();
      if (!v3)
        goto LABEL_14;
    }
    v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_7;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1BC45D920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  sub_1BC359F44();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v0 + 32) = sub_1BC62C680();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = swift_bridgeObjectRetain();
  sub_1BC3BB0B8(v2);
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v4)
  {
    sub_1BC62C680();

  }
  else
  {
    __break(1u);
  }
}

uint64_t HKClinicalAccountStore.requiresOnboardingPublisher()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  sub_1BC45DB10();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(swift_allocObject() + 16) = v0;
  sub_1BC45DB88();
  sub_1BC347F0C(&qword_1ED6A4D68, (uint64_t (*)(uint64_t))sub_1BC45DB88, MEMORY[0x1E0C96108]);
  v6 = v0;
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1ED6A4D78, (uint64_t (*)(uint64_t))sub_1BC45DB10, MEMORY[0x1E0C96148]);
  v7 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

void sub_1BC45DB10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4D80)
  {
    sub_1BC45DB88();
    sub_1BC347F0C(&qword_1ED6A4D68, (uint64_t (*)(uint64_t))sub_1BC45DB88, MEMORY[0x1E0C96108]);
    v0 = sub_1BC62BF84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4D80);
  }
}

void sub_1BC45DB88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4D70)
  {
    v0 = sub_1BC62BF54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4D70);
  }
}

uint64_t sub_1BC45DBEC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t result;

  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BC45DB88();
  swift_allocObject();
  v4 = a1;
  result = sub_1BC62BF60();
  *a2 = result;
  return result;
}

uint64_t sub_1BC45DC64()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC45DC88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC45DBEC(*(void **)(v1 + 16), a1);
}

uint64_t sub_1BC45DC90(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v14;

  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a3;
  v11[5] = sub_1BC45DDC4;
  v11[6] = v9;
  swift_retain();
  v12 = a3;
  sub_1BC5C2784((uint64_t)v8, (uint64_t)&unk_1EF4308D8, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1BC45DD98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC45DC90(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1BC45DDA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC45DDC4(__int16 a1)
{
  uint64_t v1;
  uint64_t (*v2)(__int16 *);
  __int16 v4;

  v2 = *(uint64_t (**)(__int16 *))(v1 + 16);
  v4 = a1 & 0x1FF;
  return v2(&v4);
}

uint64_t sub_1BC45DDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[31] = a5;
  v6[32] = a6;
  v6[30] = a4;
  v7 = sub_1BC62BB34();
  v6[33] = v7;
  v6[34] = *(_QWORD *)(v7 - 8);
  v6[35] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC45DE60()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[30];
  v0[7] = v0 + 28;
  v0[2] = v0;
  v0[3] = sub_1BC45DEF4;
  v2 = swift_continuation_init();
  v0[23] = MEMORY[0x1E0C809B0];
  v3 = v0 + 23;
  v3[1] = 0x40000000;
  v3[2] = sub_1BC45E334;
  v3[3] = &block_descriptor_29;
  v3[4] = v2;
  objc_msgSend(v1, sel_deviceConfigurationSupportsHealthRecords_, v3);
  return swift_continuation_await();
}

uint64_t sub_1BC45DEF4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 288) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC45DF54()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  if (*(_QWORD *)(v0 + 224) == 1)
  {
    v1 = *(void **)(v0 + 240);
    *(_QWORD *)(v0 + 120) = v0 + 296;
    *(_QWORD *)(v0 + 80) = v0;
    *(_QWORD *)(v0 + 88) = sub_1BC45E028;
    v2 = swift_continuation_init();
    *(_QWORD *)(v0 + 144) = MEMORY[0x1E0C809B0];
    v3 = (_QWORD *)(v0 + 144);
    v3[1] = 0x40000000;
    v3[2] = sub_1BC45E3B0;
    v3[3] = &block_descriptor_11;
    v3[4] = v2;
    objc_msgSend(v1, sel_hasGatewayBackedHealthRecordsAccountWithCompletion_, v3);
    return swift_continuation_await();
  }
  else
  {
    (*(void (**)(_QWORD))(v0 + 248))(0);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BC45E028()
{
  return swift_task_switch();
}

uint64_t sub_1BC45E074()
{
  uint64_t v0;

  (*(void (**)(BOOL))(v0 + 248))((*(_BYTE *)(v0 + 296) & 1) == 0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC45E0B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD);

  v1 = *(void **)(v0 + 288);
  swift_willThrow();
  sub_1BC62BAF8();
  v2 = v1;
  v3 = v1;
  v4 = sub_1BC62BB28();
  v5 = sub_1BC62CAC4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 288);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 232) = v10;
    sub_1BC62CFF8();
    *v8 = v10;

    _os_log_impl(&dword_1BC30A000, v4, v5, "HKClinicalAccountStore.requiresOnboardingPublisher failed with error: %@", v7, 0xCu);
    sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4B80, (void (*)(uint64_t))sub_1BC3996E4);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v8, -1, -1);
    MEMORY[0x1BCCF36A8](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 288);

  }
  v13 = *(_QWORD *)(v0 + 280);
  v12 = *(void **)(v0 + 288);
  v14 = *(_QWORD *)(v0 + 264);
  v15 = *(_QWORD *)(v0 + 272);
  v16 = *(void (**)(_QWORD))(v0 + 248);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16(0);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC45E280()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC45E2B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1BC377F18;
  return sub_1BC45DDFC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1BC45E334(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    sub_1BC35E44C();
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1BC45E3B0(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t NSSecureCodingBox.value.getter@<X0>(uint64_t a1@<X8>)
{
  char *v1;

  return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1)
                                                                            + 0x50)
                                                                - 8)
                                                    + 16))(a1, &v1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1) + 0x68)]);
}

id NSSecureCodingBox.__allocating_init(_:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  id v5;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  v5 = sub_1BC45F330(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*((_QWORD *)v2 + 10) - 8) + 8))(a1);
  return v5;
}

id NSSecureCodingBox.init(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  id v4;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = sub_1BC45F330(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t sub_1BC45E4A8()
{
  return 1;
}

uint64_t static NSSecureCodingBox.supportsSecureCoding.getter()
{
  return 1;
}

id NSSecureCodingBox.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return NSSecureCodingBox.init(coder:)(a1);
}

id NSSecureCodingBox.init(coder:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  void *v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  _QWORD v22[7];
  id v23;
  char *v24;
  uint64_t v25;
  objc_super v26;

  v3 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v1);
  v4 = sub_1BC62BB34();
  v25 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v24 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v3[10];
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)v22 - v9;
  v11 = v1;
  v12 = objc_msgSend(a1, sel_decodeDataObject);
  if (v12)
  {
    v13 = v12;
    v14 = v11;
    v22[6] = v4;
    v23 = a1;
    v15 = sub_1BC62A634();
    v17 = v16;

    sub_1BC62A244();
    swift_allocObject();
    sub_1BC62A238();
    v18 = v3[11];
    sub_1BC62A22C();
    sub_1BC35D530(v15, v17);
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v14[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v14) + 0x68)], v10, v7);

    v19 = (objc_class *)type metadata accessor for NSSecureCodingBox(0, v7, v18, v3[12]);
    v26.receiver = v14;
    v26.super_class = v19;
    v20 = objc_msgSendSuper2(&v26, sel_init);

  }
  else
  {

    type metadata accessor for NSSecureCodingBox(0, v7, v3[11], v3[12]);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v20;
}

id sub_1BC45E8FC(uint64_t a1, uint64_t a2, void *a3)
{
  return NSSecureCodingBox.init(coder:)(a3);
}

void sub_1BC45E920(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;

  v2 = sub_1BC62BB34();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC62A298();
  swift_allocObject();
  sub_1BC62A28C();
  v3 = sub_1BC62A280();
  v5 = v4;
  swift_release();
  v6 = (void *)sub_1BC62A628();
  sub_1BC35D530(v3, v5);
  objc_msgSend(a1, sel_encodeDataObject_, v6);

}

void sub_1BC45EC28(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1BC45E920(v4);

}

id NSSecureCodingBox.__allocating_init(from:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return NSSecureCodingBox.init(from:)(a1);
}

id NSSecureCodingBox.init(from:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  objc_class *v14;
  char *v15;
  objc_super v16;
  _QWORD v17[4];
  _QWORD *v18;

  v18 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v1);
  v4 = v18[10];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (_QWORD *)MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v15 - v7;
  v8 = __swift_project_boxed_opaque_existential_1Tm(v6, v6[3]);
  v9 = v1;
  v10 = v8;
  sub_1BC62D6D0();
  if (v2)
  {
    v11 = v18;

    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    type metadata accessor for NSSecureCodingBox(0, v4, v11[11], v11[12]);
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1Tm(v17, v17[3]);
    v12 = v18[11];
    sub_1BC62D580();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))((char *)v9 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v9) + 0x68), v15, v4);

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
    v14 = (objc_class *)type metadata accessor for NSSecureCodingBox(0, v4, v12, v18[12]);
    v16.receiver = v9;
    v16.super_class = v14;
    v10 = objc_msgSendSuper2(&v16, sel_init);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  return v10;
}

uint64_t sub_1BC45EEA0(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC62D6E8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1BC62D58C();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

id NSSecureCodingBox.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void NSSecureCodingBox.init()()
{
  sub_1BC45F3BC();
}

void sub_1BC45EFAC()
{
  sub_1BC45F3BC();
}

uint64_t sub_1BC45EFCC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1BC45F048()
{
  return 0x65756C6176;
}

uint64_t sub_1BC45F05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC45EFCC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BC45F090@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC373A04();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BC45F0C4(uint64_t a1)
{
  MEMORY[0x1BCCF35C4](&unk_1BC641488, a1);
  return sub_1BC62D700();
}

uint64_t sub_1BC45F0F8(uint64_t a1)
{
  MEMORY[0x1BCCF35C4](&unk_1BC641488, a1);
  return sub_1BC62D70C();
}

id NSSecureCodingBox.__deallocating_deinit()
{
  _QWORD *v0;
  objc_class *v1;
  objc_super v3;

  v1 = (objc_class *)type metadata accessor for NSSecureCodingBox(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60));
  v3.receiver = v0;
  v3.super_class = v1;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1BC45F17C(char *a1)
{
  return (*(uint64_t (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x68)]);
}

uint64_t sub_1BC45F1A8(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12[2];

  v2 = v1;
  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x50);
  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x58);
  v12[0] = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x60);
  v12[1] = v4;
  v6 = type metadata accessor for NSSecureCodingBox.CodingKeys(255, v4, v5, v12[0]);
  MEMORY[0x1BCCF35C4](&unk_1BC641488, v6);
  v7 = sub_1BC62D508();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v12 - v9;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC62D6F4();
  sub_1BC62D4FC();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_1BC45F2E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = NSSecureCodingBox.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BC45F310(_QWORD *a1)
{
  return sub_1BC45F1A8(a1);
}

id sub_1BC45F330(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  objc_class *v4;
  objc_super v6;

  v2 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1);
  v3 = v2[10];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(&v1[v2[13]], a1, v3);
  v4 = (objc_class *)type metadata accessor for NSSecureCodingBox(0, v3, v2[11], v2[12]);
  v6.receiver = v1;
  v6.super_class = v4;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for NSSecureCodingBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NSSecureCodingBox);
}

void sub_1BC45F3BC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for NSSecureCodingBox.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NSSecureCodingBox.CodingKeys);
}

uint64_t sub_1BC45F3F4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for NSSecureCodingBox()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NSSecureCodingBox.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of NSSecureCodingBox.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of NSSecureCodingBox.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of NSSecureCodingBox.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of NSSecureCodingBox.encode(using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of NSSecureCodingBox.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t sub_1BC45F50C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC45F514(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC45F554 + 4 * byte_1BC641320[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC45F574 + 4 * byte_1BC641325[v4]))();
}

_BYTE *sub_1BC45F554(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC45F574(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC45F57C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC45F584(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC45F58C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC45F594(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1BC45F5A0()
{
  JUMPOUT(0x1BCCF35C4);
}

void sub_1BC45F5B0()
{
  JUMPOUT(0x1BCCF35C4);
}

void sub_1BC45F5C0()
{
  JUMPOUT(0x1BCCF35C4);
}

uint64_t UserDomainConceptListViewDataSourceProvider.__allocating_init(categoryKind:predicate:sourceProfile:store:healthStore:collectionView:enableSwipeActions:)(char *a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  char v13;

  v12 = swift_allocObject();
  v13 = *a1;
  *(_BYTE *)(v12 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v12 + 16) = v13;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  sub_1BC34E718(a4, v12 + 40);
  *(_QWORD *)(v12 + 88) = a5;
  swift_unknownObjectWeakAssign();

  return v12;
}

uint64_t UserDomainConceptListViewDataSourceProvider.init(categoryKind:predicate:sourceProfile:store:healthStore:collectionView:enableSwipeActions:)(char *a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  char v12;

  v12 = *a1;
  *(_BYTE *)(v6 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v6 + 16) = v12;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  sub_1BC34E718(a4, v6 + 40);
  *(_QWORD *)(v6 + 88) = a5;
  swift_unknownObjectWeakAssign();

  return v6;
}

uint64_t sub_1BC45F6F8()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC45F704@<X0>(char a1@<W1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = v3;
  v8 = sub_1BC62B3C0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  if ((a1 & 1) != 0)
  {
    sub_1BC62B330();
    if ((a2 & 1) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
  sub_1BC62B36C();
  if ((a2 & 1) != 0)
  {
LABEL_5:
    sub_1BC62B324();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v12, v8);
  }
LABEL_6:
  sub_1BC62B378();
  sub_1BC62B39C();
  sub_1BC62B3A8();
  sub_1BC4179B8();
  v16 = *(int *)(v15 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a3, v14, v8);
  v17 = MEMORY[0x1BCCF37A4](v4 + 96);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  *(_QWORD *)(a3 + v16) = v17;
  v18 = *MEMORY[0x1E0D2B1A0];
  v19 = sub_1BC62B318();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(a3, v18, v19);
}

uint64_t sub_1BC45F878(int a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return sub_1BC4607B8(a1, a2, a3, a4, a7);
}

uint64_t sub_1BC45F880(unsigned __int8 *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];
  char v11;
  unsigned __int8 v12;

  v12 = *a1;
  v11 = *(_BYTE *)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  v2 = *(void **)(v1 + 32);
  sub_1BC34E674(v1 + 40, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
  v4 = v2;
  v5 = v3;
  sub_1BC62A9D0();
  v6 = objc_allocWithZone((Class)type metadata accessor for UDCOlderOtherLabsDataSource());
  sub_1BC3E1B5C(&v12);
  v8 = v7;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  sub_1BC460A18();
  return v8;
}

id *UserDomainConceptListViewDataSourceProvider.deinit()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 5));
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t UserDomainConceptListViewDataSourceProvider.__deallocating_deinit()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 5));
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC45F9C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 216))();
}

_QWORD *sub_1BC45F9EC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(char *, _QWORD, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v3 = sub_1BC62B8DC();
  v85 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_traitCollection);
  v7 = objc_msgSend(v6, sel_preferredContentSizeCategory);

  sub_1BC53F250();
  v8 = (_QWORD *)sub_1BC4607B8(1, 1, 0, 0, 1);
  v9 = sub_1BC4607B8(1, 0, 0, 0, 0);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v10 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v11 = sub_1BC62A4A8();
  v13 = v12;
  swift_bridgeObjectRelease();

  v14 = sub_1BC4607B8(1, 0, v11, v13, 0);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v1 + 16) == 2)
  {
    v15 = _s15HealthRecordsUI20UDCDataSourceFactoryC018makeOnboardingDataE013configuration0a10ExperienceC008SnapshotiE0_pAC20SectionConfigurationC_tFZ_0(v9);
    v17 = v16;
    v18 = sub_1BC3B51A4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v20 = v18[2];
    v19 = v18[3];
    if (v20 >= v19 >> 1)
      v18 = sub_1BC3B51A4((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
    v18[2] = v20 + 1;
    v21 = &v18[2 * v20];
    v21[4] = v15;
    v21[5] = v17;
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  _s15HealthRecordsUI20UDCDataSourceFactoryC014makePinnedDataE013configuration0a10ExperienceC008SnapshotiE0_pAC20SectionConfigurationC_tFZ_0(v8);
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1BC3B51A4(0, v18[2] + 1, 1, v18);
  v27 = v18[2];
  v26 = v18[3];
  v83 = v14;
  v84 = v9;
  if (v27 >= v26 >> 1)
    v18 = sub_1BC3B51A4((_QWORD *)(v26 > 1), v27 + 1, 1, v18);
  v18[2] = v27 + 1;
  v28 = &v18[2 * v27];
  v28[4] = v23;
  v28[5] = v25;
  v29 = v85;
  v30 = *(void (**)(char *, _QWORD, uint64_t))(v85 + 104);
  v30(v5, *MEMORY[0x1E0D2EBD0], v3);
  _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0((uint64_t)v5, (uint64_t)v8);
  v32 = v31;
  v34 = v33;
  v35 = *(void (**)(char *, uint64_t))(v29 + 8);
  v35(v5, v3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1BC3B51A4(0, v18[2] + 1, 1, v18);
  v37 = v18[2];
  v36 = v18[3];
  if (v37 >= v36 >> 1)
    v18 = sub_1BC3B51A4((_QWORD *)(v36 > 1), v37 + 1, 1, v18);
  v18[2] = v37 + 1;
  v38 = &v18[2 * v37];
  v38[4] = v32;
  v38[5] = v34;
  v30(v5, *MEMORY[0x1E0D2EBD8], v3);
  _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0((uint64_t)v5, (uint64_t)v8);
  v40 = v39;
  v42 = v41;
  v35(v5, v3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1BC3B51A4(0, v18[2] + 1, 1, v18);
  v44 = v18[2];
  v43 = v18[3];
  if (v44 >= v43 >> 1)
    v18 = sub_1BC3B51A4((_QWORD *)(v43 > 1), v44 + 1, 1, v18);
  v18[2] = v44 + 1;
  v45 = &v18[2 * v44];
  v45[4] = v40;
  v45[5] = v42;
  v30(v5, *MEMORY[0x1E0D2EBE8], v3);
  _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0((uint64_t)v5, (uint64_t)v8);
  v47 = v46;
  v49 = v48;
  v35(v5, v3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1BC3B51A4(0, v18[2] + 1, 1, v18);
  v51 = v18[2];
  v50 = v18[3];
  if (v51 >= v50 >> 1)
    v18 = sub_1BC3B51A4((_QWORD *)(v50 > 1), v51 + 1, 1, v18);
  v18[2] = v51 + 1;
  v52 = &v18[2 * v51];
  v52[4] = v47;
  v52[5] = v49;
  v30(v5, *MEMORY[0x1E0D2EBE0], v3);
  _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0((uint64_t)v5, (uint64_t)v8);
  v54 = v53;
  v56 = v55;
  v35(v5, v3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1BC3B51A4(0, v18[2] + 1, 1, v18);
  v58 = v18[2];
  v57 = v18[3];
  if (v58 >= v57 >> 1)
    v18 = sub_1BC3B51A4((_QWORD *)(v57 > 1), v58 + 1, 1, v18);
  v18[2] = v58 + 1;
  v59 = &v18[2 * v58];
  v59[4] = v54;
  v59[5] = v56;
  v30(v5, *MEMORY[0x1E0D2EBB8], v3);
  _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0((uint64_t)v5, (uint64_t)v8);
  v61 = v60;
  v63 = v62;
  v35(v5, v3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1BC3B51A4(0, v18[2] + 1, 1, v18);
  v65 = v83;
  v64 = v84;
  v67 = v18[2];
  v66 = v18[3];
  if (v67 >= v66 >> 1)
    v18 = sub_1BC3B51A4((_QWORD *)(v66 > 1), v67 + 1, 1, v18);
  v18[2] = v67 + 1;
  v68 = &v18[2 * v67];
  v68[4] = v61;
  v68[5] = v63;
  v69 = _s15HealthRecordsUI20UDCDataSourceFactoryC023makeNavigationItemsDataE013configuration0a10ExperienceC008SnapshotjE0_pAC20SectionConfigurationC_tFZ_0(v64);
  v71 = v70;
  v73 = v18[2];
  v72 = v18[3];
  if (v73 >= v72 >> 1)
    v18 = sub_1BC3B51A4((_QWORD *)(v72 > 1), v73 + 1, 1, v18);
  v18[2] = v73 + 1;
  v74 = &v18[2 * v73];
  v74[4] = v69;
  v74[5] = v71;
  v75 = _s15HealthRecordsUI20UDCDataSourceFactoryC037makeRemovedCategoryNavigationItemDataE013configuration0a10ExperienceC008SnapshotlE0_pAC20SectionConfigurationC_tFZ_0(v65);
  v77 = v76;
  v79 = v18[2];
  v78 = v18[3];
  if (v79 >= v78 >> 1)
    v18 = sub_1BC3B51A4((_QWORD *)(v78 > 1), v79 + 1, 1, v18);
  v18[2] = v79 + 1;
  v80 = &v18[2 * v79];
  v80[4] = v75;
  v80[5] = v77;
  swift_release();
  swift_release();
  swift_release();
  return v18;
}

_QWORD *sub_1BC460098()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;

  v1 = (_QWORD *)sub_1BC4607B8(1, 1, 0, 0, 0);
  v2 = sub_1BC4607B8(1, 0, 0, 0, 0);
  v3 = *(unsigned __int8 *)(v0 + 16);
  if ((v3 - 1) > 1)
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    _s15HealthRecordsUI20UDCDataSourceFactoryC014makePinnedDataE013configuration0a10ExperienceC008SnapshotiE0_pAC20SectionConfigurationC_tFZ_0(v1);
    v5 = v4;
    v7 = v6;
    v8 = sub_1BC3B51A4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_1BC3B51A4((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = &v8[2 * v10];
    v11[4] = v5;
    v11[5] = v7;
  }
  _s15HealthRecordsUI20UDCDataSourceFactoryC025makeUserDomainConceptDataE013configuration0a10ExperienceC008SnapshotkE0_pAC20SectionConfigurationC_tFZ_0((uint64_t)v1);
  v13 = v12;
  v15 = v14;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = sub_1BC3B51A4(0, v8[2] + 1, 1, v8);
  v17 = v8[2];
  v16 = v8[3];
  if (v17 >= v16 >> 1)
    v8 = sub_1BC3B51A4((_QWORD *)(v16 > 1), v17 + 1, 1, v8);
  v8[2] = v17 + 1;
  v18 = &v8[2 * v17];
  v18[4] = v13;
  v18[5] = v15;
  if (v3 == 2)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v19 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v20 = sub_1BC62A4A8();
    v22 = v21;
    swift_bridgeObjectRelease();

    v23 = sub_1BC4607B8(1, 0, v20, v22, 0);
    swift_bridgeObjectRelease();
    v24 = _s15HealthRecordsUI20UDCDataSourceFactoryC023makeNavigationItemsDataE013configuration0a10ExperienceC008SnapshotjE0_pAC20SectionConfigurationC_tFZ_0(v2);
    v26 = v25;
    v28 = v8[2];
    v27 = v8[3];
    if (v28 >= v27 >> 1)
      v8 = sub_1BC3B51A4((_QWORD *)(v27 > 1), v28 + 1, 1, v8);
    v8[2] = v28 + 1;
    v29 = &v8[2 * v28];
    v29[4] = v24;
    v29[5] = v26;
    v30 = _s15HealthRecordsUI20UDCDataSourceFactoryC037makeRemovedCategoryNavigationItemDataE013configuration0a10ExperienceC008SnapshotlE0_pAC20SectionConfigurationC_tFZ_0(v23);
    v32 = v31;
    v34 = v8[2];
    v33 = v8[3];
    if (v34 >= v33 >> 1)
      v8 = sub_1BC3B51A4((_QWORD *)(v33 > 1), v34 + 1, 1, v8);
    v8[2] = v34 + 1;
    v35 = &v8[2 * v34];
    v35[4] = v30;
    v35[5] = v32;
    swift_release();
  }
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_1BC4603A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[4];
  char v12;
  unsigned __int8 v13;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0F0, (uint64_t (*)(uint64_t))sub_1BC37932C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC639590;
  v13 = 2;
  v12 = *(_BYTE *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  sub_1BC34E674(v0 + 40, (uint64_t)v11);
  __swift_project_boxed_opaque_existential_1Tm(v11, v11[3]);
  v4 = v2;
  v5 = v3;
  sub_1BC62A9D0();
  v6 = objc_allocWithZone((Class)type metadata accessor for UDCOlderOtherLabsDataSource());
  sub_1BC3E1B5C(&v13);
  v8 = v7;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  v9 = sub_1BC460A18();
  *(_QWORD *)(v1 + 32) = v8;
  *(_QWORD *)(v1 + 40) = v9;
  return v1;
}

uint64_t sub_1BC4604B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[4];
  char v12;
  unsigned __int8 v13;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0F0, (uint64_t (*)(uint64_t))sub_1BC37932C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC639590;
  v13 = 1;
  v12 = *(_BYTE *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  sub_1BC34E674(v0 + 40, (uint64_t)v11);
  __swift_project_boxed_opaque_existential_1Tm(v11, v11[3]);
  v4 = v2;
  v5 = v3;
  sub_1BC62A9D0();
  v6 = objc_allocWithZone((Class)type metadata accessor for UDCOlderOtherLabsDataSource());
  sub_1BC3E1B5C(&v13);
  v8 = v7;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  v9 = sub_1BC460A18();
  *(_QWORD *)(v1 + 32) = v8;
  *(_QWORD *)(v1 + 40) = v9;
  return v1;
}

uint64_t _s15HealthRecordsUI45UserDomainConceptLatestViewDataSourceProviderC12categoryKind9predicate13sourceProfile5store11healthStore010collectionH018enableSwipeActionsAcA15DisplayCategoryV0M0O_So11NSPredicateC0A8Platform0jP0OAQ0a10ExperienceS0_pSo08HKHealthS0CSo012UICollectionH0CSbtcfC_0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  char v13;
  __int128 v15[2];

  v12 = swift_allocObject();
  v13 = *a1;
  sub_1BC34E674(a4, (uint64_t)v15);
  *(_BYTE *)(v12 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v12 + 16) = v13;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  sub_1BC34E718(v15, v12 + 40);
  *(_QWORD *)(v12 + 88) = a5;
  swift_unknownObjectWeakAssign();

  __swift_destroy_boxed_opaque_existential_1Tm(a4);
  return v12;
}

uint64_t _s15HealthRecordsUI45UserDomainConceptLatestViewDataSourceProviderC12categoryKind9predicate13sourceProfile5store11healthStore010collectionH018enableSwipeActionsAcA15DisplayCategoryV0M0O_So11NSPredicateC0A8Platform0jP0OAQ0a10ExperienceS0_pSo08HKHealthS0CSo012UICollectionH0CSbtcfc_0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  char v12;
  __int128 v14[2];

  v12 = *a1;
  sub_1BC34E674(a4, (uint64_t)v14);
  *(_BYTE *)(v6 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v6 + 16) = v12;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  sub_1BC34E718(v14, v6 + 40);
  *(_QWORD *)(v6 + 88) = a5;
  swift_unknownObjectWeakAssign();

  __swift_destroy_boxed_opaque_existential_1Tm(a4);
  return v6;
}

id *_s15HealthRecordsUI45UserDomainConceptLatestViewDataSourceProviderCfd_0()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 5));
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t _s15HealthRecordsUI45UserDomainConceptLatestViewDataSourceProviderCfD_0()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 5));
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC4607A0(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a3;
  *(_QWORD *)(v5 + 16) = result + 1;
  v6 = v5 + 16 * result;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a5;
  return result;
}

uint64_t sub_1BC4607B8(int a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void *v24;
  void *v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  _DWORD v32[2];
  uint64_t v33;
  int v34;
  __int128 v35[2];

  v6 = v5;
  v34 = a5;
  v33 = a3;
  v32[1] = a1;
  v9 = sub_1BC62B3C0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v32 - v14;
  v16 = sub_1BC62B318();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    sub_1BC62B330();
    if (!a4)
      goto LABEL_6;
    goto LABEL_5;
  }
  sub_1BC62B36C();
  if (a4)
  {
LABEL_5:
    sub_1BC62B324();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v9);
  }
LABEL_6:
  sub_1BC62B378();
  sub_1BC62B39C();
  sub_1BC62B3A8();
  sub_1BC4179B8();
  v21 = *(int *)(v20 + 48);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v15, v9);
  v22 = MEMORY[0x1BCCF37A4](v6 + 96);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  *(_QWORD *)&v19[v21] = v22;
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0D2B1A0], v16);
  v23 = *(_BYTE *)(v6 + 16);
  v25 = *(void **)(v6 + 24);
  v24 = *(void **)(v6 + 32);
  sub_1BC34E674(v6 + 40, (uint64_t)v35);
  v26 = *(_BYTE *)(v6 + 80);
  type metadata accessor for UDCDataSourceFactory.SectionConfiguration();
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 16) = v23;
  *(_QWORD *)(v27 + 24) = v25;
  *(_QWORD *)(v27 + 32) = v24;
  sub_1BC34E718(v35, v27 + 40);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v27 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType, v19, v16);
  *(_BYTE *)(v27 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_navigationType) = v26;
  v28 = (_QWORD *)(v27 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_footerText);
  *v28 = v33;
  v28[1] = a4;
  *(_BYTE *)(v27 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_sortByDate) = v34 & 1;
  swift_bridgeObjectRetain();
  v29 = v25;
  v30 = v24;
  return v27;
}

unint64_t sub_1BC460A18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF430AB0;
  if (!qword_1EF430AB0)
  {
    v1 = type metadata accessor for UDCOlderOtherLabsDataSource();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D2B7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF430AB0);
  }
  return result;
}

uint64_t type metadata accessor for UserDomainConceptListViewDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for UserDomainConceptListViewDataSourceProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserDomainConceptListViewDataSourceProvider.__allocating_init(categoryKind:predicate:sourceProfile:store:healthStore:collectionView:enableSwipeActions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of UserDomainConceptListViewDataSourceProvider.selectedDataSources(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of UserDomainConceptListViewDataSourceProvider.layoutType(swipeActions:showHeader:showFooter:estimatedRowHeight:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v5 + 224))(a1, a2, a3, a4, a5 & 1);
}

uint64_t dispatch thunk of UserDomainConceptListViewDataSourceProvider.sectionConfiguration(swipeActions:showHeader:footerText:estimatedRowHeight:sortByDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v6 + 232))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of UserDomainConceptListViewDataSourceProvider.makeDataSource(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t type metadata accessor for UserDomainConceptLatestViewDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UserDomainConceptAlphabeticalViewDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UserDomainConceptOtherViewDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UserDomainConceptOlderViewDataSourceProvider()
{
  return objc_opt_self();
}

unint64_t static ActionButtonCell.defaultReuseIdentifier.getter()
{
  return 0xD000000000000010;
}

id ActionButtonCell.titleLabel.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel);
}

void *sub_1BC460BFC()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1BC460C90(void *a1)
{
  sub_1BC461B4C(a1);

}

void (*sub_1BC460CB4(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC460D0C;
}

void sub_1BC460D0C(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = v3[4];
    v6 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView);
    objc_msgSend(v6, sel_setHidden_, *(_QWORD *)(v4 + v5) == 0);
    objc_msgSend(v6, sel_setImage_, *(_QWORD *)(v4 + v5));
    sub_1BC461708();
  }
  free(v3);
}

uint64_t sub_1BC460DCC()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1BC460E58(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BC460EA0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id ActionButtonCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id ActionButtonCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  objc_super v16;

  v6 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel;
  v7 = (void *)objc_opt_self();
  v8 = v3;
  v9 = objc_msgSend(v7, sel_labelColor);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v10, sel_setFont_, 0);
  objc_msgSend(v10, sel_setNumberOfLines_, 1);
  objc_msgSend(v10, sel_setTextColor_, v9);

  *(_QWORD *)&v3[v6] = v10;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabelLeadingConstraint] = 0;
  v11 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView;
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon] = 0;
  v8[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled] = 1;

  if (a3)
  {
    v12 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v16.receiver = v8;
  v16.super_class = (Class)type metadata accessor for ActionButtonCell();
  v13 = objc_msgSendSuper2(&v16, sel_initWithStyle_reuseIdentifier_, a1, v12);

  v14 = v13;
  sub_1BC46116C();

  return v14;
}

id sub_1BC46116C()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id result;
  void *v30;
  double v31;
  double v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  double v38;
  double v39;
  id v40;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v1, sel_setHidden_, 1);
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel];
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v2, sel_setFont_, v3);

  v4 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  v5 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v5, sel_addSubview_, v1);

  v6 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v6, sel_addSubview_, v2);

  v7 = objc_msgSend(v1, sel_widthAnchor);
  v8 = objc_msgSend(v1, sel_heightAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_multiplier_, v8, 1.0);

  objc_msgSend(v9, sel_setActive_, 1);
  v10 = objc_msgSend(v1, sel_leadingAnchor);
  v11 = objc_msgSend(v0, sel_contentView);
  v12 = objc_msgSend(v11, sel_leadingAnchor);

  v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v12, 16.0);
  objc_msgSend(v13, sel_setActive_, 1);

  v14 = objc_msgSend(v1, sel_topAnchor);
  v15 = objc_msgSend(v0, sel_contentView);
  v16 = objc_msgSend(v15, sel_topAnchor);

  v17 = objc_msgSend(v14, sel_constraintEqualToSystemSpacingBelowAnchor_multiplier_, v16, 1.0);
  objc_msgSend(v17, sel_setActive_, 1);

  v18 = objc_msgSend(v0, sel_contentView);
  v19 = objc_msgSend(v18, sel_bottomAnchor);

  v20 = objc_msgSend(v1, sel_bottomAnchor);
  v21 = objc_msgSend(v19, sel_constraintGreaterThanOrEqualToSystemSpacingBelowAnchor_multiplier_, v20, 1.0);

  objc_msgSend(v21, sel_setActive_, 1);
  v22 = objc_msgSend(v2, sel_trailingAnchor);
  v23 = objc_msgSend(v0, sel_contentView);
  v24 = objc_msgSend(v23, sel_trailingAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, -16.0);
  objc_msgSend(v25, sel_setActive_, 1);

  v26 = objc_msgSend(v2, sel_firstBaselineAnchor);
  v27 = objc_msgSend(v0, sel_contentView);
  v28 = objc_msgSend(v27, sel_topAnchor);

  result = objc_msgSend(v2, sel_font);
  if (result)
  {
    v30 = result;
    objc_msgSend(result, sel__scaledValueForValue_, 29.0);
    v32 = v31;

    v33 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, v32);
    objc_msgSend(v33, sel_setActive_, 1);

    v34 = objc_msgSend(v2, sel_lastBaselineAnchor);
    v35 = objc_msgSend(v0, sel_contentView);
    v36 = objc_msgSend(v35, sel_bottomAnchor);

    result = objc_msgSend(v2, sel_font);
    if (result)
    {
      v37 = result;
      objc_msgSend(result, sel__scaledValueForValue_, 15.0);
      v39 = v38;

      v40 = objc_msgSend(v34, sel_constraintEqualToAnchor_constant_, v36, -v39);
      objc_msgSend(v40, sel_setActive_, 1);

      return sub_1BC461708();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1BC461708()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id result;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabelLeadingConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabelLeadingConstraint];
  if (v2)
    objc_msgSend(v2, sel_setActive_, 0);
  v3 = &v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon];
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel], sel_leadingAnchor);
  if (v4)
  {
    v6 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView], sel_trailingAnchor);
    v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, 8.0);
  }
  else
  {
    v8 = objc_msgSend(v0, sel_contentView);
    v6 = objc_msgSend(v8, sel_leadingAnchor);

    v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, 16.0);
  }
  v9 = v7;

  v10 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = v9;

  result = *(id *)&v0[v1];
  if (result)
    return objc_msgSend(result, sel_setActive_, 1);
  return result;
}

void sub_1BC461854(char a1)
{
  char *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;

  if ((a1 & 1) != 0)
  {
    v2 = objc_msgSend(v1, sel_accessoryView);

    if (!v2)
    {
      v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
      v4 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
      objc_msgSend(v3, sel_setColor_, v4);

      objc_msgSend(v1, sel_setAccessoryView_, v3);
      objc_msgSend(v3, sel_startAnimating);

    }
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView], sel_setAlpha_, 0.5);
    v5 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor;
    v6 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor];
    v7 = v6;
    v8 = v6;
    if (!v6)
    {
      v8 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel], sel_textColor);
      v7 = *(void **)&v1[v5];
    }
    *(_QWORD *)&v1[v5] = v8;
    v9 = v6;

    v10 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel];
    v17 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
    objc_msgSend(v10, sel_setTextColor_, v17);
    v11 = v17;
  }
  else
  {
    objc_msgSend(v1, sel_setAccessoryView_, 0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView], sel_setAlpha_, 1.0);
    v12 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel];
    v13 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor;
    v14 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor];
    if (v14)
    {
      v15 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor];
    }
    else
    {
      v15 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel], sel_textColor);
      v14 = 0;
    }
    v16 = v14;
    objc_msgSend(v12, sel_setTextColor_, v15);

    v11 = *(void **)&v1[v13];
    *(_QWORD *)&v1[v13] = 0;
  }

}

id ActionButtonCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActionButtonCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC461B4C(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id v5;
  void *v6;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon);
  swift_beginAccess();
  v4 = (void *)*v3;
  *v3 = a1;
  v5 = a1;

  v6 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView);
  objc_msgSend(v6, sel_setHidden_, *v3 == 0);
  objc_msgSend(v6, sel_setImage_, *v3);
  return sub_1BC461708();
}

uint64_t type metadata accessor for ActionButtonCell()
{
  return objc_opt_self();
}

id sub_1BC461C08@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1BC461C58(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1BC461B4C(v1);

}

uint64_t sub_1BC461C94@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1BC461CE4(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t method lookup function for ActionButtonCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActionButtonCell.icon.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ActionButtonCell.icon.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ActionButtonCell.icon.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ActionButtonCell.actionEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ActionButtonCell.actionEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ActionButtonCell.actionEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ActionButtonCell.setBusy(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

void sub_1BC461E00()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel;
  v2 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v3, sel_setFont_, 0);
  objc_msgSend(v3, sel_setNumberOfLines_, 1);
  objc_msgSend(v3, sel_setTextColor_, v2);

  *(_QWORD *)&v0[v1] = v3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabelLeadingConstraint] = 0;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon] = 0;
  v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled] = 1;

  sub_1BC62D394();
  __break(1u);
}

uint64_t static DateInterval.pastSevenDays.getter()
{
  return sub_1BC461F64((void (*)(char *))static DateInterval.weekInterval(ending:));
}

uint64_t static DateInterval.today.getter()
{
  return sub_1BC461F64((void (*)(char *))static DateInterval.dayInterval(containing:));
}

uint64_t sub_1BC461F64(void (*a1)(char *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1BC62A760();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A730();
  a1(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t static DateInterval.dayInterval(containing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v40 = a2;
  v3 = sub_1BC62A8C8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v33 - v8;
  v9 = sub_1BC62A8D4();
  v10 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62A760();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v39 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v38 = (char *)&v33 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v35 = (char *)&v33 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v37 = (char *)&v33 - v22;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v33 - v23;
  sub_1BC62A8A4();
  sub_1BC62A844();
  v25 = *(void (**)(char *, uint64_t))(v10 + 8);
  v25(v12, v9);
  sub_1BC62A8A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CB1130], v3);
  v26 = v36;
  sub_1BC62A88C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v27 = (uint64_t)v26;
  v28 = v35;
  v25(v12, v34);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v29(v28, a1, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v27, 1, v13) == 1)
  {
    v30 = v37;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v37, v28, v13);
    sub_1BC36D71C(v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v13);
    v30 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v37, v27, v13);
  }
  v29(v38, (uint64_t)v24, v13);
  v29(v39, (uint64_t)v30, v13);
  sub_1BC62A2F8();
  v31 = *(void (**)(char *, uint64_t))(v14 + 8);
  v31(v30, v13);
  return ((uint64_t (*)(char *, uint64_t))v31)(v24, v13);
}

uint64_t static DateInterval.dayInterval(containing:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v10;

  v4 = sub_1BC62A760();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_date);
  sub_1BC62A724();

  static DateInterval.dayInterval(containing:)((uint64_t)v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void static DateInterval.dayInterval(containing:)(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;

  v2 = sub_1BC62A760();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1EF431128, (uint64_t (*)(uint64_t))sub_1BC462744, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  v6 = (void *)sub_1BC62C50C();
  v7 = objc_msgSend(v6, sel_date);
  sub_1BC62A724();

  static DateInterval.dayInterval(containing:)((uint64_t)v5, a1);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

}

uint64_t static DateInterval.weekInterval(ending:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v30 = a1;
  v32 = a2;
  v2 = sub_1BC62A8C8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62A8D4();
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_1BC62A760();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v31 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v29 = (char *)&v27 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v27 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v27 - v21;
  sub_1BC62A8A4();
  v23 = v2;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CB1130], v2);
  v24 = v30;
  sub_1BC62A88C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v28);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v25(v20, v24, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v20, v12);
    sub_1BC36D71C((uint64_t)v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v11, v12);
  }
  v25(v29, (uint64_t)v22, v12);
  v25(v31, v24, v12);
  sub_1BC62A2F8();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v22, v12);
}

unint64_t sub_1BC462744()
{
  unint64_t result;

  result = qword_1EF431130;
  if (!qword_1EF431130)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF431130);
  }
  return result;
}

uint64_t DateInterval.contains(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v2 = sub_1BC62A760();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_date);
  sub_1BC62A724();

  LOBYTE(v6) = sub_1BC62A310();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t DateInterval.contains(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  char v6;
  uint64_t v8;

  v0 = sub_1BC62A760();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1EF431128, (uint64_t (*)(uint64_t))sub_1BC462744, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  v4 = (void *)sub_1BC62C50C();
  v5 = objc_msgSend(v4, sel_date);
  sub_1BC62A724();

  v6 = sub_1BC62A310();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);

  return v6 & 1;
}

BOOL UIView.isRTL.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection) == (id)1;
}

uint64_t UIView.sizeThatFits(width:)(double a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v10;

  v2 = v1;
  v4 = sub_1BC62D55C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v2, sel_sizeThatFits_, a1, 1.79769313e308);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DED500], v4);
  v8 = objc_msgSend(v2, sel_traitCollection);
  objc_msgSend(v8, sel_displayScale);
  sub_1BC62A994();
  objc_msgSend(v8, sel_displayScale);
  sub_1BC62A994();

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double UIView.height(forWidth:)(double a1)
{
  void *v1;
  double v2;

  objc_msgSend(v1, sel_sizeThatFits_, a1, 1.79769313e308);
  return v2;
}

id sub_1BC462A98()
{
  return _sSo6UIViewC15HealthRecordsUIE11makeChevronAByFZ_0();
}

double UIView.size(forWidth:)(double a1)
{
  void *v1;

  objc_msgSend(v1, sel_sizeThatFits_, a1, 1.79769313e308);
  return a1;
}

__C::CGRect __swiftcall UIView.insetRect(_:by:)(__C::CGRect _, NSDirectionalEdgeInsets by)
{
  void *v2;
  double trailing;
  double leading;
  double top;
  double height;
  double width;
  double y;
  double x;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  __C::CGRect result;

  trailing = by.trailing;
  leading = by.leading;
  top = by.top;
  height = _.size.height;
  width = _.size.width;
  y = _.origin.y;
  x = _.origin.x;
  if (objc_msgSend(v2, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
    v10 = trailing;
  else
    v10 = leading;
  v11 = UIEdgeInsetsInsetRect(x, y, width, height, top, v10);
  result.size.height = v14;
  result.size.width = v13;
  result.origin.y = v12;
  result.origin.x = v11;
  return result;
}

id _sSo6UIViewC15HealthRecordsUIE11makeChevronAByFZ_0()
{
  id v0;
  void *v1;
  id v2;
  double v3;
  double v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v0, sel_setContentMode_, 4);
  sub_1BC462CD0();
  v1 = (void *)sub_1BC62CE54();
  objc_msgSend(v0, sel_setImage_, v1);

  v2 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v0, sel_setTintColor_, v2);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);
  return v0;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

unint64_t sub_1BC462CD0()
{
  unint64_t result;

  result = qword_1ED6A47F8;
  if (!qword_1ED6A47F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A47F8);
  }
  return result;
}

unint64_t RecordCategoryViewController.ModeSegment.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 5;
  if (result < 5)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t RecordCategoryViewController.ModeSegment.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1BC462D2C()
{
  unint64_t result;

  result = qword_1EF431138;
  if (!qword_1EF431138)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for RecordCategoryViewController.ModeSegment, &type metadata for RecordCategoryViewController.ModeSegment);
    atomic_store(result, (unint64_t *)&qword_1EF431138);
  }
  return result;
}

unint64_t sub_1BC462D70@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return RecordCategoryViewController.ModeSegment.init(rawValue:)(*a1, a2);
}

uint64_t _s11ModeSegmentOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BC462DC4 + 4 * byte_1BC6416D1[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BC462DF8 + 4 * byte_1BC6416CC[v4]))();
}

uint64_t sub_1BC462DF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC462E00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC462E08);
  return result;
}

uint64_t sub_1BC462E14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC462E1CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BC462E20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC462E28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecordCategoryViewController.ModeSegment()
{
  return &type metadata for RecordCategoryViewController.ModeSegment;
}

uint64_t _s11DisplayModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x1E)
    goto LABEL_17;
  if (a2 + 226 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 226) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 226;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 226;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 226;
  }
LABEL_17:
  v6 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v6 >= 0x1D)
    v6 = -1;
  return v6 + 1;
}

uint64_t _s11DisplayModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 226 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 226) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1D)
    return ((uint64_t (*)(void))((char *)&loc_1BC462F30 + 4 * byte_1BC6416DB[v4]))();
  *a1 = a2 - 30;
  return ((uint64_t (*)(void))((char *)sub_1BC462F64 + 4 * byte_1BC6416D6[v4]))();
}

uint64_t sub_1BC462F64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC462F6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC462F74);
  return result;
}

uint64_t sub_1BC462F8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC462F94);
  *(_BYTE *)result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
  return result;
}

uint64_t sub_1BC462F98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC462FA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC462FAC(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 6;
  else
    return (v1 & 7u) + 2;
}

_BYTE *sub_1BC462FC8(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_1BC462FD8(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 7 | ((_BYTE)a2 << 6);
  else
    *result = (a2 + 6) & 7 | 0x80;
  return result;
}

ValueMetadata *_s11DisplayModeOMa()
{
  return &_s11DisplayModeON;
}

uint64_t sub_1BC46301C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      if ((v3 & 0xC0) == 0x40)
        return ((v3 ^ v2) & 0x3F) == 0;
    }
    else if (v3 == 128)
    {
      return 1;
    }
  }
  else if (v3 < 0x40)
  {
    return ((v3 ^ v2) & 1) == 0;
  }
  return 0;
}

char *sub_1BC463080(_BYTE *a1)
{
  char *v1;
  uint64_t inited;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;

  if (*a1 == 2)
    return (char *)&unk_1E74D2D08;
  sub_1BC463248();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6398E0;
  *(_WORD *)(inited + 32) = 513;
  *(_BYTE *)(inited + 34) = 5;
  v1 = sub_1BC3B6658(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v4 = *((_QWORD *)v1 + 2);
  v3 = *((_QWORD *)v1 + 3);
  if (v4 >= v3 >> 1)
    v1 = sub_1BC3B6658((char *)(v3 > 1), v4 + 1, 1, v1);
  *((_QWORD *)v1 + 2) = v4 + 1;
  v1[v4 + 32] = 1;
  v5 = *(unsigned __int8 *)(inited + 33);
  if (v5 != 5)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_1BC3B6658(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
    v7 = *((_QWORD *)v1 + 2);
    v6 = *((_QWORD *)v1 + 3);
    if (v7 >= v6 >> 1)
      v1 = sub_1BC3B6658((char *)(v6 > 1), v7 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v7 + 1;
    v1[v7 + 32] = v5;
  }
  v8 = *(unsigned __int8 *)(inited + 34);
  if (v8 != 5)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_1BC3B6658(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
    v10 = *((_QWORD *)v1 + 2);
    v9 = *((_QWORD *)v1 + 3);
    if (v10 >= v9 >> 1)
      v1 = sub_1BC3B6658((char *)(v9 > 1), v10 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v10 + 1;
    v1[v10 + 32] = v8;
  }
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1BC463248()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF431140)
  {
    sub_1BC46329C();
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF431140);
  }
}

void sub_1BC46329C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF431148)
  {
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF431148);
  }
}

uint64_t _s12NoDataReasonOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC46333C + 4 * byte_1BC6416E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC463370 + 4 * byte_1BC6416E0[v4]))();
}

uint64_t sub_1BC463370(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC463378(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC463380);
  return result;
}

uint64_t sub_1BC46338C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC463394);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC463398(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4633A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12NoDataReasonOMa()
{
  return &_s12NoDataReasonON;
}

unint64_t sub_1BC4633C0()
{
  unint64_t result;

  result = qword_1EF431150;
  if (!qword_1EF431150)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6417F4, &_s12NoDataReasonON);
    atomic_store(result, (unint64_t *)&qword_1EF431150);
  }
  return result;
}

uint64_t static ViewControllerFactoryError.== infix(_:_:)()
{
  return 1;
}

uint64_t ViewControllerFactoryError.hash(into:)()
{
  return sub_1BC62D67C();
}

uint64_t ViewControllerFactoryError.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

BOOL static ViewControllerStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ViewControllerStyle.hash(into:)()
{
  return sub_1BC62D67C();
}

uint64_t ViewControllerStyle.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t ConceptViewControllerFactory.makeViewController(forConcept:fromDisplayCategory:highlightedRecord:using:)(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  id v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v18[4];
  uint64_t v19;

  v16 = a2[1];
  v17 = *a2;
  v14 = a2[3];
  v15 = a2[2];
  v10 = *((_QWORD *)a2 + 8);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB64B0]), sel_initWithRawIdentifier_, a1);
  v18[0] = v17;
  v18[1] = v16;
  v18[2] = v15;
  v18[3] = v14;
  v19 = v10;
  v12 = (*(uint64_t (**)(id, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8))(v11, v18, a3, a4, a5, a6);

  return v12;
}

unint64_t sub_1BC4635D4()
{
  unint64_t result;

  result = qword_1EF431158;
  if (!qword_1EF431158)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for ViewControllerFactoryError, &type metadata for ViewControllerFactoryError);
    atomic_store(result, (unint64_t *)&qword_1EF431158);
  }
  return result;
}

unint64_t sub_1BC46361C()
{
  unint64_t result;

  result = qword_1EF431160;
  if (!qword_1EF431160)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for ViewControllerStyle, &type metadata for ViewControllerStyle);
    atomic_store(result, (unint64_t *)&qword_1EF431160);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ViewControllerFactoryError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC4636A0 + 4 * byte_1BC641860[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC4636C0 + 4 * byte_1BC641865[v4]))();
}

_BYTE *sub_1BC4636A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC4636C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4636C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4636D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4636D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4636E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ViewControllerFactoryError()
{
  return &type metadata for ViewControllerFactoryError;
}

uint64_t storeEnumTagSinglePayload for ViewControllerStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC463748 + 4 * byte_1BC64186F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC46377C + 4 * byte_1BC64186A[v4]))();
}

uint64_t sub_1BC46377C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC463784(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC46378CLL);
  return result;
}

uint64_t sub_1BC463798(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4637A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC4637A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4637AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewControllerStyle()
{
  return &type metadata for ViewControllerStyle;
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeViewController(forAccount:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeSettingsViewControllerAssumingHealthRecordsAreAvailable(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeAccountDetailViewController(forAccountID:using:style:sourceIdentifier:standalone:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeAccountDetailViewController(for:using:style:sourceIdentifier:standalone:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.viewControllerIsAccountDetailViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeAndPresentAddAccountViewController(for:from:onboardingContext:gatewayProxyToTry:sourceIdentifier:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 48))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeAndPresentOnboardingTileViewController(for:from:sourceIdentifier:animated:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 56))();
}

uint64_t dispatch thunk of ConceptViewControllerFactory.makeViewController(forConcept:fromDisplayCategory:highlightedRecord:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of RecordViewControllerFactory.makeViewController(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of RecordViewControllerFactory.makeDetailViewController(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

unint64_t static AccountUpgradeTileCell.reuseIdentifier.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1BC463884@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = OBJC_IVAR___HRAccountUpgradeTileCell_accounts;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRAccountUpgradeTileCell_accounts);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v15 != 1)
      goto LABEL_13;
  }
  else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_13:
    v11 = sub_1BC62A7B4();
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v13 = a1;
    v14 = 1;
    return v12(v13, v14, 1, v11);
  }
  v5 = *(_QWORD *)(v1 + v3);
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_5;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  if (!result)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x1BCCF24CC](0, v5);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v5 + 32);
LABEL_8:
    v9 = v8;
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v9, sel_identifier);

    sub_1BC62A79C();
    v11 = sub_1BC62A7B4();
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v13 = a1;
    v14 = 0;
    return v12(v13, v14, 1, v11);
  }
  __break(1u);
  return result;
}

id AccountUpgradeTileCell.__allocating_init(profile:presentingViewController:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return AccountUpgradeTileCell.init(profile:presentingViewController:)(a1, a2);
}

id AccountUpgradeTileCell.init(profile:presentingViewController:)(void *a1, void *a2)
{
  char *v2;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v2[OBJC_IVAR___HRAccountUpgradeTileCell_accounts] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v2[OBJC_IVAR___HRAccountUpgradeTileCell_cancellable] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___HRAccountUpgradeTileCell_tileView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___HRAccountUpgradeTileCell_profile] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___HRAccountUpgradeTileCell_viewController] = a2;
  v4 = a1;
  v5 = a2;
  v6 = (void *)sub_1BC62C650();
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for AccountUpgradeTileCell();
  v7 = objc_msgSendSuper2(&v11, sel_initWithStyle_reuseIdentifier_, 0, v6);

  v8 = v7;
  sub_1BC464988();
  sub_1BC463CA0();
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1EF428680 != -1)
    swift_once();
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v8, sel_reloadDataSource, qword_1EF4335F0, 0);

  return v8;
}

uint64_t type metadata accessor for AccountUpgradeTileCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC463CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;

  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DF0, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v31 - v2;
  sub_1BC3AB8AC();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3AB9E8();
  v10 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  v33 = v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(v0 + OBJC_IVAR___HRAccountUpgradeTileCell_profile);
  type metadata accessor for ClinicalAccountManager();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x1E0DEE9E8];
  v14[5] = 0;
  v14[6] = 0;
  v14[4] = v15;
  v14[2] = v13;
  v16 = v13;
  v14[3] = objc_msgSend(v16, sel_clinicalAccountStore);
  v17 = objc_msgSend(v16, sel_healthStore);
  type metadata accessor for AccountStatusSummaryTileSettingsManager();
  v18 = swift_allocObject();
  v19 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = v19;
  v20 = v17;
  sub_1BC5DF494();

  v21 = MEMORY[0x1E0C960D8];
  sub_1BC3ABAB8(0, (unint64_t *)&qword_1EF42BCF0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC3AB9A8(&qword_1EF42BD00, (unint64_t *)&qword_1EF42BCF0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v21, MEMORY[0x1E0C96108]);
  swift_retain();
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF42BD20, (uint64_t (*)(uint64_t))sub_1BC3AB8AC, MEMORY[0x1E0C96148]);
  v22 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v35 = v22;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v34 = (id)sub_1BC62CC74();
  v23 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v3, 1, 1, v23);
  v24 = MEMORY[0x1E0C95D78];
  sub_1BC3ABAB8(0, &qword_1EF42BD10, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC3AB9A8(&qword_1EF42BD18, &qword_1EF42BD10, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v24, MEMORY[0x1E0C95D90]);
  sub_1BC3ABB20();
  sub_1BC62C080();
  sub_1BC384EB4((uint64_t)v3, (unint64_t *)&qword_1ED6A4DF0, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);

  swift_release();
  v25 = swift_allocObject();
  v26 = v31[1];
  swift_unknownObjectWeakInit();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v25;
  *(_QWORD *)(v27 + 24) = v18;
  sub_1BC347F0C(&qword_1EF42BD28, (uint64_t (*)(uint64_t))sub_1BC3AB9E8, MEMORY[0x1E0C95CB8]);
  swift_retain();
  v28 = v32;
  v29 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v28);
  *(_QWORD *)(v26 + OBJC_IVAR___HRAccountUpgradeTileCell_cancellable) = v29;
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1BC4640A0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  _QWORD *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62[3];
  char v63;
  uint64_t v64;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v4);
  v54 = (char *)&v51 - v5;
  v55 = sub_1BC62A7B4();
  v6 = *(_QWORD **)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v51 - v10;
  v12 = sub_1BC62B918();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  swift_beginAccess();
  v17 = MEMORY[0x1BCCF37A4](a2 + 16);
  if (v17)
  {
    v18 = v17;
    v64 = MEMORY[0x1E0DEE9D8];
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0D2EDC0], v12);
    v19 = sub_1BC5E0674((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v58 = v16;
    v52 = v8;
    v53 = (char *)v18;
    if (v16 >> 62)
      goto LABEL_51;
    v20 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (2)
    {
      v21 = v55;
      v60 = v6;
      if (v20)
      {
        v22 = 0;
        v59 = v58 & 0xC000000000000001;
        v61 = v19[2];
        v56 = v58 + 32;
        v57 = v58 & 0xFFFFFFFFFFFFFF8;
        v51 = v19 + 9;
        while (1)
        {
          if (v59)
          {
            v23 = (id)MEMORY[0x1BCCF24CC](v22, v58);
          }
          else
          {
            if (v22 >= *(_QWORD *)(v57 + 16))
              goto LABEL_49;
            v23 = *(id *)(v56 + 8 * v22);
          }
          v24 = v23;
          if (__OFADD__(v22++, 1))
          {
            __break(1u);
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
          v26 = objc_msgSend(v23, sel_identifier);
          sub_1BC62A79C();

          v27 = sub_1BC62A778();
          v29 = v28;
          ((void (*)(char *, uint64_t))v6[1])(v11, v21);
          if (!v61)
            goto LABEL_18;
          if ((v19[4] != v27 || v19[5] != v29) && (sub_1BC62D574() & 1) == 0)
          {
            if (v61 == 1)
              goto LABEL_18;
            if ((v19[6] != v27 || v19[7] != v29) && (sub_1BC62D574() & 1) == 0)
              break;
          }

          swift_bridgeObjectRelease();
LABEL_7:
          v6 = v60;
          if (v22 == v20)
            goto LABEL_36;
        }
        if (v61 != 2)
        {
          v6 = v51;
          v31 = 2;
          while (1)
          {
            v32 = v31 + 1;
            if (__OFADD__(v31, 1))
              break;
            v33 = *(v6 - 1) == v27 && *v6 == v29;
            if (v33 || (sub_1BC62D574() & 1) != 0)
            {

              swift_bridgeObjectRelease();
              v21 = v55;
              goto LABEL_7;
            }
            v6 += 2;
            ++v31;
            v33 = v32 == v61;
            v21 = v55;
            if (v33)
              goto LABEL_18;
          }
LABEL_50:
          __break(1u);
LABEL_51:
          swift_bridgeObjectRetain();
          v20 = sub_1BC62D3B8();
          continue;
        }
LABEL_18:
        swift_bridgeObjectRelease();
        v30 = v24;
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();

        goto LABEL_7;
      }
      break;
    }
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = OBJC_IVAR___HRAccountUpgradeTileCell_accounts;
    v35 = v53;
    *(_QWORD *)&v53[OBJC_IVAR___HRAccountUpgradeTileCell_accounts] = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v36 = *(char **)&v35[OBJC_IVAR___HRAccountUpgradeTileCell_tileView];
    if (v36)
    {
      v37 = *(_QWORD *)&v36[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 24];
      v38 = *(_QWORD *)&v36[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 32];
      __swift_project_boxed_opaque_existential_1Tm(&v36[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider], v37);
      v39 = *(void (**)(uint64_t, uint64_t))(v38 + 48);
      v40 = v36;
      v41 = (uint64_t)v54;
      v39(v37, v38);
      v42 = v60;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v60[6])(v41, 1, v21) == 1)
      {
        sub_1BC384EB4(v41, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v43 = (char *)sub_1BC406D84();
        v44 = sub_1BC406BD4();
        objc_msgSend(v43, sel_setImage_, v44);

      }
      else
      {
        v45 = (uint64_t)v52;
        ((void (*)(char *, uint64_t, uint64_t))v42[4])(v52, v41, v21);
        if (qword_1ED6A31F0 != -1)
          swift_once();
        v46 = qword_1ED6A4498;
        v62[1] = 0;
        v62[2] = 0;
        v62[0] = 1;
        v63 = 1;
        v43 = v40;
        sub_1BC514C4C(v45, v62, v46, v43);

        ((void (*)(uint64_t, uint64_t))v42[1])(v45, v21);
      }

    }
    v47 = *(_QWORD *)&v35[v34];
    if (v47 >> 62)
    {
      swift_bridgeObjectRetain();
      v48 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    objc_msgSend(v35, sel_setHidden_, v48 == 0);
    v49 = objc_msgSend(*(id *)&v35[OBJC_IVAR___HRAccountUpgradeTileCell_viewController], sel_tableView);
    if (v49)
    {
      v50 = v49;
      swift_bridgeObjectRelease();
      objc_msgSend(v50, sel_reloadData);

    }
    else
    {
      __break(1u);
    }
  }
}

BOOL sub_1BC46471C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___HRAccountUpgradeTileCell_accounts);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v2 != 0;
}

uint64_t sub_1BC464784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a4;
  v4[3] = sub_1BC62C944();
  v4[4] = sub_1BC62C938();
  return swift_task_switch();
}

uint64_t sub_1BC4647D4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC464834()
{
  swift_release();
  sub_1BC463CA0();
  sub_1BC62C908();
  return swift_task_switch();
}

void sub_1BC464988()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v1 = OBJC_IVAR___HRAccountUpgradeTileCell_tileView;
  if (*(_QWORD *)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_tileView])
    return;
  v2 = (char *)objc_allocWithZone((Class)type metadata accessor for AccountUpgradeTileView());
  v3 = v0;
  v4 = sub_1BC4737EC((uint64_t)v3, v2);
  v5 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = v4;

  v6 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v6);

  v7 = objc_msgSend(v3, sel_contentView);
  if (!*(_QWORD *)&v0[v1])
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = v7;
  objc_msgSend(v7, sel_addSubview_);

  v9 = *(void **)&v0[v1];
  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(v9, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48C8]);
  v10 = *(void **)&v0[v1];
  if (!v10)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v11 = v10;
  v12 = objc_msgSend(v3, sel_contentView);
  if (qword_1EF428860 != -1)
    swift_once();
  objc_msgSend(v11, sel_hk_alignConstraintsWithView_insets_, xmmword_1EF43AC48, *(double *)&qword_1EF43AC58, unk_1EF43AC60);

}

void sub_1BC464B28()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;

  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v25 - v2;
  v4 = *(void **)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_profile];
  type metadata accessor for ClinicalAccountManager();
  v5 = (_QWORD *)swift_allocObject();
  v6 = MEMORY[0x1E0DEE9E8];
  v5[5] = 0;
  v5[6] = 0;
  v5[4] = v6;
  v5[2] = v4;
  v5[3] = objc_msgSend(v4, sel_clinicalAccountStore);
  v7 = OBJC_IVAR___HRAccountUpgradeTileCell_accounts;
  v8 = *(_QWORD *)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_accounts];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v13 >= 2)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
LABEL_3:
    v9 = *(void **)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_viewController];
    v10 = objc_msgSend(v9, sel_parentViewController);
    if (!v10)
      v10 = v9;
    v26 = v10;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v0;
    v12 = v0;
    ClinicalAccountManager.presentAccounts(presentingViewController:completion:)(v26, (uint64_t)sub_1BC46539C, v11);
    swift_release();
    swift_release();

    return;
  }
  v14 = *(_QWORD *)&v0[v7];
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1BC62D3B8())
      goto LABEL_9;
LABEL_16:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15)
    goto LABEL_16;
LABEL_9:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x1BCCF24CC](0, v14);
  }
  else
  {
    if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v16 = *(id *)(v14 + 32);
  }
  v17 = v16;
  swift_bridgeObjectRelease();
  v18 = *(void **)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_viewController];
  v19 = objc_msgSend(v18, sel_parentViewController);
  if (!v19)
    v19 = v18;
  type metadata accessor for ClinicalAccountUpgradeManager();
  swift_allocObject();
  v20 = v17;
  swift_retain();
  v21 = v19;
  v22 = sub_1BC54FA50(v20, (uint64_t)v5, v21);

  swift_release();
  v23 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v3, 1, 1, v23);
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = 0;
  v24[3] = 0;
  v24[4] = v22;
  sub_1BC5C2784((uint64_t)v3, (uint64_t)&unk_1EF42BFB8, (uint64_t)v24);
  swift_release();

  swift_release();
}

uint64_t sub_1BC464E6C()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t inited;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;

  v1 = v0;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_profile], sel_healthStore);
  type metadata accessor for AccountStatusSummaryTileSettingsManager();
  inited = swift_initStackObject();
  v4 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(inited + 16) = v2;
  *(_QWORD *)(inited + 24) = v4;
  sub_1BC5DF494();
  v5 = *(_QWORD *)&v1[OBJC_IVAR___HRAccountUpgradeTileCell_accounts];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v1;
  swift_bridgeObjectRetain();
  v7 = v1;
  sub_1BC5DFCC0(v5, (uint64_t)sub_1BC4652D8, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_setDeallocating();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC464F60(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - v6;
  v8 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1BC62C944();
  v9 = a1;
  v10 = sub_1BC62C938();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v9;
  sub_1BC5C2784((uint64_t)v7, a3, (uint64_t)v11);
  return swift_release();
}

id AccountUpgradeTileCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

void AccountUpgradeTileCell.init(style:reuseIdentifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AccountUpgradeTileCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountUpgradeTileCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL sub_1BC4651B8()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR___HRAccountUpgradeTileCell_accounts);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v2 > 1;
}

uint64_t sub_1BC465224@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC463884(a1);
}

void sub_1BC465244()
{
  sub_1BC464B28();
}

uint64_t sub_1BC465264()
{
  return sub_1BC464E6C();
}

uint64_t method lookup function for AccountUpgradeTileCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountUpgradeTileCell.__allocating_init(profile:presentingViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of AccountUpgradeTileCell.hasUpgradableAccounts.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t sub_1BC4652B4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC4652D8()
{
  uint64_t v0;

  return sub_1BC464F60(*(void **)(v0 + 16), (uint64_t)&unk_1E74DBD50, (uint64_t)&unk_1EF4311C0);
}

uint64_t sub_1BC465304(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC3781C0;
  return sub_1BC464784(a1, v4, v5, v6);
}

uint64_t sub_1BC465370()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC46539C()
{
  uint64_t v0;

  return sub_1BC464F60(*(void **)(v0 + 16), (uint64_t)&unk_1E74DBDC8, (uint64_t)&unk_1EF4311C8);
}

uint64_t sub_1BC4653C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC377F18;
  return sub_1BC464784(a1, v4, v5, v6);
}

uint64_t sub_1BC465438()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC46545C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC465488(unint64_t *a1)
{
  uint64_t v1;

  sub_1BC4640A0(a1, *(_QWORD *)(v1 + 16));
}

id PDFConfigurationViewController.__allocating_init(profile:account:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;
  id v6;
  id v7;
  _OWORD v9[4];
  uint64_t v10;

  v5 = objc_allocWithZone(v2);
  memset(v9, 0, sizeof(v9));
  v10 = 0;
  v6 = objc_allocWithZone((Class)type metadata accessor for PDFConfigurationViewController());
  v7 = PDFConfigurationViewController.init(profile:account:category:)(a1, a2, (uint64_t *)v9);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

id sub_1BC465520()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___cancelBarButtonItem;
  v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___cancelBarButtonItem);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___cancelBarButtonItem);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_didTapCancel_);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC4655A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___actionBarButtonItem;
  v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___actionBarButtonItem);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___actionBarButtonItem);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 9, v0, sel_didTapSave_);
    objc_msgSend(v4, sel_setEnabled_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC46563C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___tableView;
  v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___tableView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___tableView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ContentSizedTableView()), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setScrollEnabled_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC4656E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___collectionView;
  v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___collectionView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___collectionView);
  }
  else
  {
    v4 = v0;
    sub_1BC46748C();
    v5 = objc_allocWithZone((Class)sub_1BC62B474());
    v6 = (void *)sub_1BC62B468();
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v6, sel_setShowsHorizontalScrollIndicator_, 0);
    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BC465794()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___scrollView;
  v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___scrollView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___scrollView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC465828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfPaddingConstraints;
  if (*(_QWORD *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfPaddingConstraints))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfPaddingConstraints);
  }
  else
  {
    v3 = v0;
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BC639570;
    v5 = sub_1BC4656E8();
    v6 = objc_msgSend(v5, sel_topAnchor);

    v7 = sub_1BC46563C();
    v8 = objc_msgSend(v7, sel_bottomAnchor);

    v9 = OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding;
    v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, *(double *)(v3 + OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding));

    *(_QWORD *)(v4 + 32) = v10;
    v11 = sub_1BC465794();
    v12 = objc_msgSend(v11, sel_bottomAnchor);

    v13 = sub_1BC4656E8();
    v14 = objc_msgSend(v13, sel_bottomAnchor);

    v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, *(double *)(v3 + v9));
    *(_QWORD *)(v4 + 40) = v15;
    sub_1BC62C890();
    v2 = v4;
    *(_QWORD *)(v3 + v1) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

id sub_1BC4659EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfHeightConstraint;
  v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfHeightConstraint);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfHeightConstraint);
  }
  else
  {
    v4 = sub_1BC4656E8();
    v5 = objc_msgSend(v4, sel_heightAnchor);

    v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, 0.0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id PDFConfigurationViewController.init(profile:account:)(void *a1, void *a2)
{
  id v4;
  id v5;
  _OWORD v7[4];
  uint64_t v8;

  memset(v7, 0, sizeof(v7));
  v8 = 0;
  v4 = objc_allocWithZone((Class)type metadata accessor for PDFConfigurationViewController());
  v5 = PDFConfigurationViewController.init(profile:account:category:)(a1, a2, (uint64_t *)v7);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

id PDFConfigurationViewController.__allocating_init(profile:account:category:)(void *a1, void *a2, uint64_t *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return PDFConfigurationViewController.init(profile:account:category:)(a1, a2, a3);
}

uint64_t type metadata accessor for PDFConfigurationViewController()
{
  return objc_opt_self();
}

id PDFConfigurationViewController.init(profile:account:category:)(void *a1, void *a2, uint64_t *a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  id v26;
  id v27;
  objc_class *v28;
  char *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  objc_class *v51;
  id v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  objc_super v74;
  uint64_t v75[9];
  objc_super v76;

  v68 = a2;
  v73 = a1;
  v5 = sub_1BC62A820();
  MEMORY[0x1E0C80A78](v5);
  v67 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62A760();
  MEMORY[0x1E0C80A78](v7);
  v72 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62A8D4();
  MEMORY[0x1E0C80A78](v9);
  v71 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s13ConfigurationVMa();
  v12 = MEMORY[0x1E0C80A78](v11);
  v69 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v70 = (uint64_t)&v54 - v14;
  v56 = sub_1BC62CC68();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v57 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BC62CC20();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1BC62C4AC();
  MEMORY[0x1E0C80A78](v17);
  v66 = *a3;
  v65 = a3[1];
  v64 = a3[2];
  v63 = a3[3];
  v62 = a3[4];
  v61 = a3[5];
  v60 = a3[6];
  v59 = a3[7];
  v58 = a3[8];
  v18 = &v3[OBJC_IVAR___HRPDFConfigurationViewController_tableCellIdentifier];
  *(_QWORD *)v18 = 1819043139;
  *((_QWORD *)v18 + 1) = 0xE400000000000000;
  *(_QWORD *)&v3[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___cancelBarButtonItem] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___actionBarButtonItem] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___tableView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___scrollView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView] = 0;
  v19 = OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding;
  v20 = qword_1EF4285E8;
  v21 = v3;
  if (v20 != -1)
    swift_once();
  *(_QWORD *)&v3[v19] = qword_1EF4311E8;
  *(_QWORD *)&v21[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfPaddingConstraints] = 0;
  *(_QWORD *)&v21[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfHeightConstraint] = 0;
  v22 = &v21[OBJC_IVAR___HRPDFConfigurationViewController_state];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 1;
  *(_QWORD *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_dataProviderToken] = 0;
  *(_QWORD *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_generatorCancellable] = 0;
  *(_QWORD *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_previewCancellable] = 0;
  v23 = &v21[OBJC_IVAR___HRPDFConfigurationViewController_pdfGenerationToken];
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  v24 = OBJC_IVAR___HRPDFConfigurationViewController_queue;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  sub_1BC62C494();
  v75[0] = MEMORY[0x1E0DEE9D8];
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1BC357158(0, &qword_1ED6A58B0, v25, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35A2BC((unint64_t *)&qword_1ED6A58B8, &qword_1ED6A58B0, v25);
  sub_1BC62D0A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v57, *MEMORY[0x1E0DEF8D0], v56);
  *(_QWORD *)&v21[v24] = sub_1BC62CCA4();
  v26 = v73;
  swift_unknownObjectUnownedInit();
  *(_QWORD *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_previewDataSource] = objc_msgSend(objc_allocWithZone((Class)sub_1BC62B168()), sel_init);
  v27 = objc_msgSend(v26, sel_conceptStore);
  v28 = (objc_class *)type metadata accessor for MedicalRecordFormatter();
  v29 = (char *)objc_allocWithZone(v28);
  *(_QWORD *)&v29[OBJC_IVAR___HRMedicalRecordFormatter_store] = v27;
  *(_QWORD *)&v29[OBJC_IVAR___HRMedicalRecordFormatter_context] = 0;
  v76.receiver = v29;
  v76.super_class = v28;
  v57 = (char *)objc_msgSendSuper2(&v76, sel_init);
  sub_1BC62A8A4();
  sub_1BC62A754();
  v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v30, sel_setDateStyle_, 2);
  objc_msgSend(v30, sel_setTimeStyle_, 0);
  if (qword_1EF428620 != -1)
    swift_once();
  v31 = sub_1BC62A91C();
  __swift_project_value_buffer(v31, (uint64_t)qword_1EF432878);
  v32 = (void *)sub_1BC62A910();
  objc_msgSend(v30, sel_setTimeZone_, v32);

  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v34 = (void *)sub_1BC62C650();
  objc_msgSend(v33, sel_setDateFormat_, v34);

  v35 = (void *)sub_1BC62A910();
  objc_msgSend(v33, sel_setTimeZone_, v35);

  v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v36, sel_setDateStyle_, 1);
  objc_msgSend(v36, sel_setTimeStyle_, 0);
  v37 = (void *)sub_1BC62A910();
  objc_msgSend(v36, sel_setTimeZone_, v37);

  v38 = (uint64_t)v67;
  sub_1BC62A814();
  v39 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v40 = objc_msgSend(v39, sel_layoutDirection);

  v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  objc_msgSend(v41, sel_setMinimumFractionDigits_, 0);
  objc_msgSend(v41, sel_setMaximumFractionDigits_, 2);
  v42 = v57;
  v43 = v70;
  sub_1BC4B2314(v71, v72, v30, v33, v36, v38, (uint64_t)v40, v41, v70, (uint64_t)v57);
  v75[0] = v66;
  v75[1] = v65;
  v75[2] = v64;
  v75[3] = v63;
  v75[4] = v62;
  v75[5] = v61;
  v75[6] = v60;
  v75[7] = v59;
  v75[8] = v58;
  v44 = v69;
  sub_1BC36D6D8(v43, v69);
  type metadata accessor for PDFConfigurationDataSource();
  swift_allocObject();
  v45 = v68;
  v46 = v68;
  *(_QWORD *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource] = sub_1BC55D4B0(v45, v75, v44);
  v47 = v73;
  v48 = objc_msgSend(v73, sel_healthStore);
  type metadata accessor for PDFDataProvider();
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = v48;
  *(_QWORD *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_dataProvider] = v49;
  v50 = objc_msgSend(v47, sel_healthStore);
  sub_1BC36D6D8(v43, v44);
  type metadata accessor for PDFReportGenerator();
  swift_allocObject();
  *(_QWORD *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_reportGenerator] = sub_1BC4F2580((uint64_t)v50, v44);

  v51 = (objc_class *)type metadata accessor for PDFConfigurationViewController();
  v74.receiver = v21;
  v74.super_class = v51;
  v52 = objc_msgSendSuper2(&v74, sel_initWithNibName_bundle_, 0, 0);

  sub_1BC36DCA4(v43);
  return v52;
}

void sub_1BC466514()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  uint64_t v7;
  void *Strong;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t ObjCClassFromMetadata;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  void *v84;
  uint64_t v85;
  id v86;
  _QWORD aBlock[6];
  objc_super v88;

  v1 = v0;
  v2 = sub_1BC62B450();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for PDFConfigurationViewController();
  v88.receiver = v0;
  v88.super_class = v6;
  objc_msgSendSuper2(&v88, sel_viewDidLoad);
  v7 = *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource];
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v9 = objc_msgSend(Strong, sel_clinicalAccountStore);

  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (*(_QWORD *)(v7 + 104))
  {
    v11 = swift_retain();
    sub_1BC466F84(v11);
  }
  else
  {
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = v7;
    v12[3] = sub_1BC46B774;
    v12[4] = v10;
    aBlock[4] = sub_1BC46B7B0;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC46B7BC;
    aBlock[3] = &block_descriptor_30;
    v13 = _Block_copy(aBlock);
    swift_retain_n();
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_fetchAllAccountsWithCompletion_, v13);
    _Block_release(v13);
  }
  swift_release_n();

  if (qword_1ED6A4888 != -1)
    swift_once();
  v14 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v15 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v15);

  v16 = objc_msgSend(v1, sel_navigationItem);
  v17 = sub_1BC465520();
  objc_msgSend(v16, sel_setLeftBarButtonItem_, v17);

  v18 = objc_msgSend(v1, sel_navigationItem);
  v19 = sub_1BC4655A4();
  objc_msgSend(v18, sel_setRightBarButtonItem_, v19);

  v20 = objc_msgSend(v1, sel_view);
  if (!v20)
  {
    __break(1u);
    goto LABEL_12;
  }
  v21 = v20;
  v22 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
  objc_msgSend(v21, sel_setBackgroundColor_, v22);

  v23 = sub_1BC46563C();
  objc_msgSend(v23, sel_setDelegate_, v1);

  v24 = sub_1BC46563C();
  objc_msgSend(v24, sel_setDataSource_, v1);

  v25 = sub_1BC46563C();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4312A8);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v27 = (void *)sub_1BC62C650();
  objc_msgSend(v25, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v27);

  v28 = sub_1BC46563C();
  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 2.22507386e-308);
  objc_msgSend(v28, sel_setTableFooterView_, v29);

  v30 = sub_1BC46563C();
  objc_msgSend(v30, sel_setSectionFooterHeight_, 0.0);

  v31 = sub_1BC4656E8();
  objc_msgSend(v31, sel_setDataSource_, *(_QWORD *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_previewDataSource]);

  v32 = sub_1BC4656E8();
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AE8]), sel_initWithTarget_action_, v1, sel_didPinchPDF_);
  objc_msgSend(v32, sel_addGestureRecognizer_, v33);

  v34 = sub_1BC4656E8();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0D2B3A8], v2);
  sub_1BC62B45C();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v35 = objc_msgSend(v1, sel_view);
  if (!v35)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v36 = v35;
  v37 = sub_1BC465794();
  objc_msgSend(v36, sel_addSubview_, v37);

  v38 = sub_1BC465794();
  v39 = sub_1BC46563C();
  objc_msgSend(v38, sel_addSubview_, v39);

  v40 = sub_1BC465794();
  v41 = sub_1BC4656E8();
  objc_msgSend(v40, sel_addSubview_, v41);

  v42 = sub_1BC465794();
  v43 = objc_msgSend(v1, sel_view);
  objc_msgSend(v42, sel_hk_alignConstraintsWithView_, v43);

  v44 = (void *)objc_opt_self();
  sub_1BC465828();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v45 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v86 = v44;
  objc_msgSend(v44, sel_activateConstraints_, v45);

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1BC641AB0;
  v47 = sub_1BC46563C();
  v48 = objc_msgSend(v47, sel_topAnchor);

  v49 = sub_1BC465794();
  v50 = objc_msgSend(v49, sel_topAnchor);

  v51 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v50);
  *(_QWORD *)(v46 + 32) = v51;
  v52 = sub_1BC46563C();
  v53 = objc_msgSend(v52, sel_leadingAnchor);

  v54 = sub_1BC465794();
  v55 = objc_msgSend(v54, sel_leadingAnchor);

  v56 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v55);
  *(_QWORD *)(v46 + 40) = v56;
  v57 = sub_1BC46563C();
  v58 = objc_msgSend(v57, sel_widthAnchor);

  v59 = objc_msgSend(v1, sel_view);
  if (!v59)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v60 = v59;
  v61 = objc_msgSend(v59, sel_widthAnchor);

  v62 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v61);
  *(_QWORD *)(v46 + 48) = v62;
  v63 = sub_1BC46563C();
  v64 = objc_msgSend(v63, sel_trailingAnchor);

  v65 = sub_1BC465794();
  v66 = objc_msgSend(v65, sel_trailingAnchor);

  v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v66);
  *(_QWORD *)(v46 + 56) = v67;
  v68 = sub_1BC4656E8();
  v69 = objc_msgSend(v68, sel_leadingAnchor);

  v70 = sub_1BC465794();
  v71 = objc_msgSend(v70, sel_leadingAnchor);

  v72 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v71);
  *(_QWORD *)(v46 + 64) = v72;
  v73 = sub_1BC4656E8();
  v74 = objc_msgSend(v73, sel_widthAnchor);

  v75 = objc_msgSend(v1, sel_view);
  if (v75)
  {
    v76 = v75;
    v77 = objc_msgSend(v75, sel_widthAnchor);

    v78 = objc_msgSend(v74, sel_constraintEqualToAnchor_, v77);
    *(_QWORD *)(v46 + 72) = v78;
    *(_QWORD *)(v46 + 80) = sub_1BC4659EC();
    v79 = sub_1BC4656E8();
    v80 = objc_msgSend(v79, sel_trailingAnchor);

    v81 = sub_1BC465794();
    v82 = objc_msgSend(v81, sel_trailingAnchor);

    v83 = objc_msgSend(v80, sel_constraintEqualToAnchor_, v82);
    *(_QWORD *)(v46 + 88) = v83;
    aBlock[0] = v46;
    sub_1BC62C890();
    v84 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v86, sel_activateConstraints_, v84);

    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_1BC466F84(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  char *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCF37A4](v1);
  if (result)
  {
    v3 = (char *)result;
    v4 = swift_allocObject();
    swift_beginAccess();
    v5 = (void *)MEMORY[0x1BCCF37A4](v1);
    swift_unknownObjectWeakInit();

    v6 = *(NSObject **)&v3[OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource];
    v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = v7;
    v8[3] = sub_1BC46C574;
    v8[4] = v4;
    swift_retain_n();
    swift_retain();
    v9 = sub_1BC58C6D4(v6, 1, (uint64_t)sub_1BC46C5A8, (uint64_t)v8);
    swift_release();
    swift_release();
    *(_QWORD *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_dataProviderToken] = v9;

    swift_release_n();
    return swift_release();
  }
  return result;
}

void sub_1BC4670F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCF37A4](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_1BC467CF4();

  }
}

void sub_1BC467224()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  id v5;
  id v6;
  id v7;
  double Height;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  objc_super v21;
  CGRect v22;

  v1 = sub_1BC46748C();
  v2 = sub_1BC4656E8();
  objc_msgSend(v2, sel_setCollectionViewLayout_animated_, v1, 0);

  objc_msgSend(v1, sel_itemSize);
  v4 = v3;
  v5 = sub_1BC4659EC();
  objc_msgSend(v5, sel_setConstant_, v4);

  v6 = sub_1BC465794();
  v7 = objc_msgSend(v6, sel_safeAreaLayoutGuide);

  objc_msgSend(v7, sel_layoutFrame);
  Height = CGRectGetHeight(v22);
  v9 = sub_1BC46563C();
  objc_msgSend(v9, sel_contentSize);
  v11 = v10;

  v12 = (Height - v11 - v4) * 0.5;
  if (qword_1EF4285E8 != -1)
    swift_once();
  v13 = *(double *)&qword_1EF4311E8;
  if (v12 > *(double *)&qword_1EF4311E8)
    v13 = v12;
  v14 = OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding;
  if (v13 == *(double *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding])
  {

LABEL_17:
    v21.receiver = v0;
    v21.super_class = (Class)type metadata accessor for PDFConfigurationViewController();
    objc_msgSendSuper2(&v21, sel_viewDidLayoutSubviews);

    return;
  }
  *(double *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding] = v13;
  v15 = sub_1BC465828();
  v16 = v15;
  if (!(v15 >> 62))
  {
    v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17)
      goto LABEL_9;
LABEL_16:

    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1BC62D3B8();
  if (!v17)
    goto LABEL_16;
LABEL_9:
  if (v17 >= 1)
  {
    for (i = 0; i != v17; ++i)
    {
      if ((v16 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x1BCCF24CC](i, v16);
      else
        v19 = *(id *)(v16 + 8 * i + 32);
      v20 = v19;
      objc_msgSend(v19, sel_setConstant_, *(double *)&v0[v14]);

    }
    goto LABEL_16;
  }
  __break(1u);
}

id sub_1BC46748C()
{
  void *v0;
  id result;
  void *v2;
  double v3;
  double v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  objc_class *v15;
  double v16;
  double v17;
  id v18;
  CGRect v19;

  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, sel_bounds);
    v4 = v3;

    v5 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v5, sel_bounds);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;

    v19.origin.x = v7;
    v19.origin.y = v9;
    v19.size.width = v11;
    v19.size.height = v13;
    v14 = round(CGRectGetHeight(v19) * 0.5);
    v15 = (objc_class *)sub_1BC62B3E4();
    sub_1BC62B3CC();
    v17 = round(v14 / v16);
    if (qword_1EF4285E0 != -1)
      swift_once();
    if (v4 - (*(double *)&qword_1EF4311E0 + *(double *)&qword_1EF4311E0) < v17)
      sub_1BC62B3CC();
    v18 = objc_allocWithZone(v15);
    return (id)sub_1BC62B3D8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC467654(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  objc_class *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v55 - v10;
  v12 = sub_1BC62B99C();
  MEMORY[0x1E0C80A78](v12);
  v13 = (uint64_t *)&v2[OBJC_IVAR___HRPDFConfigurationViewController_state];
  v14 = *(_QWORD *)&v2[OBJC_IVAR___HRPDFConfigurationViewController_state + 24];
  if (v14)
  {
    if (v14 != 1)
    {
      v56 = v6;
      v57 = a1;
      *(_QWORD *)&v61 = v5;
      v15 = *v13;
      v16 = v13[1];
      v17 = v13[2];
      sub_1BC35D4EC(*v13, v16);
      swift_bridgeObjectRetain();
      sub_1BC46C564(v15, v16, v17, v14);
      sub_1BC35D4EC(v15, v16);
      sub_1BC62B954();
      v18 = (objc_class *)sub_1BC62B51C();
      v19 = objc_allocWithZone(v18);
      v58 = v15;
      v59 = v16;
      v60 = v17;
      v20 = sub_1BC62B510();
      if (v20)
      {
        v21 = (void *)v20;
        if (qword_1ED6A3198 != -1)
          swift_once();
        LOBYTE(v63) = 11;
        sub_1BC4E4100(1, 14, 0, (char *)&v63, 0);
        v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
        sub_1BC34B508(0, &qword_1EF431470, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v23 = swift_allocObject();
        v61 = xmmword_1BC639590;
        *(_OWORD *)(v23 + 16) = xmmword_1BC639590;
        *(_QWORD *)(v23 + 56) = v18;
        *(_QWORD *)(v23 + 32) = v21;
        v24 = objc_allocWithZone(MEMORY[0x1E0D96D28]);
        v25 = v21;
        v26 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        v27 = objc_msgSend(v24, sel_initWithActivityItems_applicationActivities_, v26, 0);

        sub_1BC357158(0, &qword_1EF431478, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, v22);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = v61;
        v29 = (void *)*MEMORY[0x1E0D96DB8];
        *(_QWORD *)(v28 + 32) = *MEMORY[0x1E0D96DB8];
        type metadata accessor for ActivityType(0);
        v30 = v29;
        v31 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        objc_msgSend(v27, sel_setExcludedActivityTypes_, v31);

        v32 = objc_msgSend(v27, sel_popoverPresentationController);
        if (v32)
        {
          v33 = v32;
          objc_msgSend(v32, sel_setSourceItem_, v57);

        }
        objc_msgSend(v2, sel_presentViewController_animated_completion_, v27, 1, 0);

        v35 = v58;
        v34 = v59;
        sub_1BC35D530(v58, v59);
        sub_1BC46C050(v35, v34, v60, v14);
      }
      else
      {
        sub_1BC62BAF8();
        v44 = v2;
        v45 = sub_1BC62BB28();
        v46 = sub_1BC62CADC();
        if (os_log_type_enabled(v45, v46))
        {
          v47 = (uint8_t *)swift_slowAlloc();
          v48 = swift_slowAlloc();
          v62 = ObjectType;
          v63 = v48;
          *(_DWORD *)v47 = 136446210;
          swift_getMetatypeMetadata();
          v49 = sub_1BC62C6E0();
          v62 = sub_1BC4991F0(v49, v50, &v63);
          sub_1BC62CFF8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC30A000, v45, v46, "[%{public}s]: Unable to instantiate activity item source", v47, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v48, -1, -1);
          MEMORY[0x1BCCF36A8](v47, -1, -1);

          v51 = v58;
          v52 = v59;
          sub_1BC35D530(v58, v59);
          sub_1BC46C050(v51, v52, v60, v14);
        }
        else
        {
          v53 = v58;
          v54 = v59;
          sub_1BC46C050(v58, v59, v60, v14);
          sub_1BC35D530(v53, v54);

        }
        (*(void (**)(char *, _QWORD))(v56 + 8))(v11, v61);
      }
    }
  }
  else
  {
    sub_1BC62BAF8();
    v36 = v2;
    v37 = sub_1BC62BB28();
    v38 = sub_1BC62CADC();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      *(_QWORD *)&v61 = v5;
      v40 = (uint8_t *)v39;
      v41 = swift_slowAlloc();
      v62 = ObjectType;
      v63 = v41;
      *(_DWORD *)v40 = 136446210;
      swift_getMetatypeMetadata();
      v42 = sub_1BC62C6E0();
      v62 = sub_1BC4991F0(v42, v43, &v63);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v37, v38, "[%{public}s]: No PDF data generated", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v41, -1, -1);
      MEMORY[0x1BCCF36A8](v40, -1, -1);

      (*(void (**)(char *, _QWORD))(v6 + 8))(v8, v61);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
}

uint64_t sub_1BC467CF4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;
  uint64_t (*v14)(uint64_t *, uint64_t);
  uint64_t result;
  id v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  _BYTE *v32;
  uint64_t (*v33)(uint64_t);
  _BYTE *v34;
  _BYTE v35[4];
  unsigned int v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *, uint64_t, uint64_t);
  __int128 aBlock;
  __int128 v43;
  uint64_t (*v44)();
  uint64_t v45;
  uint64_t v46;

  v1 = v0;
  v2 = sub_1BC62C47C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1BC62C4AC();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x1E0C80A78](v6);
  v38 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1BC62C4D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)&v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v11 = sub_1BC62CC74();
  v12 = *MEMORY[0x1E0DEF740];
  v41 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 104);
  v41(v11, v12, v8);
  v13 = sub_1BC62C4F4();
  v14 = *(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8);
  result = v14(v11, v8);
  if ((v13 & 1) != 0)
  {
    v37 = v5;
    v16 = sub_1BC46563C();
    objc_msgSend(v16, sel_reloadData);

    v17 = *(_QWORD *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_dataProviderToken];
    if (v17)
    {
      swift_beginAccess();
      if ((*(_BYTE *)(v17 + 16) & 1) == 0)
      {
        *(_BYTE *)(v17 + 16) = 1;
        swift_beginAccess();
        v36 = v12;
        v18 = v14;
        v19 = v3;
        v20 = v2;
        v21 = *(void (**)(uint64_t))(v17 + 24);
        swift_retain();
        v22 = swift_retain();
        v21(v22);
        v2 = v20;
        v3 = v19;
        v14 = v18;
        v12 = v36;
        swift_release();
        swift_release();
      }
    }
    if (*(_QWORD *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_generatorCancellable])
    {
      swift_retain();
      sub_1BC62BEAC();
      swift_release();
    }
    if (*(_QWORD *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_previewCancellable])
    {
      swift_retain();
      sub_1BC62BEAC();
      swift_release();
    }
    aBlock = 0u;
    v43 = 0u;
    v23 = (uint64_t)&v1[OBJC_IVAR___HRPDFConfigurationViewController_pdfGenerationToken];
    swift_beginAccess();
    sub_1BC46C08C((uint64_t)&aBlock, v23);
    swift_endAccess();
    *v11 = sub_1BC62CC74();
    v41(v11, v12, v8);
    LOBYTE(v23) = sub_1BC62C4F4();
    result = v14(v11, v8);
    if ((v23 & 1) != 0)
    {
      v24 = &v1[OBJC_IVAR___HRPDFConfigurationViewController_state];
      v25 = *(_QWORD *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_state];
      v26 = *(_QWORD *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_state + 8];
      v27 = *(_QWORD *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_state + 16];
      v28 = *(_QWORD *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_state + 24];
      *(_QWORD *)v24 = 0;
      *((_QWORD *)v24 + 1) = 0;
      *((_QWORD *)v24 + 2) = 0;
      *((_QWORD *)v24 + 3) = 1;
      sub_1BC46C050(v25, v26, v27, v28);
      sub_1BC468C88();
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = v1;
      v44 = sub_1BC46C0EC;
      v45 = v29;
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v43 = sub_1BC39BE70;
      *((_QWORD *)&v43 + 1) = &block_descriptor_27_0;
      v30 = _Block_copy(&aBlock);
      v31 = v1;
      v32 = v38;
      sub_1BC62C494();
      v46 = MEMORY[0x1E0DEE9D8];
      v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v33, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC35A2BC((unint64_t *)&qword_1ED6A58A0, (unint64_t *)&qword_1ED6A5890, v33);
      v34 = v37;
      sub_1BC62D0A0();
      MEMORY[0x1BCCF1F68](0, v32, v34, v30);
      _Block_release(v30);
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v34, v2);
      (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v32, v40);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC468148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_BYTE *)(v2 + 32);
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v3;
  *(_QWORD *)(v7 + 32) = v4;
  *(_BYTE *)(v7 + 40) = v5;
  swift_retain();
  v8 = sub_1BC58C6D4((dispatch_group_t)v2, 0, (uint64_t)sub_1BC46C118, v7);
  swift_release();
  swift_release();
  *(_QWORD *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_dataProviderToken) = v8;
  return swift_release();
}

uint64_t sub_1BC468228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  uint64_t (*v34)(void);
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  void *v43;
  void (**v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char *v49;
  char *v50;
  void (**v51)(char *, uint64_t);
  uint64_t v52;
  _QWORD aBlock[6];
  id v54;

  v48 = a5;
  v46 = a3;
  v47 = a4;
  v7 = sub_1BC62C47C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1BC62C4AC();
  v11 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v49 = (char *)&v45 - v15;
  sub_1BC46C128();
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC46C264();
  v51 = *(void (***)(char *, uint64_t))(v21 - 8);
  v52 = v21;
  MEMORY[0x1E0C80A78](v21);
  v50 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCF37A4](a2 + 16);
  if (result)
  {
    v24 = (void *)result;
    if (*(_QWORD *)(a1 + 16))
    {
      v25 = *(_QWORD *)(result + OBJC_IVAR___HRPDFConfigurationViewController_reportGenerator);
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = v24;
      *(_QWORD *)(v26 + 24) = v25;
      v27 = v46;
      *(_QWORD *)(v26 + 32) = a1;
      *(_QWORD *)(v26 + 40) = v27;
      *(_QWORD *)(v26 + 48) = v47;
      *(_BYTE *)(v26 + 56) = v48 & 1;
      v28 = MEMORY[0x1E0C960D8];
      sub_1BC46C334(0, &qword_1EF431418, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960D8]);
      sub_1BC46C224(&qword_1EF431430, &qword_1EF431418, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v28, MEMORY[0x1E0C96108]);
      v29 = v24;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BC62BF78();
      sub_1BC347F0C(&qword_1EF431458, (uint64_t (*)(uint64_t))sub_1BC46C128, MEMORY[0x1E0C96148]);
      v30 = sub_1BC62BFFC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      aBlock[0] = v30;
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
      v54 = (id)sub_1BC62CC74();
      v31 = sub_1BC62CC38();
      v32 = MEMORY[0x1E0DEF868];
      v33 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v49, 1, 1, v31);
      v34 = MEMORY[0x1E0C95D78];
      sub_1BC46C334(0, &qword_1EF431440, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
      sub_1BC46C224((unint64_t *)&unk_1EF431448, &qword_1EF431440, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v34, MEMORY[0x1E0C95D90]);
      sub_1BC3ABB20();
      v35 = v50;
      sub_1BC62C080();
      sub_1BC358494(v33, (uint64_t)&qword_1ED6A4DF0, (uint64_t)v32, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);

      swift_release();
      *(_QWORD *)(swift_allocObject() + 16) = v29;
      sub_1BC347F0C(&qword_1EF431460, (uint64_t (*)(uint64_t))sub_1BC46C264, MEMORY[0x1E0C95CB8]);
      v36 = (char *)v29;
      v37 = v52;
      v38 = sub_1BC62C038();
      swift_release();
      v51[1](v35, v37);
      *(_QWORD *)&v36[OBJC_IVAR___HRPDFConfigurationViewController_generatorCancellable] = v38;

      return swift_release();
    }
    else
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
      v52 = sub_1BC62CC74();
      v39 = swift_allocObject();
      *(_QWORD *)(v39 + 16) = v24;
      aBlock[4] = sub_1BC46C404;
      aBlock[5] = v39;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC39BE70;
      aBlock[3] = &block_descriptor_43_1;
      v51 = (void (**)(char *, uint64_t))_Block_copy(aBlock);
      v40 = v24;
      swift_release();
      sub_1BC62C494();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      v42 = v8;
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v41, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC35A2BC((unint64_t *)&qword_1ED6A58A0, (unint64_t *)&qword_1ED6A5890, v41);
      sub_1BC62D0A0();
      v44 = v51;
      v43 = (void *)v52;
      MEMORY[0x1BCCF1F68](0, v13, v10, v51);
      _Block_release(v44);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v7);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v45);
    }
  }
  return result;
}

void sub_1BC4687E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  _OWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_1BC62C4D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v5 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v7 = (_OWORD *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_state);
    v8 = *(_QWORD *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_state);
    v9 = *(_QWORD *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_state + 8);
    v10 = *(_QWORD *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_state + 16);
    v11 = *(_QWORD *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_state + 24);
    *v7 = 0u;
    v7[1] = 0u;
    sub_1BC46C050(v8, v9, v10, v11);
    sub_1BC468C88();
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC4688DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_1BC62C4D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v7 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  LOBYTE(a1) = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((a1 & 1) != 0)
  {
    v12 = (uint64_t *)(a2 + OBJC_IVAR___HRPDFConfigurationViewController_state);
    v13 = *(_QWORD *)(a2 + OBJC_IVAR___HRPDFConfigurationViewController_state);
    v14 = *(_QWORD *)(a2 + OBJC_IVAR___HRPDFConfigurationViewController_state + 8);
    v15 = *(_QWORD *)(a2 + OBJC_IVAR___HRPDFConfigurationViewController_state + 16);
    v16 = *(_QWORD *)(a2 + OBJC_IVAR___HRPDFConfigurationViewController_state + 24);
    *v12 = v8;
    v12[1] = v9;
    v12[2] = v10;
    v12[3] = v11;
    sub_1BC46C40C(v8, v9, v10, v11);
    sub_1BC46C050(v13, v14, v15, v16);
    sub_1BC468C88();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC468A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  void *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  uint64_t (*v21)(uint64_t);
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v8 = sub_1BC62C47C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62C4AC();
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCF37A4](a2 + 16);
  if (result)
  {
    v16 = (void *)result;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v17 = sub_1BC62CC74();
    v23 = v12;
    v18 = (void *)v17;
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v16;
    v19[3] = a1;
    v19[4] = a3;
    v19[5] = a4;
    aBlock[4] = sub_1BC46C5E8;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_64;
    v20 = _Block_copy(aBlock);
    v22 = v16;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    sub_1BC62C494();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35A2BC((unint64_t *)&qword_1ED6A58A0, (unint64_t *)&qword_1ED6A5890, v21);
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v14, v11, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v23);
  }
  return result;
}

void sub_1BC468C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;

  v1 = sub_1BC62B450();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_state);
  v6 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_state + 8);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_state + 16);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_state + 24);
  if (!v8)
    goto LABEL_7;
  if (v8 == 1)
  {
    sub_1BC62AE8C();
    swift_allocObject();
    sub_1BC62AE80();
    sub_1BC62B15C();
    swift_release();
    v9 = sub_1BC4655A4();
    objc_msgSend(v9, sel_setEnabled_, 0);

    v10 = sub_1BC4656E8();
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0D2B3A8], v1);
    sub_1BC62B45C();

LABEL_8:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    goto LABEL_9;
  }
  v22 = *(_QWORD *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_state + 16);
  sub_1BC35D4EC(v5, (unint64_t)v6);
  swift_bridgeObjectRetain();
  sub_1BC35D4EC(v5, (unint64_t)v6);
  v11 = objc_allocWithZone(MEMORY[0x1E0CD0DB8]);
  sub_1BC35D4EC(v5, (unint64_t)v6);
  v12 = (void *)sub_1BC62A628();
  v13 = objc_msgSend(v11, sel_initWithData_, v12);
  sub_1BC35D530(v5, (unint64_t)v6);

  if (!v13)
  {
    sub_1BC35D530(v5, (unint64_t)v6);
    v7 = v22;
LABEL_7:
    v22 = v7;
    sub_1BC62AE8C();
    swift_allocObject();
    sub_1BC62AE80();
    v21 = v6;
    sub_1BC62B15C();
    swift_release();
    v18 = sub_1BC4655A4();
    objc_msgSend(v18, sel_setEnabled_, 0);

    v19 = sub_1BC4656E8();
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0D2B3A0], v1);
    sub_1BC62B45C();

    sub_1BC46C050(v5, (unint64_t)v21, v22, v8);
    goto LABEL_8;
  }
  sub_1BC62AE8C();
  swift_allocObject();
  v21 = v13;
  sub_1BC62AE80();
  sub_1BC62B15C();
  swift_release();
  v14 = sub_1BC4655A4();
  objc_msgSend(v14, sel_setEnabled_, 1);

  v15 = sub_1BC4656E8();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0D2B398], v1);
  sub_1BC62B45C();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v16 = sub_1BC4656E8();
  objc_msgSend(v16, sel_reloadData);

  v17 = sub_1BC4656E8();
  objc_msgSend(v17, sel_setContentOffset_animated_, 1, 0.0, 0.0);
  sub_1BC46C050(v5, (unint64_t)v6, v22, v8);

  sub_1BC35D530(v5, (unint64_t)v6);
LABEL_9:
  v20 = sub_1BC4656E8();
  objc_msgSend(v20, sel_reloadData);

}

uint64_t sub_1BC469058@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = a1;
  *(_QWORD *)(v13 + 32) = a2;
  *(_QWORD *)(v13 + 40) = a3;
  *(_QWORD *)(v13 + 48) = a4;
  *(_BYTE *)(v13 + 56) = a5 & 1;
  sub_1BC46C334(0, &qword_1EF431418, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_1BC62BF60();
  *a6 = result;
  return result;
}

void sub_1BC469144(void (*a1)(_OWORD *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v15;
  uint64_t v16;
  void *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  char v22;

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  swift_beginAccess();
  v16 = MEMORY[0x1BCCF37A4](a3 + 16);
  if (v16)
  {
    v17 = (void *)v16;
    v18 = a8 & 1;
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = sub_1BC46C4A4;
    *(_QWORD *)(v19 + 24) = v15;
    swift_retain();
    sub_1BC4F2784(a5, a6, a7, v18, (uint64_t)sub_1BC46C4D8, v19, (uint64_t *)v21);
    swift_release();
    v20 = (uint64_t)v17 + OBJC_IVAR___HRPDFConfigurationViewController_pdfGenerationToken;
    swift_beginAccess();
    sub_1BC46C08C((uint64_t)v21, v20);
    swift_endAccess();

  }
  else
  {
    swift_retain();
    swift_release();
    v22 = 0;
    memset(v21, 0, sizeof(v21));
    a1(v21);
  }
}

id PDFConfigurationViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void PDFConfigurationViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PDFConfigurationViewController.__deallocating_deinit(uint64_t a1)
{
  return sub_1BC3D6614(a1, type metadata accessor for PDFConfigurationViewController);
}

Swift::Int __swiftcall PDFConfigurationViewController.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  return 3;
}

id PDFConfigurationViewController.tableView(_:cellForRowAt:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void (*v19)(uint64_t *, _QWORD);
  id v20;
  void (*v21)(uint64_t *, _QWORD);
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  v4 = sub_1BC62BD98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)sub_1BC62C650();
  v9 = (void *)sub_1BC62A928();
  v10 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v8, v9);

  v11 = *(_QWORD *)(v2 + OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource);
  v12 = sub_1BC56159C();
  v14 = v13;
  sub_1BC62BD8C();
  swift_bridgeObjectRetain();
  v38 = v12;
  sub_1BC62BD74();
  v15 = sub_1BC62A94C();
  if (v15 == 2)
  {
    v16 = v5;
    sub_1BC55D294();
  }
  else
  {
    v16 = v5;
    if (v15 == 1)
    {
      sub_1BC55D134();
    }
    else if (!v15)
    {
      sub_1BC55CF30();
    }
  }
  v37 = v11;
  sub_1BC62BC9C();
  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, sel_labelColor);
  v19 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
  sub_1BC62BCCC();
  v19(&v43, 0);
  v20 = objc_msgSend(v17, sel_secondaryLabelColor);
  v21 = (void (*)(uint64_t *, _QWORD))sub_1BC62BD20();
  sub_1BC62BCCC();
  v21(&v43, 0);
  v45 = v4;
  v46 = MEMORY[0x1E0DC2398];
  v22 = __swift_allocate_boxed_opaque_existential_1(&v43);
  v23 = v16;
  (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(v22, v7, v4);
  MEMORY[0x1BCCF1DE8](&v43);
  v24 = sub_1BC62A94C();
  if ((unint64_t)(v24 - 1) >= 2 && (v24 || !*(_QWORD *)(v37 + 40)))
  {
    v26 = 0;
    v25 = 0;
  }
  else
  {
    v25 = 1;
    v26 = 3;
  }
  objc_msgSend(v10, sel_setSelectionStyle_, v26);
  objc_msgSend(v10, sel_setAccessoryType_, v25);
  if (v14)
  {
    v43 = v38;
    v44 = v14;
    v41 = 32;
    v42 = 0xE100000000000000;
    v39 = 0;
    v40 = 0xE000000000000000;
    sub_1BC36E2AC();
    v27 = MEMORY[0x1E0DEA968];
    v28 = sub_1BC62D034();
    v30 = v29;
    swift_bridgeObjectRelease();
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, v27, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v31 + 32) = 0x6F6974704F464450;
    *(_QWORD *)(v31 + 40) = 0xEA0000000000736ELL;
    v43 = v28;
    v44 = v30;
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v32 = v44;
    *(_QWORD *)(v31 + 48) = v43;
    *(_QWORD *)(v31 + 56) = v32;
    v33 = (void *)sub_1BC62C86C();
    v34 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v34);
    swift_bridgeObjectRelease();

  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v4);
  return v10;
}

void PDFConfigurationViewController.tableView(_:didSelectRowAt:)(void *a1, uint64_t a2)
{
  void *v2;
  void *v5;
  id v6;

  v5 = (void *)sub_1BC62A928();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v5, 1);

  v6 = sub_1BC55E918(a2, v2);
  sub_1BC469A38(v6);

}

void sub_1BC469A38(void *a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v19 = a1;
    v9 = objc_msgSend(v2, sel_navigationController);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel_pushViewController_animated_, v19, 1);

    }
  }
  else
  {
    sub_1BC62BAF8();
    v11 = v2;
    v12 = sub_1BC62BB28();
    v13 = sub_1BC62CADC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v20 = ObjectType;
      v21 = v15;
      *(_DWORD *)v14 = 136446210;
      v19 = v14 + 4;
      swift_getMetatypeMetadata();
      v16 = sub_1BC62C6E0();
      v20 = sub_1BC4991F0(v16, v17, &v21);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v12, v13, "[%{public}s]: Cannot present, view controller is nil", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v15, -1, -1);
      MEMORY[0x1BCCF36A8](v14, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1BC469D68(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_BYTE *)(v5 + 32) = a3 & 1;
  if ((a3 & 1) == 0)
  {
    v6 = *(_QWORD *)(v5 + 40);
    if (v6)
    {
      *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear) = a1;
      v7 = *(_QWORD *)(v5 + 40);
      if (v7)
        *(_QWORD *)(v7 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear) = a2;
    }
  }
  *(_BYTE *)(v5 + 33) = a4;
  return sub_1BC467CF4();
}

void sub_1BC469DBC(void *a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  id v46;
  id v47;
  double v48;
  double v49;
  double v50;
  double v51;
  id v52;
  uint8_t *v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  void *v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  id v74;
  uint64_t v75;
  void *v76;
  id v77;
  id v78;
  uint64_t v79;
  void *v80;
  char *v81;
  id v82;
  uint64_t v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  void *v88;
  id v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  id v96;
  id v97;
  void *v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  double v112;
  double v113;
  double v114;
  double v115;
  char *v116;
  void (*v117)(char *, uint64_t);
  double v118;
  uint64_t v119;
  _QWORD v120[2];
  char *v121;
  id v122;
  uint64_t v123;
  char *v124;
  uint8_t *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;

  ObjectType = swift_getObjectType();
  sub_1BC357158(0, (unint64_t *)&qword_1EF431400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v120 - v5;
  v7 = sub_1BC62A970();
  v125 = *(uint8_t **)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v124 = (char *)v120 - v11;
  v126 = (_QWORD *)sub_1BC62BB34();
  v12 = *(v126 - 1);
  MEMORY[0x1E0C80A78](v126);
  v14 = (char *)v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v120 - v16;
  *(_QWORD *)&v19 = MEMORY[0x1E0C80A78](v18).n128_u64[0];
  v21 = (char *)v120 - v20;
  v22 = (char *)objc_msgSend(a1, sel_state, v19);
  if ((unint64_t)(v22 - 4) < 2)
  {
    sub_1BC62BAF8();
    v31 = v1;
    v32 = sub_1BC62BB28();
    v33 = sub_1BC62CADC();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v127 = ObjectType;
      v128 = v35;
      *(_DWORD *)v34 = 136446210;
      swift_getMetatypeMetadata();
      v36 = sub_1BC62C6E0();
      v127 = sub_1BC4991F0(v36, v37, &v128);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v32, v33, "[%{public}s]: PDF zoom gesture failed or was cancelled", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v35, -1, -1);
      MEMORY[0x1BCCF36A8](v34, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, _QWORD *))(v12 + 8))(v17, v126);
    goto LABEL_12;
  }
  if (v22 == (char *)3)
  {
    sub_1BC62BAF8();
    v38 = v1;
    v39 = sub_1BC62BB28();
    v40 = sub_1BC62CADC();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v127 = ObjectType;
      v128 = v42;
      *(_DWORD *)v41 = 136446210;
      v125 = v41 + 4;
      swift_getMetatypeMetadata();
      v43 = sub_1BC62C6E0();
      v127 = sub_1BC4991F0(v43, v44, &v128);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v39, v40, "[%{public}s]: PDF zoom gesture ended", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v42, -1, -1);
      MEMORY[0x1BCCF36A8](v41, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, _QWORD *))(v12 + 8))(v14, v126);
    objc_msgSend(a1, sel_scale);
    if (v118 > 1.2)
    {
      sub_1BC46A9E4();
      return;
    }
LABEL_12:
    sub_1BC46A94C();
    return;
  }
  if (v22 != (char *)1)
    return;
  sub_1BC62BAF8();
  v23 = v1;
  v24 = sub_1BC62BB28();
  v25 = sub_1BC62CADC();
  v26 = os_log_type_enabled(v24, v25);
  v123 = v7;
  if (v26)
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v122 = (id)swift_slowAlloc();
    v127 = ObjectType;
    v128 = (uint64_t)v122;
    v121 = v23;
    *(_DWORD *)v27 = 136446210;
    v120[1] = v27 + 4;
    swift_getMetatypeMetadata();
    v28 = sub_1BC62C6E0();
    v127 = sub_1BC4991F0(v28, v29, &v128);
    sub_1BC62CFF8();
    v23 = v121;

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v24, v25, "[%{public}s]: PDF zoom gesture began", v27, 0xCu);
    v30 = v122;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v30, -1, -1);
    MEMORY[0x1BCCF36A8](v27, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, _QWORD *))(v12 + 8))(v21, v126);
  v45 = v23;
  v46 = sub_1BC4656E8();
  v47 = sub_1BC4656E8();
  objc_msgSend(a1, sel_locationInView_, v47);
  v49 = v48;
  v51 = v50;

  v52 = objc_msgSend(v46, sel_indexPathForItemAtPoint_, v49, v51);
  if (!v52)
  {
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v125 + 7))(v6, 1, 1, v123);
    goto LABEL_32;
  }
  sub_1BC62A934();

  v53 = v125;
  v54 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v125 + 4);
  v55 = v123;
  v54(v6, v9, v123);
  (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v53 + 7))(v6, 0, 1, v55);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v53 + 6))(v6, 1, v55) == 1)
  {
LABEL_32:
    sub_1BC358494((uint64_t)v6, (uint64_t)&qword_1EF431400, (uint64_t)MEMORY[0x1E0CB1658], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
    return;
  }
  v56 = v124;
  v54(v124, v6, v55);
  v57 = sub_1BC4656E8();
  v58 = (void *)sub_1BC62A928();
  v59 = objc_msgSend(v57, sel_cellForItemAtIndexPath_, v58);

  if (!v59)
  {
LABEL_34:
    v117 = (void (*)(char *, uint64_t))*((_QWORD *)v53 + 1);
    v116 = v56;
    goto LABEL_35;
  }
  sub_1BC62AD84();
  if (!swift_dynamicCastClass())
  {

    goto LABEL_34;
  }
  v60 = (void *)sub_1BC62AD78();
  v61 = OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView;
  v62 = *(void **)&v45[OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView];
  *(_QWORD *)&v45[OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView] = v60;
  v63 = v60;

  v64 = objc_msgSend(v45, sel_view);
  if (!v64)
  {
    __break(1u);
    goto LABEL_44;
  }
  v65 = v64;
  objc_msgSend(v64, sel_bounds);
  v67 = v66;
  v69 = v68;
  v71 = v70;
  v73 = v72;

  v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, v67, v69, v71, v73);
  v75 = OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView;
  v76 = *(void **)&v45[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView];
  *(_QWORD *)&v45[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView] = v74;

  v77 = objc_msgSend(v63, sel_image);
  v78 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v77);

  v79 = OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView;
  v80 = *(void **)&v45[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView];
  v81 = v45;
  *(_QWORD *)&v45[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView] = v78;

  v82 = objc_msgSend(v63, sel_window);
  v83 = v123;
  if (!v82)
  {
LABEL_40:
    sub_1BC46A94C();

    v117 = (void (*)(char *, uint64_t))*((_QWORD *)v125 + 1);
    v116 = v56;
    v119 = v83;
    goto LABEL_41;
  }
  v84 = v82;
  v85 = objc_msgSend(v63, sel_superview);
  if (!v85)
  {
LABEL_39:

    v56 = v124;
    goto LABEL_40;
  }
  v86 = v85;
  v87 = objc_msgSend(v81, sel_view);
  if (!v87)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v88 = v87;
  v89 = objc_msgSend(v87, sel_superview);

  if (!v89)
  {
    v89 = v86;
    goto LABEL_38;
  }
  v126 = v86;
  v90 = *(void **)&v81[v75];
  if (!v90 || (v91 = v81, (v92 = *(void **)&v81[v61]) == 0) || (v93 = *(void **)&v81[v79]) == 0)
  {

    v84 = v126;
LABEL_38:

    v84 = v89;
    v83 = v123;
    goto LABEL_39;
  }
  v94 = v90;
  v95 = v92;
  v96 = v93;
  v122 = v95;
  objc_msgSend(v95, sel_setAlpha_, 0.0);
  v97 = objc_msgSend(v91, sel_view);
  if (!v97)
  {
LABEL_45:
    __break(1u);
    return;
  }
  v98 = v97;
  objc_msgSend(v97, sel_frame);
  v100 = v99;
  v102 = v101;

  objc_msgSend(v89, sel_convertPoint_toCoordinateSpace_, v84, v100, v102);
  v104 = v103;
  v106 = v105;
  objc_msgSend(v94, (SEL)&selRef_frame);
  objc_msgSend(v94, sel_setFrame_, v104, v106);
  v107 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v94, sel_setBackgroundColor_, v107);

  objc_msgSend(v94, sel_setAlpha_, 0.0);
  v108 = objc_msgSend(v94, sel_layer);
  sub_1BC62A988();
  objc_msgSend(v108, sel_setCornerRadius_);

  objc_msgSend(v94, sel_setClipsToBounds_, 1);
  objc_msgSend(v84, sel_addSubview_, v94);
  objc_msgSend(v84, sel_bringSubviewToFront_, v94);
  v109 = v96;
  objc_msgSend(v63, sel_bounds);
  objc_msgSend(v109, sel_bounds);
  objc_msgSend(v109, sel_setBounds_);

  v110 = v109;
  objc_msgSend(v63, sel_frame);
  v111 = v126;
  objc_msgSend(v126, sel_convertPoint_toCoordinateSpace_, v84);
  v113 = v112;
  v115 = v114;
  objc_msgSend(v110, sel_frame);
  objc_msgSend(v110, sel_setFrame_, v113, v115);

  objc_msgSend(v84, sel_addSubview_, v110);
  objc_msgSend(v84, sel_bringSubviewToFront_, v110);

  v116 = v124;
  v117 = (void (*)(char *, uint64_t))*((_QWORD *)v125 + 1);
LABEL_35:
  v119 = v123;
LABEL_41:
  v117(v116, v119);
}

void sub_1BC46A94C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v1 = OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView;
  v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView);
  if (v2)
    objc_msgSend(v2, sel_setAlpha_, 1.0);
  v3 = OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView), sel_removeFromSuperview);
  v4 = OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView;
  v5 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView);
  if (v5)
    objc_msgSend(v5, sel_removeFromSuperview);
  v6 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = 0;

  v7 = *(void **)(v0 + v3);
  *(_QWORD *)(v0 + v3) = 0;

  v8 = *(void **)(v0 + v4);
  *(_QWORD *)(v0 + v4) = 0;

}

void sub_1BC46A9E4()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  uint64_t aBlock;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  _QWORD *v27;

  v1 = *(void **)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView];
  v2 = OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView;
  v3 = *(void **)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView];
  v4 = OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView;
  v5 = *(void **)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView];
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView] = 0;
  v6 = *(void **)&v0[v2];
  *(_QWORD *)&v0[v2] = 0;
  v7 = v3;
  v8 = v5;

  v9 = *(void **)&v0[v4];
  *(_QWORD *)&v0[v4] = 0;

  v21 = (id)objc_opt_self();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v3;
  *(_QWORD *)(v10 + 24) = v1;
  v26 = sub_1BC46BFCC;
  v27 = (_QWORD *)v10;
  v11 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v23 = 1107296256;
  v24 = sub_1BC39BE70;
  v25 = &block_descriptor_9_4;
  v12 = _Block_copy(&aBlock);
  v13 = v1;
  v14 = v7;
  swift_release();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v0;
  v15[3] = v5;
  v15[4] = v1;
  v15[5] = v3;
  v26 = sub_1BC46C010;
  v27 = v15;
  aBlock = v11;
  v23 = 1107296256;
  v24 = sub_1BC39BAC4;
  v25 = &block_descriptor_15_1;
  v16 = _Block_copy(&aBlock);
  v17 = v13;
  v18 = v14;
  v19 = v8;
  v20 = v0;
  swift_release();
  objc_msgSend(v21, sel_animateWithDuration_delay_options_animations_completion_, 0x10000, v12, v16, 0.3, 0.0);
  _Block_release(v16);
  _Block_release(v12);

}

id sub_1BC46AC18(id result, void *a2)
{
  CGAffineTransform v3;

  if (result)
    result = objc_msgSend(result, sel_setAlpha_, 1.0);
  if (a2)
  {
    CGAffineTransformMakeScale(&v3, 2.0, 2.0);
    objc_msgSend(a2, sel_setTransform_, &v3);
    return objc_msgSend(a2, sel_setAlpha_, 0.0);
  }
  return result;
}

uint64_t sub_1BC46AC98(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v8 = sub_1BC62C47C();
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62C4AC();
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC62C4C4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v29 - v19;
  sub_1BC46AF8C();
  if (a3)
    objc_msgSend(a3, sel_setAlpha_, 1.0);
  if (a4)
    objc_msgSend(a4, sel_removeFromSuperview);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v21 = (void *)sub_1BC62CC74();
  sub_1BC62C4B8();
  MEMORY[0x1BCCF17B8](v17, 0.2);
  v30 = *(void (**)(char *, uint64_t))(v15 + 8);
  v30(v17, v14);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a5;
  aBlock[4] = sub_1BC46C040;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_21_1;
  v23 = _Block_copy(aBlock);
  v24 = a5;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v25, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v26 = v14;
  sub_1BC35A2BC((unint64_t *)&qword_1ED6A58A0, (unint64_t *)&qword_1ED6A5890, v25);
  v27 = v34;
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1EFC](v20, v13, v10, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v27);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v32);
  return ((uint64_t (*)(char *, uint64_t))v30)(v20, v26);
}

void sub_1BC46AF8C()
{
  char *v0;
  uint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  objc_class *v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  objc_super v19;

  v1 = (uint64_t *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_state];
  v2 = *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_state + 24];
  if (v2 >= 2)
  {
    v4 = *v1;
    v3 = v1[1];
    v5 = v1[2];
    sub_1BC35D4EC(*v1, v3);
    swift_bridgeObjectRetain();
    sub_1BC35D4EC(v4, v3);
    v6 = objc_allocWithZone(MEMORY[0x1E0CD0DB8]);
    sub_1BC35D4EC(v4, v3);
    v7 = (void *)sub_1BC62A628();
    v8 = objc_msgSend(v6, sel_initWithData_, v7);
    sub_1BC35D530(v4, v3);

    if (v8)
    {
      v9 = (objc_class *)type metadata accessor for PDFPreviewViewController();
      v10 = (char *)objc_allocWithZone(v9);
      *(_QWORD *)&v10[OBJC_IVAR____TtC15HealthRecordsUI24PDFPreviewViewController_pdfDocument] = v8;
      v19.receiver = v10;
      v19.super_class = v9;
      v18 = v8;
      v11 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
      v12 = qword_1ED6A4888;
      v13 = v11;
      if (v12 != -1)
        swift_once();
      v14 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v15 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_setTitle_, v15, 0xE000000000000000);

      v16 = objc_msgSend(v0, sel_navigationController);
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v16, sel_pushViewController_animated_, v13, 0);
        sub_1BC46C050(v4, v3, v5, v2);
        sub_1BC35D530(v4, v3);

      }
      else
      {
        sub_1BC46C050(v4, v3, v5, v2);
        sub_1BC35D530(v4, v3);
      }

    }
    else
    {
      sub_1BC35D530(v4, v3);
      sub_1BC46C050(v4, v3, v5, v2);
    }
  }
}

void sub_1BC46B23C()
{
  qword_1EF4311E0 = 0x402E000000000000;
}

void sub_1BC46B24C()
{
  qword_1EF4311E8 = 0x403E000000000000;
}

id sub_1BC46B434()
{
  return sub_1BC3D6614(0, type metadata accessor for ContentSizedTableView);
}

void sub_1BC46B49C()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for PDFPreviewViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD0DD8]), sel_init);
  objc_msgSend(v0, sel_setView_, v1);

  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_opt_self();
    v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
      objc_msgSend(v4, sel_setDocument_, *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24PDFPreviewViewController_pdfDocument]);

  }
}

void sub_1BC46B598(char a1)
{
  void *v1;
  id v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for PDFPreviewViewController();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    v4 = v3;
    objc_opt_self();
    v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      objc_msgSend(v5, sel_scaleFactorForSizeToFit);
      v7 = v6;

      v8 = objc_msgSend(v1, sel_view);
      if (v8)
      {
        v9 = v8;
        objc_opt_self();
        v4 = (void *)swift_dynamicCastObjCClass();
        if (!v4)

      }
      else
      {
        v4 = 0;
      }
      objc_msgSend(v4, sel_setScaleFactor_, v7);
    }

  }
}

void sub_1BC46B6E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC46B71C(uint64_t a1)
{
  return sub_1BC3D6614(a1, type metadata accessor for PDFPreviewViewController);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_1BC46B750()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC46B774()
{
  uint64_t v0;

  return sub_1BC466F84(v0);
}

uint64_t sub_1BC46B77C()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC46B7B0(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC55DF88(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1BC46B7BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
    v4 = sub_1BC62C878();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

void sub_1BC46B860()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v1 = sub_1BC62CC68();
  v11 = *(_QWORD *)(v1 - 8);
  v12 = v1;
  MEMORY[0x1E0C80A78](v1);
  v13 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC62CC20();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1BC62C4AC();
  MEMORY[0x1E0C80A78](v4);
  v5 = &v0[OBJC_IVAR___HRPDFConfigurationViewController_tableCellIdentifier];
  *(_QWORD *)v5 = 1819043139;
  *((_QWORD *)v5 + 1) = 0xE400000000000000;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___cancelBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___actionBarButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___tableView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___scrollView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView] = 0;
  v6 = OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding;
  if (qword_1EF4285E8 != -1)
    swift_once();
  *(_QWORD *)&v0[v6] = qword_1EF4311E8;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfPaddingConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfHeightConstraint] = 0;
  v7 = &v0[OBJC_IVAR___HRPDFConfigurationViewController_state];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *((_QWORD *)v7 + 2) = 0;
  *((_QWORD *)v7 + 3) = 1;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_dataProviderToken] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_generatorCancellable] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_previewCancellable] = 0;
  v8 = &v0[OBJC_IVAR___HRPDFConfigurationViewController_pdfGenerationToken];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v9 = OBJC_IVAR___HRPDFConfigurationViewController_queue;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  sub_1BC62C494();
  v14 = MEMORY[0x1E0DEE9D8];
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1BC357158(0, &qword_1ED6A58B0, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35A2BC((unint64_t *)&qword_1ED6A58B8, &qword_1ED6A58B0, v10);
  sub_1BC62D0A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF8D0], v12);
  *(_QWORD *)&v0[v9] = sub_1BC62CCA4();

  sub_1BC62D394();
  __break(1u);
}

uint64_t method lookup function for PDFConfigurationViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PDFConfigurationViewController.__allocating_init(profile:account:category:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 656))();
}

uint64_t type metadata accessor for ContentSizedTableView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PDFPreviewViewController()
{
  return objc_opt_self();
}

uint64_t *destroy for PDFConfigurationViewController.State(uint64_t *result)
{
  if ((unint64_t)result[3] >= 0xFFFFFFFF)
  {
    sub_1BC35D530(*result, result[1]);
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *initializeWithCopy for PDFConfigurationViewController.State(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;

  v4 = a2[3];
  LODWORD(v5) = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = a2[3];
  if ((v5 + 1) <= 1 && (_DWORD)v5 == -1)
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1BC35D4EC(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    a1[2] = a2[2];
    a1[3] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for PDFConfigurationViewController.State(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v4 = *(_QWORD *)(a1 + 24);
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v4) = -1;
  v5 = v4 + 1;
  v6 = a2[3];
  if (v6 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  v7 = v6 + 1;
  if (v5 > 1)
  {
    if (v7 <= 1 && (_DWORD)v6 == -1)
      goto LABEL_12;
LABEL_17:
    v10 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    return a1;
  }
  if (v7 > 1)
  {
    if (v5)
      goto LABEL_17;
LABEL_16:
    sub_1BC35D530(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (!v5)
  {
    if ((_DWORD)v6 == -1)
    {
      v12 = *a2;
      v13 = a2[1];
      sub_1BC35D4EC(*a2, v13);
      v14 = *(_QWORD *)a1;
      v15 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)a1 = v12;
      *(_QWORD *)(a1 + 8) = v13;
      sub_1BC35D530(v14, v15);
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    goto LABEL_16;
  }
  if ((_DWORD)v6 != -1)
    goto LABEL_17;
LABEL_12:
  v8 = *a2;
  v9 = a2[1];
  sub_1BC35D4EC(*a2, v9);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for PDFConfigurationViewController.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;

  LODWORD(v4) = -1;
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
    v4 = *(_QWORD *)(a1 + 24);
  v5 = v4 + 1;
  if (v5 > 1)
    goto LABEL_13;
  v6 = *(_QWORD *)(a2 + 24);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(a2 + 24);
  v8 = v7 + 1;
  if (v8 > 1)
  {
    if (!v5)
    {
      v9 = *(_QWORD *)a1;
      v10 = *(_QWORD *)(a1 + 8);
      goto LABEL_12;
    }
LABEL_13:
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    return a1;
  }
  if (v5)
    goto LABEL_13;
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
LABEL_12:
    sub_1BC35D530(v9, v10);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1BC35D530(v9, v10);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PDFConfigurationViewController.State(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PDFConfigurationViewController.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t sub_1BC46BF3C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

double sub_1BC46BF5C(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0x7FFFFFFE)
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_DWORD *)a1 = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFConfigurationViewController.State()
{
  return &type metadata for PDFConfigurationViewController.State;
}

uint64_t sub_1BC46BFA0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC46BFCC()
{
  uint64_t v0;

  return sub_1BC46AC18(*(id *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1BC46BFD4()
{
  id *v0;

  return swift_deallocObject();
}

uint64_t sub_1BC46C010(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC46AC98(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1BC46C01C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC46C040()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
}

uint64_t sub_1BC46C050(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1)
    return sub_1BC46C060(result, a2, a3, a4);
  return result;
}

uint64_t sub_1BC46C060(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_1BC35D530(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC46C08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC46C0EC()
{
  uint64_t v0;

  return sub_1BC468148(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC46C0F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC46C118(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC468228(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

void sub_1BC46C128()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF431410)
  {
    v0 = MEMORY[0x1E0C960D8];
    sub_1BC46C334(255, &qword_1EF431418, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC46C224(&qword_1EF431430, &qword_1EF431418, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x1E0C96108]);
    v1 = sub_1BC62BF84();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF431410);
  }
}

void sub_1BC46C1C0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF431428)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF431428);
  }
}

uint64_t sub_1BC46C224(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC46C334(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC46C264()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF431438)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC46C334(255, &qword_1EF431440, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC46C224((unint64_t *)&unk_1EF431448, &qword_1EF431440, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x1E0C95D90]);
    sub_1BC3ABB20();
    v1 = sub_1BC62BE70();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF431438);
  }
}

void sub_1BC46C334(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC357158(255, &qword_1EF431420, (uint64_t (*)(uint64_t))sub_1BC46C1C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v7 = a3(a1, v6, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC46C3B4()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC46C3E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC469058(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), a1);
}

void sub_1BC46C3FC(uint64_t *a1)
{
  uint64_t v1;

  sub_1BC4688DC(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BC46C404()
{
  uint64_t v0;

  sub_1BC4687E8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC46C40C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_1BC35D4EC(result, a2);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BC46C438()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC46C46C(void (*a1)(_OWORD *), uint64_t a2)
{
  uint64_t v2;

  sub_1BC469144(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_BYTE *)(v2 + 56));
}

uint64_t sub_1BC46C480()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC46C4A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_BYTE *);
  _BYTE v4[40];

  v2 = *(uint64_t (**)(_BYTE *))(v1 + 16);
  sub_1BC46C510(a1, (uint64_t)v4);
  return v2(v4);
}

uint64_t sub_1BC46C4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _QWORD v7[4];
  char v8;

  v5 = *(uint64_t (**)(_QWORD *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  v7[3] = a4;
  v8 = 0;
  return v5(v7);
}

uint64_t sub_1BC46C510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC46C334(0, &qword_1EF431468, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0DEE030]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC46C564(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1)
    return sub_1BC46C40C(result, a2, a3, a4);
  return result;
}

void sub_1BC46C574()
{
  uint64_t v0;

  sub_1BC4670F4(v0);
}

uint64_t sub_1BC46C57C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC46C5A8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BC468A10(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BC46C5B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC46C5E8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = sub_1BC55EC68();
  return v1(v2);
}

id BaseAccountFeedItemView.headerView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1ED6A4690);
}

id sub_1BC46C678()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  void *v7;
  id v8;

  v1 = qword_1ED6A4678;
  v2 = *(void **)(v0 + qword_1ED6A4678);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1ED6A4678);
  }
  else
  {
    v4 = v0;
    ObjectType = swift_getObjectType();
    v6 = (void *)(*(uint64_t (**)(void))(ObjectType + 232))();
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_1BC46C6E8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_1ED6A4678);
  *(_QWORD *)(v1 + qword_1ED6A4678) = a1;

}

id BaseAccountFeedItemView.actionLabel.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1ED6A46A0);
}

void sub_1BC46C70C()
{
  sub_1BC62D394();
  __break(1u);
}

void sub_1BC46C764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (a2)
  {
    v3 = v2;
    swift_bridgeObjectRetain();
    sub_1BC3A1EF0(a1, a2);
    v6 = sub_1BC46C678();
    sub_1BC359F44();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v7 + 32) = a1;
    *(_QWORD *)(v7 + 40) = a2;
    *(_QWORD *)(v7 + 48) = 0x56746E65746E6F43;
    *(_QWORD *)(v7 + 56) = 0xEB00000000776569;
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.hrui_setAccessibilityIdentifier(_:)((Swift::OpaquePointer)v7);

    swift_bridgeObjectRelease();
    v8 = *(void **)(v3 + qword_1ED6A46A0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v9 + 32) = a1;
    *(_QWORD *)(v9 + 40) = a2;
    strcpy((char *)(v9 + 48), "ActionButton");
    *(_BYTE *)(v9 + 61) = 0;
    *(_WORD *)(v9 + 62) = -5120;
    v10 = (void *)sub_1BC62C86C();
    v11 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v11);
    swift_bridgeObjectRelease();

  }
}

void sub_1BC46C90C()
{
  sub_1BC62D394();
  __break(1u);
}

id sub_1BC46C964()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = v0;
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(void))(ObjectType + 240))() & 1) != 0)
  {
    v3 = *(_QWORD *)&v0[qword_1ED6A4690];
    objc_msgSend(*(id *)&v1[qword_1ED6A4690], sel_setPreservesSuperviewLayoutMargins_, 1);
    objc_msgSend(v1, sel_addSubview_, v3);
    v4 = *(void **)&v1[qword_1ED6A4698];
    v5 = objc_msgSend((id)objc_opt_self(), sel_opaqueSeparatorColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    objc_msgSend(v1, sel_addSubview_, v4);
  }
  v6 = sub_1BC46C678();
  objc_msgSend(v6, sel_setLayoutMargins_, *MEMORY[0x1E0DC49E8], *(double *)(MEMORY[0x1E0DC49E8] + 8), *(double *)(MEMORY[0x1E0DC49E8] + 16), *(double *)(MEMORY[0x1E0DC49E8] + 24));

  v7 = sub_1BC46C678();
  objc_msgSend(v1, sel_addSubview_, v7);

  v8 = *(void **)&v1[qword_1ED6A46A0];
  objc_msgSend(v8, sel_setPreservesSuperviewLayoutMargins_, 1);
  v9 = objc_msgSend(v1, sel_tintColor);
  objc_msgSend(v8, sel_setTextColor_, v9);

  return objc_msgSend(v1, sel_addSubview_, v8);
}

void sub_1BC46CADC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + qword_1ED6A46A0);
  v2 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v1, sel_setFont_, v2);

}

id sub_1BC46CB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  id v6;
  objc_super v8;

  v5 = (objc_class *)type metadata accessor for BaseAccountFeedItemView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x88), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x90), a4);
  v8.receiver = v4;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, sel_layoutMarginsDidChange);
  v6 = sub_1BC46C678();
  objc_msgSend(v6, sel_setLayoutMargins_, *MEMORY[0x1E0DC49E8], *(double *)(MEMORY[0x1E0DC49E8] + 8), *(double *)(MEMORY[0x1E0DC49E8] + 16), *(double *)(MEMORY[0x1E0DC49E8] + 24));

  return objc_msgSend(v4, sel_setNeedsLayout);
}

uint64_t type metadata accessor for BaseAccountFeedItemView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BaseAccountFeedItemView);
}

void sub_1BC46CBE8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_1BC46CB50((uint64_t)v4, v1, v2, v3);

}

void sub_1BC46CC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  void *v6;
  id v7;
  objc_super v8;

  v5 = (objc_class *)type metadata accessor for BaseAccountFeedItemView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x88), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x90), a4);
  v8.receiver = v4;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, sel_tintColorDidChange);
  v6 = *(void **)((char *)v4 + qword_1ED6A46A0);
  v7 = objc_msgSend(v4, sel_tintColor);
  objc_msgSend(v6, sel_setTextColor_, v7);

}

void sub_1BC46CCB0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_1BC46CC1C((uint64_t)v4, v1, v2, v3);

}

void sub_1BC46CCE4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  objc_super v12;

  v6 = (objc_class *)type metadata accessor for BaseAccountFeedItemView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x88), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x90), a4);
  v12.receiver = v4;
  v12.super_class = v6;
  objc_msgSendSuper2(&v12, sel_traitCollectionDidChange_, a1);
  if (a1)
  {
    objc_msgSend(a1, sel_displayPixel);
    v8 = v7;
  }
  else
  {
    v8 = 0.0;
  }
  v9 = objc_msgSend(v4, sel_traitCollection);
  objc_msgSend(v9, sel_displayPixel);
  v11 = v10;

  if (!a1 || v8 != v11)
    objc_msgSend(v4, sel_setNeedsLayout);
}

void sub_1BC46CDB8(void *a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = a3;
  v8 = a1;
  sub_1BC46CCE4(a3, (uint64_t)v8, v6, v7);

}

id sub_1BC46CE10()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t ObjectType;
  uint64_t v3;
  objc_class *v4;
  CGFloat Width;
  id v6;
  objc_super v8;
  double v9[17];
  CGRect v10;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v4 = (objc_class *)type metadata accessor for BaseAccountFeedItemView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x88), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90), v3);
  v8.receiver = v1;
  v8.super_class = v4;
  objc_msgSendSuper2(&v8, sel_layoutSubviews);
  objc_msgSend(v1, sel_bounds);
  Width = CGRectGetWidth(v10);
  if (((*(uint64_t (**)(void))(ObjectType + 240))() & 1) != 0)
  {
    sub_1BC46CFBC((uint64_t)v9, Width);
    objc_msgSend(*(id *)((char *)v1 + qword_1ED6A4690), sel_setFrame_, v9[0], v9[1], v9[2], v9[3]);
    objc_msgSend(*(id *)((char *)v1 + qword_1ED6A4698), sel_setFrame_, v9[4], v9[5], v9[6], v9[7]);
  }
  else
  {
    sub_1BC46CFBC((uint64_t)v9, Width);
  }
  v6 = sub_1BC46C678();
  objc_msgSend(v6, sel_setFrame_, v9[8], v9[9], v9[10], v9[11]);

  return objc_msgSend(*(id *)((char *)v1 + qword_1ED6A46A0), sel_setFrame_, v9[12], v9[13], v9[14], v9[15]);
}

void sub_1BC46CF88(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC46CE10();

}

double sub_1BC46CFBC@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>)
{
  char *v2;
  char *v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  double v13;
  double v14;
  double MinX;
  id v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  id v21;
  double v22;
  double v23;
  double v24;
  CGFloat v25;
  CGFloat MaxY;
  double v27;
  double v28;
  id v29;
  double v30;
  CGFloat v31;
  CGFloat v32;
  double v33;
  double v34;
  double v35;
  CGFloat v36;
  double v37;
  double v38;
  CGFloat v39;
  uint64_t *v40;
  double v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double result;
  uint64_t v48;
  double v49;
  CGFloat v50;
  CGFloat v51;
  double v52;
  double v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = sub_1BC62D55C();
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = MEMORY[0x1E0C80A78](v7).n128_u64[0];
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(v3, sel_traitCollection, v9);
  objc_msgSend(v12, sel_displayPixel);
  v51 = v13;

  objc_msgSend(v3, sel_directionalLayoutMargins);
  MinX = v14;
  v16 = objc_msgSend(v3, sel_directionalLayoutMargins);
  v18 = v17;
  v19 = a2 - MinX - v17;
  if (((*(uint64_t (**)(id))(ObjectType + 240))(v16) & 1) != 0)
  {
    v20 = *(void **)&v3[qword_1ED6A4690];
    objc_msgSend(v20, sel_sizeThatFits_, a2, 1.79769313e308);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0DED500], v7);
    v21 = objc_msgSend(v20, sel_traitCollection);
    objc_msgSend(v21, sel_displayScale);
    sub_1BC62A994();
    v23 = v22;
    objc_msgSend(v21, sel_displayScale);
    sub_1BC62A994();
    v25 = v24;
    v49 = v24;

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    if (v23 <= a2)
      a2 = v23;
    v50 = a2;
    if (objc_msgSend(v3, sel_effectiveUserInterfaceLayoutDirection) != (id)1)
      v18 = MinX;
    v54.origin.x = 0.0;
    v54.origin.y = 0.0;
    v54.size.width = a2;
    v54.size.height = v25;
    MaxY = CGRectGetMaxY(v54);
    v27 = *(double *)&v3[qword_1ED6A4680];
    v28 = MaxY + v27;
    v29 = sub_1BC46C678();
    objc_msgSend(v29, sel_sizeThatFits_, v19, 1.79769313e308);
    v31 = v30;

    v55.origin.x = v18;
    v55.origin.y = v28;
    v55.size.width = v19;
    v32 = v51;
    v55.size.height = v51;
    MinX = CGRectGetMinX(v55);
    v56.origin.x = v18;
    v56.origin.y = v28;
    v56.size.width = v19;
    v56.size.height = v32;
    v33 = v27 + CGRectGetMaxY(v56);
    v34 = sub_1BC46D3E8(v19);
    v52 = v35;
    v53 = v34;
    v57.origin.x = v18;
    v57.origin.y = v28;
    v57.size.width = v19;
    v57.size.height = v32;
    v36 = CGRectGetMinX(v57);
    v58.origin.x = MinX;
    v58.origin.y = v33;
    v58.size.width = v19;
    v58.size.height = v31;
    v37 = CGRectGetMaxY(v58);
    v38 = v49;
    v39 = v50;
    v40 = &qword_1ED6A4688;
    v41 = v19;
  }
  else
  {
    v42 = sub_1BC46C678();
    objc_msgSend(v42, sel_sizeThatFits_, v19, 1.79769313e308);
    v31 = v43;

    if (objc_msgSend(v3, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
      MinX = v18;
    v33 = *(double *)&v3[qword_1ED6A4680];
    v44 = sub_1BC46D3E8(v19);
    v52 = v45;
    v53 = v44;
    v59.origin.x = MinX;
    v59.origin.y = v33;
    v59.size.width = v19;
    v59.size.height = v31;
    v36 = CGRectGetMinX(v59);
    v60.origin.x = MinX;
    v60.origin.y = v33;
    v60.size.width = v19;
    v60.size.height = v31;
    v37 = CGRectGetMaxY(v60);
    v40 = &qword_1ED6A32C8;
    v39 = 0.0;
    v38 = 0.0;
    v18 = 0.0;
    v28 = 0.0;
    v41 = 0.0;
    v32 = 0.0;
  }
  v46 = v37 + *(double *)&v3[*v40];
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(CGFloat *)(a1 + 16) = v39;
  *(double *)(a1 + 24) = v38;
  *(double *)(a1 + 32) = v18;
  *(double *)(a1 + 40) = v28;
  *(double *)(a1 + 48) = v41;
  *(CGFloat *)(a1 + 56) = v32;
  *(double *)(a1 + 64) = MinX;
  *(double *)(a1 + 72) = v33;
  *(double *)(a1 + 80) = v19;
  *(CGFloat *)(a1 + 88) = v31;
  *(CGFloat *)(a1 + 96) = v36;
  *(double *)(a1 + 104) = v46;
  result = v52;
  *(double *)(a1 + 112) = v53;
  *(double *)(a1 + 120) = result;
  return result;
}

CGFloat sub_1BC46D354(CGFloat a1)
{
  uint64_t v3;
  CGRect v4;

  sub_1BC46CFBC((uint64_t)&v3, a1);
  CGRectGetMaxY(v4);
  return a1;
}

double sub_1BC46D3A0(void *a1, CGFloat a2)
{
  id v3;
  double v4;

  v3 = a1;
  v4 = sub_1BC46D354(a2);

  return v4;
}

double sub_1BC46D3E8(double a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  double v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v3 = *(void **)(v1 + qword_1ED6A46A0);
  v4 = objc_msgSend(v3, sel_text);
  v5 = 0.0;
  if (v4)
  {
    v6 = v4;
    v7 = sub_1BC62C680();
    v9 = v8;

    swift_bridgeObjectRelease();
    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = v7 & 0xFFFFFFFFFFFFLL;
    if (v10)
    {
      objc_msgSend(v3, sel_sizeThatFits_, a1, 1.79769313e308);
      return a1;
    }
  }
  return v5;
}

id BaseAccountFeedItemView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id BaseAccountFeedItemView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  objc_super v18;

  v9 = *MEMORY[0x1E0DEEDD8] & *v4;
  v10 = qword_1ED6A4690;
  v11 = objc_allocWithZone((Class)type metadata accessor for AccountView(0));
  v12 = v4;
  *(_QWORD *)((char *)v4 + v10) = objc_msgSend(v11, sel_init);
  v13 = qword_1ED6A4698;
  *(_QWORD *)((char *)v12 + v13) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  *(_QWORD *)((char *)v12 + qword_1ED6A4678) = 0;
  v14 = qword_1ED6A46A0;
  *(_QWORD *)((char *)v12 + v14) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  *(_QWORD *)((char *)v12 + qword_1ED6A4680) = 0x4028000000000000;
  *(_QWORD *)((char *)v12 + qword_1ED6A4688) = 0x4020000000000000;
  *(_QWORD *)((char *)v12 + qword_1ED6A32C8) = 0x4018000000000000;

  v16 = (objc_class *)type metadata accessor for BaseAccountFeedItemView(0, *(_QWORD *)(v9 + 136), *(_QWORD *)(v9 + 144), v15);
  v18.receiver = v12;
  v18.super_class = v16;
  return objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1BC46D638(double a1, double a2, double a3, double a4)
{
  return BaseAccountFeedItemView.init(frame:)(a1, a2, a3, a4);
}

id BaseAccountFeedItemView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id BaseAccountFeedItemView.init(coder:)(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  id v11;
  objc_super v13;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = qword_1ED6A4690;
  v5 = objc_allocWithZone((Class)type metadata accessor for AccountView(0));
  v6 = v1;
  *(_QWORD *)((char *)v1 + v4) = objc_msgSend(v5, sel_init);
  v7 = qword_1ED6A4698;
  *(_QWORD *)((char *)v6 + v7) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  *(_QWORD *)((char *)v6 + qword_1ED6A4678) = 0;
  v8 = qword_1ED6A46A0;
  *(_QWORD *)((char *)v6 + v8) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  *(_QWORD *)((char *)v6 + qword_1ED6A4680) = 0x4028000000000000;
  *(_QWORD *)((char *)v6 + qword_1ED6A4688) = 0x4020000000000000;
  *(_QWORD *)((char *)v6 + qword_1ED6A32C8) = 0x4018000000000000;

  v10 = (objc_class *)type metadata accessor for BaseAccountFeedItemView(0, *(_QWORD *)(v3 + 136), *(_QWORD *)(v3 + 144), v9);
  v13.receiver = v6;
  v13.super_class = v10;
  v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

id sub_1BC46D7CC(uint64_t a1, uint64_t a2, void *a3)
{
  return BaseAccountFeedItemView.init(coder:)(a3);
}

void sub_1BC46D7F0()
{
  uint64_t v0;

}

id BaseAccountFeedItemView.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for BaseAccountFeedItemView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x88), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x90), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

id sub_1BC46D888@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1BC46C678();
  *a1 = result;
  return result;
}

void sub_1BC46D8B0(id *a1)
{
  sub_1BC46C6E8((uint64_t)*a1);
}

uint64_t sub_1BC46D8D8()
{
  return 16;
}

__n128 sub_1BC46D8E4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BC46D8F0()
{
  return swift_initClassMetadata2();
}

void sub_1BC46D954(uint64_t a1)
{

}

uint64_t method lookup function for BaseAccountFeedItemView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BaseAccountFeedItemView.contentView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of static BaseAccountFeedItemView.makeContentView()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of static BaseAccountFeedItemView.shouldLayoutAccountHeaderAndSeparator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of BaseAccountFeedItemView.apply(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

id MedicationDosageFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1BC46DA64(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;

  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    v7 = swift_bridgeObjectRetain();
    v2 = (uint64_t)sub_1BC3D6978(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v8 = v2;
  sub_1BC44A7EC((uint64_t *)&v8);
  v3 = v8;
  v4 = v1;
  swift_bridgeObjectRetain();
  v5 = sub_1BC44BBBC(v3);
  swift_release();

  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BC46DB20(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;

  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    v7 = swift_bridgeObjectRetain();
    v2 = (uint64_t)sub_1BC3D6978(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v8 = v2;
  sub_1BC44A7EC((uint64_t *)&v8);
  v3 = v8;
  v4 = v1;
  swift_bridgeObjectRetain();
  v5 = sub_1BC46E170(v3);
  swift_release();

  swift_bridgeObjectRelease();
  return v5;
}

id MedicationDosageFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store);
}

uint64_t MedicationDosageFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context);
}

id MedicationDosageFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MedicationDosageFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1BC46DC40(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v6;

  sub_1BC39CBE4();
  v2 = sub_1BC46DCC0(a1);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = v2;
  sub_1BC34D844();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(v4 + 32) = v3;
  v6 = v4;
  sub_1BC62C890();
  return v6;
}

id sub_1BC46DCC0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  id v26;
  uint64_t v28;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - v3;
  v5 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC6395A0;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v7 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v8 = sub_1BC62A4A8();
  v10 = v9;
  swift_bridgeObjectRelease();

  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1BC3644C0();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v10;
  v13 = objc_msgSend(a1, sel_hr_dosageTimePeriodString);
  v14 = sub_1BC62C680();
  v16 = v15;

  *(_QWORD *)(v6 + 96) = v11;
  *(_QWORD *)(v6 + 104) = v12;
  *(_QWORD *)(v6 + 72) = v14;
  *(_QWORD *)(v6 + 80) = v16;
  v17 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v4);
  v18 = objc_msgSend(a1, sel_instruction);
  if (!v18)
    goto LABEL_8;
  v19 = v18;
  v20 = sub_1BC62C680();
  v22 = v21;

  v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v23 = v20 & 0xFFFFFFFFFFFFLL;
  if (!v23)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    v24 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v20 = sub_1BC62A4A8();
    v22 = v25;
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRetain();
  v26 = sub_1BC4AB450(v20, v22);

  swift_bridgeObjectRelease_n();
  return v26;
}

id MedicationDosageFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicationDosageFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationDosageFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDosageFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC46E0D8()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store);
}

uint64_t sub_1BC46E0EC()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context);
}

id sub_1BC46E100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for MedicationDosageFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1BC46E170(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      sub_1BC39CBE4();
      for (i = 4; ; ++i)
      {
        v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v6 = (id)MEMORY[0x1BCCF24CC](i - 4, a1);
          v7 = i - 3;
          if (__OFADD__(v5, 1))
            goto LABEL_14;
        }
        else
        {
          v6 = *(id *)(a1 + 8 * i);
          v7 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        v8 = v6;
        v9 = sub_1BC46DCC0(v8);
        if (v9)
        {
          v10 = v9;
          sub_1BC34D844();
          v11 = swift_allocObject();
          *(_OWORD *)(v11 + 16) = xmmword_1BC6396B0;
          *(_QWORD *)(v11 + 32) = v10;
          v13 = v11;
          sub_1BC62C890();
          v4 = v13;

        }
        else
        {

          v4 = MEMORY[0x1E0DEE9D8];
        }
        sub_1BC3BB208(v4);
        if (v7 == v2)
        {
          swift_bridgeObjectRelease();
          return v14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t type metadata accessor for MedicationDosageFormatter()
{
  return objc_opt_self();
}

unint64_t sub_1BC46E31C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC46E340();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC46E340()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF431540;
  if (!qword_1EF431540)
  {
    v1 = type metadata accessor for MedicationDosageFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF431540);
  }
  return result;
}

uint64_t method lookup function for MedicationDosageFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationDosageFormatter.structuredItems(from:country:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicationDosageFormatter.displayItems(from:country:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicationDosageFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BC46E3EC(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v2)
      break;
    v8 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1BCCF24CC](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = objc_msgSend(v5, sel_mainRecord);

      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      if (v2 == v4)
        return v8;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t SignedClinicalDataImporter.__allocating_init(healthStore:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_cachedSource) = 0;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EF58]), sel_initWithHealthStore_, a1);
  sub_1BC46E620(a2, v4 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data);
  return v4;
}

uint64_t SignedClinicalDataImporter.init(healthStore:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_cachedSource) = 0;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EF58]), sel_initWithHealthStore_, a1);
  sub_1BC46E620(a2, v2 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data);
  return v2;
}

uint64_t sub_1BC46E620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SignedClinicalDataImporter.DataType(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF4316A8);
}

id sub_1BC46E678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  void (*v24)(char *, char *, void *);
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  void *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  char *v43;
  char *v44;
  void *v45;
  char *v46;
  uint64_t v47;

  v1 = sub_1BC62A760();
  MEMORY[0x1E0C80A78](v1);
  v46 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B258, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - v4;
  v6 = sub_1BC62A604();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v39 - v14;
  v16 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_cachedSource);
  if (!v19)
  {
    v40 = OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_cachedSource;
    v41 = 0;
    v42 = v12;
    v43 = v5;
    v44 = v15;
    v45 = (void *)v6;
    v22 = (uint64_t)v46;
    sub_1BC46F190(v0 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data, (uint64_t)v18);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v24 = *(void (**)(char *, char *, void *))(v7 + 32);
    if (EnumCaseMultiPayload == 1)
    {
      v25 = v0;
      v20 = v45;
      v24(v9, v18, v45);
      sub_1BC34B6A0(0, &qword_1EF4316E8);
      sub_1BC62A574();
      v26 = v47;
      v27 = sub_1BC46EBD8();
      if (v26)
      {
        swift_willThrow();
        v28 = v9;
LABEL_11:
        (*(void (**)(char *, id))(v7 + 8))(v28, v20);
        return v20;
      }
      v36 = v27;
      (*(void (**)(char *, id))(v7 + 8))(v9, v20);
      v37 = *(void **)(v0 + v40);
      *(_QWORD *)(v25 + v40) = v36;
      v20 = v36;

    }
    else
    {
      v28 = v44;
      v29 = v45;
      v24(v44, v18, v45);
      v30 = sub_1BC62A5C8();
      sub_1BC34B6A0(0, &qword_1EF4316F0);
      v31 = (uint64_t)v42;
      (*(void (**)(char *, char *, void *))(v7 + 16))(v42, v28, v29);
      v32 = (uint64_t)v43;
      (*(void (**)(char *, uint64_t, uint64_t, void *))(v7 + 56))(v43, 1, 1, v29);
      sub_1BC62A754();
      v33 = v47;
      v34 = sub_1BC46E9E8(v31, v32, v22, 0, 0);
      if (v33)
      {
        if ((v30 & 1) != 0)
          sub_1BC62A5B0();
        v20 = v45;
        goto LABEL_11;
      }
      v38 = v34;
      v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EF50]), sel_initWithFile_type_, v34, 1);

      if ((v30 & 1) != 0)
        sub_1BC62A5B0();
      (*(void (**)(char *, void *))(v7 + 8))(v28, v45);
    }
    v19 = v41;
    goto LABEL_3;
  }
  v20 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_cachedSource);
LABEL_3:
  v21 = v19;
  return v20;
}

id sub_1BC46E9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  id v17;
  id v18;
  uint64_t v19;
  id v23[2];

  v23[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = (void *)sub_1BC62A598();
  v8 = sub_1BC62A604();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8) != 1)
  {
    v10 = (void *)sub_1BC62A598();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  }
  v11 = (void *)sub_1BC62A700();
  if (a5)
  {
    v12 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v23[0] = 0;
  v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_signedClinicalDataFileWithURL_sourceURL_receivedDate_countryOfOrigin_error_, v7, v10, v11, v12, v23);

  v14 = v23[0];
  if (v13)
  {
    v15 = sub_1BC62A760();
    v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
    v17 = v14;
    v16(a3, v15);
  }
  else
  {
    v18 = v23[0];
    sub_1BC62A55C();

    swift_willThrow();
    v19 = sub_1BC62A760();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a3, v19);
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v13;
}

id sub_1BC46EBD8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v5[0] = 0;
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sourceWithQRCodeValue_error_, v0, v5);

  if (v1)
  {
    v2 = v5[0];
  }
  else
  {
    v3 = v5[0];
    sub_1BC62A55C();

    swift_willThrow();
  }
  return v1;
}

void SignedClinicalDataImporter.parseRecords(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  void *v16;
  unsigned int v17;
  char v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _BYTE v27[4];
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v3 = v2;
  v29 = a1;
  v28 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v27[-v7];
  v9 = sub_1BC62A604();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC46F190(v3 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v15, v9);
    v16 = (void *)sub_1BC62A598();
    v17 = objc_msgSend(v16, sel_hk_isRewrittenEUDigitalCOVIDCertificateQRCodeURL);

    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    if (v17)
      v18 = 2;
    else
      v18 = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
    v18 = 0;
  }
  v19 = sub_1BC46E678();
  sub_1BC62BAF8();
  v20 = sub_1BC62BB28();
  v21 = sub_1BC62CADC();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1BC30A000, v20, v21, "SignedClinicalDataImporter: parsing SCD records", v22, 2u);
    MEMORY[0x1BCCF36A8](v22, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v28);
  v23 = *(void **)(v3 + 24);
  v24 = swift_allocObject();
  v25 = v29;
  *(_QWORD *)(v24 + 16) = v3;
  *(_QWORD *)(v24 + 24) = v25;
  *(_QWORD *)(v24 + 32) = a2;
  *(_BYTE *)(v24 + 40) = v18;
  aBlock[4] = sub_1BC470FFC;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC46FB0C;
  aBlock[3] = &block_descriptor_31;
  v26 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v23, sel_parseSignedClinicalData_options_completion_, v19, 1, v26);

  _Block_release(v26);
}

uint64_t sub_1BC46F190(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC46F1D4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  _BYTE v23[4];
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v24 = a6;
  v11 = sub_1BC62C47C();
  v27 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1BC62C4AC();
  v25 = *(_QWORD *)(v14 - 8);
  v26 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v17 = (void *)sub_1BC62CC74();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  *(_QWORD *)(v18 + 32) = a3;
  *(_QWORD *)(v18 + 40) = a4;
  *(_QWORD *)(v18 + 48) = a5;
  *(_BYTE *)(v18 + 56) = v24;
  aBlock[4] = sub_1BC472194;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_44;
  v19 = _Block_copy(aBlock);
  v20 = a1;
  v21 = a2;
  swift_retain();
  swift_retain();
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC36457C();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v16, v13, v19);
  _Block_release(v19);

  (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v13, v11);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v25 + 8))(v16, v26);
}

void sub_1BC46F404(void *a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t *v29;
  id v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  _QWORD v41[4];
  void (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v42 = a4;
  v43 = sub_1BC62BB34();
  v11 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v41 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v41 - v16;
  if (a1)
  {
    v18 = a1;
    sub_1BC62BAF8();
    v19 = sub_1BC62BB28();
    v20 = sub_1BC62CADC();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1BC30A000, v19, v20, "SignedClinicalDataImporter: parsing SCD records completed", v21, 2u);
      MEMORY[0x1BCCF36A8](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v43);
    v22 = objc_msgSend(v18, sel_items);
    sub_1BC34B6A0(0, &qword_1EF4316E0);
    v23 = sub_1BC62C878();

    v24 = sub_1BC46E3EC(v23);
    swift_bridgeObjectRelease();
    v25 = objc_allocWithZone((Class)type metadata accessor for SignedClinicalDataPreviewViewController());
    swift_retain();
    v27 = SignedClinicalDataPreviewViewController.init(records:importer:)(v24, a3);
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v27);
    objc_msgSend(v28, sel_setModalPresentationStyle_, 2);
    if (qword_1ED6A3198 != -1)
      swift_once();
    LOBYTE(v45) = a6;
    *(_WORD *)((char *)&v45 + 1) = 0;
    v29 = &v45;
    AnalyticsManager.postSignedClinicalDataImportEvent(_:)((HealthRecordsUI::SignedClinicalDataImportEvent)v29);
    ((void (*)(id))v42)(v28);

  }
  else
  {
    if (a2)
      v26 = a2;
    else
      v26 = objc_msgSend((id)objc_opt_self(), sel_hk_error_userInfo_, 0, 0);
    v30 = a2;
    sub_1BC62BAF8();
    v31 = v26;
    v32 = v26;
    v33 = sub_1BC62BB28();
    v34 = sub_1BC62CAC4();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v41[3] = a5;
      v37 = v36;
      v45 = v36;
      *(_DWORD *)v35 = 136315138;
      v41[2] = v35 + 4;
      swift_getErrorValue();
      v38 = sub_1BC62D610();
      v44 = sub_1BC4991F0(v38, v39, &v45);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v33, v34, "SignedClinicalDataImporter: failed to parse SCD, error: %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v37, -1, -1);
      MEMORY[0x1BCCF36A8](v35, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v43);
    v40 = sub_1BC470E14(a2, 0, 0);
    v42();

  }
}

void sub_1BC46FB0C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void SignedClinicalDataImporter.parseAndVerifyRecords(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)aBlock - v9 + 16;
  v11 = sub_1BC46E678();
  sub_1BC62BAF8();
  v12 = sub_1BC62BB28();
  v13 = sub_1BC62CADC();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1BC30A000, v12, v13, "SignedClinicalDataImporter: parsing & verifying SCD records", v14, 2u);
    MEMORY[0x1BCCF36A8](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v15 = *(void **)(v3 + 24);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  aBlock[4] = sub_1BC471048;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC46FB0C;
  aBlock[3] = &block_descriptor_6_2;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_parseSignedClinicalData_options_completion_, v11, 0, v17);

  _Block_release(v17);
}

uint64_t sub_1BC46FEF0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v8 = sub_1BC62C47C();
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC62C4AC();
  v11 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v14 = (void *)sub_1BC62CC74();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a3;
  v15[4] = a4;
  v15[5] = a2;
  aBlock[4] = sub_1BC47214C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_38;
  v16 = _Block_copy(aBlock);
  v17 = a1;
  swift_retain();
  v18 = a2;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC36457C();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v20);
}

uint64_t sub_1BC470104(void *a1, void (*a2)(uint64_t), uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  id v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD v39[2];
  uint64_t v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;

  v7 = sub_1BC62BB34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v39 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v39 - v15;
  if (a1)
  {
    v17 = a1;
    sub_1BC62BAF8();
    v18 = sub_1BC62BB28();
    v19 = sub_1BC62CADC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1BC30A000, v18, v19, "SignedClinicalDataImporter: parsing & verifying SCD records completed", v20, 2u);
      MEMORY[0x1BCCF36A8](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    v21 = objc_msgSend(v17, sel_items);
    sub_1BC34B6A0(0, &qword_1EF4316E0);
    v22 = sub_1BC62C878();

    v23 = sub_1BC46E3EC(v22);
    swift_bridgeObjectRelease();
    a2(v23);

    return swift_bridgeObjectRelease();
  }
  else
  {
    if (a4)
    {
      v25 = a4;
      sub_1BC62BAF8();
      v26 = a4;
      v27 = a4;
      v28 = sub_1BC62BB28();
      v29 = sub_1BC62CAC4();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v41 = a2;
        v31 = (uint8_t *)v30;
        v40 = swift_slowAlloc();
        v43 = v40;
        *(_DWORD *)v31 = 136315138;
        v39[1] = v31 + 4;
        swift_getErrorValue();
        v32 = sub_1BC62D610();
        v42 = sub_1BC4991F0(v32, v33, &v43);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC30A000, v28, v29, "SignedClinicalDataImporter: failed to parse & verify SCD, error: %s", v31, 0xCu);
        v34 = v40;
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v34, -1, -1);
        v35 = v31;
        a2 = v41;
        MEMORY[0x1BCCF36A8](v35, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      sub_1BC62BAF8();
      v36 = sub_1BC62BB28();
      v37 = sub_1BC62CAC4();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_1BC30A000, v36, v37, "SignedClinicalDataImporter: failed to parse & verify SCD, no error returned", v38, 2u);
        MEMORY[0x1BCCF36A8](v38, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
    return ((uint64_t (*)(_QWORD))a2)(0);
  }
}

void SignedClinicalDataImporter.storeRecords(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  void *v16;
  unsigned int v17;
  char v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  _BYTE v26[4];
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v3 = v2;
  v28 = a1;
  v27 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v26[-v7];
  v9 = sub_1BC62A604();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC46F190(v3 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v15, v9);
    v16 = (void *)sub_1BC62A598();
    v17 = objc_msgSend(v16, sel_hk_isRewrittenEUDigitalCOVIDCertificateQRCodeURL);

    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    if (v17)
      v18 = 2;
    else
      v18 = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
    v18 = 0;
  }
  v19 = sub_1BC46E678();
  sub_1BC62BAF8();
  v20 = sub_1BC62BB28();
  v21 = sub_1BC62CADC();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1BC30A000, v20, v21, "SignedClinicalDataImporter: storing SCD records", v22, 2u);
    MEMORY[0x1BCCF36A8](v22, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v27);
  v23 = *(void **)(v3 + 24);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v3;
  *(_BYTE *)(v24 + 24) = v18;
  *(_QWORD *)(v24 + 32) = v28;
  *(_QWORD *)(v24 + 40) = a2;
  aBlock[4] = sub_1BC471054;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC46FB0C;
  aBlock[3] = &block_descriptor_12_2;
  v25 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v23, sel_storeSignedClinicalData_completion_, v19, v25);

  _Block_release(v25);
}

void sub_1BC4709BC(void *a1, void *a2, uint64_t a3, char a4, void (*a5)(uint64_t, uint64_t, _QWORD), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v11 = sub_1BC62BB34();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    LOBYTE(v31) = a4;
    v15 = a1;
    sub_1BC471E24(v15, a2, (char *)&v31, a5, a6);

  }
  else
  {
    sub_1BC62BAF8();
    v16 = a2;
    v17 = a2;
    v18 = sub_1BC62BB28();
    v19 = sub_1BC62CAC4();
    if (os_log_type_enabled(v18, v19))
    {
      v28 = a5;
      v20 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v31 = v27;
      *(_DWORD *)v20 = 136315138;
      v29 = a6;
      if (a2)
      {
        swift_getErrorValue();
        v21 = sub_1BC62D610();
        v23 = v22;
      }
      else
      {
        v23 = 0xE500000000000000;
        v21 = 0x7D6C696E7BLL;
      }
      v30 = sub_1BC4991F0(v21, v23, &v31);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v18, v19, "SignedClinicalDataImporter: failed to store SCD, error: %s", v20, 0xCu);
      v24 = v27;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v24, -1, -1);
      MEMORY[0x1BCCF36A8](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      a5 = v28;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    if (qword_1ED6A3198 != -1)
      swift_once();
    LOBYTE(v31) = a4;
    *(_WORD *)((char *)&v31 + 1) = 257;
    v25 = &v31;
    AnalyticsManager.postSignedClinicalDataImportEvent(_:)((HealthRecordsUI::SignedClinicalDataImportEvent)v25);
    a5(0, 0, a2);
  }
}

BOOL sub_1BC470C5C(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v5, v6, a1, v3);
  v7 = sub_1BC62D550();
  if (v7)
  {
    v8 = (void *)v7;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  }
  else
  {
    v8 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v9, v5, a1);
  }
  v10 = (void *)sub_1BC62A550();

  if (objc_msgSend(v10, sel_hk_isHealthKitError))
  {
    v11 = objc_msgSend(v10, sel_code);

    return v11 == (id)115;
  }
  else
  {

    return 0;
  }
}

uint64_t SignedClinicalDataImporter.deinit()
{
  uint64_t v0;

  sub_1BC471064(v0 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data);
  return v0;
}

uint64_t SignedClinicalDataImporter.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BC471064(v0 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data);
  return swift_deallocClassInstance();
}

id sub_1BC470E14(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  if (qword_1EF428588 != -1)
    swift_once();
  v5 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  if (!a3)
  {
    v6 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (a1)
    a1 = (void *)sub_1BC62A550();
  v9 = objc_msgSend((id)objc_opt_self(), sel_basicAlertControllerWithTitle_message_internalError_, v7, v8, a1, 0xE000000000000000);

  return v9;
}

uint64_t sub_1BC470FF4()
{
  return objectdestroyTm_5();
}

uint64_t sub_1BC470FFC(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1BC46F1D4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40));
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t sub_1BC471024()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC471048(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1BC46FEF0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1BC471054(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC4709BC(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), *(void (**)(uint64_t, uint64_t, _QWORD))(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BC471064(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC4710A0()
{
  return type metadata accessor for SignedClinicalDataImporter(0);
}

uint64_t type metadata accessor for SignedClinicalDataImporter(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF431598);
}

uint64_t sub_1BC4710BC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SignedClinicalDataImporter.DataType(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SignedClinicalDataImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SignedClinicalDataImporter.__allocating_init(healthStore:data:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t *initializeBufferWithCopyOfBuffer for SignedClinicalDataImporter.DataType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v6 = sub_1BC62A604();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SignedClinicalDataImporter.DataType(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62A604();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for SignedClinicalDataImporter.DataType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_1BC62A604();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for SignedClinicalDataImporter.DataType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1BC471064(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_1BC62A604();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for SignedClinicalDataImporter.DataType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_1BC62A604();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for SignedClinicalDataImporter.DataType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1BC471064(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_1BC62A604();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BC471424()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A604();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BC471488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint8_t *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  _QWORD aBlock[6];

  v8 = sub_1BC62BB34();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)aBlock - v11 + 16;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  swift_retain();
  swift_retain();
  v14 = sub_1BC46E678();
  sub_1BC62BAF8();
  v15 = sub_1BC62BB28();
  v16 = sub_1BC62CADC();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = v8;
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1BC30A000, v15, v16, "SignedClinicalDataImporter: parsing & verifying SCD records", v18, 2u);
    v19 = v18;
    v8 = v17;
    MEMORY[0x1BCCF36A8](v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v20 = *(void **)(a1 + 24);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1BC471E18;
  *(_QWORD *)(v21 + 24) = v13;
  aBlock[4] = sub_1BC4721E0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC46FB0C;
  aBlock[3] = &block_descriptor_32;
  v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_parseSignedClinicalData_options_completion_, v14, 0, v22);

  _Block_release(v22);
  return swift_release();
}

uint64_t sub_1BC471850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  int EnumCaseMultiPayload;
  void *v24;
  unsigned int v25;
  char v26;
  void (*v27)(char *, uint64_t);
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  _QWORD v36[5];
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v8 = sub_1BC62BB34();
  v9 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  v38 = v9;
  MEMORY[0x1E0C80A78](v8);
  v36[2] = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v36 - v12;
  v14 = sub_1BC62A604();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a2;
  v21[3] = a3;
  v36[3] = a3;
  v22 = v21;
  v21[4] = a4;
  sub_1BC46F190(a1 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data, (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v36[4] = a4;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
    swift_retain();
    swift_retain();
    v24 = (void *)sub_1BC62A598();
    v25 = objc_msgSend(v24, sel_hk_isRewrittenEUDigitalCOVIDCertificateQRCodeURL);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (v25)
      v26 = 2;
    else
      v26 = 1;
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t))(v15 + 8);
    swift_retain();
    swift_retain();
    v27(v20, v14);
    v26 = 0;
  }
  v28 = sub_1BC46E678();
  sub_1BC62BAF8();
  v29 = sub_1BC62BB28();
  v30 = sub_1BC62CADC();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1BC30A000, v29, v30, "SignedClinicalDataImporter: storing SCD records", v31, 2u);
    MEMORY[0x1BCCF36A8](v31, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v37);
  v32 = *(void **)(a1 + 24);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = a1;
  *(_BYTE *)(v33 + 24) = v26;
  *(_QWORD *)(v33 + 32) = sub_1BC471D9C;
  *(_QWORD *)(v33 + 40) = v22;
  aBlock[4] = sub_1BC4721C4;
  aBlock[5] = v33;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC46FB0C;
  aBlock[3] = &block_descriptor_22_0;
  v34 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v32, sel_storeSignedClinicalData_completion_, v28, v34);

  _Block_release(v34);
  return swift_release();
}

uint64_t sub_1BC471D94()
{
  return objectdestroyTm_5();
}

void sub_1BC471D9C(uint64_t a1, int a2, void *a3)
{
  uint64_t v3;

  sub_1BC4F0130(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(_QWORD, _QWORD))(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t objectdestroy_8Tm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC471DD8()
{
  return objectdestroyTm_5();
}

uint64_t objectdestroyTm_5()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC471E18(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC4EF5B4(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

void sub_1BC471E24(void *a1, void *a2, char *a3, void (*a4)(uint64_t, uint64_t, _QWORD), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  char *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD v30[3];
  char v31;
  __int16 v32;

  v10 = sub_1BC62BB34();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v30 - v15;
  v17 = *a3;
  if (qword_1ED6A3198 != -1)
    swift_once();
  v31 = v17;
  v32 = 1;
  v18 = &v31;
  AnalyticsManager.postSignedClinicalDataImportEvent(_:)((HealthRecordsUI::SignedClinicalDataImportEvent)v18);
  v19 = objc_msgSend(a1, sel_items);
  sub_1BC34B6A0(0, &qword_1EF4316E0);
  v20 = sub_1BC62C878();

  v21 = sub_1BC46E3EC(v20);
  swift_bridgeObjectRelease();
  if (a2)
  {
    v30[0] = a5;
    swift_getErrorValue();
    v22 = v30[2];
    v23 = a2;
    if (sub_1BC470C5C(v22))
    {
      sub_1BC62BAF8();
      v24 = sub_1BC62BB28();
      v25 = sub_1BC62CADC();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_1BC30A000, v24, v25, "SignedClinicalDataImporter: storing SCD records completed (all records were duplicates)", v26, 2u);
        MEMORY[0x1BCCF36A8](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      a4(v21, 1, 0);
      swift_bridgeObjectRelease();

      return;
    }

  }
  sub_1BC62BAF8();
  v27 = sub_1BC62BB28();
  v28 = sub_1BC62CADC();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    _os_log_impl(&dword_1BC30A000, v27, v28, "SignedClinicalDataImporter: storing SCD records completed", v29, 2u);
    MEMORY[0x1BCCF36A8](v29, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  a4(v21, 0, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_1BC472118()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC47214C()
{
  uint64_t v0;

  return sub_1BC470104(*(void **)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1BC472158()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC472194()
{
  uint64_t v0;

  sub_1BC46F404(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(void))(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
}

uint64_t sub_1BC4721E4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC472254();
  return sub_1BC37AE60((uint64_t)v5);
}

uint64_t sub_1BC472254()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  void (*v19)(uint64_t *, _QWORD);
  void *v20;
  id v21;
  void (*v22)(uint64_t *, _QWORD);
  uint64_t v23;
  uint64_t *boxed_opaque_existential_1;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41[3];
  uint64_t v42;
  uint64_t v43;

  v1 = v0;
  v39 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1EF42C0C8, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - v6;
  v8 = sub_1BC62BC78();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62BD98();
  v38 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v15, (uint64_t)v41);
  if (!v42)
  {
    sub_1BC37AE60((uint64_t)v41);
    goto LABEL_12;
  }
  v37 = v12;
  sub_1BC37AE0C();
  type metadata accessor for TextItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    sub_1BC62BAF8();
    v29 = v1;
    v30 = sub_1BC62BB28();
    v31 = sub_1BC62CAC4();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v40 = (_QWORD *)v33;
      *(_DWORD *)v32 = 136446210;
      sub_1BC37ADB0(v15, (uint64_t)v41);
      sub_1BC384E68(0, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
      v34 = sub_1BC62C6F8();
      v41[0] = sub_1BC4991F0(v34, v35, (uint64_t *)&v40);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v30, v31, "Incorrect view model for TextItemCell: %{public}s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v33, -1, -1);
      MEMORY[0x1BCCF36A8](v32, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v39);
  }
  v16 = v40;
  MEMORY[0x1BCCF201C]();
  swift_bridgeObjectRetain();
  sub_1BC62BD74();
  v17 = (void *)v16[4];
  if (v17)
  {
    v18 = v17;
    v19 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCC0();
    v19(v41, 0);

  }
  v20 = (void *)v16[5];
  if (v20)
  {
    v21 = v20;
    v22 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCCC();
    v22(v41, 0);

  }
  v23 = v37;
  v42 = v37;
  v43 = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v41);
  (*(void (**)(uint64_t *, char *, uint64_t))(v38 + 16))(boxed_opaque_existential_1, v14, v23);
  MEMORY[0x1BCCF1FC8](v41);
  v25 = (void *)v16[6];
  if (v25)
  {
    v26 = v25;
    sub_1BC62BC48();
    v27 = v26;
    sub_1BC62BC3C();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    MEMORY[0x1BCCF1FE0](v7);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  swift_bridgeObjectRetain();
  sub_1BC62CD40();
  if (v16[9])
  {
    swift_bridgeObjectRetain();
    v28 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v28);
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v14, v23);
}

uint64_t sub_1BC472720@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC472770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC472254();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC4727DC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC472824;
}

uint64_t sub_1BC472824(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC472254();
  return result;
}

id TextItemCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id TextItemCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  objc_super v12;

  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item];
  v10 = (objc_class *)type metadata accessor for TextItemCell();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v12.receiver = v4;
  v12.super_class = v10;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

uint64_t type metadata accessor for TextItemCell()
{
  return objc_opt_self();
}

id TextItemCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TextItemCell.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  objc_class *v4;
  id v5;
  objc_super v7;

  v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item];
  v4 = (objc_class *)type metadata accessor for TextItemCell();
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  v7.receiver = v1;
  v7.super_class = v4;
  v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id TextItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC472B18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t method lookup function for TextItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TextItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of TextItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of TextItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t sub_1BC472BD0(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  _BYTE v5[24];
  uint64_t v6;

  v3 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC37ADB0(v3, (uint64_t)v5);
  if (v6)
  {
    sub_1BC37AE0C();
    type metadata accessor for AccountUpgradeItem(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_release();
      objc_msgSend(v1, sel_setNeedsUpdateConfiguration);
    }
  }
  else
  {
    sub_1BC384EB4((uint64_t)v5, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  }
  return sub_1BC384EB4(a1, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
}

void (*sub_1BC472CC0(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_item;
  v3[6] = v1;
  v3[7] = v4;
  swift_beginAccess();
  return sub_1BC472D18;
}

void sub_1BC472D18(_QWORD **a1, char a2)
{
  _QWORD *v3;
  void *v4;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1BC37ADB0(v3[6] + v3[7], (uint64_t)v3);
    if (v3[3])
    {
      sub_1BC37AE0C();
      type metadata accessor for AccountUpgradeItem(0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v4 = (void *)v3[6];
        swift_release();
        objc_msgSend(v4, sel_setNeedsUpdateConfiguration);
      }
    }
    else
    {
      sub_1BC384EB4((uint64_t)v3, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    }
  }
  free(v3);
}

uint64_t sub_1BC472E6C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for AccountUpgradeCell();
  v1 = objc_msgSendSuper2(&v12, sel__bridgedConfigurationState);
  sub_1BC62BC0C();

  v2 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v2, (uint64_t)&v9);
  if (*((_QWORD *)&v10 + 1))
  {
    sub_1BC37AE0C();
    type metadata accessor for AccountUpgradeItem(0);
    if (swift_dynamicCast())
    {
      v3 = v8;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BC384EB4((uint64_t)&v9, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  }
  v3 = 0;
LABEL_6:
  if (qword_1EF4285F0 != -1)
    swift_once();
  v4 = (void *)qword_1EF431728;
  if (v3)
  {
    type metadata accessor for AccountUpgradeItem(0);
    sub_1BC473B8C();
    v5 = v4;
    swift_retain();
    sub_1BC62D184();
  }
  else
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
    v6 = (id)qword_1EF431728;
  }
  sub_1BC62BC30();
  return swift_release();
}

void sub_1BC472FF0()
{
  void *v0;
  uint64_t v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_hasSetUpViews;
  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_hasSetUpViews) & 1) == 0)
  {
    v2 = (char *)objc_allocWithZone((Class)type metadata accessor for AccountUpgradeTileView());
    v3 = v0;
    v4 = sub_1BC473A9C((uint64_t)v3, v2);
    v5 = objc_msgSend(v3, sel_contentView);
    objc_msgSend(v5, sel_addSubview_, v4);

    v6 = objc_msgSend(v3, sel_contentView);
    v7 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
    objc_msgSend(v6, sel_setBackgroundColor_, v7);

    objc_msgSend(v4, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48C8]);
    v8 = objc_msgSend(v3, sel_contentView);
    objc_msgSend(v4, sel_hk_alignConstraintsWithView_, v8);

    *((_BYTE *)v0 + v1) = 1;
  }
}

id sub_1BC4732FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountUpgradeCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AccountUpgradeCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC47337C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

void (*sub_1BC4733D0(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC472CC0(v2);
  return sub_1BC383B18;
}

uint64_t sub_1BC473414()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_disableAction);
}

uint64_t sub_1BC473428()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_hideDismiss);
}

uint64_t sub_1BC47343C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1BC62A7B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1BC473478()
{
  uint64_t result;

  result = sub_1BC62C650();
  qword_1EF431728 = result;
  return result;
}

id sub_1BC4734AC(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  uint64_t v21[3];
  uint64_t v22;
  objc_super v23;
  _QWORD v24[5];

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v21 - v5 + 16;
  v7 = sub_1BC62A7B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v11 = type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell();
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon] = 1;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___iconView] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel] = 0;
  v24[3] = v11;
  v24[4] = &off_1E74DABC8;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator] = 0;
  v24[0] = a1;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___actionButton] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___dismissButton] = 0;
  sub_1BC34E674((uint64_t)v24, (uint64_t)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider]);
  v12 = (objc_class *)type metadata accessor for AccountUpgradeTileView();
  v23.receiver = a2;
  v23.super_class = v12;
  v13 = objc_msgSendSuper2(&v23, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BC406170();
  v14 = a1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v14, (uint64_t)v21);
  if (v22)
  {
    sub_1BC37AE0C();
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v15 = *(_QWORD *)(v20 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        v16 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v16 > 1)
      {

        goto LABEL_13;
      }
    }
  }
  else
  {
    sub_1BC384EB4((uint64_t)v21, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
  }
  sub_1BC4403CC((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {

    sub_1BC384EB4((uint64_t)v6, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (qword_1ED6A31F0 != -1)
      swift_once();
    v17 = qword_1ED6A4498;
    v21[1] = 0;
    v21[2] = 0;
    v21[0] = 1;
    LOBYTE(v22) = 1;
    v18 = v13;
    sub_1BC514C4C((uint64_t)v10, v21, v17, v18);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
LABEL_13:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
  return v13;
}

id sub_1BC4737EC(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v20[3];
  char v21;
  objc_super v22;
  _QWORD v23[5];

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20[-1] - v5;
  v7 = sub_1BC62A7B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AccountUpgradeTileCell();
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon] = 1;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___iconView] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel] = 0;
  v23[3] = v11;
  v23[4] = &off_1E74DBCD0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator] = 0;
  v23[0] = a1;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___actionButton] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___dismissButton] = 0;
  sub_1BC34E674((uint64_t)v23, (uint64_t)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider]);
  v12 = (objc_class *)type metadata accessor for AccountUpgradeTileView();
  v22.receiver = a2;
  v22.super_class = v12;
  v13 = objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BC406170();
  v14 = *(_QWORD *)(a1 + OBJC_IVAR___HRAccountUpgradeTileCell_accounts);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v15 >= 2)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
LABEL_3:

    goto LABEL_10;
  }
  sub_1BC463884((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {

    sub_1BC384EB4((uint64_t)v6, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (qword_1ED6A31F0 != -1)
      swift_once();
    v16 = qword_1ED6A4498;
    v20[1] = 0;
    v20[2] = 0;
    v20[0] = 1;
    v21 = 1;
    v17 = v13;
    sub_1BC514C4C((uint64_t)v10, v20, v16, v17);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
LABEL_10:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
  return v13;
}

id sub_1BC473A9C(uint64_t a1, char *a2)
{
  uint64_t v4;
  id v5;
  objc_super v7;
  _QWORD v8[5];

  v4 = type metadata accessor for AccountUpgradeCell();
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon] = 1;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___iconView] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel] = 0;
  v8[3] = v4;
  v8[4] = &off_1E74DC6E0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator] = 0;
  v8[0] = a1;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___actionButton] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___dismissButton] = 0;
  sub_1BC34E674((uint64_t)v8, (uint64_t)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider]);
  v7.receiver = a2;
  v7.super_class = (Class)type metadata accessor for AccountUpgradeTileView();
  v5 = objc_msgSendSuper2(&v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BC406170();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v5;
}

unint64_t sub_1BC473B8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF431778;
  if (!qword_1EF431778)
  {
    v1 = type metadata accessor for AccountUpgradeItem(255);
    result = MEMORY[0x1BCCF35C4](&unk_1BC639FDC, v1);
    atomic_store(result, (unint64_t *)&qword_1EF431778);
  }
  return result;
}

id sub_1BC473BD4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  double v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___titleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v7 = (void *)sub_1BC62CDDC();
    objc_msgSend(v5, sel_setFont_, v7);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    LODWORD(v8) = 1132068864;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v8);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BC473D40()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___disclosureImageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___disclosureImageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___disclosureImageView);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
    v6 = (void *)sub_1BC62CE54();
    objc_msgSend(v5, sel_setImage_, v6);

    v7 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
    objc_msgSend(v5, sel_setTintColor_, v7);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v8) = 1144750080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v8);
    LODWORD(v9) = 1148846080;
    objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 0, v9);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1BC473EC8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  unint64_t v12;
  void *v13;
  void *v14;
  objc_super v16;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___disclosureImageView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_margin] = 0x4030000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_topAndBottomDistance] = 0x4020000000000000;
  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item];
  v10 = (objc_class *)type metadata accessor for NavigationCell();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v16.receiver = v4;
  v16.super_class = v10;
  v11 = objc_msgSendSuper2(&v16, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC4741A0();
  sub_1BC474748(v11);
  v12 = sub_1BC474A04(v11);
  v13 = (void *)objc_opt_self();
  sub_1BC3BB0AC(v12);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v14 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_activateConstraints_, v14);

  return v11;
}

id sub_1BC47404C(void *a1)
{
  char *v1;
  char *v3;
  objc_class *v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___disclosureImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_margin] = 0x4030000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_topAndBottomDistance] = 0x4020000000000000;
  v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item];
  v4 = (objc_class *)type metadata accessor for NavigationCell();
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  v7.receiver = v1;
  v7.super_class = v4;
  v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

void sub_1BC4741A0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v2);

  v3 = objc_msgSend(v0, sel_contentView);
  v4 = objc_msgSend(v3, sel_heightAnchor);

  v5 = objc_msgSend(v4, sel_constraintGreaterThanOrEqualToConstant_, 60.0);
  LODWORD(v6) = 1148829696;
  objc_msgSend(v5, sel_setPriority_, v6);
  objc_msgSend(v5, sel_setActive_, 1);
  v7 = objc_msgSend(v0, sel_contentView);
  v8 = sub_1BC473BD4();
  objc_msgSend(v7, sel_addSubview_, v8);

  v9 = objc_msgSend(v0, sel_contentView);
  v10 = sub_1BC473D40();
  objc_msgSend(v9, sel_addSubview_, v10);

}

void sub_1BC474330(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for NavigationCell();
  objc_msgSendSuper2(&v7, sel_traitCollectionDidChange_, a1);
  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_legibilityWeight);

  if (!a1 || v4 != objc_msgSend(a1, sel_legibilityWeight))
  {
    v5 = sub_1BC473BD4();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v6 = (void *)sub_1BC62CDDC();
    objc_msgSend(v5, sel_setFont_, v6);

  }
}

void sub_1BC47448C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  v1 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v5, (uint64_t)v20);
  if (!v20[3])
  {
    sub_1BC37AE60((uint64_t)v20);
LABEL_6:
    sub_1BC62BAF8();
    v10 = v0;
    v11 = sub_1BC62BB28();
    v12 = sub_1BC62CAC4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v18 = v1;
      v14 = (uint8_t *)v13;
      v15 = swift_slowAlloc();
      v19 = v15;
      *(_DWORD *)v14 = 136446210;
      sub_1BC37ADB0(v5, (uint64_t)v20);
      sub_1BC384E68(0, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
      v16 = sub_1BC62C6F8();
      v20[0] = sub_1BC4991F0(v16, v17, &v19);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v11, v12, "Incorrect view model for NavigationCell: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v15, -1, -1);
      MEMORY[0x1BCCF36A8](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return;
  }
  sub_1BC37AE0C();
  type metadata accessor for NavigationItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  v6 = v19;
  v7 = sub_1BC473BD4();
  LOBYTE(v20[0]) = *(_BYTE *)(v6 + 32);
  LOBYTE(v19) = *(_BYTE *)(v6 + 33);
  sub_1BC475A74((uint64_t)v20);
  if (v8)
  {
    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v7, sel_setText_, v9);
  swift_release();

}

uint64_t sub_1BC474748(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  v2 = sub_1BC473BD4();
  v3 = objc_msgSend(v2, sel_leadingAnchor);

  v4 = objc_msgSend(a1, sel_contentView);
  v5 = objc_msgSend(v4, sel_leadingAnchor);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 16.0);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v7 = sub_1BC473BD4();
  v8 = objc_msgSend(v7, sel_topAnchor);

  v9 = objc_msgSend(a1, sel_contentView);
  v10 = objc_msgSend(v9, sel_topAnchor);

  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, 8.0);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v12 = sub_1BC473BD4();
  v13 = objc_msgSend(v12, sel_bottomAnchor);

  v14 = objc_msgSend(a1, sel_contentView);
  v15 = objc_msgSend(v14, sel_bottomAnchor);

  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, -8.0);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  return v18;
}

uint64_t sub_1BC474A04(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  v2 = sub_1BC473D40();
  v3 = objc_msgSend(v2, sel_leadingAnchor);

  v4 = sub_1BC473BD4();
  v5 = objc_msgSend(v4, sel_trailingAnchor);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 8.0);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v7 = sub_1BC473D40();
  v8 = objc_msgSend(v7, sel_trailingAnchor);

  v9 = objc_msgSend(a1, sel_contentView);
  v10 = objc_msgSend(v9, sel_trailingAnchor);

  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, -16.0);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v12 = sub_1BC473D40();
  v13 = objc_msgSend(v12, sel_centerYAnchor);

  v14 = objc_msgSend(a1, sel_contentView);
  v15 = objc_msgSend(v14, sel_centerYAnchor);

  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  return v18;
}

uint64_t sub_1BC474CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v6[6];

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = v0 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v3, (uint64_t)v6);
  if (!v6[3])
    return sub_1BC37AE60((uint64_t)v6);
  sub_1BC37AE0C();
  type metadata accessor for NavigationItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
    __asm { BR              X10 }
  return result;
}

id sub_1BC475734()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NavigationCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC4757CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC47581C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC47448C();
  return sub_1BC37AE60(a1);
}

void (*sub_1BC475888(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC4758D0;
}

void sub_1BC4758D0(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC47448C();
}

uint64_t sub_1BC475900(void *a1)
{
  id v2;
  _QWORD v4[4];

  v4[3] = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  v4[0] = a1;
  v2 = a1;
  sub_1BC474CBC();
  return sub_1BC39BD2C((uint64_t)v4);
}

void sub_1BC47596C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BC4759A4()
{
  uint64_t v0;

  sub_1BC62AB5C();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC475A08()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NavigationItem()
{
  return objc_opt_self();
}

void sub_1BC475A54()
{
  sub_1BC47596C();
}

void sub_1BC475A74(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC475AB0@<X0>(int a1@<W8>)
{
  id v1;
  uint64_t v2;

  if (a1 != 2)
    return 0;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_1BC475BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A52F0;
  if (!qword_1ED6A52F0)
  {
    v1 = sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A5990);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A52F0);
  }
  return result;
}

id SingleValueView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1BC475C70(double a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  double v30;
  void *v31;
  void *v32;
  id v33;
  unsigned __int8 *v35;
  int v36;
  uint64_t v37;
  _QWORD v38[4];
  _QWORD *v39;
  void *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  CGRect v48;

  v2 = v1;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  v4 = (void *)sub_1BC62CDDC();
  v5 = *MEMORY[0x1E0DC4B60];
  v6 = (void *)sub_1BC62CDDC();
  v43 = *MEMORY[0x1E0DC4B10];
  v7 = sub_1BC62CDDC();
  v8 = (void *)v7;
  if (!v1[10]
    || (swift_bridgeObjectRetain(),
        sub_1BC62C710(),
        v10 = v9,
        swift_bridgeObjectRelease(),
        v7 = swift_bridgeObjectRelease(),
        v11 = v4,
        !v10))
  {
    v12 = v1[8];
    v42 = v5;
    if (v12)
    {
      v13 = v1[7];
      v14 = v12;
    }
    else
    {
      v13 = 0;
      v14 = 0xE000000000000000;
    }
    v41 = &v39;
    v47 = 0;
    v15 = MEMORY[0x1E0C80A78](v7);
    v38[2] = &v47;
    if ((v14 & 0x1000000000000000) != 0 || !(v14 & 0x2000000000000000 | v13 & 0x1000000000000000))
    {
      sub_1BC477AE4(v2);
      swift_bridgeObjectRetain();
      sub_1BC62D1CC();
      swift_bridgeObjectRelease();
      sub_1BC477B58(v2);
      if ((v46 & 1) == 0)
        goto LABEL_17;
    }
    else
    {
      v39 = v38;
      v40 = v6;
      MEMORY[0x1E0C80A78](v15);
      if ((v14 & 0x2000000000000000) == 0)
      {
        if ((v13 & 0x1000000000000000) != 0)
        {
          v16 = (v14 & 0xFFFFFFFFFFFFFFFLL) + 32;
          v17 = v13 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          v16 = sub_1BC62D250();
          v17 = v37;
        }
        sub_1BC477AE4(v2);
        swift_bridgeObjectRetain();
        v18 = sub_1BC48105C(v16, v17, (void (*)(uint64_t *__return_ptr))sub_1BC477BCC);
        swift_bridgeObjectRelease();
        sub_1BC477B58(v2);
        v6 = v40;
        if ((v18 & 1) != 0)
          goto LABEL_12;
        goto LABEL_17;
      }
      v44 = v13;
      v45 = v14 & 0xFFFFFFFFFFFFFFLL;
      if (v13 <= 0x20u && ((1 << v13) & 0x100003E01) != 0)
      {
        sub_1BC477AE4(v2);
        swift_bridgeObjectRetain();
        v6 = v40;
LABEL_16:
        swift_bridgeObjectRelease();
        sub_1BC477B58(v2);
LABEL_17:
        v11 = v6;
        goto LABEL_18;
      }
      sub_1BC477AE4(v2);
      swift_bridgeObjectRetain();
      v35 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
      v6 = v40;
      if (!v35)
        goto LABEL_16;
      v36 = *v35;
      swift_bridgeObjectRelease();
      sub_1BC477B58(v2);
      if (v36)
        goto LABEL_17;
    }
LABEL_12:
    v11 = v4;
  }
LABEL_18:
  v19 = v11;
  v20 = sub_1BC34AB64(v19, v8);
  objc_msgSend(v20, sel_boundingRectWithSize_options_context_, 1, 0, a1, 1.79769313e308);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  objc_msgSend(v4, sel_lineHeight);
  v30 = v29;
  v48.origin.x = v22;
  v48.origin.y = v24;
  v48.size.width = v26;
  v48.size.height = v28;
  if (CGRectGetHeight(v48) - (v30 + v30) >= 2.22044605e-16)
  {
    v31 = (void *)sub_1BC62CDDC();
    v32 = (void *)sub_1BC62CDDC();
    v33 = sub_1BC34AB64(v31, v32);

    v8 = v32;
    v19 = v6;
    v6 = v4;
    v4 = v20;
    v20 = v33;
  }

  return v20;
}

double sub_1BC476118()
{
  double result;

  result = 8.0;
  unk_1EF459E70 = xmmword_1BC6404C0;
  unk_1EF459E80 = xmmword_1BC6404C0;
  return result;
}

uint64_t sub_1BC476130@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData;
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(void **)(v3 + 32);
  v9 = *(void **)(v3 + 40);
  v10 = *(void **)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_QWORD *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  v15 = *(_QWORD *)(v3 + 88);
  v16 = *(_BYTE *)(v3 + 100);
  v17 = *(_DWORD *)(v3 + 96);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v11;
  *(_QWORD *)(a2 + 64) = v12;
  *(_QWORD *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = v14;
  *(_QWORD *)(a2 + 88) = v15;
  *(_BYTE *)(a2 + 100) = v16;
  *(_DWORD *)(a2 + 96) = v17;
  return sub_1BC3EE064(v4, v5, v6, v7, v8, v9, v10);
}

void sub_1BC4761CC(uint64_t a1, _QWORD *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 16);
  v2 = *(void **)(a1 + 48);
  v11 = *(void **)(a1 + 40);
  v12 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_BYTE *)(a1 + 100);
  v8 = *(_DWORD *)(a1 + 96);
  v9 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData;
  v10 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  v22 = *(_QWORD *)(v9 + 8);
  v23 = *(_QWORD *)v9;
  v20 = *(_QWORD *)(v9 + 24);
  v21 = *(_QWORD *)(v9 + 16);
  v18 = *(void **)(v9 + 40);
  v19 = *(void **)(v9 + 32);
  v17 = *(void **)(v9 + 48);
  *(_QWORD *)v9 = v16;
  *(_QWORD *)(v9 + 8) = v15;
  *(_QWORD *)(v9 + 16) = v14;
  *(_QWORD *)(v9 + 24) = v13;
  *(_QWORD *)(v9 + 32) = v12;
  *(_QWORD *)(v9 + 40) = v11;
  *(_QWORD *)(v9 + 48) = v2;
  *(_QWORD *)(v9 + 56) = v4;
  *(_QWORD *)(v9 + 64) = v3;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v6;
  *(_QWORD *)(v9 + 88) = v10;
  *(_DWORD *)(v9 + 96) = v8;
  *(_BYTE *)(v9 + 100) = v7;
  sub_1BC3EE064(v16, v15, v14, v13, v12, v11, v2);
  sub_1BC3EDFF4(v23, v22, v21, v20, v19, v18, v17);
  sub_1BC47768C();
}

uint64_t sub_1BC476344@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData;
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(void **)(v3 + 32);
  v9 = *(void **)(v3 + 40);
  v10 = *(void **)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_QWORD *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  v15 = *(_QWORD *)(v3 + 88);
  v16 = *(_BYTE *)(v3 + 100);
  v17 = *(_DWORD *)(v3 + 96);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_BYTE *)(a1 + 100) = v16;
  *(_DWORD *)(a1 + 96) = v17;
  return sub_1BC3EE064(v4, v5, v6, v7, v8, v9, v10);
}

void sub_1BC4763DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[4];
  v19 = *(_OWORD *)(a1 + 5);
  v20 = *((_OWORD *)a1 + 1);
  v5 = a1[7];
  v18 = *((_OWORD *)a1 + 4);
  v6 = a1[10];
  v7 = a1[11];
  v8 = *((_BYTE *)a1 + 100);
  v9 = *((_DWORD *)a1 + 24);
  v10 = v1 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData;
  swift_beginAccess();
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = *(_QWORD *)(v10 + 24);
  v15 = *(void **)(v10 + 32);
  v16 = *(void **)(v10 + 40);
  v17 = *(void **)(v10 + 48);
  *(_QWORD *)v10 = v2;
  *(_QWORD *)(v10 + 8) = v3;
  *(_OWORD *)(v10 + 16) = v20;
  *(_QWORD *)(v10 + 32) = v4;
  *(_OWORD *)(v10 + 40) = v19;
  *(_QWORD *)(v10 + 56) = v5;
  *(_OWORD *)(v10 + 64) = v18;
  *(_QWORD *)(v10 + 80) = v6;
  *(_QWORD *)(v10 + 88) = v7;
  *(_DWORD *)(v10 + 96) = v9;
  *(_BYTE *)(v10 + 100) = v8;
  sub_1BC3EDFF4(v11, v12, v13, v14, v15, v16, v17);
  sub_1BC47768C();
}

void (*sub_1BC4764D4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC47651C;
}

void sub_1BC47651C(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC47768C();
}

id sub_1BC47654C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualValueView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualValueView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualValueView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setNumberOfLines_, 3);
    objc_msgSend(v4, sel_setLineBreakMode_, 4);
    objc_msgSend(v4, sel_setTextAlignment_, 0);
    v5 = objc_msgSend((id)objc_opt_self(), sel_hk_chrValueCellPrimaryFont);
    objc_msgSend(v4, sel_setFont_, v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC476648()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualTitleView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualTitleView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualTitleView);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 3);
    objc_msgSend(v5, sel_setLineBreakMode_, 4);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    v6 = (void *)sub_1BC62CDDC();
    objc_msgSend(v5, sel_setFont_, v6);

    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id SingleValueView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  double v11;
  id v12;
  id v13;
  objc_super v15;

  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  *((_OWORD *)v9 + 5) = 0u;
  *(_QWORD *)(v9 + 93) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualValueView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualTitleView] = 0;
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for SingleValueView();
  v10 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  LODWORD(v11) = 1144750080;
  objc_msgSend(v10, sel_setContentCompressionResistancePriority_forAxis_, 1, v11);
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v12 = sub_1BC47654C();
  v13 = sub_1BC476648();
  objc_msgSend(v10, sel_addSubview_, v12);
  objc_msgSend(v10, sel_addSubview_, v13);

  sub_1BC476B44();
  return v10;
}

void sub_1BC4769C4(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for SingleValueView();
  objc_msgSendSuper2(&v12, sel_traitCollectionDidChange_, a1);
  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!a1)
  {

    goto LABEL_9;
  }
  v5 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  v6 = sub_1BC62C680();
  v8 = v7;
  if (v6 == sub_1BC62C680() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  v11 = sub_1BC62D574();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
LABEL_9:
    sub_1BC476B44();
}

void sub_1BC476B44()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  unsigned int v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  id v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_activeConstraints];
  swift_beginAccess();
  v4 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v86 = v4;
  v5 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v5);

  v6 = objc_msgSend(v1, sel_traitCollection);
  v7 = objc_msgSend(v6, sel_preferredContentSizeCategory);

  LOBYTE(v6) = sub_1BC62CD1C();
  sub_1BC34D844();
  if ((v6 & 1) == 0)
  {
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BC63B440;
    v36 = sub_1BC47654C();
    v37 = objc_msgSend(v36, sel_leadingAnchor);

    v38 = objc_msgSend(v1, sel_leadingAnchor);
    v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

    *(_QWORD *)(v35 + 32) = v39;
    v40 = sub_1BC47654C();
    v41 = objc_msgSend(v40, sel_topAnchor);

    v42 = objc_msgSend(v1, sel_topAnchor);
    if (qword_1EF4285C0 != -1)
      swift_once();
    v43 = objc_msgSend(v41, sel_constraintGreaterThanOrEqualToAnchor_constant_, v42, *(double *)&qword_1EF459E00, v86);

    *(_QWORD *)(v35 + 40) = v43;
    v44 = sub_1BC47654C();
    v45 = objc_msgSend(v44, sel_bottomAnchor);

    v46 = objc_msgSend(v1, sel_bottomAnchor);
    v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v46, -*(double *)&qword_1EF459E00);

    *(_QWORD *)(v35 + 48) = v47;
    v48 = sub_1BC476648();
    v49 = objc_msgSend(v48, sel_topAnchor);

    v50 = objc_msgSend(v1, sel_topAnchor);
    v51 = objc_msgSend(v49, sel_constraintGreaterThanOrEqualToAnchor_constant_, v50, *(double *)&qword_1EF459E00);

    *(_QWORD *)(v35 + 56) = v51;
    v52 = sub_1BC476648();
    v53 = objc_msgSend(v52, sel_widthAnchor);

    v54 = objc_msgSend(v1, sel_widthAnchor);
    v55 = objc_msgSend(v53, sel_constraintEqualToAnchor_multiplier_, v54, 0.5);

    *(_QWORD *)(v35 + 64) = v55;
    v56 = sub_1BC476648();
    v57 = objc_msgSend(v56, sel_lastBaselineAnchor);

    v58 = sub_1BC47654C();
    v59 = objc_msgSend(v58, sel_lastBaselineAnchor);

    v60 = objc_msgSend(v57, sel_constraintEqualToAnchor_, v59);
    *(_QWORD *)(v35 + 72) = v60;
    v61 = sub_1BC476648();
    v62 = objc_msgSend(v61, sel_trailingAnchor);

    v63 = objc_msgSend(v1, sel_trailingAnchor);
    v64 = objc_msgSend(v62, sel_constraintEqualToAnchor_, v63);

    *(_QWORD *)(v35 + 80) = v64;
    sub_1BC62C890();
    *v3 = v35;
    swift_bridgeObjectRelease();
    v65 = sub_1BC476648();
    LODWORD(v62) = objc_msgSend(v65, sel_isHidden);

    v66 = sub_1BC47654C();
    v32 = objc_msgSend(v66, sel_trailingAnchor);

    if (!(_DWORD)v62)
    {
      v81 = sub_1BC476648();
      v82 = objc_msgSend(v81, sel_leadingAnchor);

      v83 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v82);
      swift_beginAccess();
      v68 = v83;
      goto LABEL_18;
    }
    v33 = objc_msgSend(v1, sel_trailingAnchor);
    v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, -*(double *)&qword_1EF459E08);
LABEL_10:
    v67 = v34;

    swift_beginAccess();
    v68 = v67;
LABEL_18:
    v80 = v68;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    swift_endAccess();
    goto LABEL_21;
  }
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC63A3C0;
  v9 = sub_1BC47654C();
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = objc_msgSend(v1, sel_leadingAnchor);
  if (qword_1EF4285C0 != -1)
    swift_once();
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, *((double *)&xmmword_1EF459DF0 + 1), v86);

  *(_QWORD *)(v8 + 32) = v12;
  v13 = sub_1BC47654C();
  v14 = objc_msgSend(v13, sel_topAnchor);

  v15 = objc_msgSend(v1, sel_topAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, *(double *)&xmmword_1EF459DF0);

  *(_QWORD *)(v8 + 40) = v16;
  v17 = sub_1BC47654C();
  v18 = objc_msgSend(v17, sel_trailingAnchor);

  v19 = objc_msgSend(v1, sel_trailingAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, -*(double *)&qword_1EF459E08);

  *(_QWORD *)(v8 + 48) = v20;
  v21 = sub_1BC476648();
  v22 = objc_msgSend(v21, sel_leadingAnchor);

  v23 = objc_msgSend(v1, sel_leadingAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, *((double *)&xmmword_1EF459DF0 + 1));

  *(_QWORD *)(v8 + 56) = v24;
  v25 = sub_1BC476648();
  v26 = objc_msgSend(v25, sel_trailingAnchor);

  v27 = objc_msgSend(v1, sel_trailingAnchor);
  v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, -*(double *)&qword_1EF459E08);

  *(_QWORD *)(v8 + 64) = v28;
  sub_1BC62C890();
  *v3 = v8;
  swift_bridgeObjectRelease();
  v29 = sub_1BC476648();
  v30 = objc_msgSend(v29, sel_isHidden);

  if (v30)
  {
    v31 = sub_1BC47654C();
    v32 = objc_msgSend(v31, sel_bottomAnchor);

    v33 = objc_msgSend(v1, sel_bottomAnchor);
    v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, -*(double *)&qword_1EF459E00);
    goto LABEL_10;
  }
  v69 = sub_1BC476648();
  v70 = objc_msgSend(v69, sel_topAnchor);

  v71 = sub_1BC47654C();
  v72 = objc_msgSend(v71, sel_bottomAnchor);

  v73 = objc_msgSend(v70, sel_constraintEqualToAnchor_constant_, v72, 2.0);
  v74 = sub_1BC476648();
  v75 = objc_msgSend(v74, sel_bottomAnchor);

  v76 = objc_msgSend(v1, sel_bottomAnchor);
  v77 = objc_msgSend(v75, sel_constraintEqualToAnchor_constant_, v76, -*(double *)&qword_1EF459E00);

  swift_beginAccess();
  if (!((unint64_t)*v3 >> 62))
  {
    v78 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v79 = v78 + 2;
    if (!__OFADD__(v78, 2))
      goto LABEL_13;
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  v85 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  v79 = v85 + 2;
  if (__OFADD__(v85, 2))
    goto LABEL_24;
LABEL_13:
  sub_1BC5EC1E8(v79, 1);
  sub_1BC62C890();
  v73 = v73;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_25:
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v80 = v77;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  swift_endAccess();

LABEL_21:
  swift_bridgeObjectRetain();
  v84 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v84);

}

void sub_1BC47768C()
{
  char *v0;
  id v1;
  double Width;
  double v3;
  double v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  unint64_t v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CGRect v44;

  v1 = objc_msgSend(v0, sel_superview);
  if (v1)
  {
    v33 = v1;
    objc_msgSend(v1, sel_bounds);
    Width = CGRectGetWidth(v44);
    if (qword_1EF4285F8 != -1)
      swift_once();
    v3 = *(double *)&qword_1EF459E78;
    v4 = *(double *)&qword_1EF459E88;
    v5 = sub_1BC476648();
    v6 = &v0[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData];
    swift_beginAccess();
    v7 = *((_QWORD *)v6 + 1);
    if (v7)
    {
      v9 = *((_QWORD *)v6 + 10);
      v8 = *((_QWORD *)v6 + 11);
      v11 = *((_QWORD *)v6 + 8);
      v10 = *((_QWORD *)v6 + 9);
      v31 = (void *)*((_QWORD *)v6 + 6);
      v28 = (void *)*((_QWORD *)v6 + 4);
      v30 = (void *)*((_QWORD *)v6 + 5);
      v13 = *((_QWORD *)v6 + 2);
      v12 = *((_QWORD *)v6 + 3);
      v32 = v5;
      v14 = *(_QWORD *)v6;
      v15 = *((unsigned int *)v6 + 24) | ((unint64_t)v6[100] << 32);
      sub_1BC3EE064(*(_QWORD *)v6, v7, v13, v12, v28, v30, v31);
      swift_bridgeObjectRetain();
      v26 = v8;
      v27 = v15;
      v24 = v10;
      v25 = v9;
      v23 = v11;
      sub_1BC3EDFF4(v14, v7, v13, v12, v28, v30, v31);
      v5 = v32;
      v16 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = 0;
    }
    objc_msgSend(v5, sel_setText_, v16, v23, v24, v25, v26, v27);

    v17 = *((_QWORD *)v6 + 1);
    if (v17)
    {
      v29 = *((unsigned int *)v6 + 24) | ((unint64_t)v6[100] << 32);
      v34 = *(_QWORD *)v6;
      v35 = *((_QWORD *)v6 + 2);
      v36 = *((_QWORD *)v6 + 3);
      v37 = (void *)*((_QWORD *)v6 + 4);
      v38 = (void *)*((_QWORD *)v6 + 5);
      v39 = (void *)*((_QWORD *)v6 + 6);
      v40 = *((_QWORD *)v6 + 8);
      v41 = *((_QWORD *)v6 + 9);
      v42 = *((_QWORD *)v6 + 10);
      v43 = *((_QWORD *)v6 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = v37;
      v19 = v38;
      v20 = v39;
      swift_bridgeObjectRetain();
      v21 = sub_1BC475C70(Width - v3 - v4);
      sub_1BC3EDFF4(v34, v17, v35, v36, v37, v38, v39);
      v22 = sub_1BC47654C();
      objc_msgSend(v22, sel_setAttributedText_, v21, v40, v41, v42, v43, v29);

    }
    sub_1BC476B44();

  }
}

uint64_t type metadata accessor for SingleValueView()
{
  return objc_opt_self();
}

id SingleValueView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for SingleValueView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SingleValueView.viewData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SingleValueView.viewData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SingleValueView.viewData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

_BYTE *sub_1BC477ACC@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1BC480FF4(a1, a2);
}

_QWORD *sub_1BC477AE4(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = (void *)a1[4];
  v3 = (void *)a1[5];
  v4 = (void *)a1[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v2;
  v6 = v3;
  v7 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1BC477B58(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)a1[4];
  v3 = (void *)a1[5];
  v4 = (void *)a1[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1BC477BCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC4810B0(*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t type metadata accessor for ClinicalSharingAllItemsOnboardingViewController(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF4318F8);
}

uint64_t sub_1BC477BF8()
{
  return swift_initClassMetadata2();
}

void sub_1BC477C50()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF4318D8 = v1;
  unk_1EF4318E0 = v3;
}

id sub_1BC477D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  id v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t);
  id result;
  void *v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  _QWORD v50[3];
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a2;
  v53 = a1;
  v11 = sub_1BC62B828();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v51 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v50 - v15;
  v17 = &v6[qword_1EF4318E8];
  *(_QWORD *)v17 = a5;
  *((_QWORD *)v17 + 1) = a6;
  v18 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingAllItemsViewController(0));
  type metadata accessor for ClinicalSharingAllItemsDataSource();
  swift_allocObject();
  swift_retain_n();
  v19 = v6;
  v50[2] = a6;
  v20 = v12;
  swift_retain();
  v21 = (char *)v18;
  *(_QWORD *)&v21[qword_1EF431948] = sub_1BC4E24FC(a3, a4);

  swift_retain();
  v22 = sub_1BC62B7D4();
  v50[1] = a4;
  v23 = v11;
  swift_release();
  v24 = qword_1EF4318F0;
  *(_QWORD *)&v19[qword_1EF4318F0] = v22;

  v25 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
  v25(v16, *MEMORY[0x1E0D2BA10], v11);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v27 = result;
    v28 = objc_msgSend(result, sel_isiPad);

    if (v28)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
      v25(v16, *MEMORY[0x1E0D2BA08], v11);
    }
    v29 = qword_1EF428600;
    v30 = *(id *)&v19[v24];
    v31 = v52;
    if (v29 != -1)
      swift_once();
    sub_1BC3B30F0();
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v32 + 64) = sub_1BC3644C0();
    *(_QWORD *)(v32 + 32) = v53;
    *(_QWORD *)(v32 + 40) = v31;
    swift_bridgeObjectRetain();
    sub_1BC62C6B0();
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v51, v16, v11);
    v33 = (id)sub_1BC62B81C();
    sub_1BC62B774();
    v34 = objc_msgSend(v33, sel_navigationController);
    if (v34)
    {
      v35 = v34;
      v36 = objc_msgSend(v34, sel_navigationBar);

      objc_msgSend(v36, sel_setHidden_, 0);
    }
    v37 = objc_msgSend(v33, sel_navigationItem);
    v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v33, sel_doneButtonTapped_);
    objc_msgSend(v37, sel_setRightBarButtonItem_, v38);

    v39 = objc_msgSend(v33, sel_navigationItem);
    v40 = objc_msgSend(v39, sel_rightBarButtonItem);

    if (v40)
    {
      sub_1BC359F44();
      v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1BC6398E0;
      *(_QWORD *)(v41 + 32) = sub_1BC62C680();
      *(_QWORD *)(v41 + 40) = v42;
      v43 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v44 = objc_msgSend(v43, sel_removeSpecialCharactersAndWhiteSpaces);

      v45 = sub_1BC62C680();
      v47 = v46;

      *(_QWORD *)(v41 + 48) = v45;
      *(_QWORD *)(v41 + 56) = v47;
      *(_QWORD *)(v41 + 64) = 1701736260;
      *(_QWORD *)(v41 + 72) = 0xE400000000000000;
      v48 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v49 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v40, sel_setAccessibilityIdentifier_, v49);
      swift_release();
      swift_release();

    }
    else
    {
      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v23);
    return v33;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC478218(void *a1)
{
  char *v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v6;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_1BC62D088();
  swift_unknownObjectRelease();
  v3 = *(void (**)(uint64_t))&v2[qword_1EF4318E8];
  v4 = swift_retain();
  v3(v4);
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v6);
}

void sub_1BC4782DC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC478308()
{
  uint64_t v0;

  swift_release();

}

id sub_1BC478338()
{
  return sub_1BC361C8C(type metadata accessor for ClinicalSharingAllItemsOnboardingViewController);
}

void sub_1BC478344(uint64_t a1)
{
  swift_release();

}

uint64_t sub_1BC478380()
{
  return type metadata accessor for ClinicalSharingAllItemsOnboardingViewController(0);
}

uint64_t type metadata accessor for ClinicalSharingAllItemsViewController(uint64_t a1)
{
  return sub_1BC3618E8(a1, (uint64_t *)&unk_1EF431950);
}

uint64_t sub_1BC47839C()
{
  return swift_initClassMetadata2();
}

void sub_1BC4783E8()
{
  sub_1BC62D394();
  __break(1u);
}

void sub_1BC478440()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ClinicalSharingAllItemsViewController(0);
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    v4 = objc_msgSend(v0, sel_collectionView);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_setPreservesSuperviewLayoutMargins_, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC47851C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC478440();

}

void sub_1BC478550()
{
  void *v0;
  void *v1;
  void (*v2)(void);
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v1 = v0;
  sub_1BC62B7EC();
  v2 = (void (*)(void))sub_1BC62B7F8();
  v2();
  v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = v3;
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  sub_1BC347F0C((unint64_t *)&qword_1EF4299A8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell, (uint64_t)&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryCell);
  sub_1BC62CB48();

  v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = v5;
  sub_1BC62AEEC();
  sub_1BC62CB48();

  v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v7;
  type metadata accessor for TurnOnAllDataTypesCell();
  sub_1BC347F0C(&qword_1EF429B00, (uint64_t (*)(uint64_t))type metadata accessor for TurnOnAllDataTypesCell, (uint64_t)&unk_1BC63D640);
  sub_1BC62CB48();

  v9 = objc_msgSend(v1, sel_collectionView);
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v10 = v9;
  sub_1BC62ACE8();
  sub_1BC62CB54();

  v11 = objc_msgSend(v1, sel_collectionView);
  if (v11)
  {
    sub_1BC62B408();
    sub_1BC62CB60();

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_1BC478708()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC478734(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC478764()
{
  return swift_release();
}

id sub_1BC478774()
{
  return sub_1BC361C8C(type metadata accessor for ClinicalSharingAllItemsViewController);
}

uint64_t sub_1BC478780()
{
  return swift_release();
}

uint64_t sub_1BC478790()
{
  return type metadata accessor for ClinicalSharingAllItemsViewController(0);
}

id HKMedicalUserDomainConcept.hasEducation.getter()
{
  void *v0;
  id result;
  void *v2;
  BOOL v3;

  result = objc_msgSend(v0, sel_educationContent);
  if (result)
  {
    v2 = result;
    v3 = sub_1BC62467C();

    return (id)v3;
  }
  return result;
}

uint64_t HKMedicalUserDomainConcept.educationPrimaryContent.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_educationContent);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BC479434(1, 1, 0, (uint64_t (*)(void))sub_1BC47961C);

  return v3;
}

uint64_t HKMedicalUserDomainConcept.educationTitle.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, sel_educationContent);
  if (v1 && (v2 = v1, v3 = sub_1BC479434(2, 1, 1, (uint64_t (*)(void))sub_1BC47961C), v5 = v4, v2, v5))
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v6 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 64) = sub_1BC3644C0();
    *(_QWORD *)(v7 + 32) = v3;
    *(_QWORD *)(v7 + 40) = v5;
    v8 = sub_1BC62C65C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v10 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v11 = sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    return v11;
  }
}

id HKMedicalUserDomainConcept.attributions.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(v0, sel_educationContent);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_primarySection);

  if (v3)
  {
    v4 = objc_msgSend(v3, sel_attributions);
    if (v4)
    {
      v5 = v4;
      sub_1BC62C878();

      v3 = v5;
    }

    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A52C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC3B4EE4();
    v3 = (id)sub_1BC62C5D8();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t HKMedicalUserDomainConcept.educationSideEffects.getter()
{
  return 0;
}

uint64_t HKMedicalUserDomainConcept.educationPregnancyDescription.getter()
{
  return 0;
}

uint64_t HKMedicalUserDomainConcept.isPregnancyDescriptionCritical.getter()
{
  return 0;
}

uint64_t HKMedicalUserDomainConcept.educationLactationDescription.getter()
{
  return 0;
}

uint64_t HKMedicalUserDomainConcept.isLactationDescriptionCritical.getter()
{
  return 0;
}

id sub_1BC478BE4()
{
  id *v0;
  id result;
  void *v2;
  BOOL v3;

  result = objc_msgSend(*v0, sel_educationContent);
  if (result)
  {
    v2 = result;
    v3 = sub_1BC62467C();

    return (id)v3;
  }
  return result;
}

uint64_t sub_1BC478C2C()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_educationContent);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BC479434(1, 1, 0, (uint64_t (*)(void))sub_1BC47961C);

  return v3;
}

uint64_t sub_1BC478CA4()
{
  return HKMedicalUserDomainConcept.educationTitle.getter();
}

uint64_t sub_1BC478CC4()
{
  return 0;
}

id sub_1BC478CD0()
{
  return HKMedicalUserDomainConcept.attributions.getter();
}

uint64_t sub_1BC478CF0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 56) = v3;
  *(_QWORD *)(v4 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC478D4C()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC478D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC478DE4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC478E20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1Tm(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
}

uint64_t EducationItem.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EducationItem.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC478EB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 56);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC478F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
}

_QWORD *EducationDataSource.__allocating_init(eduProviding:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_1BC47A0EC(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

_QWORD *EducationDataSource.init(eduProviding:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v8, v6);
  v10 = sub_1BC479C5C((uint64_t)v8, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v10;
}

void EducationDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void EducationDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC479090()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
}

uint64_t EducationDataSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return v0;
}

uint64_t EducationDataSource.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC4790F8()
{
  MEMORY[0x1BCCF35C4](&protocol conformance descriptor for EducationDataSource);
  return sub_1BC62B834();
}

Swift::Void __swiftcall EducationDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for EducationCell();
  sub_1BC379B20(&qword_1EF4319A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for EducationCell, (uint64_t)&unk_1BC64A5C0);
  sub_1BC62CB48();
}

uint64_t sub_1BC47919C()
{
  type metadata accessor for EducationCell();
  sub_1BC379B20(&qword_1EF4319A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for EducationCell, (uint64_t)&unk_1BC64A5C0);
  return sub_1BC62CB48();
}

uint64_t EducationDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t result;

  v3 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v3);
  v4 = v1[8];
  v5 = v1[9];
  __swift_project_boxed_opaque_existential_1Tm(v1 + 5, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  sub_1BC62BD44();
  v6 = sub_1BC62AD3C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v8 = sub_1BC62AD24();
  a1[3] = v6;
  result = sub_1BC379B20((unint64_t *)&qword_1ED6A4108, 255, v7, MEMORY[0x1E0D2A8A0]);
  a1[4] = result;
  *a1 = v8;
  return result;
}

uint64_t sub_1BC47930C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t result;

  v3 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v3);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(*(_QWORD *)v1 + 40), v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  sub_1BC62BD44();
  v6 = sub_1BC62AD3C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v8 = sub_1BC62AD24();
  a1[3] = v6;
  result = sub_1BC379B20((unint64_t *)&qword_1ED6A4108, 255, v7, MEMORY[0x1E0D2A8A0]);
  a1[4] = result;
  *a1 = v8;
  return result;
}

uint64_t sub_1BC479428(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BC479434(a1, a2, a3, (uint64_t (*)(void))sub_1BC479960);
}

uint64_t sub_1BC479434(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v5 = a4();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_12;
  v6 = sub_1BC47A2F0(v5);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((a3 & 1) != 0)
      goto LABEL_10;
LABEL_14:
    v20[0] = v9;
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A52C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC3B4EE4();
    v18 = sub_1BC62C5D8();
    goto LABEL_15;
  }
  v8 = v6 + 32;
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1BC34E674(v8, (uint64_t)v20);
    v10 = v21;
    v11 = v22;
    __swift_project_boxed_opaque_existential_1Tm(v20, v21);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(v10, v11);
    v14 = v13;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_1BC3B5060(0, v9[2] + 1, 1, v9);
    v16 = v9[2];
    v15 = v9[3];
    if (v16 >= v15 >> 1)
      v9 = sub_1BC3B5060((_QWORD *)(v15 > 1), v16 + 1, 1, v9);
    v9[2] = v16 + 1;
    v17 = &v9[2 * v16];
    v17[4] = v12;
    v17[5] = v14;
    v8 += 40;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease_n();
  if ((a3 & 1) == 0)
    goto LABEL_14;
LABEL_10:
  if (v9[2])
  {
    v18 = v9[4];
    swift_bridgeObjectRetain();
LABEL_15:
    swift_bridgeObjectRelease();
    return v18;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BC47961C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v38[24];
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v6 = sub_1BC62A820();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BC357158(0, &qword_1EF431B68, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v38[-v11 - 8];
  v13 = objc_msgSend(v3, sel_sections);
  sub_1BC47A770();
  v14 = sub_1BC62C878();

  v15 = sub_1BC3D1D48(v14);
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
  {
LABEL_4:
    v19 = *(_QWORD *)(v15 + 16);
    if (v19)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1BC62A814();
  sub_1BC62A808();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v17 = sub_1BC62A7FC();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) == 1)
  {
    result = sub_1BC47A71C((uint64_t)v12);
    goto LABEL_4;
  }
  v33 = sub_1BC62A7F0();
  v35 = v34;
  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v12, v17);
  v36 = sub_1BC479EB4(v15, v33, v35);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v15 = v36;
  v19 = *(_QWORD *)(v36 + 16);
  if (!v19)
    goto LABEL_17;
LABEL_5:
  v20 = 0;
  v44 = MEMORY[0x1E0DEE9D8];
  v21 = v15 + 32;
  while (v20 < *(_QWORD *)(v15 + 16))
  {
    sub_1BC34E674(v21, (uint64_t)&v41);
    v22 = v42;
    v23 = v43;
    __swift_project_boxed_opaque_existential_1Tm(&v41, v42);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23) == a1)
    {
      sub_1BC34E718(&v41, (uint64_t)v38);
      v24 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC3BDA7C(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v24 = v44;
      }
      v26 = *(_QWORD *)(v24 + 16);
      v25 = *(_QWORD *)(v24 + 24);
      if (v26 >= v25 >> 1)
        sub_1BC3BDA7C(v25 > 1, v26 + 1, 1);
      v27 = v39;
      v28 = v40;
      v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      MEMORY[0x1E0C80A78](v29);
      v31 = &v38[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(_BYTE *))(v32 + 16))(v31);
      sub_1BC3DC6C4(v26, (uint64_t)v31, &v44, v27, v28);
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
    }
    else
    {
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v41);
    }
    ++v20;
    v21 += 40;
    if (v19 == v20)
    {
      swift_bridgeObjectRelease();
      return v44;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC479960(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[24];
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = sub_1BC62A820();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BC357158(0, &qword_1EF431B68, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v35[-v9 - 8];
  result = (uint64_t)HKCodableHealthRecordsLocalizedEducationContent.eduSections.getter();
  v12 = result;
  if ((a2 & 1) == 0)
  {
LABEL_4:
    v15 = *(_QWORD *)(v12 + 16);
    if (v15)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1BC62A814();
  sub_1BC62A808();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  v13 = sub_1BC62A7FC();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
  {
    result = sub_1BC47A71C((uint64_t)v10);
    goto LABEL_4;
  }
  v30 = sub_1BC62A7F0();
  v32 = v31;
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v10, v13);
  v33 = sub_1BC479EB4(v12, v30, v32);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v12 = v33;
  v15 = *(_QWORD *)(v33 + 16);
  if (!v15)
    goto LABEL_17;
LABEL_5:
  v16 = 0;
  v41 = MEMORY[0x1E0DEE9D8];
  v17 = v12 + 32;
  while (v16 < *(_QWORD *)(v12 + 16))
  {
    sub_1BC34E674(v17, (uint64_t)&v38);
    v18 = v39;
    v19 = v40;
    __swift_project_boxed_opaque_existential_1Tm(&v38, v39);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19) == a1)
    {
      sub_1BC34E718(&v38, (uint64_t)v35);
      v20 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC3BDA7C(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v20 = v41;
      }
      v22 = *(_QWORD *)(v20 + 16);
      v21 = *(_QWORD *)(v20 + 24);
      if (v22 >= v21 >> 1)
        sub_1BC3BDA7C(v21 > 1, v22 + 1, 1);
      v23 = v36;
      v24 = v37;
      v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
      v26 = MEMORY[0x1E0C80A78](v25);
      v28 = &v35[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(_BYTE *, __n128))(v29 + 16))(v28, v26);
      sub_1BC3DC6C4(v22, (uint64_t)v28, &v41, v23, v24);
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
    }
    else
    {
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v38);
    }
    ++v16;
    v17 += 40;
    if (v15 == v16)
    {
      swift_bridgeObjectRelease();
      return v41;
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC479C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t inited;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  _QWORD *v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  char v18;
  __int128 v20[2];
  uint64_t v21[5];

  v21[3] = a3;
  v21[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  sub_1BC34E674((uint64_t)v21, a2 + 40);
  sub_1BC34E674((uint64_t)v21, (uint64_t)v20);
  type metadata accessor for EducationItem();
  v9 = swift_allocObject();
  type metadata accessor for EducationCell();
  sub_1BC379B20(&qword_1EF4319A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for EducationCell, (uint64_t)&unk_1BC64A5C0);
  *(_QWORD *)(v9 + 56) = sub_1BC62ADA8();
  *(_QWORD *)(v9 + 64) = v10;
  sub_1BC34E718(v20, v9 + 16);
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)&v20[0] = inited;
  sub_1BC62C890();
  v13 = *(_QWORD *)&v20[0];
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], v11);
  sub_1BC62B288();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BC639590;
  v15 = *(void (**)(uint64_t, uint64_t))(a4 + 24);
  swift_retain();
  v15(a3, a4);
  sub_1BC3D24F4(v13);
  swift_bridgeObjectRelease();
  sub_1BC62B270();
  v16 = ConceptsDataSource.init(arrangedSections:isHidden:)(v14, 0);
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 8);
  swift_retain();
  v18 = v17(a3, a4);
  sub_1BC546A60((v18 & 1) == 0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  return v16;
}

uint64_t sub_1BC479EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  result = MEMORY[0x1E0DEE9D8];
  v36 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return result;
  v8 = 0;
  v29 = a1 + 32;
  while (1)
  {
    sub_1BC34E674(v29 + 40 * v8, (uint64_t)&v33);
    v9 = v34;
    v10 = v35;
    __swift_project_boxed_opaque_existential_1Tm(&v33, v34);
    v11 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    v12 = v11;
    v13 = v11[2];
    if (v13)
    {
      v14 = v11[4] == a2 && v11[5] == a3;
      if (v14 || (result = sub_1BC62D574(), (result & 1) != 0))
      {
LABEL_11:
        swift_bridgeObjectRelease();
        sub_1BC34E718(&v33, (uint64_t)v30);
        v15 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC3BDA7C(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v15 = v36;
        }
        v17 = *(_QWORD *)(v15 + 16);
        v16 = *(_QWORD *)(v15 + 24);
        if (v17 >= v16 >> 1)
          sub_1BC3BDA7C(v16 > 1, v17 + 1, 1);
        v18 = v31;
        v19 = v32;
        v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
        MEMORY[0x1E0C80A78](v20);
        v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v23 + 16))(v22);
        sub_1BC3DC6C4(v17, (uint64_t)v22, &v36, v18, v19);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
        goto LABEL_4;
      }
      if (v13 != 1)
        break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
LABEL_4:
    if (++v8 == v5)
      return v36;
  }
  v24 = v12 + 7;
  v25 = 1;
  while (1)
  {
    v26 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (*(v24 - 1) == a2 && *v24 == a3)
      goto LABEL_11;
    result = sub_1BC62D574();
    if ((result & 1) != 0)
      goto LABEL_11;
    v24 += 2;
    ++v25;
    if (v26 == v13)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC47A0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EducationDataSource();
  v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_1BC479C5C((uint64_t)v9, v10, a3, a4);
}

uint64_t sub_1BC47A18C(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF4319A8, a2, (uint64_t (*)(uint64_t))type metadata accessor for EducationDataSource, (uint64_t)&protocol conformance descriptor for EducationDataSource);
}

uint64_t type metadata accessor for EducationDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1BC47A1D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 64);
  *a2 = *(_QWORD *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of EducationProviding.hasEducation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EducationProviding.educationPrimaryContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EducationProviding.educationTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EducationProviding.educationSideEffects.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EducationProviding.educationPregnancyDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EducationProviding.isPregnancyDescriptionCritical.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EducationProviding.educationLactationDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EducationProviding.isLactationDescriptionCritical.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EducationProviding.attributions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EducationProviding.uniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t type metadata accessor for EducationItem()
{
  return objc_opt_self();
}

uint64_t method lookup function for EducationItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EducationItem.reuseIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of EducationItem.reuseIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of EducationItem.reuseIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of EducationItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t method lookup function for EducationDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EducationDataSource.__allocating_init(eduProviding:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of EducationDataSource.layout(for:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1BC47A2F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  __int128 v52[2];
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;

  v2 = sub_1BC62A820();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A814();
  v6 = sub_1BC62A7CC();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_19:
    v35 = (void *)objc_opt_self();
    v36 = swift_bridgeObjectRetain();
    sub_1BC3D6C54(v36);
    swift_bridgeObjectRelease();
    v37 = (void *)sub_1BC62C86C();
    swift_release();
    v38 = objc_msgSend(v35, sel_preferredLocalizationsFromArray_, v37);

    v39 = (_QWORD *)sub_1BC62C878();
    if (v39[2])
    {
      v41 = v39[4];
      v40 = v39[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v11[2])
      {
        v42 = sub_1BC558D94(v6, v8);
        if ((v43 & 1) != 0)
        {
          v44 = *(_QWORD *)(v11[7] + 8 * v42);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_26:
          swift_bridgeObjectRelease();
          return v44;
        }
      }
      swift_bridgeObjectRelease();
      if (v11[2])
      {
        v45 = sub_1BC558D94(v41, v40);
        if ((v46 & 1) != 0)
        {
          v44 = *(_QWORD *)(v11[7] + 8 * v45);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v49 = v6;
  v50 = v8;
  v10 = a1 + 32;
  v48 = a1;
  swift_bridgeObjectRetain();
  v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    sub_1BC34E674(v10, (uint64_t)v53);
    v12 = v54;
    v13 = v55;
    __swift_project_boxed_opaque_existential_1Tm(v53, v54);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
    v16 = v15;
    sub_1BC34E674((uint64_t)v53, (uint64_t)v52);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v51 = v11;
    v19 = sub_1BC558D94(v14, v16);
    v20 = v11[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (v11[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BC5A5B28();
    }
    else
    {
      sub_1BC3C4258(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_1BC558D94(v14, v16);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_33;
      v19 = v24;
    }
    v11 = v51;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      v11[(v19 >> 6) + 8] |= 1 << v19;
      v26 = (uint64_t *)(v11[6] + 16 * v19);
      *v26 = v14;
      v26[1] = v16;
      *(_QWORD *)(v11[7] + 8 * v19) = MEMORY[0x1E0DEE9D8];
      v27 = v11[2];
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        goto LABEL_32;
      v11[2] = v29;
      swift_bridgeObjectRetain();
    }
    v30 = v11[7];
    v31 = *(_QWORD **)(v30 + 8 * v19);
    v32 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v30 + 8 * v19) = v31;
    if ((v32 & 1) == 0)
    {
      v31 = sub_1BC3B5D08(0, v31[2] + 1, 1, v31);
      *(_QWORD *)(v30 + 8 * v19) = v31;
    }
    v34 = v31[2];
    v33 = v31[3];
    if (v34 >= v33 >> 1)
    {
      v31 = sub_1BC3B5D08((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
      *(_QWORD *)(v30 + 8 * v19) = v31;
    }
    v31[2] = v34 + 1;
    sub_1BC34E718(v52, (uint64_t)&v31[5 * v34 + 4]);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
    v10 += 40;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      v6 = v49;
      v8 = v50;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC47A71C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC357158(0, &qword_1EF431B68, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC47A770()
{
  unint64_t result;

  result = qword_1EF42CFD0;
  if (!qword_1EF42CFD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42CFD0);
  }
  return result;
}

uint64_t HealthRecordsURLHandler.__allocating_init()()
{
  return swift_allocObject();
}

void HealthRecordsURLParsingResult.typeName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1E0C80A78](v1);
  sub_1BC397938(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BC47A858 + 4 * byte_1BC642110[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_1BC47A858()
{
  return 0xD00000000000001DLL;
}

void sub_1BC47AAD4()
{
  JUMPOUT(0x1BC47AABCLL);
}

uint64_t HealthRecordsURLHandler.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for HealthRecordsURLParsingResult()
{
  uint64_t result;

  result = qword_1EF431BF0;
  if (!qword_1EF431BF0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC47AB30()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF431B70)
  {
    sub_1BC62A7B4();
    sub_1BC3E4394();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF431B70);
  }
}

uint64_t sub_1BC47ABA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t);
  id v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  unsigned int v35;
  uint64_t result;
  char *v37;
  uint64_t v38;
  void *v39;
  unsigned int v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  void *v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  void *v66;
  char isEscapingClosureAtFileLocation;
  uint64_t v68;
  void *v69;
  unsigned int v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  char v80;
  uint64_t (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t *v82;
  unsigned int (*v83)(uint64_t (*)(void *), uint64_t, uint64_t);
  uint64_t v84;
  BOOL v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void *);
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  void (*v94)(char *, uint64_t, uint64_t);
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t (*v102)(void *);
  uint64_t *v103;
  uint64_t v104;
  uint64_t (*v105)(void *, uint64_t);
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t aBlock;
  uint64_t v119;
  void *v120;
  void *v121;
  uint64_t (*v122)();
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v116 = (char *)a2;
  v107 = *v2;
  v4 = sub_1BC62BB34();
  v111 = *(_QWORD *)(v4 - 8);
  v112 = v4;
  MEMORY[0x1E0C80A78](v4);
  v114 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v6);
  v100 = (char *)&v97 - v7;
  v99 = sub_1BC62A7B4();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v97 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1EF431B78, (void (*)(uint64_t))type metadata accessor for HealthRecordsURLParsingResult);
  v10 = MEMORY[0x1E0C80A78](v9);
  v102 = (uint64_t (*)(void *))((char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v103 = (uint64_t *)((char *)&v97 - v12);
  v13 = sub_1BC62ACD0();
  v109 = *(_QWORD *)(v13 - 8);
  v110 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BC62A604();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v97 - v21;
  v23 = type metadata accessor for HealthRecordsURLParsingResult();
  v105 = *(uint64_t (**)(void *, uint64_t))(v23 - 8);
  v24 = MEMORY[0x1E0C80A78](v23);
  v113 = (char *)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v101 = (uint64_t)&v97 - v27;
  MEMORY[0x1E0C80A78](v26);
  v115 = (char *)&v97 - v28;
  v117 = swift_allocBox();
  v106 = v29;
  swift_storeEnumTagMultiPayload();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v30(v22, a1, v16);
  v30(v20, (uint64_t)v22, v16);
  sub_1BC62D5D4();
  v31 = (id)HKSensitiveLogItem();
  swift_unknownObjectRelease();
  sub_1BC62D088();
  swift_unknownObjectRelease();
  v108 = sub_1BC62C6E0();
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  v34 = (void *)sub_1BC62A598();
  v35 = objc_msgSend(v34, sel_hk_isRewrittenEUDigitalCOVIDCertificateQRCodeURL);

  if (v35)
  {
    swift_bridgeObjectRelease();
    v30(v116, a1, v16);
    swift_storeEnumTagMultiPayload();
    return swift_release();
  }
  v30(v22, a1, v16);
  sub_1BC62ACC4();
  v37 = v15;
  if ((sub_1BC62ACAC() & 1) == 0)
  {
    v39 = (void *)sub_1BC62A598();
    v40 = objc_msgSend(v39, sel_hk_isRewrittenHealthCardQRCodeURL);

    v38 = (uint64_t)v115;
    if (v40)
    {
      v30(v115, a1, v16);
      goto LABEL_7;
    }
    v55 = (void *)objc_opt_self();
    v56 = (void *)sub_1BC62A598();
    v57 = objc_msgSend(v55, sel_isClinicalLoginRedirectURL_, v56);

    if (v57)
    {
      v100 = v37;
      v58 = v117;
      swift_retain();
      v59 = sub_1BC62A598();
      v60 = swift_allocObject();
      *(_QWORD *)(v60 + 16) = sub_1BC47D19C;
      *(_QWORD *)(v60 + 24) = v58;
      v122 = sub_1BC47D138;
      v123 = v60;
      v61 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v119 = 1107296256;
      v120 = sub_1BC47BCA0;
      v121 = &block_descriptor_15_2;
      v62 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      v63 = swift_allocObject();
      v64 = v106;
      *(_QWORD *)(v63 + 16) = v106;
      v65 = swift_allocObject();
      *(_QWORD *)(v65 + 16) = sub_1BC47D1C4;
      *(_QWORD *)(v65 + 24) = v63;
      v99 = v63;
      v122 = sub_1BC47D138;
      v123 = v65;
      aBlock = v61;
      v119 = 1107296256;
      v120 = sub_1BC47BF94;
      v121 = &block_descriptor_24_0;
      v66 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v55, sel_parseClinicalLoginRedirectURL_resultHandler_errorHandler_, v59, v62, v66);
      _Block_release(v62);

      _Block_release(v66);
      LOBYTE(v59) = swift_isEscapingClosureAtFileLocation();
      result = swift_release();
      if ((v59 & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        v44 = v33;
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        result = swift_release();
        v43 = (uint64_t)v113;
        v42 = v114;
        v37 = v100;
        if ((isEscapingClosureAtFileLocation & 1) == 0)
        {
          swift_beginAccess();
          v68 = (uint64_t)v64;
          v38 = (uint64_t)v115;
          sub_1BC397938(v68, (uint64_t)v115);
          swift_release();
          v103 = 0;
          v101 = 0;
          v102 = 0;
          v105 = sub_1BC47D1C4;
          v104 = v58;
          v106 = sub_1BC47D19C;
          v41 = v99;
          goto LABEL_8;
        }
      }
      __break(1u);
      goto LABEL_42;
    }
    v69 = (void *)sub_1BC62A598();
    v70 = objc_msgSend(v55, sel_isClinicalOnboardingURL_, v69);

    v44 = v33;
    if (v70)
    {
      v100 = v37;
      v71 = v55;
      v72 = v117;
      swift_retain();
      v73 = sub_1BC62A598();
      v74 = swift_allocObject();
      *(_QWORD *)(v74 + 16) = sub_1BC47D120;
      *(_QWORD *)(v74 + 24) = v72;
      v122 = sub_1BC47D138;
      v123 = v74;
      v75 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v119 = 1107296256;
      v120 = sub_1BC47C198;
      v121 = &block_descriptor_32;
      v76 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      v77 = swift_allocObject();
      *(_QWORD *)(v77 + 16) = v106;
      v78 = swift_allocObject();
      *(_QWORD *)(v78 + 16) = sub_1BC47D184;
      *(_QWORD *)(v78 + 24) = v77;
      v122 = sub_1BC47D138;
      v123 = v78;
      aBlock = v75;
      v119 = 1107296256;
      v120 = sub_1BC47C2F4;
      v121 = &block_descriptor_9_5;
      v79 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v71, sel_parseClinicalOnboardingURL_resultHandler_errorHandler_, v73, v76, v79);
      _Block_release(v76);

      _Block_release(v79);
      LOBYTE(v73) = swift_isEscapingClosureAtFileLocation();
      result = swift_release();
      if ((v73 & 1) == 0)
      {
        v80 = swift_isEscapingClosureAtFileLocation();
        result = swift_release();
        v43 = (uint64_t)v113;
        v42 = v114;
        v37 = v100;
        if ((v80 & 1) == 0)
        {
          v81 = v106;
          swift_beginAccess();
          v38 = (uint64_t)v115;
          sub_1BC397938((uint64_t)v81, (uint64_t)v115);
          swift_release();
          v106 = 0;
          v104 = 0;
          v105 = 0;
          v41 = 0;
          v102 = sub_1BC47D184;
          v101 = v72;
          v103 = (uint64_t *)sub_1BC47D120;
          goto LABEL_8;
        }
LABEL_43:
        __break(1u);
        return result;
      }
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v82 = v103;
    sub_1BC47C330(v103);
    v83 = (unsigned int (*)(uint64_t (*)(void *), uint64_t, uint64_t))*((_QWORD *)v105 + 6);
    v84 = v23;
    if (v83((uint64_t (*)(void *))v82, 1, v23) == 1)
    {
      sub_1BC384EB4((uint64_t)v82, &qword_1EF431B78, (void (*)(uint64_t))type metadata accessor for HealthRecordsURLParsingResult);
      v85 = URL.isCategoryRoomURL.getter();
      v42 = v114;
      if (v85)
      {
        swift_bridgeObjectRelease();
        sub_1BC347F0C(&qword_1EF42B240, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v108 = sub_1BC62D52C();
        v44 = v86;
        URL.chrDisplayCategoryKind.getter(&aBlock);
        if (aBlock == 11)
        {
          v87 = 1;
          v43 = (uint64_t)v113;
          v88 = v102;
        }
        else
        {
          v88 = v102;
          *(_BYTE *)v102 = aBlock;
          swift_storeEnumTagMultiPayload();
          v87 = 0;
          v43 = (uint64_t)v113;
        }
        (*((void (**)(uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))v105 + 7))(v88, v87, 1, v84);
        if (v83(v88, 1, v84) == 1)
        {
          v96 = v101;
          swift_storeEnumTagMultiPayload();
          sub_1BC384EB4((uint64_t)v88, &qword_1EF431B78, (void (*)(uint64_t))type metadata accessor for HealthRecordsURLParsingResult);
        }
        else
        {
          v96 = v101;
          sub_1BC47CED0((uint64_t)v88, v101);
        }
        sub_1BC47CED0(v96, v38);
        goto LABEL_38;
      }
      if (URL.isViewHealthRecordURL.getter())
      {
        swift_bridgeObjectRelease();
        sub_1BC347F0C(&qword_1EF42B240, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v108 = sub_1BC62D52C();
        v44 = v89;
        if (URL.isViewHealthRecordURL.getter())
        {
          sub_1BC62A58C();
          v90 = (uint64_t)v100;
          sub_1BC62A76C();
          swift_bridgeObjectRelease();
          v91 = v98;
          v92 = v99;
          v93 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v90, 1, v99);
          v43 = (uint64_t)v113;
          if (v93 != 1)
          {
            v94 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 32);
            v95 = v97;
            v94(v97, v90, v92);
            v94((char *)v38, (uint64_t)v95, v92);
LABEL_37:
            swift_storeEnumTagMultiPayload();
LABEL_38:
            v106 = 0;
            v104 = 0;
            v105 = 0;
            v41 = 0;
            v103 = 0;
            v101 = 0;
            v102 = 0;
            goto LABEL_8;
          }
        }
        else
        {
          v90 = (uint64_t)v100;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v100, 1, 1, v99);
          v43 = (uint64_t)v113;
        }
        sub_1BC384EB4(v90, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        goto LABEL_37;
      }
      sub_1BC62ACB8();
      swift_storeEnumTagMultiPayload();
      v106 = 0;
      v104 = 0;
      v105 = 0;
      v41 = 0;
      v103 = 0;
      v101 = 0;
      v102 = 0;
    }
    else
    {
      sub_1BC47CED0((uint64_t)v82, v38);
      v106 = 0;
      v104 = 0;
      v105 = 0;
      v41 = 0;
      v103 = 0;
      v101 = 0;
      v102 = 0;
      v42 = v114;
    }
    v43 = (uint64_t)v113;
    goto LABEL_8;
  }
  v38 = (uint64_t)v115;
  v30(v115, a1, v16);
LABEL_7:
  swift_storeEnumTagMultiPayload();
  v106 = 0;
  v104 = 0;
  v105 = 0;
  v41 = 0;
  v103 = 0;
  v101 = 0;
  v102 = 0;
  v43 = (uint64_t)v113;
  v42 = v114;
  v44 = v33;
LABEL_8:
  sub_1BC62BAF8();
  sub_1BC397938(v38, v43);
  swift_bridgeObjectRetain();
  v45 = sub_1BC62BB28();
  v46 = sub_1BC62CADC();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = v43;
    v48 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v99 = v41;
    v50 = v49;
    v124 = v49;
    *(_DWORD *)v48 = 136446722;
    v125 = v107;
    swift_getMetatypeMetadata();
    v51 = sub_1BC62C6E0();
    v100 = v37;
    v125 = sub_1BC4991F0(v51, v52, &v124);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2082;
    swift_bridgeObjectRetain();
    v125 = sub_1BC4991F0(v108, v44, &v124);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v48 + 22) = 2082;
    HealthRecordsURLParsingResult.typeName.getter();
    v125 = sub_1BC4991F0(v53, v54, &v124);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC348D78(v47, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsURLParsingResult);
    _os_log_impl(&dword_1BC30A000, v45, v46, "[%{public}s]: parsed URL %{public}s to type %{public}s", (uint8_t *)v48, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v50, -1, -1);
    MEMORY[0x1BCCF36A8](v48, -1, -1);

    v38 = (uint64_t)v115;
    (*(void (**)(char *, uint64_t))(v111 + 8))(v114, v112);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v100, v110);
  }
  else
  {

    sub_1BC348D78(v43, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsURLParsingResult);
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v42, v112);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v37, v110);
  }
  sub_1BC47CED0(v38, (uint64_t)v116);
  swift_release();
  sub_1BC36D770((uint64_t)v106);
  sub_1BC36D770((uint64_t)v105);
  sub_1BC36D770((uint64_t)v103);
  return sub_1BC36D770((uint64_t)v102);
}

uint64_t sub_1BC47BBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v6 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = swift_projectBox();
  sub_1BC397A38();
  v11 = (char *)v8 + *(int *)(v10 + 48);
  *v8 = a1;
  v8[1] = a2;
  v12 = sub_1BC62A7B4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a3, v12);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BC47F898((uint64_t)v8, v9);
  return 1;
}

uint64_t sub_1BC47BCA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t, uint64_t, char *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v12;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, char *))(a1 + 32);
  v7 = sub_1BC62C680();
  v9 = v8;
  sub_1BC62A79C();
  v10 = v6(v7, v9, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10 & 1;
}

uint64_t sub_1BC47BD68(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void (*v17)(char *, char *, uint64_t);
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;

  v6 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - v10;
  v12 = sub_1BC62A7B4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void *)sub_1BC62A550();
  sub_1BC34EA24(a2, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {

    sub_1BC384EB4((uint64_t)v11, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
LABEL_6:
    sub_1BC3979B8();
    v20 = (uint64_t)&v8[*(int *)(v19 + 48)];
    *(_QWORD *)v8 = a1;
    sub_1BC34EA24(a2, v20);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    v21 = a1;
    goto LABEL_7;
  }
  v23 = a3;
  v17 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v17(v15, v11, v12);
  v18 = objc_msgSend(v16, sel_hk_OAuth2_isAccessDeniedError);

  if (!v18)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    a3 = v23;
    goto LABEL_6;
  }
  v17(v8, v15, v12);
  swift_storeEnumTagMultiPayload();
  a3 = v23;
  swift_beginAccess();
LABEL_7:
  sub_1BC47F898((uint64_t)v8, a3);
  return 0;
}

uint64_t sub_1BC47BF94(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v15;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  v9 = *(uint64_t (**)(void))(a1 + 32);
  if (a3)
  {
    sub_1BC62A79C();
    v10 = sub_1BC62A7B4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    v11 = sub_1BC62A7B4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  v12 = a2;
  v13 = v9();

  sub_1BC384EB4((uint64_t)v8, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  return v13 & 1;
}

uint64_t sub_1BC47C098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;

  v14 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = swift_projectBox();
  *v16 = a1;
  v16[1] = a2;
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = a6;
  v16[6] = a7;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC47F898((uint64_t)v16, v17);
  return 1;
}

uint64_t sub_1BC47C198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  v8 = sub_1BC62C680();
  v10 = v9;
  v11 = sub_1BC62C680();
  v13 = v12;
  if (a4)
  {
    v14 = sub_1BC62C680();
    a4 = v15;
  }
  else
  {
    v14 = 0;
  }
  v16 = v7(v8, v10, v11, v13, v14, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t sub_1BC47C250(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v9;

  v4 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = a1;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  v7 = a1;
  sub_1BC47F898((uint64_t)v6, a2);
  return 0;
}

uint64_t sub_1BC47C2F4(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  char v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = v2();

  return v4 & 1;
}

uint64_t sub_1BC47C330@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void (*v57)(char *, unint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;

  v92 = *v1;
  v3 = sub_1BC62BB34();
  v94 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v95 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v5);
  v98 = (char *)&v88 - v6;
  v7 = sub_1BC62A7B4();
  v96 = *(_QWORD *)(v7 - 8);
  v97 = v7;
  MEMORY[0x1E0C80A78](v7);
  v93 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1BC62A388();
  v106 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v105 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1EF431CE0, v10);
  MEMORY[0x1E0C80A78](v11);
  v99 = (char *)&v88 - v12;
  sub_1BC384E68(0, &qword_1EF431CE8, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v13);
  v101 = (char *)&v88 - v14;
  v15 = sub_1BC62A3DC();
  v102 = *(_QWORD *)(v15 - 8);
  v103 = v15;
  MEMORY[0x1E0C80A78](v15);
  v100 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BC62A604();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v88 - v22;
  v24 = objc_msgSend((id)objc_opt_self(), sel__hk_urlForViewHealthRecords);
  sub_1BC62A5BC();

  v107 = sub_1BC62A580();
  sub_1BC62A5EC();
  if (!v25)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
    v32 = a1;
    goto LABEL_25;
  }
  v108 = v23;
  v89 = v3;
  v26 = sub_1BC62A5D4();
  if (!v27)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v108, v17);
    swift_bridgeObjectRelease();
    v32 = a1;
    goto LABEL_25;
  }
  v88 = v26;
  v90 = a1;
  v91 = v17;
  v28 = sub_1BC62A5EC();
  if (v29)
  {
    v28 = sub_1BC62C6EC();
    v31 = v30;
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = 0;
  }
  v33 = sub_1BC62C6EC();
  v35 = v34;
  swift_bridgeObjectRelease();
  if (!v31)
  {
    swift_bridgeObjectRelease();
    v36 = v91;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v108, v91);
    goto LABEL_16;
  }
  if (v28 == v33 && v31 == v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v108, v91);
    goto LABEL_14;
  }
  v37 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = v91;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v108, v91);
  if ((v37 & 1) == 0)
  {
LABEL_16:
    v42 = *(void (**)(char *, uint64_t))(v18 + 8);
    v42(v21, v36);
LABEL_23:
    swift_bridgeObjectRelease();
    v32 = v90;
LABEL_24:
    v42(v108, v36);
LABEL_25:
    swift_bridgeObjectRelease();
LABEL_26:
    v46 = type metadata accessor for HealthRecordsURLParsingResult();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v32, 1, 1, v46);
  }
LABEL_14:
  v38 = sub_1BC62A5D4();
  if (v39)
  {
    v38 = sub_1BC62C6EC();
    v41 = v40;
    swift_bridgeObjectRelease();
  }
  else
  {
    v41 = 0;
  }
  v43 = sub_1BC62C6EC();
  v45 = v44;
  swift_bridgeObjectRelease();
  if (!v41)
  {
    v42 = *(void (**)(char *, uint64_t))(v18 + 8);
    v36 = v91;
    v42(v21, v91);
    goto LABEL_23;
  }
  if (v38 == v43 && v41 == v45)
  {
    swift_bridgeObjectRelease();
    v42 = *(void (**)(char *, uint64_t))(v18 + 8);
    v36 = v91;
    v42(v21, v91);
    swift_bridgeObjectRelease();
    v32 = v90;
    goto LABEL_28;
  }
  v48 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  v42 = *(void (**)(char *, uint64_t))(v18 + 8);
  v36 = v91;
  v42(v21, v91);
  swift_bridgeObjectRelease();
  v32 = v90;
  if ((v48 & 1) == 0)
    goto LABEL_24;
LABEL_28:
  v49 = (uint64_t)v101;
  sub_1BC62A3AC();
  v51 = v102;
  v50 = v103;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v49, 1, v103) == 1)
  {
    sub_1BC384EB4(v49, &qword_1EF431CE8, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  }
  else
  {
    v52 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v100, v49, v50);
    v53 = sub_1BC62A394();
    if (v53)
    {
      v54 = *(_QWORD *)(v53 + 16);
      if (v54)
      {
        v55 = v53 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80));
        v56 = *(_QWORD *)(v106 + 72);
        v57 = *(void (**)(char *, unint64_t, uint64_t))(v106 + 16);
        swift_bridgeObjectRetain();
        v59 = v104;
        v58 = v105;
        while (1)
        {
          v57(v58, v55, v59);
          if (sub_1BC62A370() == 6517363 && v60 == 0xE300000000000000)
            break;
          v61 = sub_1BC62D574();
          swift_bridgeObjectRelease();
          if ((v61 & 1) != 0)
            goto LABEL_61;
          v58 = v105;
          v59 = v104;
          (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v104);
          v55 += v56;
          if (!--v54)
          {
            swift_bridgeObjectRelease();
            v62 = 1;
            v32 = v90;
            v36 = v91;
            v63 = (_QWORD *)v107;
            v64 = v108;
            v65 = v106;
            v66 = (uint64_t)v99;
            goto LABEL_62;
          }
        }
        swift_bridgeObjectRelease();
LABEL_61:
        v32 = v90;
        v36 = v91;
        v63 = (_QWORD *)v107;
        v64 = v108;
        v59 = v104;
        v65 = v106;
        v66 = (uint64_t)v99;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v66, v105, v59);
        v62 = 0;
LABEL_62:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v66, v62, 1, v59);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v66, 1, v59) == 1)
        {
          (*(void (**)(char *, uint64_t))(v102 + 8))(v100, v103);
          sub_1BC384EB4(v66, &qword_1EF431CE0, (void (*)(uint64_t))MEMORY[0x1E0CAE690]);
          v67 = 0;
          v68 = 0;
        }
        else
        {
          v86 = v59;
          v67 = sub_1BC62A37C();
          v68 = v87;
          (*(void (**)(char *, uint64_t))(v102 + 8))(v100, v103);
          (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v66, v86);
        }
        goto LABEL_41;
      }
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v50);
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v50);
    }
  }
  v67 = 0;
  v68 = 0;
  v63 = (_QWORD *)v107;
  v64 = v108;
LABEL_41:
  switch(v63[2])
  {
    case 0:
      goto LABEL_49;
    case 1:
      if (v63[4] == 47 && v63[5] == 0xE100000000000000 || (sub_1BC62D574() & 1) != 0)
        goto LABEL_49;
      goto LABEL_56;
    case 2:
      if ((v63[6] != 0x72656469766F7250 || v63[7] != 0xEE00686372616553) && (sub_1BC62D574() & 1) == 0)
        goto LABEL_56;
LABEL_49:
      v42(v64, v36);
      swift_bridgeObjectRelease();
      *v32 = v67;
      v32[1] = v68;
      v69 = type metadata accessor for HealthRecordsURLParsingResult();
      goto LABEL_59;
    case 3:
      if ((v63[6] != 0x746E756F636341 || v63[7] != 0xE700000000000000) && (sub_1BC62D574() & 1) == 0)
        goto LABEL_56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v70 = v98;
      sub_1BC62A76C();
      v71 = (uint64_t)v70;
      swift_bridgeObjectRelease();
      v72 = v96;
      v73 = v70;
      v74 = v97;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v73, 1, v97) == 1)
      {
        swift_bridgeObjectRelease();
        sub_1BC384EB4(v71, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v75 = v95;
        sub_1BC62BAF8();
        v76 = sub_1BC62BB28();
        v77 = sub_1BC62CAC4();
        if (os_log_type_enabled(v76, v77))
        {
          v78 = (uint8_t *)swift_slowAlloc();
          v79 = swift_slowAlloc();
          v110 = v79;
          *(_DWORD *)v78 = 136446210;
          v80 = sub_1BC47CF14();
          v109 = sub_1BC4991F0(v80, v81, &v110);
          v32 = v90;
          sub_1BC62CFF8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC30A000, v76, v77, "[%{public}s]: this URL is a “view account details” URL but doesn't contain a valid account UUID", v78, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v79, -1, -1);
          MEMORY[0x1BCCF36A8](v78, -1, -1);

          (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v89);
          v42(v64, v36);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v94 + 8))(v75, v89);
LABEL_57:
          v42(v64, v36);
        }
        goto LABEL_26;
      }
      v42(v64, v36);
      v82 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 32);
      v83 = v93;
      v82(v93, v71, v74);
      sub_1BC47AB30();
      v85 = (uint64_t *)((char *)v32 + *(int *)(v84 + 48));
      v82((char *)v32, (uint64_t)v83, v74);
      *v85 = v67;
      v85[1] = v68;
      v69 = type metadata accessor for HealthRecordsURLParsingResult();
LABEL_59:
      swift_storeEnumTagMultiPayload();
      result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v32, 0, 1, v69);
      break;
    default:
LABEL_56:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_57;
  }
  return result;
}

uint64_t sub_1BC47CED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HealthRecordsURLParsingResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC47CF14()
{
  swift_getMetatypeMetadata();
  return sub_1BC62C6E0();
}

uint64_t HealthRecordsURLHandler.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t HealthRecordsURLHandler.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BC47CF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v25;
  uint64_t v26;

  v26 = a5;
  sub_1BC47F82C();
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - v16;
  v18 = sub_1BC62A7B4();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(v17, a1, v18);
  v20 = &v17[*(int *)(v12 + 48)];
  *(_QWORD *)v20 = a2;
  *((_QWORD *)v20 + 1) = a3;
  v19(v14, a4, v18);
  v21 = v26;
  v22 = &v14[*(int *)(v12 + 48)];
  *(_QWORD *)v22 = v26;
  *((_QWORD *)v22 + 1) = a6;
  sub_1BC347F0C((unint64_t *)&qword_1EF429288, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_1BC62C644() & 1) != 0)
  {
    v23 = (a3 | a6) == 0;
    if (a3 && a6)
    {
      if (a2 == v21 && a3 == a6)
        v23 = 1;
      else
        v23 = sub_1BC62D574();
    }
  }
  else
  {
    v23 = 0;
  }
  sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC47F82C);
  sub_1BC348D78((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC47F82C);
  return v23 & 1;
}

uint64_t sub_1BC47D120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1BC47C098(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1BC47D128()
{
  return swift_deallocObject();
}

uint64_t sub_1BC47D138()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t sub_1BC47D174()
{
  return swift_deallocObject();
}

uint64_t sub_1BC47D184(void *a1)
{
  uint64_t v1;

  return sub_1BC47C250(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BC47D18C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC47D19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC47BBA4(a1, a2, a3);
}

uint64_t sub_1BC47D1A4()
{
  return swift_deallocObject();
}

uint64_t sub_1BC47D1B4()
{
  return swift_deallocObject();
}

uint64_t sub_1BC47D1C4(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC47BD68(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1BC47D1CC()
{
  return swift_deallocObject();
}

void _s15HealthRecordsUI0aB16URLParsingResultO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD v67[32];
  uint64_t v68;
  uint64_t v69;
  char *v70;

  v68 = a1;
  v69 = a2;
  v2 = sub_1BC62A604();
  v67[28] = *(_QWORD *)(v2 - 8);
  v67[29] = v2;
  MEMORY[0x1E0C80A78](v2);
  v67[24] = (char *)v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v67[25] = (char *)v67 - v5;
  sub_1BC357210();
  v67[2] = v6;
  MEMORY[0x1E0C80A78](v6);
  v67[3] = (char *)v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v8);
  v67[1] = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v67[4] = (char *)v67 - v11;
  MEMORY[0x1E0C80A78](v12);
  v67[5] = (char *)v67 - v13;
  MEMORY[0x1E0C80A78](v14);
  v67[6] = (char *)v67 - v15;
  MEMORY[0x1E0C80A78](v16);
  v67[7] = (char *)v67 - v17;
  sub_1BC47AB30();
  v67[11] = v18;
  MEMORY[0x1E0C80A78](v18);
  v67[14] = (char *)v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v67[23] = (char *)v67 - v21;
  MEMORY[0x1E0C80A78](v22);
  v67[13] = (char *)v67 - v23;
  MEMORY[0x1E0C80A78](v24);
  v67[26] = (char *)v67 - v25;
  v26 = sub_1BC62A7B4();
  v27 = *(_QWORD *)(v26 - 8);
  v67[30] = v26;
  v67[31] = v27;
  MEMORY[0x1E0C80A78](v26);
  v67[16] = (char *)v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v67[15] = (char *)v67 - v30;
  MEMORY[0x1E0C80A78](v31);
  v67[12] = (char *)v67 - v32;
  MEMORY[0x1E0C80A78](v33);
  v67[27] = (char *)v67 - v34;
  MEMORY[0x1E0C80A78](v35);
  v67[10] = (char *)v67 - v36;
  MEMORY[0x1E0C80A78](v37);
  v67[17] = (char *)v67 - v38;
  v39 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1E0C80A78](v39);
  v67[22] = (char *)v67 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41);
  v67[21] = (char *)v67 - v42;
  MEMORY[0x1E0C80A78](v43);
  v67[20] = (char *)v67 - v44;
  MEMORY[0x1E0C80A78](v45);
  v67[8] = (char *)v67 - v46;
  MEMORY[0x1E0C80A78](v47);
  v67[18] = (char *)v67 - v48;
  MEMORY[0x1E0C80A78](v49);
  v67[19] = (char *)v67 - v50;
  MEMORY[0x1E0C80A78](v51);
  v67[9] = (char *)v67 - v52;
  MEMORY[0x1E0C80A78](v53);
  MEMORY[0x1E0C80A78](v54);
  MEMORY[0x1E0C80A78](v55);
  MEMORY[0x1E0C80A78](v56);
  MEMORY[0x1E0C80A78](v57);
  MEMORY[0x1E0C80A78](v58);
  MEMORY[0x1E0C80A78](v59);
  sub_1BC47F778();
  MEMORY[0x1E0C80A78](v60);
  v62 = (char *)v67 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = (uint64_t)&v62[*(int *)(v63 + 48)];
  sub_1BC397938(v68, (uint64_t)v62);
  v65 = v69;
  v69 = v64;
  sub_1BC397938(v65, v64);
  v70 = v62;
  v66 = (char *)sub_1BC47D764 + 4 * word_1BC64211E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_1BC47D764()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t (*v4)(_QWORD);
  BOOL v6;

  v2 = *(_QWORD *)(v1 - 128);
  sub_1BC397938(v2, (uint64_t)v0);
  v3 = *(unsigned __int8 **)(v1 - 136);
  if (swift_getEnumCaseMultiPayload())
  {
    v6 = 0;
    v4 = (uint64_t (*)(_QWORD))sub_1BC47F778;
  }
  else
  {
    v6 = *v0 == *v3;
    v4 = (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsURLParsingResult;
  }
  sub_1BC348D78(v2, v4);
  return v6;
}

char *initializeBufferWithCopyOfBuffer for HealthRecordsURLParsingResult(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 9u:
        v7 = sub_1BC62A7B4();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 4u:
        v10 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v10;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v11 = sub_1BC62A7B4();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        sub_1BC47AB30();
        v13 = *(int *)(v12 + 48);
        v14 = &a1[v13];
        v15 = (char **)((char *)a2 + v13);
        v16 = v15[1];
        *(_QWORD *)v14 = *v15;
        *((_QWORD *)v14 + 1) = v16;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v17 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v17;
        v18 = a2[3];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = v18;
        v19 = a2[5];
        *((_QWORD *)a1 + 4) = a2[4];
        *((_QWORD *)a1 + 5) = v19;
        *((_QWORD *)a1 + 6) = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v20 = *a2;
        v21 = v20;
        *(_QWORD *)a1 = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v22 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v22;
        sub_1BC397A38();
        v24 = *(int *)(v23 + 48);
        v25 = &a1[v24];
        v26 = (uint64_t)a2 + v24;
        v27 = sub_1BC62A7B4();
        v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v29 = *a2;
        v30 = *a2;
        *(_QWORD *)a1 = v29;
        sub_1BC3979B8();
        v32 = *(int *)(v31 + 48);
        v33 = &a1[v32];
        v34 = (char *)a2 + v32;
        v35 = sub_1BC62A7B4();
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        {
          sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
      case 0xBu:
        v38 = sub_1BC62A604();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for HealthRecordsURLParsingResult(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(id *, uint64_t);
  id *v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 9u:
      goto LABEL_8;
    case 2u:
    case 4u:
      goto LABEL_5;
    case 3u:
      v3 = sub_1BC62A7B4();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      sub_1BC47AB30();
      goto LABEL_5;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      return;
    case 6u:

      return;
    case 7u:
      swift_bridgeObjectRelease();
      sub_1BC397A38();
      a1 = (id *)((char *)a1 + *(int *)(v4 + 48));
LABEL_8:
      v2 = sub_1BC62A7B4();
      goto LABEL_9;
    case 8u:

      sub_1BC3979B8();
      v9 = (id *)((char *)a1 + *(int *)(v8 + 48));
      v10 = sub_1BC62A7B4();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        return;
      v6 = *(void (**)(id *, uint64_t))(v11 + 8);
      v7 = v9;
      v5 = v10;
      goto LABEL_10;
    case 0xAu:
    case 0xBu:
      v2 = sub_1BC62A604();
LABEL_9:
      v5 = v2;
      v6 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
      v7 = a1;
LABEL_10:
      v6(v7, v5);
      break;
    default:
      return;
  }
}

uint64_t *initializeWithCopy for HealthRecordsURLParsingResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 9u:
      v6 = sub_1BC62A7B4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_13;
    case 2u:
    case 4u:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 3u:
      v8 = sub_1BC62A7B4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      sub_1BC47AB30();
      v10 = *(int *)(v9 + 48);
      v11 = (uint64_t *)((char *)a1 + v10);
      v12 = (uint64_t *)((char *)a2 + v10);
      v13 = v12[1];
      *v11 = *v12;
      v11[1] = v13;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 5u:
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      v16 = a2[5];
      a1[4] = a2[4];
      a1[5] = v16;
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 6u:
      v17 = (void *)*a2;
      v18 = v17;
      *a1 = (uint64_t)v17;
      goto LABEL_13;
    case 7u:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      sub_1BC397A38();
      v21 = *(int *)(v20 + 48);
      v22 = (char *)a1 + v21;
      v23 = (uint64_t)a2 + v21;
      v24 = sub_1BC62A7B4();
      v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v22, v23, v24);
      goto LABEL_13;
    case 8u:
      v26 = *a2;
      v27 = (id)*a2;
      *a1 = v26;
      sub_1BC3979B8();
      v29 = *(int *)(v28 + 48);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_1BC62A7B4();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      goto LABEL_13;
    case 0xAu:
    case 0xBu:
      v35 = sub_1BC62A604();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for HealthRecordsURLParsingResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a1 != a2)
  {
    sub_1BC348D78((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsURLParsingResult);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 9u:
        v6 = sub_1BC62A7B4();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_14;
      case 2u:
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 3u:
        v7 = sub_1BC62A7B4();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        sub_1BC47AB30();
        v9 = *(int *)(v8 + 48);
        v10 = (uint64_t *)((char *)a1 + v9);
        v11 = (uint64_t *)((char *)a2 + v9);
        *v10 = *v11;
        v10[1] = v11[1];
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 6u:
        v12 = (void *)*a2;
        v13 = v12;
        *a1 = (uint64_t)v12;
        goto LABEL_14;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        sub_1BC397A38();
        v15 = *(int *)(v14 + 48);
        v16 = (char *)a1 + v15;
        v17 = (uint64_t)a2 + v15;
        v18 = sub_1BC62A7B4();
        v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        goto LABEL_14;
      case 8u:
        v20 = *a2;
        v21 = (id)*a2;
        *a1 = v20;
        sub_1BC3979B8();
        v23 = *(int *)(v22 + 48);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_1BC62A7B4();
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        goto LABEL_14;
      case 0xAu:
      case 0xBu:
        v29 = sub_1BC62A604();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(a1, a2, v29);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for HealthRecordsURLParsingResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 9u:
      v6 = sub_1BC62A7B4();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_10;
    case 3u:
      v7 = sub_1BC62A7B4();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      sub_1BC47AB30();
      *(_OWORD *)((char *)a1 + *(int *)(v8 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 48));
      goto LABEL_10;
    case 7u:
      *a1 = *a2;
      sub_1BC397A38();
      v10 = *(int *)(v9 + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1BC62A7B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      goto LABEL_10;
    case 8u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      sub_1BC3979B8();
      v15 = *(int *)(v14 + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_1BC62A7B4();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      goto LABEL_10;
    case 0xAu:
    case 0xBu:
      v21 = sub_1BC62A604();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for HealthRecordsURLParsingResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_1BC348D78((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsURLParsingResult);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 9u:
        v6 = sub_1BC62A7B4();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_11;
      case 3u:
        v7 = sub_1BC62A7B4();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        sub_1BC47AB30();
        *(_OWORD *)((char *)a1 + *(int *)(v8 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 48));
        goto LABEL_11;
      case 7u:
        *a1 = *a2;
        sub_1BC397A38();
        v10 = *(int *)(v9 + 48);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_1BC62A7B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        goto LABEL_11;
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        sub_1BC3979B8();
        v15 = *(int *)(v14 + 48);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_1BC62A7B4();
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        goto LABEL_11;
      case 0xAu:
      case 0xBu:
        v21 = sub_1BC62A604();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1BC47F614()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v9 = &unk_1BC6421D0;
  v0 = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(v0 - 8) + 64;
    v10 = v2;
    v11 = &unk_1BC6421E8;
    swift_getTupleTypeLayout2();
    v12 = &v8;
    v13 = &unk_1BC6421E8;
    v14 = &unk_1BC642200;
    v15 = &unk_1BC642218;
    swift_getTupleTypeLayout2();
    v16 = &v7;
    sub_1BC384E68(319, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v17 = &v6;
      v18 = v2;
      v4 = sub_1BC62A604();
      if (v5 <= 0x3F)
      {
        v19 = *(_QWORD *)(v4 - 8) + 64;
        v20 = v19;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

uint64_t type metadata accessor for HealthRecordsURLHandler()
{
  return objc_opt_self();
}

uint64_t method lookup function for HealthRecordsURLHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthRecordsURLHandler.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of HealthRecordsURLHandler.parse(url:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

void sub_1BC47F778()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF431CD0)
  {
    type metadata accessor for HealthRecordsURLParsingResult();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF431CD0);
  }
}

uint64_t sub_1BC47F7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC47F82C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF431CD8)
  {
    sub_1BC62A7B4();
    sub_1BC3E4394();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF431CD8);
  }
}

uint64_t sub_1BC47F898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HealthRecordsURLParsingResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void static UIButton.Configuration.pinnedLabsConfiguration(pinned:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;

  v0 = sub_1BC62CF08();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC62CF50();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62CF80();
  v8 = objc_msgSend((id)objc_opt_self(), sel_configurationWithScale_, 2);
  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v9, v8);

  v11 = v10;
  sub_1BC62CF5C();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DC3180], v4);
  sub_1BC62CEFC();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DC3060], v0);
  sub_1BC62CF14();
  v12 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
  sub_1BC62CF44();

}

uint64_t RecordRepresentableTypeClassification<>.isOlder.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62A760();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - v12;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v21 - v16;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 8))(a1, a2, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BC36D71C((uint64_t)v6);
    v18 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v6, v7);
    sub_1BC62A754();
    sub_1BC62A6DC();
    v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v13, v7);
    v18 = sub_1BC62A718();
    v19(v10, v7);
    v19(v17, v7);
  }
  return v18 & 1;
}

uint64_t sub_1BC47FC70(uint64_t a1)
{
  return RecordRepresentableTypeClassification<>.isOlder.getter(a1, (uint64_t)&protocol witness table for HKMedicalRecord);
}

void sub_1BC47FC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;

  v1 = sub_1BC62A8D4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UserDomainConceptViewData();
  sub_1BC3462D8(v0 + *(int *)(v12 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BC36D71C((uint64_t)v7);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v13 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_1BC62A8A4();
    v14 = objc_allocWithZone(MEMORY[0x1E0D2F6D8]);
    v15 = (void *)sub_1BC62A868();
    v16 = objc_msgSend(v14, sel_initWithCalendar_, v15);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v17 = (void *)sub_1BC62A700();
    v18 = (id)HKMostRecentSampleEndDateText();

    if (v18)
    {
      sub_1BC62C680();

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
      __break(1u);
    }
  }
}

void MeaningfulDateStringRepresentable<>.dateString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;

  v4 = sub_1BC62A8D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62A760();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 8))(a1, a2, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1BC36D71C((uint64_t)v10);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v16 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
    sub_1BC62A8A4();
    v17 = objc_allocWithZone(MEMORY[0x1E0D2F6D8]);
    v18 = (void *)sub_1BC62A868();
    v19 = objc_msgSend(v17, sel_initWithCalendar_, v18);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v20 = (void *)sub_1BC62A700();
    v21 = (id)HKMostRecentSampleEndDateText();

    if (v21)
    {
      sub_1BC62C680();

      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t dispatch thunk of MeaningfulDateRepresentable.meaningfulDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MeaningfulDateStringRepresentable.dateString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RecordRepresentableTypeClassification.isOlder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id AttributedValueUnitStringProvider.attributedValueStringForDisplay.getter(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  v4 = (void *)sub_1BC62CDDC();
  v5 = (void *)sub_1BC62CDDC();
  v6 = sub_1BC480708(v4, v5, a1, a2);

  return v6;
}

id AttributedValueUnitStringProvider.attributedValueStringForDisplay(targetWidth:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  int v20;
  BOOL v21;
  id v22;
  void *v23;
  id v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  double v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  unsigned __int8 *v41;
  int v42;
  _QWORD v43[4];
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  char v48;
  uint64_t v49;
  CGRect v50;

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  v10 = (void *)sub_1BC62CDDC();
  v43[3] = *MEMORY[0x1E0DC4B60];
  v46 = sub_1BC62CDDC();
  v43[2] = *MEMORY[0x1E0DC4B10];
  v44 = (void *)sub_1BC62CDDC();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v45 = v3;
  if (v11)
  {
    sub_1BC62C710();
    v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a1);
    v14 = v10;
    if (v13)
      goto LABEL_21;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a1);
  }
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  if (v16)
    v17 = v16;
  else
    v17 = 0xE000000000000000;
  v49 = 0;
  MEMORY[0x1E0C80A78](v15);
  v43[-2] = &v49;
  if ((v17 & 0x1000000000000000) != 0 || !(v17 & 0x2000000000000000 | v18 & 0x1000000000000000))
  {
    sub_1BC62D1CC();
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0)
      goto LABEL_20;
    goto LABEL_14;
  }
  v43[1] = v43;
  if ((v17 & 0x2000000000000000) != 0)
  {
    v47[0] = v18;
    v47[1] = v17 & 0xFFFFFFFFFFFFFFLL;
    v21 = v18 > 0x20u || ((1 << v18) & 0x100003E01) == 0;
    if (!v21 || (v41 = (unsigned __int8 *)_swift_stdlib_strtod_clocale()) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    v42 = *v41;
    swift_bridgeObjectRelease();
    if (v42)
      goto LABEL_20;
LABEL_14:
    v14 = v10;
    goto LABEL_21;
  }
  v43[0] = v43;
  if ((v18 & 0x1000000000000000) != 0)
    v19 = (_BYTE *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v19 = (_BYTE *)sub_1BC62D250();
  sub_1BC4810EC(v19, (BOOL *)v47);
  v20 = LOBYTE(v47[0]);
  swift_bridgeObjectRelease();
  if (v20)
    goto LABEL_14;
LABEL_20:
  v14 = (void *)v46;
LABEL_21:
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a1);
  v22 = v14;
  v23 = v44;
  v24 = sub_1BC480708(v22, v44, a1, a2);
  objc_msgSend(v24, sel_boundingRectWithSize_options_context_, 1, 0, a3, 1.79769313e308);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  objc_msgSend(v10, sel_lineHeight);
  v34 = v33;
  v50.origin.x = v26;
  v50.origin.y = v28;
  v50.size.width = v30;
  v50.size.height = v32;
  if (CGRectGetHeight(v50) - (v34 + v34) >= 2.22044605e-16)
  {
    v35 = v10;
    v36 = v23;
    v37 = (void *)sub_1BC62CDDC();
    v38 = (void *)sub_1BC62CDDC();
    v39 = sub_1BC480708(v37, v38, a1, a2);

    v23 = v38;
    v22 = (id)v46;
    v10 = v24;
    v24 = v39;
  }
  else
  {
    v35 = (void *)v46;
  }

  return v24;
}

uint64_t AttributedValueUnitStringProvider.showNoValue.getter()
{
  return 0;
}

uint64_t AttributedValueUnitStringProvider.shouldStackUnitUnderValueIfNeeded.getter()
{
  return 0;
}

id sub_1BC480708(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t inited;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  void **v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  id v55;
  uint64_t v56;
  void *v57;

  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  if (!v9)
    goto LABEL_10;
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4) & 1) != 0)
    {
      if (qword_1ED6A4888 != -1)
        swift_once();
      v21 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

    }
    sub_1BC34B54C();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BC639590;
    v23 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    *(_QWORD *)(inited + 40) = a1;
    v24 = a1;
    v25 = v23;
    sub_1BC35B6B4(inited);
    v26 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v27 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BC34B608();
    v28 = (id)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

    goto LABEL_19;
  }
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if (v11)
  {
    v57 = a2;
    sub_1BC34B54C();
    v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BC639590;
    v13 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(v12 + 32) = *MEMORY[0x1E0DC1138];
    v56 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
    *(_QWORD *)(v12 + 64) = v56;
    *(_QWORD *)(v12 + 40) = a1;
    swift_bridgeObjectRetain();
    v55 = v13;
    v14 = a1;
    sub_1BC35B6B4(v12);
    v15 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
    v16 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BC34B608();
    v17 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);

    if (((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4) & 1) != 0)
    {
      v19 = sub_1BC62C74C();
      swift_bridgeObjectRelease();
      if (v19 > 5)
      {
        sub_1BC35B6B4(MEMORY[0x1E0DEE9D8]);
        v20 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
LABEL_18:
        v41 = (void *)sub_1BC62C650();
        v42 = (void *)sub_1BC62C53C();
        swift_bridgeObjectRelease();
        v43 = objc_msgSend(v20, sel_initWithString_attributes_, v41, v42);

        objc_msgSend(v18, sel_appendAttributedString_, v43);
        v44 = swift_initStackObject();
        *(_OWORD *)(v44 + 16) = xmmword_1BC6395A0;
        *(_QWORD *)(v44 + 32) = v55;
        *(_QWORD *)(v44 + 40) = v57;
        v45 = (void *)*MEMORY[0x1E0DC1140];
        *(_QWORD *)(v44 + 64) = v56;
        *(_QWORD *)(v44 + 72) = v45;
        v46 = (void *)objc_opt_self();
        v47 = v55;
        v48 = v57;
        v49 = v45;
        v50 = objc_msgSend(v46, sel_secondaryLabelColor);
        *(_QWORD *)(v44 + 104) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
        *(_QWORD *)(v44 + 80) = v50;
        sub_1BC35B6B4(v44);
        v51 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
        v52 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
        v53 = (void *)sub_1BC62C53C();
        swift_bridgeObjectRelease();
        v28 = objc_msgSend(v51, sel_initWithString_attributes_, v52, v53);

        objc_msgSend(v18, sel_appendAttributedString_, v28);
        goto LABEL_19;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v35 = swift_initStackObject();
    v36 = (void **)MEMORY[0x1E0DC1150];
    *(_OWORD *)(v35 + 16) = xmmword_1BC639590;
    v37 = *v36;
    *(_QWORD *)(v35 + 32) = *v36;
    v38 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v39 = v37;
    v40 = objc_msgSend(v38, sel_initWithDouble_, 2.0);
    *(_QWORD *)(v35 + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    *(_QWORD *)(v35 + 40) = v40;
    sub_1BC35B6B4(v35);
    v20 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    goto LABEL_18;
  }
  sub_1BC34B54C();
  v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_1BC639590;
  v30 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(v29 + 32) = *MEMORY[0x1E0DC1138];
  *(_QWORD *)(v29 + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  *(_QWORD *)(v29 + 40) = a1;
  v31 = a1;
  v32 = v30;
  sub_1BC35B6B4(v29);
  v33 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v34 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v28 = (id)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v33, sel_initWithString_attributes_, v34, v28);

LABEL_19:
  return v18;
}

uint64_t HKReferenceRangeViewData.valueDisplay.getter()
{
  return sub_1BC480DEC((SEL *)&selRef_valueString);
}

uint64_t HKReferenceRangeViewData.unitDisplay.getter()
{
  return sub_1BC480DEC((SEL *)&selRef_unitString);
}

uint64_t sub_1BC480DEC(SEL *a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(v1, *a1);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_1BC62C680();

  return v4;
}

uint64_t sub_1BC480E4C(uint64_t a1, uint64_t a2)
{
  return sub_1BC480E64(a1, a2, (SEL *)&selRef_valueString);
}

uint64_t sub_1BC480E58(uint64_t a1, uint64_t a2)
{
  return sub_1BC480E64(a1, a2, (SEL *)&selRef_unitString);
}

uint64_t sub_1BC480E64(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v4 = objc_msgSend(*v3, *a3);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = sub_1BC62C680();

  return v6;
}

id sub_1BC480EC4()
{
  void *v0;
  void *v1;
  id v2;

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  v0 = (void *)sub_1BC62CDDC();
  v1 = (void *)sub_1BC62CDDC();
  v2 = sub_1BC34AB64(v0, v1);

  return v2;
}

id sub_1BC480FAC(void *a1, void *a2)
{
  return sub_1BC34AB64(a1, a2);
}

_BYTE *sub_1BC480FF4@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1BC48105C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  char v4;
  uint64_t var2;

  if (a1)
  {
    a3(&var2);
    if (!v3)
      v4 = var2;
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3)
      v4 = BYTE1(var2);
  }
  return v4 & 1;
}

_QWORD *sub_1BC4810B0@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

_BYTE *sub_1BC4810EC@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.valueDisplay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.unitDisplay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.showNoValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.shouldStackUnitUnderValueIfNeeded.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.attributedValueStringForDisplay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.attributedValueString(forValueFont:unitFont:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

void sub_1BC481188(__int128 *a1, _QWORD *a2)
{
  void **v3;
  void *v4;
  __int128 v5;
  id v6;

  v3 = (void **)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView);
  swift_beginAccess();
  v4 = *v3;
  v5 = *a1;
  *(_OWORD *)v3 = *a1;
  v6 = (id)v5;

}

id sub_1BC4811F0()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView);
  swift_beginAccess();
  v2 = *v1;
  v3 = *v1;
  return v2;
}

void sub_1BC481240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;

  v5 = v2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView;
  swift_beginAccess();
  v6 = *(void **)v5;
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;

}

uint64_t (*sub_1BC48129C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC4812E0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientSubscriber);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC481348()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1BC481390(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientSubscriber);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1BC4813E0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC481424(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1BC34E674(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1BC34E718(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC481490@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider;
  swift_beginAccess();
  return sub_1BC34E674(v3, a1);
}

uint64_t sub_1BC4814E0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1BC34E718(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC481540())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1BC4815E8()
{
  __asm { BR              X9 }
}

uint64_t sub_1BC481624()
{
  id v0;
  void *v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, 21);
  if (!v0)
    return 0;
  v1 = v0;
  v2 = sub_1BC62CBF0();

  return v2;
}

id sub_1BC48171C()
{
  unsigned __int8 *v0;
  objc_class *v1;
  id result;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  int v10;
  id v11;
  id v12;
  unsigned __int8 *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD v29[4];
  objc_super v30;

  swift_getObjectType();
  v1 = (objc_class *)type metadata accessor for RecordCategoryViewController();
  v30.receiver = v0;
  v30.super_class = v1;
  objc_msgSendSuper2(&v30, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_28;
  }
  v3 = result;
  v4 = sub_1BC484980();
  objc_msgSend(v3, sel_addSubview_, v4);

  v5 = sub_1BC484980();
  objc_msgSend(v5, sel_hk_alignConstraintsWithViewController_, v0);

  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v6 = result;
  v28 = (id)objc_opt_self();
  v7 = objc_msgSend(v28, sel_systemGroupedBackgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  v8 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v8, sel__setSupportsTwoLineLargeTitles_, 1);

  v9 = objc_msgSend(v0, sel_navigationItem);
  v10 = v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  if (v10 == 2)
    v11 = objc_msgSend(v0, sel_editButtonItem);
  else
    v11 = 0;
  v12 = sub_1BC4858B4();
  v29[3] = v1;
  v29[0] = v0;
  v13 = v0;
  v14 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v29, (uint64_t)sel_tapToRadar_);
  sub_1BC348D78((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BC39BD68);
  v29[0] = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v15 = v11;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v12)
  {
    v16 = v12;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v14)
  {
    v17 = v14;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  sub_1BC34B6A0(0, &qword_1EF4295C8);
  v18 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setRightBarButtonItems_, v18);

  if (v10 == 2)
  {
    v29[0] = sub_1BC485308();
    sub_1BC486CEC(0, (unint64_t *)&qword_1EF42D840, (uint64_t (*)(uint64_t))sub_1BC3EA894, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC3EA90C();
    v19 = sub_1BC62C0BC();
    swift_release();
    *(_QWORD *)&v13[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsCanceller] = v19;
    swift_release();
  }
  LOBYTE(v29[0]) = v10;
  DisplayCategory.Kind.hkDisplayCategory.getter();
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, sel_color);

    if (v22)
    {
      sub_1BC379B20((unint64_t *)&unk_1EF431D10, v23, (uint64_t (*)(uint64_t))type metadata accessor for RecordCategoryViewController, (uint64_t)&protocol conformance descriptor for RecordCategoryViewController);
      sub_1BC62B540();
LABEL_26:

      sub_1BC4831B8();
      sub_1BC357158(0, (unint64_t *)&qword_1EF429250, (uint64_t (*)(uint64_t))sub_1BC3571B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1BC639590;
      v26 = sub_1BC62C500();
      v27 = sub_1BC379B20(&qword_1EF429268, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2F348], MEMORY[0x1E0D2F340]);
      *(_QWORD *)(v25 + 32) = v26;
      *(_QWORD *)(v25 + 40) = v27;
      sub_1BC62CBC0();
      swift_unknownObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }

  }
  result = objc_msgSend(v13, sel_view);
  if (result)
  {
    v24 = result;
    v21 = objc_msgSend(v28, sel_systemBackgroundColor);
    objc_msgSend(v24, sel_setBackgroundColor_, v21);

    goto LABEL_26;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RecordCategoryViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BC481CC0(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD v8[4];
  objc_super v9;

  v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for RecordCategoryViewController();
  objc_msgSendSuper2(&v9, sel_viewIsAppearing_, a1 & 1);
  v4 = (uint64_t)v2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider;
  swift_beginAccess();
  sub_1BC34E674(v4, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1Tm(v8, v8[3]);
  v5 = objc_msgSend(v2, sel_traitCollection);
  sub_1BC62B21C();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  v6 = objc_msgSend(v2, sel_traitCollection);
  sub_1BC62CCC8();

  return sub_1BC62CBCC();
}

id sub_1BC481DF8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id result;
  void *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for RecordCategoryViewController();
  objc_msgSendSuper2(&v14, sel_viewWillLayoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController];
  if (!v2)
    goto LABEL_4;
  result = objc_msgSend(v2, sel_view);
  if (result)
  {
    v4 = result;
    v5 = sub_1BC484980();
    objc_msgSend(v5, sel_bounds);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;

    objc_msgSend(v4, sel_setFrame_, v7, v9, v11, v13);
LABEL_4:
    sub_1BC379B20((unint64_t *)&unk_1EF431D10, v1, (uint64_t (*)(uint64_t))type metadata accessor for RecordCategoryViewController, (uint64_t)&protocol conformance descriptor for RecordCategoryViewController);
    return (id)sub_1BC62B534();
  }
  __break(1u);
  return result;
}

void sub_1BC482040(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v5;
  void *v10;
  id v11;
  id v12;
  char v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  objc_class *v19;
  _QWORD v20[6];
  objc_super v21;

  v5 = v4;
  v10 = *(void **)&v4[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController];
  if (v10
    && (sub_1BC34B6A0(0, &qword_1EF429570),
        v11 = a1,
        v12 = v10,
        v13 = sub_1BC62CEB4(),
        v11,
        v12,
        (v13 & 1) != 0))
  {
    v14 = objc_msgSend(v5, sel_presentedViewController);

    if (!v14)
    {
      if (a3)
      {
        v20[4] = a3;
        v20[5] = a4;
        v20[0] = MEMORY[0x1E0C809B0];
        v20[1] = 1107296256;
        v20[2] = sub_1BC39BE70;
        v20[3] = &block_descriptor_33;
        v15 = _Block_copy(v20);
        swift_retain();
        swift_release();
      }
      else
      {
        v15 = 0;
      }
      v19 = (objc_class *)type metadata accessor for RecordCategoryViewController();
      v21.receiver = v5;
      v21.super_class = v19;
      objc_msgSendSuper2(&v21, sel_presentViewController_animated_completion_, v11, a2 & 1, v15);
      _Block_release(v15);
    }
  }
  else
  {
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v5;
    *(_QWORD *)(v16 + 24) = a1;
    *(_BYTE *)(v16 + 32) = a2 & 1;
    *(_QWORD *)(v16 + 40) = a3;
    *(_QWORD *)(v16 + 48) = a4;
    v17 = a1;
    v18 = v5;
    sub_1BC38F084(a3);
    sub_1BC482C34(0, sub_1BC486048, v16);
    swift_release();
  }
}

void sub_1BC482204(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  objc_class *v9;
  _QWORD v10[6];
  objc_super v11;

  if (a4)
  {
    v10[4] = a4;
    v10[5] = a5;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 1107296256;
    v10[2] = sub_1BC39BE70;
    v10[3] = &block_descriptor_30_0;
    v8 = _Block_copy(v10);
    swift_retain();
    swift_release();
  }
  else
  {
    v8 = 0;
  }
  v9 = (objc_class *)type metadata accessor for RecordCategoryViewController();
  v11.receiver = a1;
  v11.super_class = v9;
  objc_msgSendSuper2(&v11, sel_presentViewController_animated_completion_, a2, a3 & 1, v8);
  _Block_release(v8);
}

void sub_1BC482384(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  v2 = v1;
  v4 = objc_msgSend(v2, sel_traitCollection);
  if (!v4)
  {
    if (!a1)
      return;
LABEL_8:
    sub_1BC4824A0(1);
    return;
  }
  v5 = v4;
  if (!a1)
  {

    goto LABEL_8;
  }
  sub_1BC34B6A0(0, &qword_1ED6A58F8);
  v6 = a1;
  v7 = v5;
  v8 = sub_1BC62CEB4();

  if ((v8 & 1) == 0)
    goto LABEL_8;
}

void sub_1BC4824A0(char a1)
{
  char *v1;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;

  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_horizontalSizeClass);

  if (v4 == (id)2 && v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_shouldShowPinnedLabsTip] == 1)
  {
    if ((a1 & 1) != 0)
    {
      v5 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer;
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer], sel_invalidate);
      v6 = objc_msgSend((id)objc_opt_self(), sel_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_, v1, sel_showPinnedLabsPopoverIfNeeded, 0, 0, 1.0);
      v7 = *(void **)&v1[v5];
      *(_QWORD *)&v1[v5] = v6;

    }
    else
    {
      sub_1BC4828E4();
    }
  }
  else
  {
    sub_1BC482C34(1, 0, 0);
  }
}

uint64_t sub_1BC482598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  id v15[2];

  v1 = v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v15 - v3;
  sub_1BC486070();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC48573C();
  v10 = (void *)sub_1BC3E9CD8();
  swift_release();
  v15[1] = v10;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v15[0] = (id)sub_1BC62CC74();
  v11 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  v12 = MEMORY[0x1E0C95D78];
  sub_1BC486DB4(0, &qword_1ED6A4D30, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC486140((unint64_t *)&unk_1ED6A4D20, &qword_1ED6A4D30, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v12, MEMORY[0x1E0C95D90]);
  sub_1BC3ABB20();
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v4);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC379B20(&qword_1EF431D70, 255, (uint64_t (*)(uint64_t))sub_1BC486070, MEMORY[0x1E0C95CB8]);
  v13 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_cancellable) = v13;
  return swift_release();
}

void sub_1BC4827DC(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  void *v6;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_BYTE *)MEMORY[0x1BCCF37A4](v3);
  if (v4)
  {
    v4[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_shouldShowPinnedLabsTip] = v2;

  }
  swift_beginAccess();
  v5 = MEMORY[0x1BCCF37A4](v3);
  if (v5)
  {
    v6 = (void *)v5;
    sub_1BC4824A0(1);

  }
}

void sub_1BC482864(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;

  if ((a1 & 1) != 0)
  {
    v2 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer), sel_invalidate);
    v3 = objc_msgSend((id)objc_opt_self(), sel_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_, v1, sel_showPinnedLabsPopoverIfNeeded, 0, 0, 1.0);
    v4 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v3;

  }
  else
  {
    sub_1BC4828E4();
  }
}

void sub_1BC4828E4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  id v15;
  char v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer], sel_invalidate);
  v3 = *(void **)&v1[v2];
  *(_QWORD *)&v1[v2] = 0;

  v4 = objc_msgSend(v1, sel_navigationController);
  if (!v4)
    goto LABEL_12;
  v5 = v4;
  v6 = objc_msgSend(v4, sel_viewControllers);

  sub_1BC34B6A0(0, &qword_1EF429570);
  v7 = sub_1BC62C878();

  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease();
    v4 = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_11;
LABEL_4:
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_27:
    v10 = (id)MEMORY[0x1BCCF24CC](v9, v7);
    goto LABEL_9;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v9 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_29:
    __break(1u);
    return;
  }
  v10 = *(id *)(v7 + 8 * v9 + 32);
LABEL_9:
  v25 = v10;
  swift_bridgeObjectRelease();
  v4 = v25;
LABEL_12:
  if (v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category] != 2)
  {
LABEL_24:

    return;
  }
  v26 = v4;
  v11 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController;
  v12 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController];
  if (v12)
  {
    v13 = objc_msgSend(v12, sel_presentingViewController);
    if (v13)
    {

LABEL_22:
      v4 = v26;
      goto LABEL_24;
    }
  }
  if (v26)
  {
    sub_1BC34B6A0(0, &qword_1EF429570);
    v14 = v1;
    v15 = v26;
    v16 = sub_1BC62CEB4();

    if ((v16 & 1) == 0
      || (v17 = objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile], sel_healthStore), v18 = objc_allocWithZone((Class)type metadata accessor for LabsOnboardingViewController()), v19 = sub_1BC526920(1, v17), v20 = *(void **)&v1[v11], *(_QWORD *)&v1[v11] = v19, v20, (v21 = *(void **)&v1[v11]) == 0))
    {
      v4 = v15;
      goto LABEL_24;
    }
    v22 = v21;
    v26 = objc_msgSend(v22, sel_popoverPresentationController);
    if (v26)
    {
      objc_msgSend(v26, sel_setPermittedArrowDirections_, 15);
      v23 = v26;
      v24 = objc_msgSend(v14, sel_editButtonItem);
      objc_msgSend(v23, sel_setBarButtonItem_, v24);

    }
    objc_msgSend(v14, sel_presentViewController_animated_completion_, v22, 1, 0);

    goto LABEL_22;
  }
}

void sub_1BC482C34(char a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  _QWORD v16[6];

  v4 = v3;
  v8 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer), sel_invalidate);
  v9 = *(void **)(v4 + v8);
  *(_QWORD *)(v4 + v8) = 0;

  v10 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController;
  v11 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v12, sel_presentingViewController);

    if (v13)
    {
      if (a2)
      {
        v16[4] = a2;
        v16[5] = a3;
        v16[0] = MEMORY[0x1E0C809B0];
        v16[1] = 1107296256;
        v16[2] = sub_1BC39BE70;
        v16[3] = &block_descriptor_6_3;
        a2 = _Block_copy(v16);
        swift_retain();
        swift_release();
      }
      objc_msgSend(v12, sel_dismissViewControllerAnimated_completion_, a1 & 1, a2);
      _Block_release(a2);

      v14 = *(void **)(v4 + v10);
      *(_QWORD *)(v4 + v10) = 0;

      return;
    }

  }
  if (a2)
    ((void (*)(void))a2)();
  v15 = *(void **)(v4 + v10);
  *(_QWORD *)(v4 + v10) = 0;

}

void sub_1BC482D90()
{
  _BYTE *v0;
  char *v1;
  id v2;
  unint64_t v3;
  char v4;
  char v5;

  v5 = v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  v1 = sub_1BC463080(&v5);
  v2 = sub_1BC484A80();
  v3 = (unint64_t)objc_msgSend(v2, sel_selectedSegmentIndex);

  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 >= *((_QWORD *)v1 + 2))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = v1[v3 + 32];
  swift_bridgeObjectRelease();
  v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment] = v4;
  if (!objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
LABEL_9:
    __break(1u);
    return;
  }
  if (objc_msgSend(v0, sel_isViewLoaded))
  {
    sub_1BC483AB8(v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding], *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount], v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount + 8]);
    sub_1BC483BE0();
    _s15HealthRecordsUI28RecordCategoryViewControllerC016didDismissSearchG0yySo08UISearchG0CF_0();
  }
}

id sub_1BC482F84(char a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id result;
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for RecordCategoryViewController();
  v5 = a1 & 1;
  v6 = a2 & 1;
  objc_msgSendSuper2(&v10, sel_setEditing_animated_, v5, v6);
  v7 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController;
  v8 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController];
  if (v8)
  {
    result = objc_msgSend(v8, sel_isEditing);
    if ((_DWORD)result == (_DWORD)v5)
      return result;
    v8 = *(void **)&v2[v7];
  }
  return objc_msgSend(v8, sel_setEditing_animated_, v5, v6);
}

void sub_1BC483064()
{
  char *v0;
  void *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16[3];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile];
  v3 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  v4 = v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  v6 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 8];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 16];
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 40];
  v8 = *((_QWORD *)v3 + 6);
  v9 = *((_QWORD *)v3 + 7);
  v10 = (void *)*((_QWORD *)v3 + 8);
  v16[0] = v4;
  v16[1] = (uint64_t)v6;
  v16[2] = v5;
  v17 = *(_OWORD *)(v3 + 24);
  v18 = v7;
  v19 = v8;
  v20 = v9;
  v21 = v10;
  objc_allocWithZone((Class)type metadata accessor for PDFConfigurationViewController());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v10;
  v12 = v2;
  v13 = v6;
  v14 = PDFConfigurationViewController.init(profile:account:category:)(v12, 0, v16);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B0]), sel_initWithRootViewController_, v14);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v15, 1, 0);

}

uint64_t sub_1BC4831B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62[4];
  uint64_t v63;

  v1 = v0;
  v2 = sub_1BC62CC5C();
  v60 = *(_QWORD *)(v2 - 8);
  v61 = v2;
  MEMORY[0x1E0C80A78](v2);
  v55 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1BC62CCE0();
  v54 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v50 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC486B34(0);
  v6 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  v57 = v6;
  MEMORY[0x1E0C80A78](v5);
  v51 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC486B58(0, &qword_1EF431FD8, v8, sub_1BC486BF8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BA0]);
  v10 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  v59 = v10;
  MEMORY[0x1E0C80A78](v9);
  v53 = (char *)&v45 - v11;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v45 - v13;
  sub_1BC486C18();
  v16 = v15;
  v47 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC486B58(0, &qword_1EF432000, v19, sub_1BC486E70, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
  v21 = *(_QWORD *)(v20 - 8);
  v48 = v20;
  v49 = v21;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v45 - v22;
  v24 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_countProvider);
  swift_retain();
  sub_1BC62BF0C();
  swift_release();
  v25 = v62[0];
  v26 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_accountStateProvider);
  swift_retain();
  sub_1BC62BF0C();
  swift_release();
  sub_1BC483964((uint64_t)v25, v63);
  swift_bridgeObjectRelease();
  v62[0] = *(id *)(v24 + 32);
  v63 = *(_QWORD *)(v26 + 16);
  v27 = MEMORY[0x1E0C95F88];
  sub_1BC486CEC(0, (unint64_t *)&qword_1ED6A4D50, (uint64_t (*)(uint64_t))sub_1BC486D54, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F88]);
  sub_1BC486DB4(0, (unint64_t *)&qword_1ED6A4D60, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v27);
  sub_1BC486E10();
  sub_1BC486140(&qword_1EF4295A8, (unint64_t *)&qword_1ED6A4D60, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v27, MEMORY[0x1E0C95FB8]);
  sub_1BC62C020();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v62[0] = (id)sub_1BC62CC74();
  v28 = sub_1BC62CC38();
  v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v46(v14, 1, 1, v28);
  sub_1BC486E70();
  sub_1BC3ABB20();
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v14);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v16);
  v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_1BC486E90;
  *(_QWORD *)(v30 + 24) = v29;
  sub_1BC486EE8();
  v31 = v48;
  v32 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v23, v31);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCanceller) = v32;
  swift_release();
  v33 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1BC62CB90();
  __swift_project_boxed_opaque_existential_1Tm(v62, (uint64_t)v62[3]);
  v34 = (void *)sub_1BC62A9D0();
  v35 = v50;
  sub_1BC62CCEC();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v62);
  v62[0] = (id)sub_1BC62CC74();
  v36 = v46;
  v46(v14, 1, 1, v28);
  sub_1BC4240B0();
  v38 = v51;
  v37 = v52;
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v14);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v35, v37);
  v39 = v55;
  sub_1BC62CC50();
  v62[0] = (id)sub_1BC62CC74();
  v36(v14, 1, 1, v28);
  sub_1BC486BF8();
  v40 = v53;
  v41 = v56;
  sub_1BC62C08C();
  sub_1BC3A4334((uint64_t)v14);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v61);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v41);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC486F58();
  v42 = v58;
  v43 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v42);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_aToZCanceller) = v43;
  return swift_release();
}

void sub_1BC48384C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCF37A4](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1BC483964(a1, a2 & 1);

  }
}

void sub_1BC4838B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCF37A4](v2);
  if (v3)
  {
    v4 = (_BYTE *)v3;
    if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    {
      if (objc_msgSend(v4, sel_isViewLoaded))
      {
        sub_1BC483AB8(v4[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding], *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount], v4[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount + 8]);
        sub_1BC483BE0();
        _s15HealthRecordsUI28RecordCategoryViewControllerC016didDismissSearchG0yySo08UISearchG0CF_0();
      }

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1BC483964(uint64_t a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  __int128 v5;
  __int128 v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  _BOOL4 v12;
  unsigned __int8 *v13;
  int v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v3 = v2;
  v5 = *(_OWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 48];
  v18 = *(_OWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 32];
  v19 = v5;
  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 64];
  v6 = *(_OWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 16];
  v16 = *(_OWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  v17 = v6;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
  sub_1BC359A94((uint64_t)&v16);
  sub_1BC5594EC(&v16);
  if ((v9 & 1) == 0)
  {
    sub_1BC359AF8((uint64_t)&v16);
LABEL_6:
    v13 = &v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding];
    v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding] = a2 & 1;
LABEL_7:
    if (objc_msgSend((id)objc_opt_self(), sel_isMainThread, v16, v17, v18, v19, v20))
    {
      if (objc_msgSend(v3, sel_isViewLoaded))
      {
        sub_1BC483AB8(*v13, *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount], v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount + 8]);
        sub_1BC483BE0();
        _s15HealthRecordsUI28RecordCategoryViewControllerC016didDismissSearchG0yySo08UISearchG0CF_0();
      }
    }
    else
    {
      __break(1u);
    }
    return;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v8);
  sub_1BC359AF8((uint64_t)&v16);
  v11 = &v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount];
  v12 = (v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount + 8] & 1) != 0
     || *(_QWORD *)v11 < 1;
  *(_QWORD *)v11 = v10;
  v11[8] = 0;
  v13 = &v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding];
  v14 = v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding];
  v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding] = a2 & 1;
  if (v14 != (a2 & 1) || v12)
    goto LABEL_7;
}

uint64_t sub_1BC483AB8(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned __int8 v6;

  if ((a3 & 1) != 0)
  {
    if ((result & 1) != 0)
      v4 = 1;
    else
      v4 = -128;
  }
  else if (a2 < 1)
  {
    v4 = result & 1;
  }
  else
  {
    result = sub_1BC483B64((char *)&v6);
    v4 = v6 | 0x40;
  }
  v5 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_displayMode);
  if (v5 >> 6)
  {
    if (v5 >> 6 != 1)
    {
      if (v4 == 128)
        return result;
      goto LABEL_17;
    }
    if ((v4 & 0xC0) != 0x40 || ((v5 ^ v4) & 0x3F) != 0)
LABEL_17:
      *(_BYTE *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_displayMode) = v4;
  }
  else if (v4 > 0x3Fu || ((v5 ^ v4) & 1) != 0)
  {
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_1BC483B64@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;
  char v6;

  result = sub_1BC484774();
  if ((result & 1) == 0)
  {
    v5 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment);
    goto LABEL_8;
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category) != 2)
  {
LABEL_7:
    v5 = 1;
    goto LABEL_8;
  }
  v6 = 2;
  v4 = sub_1BC463080(&v6);
  if (!*((_QWORD *)v4 + 2))
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v5 = v4[32];
  result = swift_bridgeObjectRelease();
LABEL_8:
  *a1 = v5;
  return result;
}

void sub_1BC483BE0()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BOOL4 v6;
  _BOOL4 v7;
  __int16 v8;
  id v9;
  id v10;
  _BOOL4 v11;
  _BOOL4 v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  __int16 v21;
  uint64_t v22;
  _BOOL4 v23;
  uint64_t v24;
  _BOOL4 v25;

  v1 = v0;
  v2 = sub_1BC62CB84();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    if ((v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_displayMode] & 0xC0) == 0x40)
    {
      v6 = sub_1BC484774();
      v7 = v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category] == 2;
    }
    else
    {
      v7 = 0;
      v6 = 1;
    }
    v8 = *(_WORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_modePickerState];
    if (v8 == 2 || (v11 = (v8 & 1) == 0, v12 = (v8 & 0x100) == 0, v6 == v11) || ((v7 ^ v12) & 1) == 0)
    {
      v23 = v7;
      v24 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_modePickerState;
      v9 = objc_msgSend(v1, sel_navigationItem);
      v25 = v6;
      if (v6)
        v10 = 0;
      else
        v10 = sub_1BC484A80();
      v13 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentPalette;
      v14 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentPalette];
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0D2BBE0], v2);
      v15 = v14;
      v16 = sub_1BC62CB78();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v17 = *(void **)&v1[v13];
      *(_QWORD *)&v1[v13] = v16;

      v18 = objc_msgSend(v1, sel_navigationItem);
      v19 = v18;
      if (v23)
      {
        v20 = sub_1BC485054();
        objc_msgSend(v19, sel_setSearchController_, v20);

        v19 = objc_msgSend(v1, sel_navigationItem);
        objc_msgSend(v19, sel_setHidesSearchBarWhenScrolling_, 0);
        v21 = 256;
      }
      else
      {
        objc_msgSend(v18, sel_setSearchController_, 0);
        v21 = 0;
      }

      *(_WORD *)&v1[v24] = v21 | v25;
    }
  }
  else
  {
    __break(1u);
  }
}

void _s15HealthRecordsUI28RecordCategoryViewControllerC016didDismissSearchG0yySo08UISearchG0CF_0()
{
  id v0;
  char *v1;
  char *v2;
  uint64_t v3;
  int v4;
  id v5;
  void *v6;
  char v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t (*v26)();
  id v27;
  __int128 v28[2];
  uint64_t v29;
  id v30;
  _QWORD aBlock[3];
  void *v32;
  uint64_t (*v33)();
  uint64_t v34;

  v2 = v1;
  if (!objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    __break(1u);
    goto LABEL_23;
  }
  v3 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController;
  v0 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController];
  v4 = v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching];
  v27 = v0;
  if (v4 == 1)
  {
    v5 = sub_1BC484ED4();
  }
  else
  {
    v5 = sub_1BC48439C();
    if (!v5)
    {
LABEL_8:

      return;
    }
  }
  v6 = v5;
  if (v0)
  {
    sub_1BC34B6A0(0, &qword_1EF429570);
    v0 = v27;
    v27 = v6;
    v7 = sub_1BC62CEB4();

    if ((v7 & 1) != 0)
    {

      goto LABEL_8;
    }
    objc_msgSend(v2, sel_setEditing_animated_, 0, 1);
    objc_msgSend(v0, sel_setEditing_animated_, 0, 1);
    objc_msgSend(v0, sel_willMoveToParentViewController_, 0);
    v8 = objc_msgSend(v0, sel_view);
    if (!v8)
      goto LABEL_26;
    v9 = v8;
    objc_msgSend(v8, sel_removeFromSuperview);

  }
  else
  {
    objc_msgSend(v2, sel_setEditing_animated_, 0, 1);
  }
  objc_msgSend(v0, sel_removeFromParentViewController);
  v10 = *(void **)&v2[v3];
  *(_QWORD *)&v2[v3] = v6;
  v11 = v6;

  objc_msgSend(v11, sel_willMoveToParentViewController_, v2);
  v12 = objc_msgSend(v11, sel_view);
  if (!v12)
    goto LABEL_24;
  v13 = v12;
  objc_msgSend(v12, sel_setPreservesSuperviewLayoutMargins_, 1);

  v14 = sub_1BC484980();
  v15 = objc_msgSend(v11, sel_view);
  if (!v15)
  {
LABEL_25:

    __break(1u);
LABEL_26:

    __break(1u);
    return;
  }
  v16 = v15;
  objc_msgSend(v14, sel_addSubview_, v15);

  objc_msgSend(v2, sel_addChildViewController_, v11);
  objc_msgSend(v11, sel_didMoveToParentViewController_, v2);
  v17 = objc_opt_self();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v2;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BC486AB8;
  *(_QWORD *)(v19 + 24) = v18;
  v33 = sub_1BC3AABB0;
  v34 = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC4E2FD0;
  v32 = &block_descriptor_27_1;
  v20 = _Block_copy(aBlock);
  v21 = v2;
  swift_retain();
  swift_release();
  objc_msgSend((id)v17, sel_performWithoutAnimation_, v20);
  _Block_release(v20);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v17 & 1) != 0)
  {
LABEL_23:
    __break(1u);
LABEL_24:

    __break(1u);
    goto LABEL_25;
  }
  v22 = (id *)&v21[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView];
  swift_beginAccess();
  v23 = objc_msgSend(*v22, sel_superview);

  if (v23)
  {
    v30 = v11;
    sub_1BC34B6A0(0, &qword_1EF429570);
    sub_1BC35817C(0, &qword_1EF431FC0);
    v24 = v11;
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BC34E718(v28, (uint64_t)aBlock);
      v25 = v32;
      v26 = v33;
      __swift_project_boxed_opaque_existential_1Tm(aBlock, (uint64_t)v32);
      (*((void (**)(void *, uint64_t (*)()))v26 + 1))(v25, v26);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
    }
    else
    {
      v29 = 0;
      memset(v28, 0, sizeof(v28));

      sub_1BC348D78((uint64_t)v28, (uint64_t (*)(_QWORD))sub_1BC486AD0);
    }
    swift_release();
  }
  else
  {
    swift_release();

  }
}

void sub_1BC484310(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;

  v2 = objc_msgSend(a1, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_setNeedsLayout);

    v4 = objc_msgSend(a1, sel_view);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_layoutIfNeeded);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1BC48439C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  void *v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  objc_class *v13;
  _BYTE *v14;
  uint64_t *v15;
  id v16;
  id v17;
  id v18;
  objc_class *v20;
  _BYTE *v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  objc_super v35;
  char v36[8];
  void *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  objc_super v44;

  v1 = sub_1BC62BB34();
  MEMORY[0x1E0C80A78](v1);
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_displayMode);
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
      __asm { BR              X10 }
    v20 = (objc_class *)type metadata accessor for NoDataViewController();
    v21 = objc_allocWithZone(v20);
    *(_QWORD *)&v21[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_accountUpgradeTile] = 0;
    *(_QWORD *)&v21[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_profile] = 0;
    v22 = &v21[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_category];
    *(_OWORD *)v22 = 0u;
    *((_OWORD *)v22 + 1) = 0u;
    *((_OWORD *)v22 + 2) = 0u;
    *((_OWORD *)v22 + 3) = 0u;
    *((_QWORD *)v22 + 8) = 0;
    v21[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_style] = 1;
    v35.receiver = v21;
    v35.super_class = v20;
    return objc_msgSendSuper2(&v35, sel_initWithNibName_bundle_, 0, 0);
  }
  else
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile);
    if ((v2 & 1) != 0)
    {
      v23 = v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category;
      v24 = *(_BYTE *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
      v26 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 8);
      v25 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 16);
      v27 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 40);
      v28 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 48);
      v29 = *(_QWORD *)(v23 + 56);
      v30 = *(void **)(v23 + 64);
      v36[0] = v24;
      v37 = v26;
      v38 = v25;
      v39 = *(_OWORD *)(v23 + 24);
      v40 = v27;
      v41 = v28;
      v42 = v29;
      v43 = v30;
      objc_allocWithZone((Class)type metadata accessor for PromotionListViewController());
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31 = v30;
      v32 = v3;
      v33 = v26;
      return sub_1BC499F54(v32, v36);
    }
    else
    {
      v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
      v34 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
      v5 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 8);
      v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 16);
      v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 24);
      v8 = v4[4];
      v9 = v4[5];
      v10 = v4[6];
      v12 = v4[7];
      v11 = (void *)v4[8];
      v13 = (objc_class *)type metadata accessor for NoDataViewController();
      v14 = objc_allocWithZone(v13);
      *(_QWORD *)&v14[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_accountUpgradeTile] = 0;
      *(_QWORD *)&v14[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_profile] = v3;
      v15 = (uint64_t *)&v14[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_category];
      *v15 = v34;
      v15[1] = (uint64_t)v5;
      v15[2] = v6;
      v15[3] = v7;
      v15[4] = v8;
      v15[5] = v9;
      v15[6] = v10;
      v15[7] = v12;
      v15[8] = (uint64_t)v11;
      v14[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_style] = 0;
      v44.receiver = v14;
      v44.super_class = v13;
      v16 = v3;
      v17 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = v11;
      return objc_msgSendSuper2(&v44, sel_initWithNibName_bundle_, 0, 0, v34);
    }
  }
}

BOOL sub_1BC484774()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  _QWORD v9[4];

  v1 = sub_1BC62BB34();
  MEMORY[0x1E0C80A78](v1);
  sub_1BC62CB90();
  __swift_project_boxed_opaque_existential_1Tm(v9, v9[3]);
  v2 = (void *)sub_1BC62A9D0();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  sub_1BC62AC10();
  v3 = (void *)MEMORY[0x1BCCEFEBC]();
  LOBYTE(v9[0]) = *(_BYTE *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
  v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile), sel_healthStore);
  v5 = objc_msgSend(v4, sel_profileIdentifier);

  v6 = static FeedItem.predicateForHealthRecordsData(categoryKind:sourceProfile:)((unsigned __int8 *)v9, v5);
  objc_msgSend(v3, sel_setPredicate_, v6);

  v7 = sub_1BC62CD34();
  return v7 == 0;
}

id sub_1BC484980()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___scrollView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___scrollView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___scrollView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C28]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;

    v6 = (void *)sub_1BC484980();
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

    v7 = (void *)sub_1BC484980();
    objc_msgSend(v7, sel_setShowsVerticalScrollIndicator_, 0);

    v8 = (void *)sub_1BC484980();
    objc_msgSend(v8, sel_setContentInsetAdjustmentBehavior_, 2);

    v9 = (void *)sub_1BC484980();
    objc_msgSend(v9, sel_setPreservesSuperviewLayoutMargins_, 1);

    v10 = (void *)sub_1BC484980();
    v11 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v10;
    v3 = v10;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_1BC484A80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___modePicker;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___modePicker);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___modePicker);
  }
  else
  {
    v4 = sub_1BC484AE0(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC484AE0(uint64_t a1)
{
  char v2;
  char *v3;
  int64_t v4;
  id v5;
  void *v6;
  id v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD v14[5];

  v2 = *(_BYTE *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
  LOBYTE(v14[0]) = v2;
  v3 = sub_1BC463080(v14);
  v4 = *((_QWORD *)v3 + 2);
  if (v4)
  {
    v14[4] = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD7C8(0, v4, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3C58]);
  v6 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithItems_, v6);

  LOBYTE(v14[0]) = v2;
  v8 = sub_1BC463080(v14);
  v9 = sub_1BC610374(*(_BYTE *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment), (uint64_t)v8);
  v11 = v10;
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    v12 = 0;
  else
    v12 = v9;
  objc_msgSend(v7, sel_setSelectedSegmentIndex_, v12);
  objc_msgSend(v7, sel_addTarget_action_forControlEvents_, a1, sel_modePickerDidChange_, 4096);
  objc_msgSend(v7, sel_sizeToFit);
  return v7;
}

id sub_1BC484ED4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  char v19[8];
  void *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController);
  }
  else
  {
    v5 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 8);
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 16);
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 40);
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 48);
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 56);
    v9 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 64);
    v19[0] = *(_BYTE *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
    v20 = v5;
    v21 = v4;
    v22 = *(_OWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 24);
    v23 = v6;
    v24 = v7;
    v25 = v8;
    v26 = v9;
    v10 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile);
    v11 = objc_allocWithZone((Class)type metadata accessor for CategorySearchViewController());
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = v9;
    v13 = v10;
    v14 = v5;
    v15 = sub_1BC550F24(v19, v13);
    v16 = *(void **)v1;
    *(_QWORD *)v1 = v15;
    *(_QWORD *)(v1 + 8) = &off_1E74E3420;
    v3 = v15;

    v2 = 0;
  }
  v17 = v2;
  return v3;
}

void sub_1BC484FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;

  v3 = (_QWORD *)(v2
                + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController);
  v4 = *(void **)(v2
                + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController);
  *v3 = a1;
  v3[1] = a2;

}

void (*sub_1BC485004(id *a1))(uint64_t a1)
{
  void *v1;
  void *v3;

  a1[2] = v1;
  *a1 = sub_1BC484ED4();
  a1[1] = v3;
  return sub_1BC485038;
}

void sub_1BC485038(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(void **)(v1
                + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController);
  *(_OWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController) = *(_OWORD *)a1;

}

id sub_1BC485054()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C40]), sel_init);
    objc_msgSend(v4, sel_setDelegate_, v0);
    objc_msgSend(v4, sel_setSearchResultsUpdater_, v0);
    objc_msgSend(v4, sel_setObscuresBackgroundDuringPresentation_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC485100(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController) = a1;

}

void (*sub_1BC485114(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1BC485054();
  return sub_1BC485148;
}

void sub_1BC485148(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController) = v2;

}

uint64_t sub_1BC485160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___listManager;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___listManager))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___listManager);
  }
  else
  {
    v3 = v0;
    if (qword_1ED6A4878 != -1)
      swift_once();
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile), sel_healthStore);
    v5 = objc_msgSend(v4, sel_profileIdentifier);

    MEMORY[0x1E0C80A78](v6);
    sub_1BC62AA6C();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
    sub_1BC62BA74();
    sub_1BC379B20((unint64_t *)&qword_1ED6A4B90, 255, v7, MEMORY[0x1E0D2D480]);
    swift_retain();
    sub_1BC62B888();

    swift_release();
    v2 = v9;
    *(_QWORD *)(v3 + v1) = v9;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1BC485308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___viewDataPublisher;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___viewDataPublisher))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___viewDataPublisher);
  }
  else
  {
    v3 = sub_1BC485160();
    sub_1BC4CEF80(v3, objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile), sel_healthStore));
    v5 = v4;
    v7 = v6;
    v2 = sub_1BC4CBD24(v3, v4, v8, v6);

    swift_release();
    swift_release();
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_1BC4853D8()
{
  return sub_1BC4854D0(&OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___udcListViewController, (uint64_t (*)(uint64_t))sub_1BC4853EC);
}

id sub_1BC4853EC(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  Class v7;

  v2 = *(_BYTE *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
  v3 = sub_1BC485160();
  v4 = *(id *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile);
  v5 = sub_1BC485308();
  type metadata accessor for LabsCategoryListDataProvider();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 16) = objc_msgSend(v4, sel_healthStore);
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v5;
  sub_1BC4869C8(0);
  return sub_1BC485EBC(v2, v6, objc_allocWithZone(v7), (uint64_t (*)(_QWORD))sub_1BC4869C8);
}

void *sub_1BC4854BC()
{
  return sub_1BC4854D0(&OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___latestViewContoller, (uint64_t (*)(uint64_t))sub_1BC485538);
}

void *sub_1BC4854D0(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  v5 = v4;
  if (v4 == (void *)1)
  {
    v5 = (void *)a2(v2);
    v6 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v5;
    v7 = v5;
    sub_1BC407EFC(v6);
  }
  sub_1BC407F0C(v4);
  return v5;
}

id sub_1BC485538(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  Class v7;

  v2 = *(_BYTE *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
  v3 = sub_1BC485160();
  v4 = *(id *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile);
  v5 = sub_1BC485308();
  type metadata accessor for LabsCategoryListDataProvider();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(v6 + 48) = 1;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 16) = objc_msgSend(v4, sel_healthStore);
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v5;
  sub_1BC48698C(0);
  return sub_1BC485EBC(v2, v6, objc_allocWithZone(v7), (uint64_t (*)(_QWORD))sub_1BC48698C);
}

id sub_1BC48560C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___lastUpdatedViewController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___lastUpdatedViewController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___lastUpdatedViewController);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_factory), sel_makeTimelineViewControllerForCategory_showsInitialSearchBar_usingProfile_filterPredicatesByType_, *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 64), 1, *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile), 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC4856A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___alphabeticalViewController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___alphabeticalViewController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___alphabeticalViewController);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_factory), sel_makeAlphabeticalViewControllerForCategory_usingProfile_, *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 64), *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

_QWORD *sub_1BC48573C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  id v4;
  uint64_t inited;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___labsOnboardingTileDisplayEvaluator;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___labsOnboardingTileDisplayEvaluator))
  {
    v2 = *(_QWORD **)(v0
                    + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___labsOnboardingTileDisplayEvaluator);
  }
  else
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile);
    v4 = objc_msgSend(v3, sel_healthStore);
    type metadata accessor for UserDomainConceptDataProvider();
    inited = swift_initStackObject();
    v6 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(inited + 16) = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(inited + 24) = v6;
    *(_QWORD *)(inited + 32) = v4;
    v7 = objc_msgSend(v3, sel_healthStore);
    v8 = sub_1BC485308();
    swift_setDeallocating();
    swift_retain();
    sub_1BC49521C(v6, inited);
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRelease();

    type metadata accessor for LabsOnboardingTileDisplayEvaluator();
    v2 = (_QWORD *)swift_allocObject();
    v2[3] = v8;
    v2[4] = 0;
    v2[2] = v7;
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1BC4858B4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  char *v2;
  int v3;
  id v4;
  id v5;
  uint64_t v6;
  unsigned __int8 *v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  _QWORD v17[4];

  v1 = 8;
  v2 = &byte_1E74D25B8;
  while (1)
  {
    v3 = *v2++;
    if (v3 == v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category])
      break;
    if (!--v1)
      return 0;
  }
  if (qword_1ED6A4888 != -1)
    swift_once();
  v5 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v6 = type metadata accessor for RecordCategoryViewController();
  v17[3] = v6;
  v17[0] = v0;
  v7 = v0;
  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (v6)
  {
    v9 = __swift_project_boxed_opaque_existential_1Tm(v17, v6);
    v10 = *(_QWORD *)(v6 - 8);
    v11 = MEMORY[0x1E0C80A78](v9);
    v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v10 + 16))(v13, v11);
    v14 = sub_1BC62D568();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
  else
  {
    v14 = 0;
  }
  v15 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v4 = objc_msgSend(v15, sel_initWithTitle_style_target_action_, v8, 0, v14, sel_presentPDFViewController, v17[0]);

  swift_unknownObjectRelease();
  return v4;
}

id RecordCategoryViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void RecordCategoryViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RecordCategoryViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordCategoryViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall RecordCategoryViewController.willPresentSearchController(_:)(UISearchController *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setEditing_animated_, 0, 1);
}

Swift::Void __swiftcall RecordCategoryViewController.willDismissSearchController(_:)(UISearchController *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching) = 0;
}

id sub_1BC485EBC(char a1, uint64_t a2, _BYTE *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v13;
  objc_super v14;
  _QWORD v15[5];

  v15[3] = type metadata accessor for LabsCategoryListDataProvider();
  v8 = sub_1BC379B20(&qword_1EF431FA0, 255, (uint64_t (*)(uint64_t))type metadata accessor for LabsCategoryListDataProvider, (uint64_t)&unk_1BC63B394);
  a3[qword_1EF42D0F8] = 1;
  v15[4] = v8;
  v15[0] = a2;
  a3[qword_1EF42D0F0] = a1;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3610]), sel_init);
  v14.receiver = a3;
  v14.super_class = (Class)a4(0);
  v10 = objc_msgSendSuper2(&v14, sel_initWithCollectionViewLayout_, v9);

  sub_1BC34E674((uint64_t)v15, (uint64_t)&v13);
  v11 = v10;
  sub_1BC62B7E0();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v11;
}

uint64_t sub_1BC485FB8(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, sel_traitCollection);
  sub_1BC62CCC8();

  return sub_1BC62CBCC();
}

uint64_t sub_1BC48600C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

void sub_1BC486048()
{
  uint64_t v0;

  sub_1BC482204(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

void sub_1BC486070()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF431D68)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC486DB4(255, &qword_1ED6A4D30, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC486140((unint64_t *)&unk_1ED6A4D20, &qword_1ED6A4D30, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v0, MEMORY[0x1E0C95D90]);
    sub_1BC3ABB20();
    v1 = sub_1BC62BE70();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF431D68);
  }
}

uint64_t sub_1BC486140(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC486DB4(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC486180()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC4861A4(char *a1)
{
  uint64_t v1;

  sub_1BC4827DC(a1, v1);
}

void sub_1BC4861AC()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCanceller] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_aToZCanceller] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsCanceller] = 0;
  v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_shouldShowPinnedLabsTip] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_cancellable] = 0;
  v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding] = 0;
  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController] = 0;
  v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching] = 0;
  v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView];
  sub_1BC62B144();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v4 = MEMORY[0x1E0D2AF30];
  *v2 = v3;
  v2[1] = v4;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientSubscriber] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer] = 0;
  *(_WORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_modePickerState] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentPalette] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___scrollView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___modePicker] = 0;
  v5 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___changeProvider] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___listManager] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___viewDataPublisher] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___udcListViewController] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___latestViewContoller] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___lastUpdatedViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___alphabeticalViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___labsOnboardingTileDisplayEvaluator] = 0;

  sub_1BC62D394();
  __break(1u);
}

void _s15HealthRecordsUI28RecordCategoryViewControllerC19updateSearchResults3forySo08UISearchG0C_tF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  _QWORD v21[2];

  v1 = v0;
  v2 = sub_1BC62A2BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC485054();
  v7 = objc_msgSend(v6, sel_searchBar);

  v8 = objc_msgSend(v7, sel_text);
  if (!v8)
    goto LABEL_11;
  v9 = sub_1BC62C680();
  v11 = v10;

  v21[0] = v9;
  v21[1] = v11;
  sub_1BC62A2A4();
  sub_1BC36E2AC();
  v12 = sub_1BC62D028();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = v12 & 0xFFFFFFFFFFFFLL;
  if (!v15)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    *(_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching) = 0;
    goto LABEL_12;
  }
  v16 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching) & 1) == 0)
  {
    if (qword_1ED6A3198 != -1)
      swift_once();
    sub_1BC4E4704(1, 0);
  }
  v17 = sub_1BC484ED4();
  v19 = v18;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v19 + 16))(v12, v14, ObjectType, v19);

  *(_BYTE *)(v1 + v16) = 1;
LABEL_12:
  _s15HealthRecordsUI28RecordCategoryViewControllerC016didDismissSearchG0yySo08UISearchG0CF_0();
}

id sub_1BC486560@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  __int128 *v3;
  __int128 v4;

  v3 = (__int128 *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return (id)v4;
}

uint64_t sub_1BC4865B8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientSubscriber);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1BC486610@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider;
  swift_beginAccess();
  return sub_1BC34E674(v3, a2);
}

id sub_1BC486668@<X0>(_QWORD *a1@<X8>)
{
  id result;
  uint64_t v3;

  result = sub_1BC484ED4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1BC486690(__int128 *a1, _QWORD *a2)
{
  __int128 v2;
  id v3;
  id v4;

  v4 = *(id *)(*a2
             + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController);
  v2 = *a1;
  *(_OWORD *)(*a2
            + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController) = *a1;
  v3 = (id)v2;

}

id sub_1BC4866D0@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1BC485054();
  *a1 = result;
  return result;
}

void sub_1BC4866F8(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController) = *a1;
  v3 = v2;

}

uint64_t method lookup function for RecordCategoryViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientSubscriber.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientSubscriber.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientSubscriber.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientColorProvider.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientColorProvider.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientColorProvider.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.sidebarSelectionIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.updatePinnedLabsPopoverVisibility(delayed:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2E0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.setUpPinnedLabsTipVisibilityPublisher()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2E8))();
}

uint64_t dispatch thunk of RecordCategoryViewController.showPinnedLabsPopover(delayed:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2F0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.showPinnedLabsPopoverIfNeeded()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of RecordCategoryViewController.hidePinnedLabsPopoverIfNeeded(animated:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x300))();
}

uint64_t dispatch thunk of RecordCategoryViewController.resultViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3D0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.resultViewController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3D8))();
}

uint64_t dispatch thunk of RecordCategoryViewController.resultViewController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3E0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.searchController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3E8))();
}

uint64_t dispatch thunk of RecordCategoryViewController.searchController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3F0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.searchController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3F8))();
}

void sub_1BC48698C(uint64_t a1)
{
  sub_1BC4869E4(a1, &qword_1EF431F90, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, sub_1BC4869A8);
}

uint64_t sub_1BC4869A8()
{
  return sub_1BC379B20(&qword_1EF431F98, 255, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, (uint64_t)&protocol conformance descriptor for UDCRecentItem);
}

void sub_1BC4869C8(uint64_t a1)
{
  sub_1BC4869E4(a1, &qword_1EF431FA8, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem, sub_1BC486A48);
}

void sub_1BC4869E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4();
    v10 = type metadata accessor for UDCListCollectionViewController(a1, v7, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_1BC486A48()
{
  return sub_1BC379B20((unint64_t *)&unk_1EF431FB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem, (uint64_t)&protocol conformance descriptor for UDCAlphabeticalItem);
}

uint64_t sub_1BC486A68()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BC486A8C()
{
  uint64_t v0;

  return sub_1BC58018C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC486A94()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC486AB8()
{
  uint64_t v0;

  sub_1BC484310(*(void **)(v0 + 16));
}

uint64_t sub_1BC486AC0()
{
  return swift_deallocObject();
}

void sub_1BC486AD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF431FC8)
  {
    sub_1BC35817C(255, &qword_1EF431FC0);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF431FC8);
  }
}

void sub_1BC486B34(uint64_t a1)
{
  sub_1BC486B58(a1, &qword_1EF42F378, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], sub_1BC4240B0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
}

void sub_1BC486B58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    v11[2] = a4();
    v11[3] = sub_1BC3ABB20();
    v9 = a5(a1, v11);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC486BF8()
{
  return sub_1BC379B20(&qword_1EF431FE0, 255, (uint64_t (*)(uint64_t))sub_1BC486B34, MEMORY[0x1E0C95CB8]);
}

void sub_1BC486C18()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF431FE8)
  {
    v0 = MEMORY[0x1E0C95F88];
    sub_1BC486CEC(255, (unint64_t *)&qword_1ED6A4D50, (uint64_t (*)(uint64_t))sub_1BC486D54, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F88]);
    sub_1BC486DB4(255, (unint64_t *)&qword_1ED6A4D60, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v0);
    sub_1BC486E10();
    sub_1BC486140(&qword_1EF4295A8, (unint64_t *)&qword_1ED6A4D60, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v0, MEMORY[0x1E0C95FB8]);
    v1 = sub_1BC62BDE0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF431FE8);
  }
}

void sub_1BC486CEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BC486D54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4DC8)
  {
    sub_1BC35E728();
    v0 = sub_1BC62C59C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4DC8);
  }
}

void sub_1BC486DB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BC486E10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF431FF0;
  if (!qword_1EF431FF0)
  {
    sub_1BC486CEC(255, (unint64_t *)&qword_1ED6A4D50, (uint64_t (*)(uint64_t))sub_1BC486D54, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F88]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF431FF0);
  }
  return result;
}

uint64_t sub_1BC486E70()
{
  return sub_1BC379B20(&qword_1EF432008, 255, (uint64_t (*)(uint64_t))sub_1BC486C18, MEMORY[0x1E0C95698]);
}

void sub_1BC486E90(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_1BC48384C(a1, a2, v2);
}

uint64_t sub_1BC486E98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC486EBC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

unint64_t sub_1BC486EE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF432010;
  if (!qword_1EF432010)
  {
    sub_1BC486B58(255, &qword_1EF432000, (uint64_t (*)(uint64_t))sub_1BC486C18, sub_1BC486E70, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95CA8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95CB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF432010);
  }
  return result;
}

void sub_1BC486F50(uint64_t a1)
{
  uint64_t v1;

  sub_1BC4838B8(a1, v1);
}

unint64_t sub_1BC486F58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF432018;
  if (!qword_1EF432018)
  {
    sub_1BC486B58(255, &qword_1EF431FD8, (uint64_t (*)(uint64_t))sub_1BC486B34, sub_1BC486BF8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BA0]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95BB0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF432018);
  }
  return result;
}

uint64_t sub_1BC486FD8(unint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  void *v25;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v24 = 0;
    v1 = 0;
    v2 = 0;
    v3 = sub_1BC62D2F8() | 0x8000000000000000;
  }
  else
  {
    v4 = -1 << *(_BYTE *)(a1 + 32);
    v1 = ~v4;
    v24 = a1 + 64;
    v5 = -v4;
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v2 = v6 & *(_QWORD *)(a1 + 64);
    v3 = a1;
  }
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v23 = (unint64_t)(v1 + 64) >> 6;
  if ((v3 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v2)
    {
      v10 = (v2 - 1) & v2;
      v11 = __clz(__rbit64(v2)) | (v8 << 6);
      v12 = v8;
      goto LABEL_29;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v15 >= v23)
      goto LABEL_36;
    v16 = *(_QWORD *)(v24 + 8 * v15);
    v12 = v8 + 1;
    if (!v16)
    {
      v12 = v8 + 2;
      if (v8 + 2 >= v23)
        goto LABEL_36;
      v16 = *(_QWORD *)(v24 + 8 * v12);
      if (!v16)
      {
        v12 = v8 + 3;
        if (v8 + 3 >= v23)
          goto LABEL_36;
        v16 = *(_QWORD *)(v24 + 8 * v12);
        if (!v16)
        {
          v12 = v8 + 4;
          if (v8 + 4 >= v23)
            goto LABEL_36;
          v16 = *(_QWORD *)(v24 + 8 * v12);
          if (!v16)
          {
            v12 = v8 + 5;
            if (v8 + 5 >= v23)
              goto LABEL_36;
            v16 = *(_QWORD *)(v24 + 8 * v12);
            if (!v16)
            {
              v17 = v8 + 6;
              while (v23 != v17)
              {
                v16 = *(_QWORD *)(v24 + 8 * v17++);
                if (v16)
                {
                  v12 = v17 - 1;
                  goto LABEL_28;
                }
              }
LABEL_36:
              sub_1BC3583F4();
              return (uint64_t)v9;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_29:
    v18 = 8 * v11;
    v19 = *(void **)(*(_QWORD *)(v3 + 56) + v18);
    v13 = *(id *)(*(_QWORD *)(v3 + 48) + v18);
    v14 = v19;
    if (!v13)
      goto LABEL_36;
    while (1)
    {
      v20 = sub_1BC62CA28();

      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1BC3B6680(0, v9[2] + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v22 = v9[2];
      v21 = v9[3];
      if (v22 >= v21 >> 1)
      {
        result = (uint64_t)sub_1BC3B6680((_QWORD *)(v21 > 1), v22 + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v9[2] = v22 + 1;
      v9[v22 + 4] = v20;
      v8 = v12;
      v2 = v10;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1BC62D364())
      {
        sub_1BC34B6A0(0, &qword_1ED6A48A0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v25;
        swift_unknownObjectRelease();
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v14 = v25;
        swift_unknownObjectRelease();
        v12 = v8;
        v10 = v2;
        if (v25)
          continue;
      }
      goto LABEL_36;
    }
  }
  __break(1u);
  return result;
}

void sub_1BC487338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  id v11;
  unint64_t v12;
  int64_t v13;
  id v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;

  v1 = a1;
  v24 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC62D0DC();
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    sub_1BC35E2D8((unint64_t *)&qword_1ED6A58E0, &qword_1ED6A58D8);
    sub_1BC62CA1C();
    v1 = v19;
    v17 = v20;
    v2 = v21;
    v3 = v22;
    v4 = v23;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v16 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_1BC62D13C())
      goto LABEL_36;
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v18;
    swift_unknownObjectRelease();
    v10 = v3;
    v8 = v4;
    if (!v18)
      goto LABEL_36;
LABEL_26:
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A88]), sel_initWithSampleType_predicate_, v11, 0);

    v3 = v10;
    v4 = v8;
    if (v14)
    {
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
      v3 = v10;
      v4 = v8;
    }
  }
  if (v4)
  {
    v8 = (v4 - 1) & v4;
    v9 = __clz(__rbit64(v4)) | (v3 << 6);
    v10 = v3;
LABEL_25:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v9);
    if (!v11)
      goto LABEL_36;
    goto LABEL_26;
  }
  v10 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v10 >= v16)
      goto LABEL_36;
    v12 = *(_QWORD *)(v17 + 8 * v10);
    if (!v12)
    {
      v13 = v3 + 2;
      if (v3 + 2 >= v16)
        goto LABEL_36;
      v12 = *(_QWORD *)(v17 + 8 * v13);
      if (v12)
        goto LABEL_23;
      v13 = v3 + 3;
      if (v3 + 3 >= v16)
        goto LABEL_36;
      v12 = *(_QWORD *)(v17 + 8 * v13);
      if (v12)
        goto LABEL_23;
      v13 = v3 + 4;
      if (v3 + 4 >= v16)
        goto LABEL_36;
      v12 = *(_QWORD *)(v17 + 8 * v13);
      if (v12)
      {
LABEL_23:
        v10 = v13;
      }
      else
      {
        v10 = v3 + 5;
        if (v3 + 5 >= v16)
          goto LABEL_36;
        v12 = *(_QWORD *)(v17 + 8 * v10);
        if (!v12)
        {
          v15 = v3 + 6;
          while (v16 != v15)
          {
            v12 = *(_QWORD *)(v17 + 8 * v15++);
            if (v12)
            {
              v10 = v15 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_1BC3583F4();
          return;
        }
      }
    }
LABEL_24:
    v8 = (v12 - 1) & v12;
    v9 = __clz(__rbit64(v12)) + (v10 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

_QWORD *UserDomainConceptDataProvider.__allocating_init(healthStore:)(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = (_QWORD *)swift_allocObject();
  v3 = MEMORY[0x1E0DEE9E0];
  result[2] = MEMORY[0x1E0DEE9E0];
  result[3] = v3;
  result[4] = a1;
  return result;
}

uint64_t static RecordAnchorPublisherError.== infix(_:_:)()
{
  return 1;
}

uint64_t RecordAnchorPublisherError.hash(into:)()
{
  return sub_1BC62D67C();
}

id sub_1BC487700()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_predicateForMedicalRecordWithState_, 0);
  qword_1EF459EB0 = (uint64_t)result;
  return result;
}

uint64_t static UserDomainConceptDataProvider.UserDomainConceptDataProviderError.== infix(_:_:)()
{
  return 1;
}

_QWORD *UserDomainConceptDataProvider.init(healthStore:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9E0];
  v1[2] = MEMORY[0x1E0DEE9E0];
  v1[3] = v2;
  v1[4] = a1;
  return v1;
}

uint64_t UserDomainConceptDataProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  swift_retain();
  v1 = swift_bridgeObjectRetain();
  sub_1BC49521C(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  v2 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t UserDomainConceptDataProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  swift_retain();
  v1 = swift_bridgeObjectRetain();
  sub_1BC49521C(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  v2 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC4878D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  sub_1BC495380();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1BC495468;
  *(_QWORD *)(v7 + 24) = v1;
  sub_1BC495784(0, &qword_1EF432028, &qword_1EF42D030, &qword_1EF42C208, 0x1E0CB6CE8);
  sub_1BC495400();
  swift_retain();
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF432038, (uint64_t (*)(uint64_t))sub_1BC495380, MEMORY[0x1E0C96148]);
  v8 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t sub_1BC487A04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1BC495784(0, &qword_1EF432028, &qword_1EF42D030, &qword_1EF42C208, 0x1E0CB6CE8);
  swift_allocObject();
  swift_retain();
  result = sub_1BC62BF60();
  *a1 = result;
  return result;
}

void sub_1BC487A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  _QWORD v14[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = MEMORY[0x1E0DEE9D8];
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = sub_1BC4962F4;
  v8[3] = v6;
  v8[4] = v7;
  v9 = objc_allocWithZone(MEMORY[0x1E0CB6D28]);
  v14[4] = sub_1BC4965F0;
  v14[5] = v8;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC48BFF8;
  v14[3] = &block_descriptor_146;
  v10 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  v11 = objc_msgSend(v9, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, 0, 0, 0, 0, v10);
  _Block_release(v10);
  swift_release();
  v12 = v11;
  v13 = (void *)sub_1BC62C650();
  objc_msgSend(v12, sel_setDebugIdentifier_, v13);

  objc_msgSend(*(id *)(a3 + 32), sel_executeQuery_, v12);
  swift_release();

}

void sub_1BC487C24(int a1, void *a2, int a3, char a4, id a5, void (*a6)(id, uint64_t), uint64_t a7, uint64_t a8)
{
  id v10;
  _QWORD *v13;
  id v14;
  uint64_t v15;

  if (a5)
  {
    v10 = a5;
    a6(a5, 1);

  }
  else
  {
    v13 = (_QWORD *)(a8 + 16);
    if (a2)
    {
      swift_beginAccess();
      v14 = a2;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
      swift_endAccess();
    }
    if ((a4 & 1) != 0)
    {
      swift_beginAccess();
      v15 = swift_bridgeObjectRetain();
      a6((id)v15, 0);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BC487D4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  sub_1BC495498(0, &qword_1ED6A3668, &qword_1ED6A3638, (void (*)(uint64_t))sub_1BC495520, &qword_1ED6A3630);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = v2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1BC495694;
  *(_QWORD *)(v10 + 24) = v9;
  sub_1BC495A04(0, &qword_1ED6A3638, (void (*)(uint64_t))sub_1BC495520);
  sub_1BC495650(&qword_1ED6A3630, &qword_1ED6A3638, (void (*)(uint64_t))sub_1BC495520);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC62BF78();
  sub_1BC49569C();
  v11 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

uint64_t sub_1BC487EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1BC495A04(0, &qword_1ED6A3638, (void (*)(uint64_t))sub_1BC495520);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  result = sub_1BC62BF60();
  *a3 = result;
  return result;
}

void sub_1BC487F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  _QWORD aBlock[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = swift_allocObject();
  v10 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + 16) = MEMORY[0x1E0DEE9D8];
  v11 = swift_allocObject();
  swift_retain();
  *(_QWORD *)(v11 + 16) = sub_1BC35CCBC(v10);
  if (a3)
  {
    v12 = *(_QWORD *)(a3 + 16);
    v13 = MEMORY[0x1E0DEE9D8];
    if (v12)
    {
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_1BC62D28C();
      v14 = (uint64_t *)(a3 + 32);
      do
      {
        v15 = *v14++;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v15);
        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
        --v12;
      }
      while (v12);
      v13 = aBlock[0];
    }
    v16 = sub_1BC58C3A4(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = sub_1BC4963A8;
  v17[3] = v8;
  v17[4] = v16;
  v17[5] = v9;
  v17[6] = v11;
  v18 = objc_allocWithZone(MEMORY[0x1E0CB6D28]);
  aBlock[4] = sub_1BC496590;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC48BFF8;
  aBlock[3] = &block_descriptor_134;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v20 = objc_msgSend(v18, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, 0, 0, 0, 0, v19);
  _Block_release(v19);
  swift_release();
  v21 = v20;
  v22 = (void *)sub_1BC62C650();
  objc_msgSend(v21, sel_setDebugIdentifier_, v22);

  objc_msgSend(*(id *)(a4 + 32), sel_executeQuery_, v21);
  swift_release();
  swift_release();

}

void sub_1BC4881E4(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  int v24;
  id v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t isUniquelyReferenced_nonNull_native;
  id v36;
  void *v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  _QWORD *v52;
  _QWORD *v53;
  char v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  _QWORD *v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  _QWORD *v73;
  id v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  _QWORD *v80;
  _QWORD *v81;

  v16 = sub_1BC62A7B4();
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    v21 = a5;
    ((void (*)(void *, _QWORD, uint64_t))a6)(a5, 0, 1);

    return;
  }
  v78 = v17;
  v79 = v20;
  v77 = v18;
  v72 = a7;
  v73 = (_QWORD *)(a9 + 16);
  v80 = (_QWORD *)(a10 + 16);
  if (a2)
  {
    objc_opt_self();
    v22 = swift_dynamicCastObjCClass();
    if (v22)
    {
      v23 = (void *)v22;
      v24 = a4;
      if (a8)
      {
        v25 = a2;
        v26 = objc_msgSend(v23, sel_categoryTypes);
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
        v27 = sub_1BC62C878();

        v28 = sub_1BC58C3A4(v27);
        swift_bridgeObjectRelease();
        sub_1BC4887E0(v28, a8);
        v30 = v29;
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0)
        {
          v31 = v73;
          swift_beginAccess();
          v25 = v25;
          MEMORY[0x1BCCF1B30]();
          if (*(_QWORD *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          sub_1BC62C8D8();
          sub_1BC62C890();
          swift_endAccess();
        }

      }
      else
      {
        v32 = v73;
        swift_beginAccess();
        MEMORY[0x1BCCF1B30](a2);
        if (*(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();
        swift_endAccess();
      }
      a4 = v24;
    }
    objc_opt_self();
    v33 = swift_dynamicCastObjCClass();
    if (v33)
    {
      v34 = v33;
      isUniquelyReferenced_nonNull_native = a2;
      v36 = objc_msgSend((id)v34, sel_linkCollection);
      if (v36)
      {
        v37 = v36;
        v38 = objc_msgSend(v36, sel_links);

        sub_1BC34B6A0(0, &qword_1EF4320D8);
        v39 = sub_1BC62C878();

        v71 = a4;
        if (v39 >> 62)
        {
LABEL_43:
          swift_bridgeObjectRetain();
          v40 = sub_1BC62D3B8();
          swift_bridgeObjectRelease();
          v41 = (uint64_t)v79;
          if (v40)
            goto LABEL_19;
        }
        else
        {
          v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
          v41 = (uint64_t)v79;
          if (v40)
          {
LABEL_19:
            v70 = a6;
            v75 = v39;
            v76 = v39 & 0xC000000000000001;
            a6 = 4;
            while (1)
            {
              v46 = a6 - 4;
              if (v76)
              {
                v47 = (id)MEMORY[0x1BCCF24CC](a6 - 4, v39);
                v48 = a6 - 3;
                if (__OFADD__(v46, 1))
                  goto LABEL_40;
              }
              else
              {
                v47 = *(id *)(v39 + 8 * a6);
                v48 = a6 - 3;
                if (__OFADD__(v46, 1))
                {
LABEL_40:
                  __break(1u);
LABEL_41:
                  __break(1u);
LABEL_42:
                  __break(1u);
                  goto LABEL_43;
                }
              }
              v49 = v34;
              v50 = v47;
              v51 = objc_msgSend(v47, sel_targetUUID);
              sub_1BC62A79C();

              v52 = v80;
              swift_beginAccess();
              v39 = isUniquelyReferenced_nonNull_native;
              v74 = (id)isUniquelyReferenced_nonNull_native;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v81 = (_QWORD *)*v52;
              v53 = v81;
              *v52 = 0x8000000000000000;
              v34 = sub_1BC559014(v41);
              v55 = v53[2];
              v56 = (v54 & 1) == 0;
              v57 = v55 + v56;
              if (__OFADD__(v55, v56))
                goto LABEL_41;
              v58 = v54;
              if (v53[3] >= v57)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                {
                  v61 = v81;
                  if ((v54 & 1) != 0)
                    goto LABEL_20;
                }
                else
                {
                  sub_1BC5A66E0();
                  v61 = v81;
                  if ((v58 & 1) != 0)
                    goto LABEL_20;
                }
              }
              else
              {
                sub_1BC3C561C(v57, isUniquelyReferenced_nonNull_native);
                v59 = sub_1BC559014((uint64_t)v79);
                if ((v58 & 1) != (v60 & 1))
                {
                  sub_1BC62D5EC();
                  __break(1u);
                  return;
                }
                v34 = v59;
                v61 = v81;
                if ((v58 & 1) != 0)
                {
LABEL_20:
                  v42 = v61[7];
                  v43 = 8 * v34;

                  v34 = v49;
                  *(_QWORD *)(v42 + v43) = v49;
                  v44 = v77;
                  isUniquelyReferenced_nonNull_native = v78;
                  goto LABEL_21;
                }
              }
              v61[(v34 >> 6) + 8] |= 1 << v34;
              v44 = v77;
              isUniquelyReferenced_nonNull_native = v78;
              (*(void (**)(unint64_t, char *, uint64_t))(v77 + 16))(v61[6] + *(_QWORD *)(v77 + 72) * v34, v79, v78);
              *(_QWORD *)(v61[7] + 8 * v34) = v49;
              v62 = v61[2];
              v63 = __OFADD__(v62, 1);
              v64 = v62 + 1;
              if (v63)
                goto LABEL_42;
              v34 = v49;
              v61[2] = v64;
LABEL_21:
              *v80 = v61;
              swift_bridgeObjectRelease();
              v45 = *(void (**)(char *, uint64_t))(v44 + 8);
              v41 = (uint64_t)v79;
              v45(v79, isUniquelyReferenced_nonNull_native);
              swift_endAccess();

              ++a6;
              isUniquelyReferenced_nonNull_native = v39;
              v39 = v75;
              if (v48 == v40)
              {

                swift_bridgeObjectRelease();
                a6 = v70;
                goto LABEL_45;
              }
            }
          }
        }

        swift_bridgeObjectRelease();
LABEL_45:
        LOBYTE(a4) = v71;
      }
      else
      {

      }
    }
  }
  if ((a4 & 1) != 0)
  {
    v65 = v80;
    swift_beginAccess();
    v66 = *v65;
    v67 = v73;
    swift_beginAccess();
    v68 = *v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ((void (*)(uint64_t, uint64_t, _QWORD))a6)(v66, v68, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1BC4887E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  char v29;
  uint64_t v30;
  id v31;
  char v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v2 = a2;
  v4 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (!sub_1BC62D118())
      return;
  }
  else if (!*(_QWORD *)(a2 + 16))
  {
    return;
  }
  v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (!sub_1BC62D118())
      return;
  }
  else if (!*(_QWORD *)(a1 + 16))
  {
    return;
  }
  if (!v4)
  {
    v6 = *(_QWORD *)(v2 + 16);
    if (v5)
      goto LABEL_11;
LABEL_13:
    v7 = *(_QWORD *)(a1 + 16);
    goto LABEL_14;
  }
  v6 = sub_1BC62D118();
  if (!v5)
    goto LABEL_13;
LABEL_11:
  v7 = sub_1BC62D118();
LABEL_14:
  if (v6 >= v7)
    v8 = a1;
  else
    v8 = v2;
  if (v6 < v7)
    v2 = a1;
  if ((v8 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC62D0DC();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    sub_1BC35E2D8((unint64_t *)&qword_1ED6A52F0, (unint64_t *)&qword_1ED6A5990);
    sub_1BC62CA1C();
    v8 = v38;
    v35 = v39;
    v9 = v40;
    v10 = v41;
    v11 = v42;
  }
  else
  {
    v12 = -1 << *(_BYTE *)(v8 + 32);
    v35 = v8 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(v8 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = 0;
  }
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  v34 = (unint64_t)(v9 + 64) >> 6;
  v15 = v2 & 0xC000000000000001;
  v36 = v2 + 56;
  v33 = v8;
  while (1)
  {
    while (1)
    {
      v17 = v10;
      if ((v8 & 0x8000000000000000) == 0)
        break;
      if (!sub_1BC62D13C())
        goto LABEL_59;
      swift_dynamicCast();
      v20 = v37;
      if (v15)
        goto LABEL_26;
LABEL_48:
      if (!*(_QWORD *)(v2 + 16))
        goto LABEL_55;
      v25 = sub_1BC62CEA8();
      v26 = -1 << *(_BYTE *)(v2 + 32);
      v27 = v25 & ~v26;
      if (((*(_QWORD *)(v36 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
        goto LABEL_55;
      v28 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v27);
      v29 = sub_1BC62CEB4();

      if ((v29 & 1) != 0)
      {
LABEL_56:

        swift_bridgeObjectRelease();
LABEL_58:
        sub_1BC3583F4();
        return;
      }
      v30 = ~v26;
      while (1)
      {
        v27 = (v27 + 1) & v30;
        if (((*(_QWORD *)(v36 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
          break;
        v31 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v27);
        v32 = sub_1BC62CEB4();

        if ((v32 & 1) != 0)
          goto LABEL_56;
      }
LABEL_55:

      v8 = v33;
      v15 = v2 & 0xC000000000000001;
    }
    if (v11)
    {
      v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v19 = v18 | (v10 << 6);
      goto LABEL_47;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      return;
    }
    if (v21 >= v34)
      goto LABEL_59;
    v22 = *(_QWORD *)(v35 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v17 + 2;
      if (v17 + 2 >= v34)
        goto LABEL_59;
      v22 = *(_QWORD *)(v35 + 8 * v10);
      if (!v22)
      {
        v10 = v17 + 3;
        if (v17 + 3 >= v34)
          goto LABEL_59;
        v22 = *(_QWORD *)(v35 + 8 * v10);
        if (!v22)
        {
          v10 = v17 + 4;
          if (v17 + 4 >= v34)
            goto LABEL_59;
          v22 = *(_QWORD *)(v35 + 8 * v10);
          if (!v22)
            break;
        }
      }
    }
LABEL_46:
    v11 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_47:
    v20 = *(void **)(*(_QWORD *)(v8 + 48) + 8 * v19);
    v37 = v20;
    v24 = v20;
    if (!v15)
      goto LABEL_48;
LABEL_26:
    v16 = sub_1BC62D148();

    if ((v16 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_58;
    }
  }
  v23 = v17 + 5;
  while (v34 != v23)
  {
    v22 = *(_QWORD *)(v35 + 8 * v23++);
    if (v22)
    {
      v10 = v23 - 1;
      goto LABEL_46;
    }
  }
LABEL_59:
  swift_bridgeObjectRelease();
  sub_1BC3583F4();
}

uint64_t sub_1BC488C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  sub_1BC495704();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = 2;
  *(_QWORD *)(v7 + 24) = 0;
  *(_BYTE *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = v1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1BC495870;
  *(_QWORD *)(v8 + 24) = v7;
  sub_1BC495784(0, &qword_1ED6A4950, &qword_1ED6A4970, (unint64_t *)&qword_1ED6A4938, 0x1E0CB6870);
  sub_1BC495808();
  swift_retain();
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1ED6A4958, (uint64_t (*)(uint64_t))sub_1BC495704, MEMORY[0x1E0C96148]);
  v9 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t sub_1BC488DC0(char *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v4 = v3;
  sub_1BC495704();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = a2;
  *(_BYTE *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = v4;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1BC496600;
  *(_QWORD *)(v15 + 24) = v14;
  sub_1BC495784(0, &qword_1ED6A4950, &qword_1ED6A4970, (unint64_t *)&qword_1ED6A4938, 0x1E0CB6870);
  sub_1BC495808();
  swift_retain();
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1ED6A4958, (uint64_t (*)(uint64_t))sub_1BC495704, MEMORY[0x1E0C96148]);
  v16 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v16;
}

uint64_t sub_1BC488F30@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t result;

  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_BYTE *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  sub_1BC495784(0, &qword_1ED6A4950, &qword_1ED6A4970, (unint64_t *)&qword_1ED6A4938, 0x1E0CB6870);
  swift_allocObject();
  swift_retain();
  result = sub_1BC62BF60();
  *a5 = result;
  return result;
}

void sub_1BC488FE8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  unint64_t v24[6];

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = MEMORY[0x1E0DEE9D8];
  v24[0] = MEMORY[0x1E0DEE9D8];
  swift_retain();
  sub_1BC62D28C();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a3);
  sub_1BC62D268();
  sub_1BC62D298();
  sub_1BC62D2A4();
  sub_1BC62D274();
  v14 = (void *)objc_opt_self();
  sub_1BC58C3A4(v24[0]);
  swift_release();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  sub_1BC35E2D8((unint64_t *)&qword_1ED6A52F0, (unint64_t *)&qword_1ED6A5990);
  v15 = (void *)sub_1BC62C9D4();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_predicateForMedicalUserDomainConceptsWithCategoryTypes_, v15);

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v13;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1BC4962F4;
  *(_QWORD *)(v18 + 24) = v12;
  *(_BYTE *)(v18 + 32) = a5;
  *(_QWORD *)(v18 + 40) = v17;
  v19 = objc_allocWithZone(MEMORY[0x1E0CB6D28]);
  v24[4] = (unint64_t)sub_1BC4964B8;
  v24[5] = v18;
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 1107296256;
  v24[2] = (unint64_t)sub_1BC48BFF8;
  v24[3] = (unint64_t)&block_descriptor_118;
  v20 = _Block_copy(v24);
  swift_retain();
  v21 = objc_msgSend(v19, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v16, 0, a4, 0, v20);
  _Block_release(v20);
  swift_release();
  v22 = v21;
  v23 = (void *)sub_1BC62C650();
  objc_msgSend(v22, sel_setDebugIdentifier_, v23);

  objc_msgSend(*(id *)(a6 + 32), sel_executeQuery_, v22);
  swift_release();

}

void sub_1BC4892B4(int a1, void *a2, int a3, char a4, id a5, void (*a6)(id, uint64_t), int a7, char a8, uint64_t a9)
{
  id v11;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;

  if (a5)
  {
    v11 = a5;
    a6(a5, 1);

  }
  else
  {
    if (a2)
    {
      objc_opt_self();
      v15 = swift_dynamicCastObjCClass();
      if (v15)
      {
        v16 = (void *)v15;
        v17 = a2;
        if ((a8 & 1) != 0 && objc_msgSend(v16, sel_isLowUtility))
        {

        }
        else
        {
          swift_beginAccess();
          v18 = v17;
          MEMORY[0x1BCCF1B30]();
          if (*(_QWORD *)((*(_QWORD *)(a9 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a9 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
            sub_1BC62C8B4();
          sub_1BC62C8D8();
          sub_1BC62C890();
          swift_endAccess();

        }
      }
    }
    if ((a4 & 1) != 0)
    {
      swift_beginAccess();
      v19 = swift_bridgeObjectRetain();
      a6((id)v19, 0);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BC489434(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  sub_1BC495884();
  v7 = v6;
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = v3;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1BC4959F8;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC49592C(0, &qword_1EF432048, (unint64_t *)&qword_1EF432050, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC4959B4(&qword_1EF432058, &qword_1EF432048, (unint64_t *)&qword_1EF432050, v12);
  v13 = a1;
  v14 = a2;
  swift_retain();
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF432060, (uint64_t (*)(uint64_t))sub_1BC495884, MEMORY[0x1E0C96148]);
  v15 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v7);
  return v15;
}

uint64_t sub_1BC4895BC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1BC49592C(0, &qword_1EF432048, (unint64_t *)&qword_1EF432050, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_allocObject();
  v9 = a2;
  swift_retain();
  v10 = a1;
  result = sub_1BC62BF60();
  *a4 = result;
  return result;
}

void sub_1BC48966C(void (*a1)(unint64_t *), uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  void *ObjCClassFromMetadata;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  unint64_t aBlock;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, void *, uint64_t, void *);
  void *v40;
  void (*v41)(int, unint64_t, void *);
  uint64_t v42;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF436690);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v12 = *MEMORY[0x1E0CB4CE0];
  swift_retain();
  v13 = objc_msgSend(ObjCClassFromMetadata, sel_diagnosticTestResultTypeForIdentifier_, v12);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend((id)objc_opt_self(), sel_predicateForMedicalRecordsAssociatedWithMedicalUserDomainConcept_, a3);
    aBlock = MEMORY[0x1E0DEE9D8];
    v16 = a4;
    if (v15)
    {
      v17 = v15;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }
    v36 = a5;
    if (a4)
    {
      v18 = v16;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }

    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
    v19 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v19);

    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BC6396B0;
    *(_QWORD *)(v21 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A88]), sel_initWithSampleType_predicate_, v14, v20);
    sub_1BC62C890();
    sub_1BC62C680();
    v22 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
    v23 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(v22, sel_initWithKey_ascending_, v23, 0);

    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BC6396B0;
    *(_QWORD *)(v25 + 32) = v24;
    sub_1BC62C890();
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = sub_1BC4962F4;
    *(_QWORD *)(v26 + 24) = v10;
    v27 = objc_allocWithZone(MEMORY[0x1E0CB6AF8]);
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    v28 = v24;
    v29 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
    v30 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v41 = sub_1BC496428;
    v42 = v26;
    aBlock = MEMORY[0x1E0C809B0];
    v38 = 1107296256;
    v39 = sub_1BC5CEF28;
    v40 = &block_descriptor_103;
    v31 = _Block_copy(&aBlock);
    v32 = objc_msgSend(v27, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v29, 1, v30, v31);

    _Block_release(v31);
    swift_release();
    v33 = v32;
    v34 = (void *)sub_1BC62C650();
    objc_msgSend(v33, sel_setDebugIdentifier_, v34);

    objc_msgSend(*(id *)(v36 + 32), sel_executeQuery_, v33);
  }
  else
  {
    swift_release();
    sub_1BC4962F8();
    v35 = (void *)swift_allocError();
    aBlock = (unint64_t)v35;
    LOBYTE(v38) = 1;
    a1(&aBlock);

  }
}

void sub_1BC489B70(int a1, unint64_t a2, id a3, void (*a4)(id, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  if (!a2)
  {
LABEL_11:
    if (a3)
    {
LABEL_12:
      v13 = a3;
      a4(a3, 1);

      return;
    }
LABEL_15:
    a4(0, 0);
    return;
  }
  v7 = a2 & 0xFFFFFFFFFFFFFF8;
  if (!(a2 >> 62))
  {
    v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease();
    if (a3)
      goto LABEL_12;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  if (!sub_1BC62D3B8())
    goto LABEL_14;
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v9 = (id)MEMORY[0x1BCCF24CC](0, a2);
  }
  else
  {
    if (!*(_QWORD *)(v7 + 16))
    {
      __break(1u);
      return;
    }
    v9 = *(id *)(a2 + 32);
  }
  v10 = v9;
  swift_bridgeObjectRelease();
  objc_opt_self();
  v11 = swift_dynamicCastObjCClass();
  if (!v11)
  {

    goto LABEL_11;
  }
  v12 = v11;
  v14 = v10;
  a4((id)v12, 0);

}

uint64_t sub_1BC489CD0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BC495498(0, &qword_1EF432068, &qword_1EF432070, (void (*)(uint64_t))sub_1BC495A70, &qword_1EF432088);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = v2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1BC495B3C;
  *(_QWORD *)(v11 + 24) = v10;
  sub_1BC495A04(0, &qword_1EF432070, (void (*)(uint64_t))sub_1BC495A70);
  sub_1BC495650(&qword_1EF432088, &qword_1EF432070, (void (*)(uint64_t))sub_1BC495A70);
  v12 = a1;
  v13 = a2;
  swift_retain();
  sub_1BC62BF78();
  sub_1BC495B48();
  v14 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_1BC489E38@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1BC495A04(0, &qword_1EF432070, (void (*)(uint64_t))sub_1BC495A70);
  swift_allocObject();
  v9 = a2;
  swift_retain();
  v10 = a1;
  result = sub_1BC62BF60();
  *a4 = result;
  return result;
}

void sub_1BC489EE0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  unint64_t v19;
  id v20;
  unint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  _QWORD aBlock[7];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (void *)objc_opt_self();
  swift_retain();
  v12 = objc_msgSend(v11, sel_predicateForMedicalRecordsAssociatedWithMedicalUserDomainConcept_, a3);
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v13 = a4;
  if (v12)
  {
    v14 = v12;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (a4)
  {
    v15 = v13;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v16 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v16);

  v18 = objc_msgSend((id)objc_opt_self(), sel_medicalRecordTypesWithOptions_, 0);
  sub_1BC34B6A0(0, &qword_1ED6A58D8);
  v19 = sub_1BC62C878();

  v20 = v17;
  v21 = sub_1BC495094(v19, (uint64_t)v20);
  swift_bridgeObjectRelease();

  sub_1BC58C380(v21);
  swift_bridgeObjectRelease();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = sub_1BC4963A8;
  v22[3] = v10;
  v22[4] = a3;
  v23 = objc_allocWithZone(MEMORY[0x1E0CB6AE0]);
  sub_1BC34B6A0(0, &qword_1ED6A48A0);
  sub_1BC35E2D8((unint64_t *)&qword_1ED6A4920, &qword_1ED6A48A0);
  v24 = a3;
  v25 = (void *)sub_1BC62C9D4();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1BC4963D8;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC434D94;
  aBlock[3] = &block_descriptor_91;
  v26 = _Block_copy(aBlock);
  v27 = objc_msgSend(v23, sel_initWithQueryDescriptors_resultsHandler_, v25, v26);

  _Block_release(v26);
  swift_release();
  v28 = v27;
  v29 = (void *)sub_1BC62C650();
  objc_msgSend(v28, sel_setDebugIdentifier_, v29);

  objc_msgSend(*(id *)(a5 + 32), sel_executeQuery_, v28);
}

void sub_1BC48A2B4(int a1, unint64_t a2, id a3, void (*a4)(id, unint64_t, uint64_t), uint64_t a5, void *a6)
{
  id v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  void *v16;

  if (a3)
  {
    v8 = a3;
    a4(a3, 0, 1);

    return;
  }
  if (!a2)
  {
    v16 = 0;
LABEL_12:
    a4(v16, a2, 0);
    return;
  }
  v10 = sub_1BC486FD8(a2);
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
    v12 = 0;
LABEL_11:
    swift_bridgeObjectRelease();
    v16 = a6;
    a2 = v12;
    goto LABEL_12;
  }
  v12 = 0;
  v13 = (uint64_t *)(v10 + 32);
  while (1)
  {
    v14 = *v13++;
    v15 = __OFADD__(v12, v14);
    v12 += v14;
    if (v15)
      break;
    if (!--v11)
      goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_1BC48A37C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  sub_1BC495BB0();
  v7 = v6;
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a1;
  v10[4] = v3;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1BC495CD4;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = MEMORY[0x1E0C960D8];
  sub_1BC495C48(0, &qword_1ED6A3658, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC495DA8(&qword_1ED6A3650, &qword_1ED6A3658, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v12, MEMORY[0x1E0C96108]);
  v13 = a2;
  v14 = a1;
  swift_retain();
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1ED6A3680, (uint64_t (*)(uint64_t))sub_1BC495BB0, MEMORY[0x1E0C96148]);
  v15 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v7);
  return v15;
}

uint64_t sub_1BC48A500@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1BC495C48(0, &qword_1ED6A3658, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  v9 = a1;
  v10 = a2;
  swift_retain();
  result = sub_1BC62BF60();
  *a4 = result;
  return result;
}

void sub_1BC48A5A8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  unint64_t v14;
  void *v15;
  id v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  _QWORD aBlock[7];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  if (a3)
  {
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BC6396B0;
    v12 = objc_allocWithZone(MEMORY[0x1E0CB6A88]);
    swift_retain();
    v13 = a3;
    *(_QWORD *)(v11 + 32) = objc_msgSend(v12, sel_initWithSampleType_predicate_, v13, a4);
    sub_1BC62C890();
    v14 = v11;

  }
  else
  {
    v15 = (void *)objc_opt_self();
    swift_retain();
    v16 = objc_msgSend(v15, sel_medicalRecordTypesWithOptions_, 0);
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    v17 = sub_1BC62C878();

    v18 = a4;
    v14 = sub_1BC495094(v17, (uint64_t)v18);
    swift_bridgeObjectRelease();

  }
  sub_1BC58C380(v14);
  swift_bridgeObjectRelease();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BC496354;
  *(_QWORD *)(v19 + 24) = v10;
  v20 = objc_allocWithZone(MEMORY[0x1E0CB6AE0]);
  sub_1BC34B6A0(0, &qword_1ED6A48A0);
  sub_1BC35E2D8((unint64_t *)&qword_1ED6A4920, &qword_1ED6A48A0);
  v21 = (void *)sub_1BC62C9D4();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1BC496390;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC434D94;
  aBlock[3] = &block_descriptor_79;
  v22 = _Block_copy(aBlock);
  v23 = objc_msgSend(v20, sel_initWithQueryDescriptors_resultsHandler_, v21, v22);

  _Block_release(v22);
  swift_release();
  v24 = v23;
  v25 = (void *)sub_1BC62C650();
  objc_msgSend(v24, sel_setDebugIdentifier_, v25);

  objc_msgSend(*(id *)(a5 + 32), sel_executeQuery_, v24);
}

void sub_1BC48A8A0(int a1, unint64_t a2, id a3, void (*a4)(id, uint64_t))
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  void *v13;
  uint64_t v14;

  if (a3)
  {
    v6 = a3;
    a4(a3, 256);

    return;
  }
  if (!a2)
  {
    v13 = 0;
    v14 = 1;
LABEL_12:
    a4(v13, v14);
    return;
  }
  v7 = sub_1BC486FD8(a2);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
  {
    v9 = 0;
LABEL_11:
    swift_bridgeObjectRelease();
    v13 = v9;
    v14 = 0;
    goto LABEL_12;
  }
  v9 = 0;
  v10 = (uint64_t *)(v7 + 32);
  while (1)
  {
    v11 = *v10++;
    v12 = __OFADD__(v9, v11);
    v9 += v11;
    if (v12)
      break;
    if (!--v8)
      goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_1BC48A960(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  id v17;
  id v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  sub_1BC495BB0();
  v7 = v6;
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC495CE0();
  v11 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  v26 = v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a1;
  v14[4] = v3;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1BC4965FC;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = MEMORY[0x1E0C960D8];
  sub_1BC495C48(0, &qword_1ED6A3658, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC495DA8(&qword_1ED6A3650, &qword_1ED6A3658, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v16, MEMORY[0x1E0C96108]);
  v17 = a2;
  v18 = a1;
  swift_retain();
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1ED6A3680, (uint64_t (*)(uint64_t))sub_1BC495BB0, MEMORY[0x1E0C96148]);
  v19 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
  v27 = v19;
  v20 = MEMORY[0x1E0C95D78];
  sub_1BC495C48(0, &qword_1ED6A3600, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC34B508(0, &qword_1ED6A36B8, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC495DA8(&qword_1ED6A35F8, &qword_1ED6A3600, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v20, MEMORY[0x1E0C95D90]);
  sub_1BC62C05C();
  swift_release();
  sub_1BC347F0C(&qword_1ED6A35E8, (uint64_t (*)(uint64_t))sub_1BC495CE0, MEMORY[0x1E0C95B48]);
  v21 = v25;
  v22 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v21);
  return v22;
}

uint64_t sub_1BC48ABF4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(_BYTE *)(result + 8) & 1) == 0 && *(_QWORD *)result > 0;
  return result;
}

uint64_t sub_1BC48AC18(void *a1, uint64_t a2, char a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v5 = v4;
  v10 = *v4;
  sub_1BC495DEC();
  v12 = v11;
  v22 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_BYTE *)(v15 + 24) = a4;
  *(_BYTE *)(v15 + 25) = a3;
  *(_QWORD *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = v5;
  *(_QWORD *)(v15 + 48) = v10;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1BC495E98;
  *(_QWORD *)(v16 + 24) = v15;
  v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1BC49592C(0, &qword_1EF4320A0, &qword_1EF4320A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC4959B4(&qword_1EF4320B0, &qword_1EF4320A0, &qword_1EF4320A8, v17);
  v18 = a1;
  swift_retain();
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF4320B8, (uint64_t (*)(uint64_t))sub_1BC495DEC, MEMORY[0x1E0C96148]);
  v19 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v12);
  return v19;
}

uint64_t sub_1BC48ADB8@<X0>(void *a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  id v15;
  uint64_t result;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_BYTE *)(v14 + 24) = a2;
  *(_BYTE *)(v14 + 25) = a3;
  *(_QWORD *)(v14 + 32) = a4;
  *(_QWORD *)(v14 + 40) = a5;
  *(_QWORD *)(v14 + 48) = a6;
  sub_1BC49592C(0, &qword_1EF4320A0, &qword_1EF4320A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_allocObject();
  v15 = a1;
  swift_retain();
  result = sub_1BC62BF60();
  *a7 = result;
  return result;
}

void sub_1BC48AE84(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  void *ObjCClassFromMetadata;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t aBlock;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, void *, uint64_t, void *);
  void *v52;
  void (*v53)(int, unint64_t, void *);
  uint64_t v54;
  uint64_t v55;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF436690);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v16 = *MEMORY[0x1E0CB4CE0];
  swift_retain();
  v17 = objc_msgSend(ObjCClassFromMetadata, sel_diagnosticTestResultTypeForIdentifier_, v16);
  if (v17)
  {
    v18 = v17;
    v19 = (void *)objc_opt_self();
    v20 = objc_msgSend(v19, sel_predicateForMedicalRecordsAssociatedWithMedicalUserDomainConcept_, a3);
    v21 = objc_msgSend(v19, sel_predicateForDiagnosticTestResultCategory_, *MEMORY[0x1E0CB4CB0]);
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BC639570;
    *(_QWORD *)(v22 + 32) = v20;
    *(_QWORD *)(v22 + 40) = v21;
    aBlock = v22;
    sub_1BC62C890();
    v55 = aBlock;
    v48 = a7;
    v46 = v21;
    v47 = v20;
    if ((a4 & 1) != 0)
    {
      v23 = qword_1EF428608;
      v24 = v20;
      v25 = v21;
      if (v23 != -1)
        swift_once();
      v26 = (id)qword_1EF459EB0;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }
    else
    {
      v28 = v20;
      v29 = v21;
    }
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
    v30 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v30);

    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1BC6396B0;
    *(_QWORD *)(v32 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A88]), sel_initWithSampleType_predicate_, v18, v31);
    sub_1BC62C890();
    sub_1BC62C680();
    v33 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
    v34 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v33, sel_initWithKey_ascending_, v34, a5 & 1);

    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BC6396B0;
    *(_QWORD *)(v36 + 32) = v35;
    sub_1BC62C890();
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = sub_1BC4962F4;
    *(_QWORD *)(v37 + 24) = v14;
    v38 = objc_allocWithZone(MEMORY[0x1E0CB6AF8]);
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    v39 = v35;
    v40 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
    v41 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v53 = sub_1BC49633C;
    v54 = v37;
    aBlock = MEMORY[0x1E0C809B0];
    v50 = 1107296256;
    v51 = sub_1BC5CEF28;
    v52 = &block_descriptor_67;
    v42 = _Block_copy(&aBlock);
    v43 = objc_msgSend(v38, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v40, a6, v41, v42);

    _Block_release(v42);
    swift_release();
    v44 = v43;
    v45 = (void *)sub_1BC62C650();
    objc_msgSend(v44, sel_setDebugIdentifier_, v45);

    objc_msgSend(*(id *)(v48 + 32), sel_executeQuery_, v44);
  }
  else
  {
    swift_release();
    sub_1BC4962F8();
    v27 = (void *)swift_allocError();
    aBlock = (uint64_t)v27;
    LOBYTE(v50) = 1;
    a1(&aBlock);

  }
}

void sub_1BC48B3CC(int a1, unint64_t a2, id a3, void (*a4)(void))
{
  id v6;

  if (a2 && sub_1BC349FF8(a2))
  {
    a4();
    swift_bridgeObjectRelease();
  }
  else if (a3)
  {
    v6 = a3;
    ((void (*)(id, uint64_t))a4)(a3, 1);

  }
  else
  {
    ((void (*)(_QWORD, _QWORD))a4)(MEMORY[0x1E0DEE9D8], 0);
  }
}

uint64_t UserDomainConceptDataProvider.recordChangePublisher(for:categories:since:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  BOOL v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t i;
  void *v55;
  uint64_t j;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  char isUniquelyReferenced_nonNull_native;
  char v69;
  uint64_t result;
  void *v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  id v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  id v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  __int128 v88;
  __int128 v89;
  id v90;
  _QWORD *v91;
  id aBlock;
  unint64_t v93;
  uint64_t (*v94)(uint64_t, void *, uint64_t, uint64_t, void *, void *);
  void *v95;
  uint64_t (*v96)();
  void *v97;
  void *v98;
  uint64_t v99;

  swift_beginAccess();
  v75 = v4;
  v7 = *(_QWORD *)(v4 + 16);
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_1BC558D94(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v74 = a2;
  aBlock = a4;
  sub_1BC495F00();
  swift_allocObject();
  v11 = a4;
  v73 = (void *)sub_1BC62BF24();
  v12 = MEMORY[0x1E0DEE9E8];
  v99 = MEMORY[0x1E0DEE9E8];
  v80 = *(_QWORD *)(a3 + 16);
  if (!v80)
  {
LABEL_45:
    sub_1BC487338(v12);
    swift_bridgeObjectRelease();
    v58 = v11;
    if (!a4)
      v58 = objc_msgSend((id)objc_opt_self(), sel_latestAnchor);
    v59 = objc_allocWithZone(MEMORY[0x1E0CB62C0]);
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    v60 = v11;
    v61 = v58;
    swift_retain();
    v62 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v96 = sub_1BC495F84;
    v97 = v73;
    v63 = (void *)MEMORY[0x1E0C809B0];
    aBlock = (id)MEMORY[0x1E0C809B0];
    v93 = 1107296256;
    v94 = sub_1BC48BEF8;
    v95 = &block_descriptor_34;
    v64 = _Block_copy(&aBlock);
    v65 = objc_msgSend(v59, sel_initWithQueryDescriptors_anchor_limit_resultsHandler_, v62, v61, 0, v64);

    _Block_release(v64);
    swift_release();
    v96 = sub_1BC495F84;
    v97 = v73;
    aBlock = v63;
    v93 = 1107296256;
    v94 = sub_1BC48BEF8;
    v95 = &block_descriptor_55_0;
    v66 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v65, sel_setUpdateHandler_, v66);
    _Block_release(v66);
    objc_msgSend(*(id *)(v75 + 32), sel_executeQuery_, v65);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v67 = v65;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v99 = *(_QWORD *)(v75 + 24);
    *(_QWORD *)(v75 + 24) = 0x8000000000000000;
    sub_1BC48D294((uint64_t)v67, a1, v74, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_1BC5A68C4, (void (*)(void))sub_1BC3C5970, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC5E0BFC);
    *(_QWORD *)(v75 + 24) = v99;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    aBlock = v73;
    sub_1BC347F0C(&qword_1ED6A3610, (uint64_t (*)(uint64_t))sub_1BC495F00, MEMORY[0x1E0C95FB8]);
    v10 = sub_1BC62BFFC();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    v69 = swift_isUniquelyReferenced_nonNull_native();
    v99 = *(_QWORD *)(v75 + 16);
    *(_QWORD *)(v75 + 16) = 0x8000000000000000;
    sub_1BC48CD80(v10, a1, v74, v69);
    *(_QWORD *)(v75 + 16) = v99;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

    swift_release();
    return v10;
  }
  v82 = (id)objc_opt_self();
  v79 = a3 + 32;
  swift_bridgeObjectRetain();
  v13 = 0;
  v78 = v11;
  while (1)
  {
    v83 = v13;
    v14 = *(unsigned __int8 *)(v79 + v13);
    v15 = objc_msgSend(v82, sel_supportedRecordCategoriesByCategoryType);
    if (v15)
      break;
    v20 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    if (!*(_QWORD *)(MEMORY[0x1E0DEE9E0] + 16))
      goto LABEL_28;
LABEL_26:
    v42 = sub_1BC558FD8(v14);
    if ((v43 & 1) != 0)
    {
      v44 = v20[7] + 72 * v42;
      v45 = *(void **)(v44 + 8);
      v46 = *(void **)(v44 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47 = v46;
      v48 = v45;
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    v49 = objc_msgSend(v82, sel_unknownRecordCategory);
    if (!v49)
      goto LABEL_53;
    sub_1BC4FC8D8(v49, (uint64_t)&aBlock);
    v48 = (id)v93;
    v47 = v98;
LABEL_30:
    v50 = objc_msgSend(v47, sel_sampleTypes);
    if (!v50)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_8;
    }
    v51 = v50;
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    v52 = sub_1BC62C878();

    if (v52 >> 62)
    {
      swift_bridgeObjectRetain();
      v53 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v53)
      {
LABEL_33:
        if (v53 < 1)
          goto LABEL_52;
        if ((v52 & 0xC000000000000001) != 0)
        {
          for (i = 0; i != v53; ++i)
          {
            v55 = (void *)MEMORY[0x1BCCF24CC](i, v52);
            sub_1BC48EDCC(&aBlock, v55);

          }
        }
        else
        {
          for (j = 0; j != v53; ++j)
          {
            v57 = *(void **)(v52 + 8 * j + 32);
            sub_1BC48EDCC(&aBlock, v57);

          }
        }
      }
    }
    else
    {
      v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v53)
        goto LABEL_33;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_8:
    v13 = v83 + 1;
    swift_bridgeObjectRelease();
    v11 = v78;
    if (v83 + 1 == v80)
    {
      swift_bridgeObjectRelease();
      v12 = v99;
      goto LABEL_45;
    }
  }
  v16 = v15;
  v81 = v14;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5920);
  sub_1BC35E2D8((unint64_t *)&qword_1ED6A52F0, (unint64_t *)&qword_1ED6A5990);
  v17 = sub_1BC62C548();

  sub_1BC3BACCC(v17);
  v19 = v18;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v19 + 16))
  {
    v20 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRetain();
LABEL_25:
    swift_bridgeObjectRelease_n();
    v14 = v81;
    if (!v20[2])
      goto LABEL_28;
    goto LABEL_26;
  }
  sub_1BC35F4F0();
  v20 = (_QWORD *)sub_1BC62D400();
  v21 = *(_QWORD *)(v19 + 16);
  v91 = v20;
  swift_bridgeObjectRetain();
  v86 = v21;
  if (!v21)
    goto LABEL_25;
  v22 = 0;
  v23 = 0;
  v85 = v19;
  while (v23 < *(_QWORD *)(v19 + 16))
  {
    v88 = *(_OWORD *)(v19 + v22 + 80);
    v89 = *(_OWORD *)(v19 + v22 + 96);
    v24 = *(_BYTE *)(v19 + v22 + 40);
    v25 = *(unsigned __int8 *)(v19 + v22 + 32);
    v27 = *(_QWORD *)(v19 + v22 + 64);
    v26 = *(_QWORD *)(v19 + v22 + 72);
    v28 = *(void **)(v19 + v22 + 48);
    v29 = *(_QWORD *)(v19 + v22 + 56);
    v87 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = *((id *)&v89 + 1);
    if (!v28)
      goto LABEL_25;
    v84 = v30;
    v31 = sub_1BC558FD8(v25);
    v33 = v20[2];
    v34 = (v32 & 1) == 0;
    v35 = __OFADD__(v33, v34);
    v36 = v33 + v34;
    if (v35)
      goto LABEL_50;
    v37 = v32;
    if (v20[3] < v36)
    {
      sub_1BC3C1D38(v36, 1);
      v20 = v91;
      v31 = sub_1BC558FD8(v25);
      if ((v37 & 1) != (v38 & 1))
        goto LABEL_56;
    }
    if ((v37 & 1) != 0)
      goto LABEL_54;
    v20[(v31 >> 6) + 8] |= 1 << v31;
    *(_BYTE *)(v20[6] + v31) = v25;
    v39 = v20[7] + 72 * v31;
    *(_BYTE *)v39 = v24;
    *(_QWORD *)(v39 + 8) = v87;
    *(_QWORD *)(v39 + 16) = v29;
    *(_QWORD *)(v39 + 24) = v27;
    *(_QWORD *)(v39 + 32) = v26;
    *(_OWORD *)(v39 + 40) = v88;
    *(_OWORD *)(v39 + 56) = v89;
    v40 = v20[2];
    v35 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v35)
      goto LABEL_51;
    ++v23;
    v20[2] = v41;
    v22 += 80;
    v19 = v85;
    if (v86 == v23)
      goto LABEL_25;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  v71 = (void *)swift_allocError();
  swift_willThrow();
  v90 = v71;
  v72 = v71;
  sub_1BC35E44C();
  if ((swift_dynamicCast() & 1) != 0)
  {
    aBlock = 0;
    v93 = 0xE000000000000000;
    sub_1BC62D1D8();
    sub_1BC62C764();
    sub_1BC62D2D4();
    sub_1BC62C764();
    sub_1BC62D394();
    __break(1u);
LABEL_56:
    sub_1BC62D5EC();
    __break(1u);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1BC48BEF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9;
  void (*v11)(id, uint64_t, uint64_t, void *, void *);
  id v12;
  id v13;
  id v14;

  v9 = a3;
  v11 = *(void (**)(id, uint64_t, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC34B6A0(0, &qword_1ED6A52E8);
    v9 = sub_1BC62C878();
  }
  if (a4)
  {
    sub_1BC34B6A0(0, &qword_1ED6A36E0);
    a4 = sub_1BC62C878();
  }
  swift_retain();
  v12 = a2;
  v13 = a5;
  v14 = a6;
  v11(v12, v9, a4, a5, a6);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BC48BFF8(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  void (*v11)(id, void *, void *, uint64_t, void *);
  id v12;
  id v13;
  id v14;
  id v15;

  v11 = *(void (**)(id, void *, void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  v15 = a2;
  v12 = a3;
  v13 = a4;
  v14 = a6;
  v11(v15, a3, a4, a5, a6);
  swift_release();

}

void sub_1BC48C0AC(uint64_t a1, char a2, double a3)
{
  sub_1BC48C20C(a1, a2, (void (*)(void))sub_1BC5A4B04, (void (*)(void))sub_1BC3C208C, (void (*)(unint64_t, uint64_t, uint64_t, double))sub_1BC5E0B00, a3);
}

uint64_t sub_1BC48C0C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BC558D94(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1BC4961E0(a1, v18[7] + 72 * v12);
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BC5A4B20();
      goto LABEL_7;
    }
    sub_1BC3C20A8(v15, a4 & 1);
    v20 = sub_1BC558D94(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1BC4961E0(a1, v18[7] + 72 * v12);
LABEL_11:
      sub_1BC5E0B04(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

void sub_1BC48C1F0(uint64_t a1, char a2, double a3)
{
  sub_1BC48C20C(a1, a2, (void (*)(void))sub_1BC5A4D20, (void (*)(void))sub_1BC3C23F8, (void (*)(unint64_t, uint64_t, uint64_t, double))sub_1BC5E0B00, a3);
}

void sub_1BC48C20C(uint64_t a1, char a2, void (*a3)(void), void (*a4)(void), void (*a5)(unint64_t, uint64_t, uint64_t, double), double a6)
{
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;

  v9 = v6;
  v13 = *v6;
  v15 = sub_1BC558FE0(a6);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a2 & 1) != 0)
    {
LABEL_7:
      v21 = *v9;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v22 = *(_QWORD *)(v21 + 56);

        *(_QWORD *)(v22 + 8 * v15) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v20 >= v18 && (a2 & 1) == 0)
    {
      a3();
      goto LABEL_7;
    }
    a4();
    v23 = sub_1BC558FE0(a6);
    if ((v19 & 1) == (v24 & 1))
    {
      v15 = v23;
      v21 = *v9;
      if ((v19 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a5(v15, a1, v21, a6);
      return;
    }
  }
  sub_1BC62D5EC();
  __break(1u);
}

id sub_1BC48C344(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id result;
  unint64_t v24;
  char v25;
  id v26;

  v7 = (_QWORD **)v6;
  v13 = (_QWORD *)*v6;
  v15 = sub_1BC5590AC(a2, a3, a4, a5);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = v13[3];
    if (v20 >= v18 && (a6 & 1) != 0)
    {
LABEL_7:
      v21 = *v7;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v22 = v21[7];
        result = (id)swift_bridgeObjectRelease();
        *(_QWORD *)(v22 + 8 * v15) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v20 >= v18 && (a6 & 1) == 0)
    {
      sub_1BC5A4EEC();
      goto LABEL_7;
    }
    sub_1BC3C26DC(v18, a6 & 1);
    v24 = sub_1BC5590AC(a2, a3, a4, a5);
    if ((v19 & 1) == (v25 & 1))
    {
      v15 = v24;
      v21 = *v7;
      if ((v19 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC5E0BB0(v15, a2, a3, (uint64_t)a4, (uint64_t)a5, a1, v21);
      v26 = a5;
      swift_bridgeObjectRetain();
      return a4;
    }
  }
  result = (id)sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC48C4B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BC558D94(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BC5A50E8();
      goto LABEL_7;
    }
    sub_1BC3C28F4(v15, a4 & 1);
    v21 = sub_1BC558D94(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC5E0BFC(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC48C5E0(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1BC559014(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_1BC4961A4((uint64_t)a1, v20[7] + 48 * v14);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1BC5A54A0();
      goto LABEL_7;
    }
    sub_1BC3C383C(v17, a3 & 1);
    v22 = sub_1BC559014(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_1BC4961A4((uint64_t)a1, v20[7] + 48 * v14);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1BC5E0C00(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

_OWORD *sub_1BC48C754(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BC558D94(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        return sub_1BC35E088(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BC5A5924();
      goto LABEL_7;
    }
    sub_1BC3C3F38(v15, a4 & 1);
    v21 = sub_1BC558D94(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC5E0CAC(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1BC62D5EC();
  __break(1u);
  return result;
}

void sub_1BC48C884(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1BC48D294(a1, a2, a3, a4, (void (*)(void))sub_1BC5A5D04, (void (*)(void))sub_1BC3C4568, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC5E0BFC);
}

unint64_t sub_1BC48C8A0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BC559254(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  v14 = v9;
  v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    v16 = *v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1BC5A5D20();
    goto LABEL_7;
  }
  sub_1BC3C4584(v13, a3 & 1);
  v19 = sub_1BC559254(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_14:
    result = sub_1BC62D5EC();
    __break(1u);
    return result;
  }
  v10 = v19;
  v16 = *v4;
  if ((v14 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_1BC3CD62C(a2, (uint64_t)v21);
  return sub_1BC5E0D14(v10, (uint64_t)v21, a1, v16);
}

void sub_1BC48C9BC(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  id v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1BC55933C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];

        *(_QWORD *)(v16 + 8 * v9) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1BC5A5F14();
      goto LABEL_7;
    }
    sub_1BC3C48B4(v12, a3 & 1);
    v17 = sub_1BC55933C((uint64_t)a2);
    if ((v13 & 1) == (v18 & 1))
    {
      v9 = v17;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC5E0D6C(v9, (uint64_t)a2, a1, v15);
      v19 = a2;
      return;
    }
  }
  sub_1BC34B6A0(0, &qword_1EF429110);
  sub_1BC62D5EC();
  __break(1u);
}

_OWORD *sub_1BC48CAE8(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1BC558F0C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
        return sub_1BC35E088(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1BC5A60C4();
      goto LABEL_7;
    }
    sub_1BC3C4BA4(v12, a3 & 1);
    v18 = sub_1BC558F0C((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC5E0D70(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for Key(0);
  result = (_OWORD *)sub_1BC62D5EC();
  __break(1u);
  return result;
}

void sub_1BC48CC08(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1BC48D294(a1, a2, a3, a4, (void (*)(void))sub_1BC5A6284, (void (*)(void))sub_1BC3C4ED8, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC5E0BFC);
}

uint64_t sub_1BC48CC24(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_1BC559478(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1BC5A62A0();
    goto LABEL_7;
  }
  sub_1BC3C4EF4(v16, a3 & 1);
  v22 = sub_1BC559478(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_1BC62D5EC();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_1BC35EBE0(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  return sub_1BC5E0DD4(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_1BC48CD80(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BC558D94(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_release();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BC5A66F4();
      goto LABEL_7;
    }
    sub_1BC3C5640(v15, a4 & 1);
    v21 = sub_1BC558D94(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC5E0E64(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC48CEAC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BC559338(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      return sub_1BC5E0EAC(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BC5A68E0();
      goto LABEL_7;
    }
    sub_1BC3C598C(v13, a3 & 1);
    v19 = sub_1BC559338(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1BC5E0EAC(v10, a2, a1, v16);
    }
  }
  type metadata accessor for HKTimeScope(0);
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC48CFC0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t v23;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_1BC559478(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
      return sub_1BC496224(a1, v19[7] + 72 * v13, (unint64_t *)&qword_1ED6A4280, (uint64_t)&type metadata for BrowseIcon);
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1BC5A6CB8();
    goto LABEL_7;
  }
  sub_1BC3C62DC(v16, a3 & 1);
  v21 = sub_1BC559478(a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_14:
    result = sub_1BC62D5EC();
    __break(1u);
    return result;
  }
  v13 = v21;
  v19 = *v4;
  if ((v17 & 1) != 0)
    return sub_1BC496224(a1, v19[7] + 72 * v13, (unint64_t *)&qword_1ED6A4280, (uint64_t)&type metadata for BrowseIcon);
LABEL_11:
  sub_1BC35EBE0(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  return sub_1BC5E0EF4(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_1BC48D12C(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  char v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t result;
  unint64_t v24;
  char v25;

  v7 = (_QWORD **)v6;
  v13 = a5 & 1;
  v14 = (_QWORD *)*v6;
  v16 = sub_1BC559284(a2, a3, a4, a5 & 1);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
        return sub_1BC496270(a1, v22[7] + 48 * v16);
      return sub_1BC5E0FA0(v16, a2, a3, a4, v13, (uint64_t)a1, v22);
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_1BC5A6F04();
      goto LABEL_7;
    }
    sub_1BC3C66E4(v19, a6 & 1);
    v24 = sub_1BC559284(a2, a3, a4, v13);
    if ((v20 & 1) == (v25 & 1))
    {
      v16 = v24;
      v22 = *v7;
      if ((v20 & 1) != 0)
        return sub_1BC496270(a1, v22[7] + 48 * v16);
      return sub_1BC5E0FA0(v16, a2, a3, a4, v13, (uint64_t)a1, v22);
    }
  }
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

void sub_1BC48D278(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1BC48D294(a1, a2, a3, a4, (void (*)(void))sub_1BC5A70D8, (void (*)(void))sub_1BC3C6ABC, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC5E0BFC);
}

void sub_1BC48D294(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v10 = v7;
  v15 = *v7;
  v17 = sub_1BC558D94(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);

        *(_QWORD *)(v24 + 8 * v17) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v25 = sub_1BC558D94(a2, a3);
    if ((v21 & 1) == (v26 & 1))
    {
      v17 = v25;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      swift_bridgeObjectRetain();
      return;
    }
  }
  sub_1BC62D5EC();
  __break(1u);
}

uint64_t sub_1BC48D3E8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1BC559014(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
      return sub_1BC496224(a1, v20[7] + 72 * v14, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1BC5A72C0();
    goto LABEL_7;
  }
  sub_1BC3C711C(v17, a3 & 1);
  v22 = sub_1BC559014(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_1BC62D5EC();
    __break(1u);
    return result;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    return sub_1BC496224(a1, v20[7] + 72 * v14, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1BC5E1018(v14, (uint64_t)v11, a1, v20);
}

unint64_t sub_1BC48D554(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  char v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t result;
  unint64_t v24;
  char v25;

  v7 = (_QWORD **)v6;
  v13 = a5 & 1;
  v14 = (_QWORD *)*v6;
  v16 = sub_1BC559284(a2, a3, a4, a5 & 1);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
        return sub_1BC4961A4((uint64_t)a1, v22[7] + 48 * v16);
      return sub_1BC5E10CC(v16, a2, a3, a4, v13, a1, v22);
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_1BC5A7520();
      goto LABEL_7;
    }
    sub_1BC3C74F8(v19, a6 & 1);
    v24 = sub_1BC559284(a2, a3, a4, v13);
    if ((v20 & 1) == (v25 & 1))
    {
      v16 = v24;
      v22 = *v7;
      if ((v20 & 1) != 0)
        return sub_1BC4961A4((uint64_t)a1, v22[7] + 48 * v16);
      return sub_1BC5E10CC(v16, a2, a3, a4, v13, a1, v22);
    }
  }
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC48D6A0(uint64_t a1, __int128 *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  sub_1BC5594EC(a2);
  v11 = v10;
  v12 = v8[2];
  v13 = (v9 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v9;
    v16 = v8[3];
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v17 = *v4;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v18 = v17[7];
        result = swift_release();
        *(_QWORD *)(v18 + 8 * v11) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_1BC5A7704();
      goto LABEL_7;
    }
    sub_1BC3C78BC(v14, a3 & 1);
    sub_1BC5594EC(a2);
    if ((v15 & 1) == (v21 & 1))
    {
      v11 = v20;
      v17 = *v4;
      if ((v15 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC5E1134(v11, (uint64_t)a2, a1, v17);
      return sub_1BC359A94((uint64_t)a2);
    }
  }
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC48D7BC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BC558FD8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      return sub_1BC5E1194(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BC5A7D24();
      goto LABEL_7;
    }
    sub_1BC3C8734(v13, a3 & 1);
    v19 = sub_1BC558FD8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1BC5E1194(v10, a2, a1, v16);
    }
  }
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

void sub_1BC48D8D0(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  __int128 v19;
  unint64_t v20;
  char v21;
  id v22;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1BC55974C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7] + 48 * v9;
        v17 = *(void **)v16;
        v18 = *(void **)(v16 + 24);
        swift_release();
        swift_release();

        swift_release();
        swift_release();

        v19 = a1[1];
        *(_OWORD *)v16 = *a1;
        *(_OWORD *)(v16 + 16) = v19;
        *(_OWORD *)(v16 + 32) = a1[2];
        return;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1BC5A7EC0();
      goto LABEL_7;
    }
    sub_1BC3C8CF8(v12, a3 & 1);
    v20 = sub_1BC55974C((uint64_t)a2);
    if ((v13 & 1) == (v21 & 1))
    {
      v9 = v20;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC5E11D8(v9, (uint64_t)a2, a1, v15);
      v22 = a2;
      return;
    }
  }
  sub_1BC34B6A0(0, &qword_1ED6A5900);
  sub_1BC62D5EC();
  __break(1u);
}

void sub_1BC48DA40(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  id v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1BC55974C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];

        *(_QWORD *)(v16 + 8 * v9) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1BC5A80CC();
      goto LABEL_7;
    }
    sub_1BC3C902C(v12, a3 & 1);
    v17 = sub_1BC55974C((uint64_t)a2);
    if ((v13 & 1) == (v18 & 1))
    {
      v9 = v17;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC5E0D6C(v9, (uint64_t)a2, a1, v15);
      v19 = a2;
      return;
    }
  }
  sub_1BC34B6A0(0, &qword_1ED6A5900);
  sub_1BC62D5EC();
  __break(1u);
}

void sub_1BC48DB6C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t *v2;
  unsigned __int8 *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  BOOL v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  char v39;
  void *v40;
  char v41;
  char v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  char v47;
  uint64_t v48;
  id v49;
  void *v50;
  char v51;
  unint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t *v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  void *v87;
  uint64_t v88[9];
  _OWORD v89[4];
  uint64_t v90;

  v3 = a2;
  v4 = *v2;
  v5 = *((_OWORD *)a2 + 3);
  v89[2] = *((_OWORD *)a2 + 2);
  v89[3] = v5;
  v90 = *((_QWORD *)a2 + 8);
  v6 = *((_OWORD *)a2 + 1);
  v89[0] = *(_OWORD *)a2;
  v89[1] = v6;
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  DisplayCategory.hash(into:)((uint64_t)v88);
  v7 = sub_1BC62D6AC();
  v8 = -1 << *(_BYTE *)(v4 + 32);
  v9 = v7 & ~v8;
  v10 = v4 + 56;
  if (((*(_QWORD *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_75:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v88[0] = *v75;
    *v75 = 0x8000000000000000;
    sub_1BC359A94((uint64_t)v3);
    sub_1BC490FEC(v3, v9, isUniquelyReferenced_nonNull_native);
    *v75 = v88[0];
    swift_bridgeObjectRelease();
    v57 = *((_OWORD *)v3 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)v3 + 2);
    *(_OWORD *)(a1 + 48) = v57;
    *(_QWORD *)(a1 + 64) = *((_QWORD *)v3 + 8);
    v58 = *((_OWORD *)v3 + 1);
    *(_OWORD *)a1 = *(_OWORD *)v3;
    *(_OWORD *)(a1 + 16) = v58;
    return;
  }
  v11 = ~v8;
  v12 = *v3;
  v80 = *((_QWORD *)v3 + 4);
  v81 = *((_QWORD *)v3 + 3);
  v78 = *((_QWORD *)v3 + 2);
  v79 = *((_QWORD *)v3 + 5);
  *(_QWORD *)&v89[0] = *((_QWORD *)v3 + 6);
  v74 = *((_QWORD *)v3 + 7);
  v84 = v4;
  v85 = (uint64_t)v3;
  v82 = ~v8;
  v83 = v4 + 56;
  v86 = v12;
  while (1)
  {
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 72 * v9);
    if (*(unsigned __int8 *)v13 != v12)
      goto LABEL_5;
    v14 = (void *)v13[1];
    v15 = v13[2];
    v17 = v13[3];
    v16 = v13[4];
    v19 = v13[5];
    v18 = v13[6];
    v21 = v13[7];
    v20 = (void *)v13[8];
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = v20;
    v23 = v14;
    if ((sub_1BC62CEB4() & 1) == 0)
    {

LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v84;
      v3 = (unsigned __int8 *)v85;
      v11 = v82;
      v10 = v83;

      v12 = v86;
      goto LABEL_5;
    }
    v87 = v22;
    if (v17)
    {
      if (!v81)
        goto LABEL_59;
      v24 = v15 == v78 && v17 == v81;
      if (!v24 && (sub_1BC62D574() & 1) == 0)
        goto LABEL_59;
    }
    else if (v81)
    {
      goto LABEL_59;
    }
    v25 = v16 == v80 && v19 == v79;
    if (!v25 && (sub_1BC62D574() & 1) == 0)
      goto LABEL_59;
    if ((unint64_t)v18 >> 62)
    {
      swift_bridgeObjectRetain();
      v55 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      v26 = v55;
    }
    else
    {
      v26 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v27 = *(_QWORD *)&v89[0];
    v28 = *(_QWORD *)&v89[0] >> 62;
    v77 = *(_QWORD *)&v89[0];
    if (*(_QWORD *)&v89[0] >> 62)
    {
      v70 = v26;
      swift_bridgeObjectRetain();
      v29 = sub_1BC62D3B8();
      sub_1BC3FE9FC((uint64_t)v89);
      v26 = v70;
      v27 = v77;
    }
    else
    {
      v29 = *(_QWORD *)((*(_QWORD *)&v89[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v30 = v22;
    if (v26 != v29)
    {
LABEL_70:

      goto LABEL_4;
    }
    if (v26)
    {
      v31 = v18 & 0xFFFFFFFFFFFFFF8;
      v32 = (v18 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v18 < 0)
        v31 = v18;
      if ((unint64_t)v18 >> 62)
        v32 = v31;
      v33 = v27 & 0xFFFFFFFFFFFFFF8;
      v34 = (v27 & 0xFFFFFFFFFFFFFF8) + 32;
      v73 = v27 & 0xFFFFFFFFFFFFFF8;
      if (v27 < 0)
        v33 = v27;
      if (v28)
        v34 = v33;
      if (v32 != v34)
        break;
    }
LABEL_46:
    if ((sub_1BC3ED4CC(v21, v74) & 1) == 0)
      goto LABEL_59;
    v42 = sub_1BC62CEB4();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v4 = v84;
    v3 = (unsigned __int8 *)v85;
    v11 = v82;
    v10 = v83;
    v12 = v86;
    if ((v42 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1BC359AF8(v85);
      v59 = *(_QWORD *)(*v75 + 48) + 72 * v9;
      v61 = *(void **)(v59 + 8);
      v60 = *(_QWORD *)(v59 + 16);
      v62 = *(_QWORD *)(v59 + 40);
      v63 = *(_QWORD *)(v59 + 48);
      v64 = *(_QWORD *)(v59 + 56);
      v65 = *(void **)(v59 + 64);
      *(_BYTE *)a1 = *(_BYTE *)v59;
      *(_QWORD *)(a1 + 8) = v61;
      *(_QWORD *)(a1 + 16) = v60;
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(v59 + 24);
      *(_QWORD *)(a1 + 40) = v62;
      *(_QWORD *)(a1 + 48) = v63;
      *(_QWORD *)(a1 + 56) = v64;
      *(_QWORD *)(a1 + 64) = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v66 = v65;
      v67 = v61;
      return;
    }
LABEL_5:
    v9 = (v9 + 1) & v11;
    if (((*(_QWORD *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_75;
  }
  if ((v26 & 0x8000000000000000) == 0)
  {
    v72 = v18 & 0xC000000000000001;
    v68 = v26;
    if ((v18 & 0xC000000000000001) != 0)
    {
      v35 = (id)MEMORY[0x1BCCF24CC](0, v18);
    }
    else
    {
      if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_77;
      v35 = *(id *)(v18 + 32);
    }
    v36 = v35;
    v71 = v77 & 0xC000000000000001;
    if ((v77 & 0xC000000000000001) != 0)
    {
      v37 = (id)MEMORY[0x1BCCF24CC](0);
    }
    else
    {
      if (!*(_QWORD *)(v73 + 16))
        goto LABEL_78;
      v37 = *(id *)(v77 + 32);
    }
    v38 = v37;
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    v39 = sub_1BC62CEB4();
    v40 = v36;
    v41 = v39;

    if ((v41 & 1) == 0)
    {
LABEL_59:

      goto LABEL_4;
    }
    if (v68 != 1)
    {
      if (v72)
      {
        v43 = (id)MEMORY[0x1BCCF24CC](1, v18);
      }
      else
      {
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
          goto LABEL_81;
        v43 = *(id *)(v18 + 40);
      }
      v44 = v43;
      if (v71)
      {
        v45 = (id)MEMORY[0x1BCCF24CC](1, v77);
      }
      else
      {
        if (*(_QWORD *)(v73 + 16) < 2uLL)
          goto LABEL_82;
        v45 = *(id *)(v77 + 40);
      }
      v46 = v45;
      v47 = sub_1BC62CEB4();

      if ((v47 & 1) == 0)
        goto LABEL_59;
      v69 = 2 - v68;
      v48 = 6;
      while (v69 + v48 != 6)
      {
        v52 = v48 - 4;
        if (v72)
        {
          v53 = (id)MEMORY[0x1BCCF24CC](v48 - 4, v18);
        }
        else
        {
          if (v52 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_79;
          v53 = *(id *)(v18 + 8 * v48);
        }
        v54 = v53;
        if (v71)
        {
          v49 = (id)MEMORY[0x1BCCF24CC](v48 - 4, v77);
        }
        else
        {
          if (v52 >= *(_QWORD *)(v73 + 16))
            goto LABEL_80;
          v49 = *(id *)(v77 + 8 * v48);
        }
        v50 = v49;
        v51 = sub_1BC62CEB4();

        ++v48;
        v30 = v87;
        if ((v51 & 1) == 0)
          goto LABEL_70;
      }
    }
    goto LABEL_46;
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
}

uint64_t sub_1BC48E218(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v24;
  uint64_t *v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t (*v30)();
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (uint64_t *)((char *)&v29 - v11);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v29 - v14;
  MEMORY[0x1E0C80A78](v13);
  v30 = (uint64_t (*)())((char *)&v29 - v16);
  v31 = v2;
  v17 = *v2;
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  sub_1BC62C740();
  v18 = sub_1BC62D6AC();
  v19 = -1 << *(_BYTE *)(v17 + 32);
  v20 = v18 & ~v19;
  if (((*(_QWORD *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
  {
    v29 = a1;
    v32 = ~v19;
    v33 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      v22 = v33 * v20;
      sub_1BC35EBE0(*(_QWORD *)(v17 + 48) + v33 * v20, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if (*((_QWORD *)v15 + 2) == *(_QWORD *)(a2 + 16) && *((_QWORD *)v15 + 3) == *(_QWORD *)(a2 + 24))
        break;
      v24 = sub_1BC62D574();
      sub_1BC35EBE0((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC35EBE0(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if ((v24 & 1) != 0)
        goto LABEL_12;
      sub_1BC348D78((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC348D78((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC348D78((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_4:
      v20 = (v20 + 1) & v32;
      if (((*(_QWORD *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v29;
        goto LABEL_18;
      }
    }
    sub_1BC35EBE0((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1BC35EBE0(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_12:
    if (*v12 == *v9 && v12[1] == v9[1])
    {
      sub_1BC348D78((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC348D78((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC348D78((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_15:
      swift_bridgeObjectRelease();
      sub_1BC348D78(a2, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC35EBE0(*(_QWORD *)(*v31 + 48) + v22, v29, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      return 0;
    }
    v21 = sub_1BC62D574();
    sub_1BC348D78((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1BC348D78((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1BC348D78((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    if ((v21 & 1) != 0)
      goto LABEL_15;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  v26 = v31;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v28 = v30;
  sub_1BC35EBE0(a2, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  v34 = *v26;
  *v26 = 0x8000000000000000;
  sub_1BC4916B8(v28, v20, isUniquelyReferenced_nonNull_native);
  *v26 = v34;
  swift_bridgeObjectRelease();
  sub_1BC375724(a2, a1, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  return 1;
}

uint64_t sub_1BC48E580(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1BC62B8C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1BC347F0C(&qword_1EF42C7A8, v11, MEMORY[0x1E0D2BF08]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1BC62C5C0();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
      v21 = sub_1BC62C644();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC4919C0((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1BC48E7DC(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1BC62A8C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1BC347F0C(&qword_1EF42CB08, v11, MEMORY[0x1E0CB11D0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1BC62C5C0();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1BC347F0C((unint64_t *)&unk_1EF4320E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
      v21 = sub_1BC62C644();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC491BE4((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1BC48EA38(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC62D124();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC62D118();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC490330(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC3C9FEC(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC3CB498(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC62CEA8();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC62CEB4();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC62CEB4();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC491E08((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC48ECD4(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1BC62D664();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC491FB4(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1BC48EDCC(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC62D124();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC34B6A0(0, &qword_1ED6A58D8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC62D118();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC490540(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC3CA28C(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC3CB498(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC62CEA8();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC34B6A0(0, &qword_1ED6A58D8);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC62CEB4();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC62CEB4();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC4920D4((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC48F068(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC62D124();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC34B6A0(0, &qword_1EF42CAD0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC62D118();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC490750(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC3CA298(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC3CB498(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC62CEA8();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC34B6A0(0, &qword_1EF42CAD0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC62CEB4();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC62CEB4();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC492280((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC48F304(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    sub_1BC62D670();
    swift_bridgeObjectRetain();
    BrowseCategory.rawValue.getter();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    sub_1BC62CEC0();
    v10 = sub_1BC62D6AC();
    v11 = -1 << *(_BYTE *)(v6 + 32);
    v12 = v10 & ~v11;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v29 = *v2;
      *v2 = 0x8000000000000000;
      v24 = swift_retain();
      sub_1BC49242C(v24, v12, isUniquelyReferenced_nonNull_native);
      *v2 = v29;
      swift_bridgeObjectRelease();
      *a1 = a2;
      return 1;
    }
    v13 = ~v11;
    while (1)
    {
      swift_retain();
      BrowseCategory.rawValue.getter();
      v15 = v14;
      v17 = v16;
      BrowseCategory.rawValue.getter();
      if (v15 == v19 && v17 == v18)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v21 = sub_1BC62D574();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
        {
          swift_release();
          goto LABEL_10;
        }
      }
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
      v22 = sub_1BC62CEB4();
      swift_release();
      if ((v22 & 1) != 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
LABEL_10:
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_20;
    }
  }
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  swift_retain();
  v8 = sub_1BC62D124();
  swift_release();
  if (v8)
  {
    swift_bridgeObjectRelease();
    swift_release();
    type metadata accessor for CategoryRecordQueryDescription();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    *a1 = v28;
    swift_unknownObjectRelease();
    return 0;
  }
  result = sub_1BC62D118();
  if (__OFADD__(result, 1))
  {
    __break(1u);
    return result;
  }
  v25 = sub_1BC490960(v7, result + 1);
  v30 = v25;
  if (*(_QWORD *)(v25 + 24) <= *(_QWORD *)(v25 + 16))
  {
    swift_retain();
    sub_1BC3CA2A4();
    v26 = v30;
  }
  else
  {
    v26 = v25;
    swift_retain();
  }
  sub_1BC3CB49C(a2, v26);
  *v3 = v26;
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1BC48F68C(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC62D124();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC34B6A0(0, &qword_1ED6A48A0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC62D118();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC490BCC(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC3CA5C4(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC3CB498(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC62CEA8();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC34B6A0(0, &qword_1ED6A48A0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC62CEB4();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC62CEB4();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC4926A0((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC48F928(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v6 = type metadata accessor for BrowseCategory();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v28 - v11;
  v13 = *v3;
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  v32 = a2;
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v14 = sub_1BC62D6AC();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v28 = v12;
    v29 = v3;
    v30 = a1;
    v31 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_1BC35EBE0(*(_QWORD *)(v13 + 48) + v17 * v16, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      BrowseCategory.rawValue.getter();
      v19 = v18;
      v21 = v20;
      BrowseCategory.rawValue.getter();
      if (v19 == v23 && v21 == v22)
        break;
      v24 = sub_1BC62D574();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC348D78((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      if ((v24 & 1) != 0)
        goto LABEL_11;
      v16 = (v16 + 1) & v31;
      if (((*(_QWORD *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v29;
        a1 = v30;
        v12 = v28;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_1BC348D78((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
LABEL_11:
    swift_bridgeObjectRelease();
    sub_1BC348D78(v32, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    sub_1BC35EBE0(*(_QWORD *)(*v29 + 48) + v17 * v16, v30, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_9:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = v32;
    sub_1BC35EBE0(v32, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v33 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC49284C((uint64_t)v12, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v33;
    swift_bridgeObjectRelease();
    sub_1BC375724(v26, a1, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    return 1;
  }
}

uint64_t sub_1BC48FBD0(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC62D124();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC62D118();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC490DDC(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC3CA958(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC3CB498(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC62CEA8();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC62CEB4();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC62CEB4();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC492A9C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC48FE6C(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = type metadata accessor for UserDomainConceptViewData();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *v2;
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  UserDomainConceptViewData.hash(into:)();
  v11 = sub_1BC62D6AC();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v20 = v2;
    v21 = a1;
    v14 = ~v12;
    v15 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_1BC35EBE0(*(_QWORD *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      v16 = _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0(v9, a2);
      sub_1BC348D78((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      if ((v16 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v20;
        a1 = v21;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1BC348D78((uint64_t)a2, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
    sub_1BC35EBE0(*(_QWORD *)(*v20 + 48) + v15 * v13, v21, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC35EBE0((uint64_t)a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC492C48(v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v22;
    swift_bridgeObjectRelease();
    sub_1BC375724((uint64_t)a2, a1, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
    return 1;
  }
}

uint64_t sub_1BC490068(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  v8 = sub_1BC62D6AC();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1BC62D574() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1BC62D574() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1BC492E24(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1BC490214(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_1BC62D670();
  sub_1BC62D67C();
  v6 = sub_1BC62D6AC();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BC492FBC(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1BC490330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    sub_1BC3FEA24(0, (unint64_t *)&qword_1EF42C7B0, (unint64_t *)&qword_1EF431480, 0x1E0D2EE90, &qword_1EF42C7B8);
    v2 = sub_1BC62D1A8();
    v15 = v2;
    sub_1BC62D0DC();
    if (sub_1BC62D13C())
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_1BC3C9FEC(v9 + 1);
          v2 = v15;
        }
        result = sub_1BC62CEA8();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BC62D13C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1BC490540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    sub_1BC3FEA24(0, (unint64_t *)&qword_1ED6A3F60, &qword_1ED6A58D8, 0x1E0CB6B00, (unint64_t *)&qword_1ED6A58E0);
    v2 = sub_1BC62D1A8();
    v15 = v2;
    sub_1BC62D0DC();
    if (sub_1BC62D13C())
    {
      sub_1BC34B6A0(0, &qword_1ED6A58D8);
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_1BC3CA28C(v9 + 1);
          v2 = v15;
        }
        result = sub_1BC62CEA8();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BC62D13C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1BC490750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    sub_1BC3FEA24(0, (unint64_t *)&qword_1EF42CAC8, &qword_1EF42CAD0, 0x1E0CB63D8, &qword_1EF42CAD8);
    v2 = sub_1BC62D1A8();
    v15 = v2;
    sub_1BC62D0DC();
    if (sub_1BC62D13C())
    {
      sub_1BC34B6A0(0, &qword_1EF42CAD0);
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_1BC3CA298(v9 + 1);
          v2 = v15;
        }
        result = sub_1BC62CEA8();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BC62D13C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1BC490960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    sub_1BC3CD7E4(0, &qword_1EF42CAB8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription, &qword_1ED6A51D0, (uint64_t)&protocol conformance descriptor for CategoryRecordQueryDescription);
    v2 = sub_1BC62D1A8();
    v15 = v2;
    sub_1BC62D0DC();
    if (sub_1BC62D13C())
    {
      type metadata accessor for CategoryRecordQueryDescription();
      do
      {
        swift_dynamicCast();
        v2 = v15;
        if (*(_QWORD *)(v15 + 24) <= *(_QWORD *)(v15 + 16))
        {
          sub_1BC3CA2A4();
          v2 = v15;
        }
        sub_1BC62D670();
        BrowseCategory.rawValue.getter();
        sub_1BC62C740();
        swift_bridgeObjectRelease();
        v3 = *(id *)(v14 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
        sub_1BC62CEC0();

        result = sub_1BC62D6AC();
        v5 = v2 + 56;
        v6 = -1 << *(_BYTE *)(v2 + 32);
        v7 = result & ~v6;
        v8 = v7 >> 6;
        if (((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          v9 = __clz(__rbit64((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v8 == v11;
            if (v8 == v11)
              v8 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(_QWORD *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BC62D13C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1BC490BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    sub_1BC3FEA24(0, (unint64_t *)&qword_1ED6A4928, &qword_1ED6A48A0, 0x1E0CB6A88, (unint64_t *)&qword_1ED6A4920);
    v2 = sub_1BC62D1A8();
    v15 = v2;
    sub_1BC62D0DC();
    if (sub_1BC62D13C())
    {
      sub_1BC34B6A0(0, &qword_1ED6A48A0);
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_1BC3CA5C4(v9 + 1);
          v2 = v15;
        }
        result = sub_1BC62CEA8();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BC62D13C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1BC490DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    sub_1BC3FEA24(0, (unint64_t *)&qword_1EF42CA80, (unint64_t *)&qword_1ED6A5990, 0x1E0CB37E8, (unint64_t *)&qword_1ED6A52F0);
    v2 = sub_1BC62D1A8();
    v15 = v2;
    sub_1BC62D0DC();
    if (sub_1BC62D13C())
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_1BC3CA958(v9 + 1);
          v2 = v15;
        }
        result = sub_1BC62CEA8();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BC62D13C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

void sub_1BC490FEC(unsigned __int8 *a1, unint64_t a2, char a3)
{
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  char v44;
  void *v45;
  char v46;
  char v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  char v52;
  void *v53;
  char v54;
  uint64_t v55;
  id v56;
  void *v57;
  char v58;
  unint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v87[72];
  _OWORD v88[4];
  uint64_t v89;

  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      v8 = v81;
      sub_1BC3C9318();
    }
    else
    {
      if (v7 > v6)
      {
        sub_1BC3FAD24();
        goto LABEL_81;
      }
      v8 = v81;
      sub_1BC493108();
    }
    v9 = *v8;
    v10 = *((_OWORD *)a1 + 3);
    v88[2] = *((_OWORD *)a1 + 2);
    v88[3] = v10;
    v89 = *((_QWORD *)a1 + 8);
    v11 = *((_OWORD *)a1 + 1);
    v88[0] = *(_OWORD *)a1;
    v88[1] = v11;
    sub_1BC62D670();
    DisplayCategory.hash(into:)((uint64_t)v87);
    v12 = sub_1BC62D6AC();
    v13 = -1 << *(_BYTE *)(v9 + 32);
    a2 = v12 & ~v13;
    v14 = v9 + 56;
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v15 = ~v13;
      v16 = *a1;
      v85 = v9;
      v80 = *((_QWORD *)a1 + 3);
      v78 = *((_QWORD *)a1 + 4);
      v76 = *((_QWORD *)a1 + 2);
      v77 = *((_QWORD *)a1 + 5);
      *(_QWORD *)&v88[0] = *((_QWORD *)a1 + 6);
      v74 = *((_QWORD *)a1 + 7);
      v83 = ~v13;
      v84 = v9 + 56;
      v82 = v16;
      while (1)
      {
        v17 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 72 * a2);
        if (*(unsigned __int8 *)v17 != v16)
          goto LABEL_11;
        v19 = (void *)v17[1];
        v18 = v17[2];
        v20 = v17[3];
        v86 = v17[4];
        v22 = v17[5];
        v21 = v17[6];
        v23 = v17[7];
        v24 = (void *)v17[8];
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = v24;
        v26 = v19;
        if ((sub_1BC62CEB4() & 1) == 0)
          break;
        v27 = v20;
        if (v20)
        {
          v28 = v22;
          v29 = v23;
          if (!v80)
            break;
          v30 = v18 == v76 && v27 == v80;
          v31 = v21;
          if (!v30 && (sub_1BC62D574() & 1) == 0)
            break;
        }
        else
        {
          v28 = v22;
          v29 = v23;
          v31 = v21;
          if (v80)
            break;
        }
        v32 = v86 == v78 && v28 == v77;
        if (!v32 && (sub_1BC62D574() & 1) == 0)
          break;
        if ((unint64_t)v31 >> 62)
        {
          swift_bridgeObjectRetain();
          v33 = sub_1BC62D3B8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v33 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v34 = *(_QWORD *)&v88[0];
        v35 = *(_QWORD *)&v88[0] >> 62;
        v75 = *(_QWORD *)&v88[0];
        if (*(_QWORD *)&v88[0] >> 62)
        {
          swift_bridgeObjectRetain();
          v62 = sub_1BC62D3B8();
          sub_1BC3FE9FC((uint64_t)v88);
          v34 = v75;
          if (v33 != v62)
            break;
        }
        else if (v33 != *(_QWORD *)((*(_QWORD *)&v88[0] & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          break;
        }
        if (v33)
        {
          v36 = v31 & 0xFFFFFFFFFFFFFF8;
          v37 = (v31 & 0xFFFFFFFFFFFFFF8) + 32;
          if (v31 < 0)
            v36 = v31;
          if ((unint64_t)v31 >> 62)
            v37 = v36;
          v38 = v34 & 0xFFFFFFFFFFFFFF8;
          v39 = (v34 & 0xFFFFFFFFFFFFFF8) + 32;
          v73 = v34 & 0xFFFFFFFFFFFFFF8;
          if (v34 < 0)
            v38 = v34;
          if (v35)
            v39 = v38;
          if (v37 != v39)
          {
            if (v33 < 0)
              goto LABEL_84;
            v72 = v31 & 0xC000000000000001;
            if ((v31 & 0xC000000000000001) != 0)
            {
              v40 = (id)MEMORY[0x1BCCF24CC](0, v31);
            }
            else
            {
              if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_85;
              v40 = *(id *)(v31 + 32);
            }
            v41 = v40;
            v71 = v75 & 0xC000000000000001;
            if ((v75 & 0xC000000000000001) != 0)
            {
              v42 = (id)MEMORY[0x1BCCF24CC](0);
            }
            else
            {
              if (!*(_QWORD *)(v73 + 16))
                goto LABEL_86;
              v42 = *(id *)(v75 + 32);
            }
            v43 = v42;
            sub_1BC34B6A0(0, &qword_1ED6A48A0);
            v44 = sub_1BC62CEB4();
            v45 = v41;
            v46 = v44;

            if ((v46 & 1) == 0)
              break;
            if (v33 != 1)
            {
              if (v72)
              {
                v48 = (id)MEMORY[0x1BCCF24CC](1, v31);
              }
              else
              {
                if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
                  goto LABEL_89;
                v48 = *(id *)(v31 + 40);
              }
              v49 = v48;
              if (v71)
              {
                v50 = (id)MEMORY[0x1BCCF24CC](1, v75);
              }
              else
              {
                if (*(_QWORD *)(v73 + 16) < 2uLL)
                  goto LABEL_90;
                v50 = *(id *)(v75 + 40);
              }
              v51 = v50;
              v52 = sub_1BC62CEB4();
              v53 = v49;
              v54 = v52;

              if ((v54 & 1) == 0)
                break;
              v70 = 2 - v33;
              v55 = 6;
              while (v70 + v55 != 6)
              {
                v59 = v55 - 4;
                if (v72)
                {
                  v60 = (id)MEMORY[0x1BCCF24CC](v55 - 4, v31);
                }
                else
                {
                  if (v59 >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_87;
                  v60 = *(id *)(v31 + 8 * v55);
                }
                v61 = v60;
                if (v71)
                {
                  v56 = (id)MEMORY[0x1BCCF24CC](v55 - 4, v75);
                }
                else
                {
                  if (v59 >= *(_QWORD *)(v73 + 16))
                    goto LABEL_88;
                  v56 = *(id *)(v75 + 8 * v55);
                }
                v57 = v56;
                v58 = sub_1BC62CEB4();

                ++v55;
                if ((v58 & 1) == 0)
                  goto LABEL_10;
              }
            }
          }
        }
        if ((sub_1BC3ED4CC(v29, v74) & 1) == 0)
          break;
        v47 = sub_1BC62CEB4();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v14 = v84;
        v9 = v85;
        v15 = v83;
        v16 = v82;
        if ((v47 & 1) != 0)
          goto LABEL_91;
LABEL_11:
        a2 = (a2 + 1) & v15;
        if (((*(_QWORD *)(v14 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_81;
      }
LABEL_10:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v85;

      v15 = v83;
      v14 = v84;
      v16 = v82;
      goto LABEL_11;
    }
  }
LABEL_81:
  v63 = *v81;
  *(_QWORD *)(*v81 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v64 = *(_QWORD *)(v63 + 48) + 72 * a2;
  *(_QWORD *)(v64 + 64) = *((_QWORD *)a1 + 8);
  v65 = *((_OWORD *)a1 + 3);
  *(_OWORD *)(v64 + 32) = *((_OWORD *)a1 + 2);
  *(_OWORD *)(v64 + 48) = v65;
  v66 = *((_OWORD *)a1 + 1);
  *(_OWORD *)v64 = *(_OWORD *)a1;
  *(_OWORD *)(v64 + 16) = v66;
  v67 = *(_QWORD *)(v63 + 16);
  v68 = __OFADD__(v67, 1);
  v69 = v67 + 1;
  if (v68)
  {
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    sub_1BC62D5E0();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v63 + 16) = v69;
  }
}

uint64_t sub_1BC4916B8(uint64_t (*a1)(), unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v7 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (_QWORD *)((char *)v33 - v13);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v33 - v15;
  v17 = *(_QWORD *)(*v3 + 16);
  v18 = *(_QWORD *)(*v3 + 24);
  v34 = v8;
  v35 = v3;
  if (v18 > v17 && (a3 & 1) != 0)
    goto LABEL_23;
  if ((a3 & 1) != 0)
  {
    sub_1BC3C98B0();
  }
  else
  {
    if (v18 > v17)
    {
      sub_1BC3FAF50();
      goto LABEL_23;
    }
    sub_1BC4936A0();
  }
  v19 = *v3;
  sub_1BC62D670();
  sub_1BC62C740();
  sub_1BC62C740();
  v20 = sub_1BC62D6AC();
  v21 = -1 << *(_BYTE *)(v19 + 32);
  a2 = v20 & ~v21;
  v36 = v19;
  v22 = v19 + 56;
  if (((*(_QWORD *)(v19 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v33[1] = v7;
    v23 = ~v21;
    v24 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_1BC35EBE0(*(_QWORD *)(v36 + 48) + v24 * a2, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if (*((_QWORD *)v16 + 2) == *((_QWORD *)a1 + 2) && *((_QWORD *)v16 + 3) == *((_QWORD *)a1 + 3))
      {
        sub_1BC35EBE0((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC35EBE0((uint64_t)a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      }
      else
      {
        v27 = sub_1BC62D574();
        sub_1BC35EBE0((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC35EBE0((uint64_t)a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if ((v27 & 1) == 0)
        {
          sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          sub_1BC348D78((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          goto LABEL_11;
        }
      }
      if (*v14 == *v11 && v14[1] == v11[1])
      {
        a1 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem;
        sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1BC348D78((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_22:
        sub_1BC62D5E0();
        __break(1u);
        break;
      }
      v25 = sub_1BC62D574();
      sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1BC348D78((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if ((v25 & 1) != 0)
        goto LABEL_22;
LABEL_11:
      a2 = (a2 + 1) & v23;
    }
    while (((*(_QWORD *)(v22 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_23:
  v28 = *v35;
  *(_QWORD *)(*v35 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_1BC375724((uint64_t)a1, *(_QWORD *)(v28 + 48) + *(_QWORD *)(v34 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  v30 = *(_QWORD *)(v28 + 16);
  v31 = __OFADD__(v30, 1);
  v32 = v30 + 1;
  if (v31)
    __break(1u);
  else
    *(_QWORD *)(v28 + 16) = v32;
  return result;
}

uint64_t sub_1BC4919C0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1BC62B8C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC3C9C28(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1BC3FAF74();
      goto LABEL_12;
    }
    sub_1BC4939DC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], &qword_1EF42C7A0, &qword_1EF42C7A8, MEMORY[0x1E0D2BF08]);
  }
  v13 = *v3;
  sub_1BC347F0C(&qword_1EF42C7A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF08]);
  v14 = sub_1BC62C5C0();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1BC347F0C(&qword_1EF42D5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF10]);
      v19 = sub_1BC62C644();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1BC62D5E0();
  __break(1u);
  return result;
}

uint64_t sub_1BC491BE4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1BC62A8C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC3C9C4C(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1BC3FAF98();
      goto LABEL_12;
    }
    sub_1BC4939DC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], &qword_1EF42CB00, &qword_1EF42CB08, MEMORY[0x1E0CB11D0]);
  }
  v13 = *v3;
  sub_1BC347F0C(&qword_1EF42CB08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
  v14 = sub_1BC62C5C0();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1BC347F0C((unint64_t *)&unk_1EF4320E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
      v19 = sub_1BC62C644();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1BC62D5E0();
  __break(1u);
  return result;
}

void sub_1BC491E08(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC3C9FEC(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC3FB1EC();
      goto LABEL_14;
    }
    sub_1BC493F88(v8, (unint64_t *)&qword_1EF42C7B0, (unint64_t *)&qword_1EF431480, 0x1E0D2EE90, &qword_1EF42C7B8);
  }
  v9 = *v3;
  v10 = sub_1BC62CEA8();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC62CEB4();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC62D5E0();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC62CEB4();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1BC491FB4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BC3C9FF8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1BC3FB210();
      goto LABEL_14;
    }
    sub_1BC493D14();
  }
  v8 = *v3;
  result = sub_1BC62D664();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1BC62D5E0();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void sub_1BC4920D4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC3CA28C(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC3FB3B8();
      goto LABEL_14;
    }
    sub_1BC493F88(v8, (unint64_t *)&qword_1ED6A3F60, &qword_1ED6A58D8, 0x1E0CB6B00, (unint64_t *)&qword_1ED6A58E0);
  }
  v9 = *v3;
  v10 = sub_1BC62CEA8();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC62CEB4();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC62D5E0();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC62CEB4();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

void sub_1BC492280(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC3CA298(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC3FB590();
      goto LABEL_14;
    }
    sub_1BC493F88(v8, (unint64_t *)&qword_1EF42CAC8, &qword_1EF42CAD0, 0x1E0CB63D8, &qword_1EF42CAD8);
  }
  v9 = *v3;
  v10 = sub_1BC62CEA8();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC34B6A0(0, &qword_1EF42CAD0);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC62CEB4();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC62D5E0();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC62CEB4();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1BC49242C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v25 = result;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = *(_QWORD *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0)
    goto LABEL_21;
  if ((a3 & 1) != 0)
  {
    sub_1BC3CA2A4();
  }
  else
  {
    if (v6 > v5)
    {
      result = (uint64_t)sub_1BC3FB5B4();
      goto LABEL_21;
    }
    sub_1BC4941FC();
  }
  v7 = *v3;
  sub_1BC62D670();
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v8 = *(id *)(v25 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  sub_1BC62CEC0();

  result = sub_1BC62D6AC();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    type metadata accessor for CategoryRecordQueryDescription();
    do
    {
      swift_retain();
      BrowseCategory.rawValue.getter();
      v12 = v11;
      v14 = v13;
      BrowseCategory.rawValue.getter();
      if (v12 == v16 && v14 == v15)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v18 = sub_1BC62D574();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
          result = swift_release();
          goto LABEL_11;
        }
      }
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
      v19 = sub_1BC62CEB4();
      result = swift_release();
      if ((v19 & 1) != 0)
      {
        result = sub_1BC62D5E0();
        __break(1u);
        break;
      }
LABEL_11:
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_21:
  v20 = *v24;
  *(_QWORD *)(*v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = v25;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
  return result;
}

void sub_1BC4926A0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC3CA5C4(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC3FB778();
      goto LABEL_14;
    }
    sub_1BC493F88(v8, (unint64_t *)&qword_1ED6A4928, &qword_1ED6A48A0, 0x1E0CB6A88, (unint64_t *)&qword_1ED6A4920);
  }
  v9 = *v3;
  v10 = sub_1BC62CEA8();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC62CEB4();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC62D5E0();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC62CEB4();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1BC49284C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;

  v33 = a1;
  v6 = type metadata accessor for BrowseCategory();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v31 = v7;
  v32 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BC3CA5D0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1BC3FB79C();
      goto LABEL_14;
    }
    sub_1BC4944F0();
  }
  v12 = *v3;
  sub_1BC62D670();
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v13 = sub_1BC62D6AC();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v30[1] = v6;
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_1BC35EBE0(*(_QWORD *)(v12 + 48) + v16 * a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      BrowseCategory.rawValue.getter();
      v18 = v17;
      v20 = v19;
      BrowseCategory.rawValue.getter();
      if (v18 == v22 && v20 == v21)
        goto LABEL_17;
      v23 = sub_1BC62D574();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC348D78((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      if ((v23 & 1) != 0)
        goto LABEL_18;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_14:
  v24 = v33;
  v25 = *v32;
  *(_QWORD *)(*v32 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_1BC375724(v24, *(_QWORD *)(v25 + 48) + *(_QWORD *)(v31 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_17:
  swift_bridgeObjectRelease_n();
  sub_1BC348D78((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
LABEL_18:
  result = sub_1BC62D5E0();
  __break(1u);
  return result;
}

void sub_1BC492A9C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC3CA958(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC3FB7C0();
      goto LABEL_14;
    }
    sub_1BC493F88(v8, (unint64_t *)&qword_1EF42CA80, (unint64_t *)&qword_1ED6A5990, 0x1E0CB37E8, (unint64_t *)&qword_1ED6A52F0);
  }
  v9 = *v3;
  v10 = sub_1BC62CEA8();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC62CEB4();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC62D5E0();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC62CEB4();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1BC492C48(_QWORD *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;

  v4 = v3;
  v8 = type metadata accessor for UserDomainConceptViewData();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(*v4 + 16);
  v13 = *(_QWORD *)(*v4 + 24);
  v26 = v9;
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1BC3CABFC();
  }
  else
  {
    if (v13 > v12)
    {
      sub_1BC3FB7E4();
      goto LABEL_12;
    }
    sub_1BC49483C();
  }
  v14 = *v4;
  sub_1BC62D670();
  UserDomainConceptViewData.hash(into:)();
  v15 = sub_1BC62D6AC();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v25[1] = v8;
    v17 = ~v16;
    v18 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1BC35EBE0(*(_QWORD *)(v14 + 48) + v18 * a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      v19 = _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0(v11, a1);
      sub_1BC348D78((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_1BC375724((uint64_t)a1, *(_QWORD *)(v20 + 48) + *(_QWORD *)(v26 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1BC62D5E0();
  __break(1u);
  return result;
}

uint64_t sub_1BC492E24(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1BC3CAEEC();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1BC3FBA2C();
      goto LABEL_22;
    }
    sub_1BC494AF4();
  }
  v11 = *v4;
  sub_1BC62D670();
  sub_1BC62C740();
  result = sub_1BC62D6AC();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1BC62D574(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1BC62D5E0();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1BC62D574();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1BC492FBC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BC3CB1DC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1BC3FBBF0();
      goto LABEL_14;
    }
    sub_1BC494DB4();
  }
  v8 = *v3;
  sub_1BC62D670();
  sub_1BC62D67C();
  result = sub_1BC62D6AC();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_1BC62D5E0();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

unint64_t sub_1BC493108()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t i;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t j;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char v39;
  int64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;

  v1 = *v0;
  sub_1BC3CCEAC(0, (unint64_t *)&qword_1EF42C9A8, (void (*)(void))sub_1BC35E728);
  v2 = sub_1BC62D19C();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_50:
    *v33 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v34 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v35 = (unint64_t)(v4 + 63) >> 6;
  v37 = v2 + 56;
  result = swift_retain();
  v8 = 0;
  v36 = v1;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v40 = v8;
      v12 = v11 | (v8 << 6);
    }
    else
    {
      v13 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_53;
      if (v13 >= v35)
      {
LABEL_48:
        result = swift_release_n();
        goto LABEL_50;
      }
      v14 = *(_QWORD *)(v34 + 8 * v13);
      v15 = v8 + 1;
      if (!v14)
      {
        v15 = v8 + 2;
        if (v8 + 2 >= v35)
          goto LABEL_48;
        v14 = *(_QWORD *)(v34 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 3;
          if (v8 + 3 >= v35)
            goto LABEL_48;
          v14 = *(_QWORD *)(v34 + 8 * v15);
          if (!v14)
          {
            v16 = v8 + 4;
            if (v8 + 4 >= v35)
              goto LABEL_48;
            v14 = *(_QWORD *)(v34 + 8 * v16);
            if (!v14)
            {
              while (1)
              {
                v15 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_54;
                if (v15 >= v35)
                  goto LABEL_48;
                v14 = *(_QWORD *)(v34 + 8 * v15);
                ++v16;
                if (v14)
                  goto LABEL_22;
              }
            }
            v15 = v8 + 4;
          }
        }
      }
LABEL_22:
      v6 = (v14 - 1) & v14;
      v40 = v15;
      v12 = __clz(__rbit64(v14)) + (v15 << 6);
    }
    v17 = *(_QWORD *)(v1 + 48) + 72 * v12;
    v18 = *(_BYTE *)v17;
    v19 = *(void **)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v41 = *(_QWORD *)(v17 + 32);
    v42 = *(_OWORD *)(v17 + 56);
    v43 = *(_OWORD *)(v17 + 40);
    sub_1BC62D670();
    v39 = v18;
    sub_1BC62D67C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38 = *((id *)&v42 + 1);
    v22 = v19;
    sub_1BC62CEC0();

    sub_1BC62D688();
    if (v21)
    {
      swift_bridgeObjectRetain();
      sub_1BC62C740();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v43 + 1) >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      sub_1BC62D67C();
      swift_bridgeObjectRetain();
      v23 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (!v23)
        goto LABEL_34;
    }
    else
    {
      swift_bridgeObjectRetain();
      result = sub_1BC62D67C();
      v23 = *(_QWORD *)((*((_QWORD *)&v43 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v23)
        goto LABEL_34;
    }
    if (v23 < 1)
      break;
    if ((*((_QWORD *)&v43 + 1) & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v23; ++i)
      {
        MEMORY[0x1BCCF24CC](i, *((_QWORD *)&v43 + 1));
        sub_1BC62CEC0();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v25 = 0;
      do
      {
        v26 = *(void **)(*((_QWORD *)&v43 + 1) + 8 * v25++ + 32);
        v27 = v26;
        sub_1BC62CEC0();

      }
      while (v23 != v25);
    }
LABEL_34:
    swift_bridgeObjectRelease();
    if ((unint64_t)v42 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      sub_1BC62D67C();
      swift_bridgeObjectRetain();
      v28 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (!v28)
        goto LABEL_6;
    }
    else
    {
      swift_bridgeObjectRetain();
      result = sub_1BC62D67C();
      v28 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v28)
        goto LABEL_6;
    }
    if (v28 < 1)
      goto LABEL_52;
    if ((v42 & 0xC000000000000001) != 0)
    {
      for (j = 0; j != v28; ++j)
      {
        MEMORY[0x1BCCF24CC](j, v42);
        sub_1BC62CEC0();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v30 = 0;
      do
      {
        v31 = *(void **)(v42 + 8 * v30++ + 32);
        v32 = v31;
        sub_1BC62CEC0();

      }
      while (v28 != v30);
    }
LABEL_6:
    swift_bridgeObjectRelease();
    v1 = v36;
    v9 = v38;
    sub_1BC62CEC0();

    sub_1BC62D6AC();
    result = sub_1BC62D0C4();
    *(_QWORD *)(v37 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = *(_QWORD *)(v3 + 48) + 72 * result;
    v8 = v40;
    *(_BYTE *)v10 = v39;
    *(_QWORD *)(v10 + 8) = v22;
    *(_QWORD *)(v10 + 16) = v20;
    *(_QWORD *)(v10 + 24) = v21;
    *(_QWORD *)(v10 + 32) = v41;
    *(_OWORD *)(v10 + 40) = v43;
    *(_OWORD *)(v10 + 56) = v42;
    ++*(_QWORD *)(v3 + 16);
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1BC4936A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v34 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1BC3CD7E4(0, &qword_1EF42C998, v6, &qword_1EF42C9A0, (uint64_t)&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryItem);
  v7 = sub_1BC62D19C();
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v10 = *(_QWORD *)(v5 + 56);
  v31 = v0;
  v32 = v5 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v34 + 72);
    sub_1BC35EBE0(*(_QWORD *)(v5 + 48) + v22 * v18, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1BC62D670();
    sub_1BC62C740();
    sub_1BC62C740();
    result = sub_1BC62D6AC();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = sub_1BC375724((uint64_t)v4, *(_QWORD *)(v8 + 48) + v16 * v22, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC4939DC(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t (*v42)(uint64_t);
  unint64_t *v43;
  uint64_t v44;

  v10 = v5;
  v11 = a2(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v39 - v13;
  v15 = *v5;
  v42 = a2;
  v43 = a4;
  v44 = a5;
  sub_1BC3CD7E4(0, a3, a2, a4, a5);
  v16 = sub_1BC62D19C();
  v17 = v16;
  if (!*(_QWORD *)(v15 + 16))
  {
    result = swift_release();
LABEL_35:
    *v10 = v17;
    return result;
  }
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = *(_QWORD *)(v15 + 56);
  v39 = v5;
  v40 = v15 + 56;
  if (v18 < 64)
    v20 = ~(-1 << v18);
  else
    v20 = -1;
  v21 = v20 & v19;
  v41 = (unint64_t)(v18 + 63) >> 6;
  v22 = v16 + 56;
  result = swift_retain();
  v24 = 0;
  while (1)
  {
    if (v21)
    {
      v26 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v27 = v26 | (v24 << 6);
      goto LABEL_24;
    }
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v28 >= v41)
      goto LABEL_33;
    v29 = *(_QWORD *)(v40 + 8 * v28);
    ++v24;
    if (!v29)
    {
      v24 = v28 + 1;
      if (v28 + 1 >= v41)
        goto LABEL_33;
      v29 = *(_QWORD *)(v40 + 8 * v24);
      if (!v29)
      {
        v24 = v28 + 2;
        if (v28 + 2 >= v41)
          goto LABEL_33;
        v29 = *(_QWORD *)(v40 + 8 * v24);
        if (!v29)
          break;
      }
    }
LABEL_23:
    v21 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v24 << 6);
LABEL_24:
    v31 = *(_QWORD *)(v12 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, *(_QWORD *)(v15 + 48) + v31 * v27, v11);
    sub_1BC347F0C(v43, v42, v44);
    result = sub_1BC62C5C0();
    v32 = -1 << *(_BYTE *)(v17 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v22 + 8 * (v33 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v22 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v22 + 8 * v34);
      }
      while (v38 == -1);
      v25 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v22 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(*(_QWORD *)(v17 + 48) + v25 * v31, v14, v11);
    ++*(_QWORD *)(v17 + 16);
  }
  v30 = v28 + 3;
  if (v30 >= v41)
  {
LABEL_33:
    result = swift_release_n();
    v10 = v39;
    goto LABEL_35;
  }
  v29 = *(_QWORD *)(v40 + 8 * v30);
  if (v29)
  {
    v24 = v30;
    goto LABEL_23;
  }
  while (1)
  {
    v24 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v24 >= v41)
      goto LABEL_33;
    v29 = *(_QWORD *)(v40 + 8 * v24);
    ++v30;
    if (v29)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC493D14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  sub_1BC3CCF68(0, &qword_1EF42C818);
  result = sub_1BC62D19C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_1BC62D664();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC493F88(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;

  v6 = v5;
  v7 = *v5;
  sub_1BC3FEA24(0, a2, a3, a4, a5);
  v8 = sub_1BC62D19C();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
LABEL_35:
    *v6 = v9;
    return result;
  }
  v32 = v5;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v7 + 56);
  v14 = (unint64_t)(v10 + 63) >> 6;
  v15 = v8 + 56;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_33;
      v22 = *(_QWORD *)(v11 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v14)
          goto LABEL_33;
        v22 = *(_QWORD *)(v11 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_23:
    v13 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    v24 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v20);
    result = sub_1BC62CEA8();
    v25 = -1 << *(_BYTE *)(v9 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
    ++*(_QWORD *)(v9 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    result = swift_release_n();
    v6 = v32;
    goto LABEL_35;
  }
  v22 = *(_QWORD *)(v11 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC4941FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  sub_1BC3CD7E4(0, &qword_1EF42CAB8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription, &qword_1ED6A51D0, (uint64_t)&protocol conformance descriptor for CategoryRecordQueryDescription);
  v3 = sub_1BC62D19C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v28 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_1BC62D670();
    swift_retain();
    BrowseCategory.rawValue.getter();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    v20 = *(id *)(v19 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
    sub_1BC62CEC0();

    result = sub_1BC62D6AC();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v28;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC4944F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for BrowseCategory();
  v34 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1BC3CD7E4(0, &qword_1EF42CAB0, v6, &qword_1ED6A5438, (uint64_t)&protocol conformance descriptor for BrowseCategory);
  v7 = sub_1BC62D19C();
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v10 = *(_QWORD *)(v5 + 56);
  v31 = v0;
  v32 = v5 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v34 + 72);
    sub_1BC35EBE0(*(_QWORD *)(v5 + 48) + v22 * v18, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    sub_1BC62D670();
    BrowseCategory.rawValue.getter();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    result = sub_1BC62D6AC();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = sub_1BC375724((uint64_t)v4, *(_QWORD *)(v8 + 48) + v16 * v22, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC49483C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = v0;
  v2 = type metadata accessor for UserDomainConceptViewData();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_1BC3CD7E4(0, &qword_1EF42CAA0, v7, &qword_1EF42CAA8, (uint64_t)&protocol conformance descriptor for UserDomainConceptViewData);
  v8 = sub_1BC62D19C();
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_25:
    *v1 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v11 = *(_QWORD *)(v6 + 56);
  v24 = v0;
  v25 = v6 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v26 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  result = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v16 << 6);
      goto LABEL_7;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v16;
    if (!v22)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v26)
        goto LABEL_23;
      v22 = *(_QWORD *)(v25 + 8 * v16);
      if (!v22)
      {
        v16 = v21 + 2;
        if (v21 + 2 >= v26)
          goto LABEL_23;
        v22 = *(_QWORD *)(v25 + 8 * v16);
        if (!v22)
          break;
      }
    }
LABEL_22:
    v13 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_7:
    v19 = *(_QWORD *)(v3 + 72);
    sub_1BC35EBE0(*(_QWORD *)(v6 + 48) + v19 * v18, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
    sub_1BC62D670();
    UserDomainConceptViewData.hash(into:)();
    sub_1BC62D6AC();
    v20 = sub_1BC62D0C4();
    *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = sub_1BC375724((uint64_t)v5, *(_QWORD *)(v9 + 48) + v20 * v19, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
    ++*(_QWORD *)(v9 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v26)
  {
LABEL_23:
    result = swift_release_n();
    v1 = v24;
    goto LABEL_25;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v16 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v16 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v16);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BC494AF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1BC3CCF68(0, &qword_1EF42CA20);
  v3 = sub_1BC62D19C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1BC62D670();
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    result = sub_1BC62D6AC();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC494DB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  sub_1BC3CCEAC(0, &qword_1EF42CA08, (void (*)(void))sub_1BC35DFC0);
  result = sub_1BC62D19C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_1BC62D670();
    sub_1BC62D67C();
    result = sub_1BC62D6AC();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1BC495040(void (*a1)(uint64_t *__return_ptr)@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (void *)MEMORY[0x1BCCF2DD8]();
  a1(&v6);
  v5 = v6;
  objc_autoreleasePoolPop(v4);
  *a2 = v5;
}

uint64_t sub_1BC495094(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  v11 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1BC62D3B8())
  {
    for (i = 4; ; ++i)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF24CC](i - 4, a1) : *(id *)(a1 + 8 * i);
      v7 = v6;
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A88]), sel_initWithSampleType_predicate_, v6, a2);

      if (v9)
      {
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

id sub_1BC49521C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  id result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = (id)swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8)
      return (id)swift_release();
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        return (id)swift_release();
      v14 = *(_QWORD *)(v4 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          return (id)swift_release();
        v14 = *(_QWORD *)(v4 + 8 * v10);
        if (!v14)
        {
          v10 = v13 + 3;
          if (v13 + 3 >= v8)
            return (id)swift_release();
          v14 = *(_QWORD *)(v4 + 8 * v10);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_5:
    result = objc_msgSend(*(id *)(a2 + 32), sel_stopQuery_, *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12));
  }
  v15 = v13 + 4;
  if (v15 >= v8)
    return (id)swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      return (id)swift_release();
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1BC495380()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432020)
  {
    sub_1BC495784(255, &qword_1EF432028, &qword_1EF42D030, &qword_1EF42C208, 0x1E0CB6CE8);
    sub_1BC495400();
    v0 = sub_1BC62BF84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432020);
  }
}

unint64_t sub_1BC495400()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF432030;
  if (!qword_1EF432030)
  {
    sub_1BC495784(255, &qword_1EF432028, &qword_1EF42D030, &qword_1EF42C208, 0x1E0CB6CE8);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1EF432030);
  }
  return result;
}

uint64_t sub_1BC495468@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC487A04(a1);
}

uint64_t sub_1BC495470()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC495498(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC495A04(255, a3, a4);
    sub_1BC495650(a5, a3, a4);
    v9 = sub_1BC62BF84();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC495520()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6A3698)
  {
    sub_1BC4955AC();
    sub_1BC3DD918(255, &qword_1ED6A4970, (unint64_t *)&qword_1ED6A4938, 0x1E0CB6870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6A3698);
  }
}

void sub_1BC4955AC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6A3690)
  {
    sub_1BC62A7B4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC34B6A0(255, &qword_1ED6A4978);
    sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v0, MEMORY[0x1E0CB09C8]);
    v1 = sub_1BC62C59C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6A3690);
  }
}

uint64_t sub_1BC495650(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC495A04(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C96108], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC495694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC487EAC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1BC49569C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A3660;
  if (!qword_1ED6A3660)
  {
    sub_1BC495498(255, &qword_1ED6A3668, &qword_1ED6A3638, (void (*)(uint64_t))sub_1BC495520, &qword_1ED6A3630);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C96148], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A3660);
  }
  return result;
}

void sub_1BC495704()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4960)
  {
    sub_1BC495784(255, &qword_1ED6A4950, &qword_1ED6A4970, (unint64_t *)&qword_1ED6A4938, 0x1E0CB6870);
    sub_1BC495808();
    v0 = sub_1BC62BF84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4960);
  }
}

void sub_1BC495784(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BC3DD918(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35E44C();
    v6 = sub_1BC62BF54();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BC495808()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A4948;
  if (!qword_1ED6A4948)
  {
    sub_1BC495784(255, &qword_1ED6A4950, &qword_1ED6A4970, (unint64_t *)&qword_1ED6A4938, 0x1E0CB6870);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A4948);
  }
  return result;
}

uint64_t sub_1BC495870@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC488F30(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

void sub_1BC495884()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF432040)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    sub_1BC49592C(255, &qword_1EF432048, (unint64_t *)&qword_1EF432050, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC4959B4(&qword_1EF432058, &qword_1EF432048, (unint64_t *)&qword_1EF432050, v0);
    v1 = sub_1BC62BF84();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF432040);
  }
}

void sub_1BC49592C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC3DD918(255, a3, (unint64_t *)&qword_1EF42CFA8, 0x1E0CB6620, a4);
    sub_1BC35E44C();
    v5 = sub_1BC62BF54();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC4959B4(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC49592C(255, a2, a3, a4);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C96108], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC4959F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC4895BC(*(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

void sub_1BC495A04(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_1BC35E44C();
    v4 = sub_1BC62BF54();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC495A70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432078)
  {
    sub_1BC495AC4();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432078);
  }
}

void sub_1BC495AC4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF432080)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A4938);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF432080);
  }
}

uint64_t sub_1BC495B3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC489E38(*(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_1BC495B48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF432090;
  if (!qword_1EF432090)
  {
    sub_1BC495498(255, &qword_1EF432068, &qword_1EF432070, (void (*)(uint64_t))sub_1BC495A70, &qword_1EF432088);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C96148], v1);
    atomic_store(result, (unint64_t *)&qword_1EF432090);
  }
  return result;
}

void sub_1BC495BB0()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6A3688)
  {
    v0 = MEMORY[0x1E0C960D8];
    sub_1BC495C48(255, &qword_1ED6A3658, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC495DA8(&qword_1ED6A3650, &qword_1ED6A3658, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x1E0C96108]);
    v1 = sub_1BC62BF84();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6A3688);
  }
}

void sub_1BC495C48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC34B508(255, &qword_1ED6A36C0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v7 = v6;
    v8 = sub_1BC35E44C();
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC495CD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC48A500(*(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

void sub_1BC495CE0()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6A35F0)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC495C48(255, &qword_1ED6A3600, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC34B508(255, &qword_1ED6A36B8, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC495DA8(&qword_1ED6A35F8, &qword_1ED6A3600, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC62BE1C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6A35F0);
  }
}

uint64_t sub_1BC495DA8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC495C48(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC495DEC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF432098)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
    sub_1BC49592C(255, &qword_1EF4320A0, &qword_1EF4320A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC4959B4(&qword_1EF4320B0, &qword_1EF4320A0, &qword_1EF4320A8, v0);
    v1 = sub_1BC62BF84();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF432098);
  }
}

uint64_t sub_1BC495E98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC48ADB8(*(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(_BYTE *)(v1 + 25), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

void sub_1BC495EB0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void (*v3)(uint64_t *__return_ptr);
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void (**)(uint64_t *__return_ptr))(v1 + 16);
  v4 = (void *)MEMORY[0x1BCCF2DD8]();
  v3(&v6);
  v5 = v6;
  objc_autoreleasePoolPop(v4);
  *a1 = v5;
}

void sub_1BC495F00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A3310)
  {
    sub_1BC3DD918(255, (unint64_t *)&qword_1ED6A36D0, &qword_1ED6A36C8, 0x1E0CB6A80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC62BF18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A3310);
  }
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t sub_1BC495FA0()
{
  return sub_1BC62BF00();
}

unint64_t sub_1BC495FC8()
{
  unint64_t result;

  result = qword_1EF4320C0;
  if (!qword_1EF4320C0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for RecordAnchorPublisherError, &type metadata for RecordAnchorPublisherError);
    atomic_store(result, (unint64_t *)&qword_1EF4320C0);
  }
  return result;
}

unint64_t sub_1BC496010()
{
  unint64_t result;

  result = qword_1EF4320C8;
  if (!qword_1EF4320C8)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for UserDomainConceptDataProvider.UserDomainConceptDataProviderError, &type metadata for UserDomainConceptDataProvider.UserDomainConceptDataProviderError);
    atomic_store(result, (unint64_t *)&qword_1EF4320C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordAnchorPublisherError()
{
  return &type metadata for RecordAnchorPublisherError;
}

uint64_t type metadata accessor for UserDomainConceptDataProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for UserDomainConceptDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.__allocating_init(healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.allUserDomainConceptsPublisher()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeAllMedicalUserDomainConceptsPublisher(withCategoryTypes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeHighlightableUserDomainConceptsPublisher()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeAllUserDomainConceptsPublisher(for:limit:filteringLowUtilityConcepts:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeLatestRecordWithValuePublisher(for:additionalPredicate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeAllMedicalUserDomainConceptsCountPublisher(for:additionalPredicate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeRecordCountPublisher(with:medicalType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeRecordExistsPublisher(with:medicalType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeLabResultsPublisher(for:limit:ascending:excludeMissingFromRemote:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t _s15HealthRecordsUI26RecordAnchorPublisherErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC496148 + 4 * byte_1BC642450[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC496168 + 4 * byte_1BC642455[v4]))();
}

_BYTE *sub_1BC496148(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC496168(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC496170(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC496178(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC496180(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC496188(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UserDomainConceptDataProvider.UserDomainConceptDataProviderError()
{
  return &type metadata for UserDomainConceptDataProvider.UserDomainConceptDataProviderError;
}

uint64_t sub_1BC4961A4(uint64_t a1, uint64_t a2)
{
  assignWithTake for AccountIcon(a2, a1);
  return a2;
}

uint64_t sub_1BC4961E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC380158(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC496224(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1BC380260(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BC496270(_OWORD *a1, uint64_t a2)
{
  assignWithTake for BrowseIcon(a2, a1);
  return a2;
}

uint64_t objectdestroy_48Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC4962DC(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  sub_1BC48AE84(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), *(_BYTE *)(v2 + 25), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

unint64_t sub_1BC4962F8()
{
  unint64_t result;

  result = qword_1EF4320D0;
  if (!qword_1EF4320D0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for UserDomainConceptDataProvider.UserDomainConceptDataProviderError, &type metadata for UserDomainConceptDataProvider.UserDomainConceptDataProviderError);
    atomic_store(result, (unint64_t *)&qword_1EF4320D0);
  }
  return result;
}

void sub_1BC49633C(int a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1BC48B3CC(a1, a2, a3, *(void (**)(void))(v3 + 16));
}

void sub_1BC496348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC48A5A8(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1BC496354(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  __int16 v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 0x1FF;
  return v3(&v5);
}

void sub_1BC496390(int a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1BC48A8A0(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16));
}

void sub_1BC49639C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC489EE0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1BC4963AC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BC4963D8(int a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1BC48A2B4(a1, a2, a3, *(void (**)(id, unint64_t, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC49641C(void (*a1)(unint64_t *), uint64_t a2)
{
  uint64_t v2;

  sub_1BC48966C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_1BC496428(int a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1BC489B70(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16));
}

uint64_t sub_1BC496430()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC496454(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC488FE8(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BC496468()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC49648C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC4964B8(int a1, void *a2, int a3, char a4, void *a5)
{
  uint64_t v5;

  sub_1BC4892B4(a1, a2, a3, a4, a5, *(void (**)(id, uint64_t))(v5 + 16), *(_QWORD *)(v5 + 24), *(_BYTE *)(v5 + 32), *(_QWORD *)(v5 + 40));
}

uint64_t objectdestroy_2Tm_2()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC496514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC487F4C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC49651C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *);
  _QWORD v6[2];
  char v7;

  v4 = *(uint64_t (**)(_QWORD *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  v7 = a3 & 1;
  return v4(v6);
}

uint64_t sub_1BC496554()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC496590(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5)
{
  uint64_t *v5;

  sub_1BC4881E4(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4], v5[5], v5[6]);
}

void sub_1BC4965BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC487A80(a1, a2, v2);
}

uint64_t sub_1BC4965C4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC4965F0(int a1, void *a2, int a3, char a4, void *a5)
{
  uint64_t v5;

  sub_1BC487C24(a1, a2, a3, a4, a5, *(void (**)(id, uint64_t))(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32));
}

id sub_1BC4967A0()
{
  return sub_1BC4079A0(&OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView, (uint64_t (*)(uint64_t))sub_1BC4967B4);
}

id sub_1BC4967B4(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;
  id v7;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v3 = objc_msgSend(v2, sel_layer);
  v4 = objc_msgSend(a1, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  v6 = sub_1BC53F250();
  if (qword_1EF428718 != -1)
    swift_once();
  objc_msgSend(v3, sel_setCornerRadius_, v6 * (*(double *)&qword_1EF459FC8 + 4.0) * 0.5);

  v7 = sub_1BC3707FC();
  objc_msgSend(v2, sel_setBackgroundColor_, v7);

  objc_msgSend(v2, sel_setHidden_, 1);
  return v2;
}

id sub_1BC496900()
{
  return sub_1BC4079A0(&OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView, (uint64_t (*)(uint64_t))sub_1BC496914);
}

id sub_1BC496914(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;
  id v7;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v3 = objc_msgSend(v2, sel_layer);
  v4 = objc_msgSend(a1, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  v6 = sub_1BC53F250();
  if (qword_1EF428718 != -1)
    swift_once();
  objc_msgSend(v3, sel_setCornerRadius_, v6 * *(double *)&qword_1EF459FC8 * 0.5);

  v7 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v7);

  objc_msgSend(v2, sel_setHidden_, 1);
  return v2;
}

id sub_1BC496A74(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  id v4;
  id v5;
  id v6;
  objc_super v8;

  v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for RangePillView();
  v4 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);
  v5 = v4;
  if (v4)
  {
    v6 = v4;
    sub_1BC496B4C();

  }
  return v5;
}

uint64_t sub_1BC496B4C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  double v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = objc_msgSend(v0, sel_layer);
  v2 = objc_msgSend(v0, sel_traitCollection);
  v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  v4 = sub_1BC53F250();
  objc_msgSend(v1, sel_setCornerRadius_, v4 * 3.0);

  v5 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v5, sel_setMasksToBounds_, 0);

  v6 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v6, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  v7 = sub_1BC4967A0();
  objc_msgSend(v0, sel_addSubview_, v7);

  v8 = sub_1BC496900();
  objc_msgSend(v0, sel_addSubview_, v8);

  sub_1BC448304();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC639590;
  v10 = sub_1BC62BDD4();
  v11 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v11;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC4978B4();
  sub_1BC62CE24();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BC496D38(void *a1, id a2, uint64_t a3)
{
  id v5;
  double v6;
  id v7;
  id v8;
  double v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  id v17;
  id v18;
  id v19;
  id v20;
  double v21;
  id v22;
  id v23;
  id v24;
  double v25;

  v5 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  v6 = sub_1BC53F250();

  v7 = objc_msgSend(a1, sel_traitCollection);
  v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  v9 = sub_1BC53F250();
  if (v6 != v9)
  {
    swift_beginAccess();
    v10 = MEMORY[0x1BCCF37A4](a3 + 16);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = sub_1BC4967A0();
      v13 = objc_msgSend(v12, sel_layer);

      v14 = objc_msgSend(v11, sel_traitCollection);
      v15 = objc_msgSend(v14, sel_preferredContentSizeCategory);

      v16 = sub_1BC53F250();
      if (qword_1EF428718 != -1)
        swift_once();
      objc_msgSend(v13, sel_setCornerRadius_, v16 * (*(double *)&qword_1EF459FC8 + 4.0) * 0.5);

      v17 = sub_1BC496900();
      v18 = objc_msgSend(v17, sel_layer);

      v19 = objc_msgSend(v11, sel_traitCollection);
      v20 = objc_msgSend(v19, sel_preferredContentSizeCategory);

      v21 = sub_1BC53F250();
      objc_msgSend(v18, sel_setCornerRadius_, v21 * *(double *)&qword_1EF459FC8 * 0.5);

      v22 = objc_msgSend(v11, sel_layer);
      v23 = objc_msgSend(v11, sel_traitCollection);
      v24 = objc_msgSend(v23, sel_preferredContentSizeCategory);

      v25 = sub_1BC53F250();
      objc_msgSend(v22, sel_setCornerRadius_, v25 * 3.0);

    }
  }
}

void sub_1BC496FD4()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  double v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  double v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  double v52;
  id v53;
  void *v54;
  uint64_t v55;
  double v56;
  CGRect v57;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v55 = OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints;
  sub_1BC34D89C();
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v3);

  v4 = sub_1BC496900();
  v5 = sub_1BC4967A0();
  objc_msgSend(v4, sel_setHidden_, 0);
  objc_msgSend(v5, sel_setHidden_, 0);

  sub_1BC497844();
  sub_1BC62C5E4();
  v6 = objc_msgSend(v1, sel_traitCollection);
  v7 = objc_msgSend(v6, sel_preferredContentSizeCategory);

  v8 = sub_1BC53F250();
  if (qword_1EF428718 != -1)
    swift_once();
  v9 = 0.5;
  if (v56 > 0.5)
    v9 = -0.5;
  v10 = v9 * (v8 * (*(double *)&qword_1EF459FC8 + 4.0) + -4.0);
  sub_1BC34D844();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC641AB0;
  v12 = sub_1BC4967A0();
  v13 = objc_msgSend(v12, sel_centerXAnchor);

  v14 = objc_msgSend(v1, sel_leadingAnchor);
  objc_msgSend(v1, sel_frame);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, v56 * (v10 + CGRectGetWidth(v57)));

  *(_QWORD *)(v11 + 32) = v15;
  v16 = sub_1BC4967A0();
  v17 = objc_msgSend(v16, sel_centerYAnchor);

  v18 = objc_msgSend(v1, sel_centerYAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(_QWORD *)(v11 + 40) = v19;
  v20 = sub_1BC4967A0();
  v21 = objc_msgSend(v20, sel_heightAnchor);

  v22 = objc_msgSend(v1, sel_traitCollection);
  v23 = objc_msgSend(v22, (SEL)&selRef_setAccounts_);

  v24 = sub_1BC53F250();
  v25 = objc_retainAutoreleasedReturnValue(objc_msgSend(v21, sel_constraintEqualToConstant_, v24 * (*(double *)&qword_1EF459FC8
                                                                                                  + 4.0)));

  *(_QWORD *)(v11 + 48) = v25;
  v26 = sub_1BC4967A0();
  v27 = objc_msgSend(v26, sel_widthAnchor);

  v28 = objc_msgSend(v1, (SEL)&selRef_heightForHeader);
  v29 = objc_msgSend(v28, (SEL)&selRef_setAccounts_);

  v30 = sub_1BC53F250();
  v31 = objc_retainAutoreleasedReturnValue(objc_msgSend(v27, sel_constraintEqualToConstant_, v30 * (*(double *)&qword_1EF459FC8
                                                                                                  + 4.0)));

  *(_QWORD *)(v11 + 56) = v31;
  v32 = sub_1BC496900();
  v33 = objc_msgSend(v32, sel_centerXAnchor);

  v34 = sub_1BC4967A0();
  v35 = objc_msgSend(v34, sel_centerXAnchor);

  v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
  *(_QWORD *)(v11 + 64) = v36;
  v37 = sub_1BC496900();
  v38 = objc_msgSend(v37, sel_centerYAnchor);

  v39 = sub_1BC4967A0();
  v40 = objc_msgSend(v39, sel_centerYAnchor);

  v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v40);
  *(_QWORD *)(v11 + 72) = v41;
  v42 = sub_1BC496900();
  v43 = objc_msgSend(v42, sel_heightAnchor);

  v44 = objc_msgSend(v1, sel_traitCollection);
  v45 = objc_msgSend(v44, (SEL)&selRef_setAccounts_);

  v46 = sub_1BC53F250();
  v47 = objc_msgSend(v43, sel_constraintEqualToConstant_, v46 * *(double *)&qword_1EF459FC8);

  *(_QWORD *)(v11 + 80) = v47;
  v48 = sub_1BC496900();
  v49 = objc_msgSend(v48, sel_widthAnchor);

  v50 = objc_msgSend(v1, sel_traitCollection);
  v51 = objc_msgSend(v50, (SEL)&selRef_setAccounts_);

  v52 = sub_1BC53F250();
  v53 = objc_msgSend(v49, sel_constraintEqualToConstant_, v52 * *(double *)&qword_1EF459FC8);

  *(_QWORD *)(v11 + 88) = v53;
  sub_1BC62C890();
  *(_QWORD *)&v1[v55] = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v54 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v54);

}

id sub_1BC497684()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RangePillView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RangePillView()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for RangePillView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC49777C + 4 * byte_1BC642665[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC4977B0 + 4 * byte_1BC642660[v4]))();
}

uint64_t sub_1BC4977B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4977B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC4977C0);
  return result;
}

uint64_t sub_1BC4977CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4977D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC4977D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4977E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RangePillView.Style()
{
  return &type metadata for RangePillView.Style;
}

unint64_t sub_1BC497800()
{
  unint64_t result;

  result = qword_1EF432140;
  if (!qword_1EF432140)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6426C0, &type metadata for RangePillView.Style);
    atomic_store(result, (unint64_t *)&qword_1EF432140);
  }
  return result;
}

unint64_t sub_1BC497844()
{
  unint64_t result;

  result = qword_1EF432150;
  if (!qword_1EF432150)
  {
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEF068], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EF432150);
  }
  return result;
}

uint64_t sub_1BC497888()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC4978AC(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC496D38(a1, a2, v2);
}

unint64_t sub_1BC4978B4()
{
  unint64_t result;

  result = qword_1EF435B60;
  if (!qword_1EF435B60)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF435B60);
  }
  return result;
}

uint64_t HKValueRange<>.valueDisplayString(style:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v30;
  uint64_t v31;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - v4;
  v6 = objc_msgSend(v1, sel_minValue);
  if (!v6)
  {
LABEL_7:
    v10 = objc_msgSend(v1, sel_minValue);
    if (!v10)
    {
      v10 = objc_msgSend(v1, sel_maxValue);
      if (!v10)
        return 0;
    }
    v11 = v10;
    v12 = objc_msgSend((id)objc_opt_self(), sel_localizedStringFromNumber_numberStyle_, v10, a1);
    v13 = sub_1BC62C680();

    return v13;
  }
  v7 = v6;
  v8 = objc_msgSend(v1, sel_maxValue);
  if (!v8)
  {
    v9 = v7;
    goto LABEL_6;
  }
  v9 = v8;
  sub_1BC497C80();
  if ((sub_1BC62CEB4() & 1) != 0)
  {

LABEL_6:
    goto LABEL_7;
  }
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_localizedStringFromNumber_numberStyle_, v7, a1);
  v16 = sub_1BC62C680();
  v30 = v17;
  v31 = v16;

  v18 = objc_msgSend(v14, sel_localizedStringFromNumber_numberStyle_, v9, a1);
  v19 = sub_1BC62C680();
  v21 = v20;

  v22 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 1, 1, v22);
  if (qword_1EF428568 != -1)
    swift_once();
  v23 = (void *)qword_1EF42F6E0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BC6395A0;
  v25 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
  v26 = sub_1BC3644C0();
  v27 = v30;
  *(_QWORD *)(v24 + 32) = v31;
  *(_QWORD *)(v24 + 40) = v27;
  *(_QWORD *)(v24 + 96) = v25;
  *(_QWORD *)(v24 + 104) = v26;
  *(_QWORD *)(v24 + 64) = v26;
  *(_QWORD *)(v24 + 72) = v19;
  *(_QWORD *)(v24 + 80) = v21;
  v28 = v23;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v13 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v5);
  return v13;
}

unint64_t sub_1BC497C80()
{
  unint64_t result;

  result = qword_1ED6A5990;
  if (!qword_1ED6A5990)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A5990);
  }
  return result;
}

uint64_t sub_1BC497CBC(char *a1, char *a2)
{
  return sub_1BC4EDA14(*a1, *a2);
}

uint64_t sub_1BC497CC8()
{
  sub_1BC62D670();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC497D44()
{
  sub_1BC62C740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC497D9C()
{
  sub_1BC62D670();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC497E14@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BC62D430();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BC497E70(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x617461446F6ELL;
  if (*v1)
    v2 = 0x676E6964616F6CLL;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BC497EAC()
{
  sub_1BC498748();
  return sub_1BC62C848();
}

uint64_t sub_1BC497F08()
{
  sub_1BC498748();
  return sub_1BC62C830();
}

void sub_1BC497FC8()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  objc_class *v21;
  uint64_t ObjCClassFromMetadata;
  void *v23;
  id v24;
  char *v25;
  id v26;
  void *v27;
  objc_super v28;

  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for NoDataViewController();
  objc_msgSendSuper2(&v28, sel_viewDidLoad);
  if ((v0[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_style] & 1) != 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v1 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1EF428560 != -1)
      swift_once();
    v1 = (id)qword_1EF42F6C8;
    swift_bridgeObjectRetain();
  }
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v2 = objc_allocWithZone(MEMORY[0x1E0DC40B8]);
  v3 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithFrame_title_style_, v3, 0, 0.0, 0.0, 0.0, 0.0, 0xE000000000000000);

  if (v4)
  {
    v5 = v4;
    v6 = (void *)sub_1BC62C86C();
    v7 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v5, sel_setAccessibilityIdentifier_, v7);
  }
  v8 = objc_msgSend(v0, sel_tableView);
  if (!v8)
  {
    __break(1u);
    goto LABEL_19;
  }
  v9 = v8;
  objc_msgSend(v8, sel_setBackgroundView_, v4);

  v10 = objc_msgSend(v0, sel_tableView);
  if (!v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = v10;
  v12 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v11, sel_setBackgroundColor_, v12);

  v13 = objc_msgSend(v0, sel_tableView);
  if (!v13)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v14 = v13;
  objc_msgSend(v13, sel_setSeparatorStyle_, 0);

  v15 = objc_msgSend(v0, sel_tableView);
  if (!v15)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v16 = v15;
  objc_msgSend(v15, sel_setScrollEnabled_, 0);

  v17 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_profile];
  if (!v17)
  {
LABEL_17:

    return;
  }
  v18 = v17;
  v19 = objc_msgSend(v0, sel_tableView);
  if (v19)
  {
    v20 = v19;
    v21 = (objc_class *)type metadata accessor for AccountUpgradeTileCell();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v23 = (void *)sub_1BC62C650();
    objc_msgSend(v20, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v23);

    objc_allocWithZone(v21);
    v24 = v18;
    v25 = v0;
    v26 = AccountUpgradeTileCell.init(profile:presentingViewController:)(v24, v25);
    v27 = *(void **)&v25[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_accountUpgradeTile];
    *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_accountUpgradeTile] = v26;

    v4 = v27;
    goto LABEL_17;
  }
LABEL_22:
  __break(1u);
}

id sub_1BC49857C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoDataViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NoDataViewController()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for NoDataViewController.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC498680 + 4 * byte_1BC6426F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC4986B4 + 4 * byte_1BC6426F0[v4]))();
}

uint64_t sub_1BC4986B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4986BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC4986C4);
  return result;
}

uint64_t sub_1BC4986D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4986D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC4986DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4986E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NoDataViewController.Style()
{
  return &type metadata for NoDataViewController.Style;
}

unint64_t sub_1BC498704()
{
  unint64_t result;

  result = qword_1EF4321A0;
  if (!qword_1EF4321A0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6427E4, &type metadata for NoDataViewController.Style);
    atomic_store(result, (unint64_t *)&qword_1EF4321A0);
  }
  return result;
}

unint64_t sub_1BC498748()
{
  unint64_t result;

  result = qword_1EF4321A8;
  if (!qword_1EF4321A8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64276C, &type metadata for NoDataViewController.Style);
    atomic_store(result, (unint64_t *)&qword_1EF4321A8);
  }
  return result;
}

uint64_t sub_1BC49878C()
{
  uint64_t v0;
  char *v1;
  unint64_t v3;
  char *v5;
  uint64_t v6;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_accountUpgradeTile);
  if (!v1)
    return 0;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_category + 8)
    || *(_BYTE *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_category) != 10)
  {
    return 0;
  }
  v3 = *(_QWORD *)&v1[OBJC_IVAR___HRAccountUpgradeTileCell_accounts];
  if (v3 >> 62)
  {
    v5 = v1;
    swift_bridgeObjectRetain();
    v6 = sub_1BC62D3B8();

    swift_bridgeObjectRelease();
    if (v6)
      return 1;
  }
  else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return 1;
  }
  return 0;
}

HealthRecordsUI::DisplayCategory::Kind_optional HKMedicalRecord.categoryKind.getter@<W0>(_BYTE *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  HealthRecordsUI::DisplayCategory::Kind_optional result;
  char v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint8_t *v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_t v28;
  uint8_t *v29;
  int v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;

  v3 = sub_1BC62A7B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62BB34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result.value = DisplayCategory.Kind.init(rawValue:)((Swift::Int)objc_msgSend(v1, sel_recordCategoryType)).value;
  v12 = v34;
  if (v34 == 11)
  {
    sub_1BC62BAF8();
    v13 = v1;
    v14 = sub_1BC62BB28();
    v15 = sub_1BC62CAC4();
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v32 = a1;
      v17 = swift_slowAlloc();
      v30 = v16;
      v18 = (uint8_t *)v17;
      v31 = swift_slowAlloc();
      v34 = v31;
      v29 = v18;
      *(_DWORD *)v18 = 136446210;
      v19 = objc_msgSend(v13, sel_UUID, v18 + 4);
      v28 = v14;
      v20 = v19;
      sub_1BC62A79C();

      sub_1BC4997C8();
      v21 = sub_1BC62D52C();
      v23 = v22;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v33 = sub_1BC4991F0(v21, v23, &v34);
      sub_1BC62CFF8();

      a1 = v32;
      swift_bridgeObjectRelease();
      v25 = v28;
      v24 = v29;
      _os_log_impl(&dword_1BC30A000, v28, (os_log_type_t)v30, "HKMedicalRecord %{public}s is reporting record category type INVALID", v29, 0xCu);
      v26 = v31;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v26, -1, -1);
      MEMORY[0x1BCCF36A8](v24, -1, -1);

    }
    else
    {

    }
    result.value = (*(unsigned __int8 (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v12 = 0;
  }
  *a1 = v12;
  return result;
}

uint64_t HKMedicalRecord.displayNameFromFHIR.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  char v11;
  id v12;
  uint64_t v13;
  id v15;

  v1 = objc_msgSend(v0, sel_medicalRecordCodings);
  sub_1BC34B6A0(0, &qword_1EF429BC0);
  v2 = sub_1BC62C878();

  if (v2 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    v3 = sub_1BC62D3B8();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v15 = (id)objc_opt_self();
      v4 = 4;
      do
      {
        if ((v2 & 0xC000000000000001) != 0)
          v5 = (id)MEMORY[0x1BCCF24CC](v4 - 4, v2);
        else
          v5 = *(id *)(v2 + 8 * v4);
        v6 = v5;
        v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_16;
        }
        v8 = objc_msgSend(v5, sel_codingSystem);
        v9 = objc_msgSend(v15, sel_textSystem);
        if (v8)
        {
          sub_1BC34B6A0(0, &qword_1EF4321B0);
          v10 = v8;
          v11 = sub_1BC62CEB4();

          if ((v11 & 1) != 0)
          {
            swift_bridgeObjectRelease_n();
            v12 = objc_msgSend(v6, sel_displayString);

            if (!v12)
              return 0;
            v13 = sub_1BC62C680();

            return v13;
          }
          v9 = v6;
        }
        else
        {

        }
        ++v4;
      }
      while (v7 != v3);
    }
  }
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t HKMedicalRecord.firstDisplayText.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v1 = objc_msgSend(v0, sel_medicalRecordCodings);
  sub_1BC34B6A0(0, &qword_1EF429BC0);
  v2 = sub_1BC62C878();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  v3 = sub_1BC62D3B8();
  if (!v3)
    goto LABEL_17;
LABEL_3:
  v4 = 4;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)MEMORY[0x1BCCF24CC](v4 - 4, v2);
    else
      v5 = *(id *)(v2 + 8 * v4);
    v6 = v5;
    v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    v8 = objc_msgSend(v5, sel_displayString);
    if (v8)
    {
      v9 = v8;
      v10 = sub_1BC62C680();
      v12 = v11;

      swift_bridgeObjectRelease();
      v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0)
        v13 = v10 & 0xFFFFFFFFFFFFLL;
      if (v13)
        break;
    }

    ++v4;
    if (v7 == v3)
      goto LABEL_17;
  }
  swift_bridgeObjectRelease_n();
  v14 = objc_msgSend(v6, sel_displayString);

  if (!v14)
    return 0;
  v15 = sub_1BC62C680();

  return v15;
}

id sub_1BC498E90(void *a1, uint64_t a2)
{
  return sub_1BC42DAEC(a1, a2, (void (*)(void))HKMedicalRecord.preferredDisplayName.getter);
}

uint64_t HKMedicalRecord.preferredDisplayName.getter()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;

  if (objc_msgSend(v0, sel_recordCategoryType) == (id)8)
  {
    objc_opt_self();
    v1 = swift_dynamicCastObjCClass();
    if (v1)
    {
      v2 = (void *)v1;
      v3 = v0;
      v4 = objc_msgSend(v2, sel_displayName);
      if (v4)
      {
        v5 = v4;
        v6 = sub_1BC62C680();

        v3 = v5;
      }
      else
      {
        if (qword_1ED6A4880 != -1)
          swift_once();
        v17 = (id)qword_1ED6A5510;
        swift_bridgeObjectRetain();
        v6 = sub_1BC62A4A8();
        swift_bridgeObjectRelease();

      }
      goto LABEL_21;
    }
  }
  v7 = objc_msgSend(v0, sel_primaryConcept);
  v8 = objc_msgSend(v7, sel_localizedPreferredName);

  if (v8)
  {
    v6 = sub_1BC62C680();
    v10 = v9;

    v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v11 = v6 & 0xFFFFFFFFFFFFLL;
    if (v11)
      return v6;
    swift_bridgeObjectRelease();
  }
  v12 = HKMedicalRecord.displayNameFromFHIR.getter();
  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = v12 & 0xFFFFFFFFFFFFLL;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    v12 = HKMedicalRecord.firstDisplayText.getter();
    v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0)
      v16 = v12 & 0xFFFFFFFFFFFFLL;
    if (!v16)
    {
      swift_bridgeObjectRelease();
      v3 = objc_msgSend(v0, sel_fallbackDisplayString);
      v6 = sub_1BC62C680();
LABEL_21:

      return v6;
    }
  }
  return v12;
}

id sub_1BC4990D8(void *a1, uint64_t a2)
{
  return sub_1BC42DAEC(a1, a2, (void (*)(void))HKMedicalRecord.displayNameForGroupByConcept.getter);
}

uint64_t HKMedicalRecord.displayNameForGroupByConcept.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v9;
  uint64_t v10;

  v1 = objc_msgSend(v0, sel_primaryConcept);
  v2 = objc_msgSend(v1, sel_groupByConcept);

  v3 = objc_msgSend(v2, sel_localizedPreferredName);
  if (v3)
  {
    v4 = sub_1BC62C680();
    v6 = v5;

    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
      return v4;
    swift_bridgeObjectRelease();
  }
  v9 = objc_msgSend(v0, sel_preferredDisplayName);
  v10 = sub_1BC62C680();

  return v10;
}

HealthRecordsUI::DisplayCategory::Kind_optional sub_1BC4991D0@<W0>(_BYTE *a1@<X8>)
{
  return HKMedicalRecord.categoryKind.getter(a1);
}

uint64_t sub_1BC4991F0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1BC4992C0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1BC375540((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1BC375540((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_1BC4992C0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1BC62D004();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1BC499478(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1BC62D250();
  if (!v8)
  {
    sub_1BC62D388();
    __break(1u);
LABEL_17:
    result = sub_1BC62D418();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1BC499478(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1BC49950C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC499680(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1BC499680(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1BC49950C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1BC5FCBA0(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1BC62D1E4();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1BC62D388();
      __break(1u);
LABEL_10:
      v2 = sub_1BC62C770();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1BC62D418();
    __break(1u);
LABEL_14:
    result = sub_1BC62D388();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1BC499680(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC499810();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

unint64_t sub_1BC4997C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF429280;
  if (!qword_1EF429280)
  {
    v1 = sub_1BC62A7B4();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CB09F0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF429280);
  }
  return result;
}

void sub_1BC499810()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4B88)
  {
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4B88);
  }
}

uint64_t CancellationToken.__allocating_init(cancelBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a1;
  *(_QWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_1BC4998A4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1BC4998D4@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 24);
  v4 = *(_QWORD *)(v3 + 32);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_1BC3AABB0;
  a2[1] = (uint64_t (*)())v6;
  return swift_retain();
}

uint64_t sub_1BC499948(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v6 + 24) = sub_1BC3AABB0;
  *(_QWORD *)(v6 + 32) = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC4999CC()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_retain();
  return v1;
}

uint64_t sub_1BC499A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_release();
}

uint64_t (*sub_1BC499A64())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t CancellationToken.init(cancelBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return v2;
}

uint64_t CancellationToken.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  type metadata accessor for CancellationToken();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = sub_1BC499C80;
  *(_QWORD *)(result + 32) = v2;
  return result;
}

uint64_t sub_1BC499B08(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x1BCCF24CC](i, a1);
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain();
      }
      swift_beginAccess();
      if (*(_BYTE *)(v7 + 16) != 1)
      {
        *(_BYTE *)(v7 + 16) = 1;
        swift_beginAccess();
        v5 = *(void (**)(uint64_t))(v7 + 24);
        v6 = swift_retain();
        v5(v6);
        swift_release();
      }
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC499C5C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC499C80()
{
  uint64_t v0;

  return sub_1BC499B08(*(_QWORD *)(v0 + 16));
}

uint64_t type metadata accessor for CancellationToken()
{
  return objc_opt_self();
}

uint64_t sub_1BC499CA8()
{
  uint64_t v0;
  uint64_t result;
  void (*v2)(uint64_t);
  uint64_t v3;

  result = swift_beginAccess();
  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
  {
    *(_BYTE *)(v0 + 16) = 1;
    swift_beginAccess();
    v2 = *(void (**)(uint64_t))(v0 + 24);
    v3 = swift_retain();
    v2(v3);
    return swift_release();
  }
  return result;
}

uint64_t CancellationToken.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t CancellationToken.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC499D58@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_1BC499D9C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t method lookup function for CancellationToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CancellationToken.isCancelled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of CancellationToken.cancelBlock.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CancellationToken.cancelBlock.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of CancellationToken.cancelBlock.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of CancellationToken.__allocating_init(cancelBlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of CancellationToken.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_1BC499E34()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC499E5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;

  v3 = *(id *)(v1 + qword_1EF42C0D8);
  sub_1BC62CB90();
  v4 = type metadata accessor for PromotionListViewDataSourceProvider();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  sub_1BC34E718(&v8, v5 + 24);
  a1[3] = v4;
  result = sub_1BC379B20(&qword_1EF4322E0, v6, (uint64_t (*)(uint64_t))type metadata accessor for PromotionListViewDataSourceProvider, (uint64_t)&protocol conformance descriptor for PromotionListViewDataSourceProvider);
  a1[4] = result;
  *a1 = v5;
  return result;
}

uint64_t PromotionListViewDataSourceProvider.__allocating_init(predicate:store:)(uint64_t a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  sub_1BC34E718(a2, v4 + 24);
  return v4;
}

id sub_1BC499F54(void *a1, char *a2)
{
  char *v2;
  char v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  objc_super v17;
  char v18;

  v4 = *a2;
  v5 = (void *)*((_QWORD *)a2 + 1);
  v6 = (void *)*((_QWORD *)a2 + 8);
  v7 = objc_msgSend(a1, sel_healthStore);
  v8 = objc_msgSend(v7, sel_profileIdentifier);

  v18 = v4;
  v9 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE012predicateForaE10Onboarding9profileId12categoryKindSo11NSPredicateCSo19HKProfileIdentifierC_AD15DisplayCategoryV0M0OSgtFZ_0(v8, &v18);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  *(_QWORD *)&v2[qword_1EF42C0D8] = v9;
  *(_QWORD *)&v2[qword_1EF42C0E0] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v2[qword_1EF42C0D0] = a1;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3610]);
  v11 = v9;
  v12 = a1;
  v13 = objc_msgSend(v10, sel_init);
  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for FeedItemListViewController();
  v14 = objc_msgSendSuper2(&v17, sel_initWithCollectionViewLayout_, v13);

  v15 = v14;
  objc_msgSend(v15, sel_setTitle_, 0);

  return v15;
}

id PromotionListViewDataSourceProvider.predicate.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_1BC49A0E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1BC34E674(a1, (uint64_t)v5);
  v3 = *a2 + 24;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1BC34E718(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC49A14C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_1BC34E674(v1 + 24, a1);
}

uint64_t sub_1BC49A194(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 24;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1BC34E718(a1, v3);
  return swift_endAccess();
}

uint64_t PromotionListViewDataSourceProvider.init(predicate:store:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  sub_1BC34E718(a2, v2 + 24);
  return v2;
}

uint64_t sub_1BC49A214()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0F0, (uint64_t (*)(uint64_t))sub_1BC37932C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v0 + 32) = sub_1BC49A274();
  *(_QWORD *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1BC49A274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, _QWORD, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  __int128 v29;
  _QWORD v30[4];

  v1 = sub_1BC62B12C();
  MEMORY[0x1E0C80A78](v1);
  sub_1BC357158(0, &qword_1EF42D368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v30 - v3 + 8;
  sub_1BC62AC10();
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = sub_1BC62AA78();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  v29 = xmmword_1BC6395A0;
  *(_OWORD *)(v9 + 16) = xmmword_1BC6395A0;
  v10 = *(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104);
  v10(v9 + v8, *MEMORY[0x1E0D2D5A8], v5);
  v10(v9 + v8 + v7, *MEMORY[0x1E0D2D568], v5);
  v11 = sub_1BC62A31C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v29;
  *(_QWORD *)(v12 + 32) = sub_1BC62AA90();
  *(_QWORD *)(v12 + 40) = 0;
  v13 = (void *)MEMORY[0x1BCCEFE8C](v9, 0, v4, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3E23B8((uint64_t)v4);
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BC639570;
  v15 = *(void **)(v0 + 16);
  *(_QWORD *)(v14 + 32) = v13;
  *(_QWORD *)(v14 + 40) = v15;
  v30[0] = v14;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v16 = v13;
  v17 = v15;
  v18 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v18);

  v20 = (void *)MEMORY[0x1BCCEFEBC]();
  objc_msgSend(v20, sel_setPredicate_, v19);
  v30[0] = v0;
  v21 = type metadata accessor for PromotionListViewDataSourceProvider();
  v23 = sub_1BC379B20(&qword_1EF4321B8, v22, (uint64_t (*)(uint64_t))type metadata accessor for PromotionListViewDataSourceProvider, (uint64_t)&protocol conformance descriptor for PromotionListViewDataSourceProvider);
  MEMORY[0x1BCCEFFDC](v21, v23);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v24 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setSortDescriptors_, v24);

  swift_beginAccess();
  sub_1BC34E674(v0 + 24, (uint64_t)v30);
  __swift_project_boxed_opaque_existential_1Tm(v30, v30[3]);
  v25 = v20;
  v26 = (void *)sub_1BC62A9D0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v25, v26, 0, 0);

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  sub_1BC379AA4();
  sub_1BC62B0F0();
  v27 = sub_1BC62AF34();

  sub_1BC379B20((unint64_t *)&qword_1EF42A240, 255, (uint64_t (*)(uint64_t))sub_1BC379AA4, MEMORY[0x1E0D2B7F8]);
  return v27;
}

uint64_t type metadata accessor for PromotionListViewDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t PromotionListViewDataSourceProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return v0;
}

uint64_t PromotionListViewDataSourceProvider.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC49A738()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0F0, (uint64_t (*)(uint64_t))sub_1BC37932C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v0 + 32) = sub_1BC49A274();
  *(_QWORD *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1BC49A79C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 24;
  swift_beginAccess();
  return sub_1BC34E674(v3, a2);
}

uint64_t type metadata accessor for PromotionListViewController()
{
  uint64_t result;

  result = qword_1EF4321C0;
  if (!qword_1EF4321C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC49A828()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC49A864()
{
  return type metadata accessor for PromotionListViewController();
}

uint64_t method lookup function for PromotionListViewDataSourceProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.store.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.store.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.store.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.__allocating_init(predicate:store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.selectedDataSources(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.makePromotionDataSource()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

double sub_1BC49A8BC()
{
  double result;

  result = 0.0;
  xmmword_1EF4322E8 = xmmword_1BC63A930;
  *(_OWORD *)&qword_1EF4322F8 = xmmword_1BC63A930;
  return result;
}

double sub_1BC49A8D4()
{
  double result;

  result = 12.0;
  xmmword_1EF432308 = xmmword_1BC642940;
  *(_OWORD *)&qword_1EF432318 = xmmword_1BC642940;
  return result;
}

unint64_t static AccountHeaderCell.reuseIdentifier.getter()
{
  return 0xD000000000000011;
}

char *AccountHeaderCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v6;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  char *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  objc_super v29;
  objc_super v30;

  v6 = objc_allocWithZone((Class)type metadata accessor for AccountView(0));
  v7 = v3;
  v8 = objc_msgSend(v6, sel_init);
  *(_QWORD *)&v7[OBJC_IVAR___HRAccountHeaderCell_accountView] = v8;
  v9 = qword_1EF428618;
  v10 = v8;
  if (v9 != -1)
    swift_once();
  v11 = qword_1EF432318;
  v12 = (objc_class *)type metadata accessor for PaddedView();
  v13 = (char *)objc_allocWithZone(v12);
  *(_QWORD *)&v13[OBJC_IVAR____TtC15HealthRecordsUI10PaddedView_contentView] = v10;
  *(_QWORD *)&v13[OBJC_IVAR____TtC15HealthRecordsUI10PaddedView_bottomPadding] = v11;
  v30.receiver = v13;
  v30.super_class = v12;
  v14 = v10;
  v15 = objc_msgSendSuper2(&v30, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, sel_addSubview_, v14);

  *(_QWORD *)&v7[OBJC_IVAR___HRAccountHeaderCell_paddedView] = v15;
  if (a3)
  {
    v16 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v29.receiver = v7;
  v29.super_class = (Class)type metadata accessor for AccountHeaderCell();
  v17 = objc_msgSendSuper2(&v29, sel_initWithStyle_reuseIdentifier_, a1, v16);

  v18 = (char *)v17;
  objc_msgSend(v18, sel_setSelectionStyle_, 0);
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_clearColor);
  objc_msgSend(v18, sel_setBackgroundColor_, v20);

  v21 = *(void **)&v18[OBJC_IVAR___HRAccountHeaderCell_paddedView];
  v22 = objc_msgSend(v21, sel_layer);
  objc_msgSend(v22, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  v23 = objc_msgSend(v21, sel_layer);
  sub_1BC62A988();
  objc_msgSend(v23, sel_setCornerRadius_);

  v24 = objc_msgSend(v21, sel_layer);
  objc_msgSend(v24, sel_setMaskedCorners_, 3);

  v25 = objc_msgSend(v19, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v21, sel_setBackgroundColor_, v25);

  v26 = objc_msgSend(v18, sel_contentView);
  objc_msgSend(v26, sel_addSubview_, v21);

  objc_msgSend(v18, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
  v27 = *(void **)&v18[OBJC_IVAR___HRAccountHeaderCell_accountView];
  objc_msgSend(v27, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
  objc_msgSend(v27, sel_setDirectionalLayoutMargins_, xmmword_1EF432308, *(double *)&qword_1EF432318, *(double *)&qword_1EF432320);

  return v18;
}

uint64_t type metadata accessor for AccountHeaderCell()
{
  return objc_opt_self();
}

void sub_1BC49AE50(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1BC384E68(0, &qword_1EF42B7C8, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - v4;
  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AccountViewData(0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v29 = v11;
    v30 = v1;
    v14 = a1;
    v15 = objc_msgSend(v14, sel_identifier);
    sub_1BC62A79C();

    v16 = objc_msgSend(v14, sel_title);
    v17 = sub_1BC62C680();
    v27 = v18;
    v28 = v17;

    v19 = objc_msgSend(v14, sel_subtitle);
    if (v19)
    {
      v20 = v19;
      v21 = sub_1BC62C680();
      v23 = v22;

    }
    else
    {
      v21 = 0;
      v23 = 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v9, v6);
    v24 = &v13[*(int *)(v10 + 20)];
    v25 = v27;
    *(_QWORD *)v24 = v28;
    *((_QWORD *)v24 + 1) = v25;
    v26 = (uint64_t *)&v13[*(int *)(v10 + 24)];
    *v26 = v21;
    v26[1] = v23;
    sub_1BC3A3454((uint64_t)v13, (uint64_t)v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v5, 0, 1, v10);
    sub_1BC3A1B50((uint64_t)v5);

    sub_1BC384EB4((uint64_t)v5, &qword_1EF42B7C8, (void (*)(uint64_t))type metadata accessor for AccountViewData);
    sub_1BC3A2E24((uint64_t)v13);
  }
}

id AccountHeaderCell.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for AccountHeaderCell);
}

unint64_t sub_1BC49B13C()
{
  return 0xD000000000000010;
}

id AccountLoginCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  objc_super v13;

  v6 = OBJC_IVAR___HRAccountLoginCell_accountStatusView;
  v7 = objc_allocWithZone((Class)type metadata accessor for AccountStatusSummaryTileFeedItemView());
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_init);

  if (a3)
  {
    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for AccountLoginCell();
  v10 = objc_msgSendSuper2(&v13, sel_initWithStyle_reuseIdentifier_, a1, v9);

  v11 = v10;
  sub_1BC49B310();

  return v11;
}

id sub_1BC49B244(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  v3 = OBJC_IVAR___HRAccountLoginCell_accountStatusView;
  v4 = objc_allocWithZone((Class)type metadata accessor for AccountStatusSummaryTileFeedItemView());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for AccountLoginCell();
  v6 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);
  v7 = v6;
  if (v6)
  {
    v8 = v6;
    sub_1BC49B310();

  }
  return v7;
}

id sub_1BC49B310()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;

  v1 = *(void **)&v0[OBJC_IVAR___HRAccountLoginCell_accountStatusView];
  v2 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v2, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  v3 = objc_msgSend(v1, sel_layer);
  sub_1BC62A988();
  objc_msgSend(v3, sel_setCornerRadius_);

  v4 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v4, sel_addSubview_, v1);

  v5 = objc_msgSend(v0, sel_contentView);
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_clearColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v7);

  v8 = objc_msgSend(v6, sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v8);

  objc_msgSend(v0, sel_setSelectionStyle_, 0);
  if (objc_msgSend(v0, sel_isHighlighted))
  {
    if (qword_1EF428628 != -1)
      swift_once();
    v9 = (id)qword_1EF4330C0;
  }
  else
  {
    v9 = objc_msgSend(v6, sel_secondarySystemGroupedBackgroundColor);
  }
  v10 = v9;
  objc_msgSend(v1, sel_setBackgroundColor_, v9);

  objc_msgSend(v0, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
  objc_msgSend(v1, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
  if (qword_1EF428618 != -1)
    swift_once();
  return objc_msgSend(v1, sel_setDirectionalLayoutMargins_, xmmword_1EF432308, *(double *)&qword_1EF432318, *(double *)&qword_1EF432320);
}

id sub_1BC49B564(uint64_t (*a1)(void), _QWORD *a2)
{
  char *v2;
  void *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  __int128 v14;
  uint64_t v15;
  double v16;
  objc_super v18;

  v18.receiver = v2;
  v18.super_class = (Class)a1();
  objc_msgSendSuper2(&v18, sel_layoutSubviews);
  v4 = *(void **)&v2[*a2];
  v5 = objc_msgSend(v2, sel_contentView);
  objc_msgSend(v5, sel_bounds);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  if (qword_1EF428610 != -1)
    swift_once();
  v14 = xmmword_1EF4322E8;
  v15 = qword_1EF432300;
  if (objc_msgSend(v2, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
    v16 = *(double *)&v15;
  else
    v16 = *((double *)&v14 + 1);
  return objc_msgSend(v4, sel_setFrame_, UIEdgeInsetsInsetRect(v7, v9, v11, v13, *(double *)&v14, v16));
}

double sub_1BC49B6E0(void *a1, double a2, double a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  double v12;
  double v13;

  v8 = qword_1EF428610;
  v9 = a1;
  if (v8 != -1)
    swift_once();
  v10 = *((double *)&xmmword_1EF4322E8 + 1);
  v11 = *(double *)&qword_1EF432300;
  objc_msgSend(*(id *)&v9[*a5], sel_sizeThatFits_, a2 - *((double *)&xmmword_1EF4322E8 + 1) - *(double *)&qword_1EF432300, a3 - *(double *)&xmmword_1EF4322E8 - *(double *)&qword_1EF4322F8);
  v13 = v12;

  return v11 + v10 + v13;
}

void sub_1BC49B7A4(void *a1)
{
  char *v1;
  id v3;
  unsigned int v4;
  void *v5;
  id v6;
  void *v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for AccountLoginCell();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, a1);
  if (!a1
    || (v3 = objc_msgSend(v1, sel_traitCollection),
        v4 = objc_msgSend(a1, sel_hasDifferentColorAppearanceComparedToTraitCollection_, v3),
        v3,
        v4))
  {
    v5 = *(void **)&v1[OBJC_IVAR___HRAccountLoginCell_accountStatusView];
    if (objc_msgSend(v1, sel_isHighlighted))
    {
      if (qword_1EF428628 != -1)
        swift_once();
      v6 = (id)qword_1EF4330C0;
    }
    else
    {
      v6 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
    }
    v7 = v6;
    objc_msgSend(v5, sel_setBackgroundColor_, v6);

  }
}

void sub_1BC49B92C(void *a1, uint64_t a2, uint64_t (*a3)(void), _QWORD *a4)
{
  char *v5;
  void *v6;
  objc_super v7;

  v7.receiver = a1;
  v7.super_class = (Class)a3();
  v5 = (char *)v7.receiver;
  objc_msgSendSuper2(&v7, sel_layoutMarginsDidChange);
  objc_msgSend(v5, sel_setInsetsLayoutMarginsFromSafeArea_, 0, v7.receiver, v7.super_class);
  v6 = *(void **)&v5[*a4];
  objc_msgSend(v6, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
  if (qword_1EF428618 != -1)
    swift_once();
  objc_msgSend(v6, sel_setDirectionalLayoutMargins_, xmmword_1EF432308, *(double *)&qword_1EF432318, *(double *)&qword_1EF432320);

}

id AccountLoginCell.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for AccountLoginCell);
}

void AccountLoginCell.apply(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  sub_1BC384E68(0, &qword_1EF432340, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - v3;
  if (a1)
  {
    AccountStatusSummaryTileFeedItemViewData.init(_:)(a1, (uint64_t)v4);
    sub_1BC59EF68((uint64_t)v4);
    sub_1BC384EB4((uint64_t)v4, &qword_1EF432340, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
  }
}

unint64_t static AccountTimelineButtonCell.reuseIdentifier.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1BC49BCFC()
{
  return sub_1BC38BBC4(&OBJC_IVAR___HRAccountTimelineButtonCell_buttonText);
}

id sub_1BC49BD14(uint64_t a1, uint64_t a2)
{
  return sub_1BC49BEA8(a1, a2, &OBJC_IVAR___HRAccountTimelineButtonCell_buttonText, (uint64_t (*)(uint64_t))sub_1BC49C354);
}

void (*sub_1BC49BD28(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRAccountTimelineButtonCell_buttonText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC49BD80;
}

void sub_1BC49BD80(_QWORD **a1, char a2)
{
  sub_1BC49BFCC(a1, a2, (uint64_t (*)(uint64_t))sub_1BC49C354);
}

id sub_1BC49BD98(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  void *v4;

  v3 = a1 + *a3;
  swift_beginAccess();
  if (!*(_QWORD *)(v3 + 8))
    return 0;
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BC49BE0C()
{
  return sub_1BC38BBC4(&OBJC_IVAR___HRAccountTimelineButtonCell_explanationText);
}

void sub_1BC49BE24(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (a3)
  {
    v6 = sub_1BC62C680();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = a1;
  a4(v6, v8);

}

id sub_1BC49BE94(uint64_t a1, uint64_t a2)
{
  return sub_1BC49BEA8(a1, a2, &OBJC_IVAR___HRAccountTimelineButtonCell_explanationText, (uint64_t (*)(uint64_t))sub_1BC49C4A4);
}

id sub_1BC49BEA8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;

  v8 = (_QWORD *)(v4 + *a3);
  swift_beginAccess();
  *v8 = a1;
  v8[1] = a2;
  v9 = swift_bridgeObjectRelease();
  v10 = (void *)a4(v9);
  if (v8[1])
  {
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v10, sel_setText_, v11);

  return sub_1BC49D284();
}

void (*sub_1BC49BF68(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRAccountTimelineButtonCell_explanationText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC49BFC0;
}

void sub_1BC49BFC0(_QWORD **a1, char a2)
{
  sub_1BC49BFCC(a1, a2, (uint64_t (*)(uint64_t))sub_1BC49C4A4);
}

void sub_1BC49BFCC(_QWORD **a1, char a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v5 = *a1;
  v6 = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v7 = v5[3] + v5[4];
    v8 = (void *)a3(v6);
    if (*(_QWORD *)(v7 + 8))
    {
      swift_bridgeObjectRetain();
      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = 0;
    }
    objc_msgSend(v8, sel_setText_, v9);

    sub_1BC49D284();
  }
  free(v5);
}

uint64_t sub_1BC49C0C0()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners);
  swift_beginAccess();
  return *v1;
}

void sub_1BC49C144(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  id v4;
  id v5;
  id v6;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners);
  swift_beginAccess();
  *v3 = a1;
  v4 = sub_1BC49C610();
  if ((a1 & 1) != 0)
  {
    sub_1BC62A988();
    v5 = (id)*MEMORY[0x1E0CD2A68];
    sub_1BC62CDF4();

    v6 = sub_1BC49C610();
    v4 = objc_msgSend(v6, sel_layer);

    objc_msgSend(v4, sel_setMaskedCorners_, 12);
  }
  else
  {
    sub_1BC62CE00();
  }

}

void (*sub_1BC49C228(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC49C280;
}

void sub_1BC49C280(_QWORD **a1, char a2)
{
  _QWORD *v3;
  int v4;
  id v5;
  id v6;
  id v7;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = *(unsigned __int8 *)(v3[3] + v3[4]);
    v5 = sub_1BC49C610();
    if (v4 == 1)
    {
      sub_1BC62A988();
      v6 = (id)*MEMORY[0x1E0CD2A68];
      sub_1BC62CDF4();

      v7 = sub_1BC49C610();
      v5 = objc_msgSend(v7, sel_layer);

      objc_msgSend(v5, sel_setMaskedCorners_, 12);
    }
    else
    {
      sub_1BC62CE00();
    }

  }
  free(v3);
}

id sub_1BC49C354()
{
  return sub_1BC49C4B8(&OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___buttonLabel, (uint64_t (*)(void))sub_1BC49C368);
}

id sub_1BC49C368()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_labelColor);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v2, sel_setFont_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  objc_msgSend(v2, sel_setTextColor_, v1);

  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v2, sel_setFont_, v3);

  v4 = objc_msgSend(v0, sel_systemBlueColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_1BC49C4A4()
{
  return sub_1BC49C4B8(&OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___explanationLabel, (uint64_t (*)(void))sub_1BC49C510);
}

id sub_1BC49C4B8(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2();
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_1BC49C510()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v1, sel_setFont_, 0);
  objc_msgSend(v1, sel_setNumberOfLines_, 0);
  objc_msgSend(v1, sel_setTextColor_, v0);

  v2 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  objc_msgSend(v1, sel_setFont_, v2);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v1;
}

id sub_1BC49C610()
{
  return sub_1BC49C638(&OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___containerView, (SEL *)&selRef_secondarySystemGroupedBackgroundColor);
}

id sub_1BC49C624()
{
  return sub_1BC49C638(&OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___separatorView, (SEL *)&selRef_opaqueSeparatorColor);
}

id sub_1BC49C638(uint64_t *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v7;
  id v8;
  void *v9;
  id v10;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    v8 = objc_msgSend((id)objc_opt_self(), *a2);
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v9 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v7;
    v5 = v7;

    v4 = 0;
  }
  v10 = v4;
  return v5;
}

id _s15HealthRecordsUI17AccountHeaderCellC5style15reuseIdentifierACSo011UITableViewF5StyleV_SSSgtcfC_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id AccountTimelineButtonCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  id v8;
  id v9;
  objc_super v11;

  v5 = &v3[OBJC_IVAR___HRAccountTimelineButtonCell_buttonText];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v3[OBJC_IVAR___HRAccountTimelineButtonCell_explanationText];
  *v6 = 0;
  v6[1] = 0;
  v3[OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___buttonLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___explanationLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___containerView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___HRAccountTimelineButtonCell_customConstraints] = MEMORY[0x1E0DEE9D8];
  if (a3)
  {
    v7 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for AccountTimelineButtonCell();
  v8 = objc_msgSendSuper2(&v11, sel_initWithStyle_reuseIdentifier_, a1, v7);

  v9 = v8;
  sub_1BC49C900();

  return v9;
}

uint64_t sub_1BC49C888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;

  if (a4)
  {
    a4 = sub_1BC62C680();
    v8 = v7;
  }
  else
  {
    v8 = 0;
  }
  return a5(a3, a4, v8);
}

void sub_1BC49C900()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  double v32;
  double v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;

  v1 = v0;
  objc_msgSend(v0, sel_setSelectionStyle_, 0);
  v2 = objc_msgSend(v0, sel_contentView);
  v58 = (id)objc_opt_self();
  v3 = objc_msgSend(v58, sel_systemGroupedBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  v4 = sub_1BC49C610();
  v5 = sub_1BC49C354();
  objc_msgSend(v4, sel_addSubview_, v5);

  v6 = sub_1BC49C610();
  v7 = sub_1BC49C4A4();
  objc_msgSend(v6, sel_addSubview_, v7);

  v8 = objc_msgSend(v1, sel_contentView);
  v9 = sub_1BC49C624();
  objc_msgSend(v8, sel_addSubview_, v9);

  v10 = objc_msgSend(v1, sel_contentView);
  v11 = sub_1BC49C610();
  objc_msgSend(v10, sel_addSubview_, v11);

  sub_1BC49D284();
  v59 = (id)objc_opt_self();
  sub_1BC34D844();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC641AB0;
  v13 = sub_1BC49C624();
  v14 = objc_msgSend(v13, sel_topAnchor);

  v15 = objc_msgSend(v1, sel_contentView);
  v16 = objc_msgSend(v15, sel_topAnchor);

  v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(_QWORD *)(v12 + 32) = v17;
  v18 = sub_1BC49C624();
  v19 = objc_msgSend(v18, sel_leadingAnchor);

  v20 = objc_msgSend(v1, sel_contentView);
  v21 = objc_msgSend(v20, sel_leadingAnchor);

  if (qword_1EF428610 != -1)
    swift_once();
  v22 = *((double *)&xmmword_1EF4322E8 + 1);
  if (qword_1EF428618 != -1)
    swift_once();
  v23 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, v22 + *((double *)&xmmword_1EF432308 + 1));

  *(_QWORD *)(v12 + 40) = v23;
  v24 = objc_msgSend(v1, sel_contentView);
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = sub_1BC49C624();
  v27 = objc_msgSend(v26, sel_trailingAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, *(double *)&qword_1EF432300 + *(double *)&qword_1EF432320);
  *(_QWORD *)(v12 + 48) = v28;
  v29 = sub_1BC49C624();
  v30 = objc_msgSend(v29, sel_heightAnchor);

  v31 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v31, sel_displayPixel);
  v33 = v32;

  v34 = objc_msgSend(v30, sel_constraintEqualToConstant_, v33);
  *(_QWORD *)(v12 + 56) = v34;
  v35 = sub_1BC49C610();
  v36 = objc_msgSend(v35, sel_topAnchor);

  v37 = sub_1BC49C624();
  v38 = objc_msgSend(v37, sel_bottomAnchor);

  v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
  *(_QWORD *)(v12 + 64) = v39;
  v40 = sub_1BC49C610();
  v41 = objc_msgSend(v40, sel_leadingAnchor);

  v42 = objc_msgSend(v1, sel_contentView);
  v43 = objc_msgSend(v42, sel_leadingAnchor);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, *((double *)&xmmword_1EF4322E8 + 1));
  *(_QWORD *)(v12 + 72) = v44;
  v45 = objc_msgSend(v1, sel_contentView);
  v46 = objc_msgSend(v45, sel_trailingAnchor);

  v47 = sub_1BC49C610();
  v48 = objc_msgSend(v47, sel_trailingAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, *(double *)&qword_1EF432300);
  *(_QWORD *)(v12 + 80) = v49;
  v50 = sub_1BC49C610();
  v51 = objc_msgSend(v50, sel_bottomAnchor);

  v52 = objc_msgSend(v1, sel_contentView);
  v53 = objc_msgSend(v52, sel_bottomAnchor);

  v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
  *(_QWORD *)(v12 + 88) = v54;
  sub_1BC62C890();
  sub_1BC34D89C();
  v55 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v59, sel_activateConstraints_, v55);

  v56 = sub_1BC49C610();
  if (objc_msgSend(v1, sel_isHighlighted))
  {
    if (qword_1EF428628 != -1)
      swift_once();
    v57 = (id)qword_1EF4330C0;
  }
  else
  {
    v57 = objc_msgSend(v58, sel_secondarySystemGroupedBackgroundColor);
  }
  v60 = v57;
  objc_msgSend(v56, sel_setBackgroundColor_);

}

void sub_1BC49D02C(void *a1)
{
  void *v1;
  id v3;
  unsigned int v4;
  id v5;
  id v6;
  void *v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for AccountTimelineButtonCell();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, a1);
  if (!a1
    || (v3 = objc_msgSend(v1, sel_traitCollection),
        v4 = objc_msgSend(a1, sel_hasDifferentColorAppearanceComparedToTraitCollection_, v3),
        v3,
        v4))
  {
    v5 = sub_1BC49C610();
    if (objc_msgSend(v1, sel_isHighlighted))
    {
      if (qword_1EF428628 != -1)
        swift_once();
      v6 = (id)qword_1EF4330C0;
    }
    else
    {
      v6 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
    }
    v7 = v6;
    objc_msgSend(v5, sel_setBackgroundColor_, v6);

  }
}

id sub_1BC49D284()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v1 = (void *)objc_opt_self();
  v2 = OBJC_IVAR___HRAccountTimelineButtonCell_customConstraints;
  sub_1BC34D89C();
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  v4 = &v0[OBJC_IVAR___HRAccountTimelineButtonCell_explanationText];
  swift_beginAccess();
  v5 = *((_QWORD *)v4 + 1);
  if (v5 && ((v5 & 0x2000000000000000) != 0 ? (v6 = HIBYTE(v5) & 0xF) : (v6 = *(_QWORD *)v4 & 0xFFFFFFFFFFFFLL), v6))
  {
    v7 = &v0[OBJC_IVAR___HRAccountTimelineButtonCell_buttonText];
    swift_beginAccess();
    v8 = *((_QWORD *)v7 + 1);
    if (v8
      && ((v8 & 0x2000000000000000) != 0 ? (v9 = HIBYTE(v8) & 0xF) : (v9 = *(_QWORD *)v7 & 0xFFFFFFFFFFFFLL), v9))
    {
      v10 = sub_1BC49D678();
    }
    else
    {
      v10 = sub_1BC49D408();
    }
  }
  else
  {
    v10 = sub_1BC49D3FC();
  }
  *(_QWORD *)&v0[v2] = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v11);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1BC49D3FC()
{
  return sub_1BC49D414((uint64_t (*)(void))sub_1BC49C354);
}

uint64_t sub_1BC49D408()
{
  return sub_1BC49D414((uint64_t (*)(void))sub_1BC49C4A4);
}

uint64_t sub_1BC49D414(uint64_t (*a1)(void))
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;

  sub_1BC34D844();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC63A3D0;
  v3 = (void *)a1();
  v4 = objc_msgSend(v3, sel_topAnchor);

  v5 = sub_1BC49C610();
  v6 = objc_msgSend(v5, sel_topAnchor);

  if (qword_1EF428618 != -1)
    swift_once();
  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&xmmword_1EF432308);

  *(_QWORD *)(v2 + 32) = v7;
  v8 = (void *)a1();
  v9 = objc_msgSend(v8, sel_leadingAnchor);

  v10 = sub_1BC49C610();
  v11 = objc_msgSend(v10, sel_leadingAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, *((double *)&xmmword_1EF432308 + 1));
  *(_QWORD *)(v2 + 40) = v12;
  v13 = sub_1BC49C610();
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = (void *)a1();
  v16 = objc_msgSend(v15, sel_trailingAnchor);

  v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, *(double *)&qword_1EF432320);
  *(_QWORD *)(v2 + 48) = v17;
  v18 = sub_1BC49C610();
  v19 = objc_msgSend(v18, sel_bottomAnchor);

  v20 = (void *)a1();
  v21 = objc_msgSend(v20, sel_bottomAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, *(double *)&qword_1EF432318);
  *(_QWORD *)(v2 + 56) = v22;
  sub_1BC62C890();
  return v2;
}

uint64_t sub_1BC49D678()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;

  sub_1BC34D844();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC63B440;
  v1 = sub_1BC49C4A4();
  v2 = objc_msgSend(v1, sel_topAnchor);

  v3 = sub_1BC49C610();
  v4 = objc_msgSend(v3, sel_topAnchor);

  if (qword_1EF428618 != -1)
    swift_once();
  v5 = objc_msgSend(v2, sel_constraintEqualToAnchor_constant_, v4, *(double *)&xmmword_1EF432308);

  *(_QWORD *)(v0 + 32) = v5;
  v6 = sub_1BC49C4A4();
  v7 = objc_msgSend(v6, sel_leadingAnchor);

  v8 = sub_1BC49C610();
  v9 = objc_msgSend(v8, sel_leadingAnchor);

  v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v9, *((double *)&xmmword_1EF432308 + 1));
  *(_QWORD *)(v0 + 40) = v10;
  v11 = sub_1BC49C610();
  v12 = objc_msgSend(v11, sel_trailingAnchor);

  v13 = sub_1BC49C4A4();
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, *(double *)&qword_1EF432320);
  *(_QWORD *)(v0 + 48) = v15;
  v16 = sub_1BC49C354();
  v17 = objc_msgSend(v16, sel_topAnchor);

  v18 = sub_1BC49C4A4();
  v19 = objc_msgSend(v18, sel_bottomAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, 8.0);
  *(_QWORD *)(v0 + 56) = v20;
  v21 = sub_1BC49C354();
  v22 = objc_msgSend(v21, sel_leadingAnchor);

  v23 = sub_1BC49C4A4();
  v24 = objc_msgSend(v23, sel_leadingAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
  *(_QWORD *)(v0 + 64) = v25;
  v26 = sub_1BC49C354();
  v27 = objc_msgSend(v26, sel_trailingAnchor);

  v28 = sub_1BC49C4A4();
  v29 = objc_msgSend(v28, sel_trailingAnchor);

  v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(_QWORD *)(v0 + 72) = v30;
  v31 = sub_1BC49C610();
  v32 = objc_msgSend(v31, sel_bottomAnchor);

  v33 = sub_1BC49C354();
  v34 = objc_msgSend(v33, sel_bottomAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, *(double *)&qword_1EF432318);
  *(_QWORD *)(v0 + 80) = v35;
  sub_1BC62C890();
  return v0;
}

id AccountTimelineButtonCell.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for AccountTimelineButtonCell);
}

uint64_t type metadata accessor for AccountLoginCell()
{
  return objc_opt_self();
}

void sub_1BC49DADC(char a1)
{
  char *v1;
  void *v3;
  id v4;
  void *v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for AccountLoginCell();
  objc_msgSendSuper2(&v6, sel_setHighlighted_animated_, a1 & 1, 0);
  v3 = *(void **)&v1[OBJC_IVAR___HRAccountLoginCell_accountStatusView];
  if (objc_msgSend(v1, sel_isHighlighted))
  {
    if (qword_1EF428628 != -1)
      swift_once();
    v4 = (id)qword_1EF4330C0;
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
  }
  v5 = v4;
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

}

uint64_t type metadata accessor for AccountTimelineButtonCell()
{
  return objc_opt_self();
}

void sub_1BC49DBD4()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = &v0[OBJC_IVAR___HRAccountTimelineButtonCell_buttonText];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR___HRAccountTimelineButtonCell_explanationText];
  *v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___buttonLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___explanationLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___containerView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HRAccountTimelineButtonCell_customConstraints] = MEMORY[0x1E0DEE9D8];

  sub_1BC62D394();
  __break(1u);
}

void sub_1BC49DCA0(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for AccountTimelineButtonCell();
  objc_msgSendSuper2(&v6, sel_setHighlighted_animated_, a1 & 1, 0);
  v3 = sub_1BC49C610();
  if (objc_msgSend(v1, sel_isHighlighted))
  {
    if (qword_1EF428628 != -1)
      swift_once();
    v4 = (id)qword_1EF4330C0;
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
  }
  v5 = v4;
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

}

uint64_t sub_1BC49DD78@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___HRAccountTimelineButtonCell_buttonText, a2);
}

uint64_t sub_1BC49DD84(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC49BD14);
}

uint64_t sub_1BC49DD90@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___HRAccountTimelineButtonCell_explanationText, a2);
}

uint64_t sub_1BC49DD9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC49BE94);
}

uint64_t sub_1BC49DDA8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1BC49DDF8(char *a1)
{
  sub_1BC49C144(*a1);
}

uint64_t method lookup function for AccountHeaderCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountHeaderCell.apply(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t method lookup function for AccountLoginCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static AccountLoginCell.reuseIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for AccountTimelineButtonCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.buttonText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.buttonText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.buttonText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.explanationText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.explanationText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.explanationText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.roundBottomCorners.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.roundBottomCorners.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.roundBottomCorners.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t sub_1BC49DF60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  _BYTE v20[32];
  _OWORD v21[2];
  _OWORD v22[2];
  uint64_t v23;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v19 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v8 = MEMORY[0x1E0DEE9B8] + 8;
LABEL_4:
  v9 = MEMORY[0x1E0DEAEC8];
  if (v4)
  {
LABEL_5:
    v10 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v11 = v10 | (v6 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v19)
      goto LABEL_30;
    v13 = *(_QWORD *)(v18 + 8 * v12);
    ++v6;
    if (!v13)
    {
      v6 = v12 + 1;
      if (v12 + 1 >= v19)
        goto LABEL_30;
      v13 = *(_QWORD *)(v18 + 8 * v6);
      if (!v13)
      {
        v6 = v12 + 2;
        if (v12 + 2 >= v19)
          goto LABEL_30;
        v13 = *(_QWORD *)(v18 + 8 * v6);
        if (!v13)
        {
          v6 = v12 + 3;
          if (v12 + 3 >= v19)
            goto LABEL_30;
          v13 = *(_QWORD *)(v18 + 8 * v6);
          if (!v13)
            break;
        }
      }
    }
LABEL_21:
    v4 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_22:
    sub_1BC375540(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v22);
    sub_1BC35E088(v22, v21);
    sub_1BC375540((uint64_t)v21, (uint64_t)v20);
    sub_1BC34B508(0, &qword_1EF4325F0, v8, (uint64_t (*)(_QWORD, uint64_t))v9);
    if (swift_dynamicCast())
    {
      v15 = *(_QWORD *)(v23 + 16);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1BC3B6680(0, v7[2] + 1, 1, v7);
        v7 = (_QWORD *)result;
      }
      v17 = v7[2];
      v16 = v7[3];
      if (v17 >= v16 >> 1)
      {
        result = (uint64_t)sub_1BC3B6680((_QWORD *)(v16 > 1), v17 + 1, 1, v7);
        v7 = (_QWORD *)result;
      }
      v7[2] = v17 + 1;
      v7[v17 + 4] = v15;
      goto LABEL_4;
    }
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
    if (v4)
      goto LABEL_5;
  }
  v14 = v12 + 4;
  if (v14 >= v19)
  {
LABEL_30:
    swift_release();
    return (uint64_t)v7;
  }
  v13 = *(_QWORD *)(v18 + 8 * v14);
  if (v13)
  {
    v6 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v6 >= v19)
      goto LABEL_30;
    v13 = *(_QWORD *)(v18 + 8 * v6);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1BC49E1F8(void *a1, void *a2)
{
  char *v2;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  objc_super v23;
  char v24;

  v5 = (uint64_t *)&v2[OBJC_IVAR___HRInternalStateProvider_healthExperienceStore];
  v6 = sub_1BC62A9C4();
  v7 = v2;
  v8 = sub_1BC62A9B8();
  v9 = MEMORY[0x1E0D2D2C8];
  v5[3] = v6;
  v5[4] = v9;
  *v5 = v8;
  *(_QWORD *)&v7[OBJC_IVAR___HRInternalStateProvider_recordCounts] = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v7[OBJC_IVAR___HRInternalStateProvider_sub] = 0;
  v10 = OBJC_IVAR___HRInternalStateProvider_loadState;
  _s9LoadStateCMa();
  v11 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v11 + 112) = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  *(_WORD *)(v11 + 120) = 1;
  *(_QWORD *)(v11 + 128) = v12;
  *(_QWORD *)&v7[v10] = v11;
  v13 = &v7[OBJC_IVAR___HRInternalStateProvider_changeHandler];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = OBJC_IVAR___HRInternalStateProvider_isObserving;
  v24 = 0;
  sub_1BC34B508(0, &qword_1EF432658, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0D2E5C8]);
  swift_allocObject();
  *(_QWORD *)&v7[v14] = sub_1BC62ABB0();
  v15 = objc_msgSend(a2, sel_healthStore);
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EE98]), sel_initWithHealthStore_, v15);

  *(_QWORD *)&v7[OBJC_IVAR___HRInternalStateProvider_accountStore] = v16;
  *(_QWORD *)&v7[OBJC_IVAR___HRInternalStateProvider_conceptStore] = a1;
  *(_QWORD *)&v7[OBJC_IVAR___HRInternalStateProvider_healthRecordsStore] = a2;
  v17 = a1;
  v18 = a2;
  v19 = objc_msgSend(v18, sel_healthStore);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EEB8]), sel_initWithHealthStore_, v19);

  *(_QWORD *)&v7[OBJC_IVAR___HRInternalStateProvider_ingestionStore] = v20;
  v23.receiver = v7;
  v23.super_class = (Class)type metadata accessor for InternalStateProvider();
  v21 = objc_msgSendSuper2(&v23, sel_init);
  sub_1BC4A0DB0();

  return v21;
}

id InternalStateProvider.__allocating_init(healthStore:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v3 = objc_allocWithZone(v1);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB64D0]), sel_initWithHealthStore_, a1);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6768]), sel_initWithHealthStore_, a1);
  v6 = objc_allocWithZone((Class)type metadata accessor for InternalStateProvider());
  v7 = sub_1BC49E1F8(v4, v5);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

id InternalStateProvider.init(healthStore:)(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB64D0]), sel_initWithHealthStore_, a1);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6768]), sel_initWithHealthStore_, a1);
  v4 = objc_allocWithZone((Class)type metadata accessor for InternalStateProvider());
  v5 = sub_1BC49E1F8(v2, v3);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t type metadata accessor for InternalStateProvider()
{
  return objc_opt_self();
}

id InternalStateProvider.__deallocating_deinit()
{
  char *v0;
  objc_super v2;

  swift_retain();
  sub_1BC62ABA4();
  swift_release();
  if (*(_QWORD *)&v0[OBJC_IVAR___HRInternalStateProvider_sub])
  {
    swift_retain();
    sub_1BC62BEAC();
    swift_release();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalStateProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC49E860()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_1BC49E8C4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(void **)(*(_QWORD *)(v0 + 56) + OBJC_IVAR___HRInternalStateProvider_accountStore);
  *(_QWORD *)(v0 + 40) = 0;
  v2 = objc_msgSend(v1, sel_allAccountsWithError_, v0 + 40);
  v3 = *(void **)(v0 + 40);
  if (v2)
  {
    v4 = v2;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
    v5 = sub_1BC62C878();
    *(_QWORD *)(v0 + 64) = v5;
    v6 = v3;

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v22 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v22)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      v7 = *(void **)(v0 + 56);
      v8 = swift_allocObject();
      *(_QWORD *)(v0 + 72) = v8;
      *(_QWORD *)(v8 + 16) = v7;
      v9 = v7;
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 80) = v10;
      type metadata accessor for InternalStateSection();
      *v10 = v0;
      v10[1] = sub_1BC49ECE4;
      return sub_1BC62C89C();
    }
    swift_bridgeObjectRelease();
    type metadata accessor for InternalStateItem();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = 0;
    v23[3] = 0xE000000000000000;
    v23[4] = 0xD000000000000013;
    v23[5] = 0x80000001BC65C770;
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BC6396B0;
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BC6396B0;
    *(_QWORD *)(v25 + 32) = v23;
    v28 = v25;
    sub_1BC62C890();
    type metadata accessor for InternalStateSection();
    v26 = swift_allocObject();
    strcpy((char *)(v26 + 16), "Account Status");
    *(_BYTE *)(v26 + 31) = -18;
    *(_QWORD *)(v26 + 32) = v28;
    *(_QWORD *)(v24 + 32) = v26;
    sub_1BC62C890();
    v21 = v24;
  }
  else
  {
    v12 = v3;
    v13 = (void *)sub_1BC62A55C();

    swift_willThrow();
    swift_getErrorValue();
    v14 = sub_1BC62D610();
    v16 = v15;
    type metadata accessor for InternalStateItem();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0xD000000000000016;
    v17[3] = 0x80000001BC65C750;
    v17[4] = v14;
    v17[5] = v16;
    sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BC6396B0;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BC6396B0;
    *(_QWORD *)(v19 + 32) = v17;
    v27 = v19;
    sub_1BC62C890();
    type metadata accessor for InternalStateSection();
    v20 = swift_allocObject();
    strcpy((char *)(v20 + 16), "Account Status");
    *(_BYTE *)(v20 + 31) = -18;
    *(_QWORD *)(v20 + 32) = v27;
    *(_QWORD *)(v18 + 32) = v20;
    sub_1BC62C890();
    v21 = v18;

  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v21);
}

uint64_t sub_1BC49ECE4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1BC49ED7C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[16] = a1;
  v3[17] = a3;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3[18] = swift_task_alloc();
  v6 = sub_1BC62A760();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v3[19] = v6;
  v3[20] = *(_QWORD *)(v6 - 8);
  v3[21] = swift_task_alloc();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, v7, v5);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v8 = sub_1BC62A7B4();
  v3[26] = v8;
  v3[27] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v10 = *a2;
  v3[28] = v9;
  v3[29] = v10;
  return swift_task_switch();
}

uint64_t sub_1BC49EEB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  void *v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;

  v1 = 0x726576656ELL;
  v2 = *(void **)(v0 + 232);
  v3 = objc_msgSend(v2, sel_identifier);
  sub_1BC62A79C();

  v4 = objc_msgSend(v2, sel_provenance);
  v5 = objc_msgSend(v4, sel_title);

  v6 = sub_1BC62C680();
  v8 = v7;

  sub_1BC62C764();
  sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  *(_QWORD *)(v0 + 240) = v6;
  *(_QWORD *)(v0 + 248) = v8;
  v9 = objc_msgSend(v2, sel_lastFetchDate);
  v10 = *(_QWORD *)(v0 + 200);
  if (v9)
  {
    v11 = v9;
    v13 = *(_QWORD **)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 168);
    v14 = *(_QWORD *)(v0 + 152);
    sub_1BC62A724();

    v15 = (void (*)(uint64_t, uint64_t, uint64_t))v13[4];
    v15(v10, v12, v14);
    v16 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13[7];
    v16(v10, 0, 1, v14);
    v17 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v13[6];
    if (v17(v10, 1, v14) != 1)
    {
      v18 = *(void **)(v0 + 232);
      sub_1BC377E3C(*(_QWORD *)(v0 + 200), (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v19 = sub_1BC4A23EC();
      v20 = objc_msgSend(v18, sel_lastFetchDate);
      v21 = *(_QWORD *)(v0 + 192);
      if (v20)
      {
        v22 = v20;
        v23 = *(_QWORD *)(v0 + 168);
        v24 = *(_QWORD *)(v0 + 152);
        sub_1BC62A724();

        v15(v21, v23, v24);
        v16(v21, 0, 1, v24);
        if (v17(v21, 1, v24) != 1)
        {
          v25 = *(_QWORD *)(v0 + 192);
          v26 = *(_QWORD *)(v0 + 152);
          v27 = *(_QWORD *)(v0 + 160);
          v28 = (void *)sub_1BC62A700();
          (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
          v29 = objc_msgSend(v19, sel_stringFromDate_, v28);

          v30 = sub_1BC62C680();
          v32 = v31;

          goto LABEL_8;
        }
      }
      else
      {
        v16(*(_QWORD *)(v0 + 192), 1, 1, *(_QWORD *)(v0 + 152));
      }
      __break(1u);
      goto LABEL_18;
    }
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 160) + 56);
    v16(*(_QWORD *)(v0 + 200), 1, 1, *(_QWORD *)(v0 + 152));
  }
  sub_1BC377E3C(*(_QWORD *)(v0 + 200), (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v32 = 0xE500000000000000;
  v30 = 0x726576656ELL;
LABEL_8:
  *(_QWORD *)(v0 + 256) = v30;
  *(_QWORD *)(v0 + 264) = v32;
  v33 = objc_msgSend(*(id *)(v0 + 232), sel_lastFullFetchDate);
  v34 = *(_QWORD *)(v0 + 184);
  if (!v33)
  {
    v16(*(_QWORD *)(v0 + 184), 1, 1, *(_QWORD *)(v0 + 152));
    goto LABEL_14;
  }
  v35 = v33;
  v37 = *(_QWORD *)(v0 + 160);
  v36 = *(_QWORD *)(v0 + 168);
  v38 = *(_QWORD *)(v0 + 152);
  sub_1BC62A724();

  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32);
  v39(v34, v36, v38);
  v16(v34, 0, 1, v38);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  if (v40(v34, 1, v38) == 1)
  {
LABEL_14:
    sub_1BC377E3C(*(_QWORD *)(v0 + 184), (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v54 = 0xE500000000000000;
    goto LABEL_15;
  }
  v41 = *(void **)(v0 + 232);
  sub_1BC377E3C(*(_QWORD *)(v0 + 184), (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v42 = sub_1BC4A23EC();
  v43 = objc_msgSend(v41, sel_lastFullFetchDate);
  v21 = *(_QWORD *)(v0 + 176);
  if (!v43)
  {
LABEL_18:
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v16)(v21, 1, 1, *(_QWORD *)(v0 + 152));
    goto LABEL_19;
  }
  v44 = v43;
  v45 = *(_QWORD *)(v0 + 168);
  v46 = *(_QWORD *)(v0 + 152);
  sub_1BC62A724();

  v39(v21, v45, v46);
  v16(v21, 0, 1, v46);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v40)(v21, 1, v46);
  if ((_DWORD)result != 1)
  {
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 152);
    v50 = *(_QWORD *)(v0 + 160);
    v51 = (void *)sub_1BC62A700();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
    v52 = objc_msgSend(v42, sel_stringFromDate_, v51);

    v1 = sub_1BC62C680();
    v54 = v53;

LABEL_15:
    *(_QWORD *)(v0 + 272) = v1;
    *(_QWORD *)(v0 + 280) = v54;
    v55 = *(void **)(*(_QWORD *)(v0 + 136) + OBJC_IVAR___HRInternalStateProvider_healthRecordsStore);
    v56 = sub_1BC62A784();
    *(_QWORD *)(v0 + 288) = v56;
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1BC49F414;
    v57 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    v58 = (_QWORD *)(v0 + 80);
    v58[1] = 0x40000000;
    v58[2] = sub_1BC49FC14;
    v58[3] = &block_descriptor_35;
    v58[4] = v57;
    objc_msgSend(v55, sel_fetchFHIRJSONDocumentWithAccountIdentifier_completion_, v56, v58);
    return swift_continuation_await();
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1BC49F414()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 296) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC49F474()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 120);

  v2 = (_QWORD *)sub_1BC49DF60(v1);
  swift_bridgeObjectRelease();
  v3 = v2[2];
  if (v3)
  {
    v4 = 0;
    v5 = v2 + 4;
    while (1)
    {
      v6 = *v5++;
      v7 = __OFADD__(v4, v6);
      v4 += v6;
      if (v7)
        break;
      if (!--v3)
        goto LABEL_7;
    }
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_8;
  }
  v4 = 0;
LABEL_7:
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 280);
  v10 = *(_QWORD *)(v0 + 256);
  v11 = *(_QWORD *)(v0 + 264);
  v12 = *(void **)(v0 + 232);
  v37 = *(_QWORD *)(v0 + 144);
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = (_QWORD *)swift_allocObject();
  *((_OWORD *)v2 + 1) = xmmword_1BC63A3D0;
  v13 = objc_msgSend(v12, sel_displayableStatus);
  v14 = sub_1BC62C680();
  v16 = v15;

  type metadata accessor for InternalStateItem();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0x6574617453;
  v17[3] = 0xE500000000000000;
  v17[4] = v14;
  v17[5] = v16;
  v2[4] = v17;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = 0x746546207473614CLL;
  v18[3] = 0xEA00000000006863;
  v18[4] = v10;
  v18[5] = v11;
  v2[5] = v18;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = 0x6C7546207473614CLL;
  v19[3] = 0xEF6863746546206CLL;
  v19[4] = v9;
  v19[5] = v8;
  v2[6] = v19;
  v20 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v37, 1, 1, v20);
  sub_1BC3B30F0();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC639590;
  v22 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v21 + 64) = v22;
  *(_QWORD *)(v21 + 32) = v4;
  if (qword_1ED6A4888 != -1)
    goto LABEL_10;
LABEL_8:
  v35 = *(_QWORD *)(v0 + 240);
  v36 = *(_QWORD *)(v0 + 248);
  v31 = *(_QWORD *)(v0 + 216);
  v32 = *(_QWORD *)(v0 + 208);
  v33 = *(_QWORD *)(v0 + 224);
  v23 = *(_QWORD *)(v0 + 144);
  v34 = *(_QWORD **)(v0 + 128);
  v24 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v25 = sub_1BC62C6A4();
  v27 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BC377E3C(v23, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0xD000000000000014;
  v28[3] = 0x80000001BC65C7C0;
  v28[4] = v25;
  v28[5] = v27;
  v2[7] = v28;
  sub_1BC62C890();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v32);
  type metadata accessor for InternalStateSection();
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = v35;
  v29[3] = v36;
  v29[4] = v2;
  *v34 = v29;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC49F868()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(void **)(v0 + 288);
  v2 = *(void **)(v0 + 296);
  swift_willThrow();

  v4 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 264);
  v7 = *(void **)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 144);
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC63A3D0;
  v10 = objc_msgSend(v7, sel_displayableStatus);
  v11 = sub_1BC62C680();
  v13 = v12;

  type metadata accessor for InternalStateItem();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0x6574617453;
  v14[3] = 0xE500000000000000;
  v14[4] = v11;
  v14[5] = v13;
  *(_QWORD *)(v9 + 32) = v14;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0x746546207473614CLL;
  v15[3] = 0xEA00000000006863;
  v15[4] = v6;
  v15[5] = v5;
  *(_QWORD *)(v9 + 40) = v15;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0x6C7546207473614CLL;
  v16[3] = 0xEF6863746546206CLL;
  v16[4] = v4;
  v16[5] = v3;
  *(_QWORD *)(v9 + 48) = v16;
  v17 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
  sub_1BC3B30F0();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC639590;
  v19 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v18 + 64) = v19;
  *(_QWORD *)(v18 + 32) = 0;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v32 = *(_QWORD *)(v0 + 240);
  v33 = *(_QWORD *)(v0 + 248);
  v28 = *(_QWORD *)(v0 + 216);
  v29 = *(_QWORD *)(v0 + 208);
  v30 = *(_QWORD *)(v0 + 224);
  v20 = *(_QWORD *)(v0 + 144);
  v31 = *(_QWORD **)(v0 + 128);
  v21 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v22 = sub_1BC62C6A4();
  v24 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BC377E3C(v20, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = 0xD000000000000014;
  v25[3] = 0x80000001BC65C7C0;
  v25[4] = v22;
  v25[5] = v24;
  *(_QWORD *)(v9 + 56) = v25;
  sub_1BC62C890();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  type metadata accessor for InternalStateSection();
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v32;
  v26[3] = v33;
  v26[4] = v9;
  *v31 = v26;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC49FC14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  if (a3)
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 32);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_1BC62C548();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1BC49FCC8()
{
  uint64_t v0;
  _QWORD *v1;

  v1[6] = v0;
  sub_1BC62C6D4();
  v1[7] = swift_task_alloc();
  sub_1BC62A268();
  v1[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC49FD40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  swift_retain();
  sub_1BC62ABA4();
  swift_release();
  swift_task_dealloc();
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + OBJC_IVAR___HRInternalStateProvider_loadState);
  return swift_task_switch();
}

uint64_t sub_1BC49FDD0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 72);
  if ((*(_BYTE *)(v1 + 120) & 1) == 0 && *(_BYTE *)(v1 + 121) == 1)
    return swift_task_switch();
  sub_1BC347F0C(&qword_1EF432420, (uint64_t (*)(uint64_t))_s9LoadStateCMa, (uint64_t)&unk_1BC63CD9C);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v3;
  *v3 = v0;
  v3[1] = sub_1BC4A0164;
  return sub_1BC62D544();
}

uint64_t sub_1BC49FEA8()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1BC62A298();
  swift_allocObject();
  v0[10] = sub_1BC62A28C();
  sub_1BC62A25C();
  sub_1BC62A274();
  v1 = (_QWORD *)swift_task_alloc();
  v0[11] = v1;
  *v1 = v0;
  v1[1] = sub_1BC49FF40;
  v1[5] = v0[6];
  return swift_task_switch();
}

uint64_t sub_1BC49FF40(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC49FF9C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 96);
  sub_1BC357158(0, &qword_1EF432430, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateSection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC4A0D20();
  v1 = sub_1BC62A280();
  v3 = v2;
  swift_bridgeObjectRelease();
  sub_1BC62C6BC();
  v4 = sub_1BC62C698();
  if (v5)
  {
    v6 = v4;
    v7 = v5;
    sub_1BC35D530(v1, v3);
    swift_release();
  }
  else
  {
    v6 = 0xD000000000000023;
    sub_1BC35D530(v1, v3);
    swift_release();
    v7 = 0x80000001BC65C620;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t, unint64_t))(v0 + 8))(v6, v7);
}

uint64_t sub_1BC4A0164()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC4A01BC()
{
  return swift_task_switch();
}

uint64_t sub_1BC4A02FC(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1BC4A035C;
  return sub_1BC49FCC8();
}

uint64_t sub_1BC4A035C()
{
  uint64_t *v0;
  void (**v1)(_QWORD, _QWORD);
  void *v2;
  void *v3;
  uint64_t v5;

  v1 = *(void (***)(_QWORD, _QWORD))(*v0 + 24);
  v2 = *(void **)(*v0 + 16);
  v5 = *v0;
  swift_task_dealloc();

  v3 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  ((void (**)(_QWORD, void *))v1)[2](v1, v3);

  _Block_release(v1);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1BC4A03F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_1BC4A0408()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[5];
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0[6] = v2;
  v3 = swift_allocObject();
  v0[7] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_1BC6396B0;
  v4 = swift_allocObject();
  v0[8] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_1BC639570;
  v0[9] = *(_QWORD *)(v1 + OBJC_IVAR___HRInternalStateProvider_loadState);
  return swift_task_switch();
}

uint64_t sub_1BC4A04B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v1 + 112);
  *(_BYTE *)(v0 + 112) = *(_BYTE *)(v1 + 120);
  return swift_task_switch();
}

uint64_t sub_1BC4A04DC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;

  if ((*(_BYTE *)(v0 + 112) & 1) != 0)
  {
    v1 = 0xEE0064656E696D72;
    v2 = 0x6574654420746F4ELL;
  }
  else
  {
    v1 = 0x80000001BC653150;
    v2 = 0xD000000000000013;
    switch(*(_QWORD *)(v0 + 80))
    {
      case 0:
        v1 = 0xED00006574617453;
        v2 = 0x206E776F6E6B6E55;
        break;
      case 1:
        v1 = 0xED0000676E697473;
        v2 = 0x65676E4920746F4ELL;
        break;
      case 2:
        break;
      case 3:
        v1 = 0xE900000000000067;
        v2 = 0x6E69747365676E49;
        break;
      default:
        v2 = 0x206E776F6E6B6E55;
        v1 = 0xEE002E6574617453;
        break;
    }
  }
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  type metadata accessor for InternalStateItem();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0x6F69747365676E49;
  v5[3] = 0xEF6574617453206ELL;
  v5[4] = v2;
  v5[5] = v1;
  *(_QWORD *)(v3 + 32) = v5;
  v6 = objc_msgSend(*(id *)(v4 + OBJC_IVAR___HRInternalStateProvider_conceptStore), sel_currentConceptIndexerState);
  if (v6)
  {
    if (v6 == (id)1)
    {
      v7 = 0xE400000000000000;
      v8 = 1701602377;
    }
    else if (v6 == (id)2)
    {
      v7 = 0xE800000000000000;
      v8 = 0x676E697865646E49;
    }
    else
    {
      v8 = 0x206E776F6E6B6E55;
      v7 = 0xEE002E6574617453;
    }
  }
  else
  {
    v7 = 0xE700000000000000;
    v8 = 0x6C616974696E49;
  }
  v10 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 64);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0x7453207865646E49;
  v11[3] = 0xEB00000000657461;
  v11[4] = v8;
  v11[5] = v7;
  *(_QWORD *)(v9 + 40) = v11;
  sub_1BC62C890();
  *(_QWORD *)(v0 + 88) = type metadata accessor for InternalStateSection();
  v12 = swift_allocObject();
  strcpy((char *)(v12 + 16), "System States");
  *(_WORD *)(v12 + 30) = -4864;
  *(_QWORD *)(v12 + 32) = v9;
  *(_QWORD *)(v10 + 32) = v12;
  sub_1BC62C890();
  *(_QWORD *)(v0 + 16) = v10;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v13;
  *v13 = v0;
  v13[1] = sub_1BC4A07B4;
  v13[7] = *(_QWORD *)(v0 + 40);
  return swift_task_switch();
}

uint64_t sub_1BC4A07B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC4A0810()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30[2];

  v1 = (_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 40);
  sub_1BC3BB3DC(*(_QWORD *)(v0 + 104));
  v3 = v2;
  v4 = sub_1BC3B2E20(0xD000000000000012, 0x80000001BC65C840);

  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(v5 + 32) = v4;
  v30[0] = v5;
  sub_1BC62C890();
  v6 = v30[0];
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0xD000000000000034;
  v7[3] = 0x80000001BC65C800;
  v7[4] = v6;
  _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1BC3D6B50(v8);
  swift_bridgeObjectRelease();
  v30[0] = (uint64_t)v9;
  sub_1BC558B08(v30);
  v10 = *(void **)(v0 + 40);
  swift_bridgeObjectRelease();
  v11 = v30[0];
  v12 = v10;
  v13 = sub_1BC4A1ADC(v11, (uint64_t)v12);

  swift_release();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0xD00000000000001BLL;
  v14[3] = 0x80000001BC65C860;
  v14[4] = v13;
  _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0();
  v15 = swift_bridgeObjectRetain();
  v16 = sub_1BC3D6B50(v15);
  swift_bridgeObjectRelease();
  v30[0] = (uint64_t)v16;
  sub_1BC558B08(v30);
  v17 = *(void **)(v0 + 40);
  swift_bridgeObjectRelease();
  v18 = v30[0];
  v19 = v17;
  v20 = sub_1BC4A1F5C(v18, v19);

  swift_release();
  v21 = swift_allocObject();
  strcpy((char *)(v21 + 16), "Record Counts");
  *(_WORD *)(v21 + 30) = -4864;
  *(_QWORD *)(v21 + 32) = v20;
  v22 = *(_QWORD *)(v0 + 16);
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    v29 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    v24 = v29 + 3;
    if (!__OFADD__(v29, 3))
    {
LABEL_3:
      sub_1BC5EC1E8(v24, 1);
      sub_1BC62C890();
      v25 = swift_retain();
      MEMORY[0x1BCCF1B30](v25);
      if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    v24 = v23 + 3;
    if (!__OFADD__(v23, 3))
      goto LABEL_3;
  }
  __break(1u);
LABEL_12:
  sub_1BC62C8B4();
LABEL_4:
  sub_1BC62C8D8();
  sub_1BC62C890();
  v26 = swift_retain();
  MEMORY[0x1BCCF1B30](v26);
  if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v27 = swift_retain();
  MEMORY[0x1BCCF1B30](v27);
  if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

void sub_1BC4A0BF8(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v11;

  v4 = sub_1BC62C488();
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = MEMORY[0x1E0C80A78](v4).n128_u64[0];
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    *a1 = 1;
    objc_msgSend(*(id *)(a2 + OBJC_IVAR___HRInternalStateProvider_ingestionStore), sel_addIngestionStateListener_, a2, v6);
    v9 = *(void **)(a2 + OBJC_IVAR___HRInternalStateProvider_conceptStore);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF540], v4);
    v10 = (void *)sub_1BC62CCB0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    objc_msgSend(v9, sel_registerAsConceptObserver_onQueue_, a2, v10);

  }
}

void sub_1BC4A0D10(_BYTE *a1)
{
  uint64_t v1;

  sub_1BC4A0BF8(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BC4A0D18(uint64_t a1)
{
  uint64_t v1;

  sub_1BC3E9948(a1, v1);
}

unint64_t sub_1BC4A0D20()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF432438;
  if (!qword_1EF432438)
  {
    sub_1BC357158(255, &qword_1EF432430, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateSection, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC347F0C((unint64_t *)&unk_1EF432440, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateSection, (uint64_t)&unk_1BC63BD0C);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF432438);
  }
  return result;
}

uint64_t sub_1BC4A0DB0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  _QWORD *v19;
  uint64_t (*v20)(uint64_t);
  _QWORD *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v45 = (char *)&v35 - v2;
  v3 = sub_1BC62CC5C();
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x1E0C80A78](v3);
  v42 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4A2AC8();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x1E0C80A78](v5);
  v39 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4A2BA4();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62CC68();
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  MEMORY[0x1E0C80A78](v9);
  v37 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62CC20();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1BC62C4AC();
  MEMORY[0x1E0C80A78](v12);
  if (qword_1ED6A4878 != -1)
    swift_once();
  v13 = qword_1ED6A54F0;
  v14 = objc_msgSend(*(id *)&v0[OBJC_IVAR___HRInternalStateProvider_healthRecordsStore], sel_healthStore);
  v38 = v0;
  v15 = v14;
  v16 = objc_msgSend(v14, sel_profileIdentifier);

  v49 = *(_QWORD *)(v13 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v17);
  *(&v35 - 2) = v13;
  *(&v35 - 1) = (uint64_t)v16;
  sub_1BC62AA6C();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  type metadata accessor for CountProviderCollection();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v18, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();
  swift_release();

  v19 = v50;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  sub_1BC62C494();
  v50 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1BC357158(0, &qword_1ED6A58B0, v20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35A2BC((unint64_t *)&qword_1ED6A58B8, &qword_1ED6A58B0, v20);
  sub_1BC62D0A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v37, *MEMORY[0x1E0DEF8D0], v36);
  v21 = (_QWORD *)sub_1BC62CCA4();
  v50 = *(_QWORD **)(v19[3] + 32);
  sub_1BC4A2B40();
  sub_1BC347F0C((unint64_t *)&qword_1EF431FF0, (uint64_t (*)(uint64_t))sub_1BC4A2B40, MEMORY[0x1E0C95FB8]);
  sub_1BC4A2C60();
  v22 = v39;
  sub_1BC62C0B0();
  v23 = v42;
  sub_1BC62CC50();
  v50 = v21;
  v24 = sub_1BC62CC38();
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868];
  v26 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v45, 1, 1, v24);
  sub_1BC347F0C((unint64_t *)&unk_1EF4325A0, (uint64_t (*)(uint64_t))sub_1BC4A2AC8, MEMORY[0x1E0C958E0]);
  sub_1BC3ABB20();
  v27 = v46;
  v28 = v41;
  sub_1BC62C08C();
  sub_1BC377E3C(v26, (unint64_t *)&qword_1ED6A4DF0, v25);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v44);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v28);
  v29 = swift_allocObject();
  v30 = v38;
  *(_QWORD *)(v29 + 16) = v38;
  sub_1BC347F0C((unint64_t *)&unk_1EF4325B8, (uint64_t (*)(uint64_t))sub_1BC4A2BA4, MEMORY[0x1E0C95BB0]);
  v31 = v30;
  v32 = v48;
  v33 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v32);
  *(_QWORD *)&v31[OBJC_IVAR___HRInternalStateProvider_sub] = v33;

  swift_release();
  return swift_release();
}

uint64_t sub_1BC4A1394(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *);
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v12;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - v5;
  *(_QWORD *)&a2[OBJC_IVAR___HRInternalStateProvider_recordCounts] = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void (**)(char *))&a2[OBJC_IVAR___HRInternalStateProvider_changeHandler];
  if (v7)
  {
    swift_retain();
    v7(a2);
    sub_1BC36D770((uint64_t)v7);
  }
  v8 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a2;
  v10 = a2;
  sub_1BC5C2784((uint64_t)v6, (uint64_t)&unk_1EF4325D0, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1BC4A14BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch();
}

uint64_t sub_1BC4A14D4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR___HRInternalStateProvider_loadState);
  return swift_task_switch();
}

uint64_t sub_1BC4A14F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 48);
  *(_BYTE *)(v1 + 121) = 1;
  if ((*(_BYTE *)(v1 + 120) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 48) + 128;
    swift_beginAccess();
    v3 = *(_QWORD *)v2;
    v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      v5 = v3 + 40;
      do
      {
        v6 = *(void (**)(uint64_t))(v5 - 8);
        v7 = swift_retain();
        v6(v7);
        swift_release();
        v5 += 16;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)v2 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id InternalStateProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void InternalStateProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t InternalStateProvider.ingestionStateDidUpdate(clinicalIngestionStore:state:)(uint64_t a1, uint64_t a2)
{
  return sub_1BC4A25EC(a2);
}

uint64_t sub_1BC4A163C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1BC4A1654()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___HRInternalStateProvider_loadState);
  return swift_task_switch();
}

uint64_t sub_1BC4A1678()
{
  uint64_t v0;

  sub_1BC3E97D8(*(_QWORD *)(v0 + 24));
  return swift_task_switch();
}

uint64_t sub_1BC4A16B4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t))(v1 + OBJC_IVAR___HRInternalStateProvider_changeHandler);
  if (v2)
  {
    swift_retain();
    v2(v1);
    sub_1BC36D770((uint64_t)v2);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC4A177C(uint64_t result)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(result + OBJC_IVAR___HRInternalStateProvider_changeHandler);
  if (v1)
  {
    v2 = result;
    swift_retain();
    v1(v2);
    return sub_1BC36D770((uint64_t)v1);
  }
  return result;
}

uint64_t sub_1BC4A1830(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1BC3781C0;
  return v6();
}

uint64_t sub_1BC4A1884(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1BC3781C0;
  return v7();
}

uint64_t sub_1BC4A18D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BC62C95C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BC62C950();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BC377E3C(a1, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BC62C908();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1BC4A1A2C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BC4A1A90;
  return v6(a1);
}

uint64_t sub_1BC4A1A90()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC4A1ADC(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  void **v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD v50[6];
  uint64_t v51;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v37 = v7;
    v46 = v2;
    v51 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    v38 = a2 + OBJC_IVAR___HRInternalStateProvider_healthExperienceStore;
    v10 = (void **)(a1 + 96);
    v35 = xmmword_1BC639590;
    do
    {
      v44 = v8;
      v17 = *((_BYTE *)v10 - 64);
      v19 = (uint64_t)*(v10 - 5);
      v18 = (uint64_t)*(v10 - 4);
      v40 = *(v10 - 7);
      v41 = v18;
      v20 = (uint64_t)*(v10 - 3);
      v21 = (uint64_t)*(v10 - 2);
      v22 = *v10;
      sub_1BC34E674(v38, (uint64_t)v50);
      v39 = (id)v50[4];
      __swift_project_boxed_opaque_existential_1Tm(v50, v50[3]);
      LOBYTE(v48) = v17;
      v45 = v19;
      swift_bridgeObjectRetain_n();
      v42 = v20;
      swift_bridgeObjectRetain_n();
      v43 = v21;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v23 = v22;
      v24 = v40;
      v40 = v23;
      v25 = v24;
      v26 = v46;
      v27 = sub_1BC3AA958((unsigned __int8 *)&v48);
      if (v26)
      {
        v48 = 0;
        v49 = 0xE000000000000000;
        sub_1BC62D1D8();
        sub_1BC62C764();
        v47 = v26;
        sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
        sub_1BC62D2D4();
        sub_1BC62C764();

        v46 = 0;
        v11 = v48;
        v12 = v49;
        v13 = v44;
      }
      else
      {
        v28 = v27;
        v39 = v25;
        v46 = 0;
        v29 = sub_1BC62A820();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v37, 1, 1, v29);
        sub_1BC3B30F0();
        v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = v35;
        *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v30 + 64) = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v30 + 32) = v28;
        if (qword_1ED6A4888 != -1)
          swift_once();
        v31 = (id)qword_1ED6A5528;
        swift_bridgeObjectRetain();
        v11 = sub_1BC62A4A8();
        v12 = v32;
        v13 = v44;
        if (*(_QWORD *)(v30 + 16))
        {
          v33 = (uint64_t)v37;
          v11 = sub_1BC62C6A4();
          v36 = v34;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v12 = v36;
        }
        else
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          v33 = (uint64_t)v37;
        }
        sub_1BC377E3C(v33, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
        v25 = v39;
      }
      type metadata accessor for InternalStateItem();
      v14 = (_QWORD *)swift_allocObject();
      v15 = v42;
      v14[2] = v41;
      v14[3] = v15;
      v14[4] = v11;
      v14[5] = v12;
      v16 = v40;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v10 += 9;
      v8 = v13 - 1;
    }
    while (v8);
    return v51;
  }
  return result;
}

uint64_t sub_1BC4A1F5C(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  __int128 *v32;
  uint64_t v33;
  char *v34;
  __int128 v35[2];
  _OWORD v36[2];
  uint64_t v37;
  __int128 v38;
  uint64_t v39;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v29 = v2;
    v39 = MEMORY[0x1E0DEE9D8];
    sub_1BC62D28C();
    v10 = a1 + 32;
    v11 = OBJC_IVAR___HRInternalStateProvider_recordCounts;
    v12 = v36;
    v31 = xmmword_1BC639590;
    v30 = a2;
    v32 = v36;
    v33 = OBJC_IVAR___HRInternalStateProvider_recordCounts;
    while (1)
    {
      v37 = *(_QWORD *)(v10 + 64);
      v16 = *(_OWORD *)(v10 + 48);
      v36[0] = *(_OWORD *)(v10 + 32);
      v36[1] = v16;
      v17 = *(_OWORD *)(v10 + 16);
      v35[0] = *(_OWORD *)v10;
      v35[1] = v17;
      v38 = *v12;
      v18 = *(_QWORD *)&a2[v11];
      v19 = *(_QWORD *)(v18 + 16);
      sub_1BC359A94((uint64_t)v35);
      sub_1BC359A94((uint64_t)v35);
      v34 = a2;
      sub_1BC34B650((uint64_t)&v38);
      if (v19)
      {
        swift_bridgeObjectRetain();
        sub_1BC5594EC(v35);
        if ((v21 & 1) != 0)
        {
          v22 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v20);
          swift_bridgeObjectRelease();
          v23 = sub_1BC62A820();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 1, 1, v23);
          sub_1BC3B30F0();
          v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = v31;
          *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v24 + 64) = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v24 + 32) = v22;
          if (qword_1ED6A4888 != -1)
            swift_once();
          v25 = (id)qword_1ED6A5528;
          swift_bridgeObjectRetain();
          v13 = sub_1BC62A4A8();
          v14 = v26;
          if (*(_QWORD *)(v24 + 16))
          {
            v13 = sub_1BC62C6A4();
            v28 = v27;
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v14 = v28;
            a2 = v30;
          }
          else
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
          }
          sub_1BC377E3C((uint64_t)v7, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
          v12 = v32;
          v11 = v33;
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
      }
      v13 = 0x206E776F6E6B6E55;
      v14 = 0xED0000746E756F43;
LABEL_5:
      type metadata accessor for InternalStateItem();
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = v38;
      *(_QWORD *)(v15 + 32) = v13;
      *(_QWORD *)(v15 + 40) = v14;
      sub_1BC359AF8((uint64_t)v35);

      sub_1BC359AF8((uint64_t)v35);
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v10 += 72;
      if (!--v8)
        return v39;
    }
  }
  return result;
}

uint64_t sub_1BC4A22BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v3 = v2;
  v4 = (uint64_t *)(v2 + OBJC_IVAR___HRInternalStateProvider_changeHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR___HRInternalStateProvider_changeHandler);
  *v4 = a1;
  v4[1] = a2;
  sub_1BC38F084(a1);
  v6 = sub_1BC36D770(v5);
  v7 = (void (*)(uint64_t))*v4;
  if (*v4)
  {
    MEMORY[0x1E0C80A78](v6);
    sub_1BC38F084((uint64_t)v7);
    swift_retain();
    sub_1BC62ABA4();
    swift_release();
    v7(v3);
    return sub_1BC36D770((uint64_t)v7);
  }
  else
  {
    MEMORY[0x1E0C80A78](v6);
    swift_retain();
    sub_1BC62ABA4();
    return swift_release();
  }
}

id sub_1BC4A23EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;

  v0 = sub_1BC62A82C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BC62A8D4();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62A820();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1BC62A7C0();
  v12 = (void *)sub_1BC62A7E4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  objc_msgSend(v11, sel_setLocale_, v12);

  v13 = (void *)sub_1BC62C650();
  objc_msgSend(v11, sel_setDateFormat_, v13);

  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CB0EF8], v0);
  sub_1BC62A838();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v14 = (void *)sub_1BC62A868();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  objc_msgSend(v11, sel_setCalendar_, v14);

  return v11;
}

uint64_t sub_1BC4A25EC(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v15 - v4;
  v6 = sub_1BC62C95C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v1;
  v8[5] = a1;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  v9 = v1;
  if ((_DWORD)a1 == 1)
  {
    sub_1BC377E3C((uint64_t)v5, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_1BC62C950();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_1BC62C908();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = &unk_1EF432648;
  *(_QWORD *)(v13 + 24) = v8;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t _s15HealthRecordsUI21InternalStateProviderC12conceptStore_21indexManagerDidChangeySo09HKConceptH0C_So0m5IndexjE0VtF_0()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD aBlock[6];

  v1 = sub_1BC62C47C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v14 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62C4AC();
  v5 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v8 = (void *)sub_1BC62CC74();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v0;
  aBlock[4] = sub_1BC4A3064;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_38_0;
  v10 = _Block_copy(aBlock);
  v11 = v0;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, v2, MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35A2BC((unint64_t *)&qword_1ED6A58A0, (unint64_t *)&qword_1ED6A5890, v2);
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v7, v4, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t method lookup function for InternalStateProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InternalStateProvider.fetchJSON()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BC4A2A70;
  return v5();
}

uint64_t sub_1BC4A2A70(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

void sub_1BC4A2AC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432588)
  {
    sub_1BC4A2B40();
    sub_1BC347F0C((unint64_t *)&qword_1EF431FF0, (uint64_t (*)(uint64_t))sub_1BC4A2B40, MEMORY[0x1E0C95FB8]);
    v0 = sub_1BC62BE04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432588);
  }
}

void sub_1BC4A2B40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4D50)
  {
    sub_1BC486D54();
    v0 = sub_1BC62BF18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4D50);
  }
}

void sub_1BC4A2BA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432590)
  {
    sub_1BC4A2AC8();
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC347F0C((unint64_t *)&unk_1EF4325A0, (uint64_t (*)(uint64_t))sub_1BC4A2AC8, MEMORY[0x1E0C958E0]);
    sub_1BC3ABB20();
    v0 = sub_1BC62BE34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432590);
  }
}

void sub_1BC4A2C58(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BC61E7BC(*(void **)(v1 + 24), a1);
}

unint64_t sub_1BC4A2C60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF4325B0;
  if (!qword_1EF4325B0)
  {
    sub_1BC486D54();
    v2 = MEMORY[0x1E0DEB438];
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEA0C8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF4325B0);
  }
  return result;
}

uint64_t sub_1BC4A2CB8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC4A2CDC(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BC4A1394(a1, *(char **)(v1 + 16));
}

uint64_t sub_1BC4A2CE4()
{
  return objectdestroy_5Tm_1();
}

uint64_t sub_1BC4A2CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BC3781C0;
  v3[5] = v2;
  return swift_task_switch();
}

uint64_t sub_1BC4A2D4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BC377F18;
  return sub_1BC49ED7C(a1, a2, v6);
}

uint64_t sub_1BC4A2DB4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1BC4A2DE0()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1BC3781C0;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EF4325F8 + dword_1EF4325F8))(v2, v3);
}

uint64_t sub_1BC4A2E48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1BC3781C0;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EF432608 + dword_1EF432608))(v2, v3, v4);
}

uint64_t objectdestroy_18Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4A2EF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC3781C0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EF432618 + dword_1EF432618))(a1, v4, v5, v6);
}

uint64_t sub_1BC4A2F74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4A2F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BC3781C0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF432628 + dword_1EF432628))(a1, v4);
}

id sub_1BC4A3008(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v3;
  id result;

  v3 = *(_QWORD *)(v1 + 16);
  objc_msgSend(*(id *)(v3 + OBJC_IVAR___HRInternalStateProvider_ingestionStore), sel_removeIngestionStateListener_, v3);
  result = objc_msgSend(*(id *)(v3 + OBJC_IVAR___HRInternalStateProvider_conceptStore), sel_unregisterAsConceptObserver_, v3);
  *a1 = 0;
  return result;
}

uint64_t sub_1BC4A3064()
{
  uint64_t v0;

  return sub_1BC4A177C(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t sub_1BC4A3084()
{
  return objectdestroy_5Tm_1();
}

uint64_t objectdestroy_5Tm_1()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC4A30C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1BC377F18;
  v4[2] = v2;
  v4[3] = v3;
  return swift_task_switch();
}

uint64_t sub_1BC4A3124(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BC3781C0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF43A998 + dword_1EF43A998))(a1, v4);
}

uint64_t sub_1BC4A31A4()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1BC62D670();
  v2 = v1;
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

void sub_1BC4A31F0()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1BC62CEC0();

}

uint64_t sub_1BC4A3234()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1BC62D670();
  v2 = v1;
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

uint64_t sub_1BC4A327C()
{
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  return sub_1BC62CEB4() & 1;
}

uint64_t sub_1BC4A32CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  unint64_t v11;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_1BC62D1D8();
  v5 = objc_msgSend(*(id *)(v0 + 16), sel_UUID);
  sub_1BC62A79C();

  v6 = sub_1BC62A778();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  v10 = v6;
  v11 = v8;
  sub_1BC62C764();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BC4A349C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 56);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicalRecordTimelineChartValueItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC4A3540()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC4A3570()
{
  return sub_1BC4A32CC();
}

uint64_t sub_1BC4A3590()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_1BC62D670();
  v7 = objc_msgSend(*(id *)(v6 + 16), sel_UUID);
  sub_1BC62A79C();

  sub_1BC379B20((unint64_t *)&qword_1ED6A4E38, 255, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  sub_1BC62C740();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4A368C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v9;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v4 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_UUID, v4);
  sub_1BC62A79C();

  sub_1BC379B20((unint64_t *)&qword_1ED6A4E38, 255, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC4A3794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62D670();
  v6 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_UUID);
  sub_1BC62A79C();

  sub_1BC379B20((unint64_t *)&qword_1ED6A4E38, 255, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4A38AC()
{
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  return sub_1BC62CEB4() & 1;
}

id sub_1BC4A3904()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  v2 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4B10], 1024);
  objc_msgSend(v0, sel_setFont_, v2);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  return v0;
}

id sub_1BC4A39EC(SEL *a1, uint64_t a2)
{
  id v4;
  id v5;
  id v6;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v5 = objc_msgSend((id)objc_opt_self(), *a1);
  objc_msgSend(v4, sel_setTextColor_, v5);

  v6 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B10], *MEMORY[0x1E0DC1440]);
  objc_msgSend(v4, sel_setFont_, v6);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, a2);
  return v4;
}

id sub_1BC4A3AE8(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  v9 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel;
  v10 = v4;
  *(_QWORD *)&v4[v9] = sub_1BC4A3904();
  v11 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel;
  *(_QWORD *)&v10[v11] = sub_1BC4A39EC((SEL *)&selRef_secondaryLabelColor, 0);
  v12 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel;
  *(_QWORD *)&v10[v12] = sub_1BC4A39EC((SEL *)&selRef_secondaryLabelColor, 0);
  v13 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel;
  *(_QWORD *)&v10[v13] = sub_1BC4A39EC((SEL *)&selRef_labelColor, 2);
  v14 = &v10[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item];
  *((_QWORD *)v14 + 4) = 0;
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  v15 = &v10[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_sectionContext];
  v16 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);

  v19.receiver = v10;
  v19.super_class = (Class)type metadata accessor for MedicalRecordTimelineChartValueItemCell();
  v17 = objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC4A3DD4();

  return v17;
}

id sub_1BC4A3C48(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v3 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel;
  v4 = v1;
  *(_QWORD *)&v1[v3] = sub_1BC4A3904();
  v5 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel;
  *(_QWORD *)&v4[v5] = sub_1BC4A39EC((SEL *)&selRef_secondaryLabelColor, 0);
  v6 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel;
  *(_QWORD *)&v4[v6] = sub_1BC4A39EC((SEL *)&selRef_secondaryLabelColor, 0);
  v7 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel;
  *(_QWORD *)&v4[v7] = sub_1BC4A39EC((SEL *)&selRef_labelColor, 2);
  v8 = &v4[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item];
  *((_QWORD *)v8 + 4) = 0;
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_sectionContext];
  v10 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);

  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for MedicalRecordTimelineChartValueItemCell();
  v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

uint64_t sub_1BC4A3DD4()
{
  char *v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v40 = (char *)&v34 - v3;
  v41 = sub_1BC62BBAC();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v36 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62BB64();
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], v1);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - v9;
  v11 = sub_1BC62BC78();
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)&v13 = MEMORY[0x1E0C80A78](v11).n128_u64[0];
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(v0, sel_contentView, v13);
  objc_msgSend(v16, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel]);

  v17 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v17, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel]);

  v18 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v18, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel]);

  v19 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel]);

  sub_1BC62A988();
  v20 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC62CDF4();

  sub_1BC4A4278();
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(v21, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v22);

  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v0, sel_setSelectedBackgroundView_, v23);

  v24 = objc_msgSend(v0, sel_selectedBackgroundView);
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(v21, sel_tertiarySystemGroupedBackgroundColor);
    objc_msgSend(v25, sel_setBackgroundColor_, v26);

  }
  sub_1BC62BC48();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v15, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  MEMORY[0x1BCCF1FE0](v10);
  sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62BBC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
  v27 = *MEMORY[0x1E0DC1C20];
  v35 = v11;
  v28 = v37;
  v29 = v38;
  v30 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 104))(v7, v27, v38);
  v31 = sub_1BC62BB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v40, 1, 1, v31);
  v32 = v36;
  sub_1BC62BBA0();
  sub_1BC62BB7C();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v32, v41);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
  sub_1BC62CD40();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v35);
}

void sub_1BC4A4278()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;

  sub_1BC34D844();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC641280;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel];
  v3 = objc_msgSend(v2, sel_leadingAnchor);
  v4 = objc_msgSend(v0, sel_contentView);
  v5 = objc_msgSend(v4, (SEL)&selRef_dateCache + 6);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 14.0);
  *(_QWORD *)(v1 + 32) = v6;
  v7 = objc_msgSend(v2, sel_trailingAnchor);
  v8 = objc_msgSend(v0, (SEL)&selRef_invalidate);
  v9 = objc_msgSend(v8, (SEL)&selRef_registerReuseIdentifiersWithTableView_);

  v10 = objc_msgSend(v7, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v9, -16.0);
  *(_QWORD *)(v1 + 40) = v10;
  v11 = objc_msgSend(v2, sel_topAnchor);
  v12 = objc_msgSend(v0, (SEL)&selRef_invalidate);
  v13 = objc_msgSend(v12, (SEL)&selRef_setCategoriesBySourceAlphaOrdered_ + 4);

  v14 = objc_msgSend(v11, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v13, 8.0);
  *(_QWORD *)(v1 + 48) = v14;
  v15 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel];
  v16 = objc_msgSend(v15, (SEL)&selRef_dateCache + 6);
  v17 = objc_msgSend(v2, (SEL)&selRef_dateCache + 6);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v1 + 56) = v18;
  v19 = objc_msgSend(v15, sel_trailingAnchor);
  v20 = objc_msgSend(v2, sel_trailingAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(v1 + 64) = v21;
  v22 = objc_msgSend(v15, (SEL)&selRef_setCategoriesBySourceAlphaOrdered_ + 4);
  v23 = objc_msgSend(v2, sel_bottomAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(_QWORD *)(v1 + 72) = v24;
  v25 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel];
  v26 = objc_msgSend(v25, (SEL)&selRef_dateCache + 6);
  v27 = objc_msgSend(v2, (SEL)&selRef_dateCache + 6);
  v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  *(_QWORD *)(v1 + 80) = v28;
  v29 = objc_msgSend(v25, sel_trailingAnchor);
  v30 = objc_msgSend(v2, sel_trailingAnchor);
  v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  *(_QWORD *)(v1 + 88) = v31;
  v32 = objc_msgSend(v25, sel_topAnchor);
  v33 = objc_msgSend(v15, sel_bottomAnchor);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, 7.0);

  *(_QWORD *)(v1 + 96) = v34;
  v35 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel];
  v36 = objc_msgSend(v35, (SEL)&selRef_dateCache + 6);
  v37 = objc_msgSend(v2, (SEL)&selRef_dateCache + 6);
  v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(_QWORD *)(v1 + 104) = v38;
  v39 = objc_msgSend(v35, sel_trailingAnchor);
  v40 = objc_msgSend(v2, sel_trailingAnchor);
  v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

  *(_QWORD *)(v1 + 112) = v41;
  v42 = objc_msgSend(v35, sel_topAnchor);
  v43 = objc_msgSend(v25, sel_bottomAnchor);
  v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  *(_QWORD *)(v1 + 120) = v44;
  v45 = objc_msgSend(v35, sel_bottomAnchor);
  v46 = objc_msgSend(v0, sel_contentView);
  v47 = objc_msgSend(v46, sel_bottomAnchor);

  v48 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v47, -8.0);
  *(_QWORD *)(v1 + 128) = v48;
  sub_1BC62C890();
  v49 = (void *)objc_opt_self();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v50 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v49, sel_activateConstraints_, v50);

}

void sub_1BC4A48C4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];

  v1 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item];
  swift_beginAccess();
  sub_1BC378004(v5, (uint64_t)v27, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
  if (!v27[3])
  {
    sub_1BC377E3C((uint64_t)v27, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
LABEL_6:
    sub_1BC62BAF8();
    v10 = v0;
    v11 = sub_1BC62BB28();
    v12 = sub_1BC62CAC4();
    if (os_log_type_enabled(v11, v12))
    {
      v25 = v1;
      v13 = swift_slowAlloc();
      v24 = v2;
      v14 = (uint8_t *)v13;
      v15 = swift_slowAlloc();
      v26 = v15;
      *(_DWORD *)v14 = 136446210;
      v23 = v14 + 4;
      sub_1BC378004(v5, (uint64_t)v27, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
      sub_1BC357158(0, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v16 = sub_1BC62C6F8();
      v27[0] = sub_1BC4991F0(v16, v17, &v26);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v11, v12, "Incorrect view model for MedicalRecordTimelineChartValueItem: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v15, -1, -1);
      MEMORY[0x1BCCF36A8](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v25);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return;
  }
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineChartValueItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  v6 = v26;
  v7 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel];
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setText_, v8);

  v9 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel];
  if (*(_QWORD *)(v6 + 56))
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel], sel_setAttributedText_);
  }
  else
  {
    swift_bridgeObjectRetain();
    v18 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v18);

  }
  v19 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel];
  swift_bridgeObjectRetain();
  v20 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setText_, v20);

  v21 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel];
  if (*(_QWORD *)(v6 + 88))
  {
    swift_bridgeObjectRetain();
    v22 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v21, sel_setText_, v22);
  swift_release();

}

uint64_t sub_1BC4A4CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = sub_1BC62A970();
  v17 = *(_QWORD *)(v3 - 8);
  v18 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0];
  sub_1BC357158(0, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  v10 = sub_1BC62ADD8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1;
  v14 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_sectionContext;
  swift_beginAccess();
  v20 = a1;
  sub_1BC4A5EE0(a1, v14, &qword_1EF42BC08, v6);
  swift_endAccess();
  sub_1BC378004(v14, (uint64_t)v9, &qword_1EF42BC08, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1BC377E3C((uint64_t)v9, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_1BC62ADCC();
    sub_1BC4A5094();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v18);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return sub_1BC377E3C(v20, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
}

void (*sub_1BC4A4E98(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_1BC62A970();
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v3[6] = malloc(*(_QWORD *)(v5 + 64));
  sub_1BC357158(0, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  v7 = sub_1BC62ADD8();
  v3[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[9] = v8;
  v9 = malloc(*(_QWORD *)(v8 + 64));
  v10 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_sectionContext;
  v3[10] = v9;
  v3[11] = v10;
  swift_beginAccess();
  return sub_1BC4A4F6C;
}

void sub_1BC4A4F6C(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = *(_QWORD *)(v3 + 64);
    v5 = *(_QWORD *)(v3 + 72);
    v6 = *(_QWORD *)(v3 + 56);
    sub_1BC378004(*(_QWORD *)(v3 + 24) + *(_QWORD *)(v3 + 88), v6, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      sub_1BC377E3C(*(_QWORD *)(v3 + 56), &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
    }
    else
    {
      v8 = *(_QWORD *)(v3 + 72);
      v7 = *(_QWORD *)(v3 + 80);
      v9 = *(_QWORD *)(v3 + 64);
      v11 = *(_QWORD *)(v3 + 40);
      v10 = *(_QWORD *)(v3 + 48);
      v12 = *(_QWORD *)(v3 + 32);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v7, *(_QWORD *)(v3 + 56), v9);
      sub_1BC62ADCC();
      sub_1BC4A5094();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
  }
  v14 = *(void **)(v3 + 48);
  v13 = *(void **)(v3 + 56);
  free(*(void **)(v3 + 80));
  free(v13);
  free(v14);
  free((void *)v3);
}

void sub_1BC4A5094()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v1 = v0;
  sub_1BC62D1D8();
  sub_1BC62C680();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  sub_1BC62A964();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  sub_1BC62A958();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1BC62C650();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v2);

  v3 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel];
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  v5 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel];
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);

  v7 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel];
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

  v9 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel];
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

}

id sub_1BC4A5370()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineChartValueItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC4A5440()
{
  return type metadata accessor for MedicalRecordTimelineChartValueItemCell();
}

uint64_t type metadata accessor for MedicalRecordTimelineChartValueItemCell()
{
  uint64_t result;

  result = qword_1EF432760;
  if (!qword_1EF432760)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC4A5484()
{
  unint64_t v0;

  sub_1BC357158(319, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t destroy for MedicalRecordTimelineChartValueViewData(id *a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for MedicalRecordTimelineChartValueViewData(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = *(void **)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v6;
  v7 = *(_QWORD *)(a2 + 56);
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v7;
  v8 = *(_QWORD *)(a2 + 72);
  a1[8] = *(_QWORD *)(a2 + 64);
  a1[9] = v8;
  a1[10] = *(_QWORD *)(a2 + 80);
  v9 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MedicalRecordTimelineChartValueViewData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 40);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MedicalRecordTimelineChartValueViewData(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicalRecordTimelineChartValueViewData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicalRecordTimelineChartValueViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordTimelineChartValueViewData()
{
  return &type metadata for MedicalRecordTimelineChartValueViewData;
}

unint64_t sub_1BC4A5864()
{
  unint64_t result;

  result = qword_1EF432770;
  if (!qword_1EF432770)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC642AE8, &type metadata for MedicalRecordTimelineChartValueViewData);
    atomic_store(result, (unint64_t *)&qword_1EF432770);
  }
  return result;
}

uint64_t sub_1BC4A58A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item;
  swift_beginAccess();
  return sub_1BC378004(v3, a1, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
}

uint64_t sub_1BC4A5908(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item;
  swift_beginAccess();
  sub_1BC4A5EE0(a1, v3, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
  swift_endAccess();
  sub_1BC4A48C4();
  return sub_1BC377E3C(a1, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
}

void (*sub_1BC4A599C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC4A59E4;
}

void sub_1BC4A59E4(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC4A48C4();
}

void sub_1BC4A5A14(uint64_t a1, void *a2)
{
  sub_1BC4A5B0C(a2);
}

uint64_t sub_1BC4A5A38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_sectionContext;
  swift_beginAccess();
  return sub_1BC378004(v3, a1, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
}

void (*sub_1BC4A5A9C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC4A4E98(v2);
  return sub_1BC383B18;
}

uint64_t sub_1BC4A5AE0(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF432778, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItem, (uint64_t)&unk_1BC642C30);
}

void sub_1BC4A5B0C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  void *v7;
  id v8;
  void *v9;
  char v10;
  id v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  _QWORD aBlock[3];
  void *v22;
  void (*v23)(void *, uint64_t);
  uint64_t v24;
  uint64_t v25;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item;
  swift_beginAccess();
  sub_1BC378004(v3, (uint64_t)aBlock, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
  if (v22)
  {
    sub_1BC37AE0C();
    type metadata accessor for MedicalRecordTimelineChartValueItem();
    v4 = swift_dynamicCast();
    if ((v4 & 1) != 0)
    {
      v5 = v25;
      if (qword_1ED6A4878 != -1)
        v4 = swift_once();
      v25 = *(_QWORD *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
      MEMORY[0x1E0C80A78](v4);
      sub_1BC62AA6C();
      v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
      sub_1BC379B20((unint64_t *)&qword_1ED6A4B90, 255, v6, MEMORY[0x1E0D2D480]);
      swift_retain();
      sub_1BC62B888();
      swift_release();
      v7 = (void *)aBlock[0];
      if (qword_1ED6A31B0 != -1)
        swift_once();
      v8 = *(id *)(v5 + 16);
      sub_1BC555498(v8, a1, v7);

      v9 = *(void **)(v5 + 16);
      HKMedicalRecord.categoryKind.getter(aBlock);
      v10 = aBlock[0];
      v11 = objc_msgSend(v9, sel_primaryConcept);
      v12 = objc_msgSend(v11, sel_groupByConcept);

      if (qword_1ED6A3198 != -1)
        swift_once();
      v13 = (char *)qword_1ED6A42A0;
      v14 = objc_msgSend(v12, sel_identifier);
      if (v14)
      {
        v15 = v14;
        v16 = *(void **)&v13[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
        v17 = swift_allocObject();
        *(_QWORD *)(v17 + 16) = v13;
        *(_OWORD *)(v17 + 24) = xmmword_1BC640720;
        *(_QWORD *)(v17 + 40) = 0;
        *(_BYTE *)(v17 + 48) = v10;
        v23 = sub_1BC35865C;
        v24 = v17;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BC4E2FCC;
        v22 = &block_descriptor_36;
        v18 = _Block_copy(aBlock);
        v19 = v15;
        v20 = v13;
        swift_release();
        objc_msgSend(v16, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v19, 0, v18);
        _Block_release(v18);
        swift_release();

      }
      else
      {
        LOBYTE(aBlock[0]) = v10;
        sub_1BC4E4100(3, 17, 0, (char *)aBlock, 0);
        swift_release();

      }
    }
  }
  else
  {
    sub_1BC377E3C((uint64_t)aBlock, (unint64_t *)&qword_1EF43AE70, (uint64_t (*)(uint64_t))sub_1BC37AE0C);
  }
}

uint64_t sub_1BC4A5EA4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t sub_1BC4A5EE0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC357158(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

uint64_t static OnboardingSuggestedActionType.== infix(_:_:)(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;

  v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0)
      return 0;
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t sub_1BC4A5F74()
{
  _BYTE *v0;

  if (*v0)
    return 1935827308;
  else
    return 0x6C6172656E6567;
}

uint64_t sub_1BC4A5FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC4A81EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC4A5FCC()
{
  sub_1BC4A6494();
  return sub_1BC62D700();
}

uint64_t sub_1BC4A5FF4()
{
  sub_1BC4A6494();
  return sub_1BC62D70C();
}

uint64_t sub_1BC4A601C()
{
  return 0x69446E4965646968;
}

uint64_t sub_1BC4A6044()
{
  sub_1BC4A6450();
  return sub_1BC62D700();
}

uint64_t sub_1BC4A606C()
{
  sub_1BC4A6450();
  return sub_1BC62D70C();
}

uint64_t sub_1BC4A6094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x69446E4965646968 && a2 == 0xEE007265766F6373)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BC62D574();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BC4A614C()
{
  sub_1BC4A640C();
  return sub_1BC62D700();
}

uint64_t sub_1BC4A6174()
{
  sub_1BC4A640C();
  return sub_1BC62D70C();
}

uint64_t OnboardingSuggestedActionType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC3B2CF8(0, &qword_1ED6A3D60, (uint64_t (*)(void))sub_1BC4A640C, (uint64_t)&type metadata for OnboardingSuggestedActionType.LabsCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v25 = v4;
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v24 = (char *)&v22 - v5;
  sub_1BC3B2CF8(0, &qword_1ED6A3D68, (uint64_t (*)(void))sub_1BC4A6450, (uint64_t)&type metadata for OnboardingSuggestedActionType.GeneralCodingKeys, v3);
  v7 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  v27 = v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - v8;
  sub_1BC3B2CF8(0, &qword_1ED6A3D58, (uint64_t (*)(void))sub_1BC4A6494, (uint64_t)&type metadata for OnboardingSuggestedActionType.CodingKeys, v3);
  v11 = v10;
  v28 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1;
  v16 = (char *)&v22 - v15;
  __swift_project_boxed_opaque_existential_1Tm(v14, v13);
  sub_1BC4A6494();
  sub_1BC62D6F4();
  if (v12 < 0)
  {
    v18 = v23;
    v30 = 1;
    sub_1BC4A640C();
    v19 = v24;
    sub_1BC62D4B4();
    v20 = v25;
    sub_1BC62D4E4();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v20);
  }
  else
  {
    v29 = 0;
    sub_1BC4A6450();
    sub_1BC62D4B4();
    v17 = v26;
    sub_1BC62D4E4();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v16, v11);
}

unint64_t sub_1BC4A640C()
{
  unint64_t result;

  result = qword_1ED6A3C88;
  if (!qword_1ED6A3C88)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64317C, &type metadata for OnboardingSuggestedActionType.LabsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A3C88);
  }
  return result;
}

unint64_t sub_1BC4A6450()
{
  unint64_t result;

  result = qword_1ED6A3CA0;
  if (!qword_1ED6A3CA0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64312C, &type metadata for OnboardingSuggestedActionType.GeneralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A3CA0);
  }
  return result;
}

unint64_t sub_1BC4A6494()
{
  unint64_t result;

  result = qword_1ED6A3C70;
  if (!qword_1ED6A3C70)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6430DC, &type metadata for OnboardingSuggestedActionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A3C70);
  }
  return result;
}

uint64_t OnboardingSuggestedActionType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  char v30;
  char v31;
  _QWORD *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  char v41;

  v33 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC3B2CF8(0, &qword_1EF432780, (uint64_t (*)(void))sub_1BC4A640C, (uint64_t)&type metadata for OnboardingSuggestedActionType.LabsCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v34 = v4;
  v36 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v32 - v5;
  sub_1BC3B2CF8(0, &qword_1EF432788, (uint64_t (*)(void))sub_1BC4A6450, (uint64_t)&type metadata for OnboardingSuggestedActionType.GeneralCodingKeys, v3);
  v37 = v6;
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - v7;
  sub_1BC3B2CF8(0, (unint64_t *)&unk_1EF432790, (uint64_t (*)(void))sub_1BC4A6494, (uint64_t)&type metadata for OnboardingSuggestedActionType.CodingKeys, v3);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v32 - v12;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC4A6494();
  v14 = v39;
  sub_1BC62D6DC();
  if (v14)
    goto LABEL_7;
  v15 = v37;
  v16 = v38;
  v39 = v11;
  v32 = a1;
  v17 = sub_1BC62D49C();
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v22 = sub_1BC62D238();
    swift_allocError();
    v24 = v23;
    sub_1BC4141CC();
    *v24 = &type metadata for OnboardingSuggestedActionType;
    sub_1BC62D448();
    sub_1BC62D220();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC450], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
    a1 = v32;
LABEL_7:
    v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v27);
  }
  if ((*(_BYTE *)(v17 + 32) & 1) != 0)
  {
    v41 = 1;
    sub_1BC4A640C();
    v18 = v16;
    sub_1BC62D43C();
    v19 = v34;
    v20 = sub_1BC62D478();
    v21 = v39;
    v29 = v20;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v10);
    v30 = v29 & 1 | 0x80;
  }
  else
  {
    v40 = 0;
    sub_1BC4A6450();
    sub_1BC62D43C();
    v25 = sub_1BC62D478();
    v26 = v39;
    v31 = v25;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v10);
    v30 = v31 & 1;
  }
  v27 = (uint64_t)v32;
  *v33 = v30;
  return __swift_destroy_boxed_opaque_existential_1Tm(v27);
}

uint64_t sub_1BC4A68F0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return OnboardingSuggestedActionType.init(from:)(a1, a2);
}

uint64_t sub_1BC4A6904(_QWORD *a1)
{
  return OnboardingSuggestedActionType.encode(to:)(a1);
}

uint64_t sub_1BC4A6918(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;

  v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0)
      return 0;
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t OnboardingSuggestedActionType.suggestedActionTitle.getter()
{
  char *v0;
  id v1;
  uint64_t v2;

  if (*v0 < 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
  }
  else if (qword_1ED6A4888 != -1)
  {
    swift_once();
  }
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t OnboardingSuggestedActionType.suggestedActionBody.getter()
{
  char *v0;
  id v1;
  uint64_t v2;

  if (*v0 < 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
  }
  else if (qword_1ED6A4888 != -1)
  {
    swift_once();
  }
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v2;
}

UIImage_optional __swiftcall OnboardingSuggestedActionType.image(for:)(UITraitCollection a1)
{
  char *v1;
  id v3;
  objc_class *v4;
  void *v5;
  void *v6;
  objc_class *v7;
  Swift::Bool v8;
  objc_class *v9;
  UIImage_optional result;

  if (*v1 < 0)
  {
    if (qword_1ED6A4918 != -1)
      swift_once();
    v5 = (void *)qword_1ED6A5980;
    v4 = a1.super.isa;
    v3 = v5;
  }
  else
  {
    if (qword_1ED6A4918 != -1)
      swift_once();
    v3 = (id)qword_1ED6A5980;
    v4 = a1.super.isa;
  }
  v6 = (void *)sub_1BC62C650();
  v7 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v6, v3, v4);

  v9 = v7;
  result.value.super.isa = v9;
  result.is_nil = v8;
  return result;
}

uint64_t OnboardingSuggestedActionType.imageRepresentation.getter()
{
  char *v0;
  id v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  if (*v0 < 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 51.0);
    v4 = (void *)objc_opt_self();
    v5 = objc_msgSend(v4, sel_configurationWithFont_, v3);

    v6 = objc_msgSend(v4, sel_hk_prefersMultiColorConfiguration);
    v7 = objc_msgSend(v5, sel_configurationByApplyingConfiguration_, v6);

    return sub_1BC62AC40();
  }
  else
  {
    if (qword_1ED6A4918 != -1)
      swift_once();
    v1 = (id)qword_1ED6A5980;
    return sub_1BC62AC4C();
  }
}

uint64_t OnboardingSuggestedActionType.linkTitle.getter()
{
  id v0;
  uint64_t v1;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v0 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t OnboardingSuggestedActionType.actionTitle.getter()
{
  char *v0;
  id v1;
  uint64_t v2;

  if (*v0 < 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
  }
  else if (qword_1ED6A4888 != -1)
  {
    swift_once();
  }
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t OnboardingSuggestedActionType.viewingIdentifier.getter()
{
  type metadata accessor for OnboardingViewIdentifier();
  return swift_storeEnumTagMultiPayload();
}

uint64_t OnboardingSuggestedActionType.featureAutomationIdentifier.getter()
{
  char *v0;

  if (*v0 < 0)
    return 0x62614C7055746553;
  else
    return 0xD000000000000014;
}

uint64_t PromotionTileViewActionHandlerShim.__allocating_init(context:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return PromotionTileViewActionHandlerShim.init(context:)(a1);
}

uint64_t PromotionTileViewActionHandlerShim.init(context:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1BC62B5AC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  v6 = sub_1BC62B738();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

id PromotionTileViewActionHandlerShim.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for PromotionTileViewActionHandlerShim(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4)+ class metadata base offset for PromotionTileViewActionHandlerShim), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1BC4A71C8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PromotionTileViewActionHandlerShim
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 8))();
}

uint64_t sub_1BC4A71F0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PromotionTileViewActionHandlerShim
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 16))();
}

void sub_1BC4A721C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;

  v1 = sub_1BC62B5AC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(id *)(v0 + qword_1ED6A3D40);
  v6 = (void *)sub_1BC62C650();
  v7 = objc_msgSend((id)objc_opt_self(), sel_presenterForPrivacySplashWithIdentifier_, v6);

  if (v7)
  {

    sub_1BC62B72C();
    v8 = (void *)sub_1BC62B5A0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    objc_msgSend(v7, sel_setPresentingViewController_, v8);

    objc_msgSend(v7, sel_present);
    if (qword_1ED6A3198 != -1)
      swift_once();
    sub_1BC4E5384(0, 0, 1);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC4A7384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  _QWORD aBlock[3];
  void *v23;
  void (*v24)(void *);
  _QWORD *v25;
  uint64_t v26;
  void *v27;

  v1 = sub_1BC62B5AC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A4878 != -1)
    swift_once();
  v5 = qword_1ED6A54F0;
  sub_1BC62B72C();
  sub_1BC62B594();
  v21 = *(void (**)(char *, uint64_t))(v2 + 8);
  v21(v4, v1);
  __swift_project_boxed_opaque_existential_1Tm(aBlock, (uint64_t)v23);
  v6 = (void *)sub_1BC62B588();
  v26 = *(_QWORD *)(v5 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v6);
  *(&v20 - 2) = v7;
  *(&v20 - 1) = v5;
  sub_1BC62AA6C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  sub_1BC4A7A04();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v8, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();

  swift_release();
  v9 = v27;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  v10 = *(id *)(v0 + qword_1ED6A3D40);
  sub_1BC62B72C();
  v11 = (void *)sub_1BC62B5A0();
  v21(v4, v1);
  v12 = objc_msgSend(objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController), sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, 1, 0, 0, v9, 0);
  v13 = objc_msgSend(v9, sel_onboardingManager);
  v14 = objc_msgSend(v13, sel_getPendingOnboardingGatewayAndClear);

  objc_msgSend(v12, sel_setGatewayProxyToTry_, v14);
  v15 = objc_msgSend(v9, sel_onboardingManager);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v11;
  v16[3] = v12;
  v16[4] = 0;
  v16[5] = 0;
  v24 = sub_1BC4A7A7C;
  v25 = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC42A188;
  v23 = &block_descriptor_37;
  v17 = _Block_copy(aBlock);
  v18 = v11;
  v19 = v12;
  swift_release();
  objc_msgSend(v15, sel_registerInflightOnboardingViewController_completion_, v19, v17);
  _Block_release(v17);

}

uint64_t sub_1BC4A76C0()
{
  if (qword_1ED6A3198 != -1)
    swift_once();
  return sub_1BC4E5384(0, 0, 0);
}

uint64_t OnboardingPromotionTileActionHandler.__allocating_init(context:)(char *a1)
{
  objc_class *v1;
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v2 = v1;
  v4 = sub_1BC62B5AC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - v9;
  v11 = objc_allocWithZone(v2);
  v12 = qword_1ED6A3D40;
  v13 = qword_1ED6A31B0;
  v14 = v11;
  if (v13 != -1)
    swift_once();
  v15 = (void *)qword_1ED6A4670;
  *(_QWORD *)&v14[v12] = qword_1ED6A4670;
  v14[qword_1ED6A3D38] = -4;
  v16 = v15;

  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v10, a1, v4);
  v17(v7, v10, v4);
  v18 = sub_1BC62B738();
  v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v10, v4);
  v19(a1, v4);
  return v18;
}

uint64_t OnboardingPromotionTileActionHandler.init(context:)(char *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v3 = sub_1BC62B5AC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - v8;
  v10 = qword_1ED6A3D40;
  v11 = qword_1ED6A31B0;
  v12 = v1;
  if (v11 != -1)
    swift_once();
  v13 = (void *)qword_1ED6A4670;
  *(_QWORD *)&v12[v10] = qword_1ED6A4670;
  v12[qword_1ED6A3D38] = -4;
  v14 = v13;

  v15 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v15(v9, a1, v3);
  v15(v6, v9, v3);
  v16 = sub_1BC62B738();
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v9, v3);
  v17(a1, v3);
  return v16;
}

void sub_1BC4A79A4()
{
  uint64_t v0;

}

id OnboardingPromotionTileActionHandler.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC4A79E8(uint64_t a1)
{

}

uint64_t type metadata accessor for PromotionTileViewActionHandlerShim(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromotionTileViewActionHandlerShim);
}

unint64_t sub_1BC4A7A04()
{
  unint64_t result;

  result = qword_1ED6A5998;
  if (!qword_1ED6A5998)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A5998);
  }
  return result;
}

uint64_t sub_1BC4A7A40()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

void sub_1BC4A7A7C(void *a1)
{
  uint64_t v1;

  sub_1BC553054(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t type metadata accessor for OnboardingPromotionTileActionHandler()
{
  uint64_t result;

  result = qword_1ED6A3770;
  if (!qword_1ED6A3770)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC4A7ADC()
{
  JUMPOUT(0x1BCCF35C4);
}

uint64_t sub_1BC4A7AEC()
{
  return sub_1BC347F0C(&qword_1ED6A3D48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AC70], MEMORY[0x1E0D2AC60]);
}

uint64_t getEnumTagSinglePayload for OnboardingSuggestedActionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7F)
    goto LABEL_17;
  if (a2 + 129 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 129) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 129;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 129;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 129;
  }
LABEL_17:
  v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for OnboardingSuggestedActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 129 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 129) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7E)
    return ((uint64_t (*)(void))((char *)&loc_1BC4A7C00 + 4 * byte_1BC642CD5[v4]))();
  *a1 = a2 - 127;
  return ((uint64_t (*)(void))((char *)sub_1BC4A7C34 + 4 * byte_1BC642CD0[v4]))();
}

uint64_t sub_1BC4A7C34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4A7C3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC4A7C44);
  return result;
}

uint64_t sub_1BC4A7C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4A7C64);
  *(_BYTE *)result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
  return result;
}

uint64_t sub_1BC4A7C68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4A7C70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4A7C7C(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

_BYTE *sub_1BC4A7C88(_BYTE *result)
{
  *result &= ~0x80u;
  return result;
}

_BYTE *sub_1BC4A7C98(_BYTE *result, char a2)
{
  *result = *result & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for OnboardingSuggestedActionType()
{
  return &type metadata for OnboardingSuggestedActionType;
}

uint64_t sub_1BC4A7CBC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PromotionTileViewActionHandlerShim()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PromotionTileViewActionHandlerShim.didTap()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PromotionTileViewActionHandlerShim
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 8))();
}

uint64_t dispatch thunk of PromotionTileViewActionHandlerShim.didTapLink()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PromotionTileViewActionHandlerShim
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 16))();
}

uint64_t sub_1BC4A7D58()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for OnboardingPromotionTileActionHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OnboardingPromotionTileActionHandler.viewDidMoveToSuperview()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for OnboardingPromotionTileActionHandler
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 64))();
}

uint64_t sub_1BC4A7DE0()
{
  return type metadata accessor for OnboardingPromotionTileActionHandler();
}

uint64_t storeEnumTagSinglePayload for OnboardingSuggestedActionType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC4A7E34 + 4 * byte_1BC642CDF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC4A7E68 + 4 * byte_1BC642CDA[v4]))();
}

uint64_t sub_1BC4A7E68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4A7E70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC4A7E78);
  return result;
}

uint64_t sub_1BC4A7E84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4A7E8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC4A7E90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4A7E98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingSuggestedActionType.CodingKeys()
{
  return &type metadata for OnboardingSuggestedActionType.CodingKeys;
}

ValueMetadata *type metadata accessor for OnboardingSuggestedActionType.GeneralCodingKeys()
{
  return &type metadata for OnboardingSuggestedActionType.GeneralCodingKeys;
}

uint64_t _s15HealthRecordsUI29OnboardingSuggestedActionTypeO17GeneralCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC4A7F08 + 4 * byte_1BC642CE4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC4A7F28 + 4 * byte_1BC642CE9[v4]))();
}

_BYTE *sub_1BC4A7F08(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC4A7F28(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4A7F30(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4A7F38(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4A7F40(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4A7F48(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingSuggestedActionType.LabsCodingKeys()
{
  return &type metadata for OnboardingSuggestedActionType.LabsCodingKeys;
}

unint64_t sub_1BC4A7F68()
{
  unint64_t result;

  result = qword_1EF4327B0;
  if (!qword_1EF4327B0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC642F44, &type metadata for OnboardingSuggestedActionType.LabsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4327B0);
  }
  return result;
}

unint64_t sub_1BC4A7FB0()
{
  unint64_t result;

  result = qword_1EF4327B8;
  if (!qword_1EF4327B8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC642FFC, &type metadata for OnboardingSuggestedActionType.GeneralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4327B8);
  }
  return result;
}

unint64_t sub_1BC4A7FF8()
{
  unint64_t result;

  result = qword_1EF4327C0;
  if (!qword_1EF4327C0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6430B4, &type metadata for OnboardingSuggestedActionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4327C0);
  }
  return result;
}

unint64_t sub_1BC4A8040()
{
  unint64_t result;

  result = qword_1ED6A3C80;
  if (!qword_1ED6A3C80)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC643024, &type metadata for OnboardingSuggestedActionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A3C80);
  }
  return result;
}

unint64_t sub_1BC4A8088()
{
  unint64_t result;

  result = qword_1ED6A3C78;
  if (!qword_1ED6A3C78)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64304C, &type metadata for OnboardingSuggestedActionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A3C78);
  }
  return result;
}

unint64_t sub_1BC4A80D0()
{
  unint64_t result;

  result = qword_1ED6A3CB0[0];
  if (!qword_1ED6A3CB0[0])
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC642F6C, &type metadata for OnboardingSuggestedActionType.GeneralCodingKeys);
    atomic_store(result, qword_1ED6A3CB0);
  }
  return result;
}

unint64_t sub_1BC4A8118()
{
  unint64_t result;

  result = qword_1ED6A3CA8;
  if (!qword_1ED6A3CA8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC642F94, &type metadata for OnboardingSuggestedActionType.GeneralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A3CA8);
  }
  return result;
}

unint64_t sub_1BC4A8160()
{
  unint64_t result;

  result = qword_1ED6A3C98;
  if (!qword_1ED6A3C98)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC642EB4, &type metadata for OnboardingSuggestedActionType.LabsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A3C98);
  }
  return result;
}

unint64_t sub_1BC4A81A8()
{
  unint64_t result;

  result = qword_1ED6A3C90;
  if (!qword_1ED6A3C90)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC642EDC, &type metadata for OnboardingSuggestedActionType.LabsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A3C90);
  }
  return result;
}

uint64_t sub_1BC4A81EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6172656E6567 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1935827308 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_1BC4A82F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataGroupContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SignedClinicalDataGroupContext()
{
  return objc_opt_self();
}

id BloodPressureCurrentValueViewDataSource.__allocating_init(dateCache:healthStore:selectedRangeFormatter:)(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(v3), sel_initWithDateCache_healthStore_selectedRangeFormatter_, a1, a2, a3);

  return v7;
}

id BloodPressureCurrentValueViewDataSource.init(dateCache:healthStore:selectedRangeFormatter:)(void *a1, void *a2, void *a3)
{
  void *v3;
  id v7;
  objc_super v9;

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for BloodPressureCurrentValueViewDataSource();
  v7 = objc_msgSendSuper2(&v9, sel_initWithDateCache_healthStore_selectedRangeFormatter_, a1, a2, a3);

  return v7;
}

uint64_t type metadata accessor for BloodPressureCurrentValueViewDataSource()
{
  return objc_opt_self();
}

id BloodPressureCurrentValueViewDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BloodPressureCurrentValueViewDataSource.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureCurrentValueViewDataSource();
  return objc_msgSendSuper2(&v2, sel_init);
}

id BloodPressureCurrentValueViewDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureCurrentValueViewDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC4A8584(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A8758(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EF428598 != -1)
    swift_once();
  v4 = (id)qword_1EF42F770;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A892C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EF428598 != -1)
    swift_once();
  v4 = (id)qword_1EF42F770;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A8B00(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A8CD4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A8EA8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A907C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A9254(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A9428(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A9600(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A97D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A99A8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A9B7C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A9D50(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4A9F24(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4AA0F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4AA2CC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1BC4AA4A0(void *a1, void *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  double v29;
  double v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(void);
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(void);
  uint64_t v68;
  uint64_t v69;

  v67 = a3;
  v68 = a7;
  v66 = a4;
  v69 = a9;
  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v64 - v14;
  v16 = sub_1BC62A760();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v64 - v21;
  if (!a1)
  {
    if (!a2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v54 = a2;
    v55 = a5();
    v52 = sub_1BC4AB2F4(v55, v56, a2, v68, a8);
    v53 = v52;

    if (!v52)
      return v52;
    goto LABEL_14;
  }
  if (!a2)
  {
    v33 = a1;
    v57 = v67();
    v52 = sub_1BC4AB2F4(v57, v58, a1, v68, a8);
    v53 = v52;
    goto LABEL_11;
  }
  v65 = a8;
  v23 = a2;
  v24 = a1;
  v25 = v23;
  v26 = v24;
  v27 = objc_msgSend(v25, sel_dateForUTC);
  sub_1BC62A724();

  v28 = objc_msgSend(v26, sel_dateForUTC);
  sub_1BC62A724();

  sub_1BC62A6E8();
  v30 = v29;
  v31 = *(void (**)(char *, uint64_t))(v17 + 8);
  v31(v20, v16);
  v32 = ((uint64_t (*)(char *, uint64_t))v31)(v22, v16);
  if (v30 > COERCE_DOUBLE(1))
  {
    v33 = v25;
    swift_bridgeObjectRelease();
    v34 = sub_1BC62A820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v15, 1, 1, v34);
    if (qword_1EF428568 != -1)
      swift_once();
    v35 = (void *)qword_1EF42F6E0;
    v68 = *(_QWORD *)algn_1EF42F6E8;
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BC6395A0;
    v67 = v35;
    swift_bridgeObjectRetain();
    v37 = objc_msgSend(v26, sel_displayString);
    v38 = sub_1BC62C680();
    v39 = v26;
    v41 = v40;

    v42 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
    v43 = sub_1BC3644C0();
    *(_QWORD *)(v36 + 64) = v43;
    *(_QWORD *)(v36 + 32) = v38;
    *(_QWORD *)(v36 + 40) = v41;
    v44 = objc_msgSend(v33, sel_displayString);
    v45 = sub_1BC62C680();
    v47 = v46;

    *(_QWORD *)(v36 + 96) = v42;
    *(_QWORD *)(v36 + 104) = v43;
    *(_QWORD *)(v36 + 72) = v45;
    *(_QWORD *)(v36 + 80) = v47;
    v48 = v67;
    sub_1BC62A4A8();
    v49 = sub_1BC62C6A4();
    v51 = v50;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC3B3154((uint64_t)v15);
    v52 = sub_1BC4A8584(v49, v51);

    v53 = v52;
LABEL_11:

    if (!v52)
      return v52;
    goto LABEL_14;
  }
  v59 = ((uint64_t (*)(uint64_t))v67)(v32);
  v61 = v60;
  v62 = v26;
  v52 = sub_1BC4AB2F4(v59, v61, a1, v68, v65);

  v53 = v52;
  if (v52)
LABEL_14:

  return v52;
}

id sub_1BC4AA920(void *a1, void *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(id), uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  double v29;
  double v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void);
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v66;
  char *v67;
  void (*v68)(id);
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(void);
  uint64_t v72;
  uint64_t v73;

  v68 = a7;
  v69 = a8;
  v70 = a4;
  v71 = a3;
  v72 = a9;
  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v66 - v14;
  v16 = sub_1BC62A760();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v66 - v21;
  if (!a1)
  {
    if (!a2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v55 = a2;
    v56 = a5();
    v53 = sub_1BC4AB2F4(v56, v57, a2, v72, a10);
    v54 = v53;

    if (!v53)
      return v53;
    goto LABEL_14;
  }
  if (!a2)
  {
    v58 = a1;
    v59 = v71();
    v53 = sub_1BC4AB2F4(v59, v60, a1, v72, a10);
    v54 = v53;

    if (!v53)
      return v53;
    goto LABEL_14;
  }
  v67 = v15;
  v23 = a2;
  v24 = a1;
  v25 = v23;
  v26 = v24;
  v27 = objc_msgSend(v25, sel_dateForUTC);
  sub_1BC62A724();

  v28 = objc_msgSend(v26, sel_dateForUTC);
  sub_1BC62A724();

  sub_1BC62A6E8();
  v30 = v29;
  v31 = *(void (**)(char *, uint64_t))(v17 + 8);
  v31(v20, v16);
  v32 = ((uint64_t (*)(char *, uint64_t))v31)(v22, v16);
  if (v30 <= COERCE_DOUBLE(1))
  {
    v61 = ((uint64_t (*)(uint64_t))v71)(v32);
    v63 = v62;
    v64 = v26;
    v53 = sub_1BC4AB2F4(v61, v63, a1, v72, a10);

    v54 = v53;
    if (!v53)
      return v53;
LABEL_14:

    return v53;
  }
  v33 = v25;
  swift_bridgeObjectRelease();
  v34 = sub_1BC62A820();
  v35 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v67, 1, 1, v34);
  if (qword_1EF428568 != -1)
    swift_once();
  v36 = (void *)qword_1EF42F6E0;
  v72 = *(_QWORD *)algn_1EF42F6E8;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1BC6395A0;
  v71 = v36;
  swift_bridgeObjectRetain();
  v38 = objc_msgSend(v26, sel_displayString);
  v39 = sub_1BC62C680();
  v40 = v26;
  v42 = v41;

  v43 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
  v44 = sub_1BC3644C0();
  *(_QWORD *)(v37 + 64) = v44;
  *(_QWORD *)(v37 + 32) = v39;
  *(_QWORD *)(v37 + 40) = v42;
  v45 = objc_msgSend(v33, sel_displayString);
  v46 = sub_1BC62C680();
  v48 = v47;

  *(_QWORD *)(v37 + 96) = v43;
  *(_QWORD *)(v37 + 104) = v44;
  *(_QWORD *)(v37 + 72) = v46;
  *(_QWORD *)(v37 + 80) = v48;
  v49 = v71;
  sub_1BC62A4A8();
  v50 = sub_1BC62C6A4();
  v52 = v51;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154(v35);
  v53 = sub_1BC4AB454(v50, v52, v73, v68);

  v54 = v53;
  if (v53)
    goto LABEL_14;
  return v53;
}

id sub_1BC4AADAC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  double v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  id v57;
  id v58;

  v55 = a3;
  v57 = a1;
  v58 = a2;
  v3 = sub_1BC62A760();
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v51 - v7;
  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v56 = (char *)&v51 - v10;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v11 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v12 = sub_1BC62A4A8();
  v14 = v13;
  swift_bridgeObjectRelease();

  v15 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v54 = sub_1BC62A4A8();
  v17 = v16;
  swift_bridgeObjectRelease();

  if (v57)
  {
    v18 = v57;
    swift_bridgeObjectRelease();
    if (v58)
    {
      v19 = v58;
      v20 = objc_msgSend(v19, sel_dateForUTC);
      sub_1BC62A724();

      v21 = objc_msgSend(v18, sel_dateForUTC);
      sub_1BC62A724();

      sub_1BC62A6E8();
      v23 = v22;
      v24 = v53;
      v25 = *(void (**)(char *, uint64_t))(v52 + 8);
      v25(v6, v53);
      v25(v8, v24);
      if (v23 > COERCE_DOUBLE(1))
      {
        swift_bridgeObjectRelease();
        v26 = objc_msgSend(v18, sel_displayString);
        v27 = sub_1BC62C680();
        v29 = v28;

        v30 = objc_msgSend(v19, sel_displayString);
        v31 = sub_1BC62C680();
        v17 = v32;

        v33 = (uint64_t)v56;
        goto LABEL_12;
      }
      v37 = objc_msgSend(v18, sel_displayString);
      v27 = sub_1BC62C680();
      v29 = v39;

    }
    else
    {
      v37 = objc_msgSend(v18, sel_displayString);
      v27 = sub_1BC62C680();
      v29 = v38;

    }
    v33 = (uint64_t)v56;
    v31 = v54;
    goto LABEL_12;
  }
  v27 = v12;
  v29 = v14;
  swift_bridgeObjectRelease();
  v33 = (uint64_t)v56;
  if (!v58)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v34 = v58;
  v35 = objc_msgSend(v34, sel_displayString);
  v31 = sub_1BC62C680();
  v17 = v36;

LABEL_12:
  v40 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v33, 1, 1, v40);
  if (qword_1EF428568 != -1)
    swift_once();
  v41 = (void *)qword_1EF42F6E0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1BC6395A0;
  v43 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v42 + 56) = MEMORY[0x1E0DEA968];
  v44 = sub_1BC3644C0();
  *(_QWORD *)(v42 + 32) = v27;
  *(_QWORD *)(v42 + 40) = v29;
  *(_QWORD *)(v42 + 96) = v43;
  *(_QWORD *)(v42 + 104) = v44;
  *(_QWORD *)(v42 + 64) = v44;
  *(_QWORD *)(v42 + 72) = v31;
  *(_QWORD *)(v42 + 80) = v17;
  v45 = v41;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v46 = sub_1BC62C6A4();
  v48 = v47;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154(v33);
  v49 = sub_1BC4AA0F8(v46, v48);

  return v49;
}

id sub_1BC4AB2F4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  char v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  if (!a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (a1 == a4 && a2 == a5)
  {

    swift_bridgeObjectRelease_n();
    return 0;
  }
  v6 = sub_1BC62D574();
  v7 = a3;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
LABEL_13:
    swift_bridgeObjectRelease();

    return 0;
  }
  v8 = objc_msgSend(v7, sel_displayString);
  v9 = sub_1BC62C680();
  v11 = v10;

  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1BC4AB588(v9, v11);

  v14 = v13;
  swift_bridgeObjectRelease_n();

  if (v13)
  return v13;
}

id sub_1BC4AB454(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(id))
{
  uint64_t v4;
  id v6;
  void *v7;
  void *v8;

  if (!a2)
    return 0;
  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  a4(objc_msgSend(v6, sel_setDisplayItemType_, 15));
  v7 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setTitle_, v7);

  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSubtitle_, v8);

  objc_msgSend(v6, sel_setSeparatorStyle_, 0);
  objc_msgSend(v6, sel_setSeparatorHidden_, 0);
  objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  return v6;
}

id sub_1BC4AB588(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;

  if (!a2)
    return 0;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v4);

  v5 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v5);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

void sub_1BC4AB6C4(void *a1)
{
  id v1;
  double v2;

  v1 = a1;
  objc_msgSend(v1, sel_displayScale);
  if (v2 > COERCE_DOUBLE(1))
    objc_msgSend(v1, sel_displayScale);

}

double UITraitCollection.displayPixel.getter()
{
  void *v0;
  double v1;
  double v2;
  double result;
  double v4;

  objc_msgSend(v0, sel_displayScale);
  v2 = v1;
  result = 1.0;
  if (v2 > COERCE_DOUBLE(1))
  {
    objc_msgSend(v0, sel_displayScale, 1.0);
    return 1.0 / v4;
  }
  return result;
}

void sub_1BC4AB784(uint64_t a1, void (*a2)(uint64_t *, _QWORD *), uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  id v13;
  id v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  int64_t v22;
  int64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  uint64_t v27;

  v5 = v4;
  v27 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    v24 = 0;
    v6 = 0;
    v7 = 0;
    v8 = sub_1BC62D2F8() | 0x8000000000000000;
  }
  else
  {
    v9 = -1 << *(_BYTE *)(a4 + 32);
    v6 = ~v9;
    v24 = a4 + 64;
    v10 = -v9;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v7 = v11 & *(_QWORD *)(a4 + 64);
    v8 = a4;
  }
  swift_bridgeObjectRetain();
  v12 = 0;
  v23 = (unint64_t)(v6 + 64) >> 6;
  if ((v8 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (sub_1BC62D364())
  {
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v13 = (id)v26[0];
    swift_unknownObjectRelease();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = (id)v26[0];
    swift_unknownObjectRelease();
    v15 = v12;
    v16 = v7;
    while (v13)
    {
      v26[0] = v13;
      v26[1] = v14;
      a2(&v27, v26);

      if (v5)
        break;
      v12 = v15;
      v7 = v16;
      if ((v8 & 0x8000000000000000) != 0)
        goto LABEL_8;
LABEL_11:
      if (v7)
      {
        v16 = (v7 - 1) & v7;
        v17 = __clz(__rbit64(v7)) | (v12 << 6);
        v15 = v12;
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          return;
        }
        if (v15 >= v23)
          break;
        v18 = *(_QWORD *)(v24 + 8 * v15);
        if (!v18)
        {
          v19 = v12 + 2;
          if (v12 + 2 >= v23)
            break;
          v18 = *(_QWORD *)(v24 + 8 * v19);
          if (v18)
            goto LABEL_22;
          v19 = v12 + 3;
          if (v12 + 3 >= v23)
            break;
          v18 = *(_QWORD *)(v24 + 8 * v19);
          if (v18)
            goto LABEL_22;
          v19 = v12 + 4;
          if (v12 + 4 >= v23)
            break;
          v18 = *(_QWORD *)(v24 + 8 * v19);
          if (v18)
          {
LABEL_22:
            v15 = v19;
          }
          else
          {
            v15 = v12 + 5;
            if (v12 + 5 >= v23)
              break;
            v18 = *(_QWORD *)(v24 + 8 * v15);
            if (!v18)
            {
              v22 = v12 + 6;
              while (v23 != v22)
              {
                v18 = *(_QWORD *)(v24 + 8 * v22++);
                if (v18)
                {
                  v15 = v22 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        v16 = (v18 - 1) & v18;
        v17 = __clz(__rbit64(v18)) + (v15 << 6);
      }
      v20 = 8 * v17;
      v21 = *(void **)(*(_QWORD *)(v8 + 56) + v20);
      v13 = *(id *)(*(_QWORD *)(v8 + 48) + v20);
      v14 = v21;
    }
  }
  sub_1BC3583F4();
}

unint64_t sub_1BC4ABAC0(unint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;

  if (*(_QWORD *)(a3 + 16))
  {
    v5 = (_QWORD *)result;
    v7 = *a2;
    v6 = (void *)a2[1];
    result = sub_1BC559478(a4);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * result);
      swift_bridgeObjectRetain();
      v10 = sub_1BC3B1318(v7, v9);
      result = swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
      {
        result = (unint64_t)objc_msgSend(v6, sel_integerValue);
        if (__OFADD__(*v5, result))
          __break(1u);
        else
          *v5 += result;
      }
    }
  }
  return result;
}

uint64_t Dictionary<>.totalCount.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  sub_1BC4AFD90(0, (unint64_t *)&qword_1EF42CA78, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  v3 = v2;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  v9 = *(_QWORD *)(a1 + 64);
  v27 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v13 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  v16 = 0;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v17 | (v15 << 6); ; i = __clz(__rbit64(v20)) + (v15 << 6))
  {
    v22 = *(_QWORD *)(a1 + 48);
    v23 = type metadata accessor for BrowseCategory();
    sub_1BC35EBE0(v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * i, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    *(_QWORD *)&v8[*(int *)(v3 + 48)] = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    result = sub_1BC4AFA48((uint64_t)v8, (uint64_t)v5);
    v24 = *(_QWORD *)&v5[*(int *)(v3 + 48)];
    v25 = __OFADD__(v16, v24);
    v16 += v24;
    if (v25)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    result = sub_1BC4AFAAC((uint64_t)v5);
    if (v12)
      goto LABEL_4;
LABEL_5:
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_28;
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v27 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v27 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v13)
          goto LABEL_26;
        v20 = *(_QWORD *)(v27 + 8 * v15);
        if (!v20)
        {
          v15 = v19 + 3;
          if (v19 + 3 >= v13)
            goto LABEL_26;
          v20 = *(_QWORD *)(v27 + 8 * v15);
          if (!v20)
          {
            v15 = v19 + 4;
            if (v19 + 4 >= v13)
              goto LABEL_26;
            v20 = *(_QWORD *)(v27 + 8 * v15);
            if (!v20)
              break;
          }
        }
      }
    }
LABEL_22:
    v12 = (v20 - 1) & v20;
  }
  v21 = v19 + 5;
  if (v21 >= v13)
  {
LABEL_26:
    swift_release();
    return v16;
  }
  v20 = *(_QWORD *)(v27 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v27 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_29:
  __break(1u);
  return result;
}

BOOL Dictionary<>.hasData.getter(uint64_t a1)
{
  return Dictionary<>.totalCount.getter(a1) > 0;
}

BOOL Dictionary<>.hasData(for:)(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;

  if (*(_QWORD *)(a2 + 16) && (v3 = sub_1BC559478(a1), (v4 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v3) > 0;
  else
    return 0;
}

uint64_t CategoryCount.category.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC35EBE0(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
}

uint64_t CategoryCount.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CategoryCount() + 20));
}

BOOL CategoryCount.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CategoryCount() + 20)) == 0;
}

uint64_t CategoryCount.hash(into:)()
{
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  type metadata accessor for CategoryCount();
  return sub_1BC62D67C();
}

uint64_t sub_1BC4ABEF8()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E756F63;
  else
    return 0x79726F6765746163;
}

uint64_t sub_1BC4ABF30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC4B051C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC4ABF54()
{
  sub_1BC4AFB44();
  return sub_1BC62D700();
}

uint64_t sub_1BC4ABF7C()
{
  sub_1BC4AFB44();
  return sub_1BC62D70C();
}

uint64_t CategoryCount.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BC4AFB88(0, &qword_1EF432828, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC4AFB44();
  sub_1BC62D6F4();
  v9[15] = 0;
  type metadata accessor for BrowseCategory();
  sub_1BC347F0C(&qword_1EF432838, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t)&protocol conformance descriptor for BrowseCategory);
  sub_1BC62D4FC();
  if (!v1)
  {
    type metadata accessor for CategoryCount();
    v9[14] = 1;
    sub_1BC62D4F0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CategoryCount.hashValue.getter()
{
  sub_1BC62D670();
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  type metadata accessor for CategoryCount();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t CategoryCount.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  char v25;

  v20 = a2;
  v21 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v21);
  v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4AFB88(0, &qword_1EF432840, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for CategoryCount();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC4AFB44();
  sub_1BC62D6DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v19 = v9;
  v12 = (uint64_t)v11;
  v25 = 0;
  sub_1BC347F0C(&qword_1EF432848, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t)&protocol conformance descriptor for BrowseCategory);
  v13 = (uint64_t)v22;
  v14 = v23;
  sub_1BC62D490();
  sub_1BC375724(v13, v12, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  v24 = 1;
  v15 = sub_1BC62D484();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  v16 = v20;
  *(_QWORD *)(v12 + *(int *)(v19 + 20)) = v15;
  sub_1BC35EBE0(v12, v16, (uint64_t (*)(_QWORD))type metadata accessor for CategoryCount);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_1BC348D78(v12, (uint64_t (*)(_QWORD))type metadata accessor for CategoryCount);
}

uint64_t sub_1BC4AC3D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CategoryCount.init(from:)(a1, a2);
}

uint64_t sub_1BC4AC3EC(_QWORD *a1)
{
  return CategoryCount.encode(to:)(a1);
}

uint64_t sub_1BC4AC400()
{
  sub_1BC62D670();
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4AC474()
{
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D67C();
}

uint64_t sub_1BC4AC4D0()
{
  sub_1BC62D670();
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

_QWORD *SortCategoryCounts(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  sub_1BC4AFD90(0, (unint64_t *)&qword_1EF42CA78, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  v25 = v0;
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - v5;
  v24 = type metadata accessor for CategoryCount();
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_bridgeObjectRetain();
  v11 = (_QWORD *)sub_1BC3D7298(v10);
  swift_bridgeObjectRelease();
  v26 = v11;
  sub_1BC4AC7C4(&v26);
  v12 = v26;
  v13 = v26[2];
  if (v13)
  {
    v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1BC3BDDBC(0, v13, 0);
    v14 = *(unsigned __int8 *)(v1 + 80);
    v22 = v12;
    v15 = (uint64_t)v12 + ((v14 + 32) & ~v14);
    v23 = *(_QWORD *)(v1 + 72);
    v16 = v26;
    do
    {
      sub_1BC4AFBE4(v15, (uint64_t)v6);
      v17 = *(int *)(v25 + 48);
      sub_1BC35EBE0((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      v18 = *(_QWORD *)&v6[v17];
      sub_1BC375724((uint64_t)v3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      *(_QWORD *)&v9[*(int *)(v24 + 20)] = v18;
      sub_1BC4AFAAC((uint64_t)v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC3BDDBC(0, v16[2] + 1, 1);
        v16 = v26;
      }
      v20 = v16[2];
      v19 = v16[3];
      if (v20 >= v19 >> 1)
      {
        sub_1BC3BDDBC(v19 > 1, v20 + 1, 1);
        v16 = v26;
      }
      v16[2] = v20 + 1;
      sub_1BC375724((uint64_t)v9, (uint64_t)v16+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v20, (uint64_t (*)(_QWORD))type metadata accessor for CategoryCount);
      v15 += v23;
      --v13;
    }
    while (v13);
    swift_release();
  }
  else
  {
    swift_release();
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v16;
}

void sub_1BC4AC7C4(_QWORD **a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD v6[2];

  sub_1BC4AFD90(0, (unint64_t *)&qword_1EF42CA78, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = (_QWORD *)sub_1BC5049E0(v4);
  v5 = v4[2];
  v6[0] = (char *)v4 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v6[1] = v5;
  sub_1BC4AC864(v6);
  *a1 = v4;
}

void sub_1BC4AC864(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  char v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  BOOL v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  char *v160;
  const char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  const char *v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;

  v3 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v3);
  v177 = (char *)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v178 = (uint64_t)&v151 - v6;
  sub_1BC4AFD90(0, (unint64_t *)&qword_1EF42CA78, v7);
  v9 = v8;
  v168 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v155 = (uint64_t)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v182 = (char *)&v151 - v12;
  MEMORY[0x1E0C80A78](v13);
  v188 = (char *)&v151 - v14;
  MEMORY[0x1E0C80A78](v15);
  v190 = (uint64_t)&v151 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v151 - v18;
  MEMORY[0x1E0C80A78](v20);
  v189 = (uint64_t)&v151 - v21;
  MEMORY[0x1E0C80A78](v22);
  v165 = (uint64_t)&v151 - v23;
  MEMORY[0x1E0C80A78](v24);
  v164 = (uint64_t)&v151 - v25;
  MEMORY[0x1E0C80A78](v26);
  v163 = (uint64_t)&v151 - v27;
  v28 = a1[1];
  v29 = sub_1BC62D520();
  if (v29 >= v28)
  {
    if (v28 < 0)
      goto LABEL_132;
    if (v28)
      sub_1BC4AE7B4(0, v28, 1, a1);
  }
  else
  {
    if (v28 >= 0)
      v30 = v28;
    else
      v30 = v28 + 1;
    if (v28 < -1)
    {
      sub_1BC62D388();
      __break(1u);
      JUMPOUT(0x1BC4AE76CLL);
    }
    v153 = v29;
    v174 = v1;
    if (v28 >= 2)
    {
      v31 = v30 >> 1;
      v32 = sub_1BC62C8CC();
      *(_QWORD *)(v32 + 16) = v31;
      v33 = *(unsigned __int8 *)(v168 + 80);
      v152 = v32;
      v166 = v32 + ((v33 + 32) & ~v33);
      goto LABEL_12;
    }
    v166 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80));
    v152 = MEMORY[0x1E0DEE9D8];
    if (v28 == 1)
    {
LABEL_12:
      v34 = 0;
      v35 = (char *)MEMORY[0x1E0DEE9D8];
      v172 = "alignWithAccountTitle";
      v167 = 0x80000001BC658830;
      v162 = "RPRETATION";
      v159 = 0x80000001BC65CFF0;
      v161 = "CLINICAL_DATA_SHARING_TITLE";
      v158 = 0x80000001BC658050;
      v160 = "S_SHOW_ALL_CATEGORIES_BUTTON";
      v157 = 0x80000001BC65D020;
      v173 = a1;
      v171 = v3;
      v175 = v9;
      v170 = v19;
      while (1)
      {
        v36 = v34 + 1;
        v156 = v35;
        v176 = v34;
        if (v34 + 1 >= v28)
        {
          v54 = v34 + 1;
        }
        else
        {
          v37 = v34;
          v179 = *a1;
          v38 = v179;
          v39 = *(_QWORD *)(v168 + 72);
          *(_QWORD *)&v186 = v39;
          v40 = v163;
          sub_1BC4AFBE4(v179 + v39 * v36, v163);
          v41 = v38 + v39 * v37;
          v42 = v164;
          sub_1BC4AFBE4(v41, v164);
          v43 = *(int *)(v9 + 48);
          v185 = v28;
          v44 = v165;
          sub_1BC35EBE0(v40, v165, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
          *(_QWORD *)(v44 + v43) = *(_QWORD *)(v40 + v43);
          BrowseCategory.localizedTitle.getter();
          *(_QWORD *)&v187 = v45;
          v181 = v46;
          sub_1BC348D78(v44, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
          v47 = *(int *)(v9 + 48);
          sub_1BC35EBE0(v42, v44, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
          *(_QWORD *)(v44 + v47) = *(_QWORD *)(v42 + v47);
          BrowseCategory.localizedTitle.getter();
          v49 = v48;
          v51 = v50;
          v52 = v44;
          v28 = v185;
          sub_1BC348D78(v52, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
          v191 = v187;
          v192 = v181;
          v193 = v49;
          v194 = v51;
          v183 = sub_1BC36E2AC();
          v184 = sub_1BC62D04C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BC4AFAAC(v42);
          sub_1BC4AFAAC(v40);
          v53 = v186;
          v54 = v176 + 2;
          if (v176 + 2 >= v28)
          {
            v9 = v175;
          }
          else
          {
            v181 = v186 * v36;
            v55 = v179;
            v180 = v186 * v54;
            while (1)
            {
              v169 = v54;
              LODWORD(v187) = v184 == -1;
              v56 = v163;
              sub_1BC4AFBE4(v55 + v180, v163);
              v57 = v164;
              sub_1BC4AFBE4(v55 + v181, v164);
              v58 = v175;
              v59 = *(int *)(v175 + 48);
              v60 = v165;
              sub_1BC35EBE0(v56, v165, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
              *(_QWORD *)(v60 + v59) = *(_QWORD *)(v56 + v59);
              BrowseCategory.localizedTitle.getter();
              v62 = v61;
              v64 = v63;
              sub_1BC348D78(v60, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
              v65 = *(int *)(v58 + 48);
              sub_1BC35EBE0(v57, v60, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
              *(_QWORD *)(v60 + v65) = *(_QWORD *)(v57 + v65);
              BrowseCategory.localizedTitle.getter();
              v67 = v66;
              v69 = v68;
              sub_1BC348D78(v60, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
              v191 = v62;
              v192 = v64;
              v193 = v67;
              v194 = v69;
              v70 = sub_1BC62D04C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1BC4AFAAC(v57);
              sub_1BC4AFAAC(v56);
              if ((_DWORD)v187 == (v70 != -1))
                break;
              v54 = v169 + 1;
              v28 = v185;
              v53 = v186;
              v55 += v186;
              if (v185 == v169 + 1)
              {
                v54 = v185;
                a1 = v173;
                v9 = v175;
                v19 = v170;
                goto LABEL_22;
              }
            }
            a1 = v173;
            v9 = v175;
            v19 = v170;
            v54 = v169;
            v28 = v185;
            v53 = v186;
          }
LABEL_22:
          if (v184 == -1)
          {
            if (v54 < v176)
              goto LABEL_135;
            if (v176 < v54)
            {
              v71 = 0;
              v72 = v53 * (v54 - 1);
              v73 = v54 * v53;
              v74 = v176;
              v75 = v176 * v53;
              do
              {
                if (v74 != v54 + v71 - 1)
                {
                  v77 = v54;
                  v78 = v179;
                  if (!v179)
                  {
                    __break(1u);
LABEL_138:
                    __break(1u);
                    JUMPOUT(0x1BC4AE4ECLL);
                  }
                  v79 = v179 + v75;
                  *(_QWORD *)&v187 = v179 + v72;
                  sub_1BC4AFA48(v179 + v75, v155);
                  if (v75 < v72 || v79 >= v78 + v73)
                  {
                    v76 = v187;
                    swift_arrayInitWithTakeFrontToBack();
                  }
                  else
                  {
                    v76 = v187;
                    if (v75 != v72)
                      swift_arrayInitWithTakeBackToFront();
                  }
                  sub_1BC4AFA48(v155, v76);
                  v54 = v77;
                  v53 = v186;
                }
                ++v74;
                --v71;
                v72 -= v53;
                v73 -= v53;
                v75 += v53;
              }
              while (v74 < v54 + v71);
              v9 = v175;
              v19 = v170;
              v28 = v185;
            }
          }
        }
        if (v54 < v28)
        {
          if (__OFSUB__(v54, v176))
            goto LABEL_131;
          if (v54 - v176 < v153)
          {
            if (__OFADD__(v176, v153))
              goto LABEL_133;
            if (v176 + v153 >= v28)
              v80 = v28;
            else
              v80 = v176 + v153;
            if (v80 < v176)
            {
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
              JUMPOUT(0x1BC4AE4D4);
            }
            if (v54 != v80)
            {
              v181 = *(_QWORD *)(v168 + 72);
              v154 = v80;
              v169 = v54;
              v81 = v54;
              v82 = v181;
              v83 = v54 - 1;
              v84 = *a1;
              v184 = v181 * v81;
              v85 = v189;
              sub_1BC4AFBE4(v84 + v181 * v81, v189);
              v185 = v83;
              v183 = v82 * v83;
              sub_1BC4AFBE4(v84 + v82 * v83, (uint64_t)v19);
              v86 = *(int *)(v9 + 48);
              v87 = v190;
              sub_1BC35EBE0(v85, v190, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
              *(_QWORD *)(v87 + v86) = *(_QWORD *)(v85 + v86);
              sub_1BC35EBE0(v87, v178, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
              v88 = (char *)&loc_1BC4AD1DC + dword_1BC4AE76C[swift_getEnumCaseMultiPayload()];
              __asm { BR              X9 }
            }
          }
        }
        if (v54 < v176)
          goto LABEL_130;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v169 = v54;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          v35 = v156;
        else
          v35 = sub_1BC503AB4(0, *((_QWORD *)v156 + 2) + 1, 1, v156);
        v91 = *((_QWORD *)v35 + 2);
        v90 = *((_QWORD *)v35 + 3);
        v92 = v91 + 1;
        if (v91 >= v90 >> 1)
          v35 = sub_1BC503AB4((char *)(v90 > 1), v91 + 1, 1, v35);
        *((_QWORD *)v35 + 2) = v92;
        v93 = v35 + 32;
        v94 = &v35[16 * v91 + 32];
        v95 = v169;
        *(_QWORD *)v94 = v176;
        *((_QWORD *)v94 + 1) = v95;
        if (v91)
          break;
        v92 = 1;
LABEL_94:
        v28 = a1[1];
        v34 = v169;
        if (v169 >= v28)
          goto LABEL_98;
      }
      while (1)
      {
        v96 = v92 - 1;
        if (v92 >= 4)
        {
          v101 = &v93[16 * v92];
          v102 = *((_QWORD *)v101 - 8);
          v103 = *((_QWORD *)v101 - 7);
          v107 = __OFSUB__(v103, v102);
          v104 = v103 - v102;
          if (v107)
            goto LABEL_115;
          v106 = *((_QWORD *)v101 - 6);
          v105 = *((_QWORD *)v101 - 5);
          v107 = __OFSUB__(v105, v106);
          v99 = v105 - v106;
          v100 = v107;
          if (v107)
            goto LABEL_116;
          v108 = v92 - 2;
          v109 = &v93[16 * v92 - 32];
          v111 = *(_QWORD *)v109;
          v110 = *((_QWORD *)v109 + 1);
          v107 = __OFSUB__(v110, v111);
          v112 = v110 - v111;
          if (v107)
            goto LABEL_118;
          v107 = __OFADD__(v99, v112);
          v113 = v99 + v112;
          if (v107)
            goto LABEL_121;
          if (v113 >= v104)
          {
            v131 = &v93[16 * v96];
            v133 = *(_QWORD *)v131;
            v132 = *((_QWORD *)v131 + 1);
            v107 = __OFSUB__(v132, v133);
            v134 = v132 - v133;
            if (v107)
              goto LABEL_125;
            v124 = v99 < v134;
            goto LABEL_83;
          }
        }
        else
        {
          if (v92 != 3)
          {
            v125 = *((_QWORD *)v35 + 4);
            v126 = *((_QWORD *)v35 + 5);
            v107 = __OFSUB__(v126, v125);
            v118 = v126 - v125;
            v119 = v107;
            goto LABEL_77;
          }
          v98 = *((_QWORD *)v35 + 4);
          v97 = *((_QWORD *)v35 + 5);
          v107 = __OFSUB__(v97, v98);
          v99 = v97 - v98;
          v100 = v107;
        }
        if ((v100 & 1) != 0)
          goto LABEL_117;
        v108 = v92 - 2;
        v114 = &v93[16 * v92 - 32];
        v116 = *(_QWORD *)v114;
        v115 = *((_QWORD *)v114 + 1);
        v117 = __OFSUB__(v115, v116);
        v118 = v115 - v116;
        v119 = v117;
        if (v117)
          goto LABEL_120;
        v120 = &v93[16 * v96];
        v122 = *(_QWORD *)v120;
        v121 = *((_QWORD *)v120 + 1);
        v107 = __OFSUB__(v121, v122);
        v123 = v121 - v122;
        if (v107)
          goto LABEL_123;
        if (__OFADD__(v118, v123))
          goto LABEL_124;
        if (v118 + v123 >= v99)
        {
          v124 = v99 < v123;
LABEL_83:
          if (v124)
            v96 = v108;
          goto LABEL_85;
        }
LABEL_77:
        if ((v119 & 1) != 0)
          goto LABEL_119;
        v127 = &v93[16 * v96];
        v129 = *(_QWORD *)v127;
        v128 = *((_QWORD *)v127 + 1);
        v107 = __OFSUB__(v128, v129);
        v130 = v128 - v129;
        if (v107)
          goto LABEL_122;
        if (v130 < v118)
          goto LABEL_94;
LABEL_85:
        v135 = v96 - 1;
        if (v96 - 1 >= v92)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!*a1)
        {
          __break(1u);
          JUMPOUT(0x1BC4AE4DCLL);
        }
        v136 = v35;
        v137 = &v93[16 * v135];
        v138 = *(_QWORD *)v137;
        v139 = &v93[16 * v96];
        v140 = *((_QWORD *)v139 + 1);
        v141 = v174;
        sub_1BC4AEAB8(*a1 + *(_QWORD *)(v168 + 72) * *(_QWORD *)v137, *a1 + *(_QWORD *)(v168 + 72) * *(_QWORD *)v139, *a1 + *(_QWORD *)(v168 + 72) * v140, v166);
        v174 = v141;
        if (v141)
          goto LABEL_109;
        if (v140 < v138)
          goto LABEL_112;
        if (v96 > *((_QWORD *)v136 + 2))
          goto LABEL_113;
        *(_QWORD *)v137 = v138;
        *(_QWORD *)&v93[16 * v135 + 8] = v140;
        v142 = *((_QWORD *)v136 + 2);
        if (v96 >= v142)
          goto LABEL_114;
        v92 = v142 - 1;
        memmove(&v93[16 * v96], v139 + 16, 16 * (v142 - 1 - v96));
        v35 = v136;
        *((_QWORD *)v136 + 2) = v142 - 1;
        v9 = v175;
        v19 = v170;
        if (v142 <= 2)
          goto LABEL_94;
      }
    }
    v92 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v35 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_98:
    if (v92 >= 2)
    {
      v143 = *a1;
      do
      {
        v144 = v92 - 2;
        if (v92 < 2)
          goto LABEL_126;
        if (!v143)
          goto LABEL_138;
        v145 = v35;
        v146 = *(_QWORD *)&v35[16 * v144 + 32];
        v147 = *(_QWORD *)&v35[16 * v92 + 24];
        v148 = v174;
        sub_1BC4AEAB8(v143 + *(_QWORD *)(v168 + 72) * v146, v143 + *(_QWORD *)(v168 + 72) * *(_QWORD *)&v35[16 * v92 + 16], v143 + *(_QWORD *)(v168 + 72) * v147, v166);
        v174 = v148;
        if (v148)
          break;
        if (v147 < v146)
          goto LABEL_127;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v145 = sub_1BC504414((uint64_t)v145);
        if (v144 >= *((_QWORD *)v145 + 2))
          goto LABEL_128;
        v149 = &v145[16 * v144 + 32];
        *(_QWORD *)v149 = v146;
        *((_QWORD *)v149 + 1) = v147;
        v150 = *((_QWORD *)v145 + 2);
        if (v92 > v150)
          goto LABEL_129;
        memmove(&v145[16 * v92 + 16], &v145[16 * v92 + 32], 16 * (v150 - v92));
        v35 = v145;
        *((_QWORD *)v145 + 2) = v150 - 1;
        v92 = v150 - 1;
      }
      while (v150 > 2);
    }
LABEL_109:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v152 + 16) = 0;
    swift_bridgeObjectRelease();
  }
}

void sub_1BC4AE7B4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a1;
  sub_1BC4AFD90(0, (unint64_t *)&qword_1EF42CA78, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  v49 = v7;
  MEMORY[0x1E0C80A78](v7);
  v50 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v43 = (uint64_t)&v38 - v10;
  MEMORY[0x1E0C80A78](v11);
  v44 = (char *)&v38 - v12;
  MEMORY[0x1E0C80A78](v13);
  v42 = (uint64_t)&v38 - v15;
  v48 = a3;
  v39 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v14 + 72);
    v17 = v16 * (v48 - 1);
    v45 = v16;
    v18 = v16 * v48;
    v41 = a4;
    v19 = (uint64_t)v44;
LABEL_5:
    v20 = 0;
    v21 = v40;
    v46 = v18;
    v47 = v17;
    while (1)
    {
      v22 = *a4;
      v52 = v18 + v20;
      v23 = v42;
      sub_1BC4AFBE4(v18 + v20 + v22, v42);
      v51 = v17 + v20;
      sub_1BC4AFBE4(v17 + v20 + v22, v19);
      v24 = v49;
      v25 = *(int *)(v49 + 48);
      v26 = v43;
      sub_1BC35EBE0(v23, v43, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      *(_QWORD *)(v26 + v25) = *(_QWORD *)(v23 + v25);
      BrowseCategory.localizedTitle.getter();
      v57 = v27;
      v29 = v28;
      sub_1BC348D78(v26, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      v30 = *(int *)(v24 + 48);
      sub_1BC35EBE0(v19, v26, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      *(_QWORD *)(v26 + v30) = *(_QWORD *)(v19 + v30);
      BrowseCategory.localizedTitle.getter();
      v32 = v31;
      v34 = v33;
      sub_1BC348D78(v26, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      v55 = v57;
      v56 = v29;
      v53 = v32;
      v54 = v34;
      v17 = v47;
      sub_1BC36E2AC();
      v35 = sub_1BC62D04C();
      a4 = v41;
      swift_bridgeObjectRelease();
      v18 = v46;
      swift_bridgeObjectRelease();
      sub_1BC4AFAAC(v19);
      sub_1BC4AFAAC(v23);
      if (v35 != -1)
      {
LABEL_4:
        v17 += v45;
        v18 += v45;
        if (++v48 == v39)
          return;
        goto LABEL_5;
      }
      v36 = *a4;
      if (!*a4)
        break;
      v37 = v36 + v17 + v20;
      sub_1BC4AFA48(v36 + v18 + v20, v50);
      swift_arrayInitWithTakeFrontToBack();
      sub_1BC4AFA48(v50, v37);
      v20 -= v45;
      if (v48 == ++v21)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BC4AEAB8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t result;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;

  sub_1BC4AFD90(0, (unint64_t *)&qword_1EF42CA78, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  v75 = v8;
  MEMORY[0x1E0C80A78](v8);
  v71 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v73 = (uint64_t)&v65 - v11;
  MEMORY[0x1E0C80A78](v12);
  v72 = (uint64_t)&v65 - v13;
  v15 = *(_QWORD *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v15 == -1)
    goto LABEL_61;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1)
    goto LABEL_62;
  v17 = (uint64_t)(a2 - a1) / v15;
  v82 = a1;
  v81 = a4;
  v18 = v16 / v15;
  if (v17 >= v16 / v15)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      v20 = v18 * v15;
      if (a4 < a2 || a2 + v20 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v42 = a4 + v20;
      v80 = a4 + v20;
      v82 = a2;
      if (v20 >= 1 && a1 < a2)
      {
        v44 = -v15;
        v67 = a1;
        v68 = a4;
        v66 = -v15;
        v45 = v71;
        v46 = v72;
        do
        {
          v74 = a3;
          v69 = a2;
          v70 = a3 + v44;
          sub_1BC4AFBE4(v42 + v44, v46);
          v47 = a2 + v44;
          v48 = v73;
          sub_1BC4AFBE4(a2 + v44, v73);
          v49 = v75;
          v50 = *(int *)(v75 + 48);
          sub_1BC35EBE0(v46, v45, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
          *(_QWORD *)(v45 + v50) = *(_QWORD *)(v46 + v50);
          BrowseCategory.localizedTitle.getter();
          v52 = v51;
          v54 = v53;
          sub_1BC348D78(v45, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
          v55 = *(int *)(v49 + 48);
          sub_1BC35EBE0(v48, v45, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
          *(_QWORD *)(v45 + v55) = *(_QWORD *)(v48 + v55);
          BrowseCategory.localizedTitle.getter();
          v57 = v56;
          v59 = v58;
          sub_1BC348D78(v45, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
          v78 = v52;
          v79 = v54;
          v76 = v57;
          v77 = v59;
          sub_1BC36E2AC();
          v60 = sub_1BC62D04C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BC4AFAAC(v48);
          sub_1BC4AFAAC(v46);
          if (v60 == -1)
          {
            v44 = v66;
            a3 = v70;
            if (v74 < v69 || v70 >= v69)
            {
              swift_arrayInitWithTakeFrontToBack();
              v62 = v67;
              v63 = v68;
            }
            else
            {
              v62 = v67;
              v63 = v68;
              if (v74 != v69)
                swift_arrayInitWithTakeBackToFront();
            }
            v82 += v44;
          }
          else
          {
            v47 = v69;
            a3 = v70;
            v61 = v80;
            v80 += v66;
            v44 = v66;
            if (v74 < v61 || v70 >= v61)
            {
              swift_arrayInitWithTakeFrontToBack();
              v62 = v67;
              v63 = v68;
            }
            else
            {
              v62 = v67;
              v63 = v68;
              if (v74 != v61)
                swift_arrayInitWithTakeBackToFront();
            }
          }
          v42 = v80;
          if (v80 <= v63)
            break;
          a2 = v47;
        }
        while (v47 > v62);
      }
      goto LABEL_59;
    }
  }
  else if ((v17 & 0x8000000000000000) == 0)
  {
    v19 = v17 * v15;
    if (a4 < a1 || a1 + v19 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v70 = a4 + v19;
    v80 = a4 + v19;
    if (v19 >= 1 && a2 < a3)
    {
      v74 = a3;
      v69 = v15;
      v22 = v73;
      do
      {
        v23 = v72;
        sub_1BC4AFBE4(a2, v72);
        sub_1BC4AFBE4(a4, v22);
        v24 = v75;
        v25 = *(int *)(v75 + 48);
        v26 = v71;
        sub_1BC35EBE0(v23, v71, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
        *(_QWORD *)(v26 + v25) = *(_QWORD *)(v23 + v25);
        BrowseCategory.localizedTitle.getter();
        v28 = v27;
        v30 = v29;
        sub_1BC348D78(v26, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
        v31 = *(int *)(v24 + 48);
        sub_1BC35EBE0(v22, v26, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
        *(_QWORD *)(v26 + v31) = *(_QWORD *)(v22 + v31);
        BrowseCategory.localizedTitle.getter();
        v33 = v32;
        v35 = v34;
        sub_1BC348D78(v26, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
        v78 = v28;
        v79 = v30;
        v76 = v33;
        v77 = v35;
        sub_1BC36E2AC();
        v36 = sub_1BC62D04C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BC4AFAAC(v22);
        sub_1BC4AFAAC(v23);
        v37 = v82;
        if (v36 == -1)
        {
          v38 = v69;
          v41 = a2 + v69;
          if (v82 < a2 || v82 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack();
            v40 = v74;
          }
          else
          {
            v40 = v74;
            if (v82 == a2)
              v37 = a2;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v38 = v69;
          v39 = v81 + v69;
          if (v82 < v81 || v82 >= v39)
          {
            swift_arrayInitWithTakeFrontToBack();
            v40 = v74;
          }
          else
          {
            v40 = v74;
            if (v82 != v81)
              swift_arrayInitWithTakeBackToFront();
          }
          v81 = v39;
          v41 = a2;
        }
        v82 = v37 + v38;
        a4 = v81;
        if (v81 >= v70)
          break;
        a2 = v41;
      }
      while (v41 < v40);
    }
LABEL_59:
    sub_1BC50423C(&v82, &v81, (uint64_t *)&v80);
    return 1;
  }
LABEL_63:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

void sub_1BC4AF100(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  void *v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)();
  uint64_t (*v39)();
  uint64_t v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t v63;
  id v64;

  v7 = type metadata accessor for BrowseCategory();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3CD4D4();
  v12 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v55 = v3;
  v17 = *(int *)(v12 + 48);
  v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v53[1] = v7;
  v54 = v18;
  v19 = a1 + v18;
  v60 = *(_QWORD *)(v13 + 72);
  v57 = a1;
  swift_bridgeObjectRetain();
  sub_1BC35EBE0(v19, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC3CD4D4);
  sub_1BC375724((uint64_t)v15, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  v59 = v17;
  v56 = *(_QWORD *)&v15[v17];
  v61 = a3;
  v20 = *a3;
  v22 = sub_1BC559478((uint64_t)v10);
  v23 = *(_QWORD *)(v20 + 16);
  v24 = (v21 & 1) == 0;
  v25 = v23 + v24;
  if (__OFADD__(v23, v24))
    goto LABEL_24;
  v26 = v21;
  if (*(_QWORD *)(v20 + 24) >= v25)
  {
    if ((a2 & 1) != 0)
    {
      if ((v21 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1BC5A64C4();
      if ((v26 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v31 = (_QWORD *)*v61;
    *(_QWORD *)(*v61 + 8 * (v22 >> 6) + 64) |= 1 << v22;
    v32 = v31[6];
    v58 = *(_QWORD *)(v8 + 72);
    sub_1BC375724((uint64_t)v10, v32 + v58 * v22, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    *(_QWORD *)(v31[7] + 8 * v22) = v56;
    v33 = v31[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v31[2] = v35;
    v36 = v16 - 1;
    if (v16 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v37 = v57 + v60 + v54;
    v38 = type metadata accessor for BrowseCategory;
    while (1)
    {
      sub_1BC35EBE0(v37, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC3CD4D4);
      v39 = v38;
      sub_1BC375724((uint64_t)v15, (uint64_t)v10, (uint64_t (*)(_QWORD))v38);
      v40 = *(_QWORD *)&v15[v59];
      v41 = (_QWORD *)*v61;
      v43 = sub_1BC559478((uint64_t)v10);
      v44 = v41[2];
      v45 = (v42 & 1) == 0;
      v46 = v44 + v45;
      if (__OFADD__(v44, v45))
        break;
      v47 = v42;
      if (v41[3] < v46)
      {
        sub_1BC3C5298(v46, 1);
        v48 = sub_1BC559478((uint64_t)v10);
        if ((v47 & 1) != (v49 & 1))
          goto LABEL_26;
        v43 = v48;
      }
      if ((v47 & 1) != 0)
        goto LABEL_10;
      v50 = (_QWORD *)*v61;
      *(_QWORD *)(*v61 + 8 * (v43 >> 6) + 64) |= 1 << v43;
      v38 = v39;
      sub_1BC375724((uint64_t)v10, v50[6] + v58 * v43, (uint64_t (*)(_QWORD))v39);
      *(_QWORD *)(v50[7] + 8 * v43) = v40;
      v51 = v50[2];
      v34 = __OFADD__(v51, 1);
      v52 = v51 + 1;
      if (v34)
        goto LABEL_25;
      v50[2] = v52;
      v37 += v60;
      if (!--v36)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1BC3C5298(v25, a2 & 1);
  v27 = sub_1BC559478((uint64_t)v10);
  if ((v26 & 1) == (v28 & 1))
  {
    v22 = v27;
    if ((v26 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v29 = (void *)swift_allocError();
    swift_willThrow();
    v64 = v29;
    v30 = v29;
    sub_1BC35E44C();
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1BC348D78((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1BC62D5EC();
  __break(1u);
LABEL_27:
  v62 = 0;
  v63 = 0xE000000000000000;
  sub_1BC62D1D8();
  sub_1BC62C764();
  sub_1BC62D2D4();
  sub_1BC62C764();
  sub_1BC62D394();
  __break(1u);
}

BOOL _s15HealthRecordsUI13CategoryCountV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BOOL8 result;
  uint64_t v12;

  BrowseCategory.rawValue.getter();
  v5 = v4;
  v7 = v6;
  BrowseCategory.rawValue.getter();
  if (v5 == v9 && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v10 & 1) == 0)
      return result;
  }
  v12 = type metadata accessor for CategoryCount();
  return *(_QWORD *)(a1 + *(int *)(v12 + 20)) == *(_QWORD *)(a2 + *(int *)(v12 + 20));
}

uint64_t sub_1BC4AF648(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = v3;
  v41 = a2;
  v42 = a3;
  v6 = type metadata accessor for BrowseCategory();
  v40 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v39 = (uint64_t)&v33 - v9;
  sub_1BC3CD4D4();
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  MEMORY[0x1E0C80A78](v10);
  v44 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (!v12)
    return v13;
  v45 = MEMORY[0x1E0DEE9D8];
  sub_1BC3BDC38(0, v12, 0);
  result = sub_1BC56B4AC(a1);
  v15 = result;
  v17 = v16;
  v19 = v18 & 1;
  v34 = a1;
  v35 = a1 + 56;
  v20 = (uint64_t)v36;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(v35 + (((unint64_t)v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v17)
      goto LABEL_16;
    v21 = v39;
    sub_1BC35EBE0(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v40 + 72) * v15, v39, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v22 = sub_1BC375724(v21, v20, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    MEMORY[0x1E0C80A78](v22);
    v23 = v41;
    *(&v33 - 2) = v42;
    *(&v33 - 1) = v20;
    v24 = v4;
    sub_1BC4AB784(0, (void (*)(uint64_t *, _QWORD *))sub_1BC4B0604, (uint64_t)(&v33 - 4), v23);
    v26 = v25;
    v43 = v24;
    v27 = *(int *)(v38 + 48);
    v28 = v44;
    sub_1BC35EBE0(v20, v44, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    *(_QWORD *)(v28 + v27) = v26;
    sub_1BC348D78(v20, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v13 = v45;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BC3BDC38(0, *(_QWORD *)(v13 + 16) + 1, 1);
      v13 = v45;
    }
    v30 = *(_QWORD *)(v13 + 16);
    v29 = *(_QWORD *)(v13 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_1BC3BDC38(v29 > 1, v30 + 1, 1);
      v13 = v45;
    }
    *(_QWORD *)(v13 + 16) = v30 + 1;
    sub_1BC375724(v44, v13+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v30, (uint64_t (*)(_QWORD))sub_1BC3CD4D4);
    a1 = v34;
    result = sub_1BC5822C4(v15, v17, v19 & 1, v34);
    v15 = result;
    v17 = v31;
    v19 = v32 & 1;
    --v12;
    v4 = v43;
    if (!v12)
    {
      sub_1BC3583DC(result, v31, v32 & 1);
      return v13;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t _sSD15HealthRecordsUIAA14BrowseCategoryORszSiRs_rlE_019queryDescriptionsByE0SDyACSiGSDySo17HKQueryDescriptorCSo8NSNumberCG_SDyACSayAGGGtcfC_0(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  swift_bridgeObjectRetain();
  v4 = sub_1BC58AF98(a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1BC4AF648(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v5 + 16))
  {
    sub_1BC35F470();
    v6 = sub_1BC62D400();
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9E0];
  }
  v9 = v6;
  v7 = swift_bridgeObjectRetain();
  sub_1BC4AF100(v7, 1, &v9);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1BC4AFA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC4AFD90(0, (unint64_t *)&qword_1EF42CA78, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC4AFAAC(uint64_t a1)
{
  uint64_t v2;

  sub_1BC4AFD90(0, (unint64_t *)&qword_1EF42CA78, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CategoryCount()
{
  uint64_t result;

  result = qword_1ED6A32E0;
  if (!qword_1ED6A32E0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BC4AFB44()
{
  unint64_t result;

  result = qword_1EF432830;
  if (!qword_1EF432830)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6433D8, &type metadata for CategoryCount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF432830);
  }
  return result;
}

void sub_1BC4AFB88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC4AFB44();
    v7 = a3(a1, &type metadata for CategoryCount.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC4AFBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC4AFD90(0, (unint64_t *)&qword_1EF42CA78, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC4AFC48()
{
  return sub_1BC347F0C(&qword_1EF432850, (uint64_t (*)(uint64_t))type metadata accessor for CategoryCount, (uint64_t)&protocol conformance descriptor for CategoryCount);
}

uint64_t *initializeBufferWithCopyOfBuffer for CategoryCount(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for BrowseCategory();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_1BC62A7B4();
      v9 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      sub_1BC4AFD90(0, (unint64_t *)&qword_1EF436640, v9);
      v11 = *(int *)(v10 + 48);
      v12 = (uint64_t *)((char *)a1 + v11);
      v13 = (uint64_t *)((char *)a2 + v11);
      v14 = v13[1];
      *v12 = *v13;
      v12[1] = v14;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

void sub_1BC4AFD90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t destroy for CategoryCount(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t);

  type metadata accessor for BrowseCategory();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_1BC62A7B4();
    v4 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    sub_1BC4AFD90(0, (unint64_t *)&qword_1EF436640, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for CategoryCount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = type metadata accessor for BrowseCategory();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1BC62A7B4();
    v8 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    sub_1BC4AFD90(0, (unint64_t *)&qword_1EF436640, v8);
    v10 = *(int *)(v9 + 48);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithCopy for CategoryCount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  if (a1 != a2)
  {
    sub_1BC348D78((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v6 = type metadata accessor for BrowseCategory();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1BC62A7B4();
      v8 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      sub_1BC4AFD90(0, (unint64_t *)&qword_1EF436640, v8);
      v10 = *(int *)(v9 + 48);
      v11 = &a1[v10];
      v12 = &a2[v10];
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *initializeWithTake for CategoryCount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  v6 = type metadata accessor for BrowseCategory();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1BC62A7B4();
    v8 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    sub_1BC4AFD90(0, (unint64_t *)&qword_1EF436640, v8);
    *(_OWORD *)&a1[*(int *)(v9 + 48)] = *(_OWORD *)&a2[*(int *)(v9 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for CategoryCount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1BC348D78((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    v6 = type metadata accessor for BrowseCategory();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1BC62A7B4();
      v8 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      sub_1BC4AFD90(0, (unint64_t *)&qword_1EF436640, v8);
      *(_OWORD *)&a1[*(int *)(v9 + 48)] = *(_OWORD *)&a2[*(int *)(v9 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryCount()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC4B027C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BrowseCategory();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CategoryCount()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC4B02C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BrowseCategory();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BC4B0304()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BrowseCategory();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CategoryCount.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC4B03C4 + 4 * byte_1BC643231[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC4B03F8 + 4 * byte_1BC64322C[v4]))();
}

uint64_t sub_1BC4B03F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4B0400(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC4B0408);
  return result;
}

uint64_t sub_1BC4B0414(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4B041CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC4B0420(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4B0428(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CategoryCount.CodingKeys()
{
  return &type metadata for CategoryCount.CodingKeys;
}

unint64_t sub_1BC4B0448()
{
  unint64_t result;

  result = qword_1EF432858;
  if (!qword_1EF432858)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6433B0, &type metadata for CategoryCount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF432858);
  }
  return result;
}

unint64_t sub_1BC4B0490()
{
  unint64_t result;

  result = qword_1EF432860;
  if (!qword_1EF432860)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC643320, &type metadata for CategoryCount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF432860);
  }
  return result;
}

unint64_t sub_1BC4B04D8()
{
  unint64_t result;

  result = qword_1EF432868;
  if (!qword_1EF432868)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC643348, &type metadata for CategoryCount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF432868);
  }
  return result;
}

uint64_t sub_1BC4B051C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79726F6765746163 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BC4B0604(unint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1BC4ABAC0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void UserDomainConceptFeedItemViewData.init(displayName:secondaryText:icon:tintColor:valueInRange:valueDisplay:unitDisplay:sortHint:editing:pinned:expanded:showNoValue:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15, char a16, char a17, char a18)
{
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = a5;
  v26 = a6;
  v27 = a7;
  if (a12)
  {
    a11 = sub_1BC62C710();
    v29 = v28;
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = v25;
  v31 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  *(_QWORD *)(a9 + 80) = v29;
  *(_QWORD *)(a9 + 88) = a13;
  *(_BYTE *)(a9 + 96) = a14 & 1;
  *(_BYTE *)(a9 + 97) = a15 & 1;
  *(_BYTE *)(a9 + 98) = a16 & 1;
  *(_BYTE *)(a9 + 99) = a17 & 1;
  *(_BYTE *)(a9 + 100) = a18 & 1;
}

uint64_t UserDomainConceptFeedItemViewData.valueUnitDisplayString.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = v0[9];
  v2 = v0[10];
  if (v0[8])
  {
    v3 = v0[7];
    if (v2)
    {
      v5 = v0[7];
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      return v5;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
  }
  else if (v2)
  {
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    return v0[9];
  }
  return v3;
}

uint64_t UserDomainConceptFeedItemViewData.displayName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserDomainConceptFeedItemViewData.displayName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.displayName.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.secondaryText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserDomainConceptFeedItemViewData.secondaryText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.secondaryText.modify())()
{
  return nullsub_1;
}

void *UserDomainConceptFeedItemViewData.icon.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void UserDomainConceptFeedItemViewData.icon.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t (*UserDomainConceptFeedItemViewData.icon.modify())()
{
  return nullsub_1;
}

void *UserDomainConceptFeedItemViewData.tintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

void UserDomainConceptFeedItemViewData.tintColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
}

uint64_t (*UserDomainConceptFeedItemViewData.tintColor.modify())()
{
  return nullsub_1;
}

void *UserDomainConceptFeedItemViewData.valueInRange.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

void UserDomainConceptFeedItemViewData.valueInRange.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
}

uint64_t (*UserDomainConceptFeedItemViewData.valueInRange.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.valueDisplay.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserDomainConceptFeedItemViewData.valueDisplay.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.valueDisplay.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.unitDisplay.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserDomainConceptFeedItemViewData.unitDisplay.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.unitDisplay.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.sortHint.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t UserDomainConceptFeedItemViewData.sortHint.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = result;
  *(_BYTE *)(v2 + 96) = a2 & 1;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.sortHint.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.editing.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t UserDomainConceptFeedItemViewData.editing.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 97) = result;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.editing.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.pinned.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 98);
}

uint64_t UserDomainConceptFeedItemViewData.pinned.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 98) = result;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.pinned.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.expanded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 99);
}

uint64_t UserDomainConceptFeedItemViewData.expanded.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 99) = result;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.expanded.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.showNoValue.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 100);
}

uint64_t UserDomainConceptFeedItemViewData.showNoValue.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 100) = result;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.showNoValue.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.style.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v4 = *v1;
  v3 = v1[1];
  v5 = (void *)v1[4];
  if (v5)
    v6 = (id)v1[4];
  else
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_init);
  *a1 = v6;
  a1[1] = v4;
  a1[2] = v3;
  v7 = *MEMORY[0x1E0D2B2C8];
  v8 = sub_1BC62B3FC();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a1, v7, v8);
  v9 = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC4B0CF4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v4 = *v1;
  v3 = v1[1];
  v5 = (void *)v1[4];
  if (v5)
    v6 = (id)v1[4];
  else
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_init);
  *a1 = v6;
  a1[1] = v4;
  a1[2] = v3;
  v7 = *MEMORY[0x1E0D2B2C8];
  v8 = sub_1BC62B3FC();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a1, v7, v8);
  v9 = v5;
  return swift_bridgeObjectRetain();
}

void *sub_1BC4B0D88()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void *sub_1BC4B0DAC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

uint64_t sub_1BC4B0DD0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t sub_1BC4B0DD8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 98);
}

uint64_t sub_1BC4B0DE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC4B0E0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC4B0E38()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 100);
}

uint64_t _s15HealthRecordsUI33UserDomainConceptFeedItemViewDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  uint64_t result;
  char v14;
  id v15;
  id v16;
  char v17;
  id v18;
  id v19;
  char v20;
  id v21;
  id v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  v6 = *(void **)(a1 + 40);
  v5 = *(void **)(a1 + 48);
  v41 = *(_QWORD *)(a1 + 56);
  v45 = *(_QWORD *)(a1 + 64);
  v39 = *(_QWORD *)(a1 + 72);
  v43 = *(_QWORD *)(a1 + 80);
  v27 = *(_QWORD *)(a1 + 88);
  v37 = *(_BYTE *)(a1 + 96);
  v35 = *(unsigned __int8 *)(a1 + 97);
  v33 = *(unsigned __int8 *)(a1 + 98);
  v31 = *(unsigned __int8 *)(a1 + 99);
  v29 = *(unsigned __int8 *)(a1 + 100);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v10 = *(void **)(a2 + 32);
  v9 = *(void **)(a2 + 40);
  v11 = *(void **)(a2 + 48);
  v40 = *(_QWORD *)(a2 + 56);
  v44 = *(_QWORD *)(a2 + 64);
  v38 = *(_QWORD *)(a2 + 72);
  v42 = *(_QWORD *)(a2 + 80);
  v26 = *(_QWORD *)(a2 + 88);
  v36 = *(unsigned __int8 *)(a2 + 96);
  v34 = *(unsigned __int8 *)(a2 + 97);
  v32 = *(unsigned __int8 *)(a2 + 98);
  v30 = *(unsigned __int8 *)(a2 + 99);
  v28 = *(unsigned __int8 *)(a2 + 100);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1BC62D574(), result = 0, (v12 & 1) != 0))
  {
    if (v3)
    {
      if (!v7)
        return 0;
      if (v2 != v8 || v3 != v7)
      {
        v14 = sub_1BC62D574();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v4)
    {
      if (!v10)
        return 0;
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
      v15 = v10;
      v16 = v4;
      v17 = sub_1BC62CEB4();

      if ((v17 & 1) == 0)
        return 0;
    }
    else if (v10)
    {
      return 0;
    }
    if (v6)
    {
      if (!v9)
        return 0;
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
      v18 = v9;
      v19 = v6;
      v20 = sub_1BC62CEB4();

      if ((v20 & 1) == 0)
        return 0;
    }
    else if (v9)
    {
      return 0;
    }
    if (v5)
    {
      if (!v11)
        return 0;
      sub_1BC34B6A0(0, &qword_1EF432870);
      v21 = v11;
      v22 = v5;
      v23 = sub_1BC62CEB4();

      if ((v23 & 1) == 0)
        return 0;
    }
    else if (v11)
    {
      return 0;
    }
    if (v45)
    {
      if (!v44)
        return 0;
      if (v41 != v40 || v45 != v44)
      {
        v24 = sub_1BC62D574();
        result = 0;
        if ((v24 & 1) == 0)
          return result;
      }
    }
    else if (v44)
    {
      return 0;
    }
    if (v43)
    {
      if (!v42)
        return 0;
      if (v39 != v38 || v43 != v42)
      {
        v25 = sub_1BC62D574();
        result = 0;
        if ((v25 & 1) == 0)
          return result;
      }
    }
    else if (v42)
    {
      return 0;
    }
    if ((v37 & 1) != 0)
    {
      result = 0;
      if (!v36)
        return result;
LABEL_47:
      if (((v35 ^ v34) & 1) == 0 && ((v33 ^ v32) & 1) == 0 && ((v31 ^ v30) & 1) == 0)
        return v29 ^ v28 ^ 1u;
      return result;
    }
    if ((v36 & 1) == 0)
    {
      result = 0;
      if (v27 != v26)
        return result;
      goto LABEL_47;
    }
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.displayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.secondaryText.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.icon.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.tintColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.editing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.pinned.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t destroy for UserDomainConceptFeedItemViewData(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserDomainConceptFeedItemViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  v8 = *(void **)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v7;
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_DWORD *)(a1 + 97) = *(_DWORD *)(a2 + 97);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v5;
  v12 = v6;
  v13 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserDomainConceptFeedItemViewData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 40);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v13;
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  *(_BYTE *)(a1 + 99) = *(_BYTE *)(a2 + 99);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  return a1;
}

__n128 __swift_memcpy101_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 93) = *(_QWORD *)((char *)a2 + 93);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for UserDomainConceptFeedItemViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  *(_BYTE *)(a1 + 99) = *(_BYTE *)(a2 + 99);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserDomainConceptFeedItemViewData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 101))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserDomainConceptFeedItemViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 100) = 0;
    *(_DWORD *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 101) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 101) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDomainConceptFeedItemViewData()
{
  return &type metadata for UserDomainConceptFeedItemViewData;
}

id static Optional<A>.+ infix(_:_:)(void *a1, void *a2)
{
  id v2;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v2 = a2;
  if (a1)
  {
    if (a2)
    {
      sub_1BC34D844();
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1BC639570;
      *(_QWORD *)(v4 + 32) = a1;
      *(_QWORD *)(v4 + 40) = v2;
      sub_1BC62C890();
      sub_1BC425EA0();
      v5 = v2;
      v6 = a1;
      v7 = v5;
      v8 = v6;
      v9 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v2 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v9);

    }
    else
    {
      v11 = a1;
      return a1;
    }
  }
  else if (a2)
  {
    v10 = a2;
  }
  return v2;
}

id static NSPredicate.! prefix(_:)(uint64_t a1)
{
  return objc_msgSend((id)objc_opt_self(), sel_notPredicateWithSubpredicate_, a1);
}

id static NSPredicate.+ infix(_:_:)(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  sub_1BC34D844();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC639570;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  sub_1BC62C890();
  sub_1BC425EA0();
  v5 = a1;
  v6 = a2;
  v7 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v7);

  return v8;
}

uint64_t *sub_1BC4B1790(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  void (*v37)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v38;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC62A8D4();
    v37 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v38 = v7;
    v37(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC62A760();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
    v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = (uint64_t)v15;
    v16 = a3[8];
    v17 = a3[9];
    v18 = *(void **)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = (uint64_t)v18;
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    v21 = sub_1BC62A820();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v23 = v14;
    v24 = v15;
    v25 = v18;
    v22(v19, v20, v21);
    v26 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    v27 = *(void **)((char *)a2 + v26);
    *(uint64_t *)((char *)a1 + v26) = (uint64_t)v27;
    v28 = a3[12];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = v27;
    v37((uint64_t *)v29, (uint64_t *)v30, v38);
    v32 = a3[13];
    v33 = *(void **)((char *)a2 + v32);
    *(uint64_t *)((char *)a1 + v32) = (uint64_t)v33;
    v34 = v33;
  }
  return a1;
}

void sub_1BC4B18F8(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1BC62A8D4();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v7 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  v8 = a1 + a2[9];
  v9 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  v5(a1 + a2[12], v4);
}

uint64_t sub_1BC4B19D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;

  v6 = sub_1BC62A8D4();
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v36 = v6;
  v35(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = a3[8];
  v16 = a3[9];
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = a1 + v16;
  v19 = a2 + v16;
  v20 = sub_1BC62A820();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22 = v13;
  v23 = v14;
  v24 = v17;
  v21(v18, v19, v20);
  v25 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v26 = *(void **)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  v27 = a3[12];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = v26;
  v35(v28, v29, v36);
  v31 = a3[13];
  v32 = *(void **)(a2 + v31);
  *(_QWORD *)(a1 + v31) = v32;
  v33 = v32;
  return a1;
}

uint64_t sub_1BC4B1B14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;

  v6 = sub_1BC62A8D4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = *(void **)(a2 + v12);
  v14 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v15 = v13;

  v16 = a3[7];
  v17 = *(void **)(a2 + v16);
  v18 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  v19 = v17;

  v20 = a3[8];
  v21 = *(void **)(a2 + v20);
  v22 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = v21;
  v23 = v21;

  v24 = a3[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v28 = a3[11];
  v29 = *(void **)(a2 + v28);
  v30 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v31 = v29;

  v7(a1 + a3[12], a2 + a3[12], v6);
  v32 = a3[13];
  v33 = *(void **)(a1 + v32);
  v34 = *(void **)(a2 + v32);
  *(_QWORD *)(a1 + v32) = v34;
  v35 = v34;

  return a1;
}

uint64_t sub_1BC4B1C68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1BC62A8D4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v7(a1 + a3[12], a2 + a3[12], v6);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1BC4B1D74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;

  v6 = sub_1BC62A8D4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);

  v14 = a3[7];
  v15 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);

  v16 = a3[8];
  v17 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);

  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v23 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);

  v7(a1 + a3[12], a2 + a3[12], v6);
  v24 = a3[13];
  v25 = *(void **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);

  return a1;
}

uint64_t sub_1BC4B1EB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC4B1EBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = sub_1BC62A8D4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1BC62A760();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1BC62A820();
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[9];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[6]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1BC4B1F88()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC4B1F94(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_1BC62A8D4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_1BC62A760();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6]) = (a2 - 1);
        return result;
      }
      v10 = sub_1BC62A820();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[9];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s13ConfigurationVMa()
{
  uint64_t result;

  result = qword_1EF4328E8;
  if (!qword_1EF4328E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC4B2098()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1BC62A8D4();
  if (v1 <= 0x3F)
  {
    result = sub_1BC62A760();
    if (v2 <= 0x3F)
    {
      result = sub_1BC62A820();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

_QWORD *sub_1BC4B216C(_QWORD *(*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  _QWORD *result;
  _QWORD v7[2];
  uint64_t v8;

  if ((a5 & 1) != 0)
    return 0;
  v7[0] = a3;
  v7[1] = a4;
  result = a1(&v8, v7);
  if (!v5)
    return (_QWORD *)v8;
  return result;
}

uint64_t sub_1BC4B21C4(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = sub_1BC62A760();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4EA0, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - v10;
  sub_1BC3462D8(v1, (uint64_t)&v13 - v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
  a1(&v13, v7);
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

uint64_t sub_1BC4B2314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v52 = a8;
  v53 = a5;
  v67 = a6;
  v54 = a4;
  v65 = a7;
  v66 = a10;
  v15 = sub_1BC62A91C();
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  MEMORY[0x1E0C80A78](v15);
  v55 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BC62A8D4();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v20;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v21(a9, a1, v17);
  v22 = (int *)_s13ConfigurationVMa();
  v23 = a9 + v22[5];
  v24 = sub_1BC62A760();
  v61 = *(_QWORD *)(v24 - 8);
  v62 = v24;
  v25 = *(void (**)(uint64_t, uint64_t))(v61 + 16);
  v64 = a2;
  v25(v23, a2);
  *(_QWORD *)(a9 + v22[6]) = a3;
  *(_QWORD *)(a9 + v22[7]) = a4;
  v26 = v53;
  *(_QWORD *)(a9 + v22[8]) = v53;
  v27 = a9 + v22[9];
  v28 = sub_1BC62A820();
  v59 = *(_QWORD *)(v28 - 8);
  v60 = v28;
  (*(void (**)(uint64_t, uint64_t))(v59 + 16))(v27, v67);
  *(_QWORD *)(a9 + v22[10]) = v65;
  v29 = v52;
  *(_QWORD *)(a9 + v22[11]) = v52;
  v56 = v19;
  v65 = a1;
  v30 = a1;
  v31 = v17;
  v32 = v17;
  v33 = (void (*)(uint64_t, char *, uint64_t))v21;
  v21((uint64_t)v19, v30, v32);
  v34 = qword_1EF428620;
  v51 = a3;
  v54 = v54;
  v53 = v26;
  v52 = v29;
  if (v34 != -1)
    swift_once();
  v35 = v58;
  v36 = __swift_project_value_buffer(v58, (uint64_t)qword_1EF432878);
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v55, v36, v35);
  v37 = v56;
  sub_1BC62A8BC();
  v38 = v31;
  v33(a9 + v22[12], v37, v31);
  v39 = v67;
  v40 = (void *)sub_1BC62A7E4();
  v41 = v51;
  objc_msgSend(v51, sel_setLocale_, v40);

  v42 = (void *)sub_1BC62A7E4();
  v43 = v54;
  objc_msgSend(v54, sel_setLocale_, v42);

  v44 = (void *)sub_1BC62A7E4();
  v45 = v53;
  objc_msgSend(v53, sel_setLocale_, v44);

  v46 = (void *)sub_1BC62A7E4();
  v47 = v52;
  objc_msgSend(v52, sel_setLocale_, v46);

  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v39, v60);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v64, v62);
  v48 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
  v48(v65, v38);
  result = ((uint64_t (*)(char *, uint64_t))v48)(v37, v38);
  *(_QWORD *)(a9 + v22[13]) = v66;
  return result;
}

uint64_t sub_1BC4B264C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;

  sub_1BC384E68(0, &qword_1EF4376B0, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v22[-v4];
  sub_1BC384E68(0, &qword_1EF435770, (void (*)(uint64_t))MEMORY[0x1E0CB11F0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v22[-v7];
  v9 = sub_1BC62A478();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4EA0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v22[-v14];
  v16 = sub_1BC62A8D4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  v17 = sub_1BC62A91C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
  sub_1BC62A460();
  sub_1BC62A880();
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  v23 = v1;
  v18 = sub_1BC4B21C4((void (*)(uint64_t *__return_ptr, char *))sub_1BC4B296C);
  v20 = v19;
  sub_1BC36D71C((uint64_t)v15);
  if (!v20)
  {
    v24 = a1;
    return sub_1BC62D52C();
  }
  return v18;
}

void sub_1BC4B28D8(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(void **)(a1 + *(int *)(_s13ConfigurationVMa() + 28));
  v4 = (void *)sub_1BC62A700();
  v5 = objc_msgSend(v3, sel_stringFromDate_, v4);

  v6 = sub_1BC62C680();
  v8 = v7;

  *a2 = v6;
  a2[1] = v8;
}

void sub_1BC4B296C(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1BC4B28D8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1BC4B2988()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  sub_1BC384E68(0, &qword_1EF4376B0, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - v1;
  v3 = sub_1BC62A91C();
  __swift_allocate_value_buffer(v3, qword_1EF432878);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EF432878);
  sub_1BC62A904();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1BC4B2A9C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC4B2AA4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = _s13ConfigurationVMa();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1BC4B2B2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void **v29;
  void *v30;
  _QWORD *v31;
  void **v32;
  void *v33;
  _QWORD *v34;
  _QWORD *v35;
  void **v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(unint64_t, unint64_t, uint64_t);
  id v41;
  id v42;
  id v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  void **v47;
  void *v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v67)(unint64_t, unint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v65 = sub_1BC62A8D4();
  v7 = *(_QWORD *)(v65 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v64 = sub_1BC62A760();
  v10 = *(_QWORD *)(v64 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11;
  v13 = sub_1BC62A820();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = v8 | (unint64_t)v11 | v15 | 7;
  v17 = v16 | *(_DWORD *)(v5 + 80);
  v18 = v17 == 7 && ((v11 | v8 | *(_DWORD *)(v14 + 80) | *(_DWORD *)(v5 + 80)) & 0x100000) == 0;
  if (v18
    && (v19 = v16 + v6,
        v20 = *(_QWORD *)(v7 + 64),
        v21 = v20 + v11,
        (v19 & ~v16)
      + ((v20
        + 7
        + ((v8
          + 8
          + ((((*(_QWORD *)(v14 + 64)
              + 7
              + ((v15
                + 8
                + ((((((*(_QWORD *)(v10 + 64) + 7 + ((v20 + v12) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8)
      + 8 <= 0x18))
  {
    v22 = ~v16;
    v23 = ~v12;
    v57 = *(_QWORD *)(v13 - 8);
    v58 = ~v15;
    v62 = ~v9;
    v63 = v20 + 7;
    v60 = v13;
    v61 = v9 + 8;
    v56 = v15 + 8;
    v24 = *(_QWORD *)(v10 + 64) + 7;
    v59 = *(_QWORD *)(v14 + 64) + 7;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
    v25 = ((unint64_t)a1 + v19) & v22;
    v26 = ((unint64_t)a2 + v19) & v22;
    v67 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
    v67(v25, v26, v65);
    v27 = (v21 + v25) & v23;
    v28 = (v21 + v26) & v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v27, v28, v64);
    v29 = (void **)((v24 + v28) & 0xFFFFFFFFFFFFF8);
    v30 = *v29;
    v31 = (_QWORD *)((v24 + v27) & 0xFFFFFFFFFFFFF8);
    *v31 = *v29;
    v32 = (void **)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFF8);
    v33 = *v32;
    v34 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFF8);
    *v34 = *v32;
    v35 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
    v36 = (void **)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
    v37 = *v36;
    *v35 = *v36;
    v38 = ((unint64_t)v35 + v56) & v58;
    v39 = ((unint64_t)v36 + v56) & v58;
    v40 = *(void (**)(unint64_t, unint64_t, uint64_t))(v57 + 16);
    v41 = v30;
    v42 = v33;
    v43 = v37;
    v40(v38, v39, v60);
    v44 = (_QWORD *)((v59 + v38) & 0xFFFFFFFFFFFFF8);
    v45 = (_QWORD *)((v59 + v39) & 0xFFFFFFFFFFFFF8);
    *v44 = *v45;
    v46 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
    v47 = (void **)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
    v48 = *v47;
    *v46 = *v47;
    v49 = ((unint64_t)v46 + v61) & v62;
    v50 = ((unint64_t)v47 + v61) & v62;
    v51 = v48;
    v67(v49, v50, v65);
    v52 = *(void **)((v63 + v50) & 0xFFFFFFFFFFFFF8);
    *(_QWORD *)((v63 + v49) & 0xFFFFFFFFFFFFF8) = v52;
    v53 = v52;
  }
  else
  {
    v54 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v54 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  return a1;
}

void sub_1BC4B2E18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  id *v18;
  id *v19;
  id *v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = sub_1BC62A8D4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v24 = v7;
  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = sub_1BC62A820();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v4 + (v7 | v10 | v13 | 7)) & ~(v7 | v10 | v13 | 7);
  v15 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v15(v14, v5);
  v16 = *(_QWORD *)(v6 + 64);
  v17 = (v16 + v10 + v14) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
  v18 = (id *)((*(_QWORD *)(v9 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8);

  v19 = (id *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
  v20 = (id *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);

  v21 = ((unint64_t)v20 + v13 + 8) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v21, v11);
  v22 = (id *)((((*(_QWORD *)(v12 + 64) + v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);

  v23 = ((unint64_t)v22 + v24 + 8) & ~v24;
  v15(v23, v5);

}

uint64_t sub_1BC4B2F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void **v24;
  void *v25;
  _QWORD *v26;
  void **v27;
  void *v28;
  _QWORD *v29;
  void **v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  void **v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v4 + 16))();
  v50 = *(_QWORD *)(v4 + 64);
  v6 = sub_1BC62A8D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v52 = v8;
  v53 = v6;
  v9 = sub_1BC62A760();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v51 = sub_1BC62A820();
  v12 = *(_QWORD *)(v51 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v8 | v11 | v13 | 7;
  v15 = (v14 + v50 + a1) & ~v14;
  v16 = (v14 + v50 + a2) & ~v14;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v17(v15, v16, v6);
  v18 = v17;
  v19 = *(_QWORD *)(v7 + 64);
  v20 = (v19 + v11 + v15) & ~v11;
  v21 = (v19 + v11 + v16) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v20, v21, v9);
  v22 = *(_QWORD *)(v10 + 64) + 7;
  v23 = (_QWORD *)((v22 + v20) & 0xFFFFFFFFFFFFFFF8);
  v24 = (void **)((v22 + v21) & 0xFFFFFFFFFFFFFFF8);
  v25 = *v24;
  *v23 = *v24;
  v26 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  v27 = (void **)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  v28 = *v27;
  *v26 = *v27;
  v29 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 = (void **)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  v31 = *v30;
  *v29 = *v30;
  v32 = ((unint64_t)v29 + v13 + 8) & ~v13;
  v33 = ((unint64_t)v30 + v13 + 8) & ~v13;
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v35 = v25;
  v36 = v28;
  v37 = v31;
  v34(v32, v33, v51);
  v38 = *(_QWORD *)(v12 + 64) + 7;
  v39 = v38 + v32;
  v40 = (_QWORD *)((v38 + v33) & 0xFFFFFFFFFFFFFFF8);
  v39 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v39 = *v40;
  v41 = (_QWORD *)((v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  v42 = (void **)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
  v43 = *v42;
  *v41 = *v42;
  v44 = ((unint64_t)v41 + v52 + 8) & ~v52;
  v45 = ((unint64_t)v42 + v52 + 8) & ~v52;
  v46 = v43;
  v18(v44, v45, v53);
  v47 = *(void **)((v19 + 7 + v45) & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)((v19 + 7 + v44) & 0xFFFFFFFFFFFFF8) = v47;
  v48 = v47;
  return a1;
}

uint64_t sub_1BC4B3190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void **v25;
  void *v26;
  void *v27;
  id v28;
  void **v29;
  void **v30;
  void *v31;
  void *v32;
  id v33;
  void **v34;
  void **v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  void **v44;
  void **v45;
  void *v46;
  void *v47;
  id v48;
  void **v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v4 + 24))();
  v6 = *(_QWORD *)(v4 + 64);
  v7 = sub_1BC62A8D4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v56 = v9;
  v10 = sub_1BC62A760();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = sub_1BC62A820();
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  v14 = *(unsigned __int8 *)(v54 + 80);
  v15 = v9 | v12 | v14 | 7;
  v16 = v15 + v6;
  v17 = (v15 + v6 + a1) & ~v15;
  v18 = (v16 + a2) & ~v15;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v19(v17, v18, v7);
  v20 = *(_QWORD *)(v8 + 64);
  v21 = (v20 + v12 + v17) & ~v12;
  v22 = (v20 + v12 + v18) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v21, v22, v10);
  v23 = *(_QWORD *)(v11 + 64) + 7;
  v24 = (void **)((v23 + v21) & 0xFFFFFFFFFFFFFFF8);
  v25 = (void **)((v23 + v22) & 0xFFFFFFFFFFFFFFF8);
  v26 = *v25;
  v27 = *v24;
  *v24 = *v25;
  v28 = v26;

  v29 = (void **)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 = (void **)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8);
  v31 = *v30;
  v32 = *v29;
  *v29 = *v30;
  v33 = v31;

  v34 = (void **)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  v35 = (void **)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  v36 = *v35;
  v37 = *v34;
  *v34 = *v35;
  v38 = v36;

  v39 = ((unint64_t)v34 + v14 + 8) & ~v14;
  v40 = ((unint64_t)v35 + v14 + 8) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 24))(v39, v40, v55);
  v41 = *(_QWORD *)(v54 + 64) + 7;
  v42 = (_QWORD *)((v41 + v39) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)((v41 + v40) & 0xFFFFFFFFFFFFFFF8);
  *v42 = *v43;
  v44 = (void **)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  v45 = (void **)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  v46 = *v45;
  v47 = *v44;
  *v44 = *v45;
  v48 = v46;

  v19(((unint64_t)v44 + v56 + 8) & ~v56, ((unint64_t)v45 + v56 + 8) & ~v56, v7);
  v49 = (void **)((v20 + 7 + (((unint64_t)v44 + v56 + 8) & ~v56)) & 0xFFFFFFFFFFFFFFF8);
  v50 = *(void **)((v20 + 7 + (((unint64_t)v45 + v56 + 8) & ~v56)) & 0xFFFFFFFFFFFFF8);
  v51 = *v49;
  *v49 = v50;
  v52 = v50;

  return a1;
}

uint64_t sub_1BC4B33AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v4 + 32))();
  v39 = *(_QWORD *)(v4 + 64);
  v6 = sub_1BC62A8D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v41 = v6;
  v42 = v8;
  v9 = sub_1BC62A760();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v40 = sub_1BC62A820();
  v12 = *(_QWORD *)(v40 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v8 | v11 | v13 | 7;
  v15 = (v14 + v39 + a1) & ~v14;
  v16 = (v14 + v39 + a2) & ~v14;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v17(v15, v16, v6);
  v18 = v17;
  v19 = *(_QWORD *)(v7 + 64);
  v20 = (v19 + v11 + v15) & ~v11;
  v21 = (v19 + v11 + v16) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v20, v21, v9);
  v22 = *(_QWORD *)(v10 + 64) + 7;
  v23 = (_QWORD *)((v22 + v20) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)((v22 + v21) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v25 = *v26;
  v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v27 = *v28;
  v29 = ((unint64_t)v27 + v13 + 8) & ~v13;
  v30 = ((unint64_t)v28 + v13 + 8) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v29, v30, v40);
  v31 = *(_QWORD *)(v12 + 64) + 7;
  v32 = v31 + v29;
  v33 = (_QWORD *)((v31 + v30) & 0xFFFFFFFFFFFFFFF8);
  v32 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v32 = *v33;
  v34 = (_QWORD *)((v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = ((unint64_t)v34 + v42 + 8) & ~v42;
  v37 = ((unint64_t)v35 + v42 + 8) & ~v42;
  v18(v36, v37, v41);
  *(_QWORD *)((v19 + 7 + v36) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v19 + 7 + v37) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BC4B3594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  void **v23;
  void *v24;
  void **v25;
  void **v26;
  void *v27;
  void **v28;
  void **v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  void **v35;
  void **v36;
  void *v37;
  void **v38;
  void *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v4 + 40))();
  v41 = *(_QWORD *)(v4 + 64);
  v6 = sub_1BC62A8D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v43 = v8;
  v9 = sub_1BC62A760();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v42 = sub_1BC62A820();
  v12 = *(_QWORD *)(v42 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v8 | v11 | v13 | 7;
  v15 = (v14 + v41 + a1) & ~v14;
  v16 = (v14 + v41 + a2) & ~v14;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v17(v15, v16, v6);
  v18 = *(_QWORD *)(v7 + 64);
  v19 = (v18 + v11 + v15) & ~v11;
  v20 = (v18 + v11 + v16) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v19, v20, v9);
  v21 = *(_QWORD *)(v10 + 64) + 7;
  v22 = (void **)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (void **)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  v24 = *v22;
  *v22 = *v23;

  v25 = (void **)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  v26 = (void **)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  v27 = *v25;
  *v25 = *v26;

  v28 = (void **)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  v29 = (void **)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 = *v28;
  *v28 = *v29;

  v31 = ((unint64_t)v29 + v13 + 8) & ~v13;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 40))(((unint64_t)v28 + v13 + 8) & ~v13, v31, v42);
  v32 = *(_QWORD *)(v12 + 64) + 7;
  v33 = (_QWORD *)((v32 + (((unint64_t)v28 + v13 + 8) & ~v13)) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)((v32 + v31) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  v35 = (void **)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  v36 = (void **)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  v37 = *v35;
  *v35 = *v36;

  v17(((unint64_t)v35 + v43 + 8) & ~v43, ((unint64_t)v36 + v43 + 8) & ~v43, v6);
  v38 = (void **)((v18 + 7 + (((unint64_t)v35 + v43 + 8) & ~v43)) & 0xFFFFFFFFFFFFFFF8);
  v39 = *v38;
  *v38 = *(void **)((v18 + 7 + (((unint64_t)v36 + v43 + 8) & ~v43)) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1BC4B37A4(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v33;
  uint64_t (*v34)(unint64_t, uint64_t, uint64_t);
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v38 = sub_1BC62A8D4();
  v8 = *(_QWORD *)(v38 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  v37 = sub_1BC62A760();
  v10 = *(_QWORD *)(v37 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v9)
    v12 = v9;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = sub_1BC62A820();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  if (v12 <= v15)
    v16 = *(_DWORD *)(v14 + 84);
  else
    v16 = v12;
  if (v16 <= v9)
    v16 = v9;
  if (v16 <= 0x7FFFFFFF)
    v17 = 0x7FFFFFFF;
  else
    v17 = v16;
  if (v17 <= v7)
    v18 = v7;
  else
    v18 = v17;
  if (!a2)
    return 0;
  v19 = v13;
  v20 = *(unsigned __int8 *)(v8 + 80);
  v21 = *(unsigned __int8 *)(v10 + 80);
  v22 = *(unsigned __int8 *)(v14 + 80);
  v23 = v20 | v21 | v22 | 7;
  v24 = v23 + *(_QWORD *)(v6 + 64);
  v25 = *(_QWORD *)(v8 + 64);
  v26 = v25 + v21;
  v27 = *(_QWORD *)(v10 + 64) + 7;
  v28 = v22 + 8;
  if (v18 < a2)
  {
    if ((((v24 & ~v23)
         + ((v25
           + ((v20
             + ((((*(_QWORD *)(v14 + 64)
                 + ((v28
                   + ((((((v27 + (v26 & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v22)
                 + 7) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 8) & ~v20)
           + 7) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v29 = 2;
    else
      v29 = a2 - v18 + 1;
    if (v29 >= 0x10000)
      v30 = 4;
    else
      v30 = 2;
    if (v29 < 0x100)
      v30 = 1;
    if (v29 >= 2)
      v31 = v30;
    else
      v31 = 0;
    __asm { BR              X7 }
  }
  if (v7 >= v17)
  {
    v34 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    v33 = a1;
    v15 = v7;
    v19 = v5;
    return v34(v33, v15, v19);
  }
  v33 = (v24 + a1) & ~v23;
  if ((_DWORD)v9 == v17)
  {
    v34 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
    v15 = v9;
    v19 = v38;
    return v34(v33, v15, v19);
  }
  v33 = (v26 + v33) & ~v21;
  if ((_DWORD)v11 == v17)
  {
    v34 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
    v15 = v11;
    v19 = v37;
    return v34(v33, v15, v19);
  }
  v35 = (uint64_t *)((v27 + v33) & 0xFFFFFFFFFFFFFFF8);
  if ((v16 & 0x80000000) != 0)
  {
    v33 = (v28 + (((((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v22;
    v34 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 48);
    return v34(v33, v15, v19);
  }
  v36 = *v35;
  if ((unint64_t)*v35 >= 0xFFFFFFFF)
    LODWORD(v36) = -1;
  return (v36 + 1);
}

void sub_1BC4B3A5C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_1BC62A8D4() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(sub_1BC62A760() - 8);
  if (*(_DWORD *)(v11 + 84) <= v10)
    v12 = v10;
  else
    v12 = *(_DWORD *)(v11 + 84);
  v13 = *(_QWORD *)(sub_1BC62A820() - 8);
  if (v12 <= *(_DWORD *)(v13 + 84))
    v14 = *(_DWORD *)(v13 + 84);
  else
    v14 = v12;
  if (v14 <= v10)
    v14 = v10;
  if (v14 <= 0x7FFFFFFF)
    v15 = 0x7FFFFFFF;
  else
    v15 = v14;
  if (v15 <= v8)
    v16 = v8;
  else
    v16 = v15;
  v17 = *(unsigned __int8 *)(v9 + 80);
  v18 = *(unsigned __int8 *)(v11 + 80);
  v19 = *(unsigned __int8 *)(v13 + 80);
  v20 = ((*(_QWORD *)(v9 + 64)
        + ((v17
          + ((((*(_QWORD *)(v13 + 64)
              + ((v19
                + 8
                + ((((((*(_QWORD *)(v11 + 64) + 7 + ((*(_QWORD *)(v9 + 64) + v18) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v19)
              + 7) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 8) & ~v17)
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8
      + (((v17 | v18 | v19 | 7) + *(_QWORD *)(v7 + 64)) & ~(v17 | v18 | v19 | 7));
  if (v16 >= a3)
  {
    v23 = 0u;
    if (a2 <= v16)
      goto LABEL_28;
  }
  else
  {
    if ((_DWORD)v20)
      v21 = 2;
    else
      v21 = a3 - v16 + 1;
    if (v21 >= 0x10000)
      v22 = 4;
    else
      v22 = 2;
    if (v21 < 0x100)
      v22 = 1;
    if (v21 >= 2)
      v23 = v22;
    else
      v23 = 0;
    if (a2 <= v16)
LABEL_28:
      __asm { BR              X5 }
  }
  if ((_DWORD)v20)
  {
    v24 = ~v16 + a2;
    bzero(a1, v20);
    *a1 = v24;
  }
  __asm { BR              X10 }
}

void sub_1BC4B3C50()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x1BC4B3D6CLL);
}

void sub_1BC4B3C58()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x1BC4B3C60);
  JUMPOUT(0x1BC4B3D6CLL);
}

void sub_1BC4B3CC8()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x1BC4B3D6CLL);
}

void sub_1BC4B3CD0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x1BC4B3D6CLL);
}

uint64_t sub_1BC4B3CD8(uint64_t a1, size_t a2)
{
  _DWORD *v2;
  int v3;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_WORD *)(v8 + v11) = 0;
  if (!(_DWORD)v7)
    goto LABEL_7;
  if (v10 < v5)
  {
    v2 = (_DWORD *)((v6 + v8) & a1);
    if (v5 >= v7)
      JUMPOUT(0x1BC4B3CE4);
    if ((_DWORD)a2)
    {
      v3 = ~v5 + v7;
      bzero(v2, a2);
      *v2 = v3;
    }
LABEL_7:
    JUMPOUT(0x1BC4B3D6CLL);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, v7, v10);
}

uint64_t _s7PDFDataVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7PDFDataVMn);
}

uint64_t sub_1BC4B3D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  v11 = sub_1BC62A820();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a4, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = sub_1BC3644C0();
  *(_QWORD *)(v13 + 32) = a1;
  *(_QWORD *)(v13 + 40) = a2;
  v14 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  swift_bridgeObjectRetain();
  v15 = objc_msgSend(v14, sel_initWithInteger_, a3);
  *(_QWORD *)(v13 + 96) = sub_1BC497C80();
  *(_QWORD *)(v13 + 104) = sub_1BC4B5264();
  *(_QWORD *)(v13 + 72) = v15;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v16 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v17 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v10);
  return v17;
}

uint64_t sub_1BC4B3FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  v9 = a3 + *(int *)(_s13ConfigurationVMa() + 36);
  v10 = sub_1BC62A820();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC6395A0;
  v13 = sub_1BC4B264C(a1);
  v15 = v14;
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v17 = sub_1BC3644C0();
  *(_QWORD *)(v12 + 64) = v17;
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  v18 = sub_1BC4B264C(a2);
  *(_QWORD *)(v12 + 96) = v16;
  *(_QWORD *)(v12 + 104) = v17;
  *(_QWORD *)(v12 + 72) = v18;
  *(_QWORD *)(v12 + 80) = v19;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v20 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v21 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v8);
  return v21;
}

uint64_t sub_1BC4B41E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  v11 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC6395A0;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1BC3644C0();
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  *(_QWORD *)(v12 + 96) = v13;
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 72) = a3;
  *(_QWORD *)(v12 + 80) = a4;
  v15 = qword_1ED6A4888;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v17 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v10);
  return v17;
}

uint64_t sub_1BC4B43CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  v7 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1BC3644C0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  v9 = qword_1ED6A4888;
  swift_bridgeObjectRetain();
  if (v9 != -1)
    swift_once();
  v10 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v11 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v6);
  return v11;
}

uint64_t sub_1BC4B459C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  v7 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1BC3644C0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  v9 = qword_1ED6A4888;
  swift_bridgeObjectRetain();
  if (v9 != -1)
    swift_once();
  v10 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v11 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v6);
  return v11;
}

uint64_t sub_1BC4B476C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1BC359F44();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC63C060;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  v4 = v3;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 40) = v4;
  v5 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v6 = sub_1BC62A4A8();
  v8 = v7;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 48) = v6;
  *(_QWORD *)(v0 + 56) = v8;
  v9 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v10 = sub_1BC62A4A8();
  v12 = v11;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v12;
  v13 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v14 = sub_1BC62A4A8();
  v16 = v15;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 80) = v14;
  *(_QWORD *)(v0 + 88) = v16;
  return v0;
}

uint64_t sub_1BC4B49A0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BC359F44();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC63DB50;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  v4 = v3;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 40) = v4;
  v5 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v6 = sub_1BC62A4A8();
  v8 = v7;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 48) = v6;
  *(_QWORD *)(v0 + 56) = v8;
  v9 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v10 = sub_1BC62A4A8();
  v12 = v11;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v12;
  v13 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v14 = sub_1BC62A4A8();
  v16 = v15;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 80) = v14;
  *(_QWORD *)(v0 + 88) = v16;
  v17 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v18 = sub_1BC62A4A8();
  v20 = v19;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 96) = v18;
  *(_QWORD *)(v0 + 104) = v20;
  return v0;
}

uint64_t sub_1BC4B4C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  v7 = sub_1BC62A820();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC639590;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  *(_QWORD *)(v9 + 56) = sub_1BC497C80();
  *(_QWORD *)(v9 + 64) = sub_1BC4B5264();
  *(_QWORD *)(v9 + 32) = v10;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v11 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v12 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v6);
  return v12;
}

uint64_t sub_1BC4B4E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  v7 = sub_1BC62A820();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC639590;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  *(_QWORD *)(v9 + 56) = sub_1BC497C80();
  *(_QWORD *)(v9 + 64) = sub_1BC4B5264();
  *(_QWORD *)(v9 + 32) = v10;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v11 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v12 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v6);
  return v12;
}

uint64_t sub_1BC4B503C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - v7;
  v9 = sub_1BC62A820();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a3, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC6395A0;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  v13 = sub_1BC497C80();
  *(_QWORD *)(v11 + 56) = v13;
  v14 = sub_1BC4B5264();
  *(_QWORD *)(v11 + 64) = v14;
  *(_QWORD *)(v11 + 32) = v12;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a2);
  *(_QWORD *)(v11 + 96) = v13;
  *(_QWORD *)(v11 + 104) = v14;
  *(_QWORD *)(v11 + 72) = v15;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v16 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v17 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v8);
  return v17;
}

unint64_t sub_1BC4B5264()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EF4329C0;
  if (!qword_1EF4329C0)
  {
    v1 = sub_1BC497C80();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1EF4329C0);
  }
  return result;
}

id MedicalRecordChartDataSource.__allocating_init(chartDefining:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  objc_class *v6;
  id v13;
  id v14;

  v13 = objc_allocWithZone(v6);
  v14 = sub_1BC4B811C(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();

  return v14;
}

unint64_t MedicalRecordChartDataSourceType.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t *sub_1BC4B5348@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

uint64_t MedicalRecordChartDataSource.type.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_type);
}

uint64_t MedicalRecordChartDataSource.chartDefining.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC4B825C(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining, a1);
}

uint64_t MedicalRecordChartDataSource.dataTransformer.getter()
{
  return swift_unknownObjectRetain();
}

void sub_1BC4B5398(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id sub_1BC4B53F8()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
  swift_beginAccess();
  return *v1;
}

void *sub_1BC4B543C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void *sub_1BC4B5488()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void *sub_1BC4B54D4()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

uint64_t sub_1BC4B55F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_1BC4B825C(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining, (uint64_t)v4);
  v1 = v5;
  if (v5)
  {
    v2 = v6;
    __swift_project_boxed_opaque_existential_1Tm(v4, v5);
    v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    sub_1BC348D78((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BC4B82A0);
  }
  return v1;
}

id MedicalRecordChartDataSource.init(chartDefining:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  id v8;

  v8 = sub_1BC4B811C(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();

  return v8;
}

id MedicalRecordChartDataSource.__allocating_init(concept:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)(void *a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  objc_class *v6;
  id v13;
  id v14;

  v13 = objc_allocWithZone(v6);
  v14 = sub_1BC4B84F8(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();

  return v14;
}

id MedicalRecordChartDataSource.init(concept:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)(void *a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  id v9;

  v9 = sub_1BC4B84F8(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();

  return v9;
}

id sub_1BC4B5868(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  id v21;
  uint64_t v22;
  id v23;
  void (*v24)(char *, char *, uint64_t);
  void *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  id v32;
  void (*v33)(char *, uint64_t);
  unint64_t v35;
  _QWORD v36[2];
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41[16];
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;

  v38 = a3;
  v5 = sub_1BC62A31C();
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x1E0C80A78](v5);
  v36[0] = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62A760();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v36 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v36 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v36 - v18;
  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F740]), sel_init);
  v43 = a1;
  v44 = a2;
  v20 = v38;
  v45 = v38;
  v21 = (id)HKGraphSeriesDataBlockPathMinimumX();
  sub_1BC62A724();

  v22 = v36[0];
  v43 = a1;
  v44 = a2;
  v45 = v20;
  v23 = (id)HKGraphSeriesDataBlockPathMaximumX();
  sub_1BC62A724();

  v24 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v38 = v19;
  v24(v13, v19, v7);
  v24(v10, v16, v7);
  sub_1BC62A2F8();
  v25 = (void *)v36[1];
  v26 = sub_1BC4B6878(a2);
  v42 = v22;
  v27 = sub_1BC3D19CC(sub_1BC4B89C0, (uint64_t)v41, v26);
  if (v27 < 0 || (v27 & 0x4000000000000000) != 0)
  {
    v35 = swift_bridgeObjectRetain();
    v28 = (uint64_t)sub_1BC3D6D54(v35);
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v43 = v28;
  sub_1BC4B7188((uint64_t *)&v43);
  swift_bridgeObjectRelease();
  v29 = v43;
  v30 = v25;
  sub_1BC4B8348(v29, (uint64_t)v30, a2);
  swift_release();

  sub_1BC4B8668();
  v31 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v32 = v37;
  objc_msgSend(v37, sel_setChartPoints_, v31);

  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v22, v40);
  v33 = *(void (**)(char *, uint64_t))(v8 + 8);
  v33(v16, v7);
  v33(v38, v7);
  return v32;
}

uint64_t sub_1BC4B5BE0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v7[6];

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets);
  if (!v2)
    return 0;
  MEMORY[0x1E0C80A78](a1);
  v7[2] = v3;
  swift_bridgeObjectRetain();
  v4 = sub_1BC3D19CC(sub_1BC4B86BC, (uint64_t)v7, v2);
  if (v4 >> 62)
    v5 = sub_1BC62D3B8();
  else
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BC4B5CA0(id *a1)
{
  return sub_1BC4B5CB8(a1) & 1;
}

uint64_t sub_1BC4B5CB8(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  char v8;
  uint64_t v10;

  v2 = sub_1BC62A760();
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = MEMORY[0x1E0C80A78](v2).n128_u64[0];
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(*a1, sel_date, v4);
  sub_1BC62A724();

  v8 = sub_1BC62A310();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8 & 1;
}

id sub_1BC4B5D74(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void **v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;

  v3 = v2;
  if (a1)
  {
    v6 = a1;
  }
  else
  {
    v7 = (id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors);
    swift_beginAccess();
    if (*v7)
    {
      v8 = *v7;
    }
    else
    {
      sub_1BC34B6A0(0, (unint64_t *)&unk_1EF435740);
      v9 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
      v8 = HKUIMetricColors.init(keyColor:)(v9);
    }
    v6 = v8;
  }
  v10 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_dataTransformer);
  v11 = a1;
  v12 = objc_msgSend(v10, sel_graphSeriesWith_, v6);
  objc_msgSend(v12, sel_setDataSource_, v3);
  v13 = (void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange);
  swift_beginAccess();
  v14 = *v13;
  if (*v13)
  {
    v15 = *v13;
  }
  else
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    v16 = (void *)sub_1BC62CE84();
    v17 = (void *)sub_1BC62CE84();
    v15 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v16, v17);

    v14 = 0;
  }
  v18 = v14;
  sub_1BC35C5EC(MEMORY[0x1E0DEE9D8]);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  sub_1BC34B6A0(0, (unint64_t *)&unk_1EF4357A0);
  sub_1BC475BC8();
  v19 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend((id)objc_opt_self(), sel_ruleWithDefaultAxisBounds_axisBoundsOverrides_, v15, v19);

  objc_msgSend(v12, sel_setAxisScalingRule_, v20);
  objc_msgSend(v12, sel_setYAxis_, a2);

  return v12;
}

id sub_1BC4B5FEC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id *v8;
  id v9;
  id v10;
  _QWORD *v11;
  id v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v3 = (void *)(*(uint64_t (**)(_QWORD, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x158))(0, a1);
  v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_dataTransformer);
  sub_1BC4B825C((uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining, (uint64_t)v14);
  v5 = v15;
  if (v15)
  {
    v6 = v16;
    __swift_project_boxed_opaque_existential_1Tm(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
  else
  {
    sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC4B82A0);
  }
  v7 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v8 = (id *)((char *)v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
  swift_beginAccess();
  v9 = objc_msgSend(*v8, sel_unitString);
  if (!v9)
  {
    sub_1BC62C680();
    v9 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  v10 = objc_msgSend(v4, sel_chartDisplayTypeWith_displayName_unitName_, v3, v7, v9);

  v11 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange);
  swift_beginAccess();
  if (*v11)
  {
    v12 = objc_msgSend(v10, sel_copyWithDefaultAxisRangeOverride_);

    v10 = v12;
  }

  return v10;
}

void sub_1BC4B61F8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id *v19;
  uint64_t v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  id v25;
  char *v26;
  char *v27;
  char v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, char *, uint64_t);
  id v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  id *v40;
  double v41;
  id v42;
  double v43;
  double v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  void *v48;
  id v49;
  void **v50;
  void *v51;
  id v52;
  id v53;
  float v54;
  float v55;
  float v56;
  id v57;
  id v58;
  id v59;
  void **v60;
  void *v61;
  id v62;
  void **v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  id *v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;

  v3 = sub_1BC62A760();
  v74 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v73 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v72 = (char *)&v64 - v6;
  MEMORY[0x1E0C80A78](v7);
  v71 = (char *)&v64 - v8;
  MEMORY[0x1E0C80A78](v9);
  v70 = (char *)&v64 - v10;
  MEMORY[0x1E0C80A78](v11);
  v76 = (char *)&v64 - v12;
  MEMORY[0x1E0C80A78](v13);
  v75 = (char *)&v64 - v14;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v15)
      return;
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return;
  }
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_distantFuture);
  sub_1BC62A724();

  v18 = objc_msgSend(v16, sel_distantPast);
  sub_1BC62A724();

  if (v15 < 1)
  {
    __break(1u);
  }
  else
  {
    v65 = v1;
    v19 = (id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
    v66 = a1 & 0xC000000000000001;
    swift_bridgeObjectRetain();
    v67 = v19;
    swift_beginAccess();
    v20 = 0;
    v21 = 1.79769313e308;
    v22 = -1.79769313e308;
    v69 = a1;
    v68 = v15;
    do
    {
      if (v66)
        v23 = (id)MEMORY[0x1BCCF24CC](v20, a1);
      else
        v23 = *(id *)(a1 + 8 * v20 + 32);
      v24 = v23;
      ++v20;
      v25 = objc_msgSend(v23, sel_date);
      v26 = v71;
      sub_1BC62A724();

      sub_1BC4B86D8();
      v27 = v75;
      v28 = sub_1BC62C5F0();
      v29 = v74;
      v30 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
      if ((v28 & 1) != 0)
        v31 = v26;
      else
        v31 = v27;
      v32 = v70;
      v30(v70, v31, v3);
      v33 = *(void (**)(char *, uint64_t))(v29 + 8);
      v33(v26, v3);
      v33(v27, v3);
      v34 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
      v34(v27, v32, v3);
      v35 = objc_msgSend(v24, sel_date);
      v36 = v73;
      sub_1BC62A724();

      v37 = v76;
      if ((sub_1BC62C5FC() & 1) != 0)
        v38 = v36;
      else
        v38 = v37;
      v39 = v72;
      v30(v72, v38, v3);
      v33(v36, v3);
      v33(v37, v3);
      v34(v37, v39, v3);
      v40 = v67;
      objc_msgSend(v24, sel_minValueIncludingReferenceRangeForUnit_, *v67);
      if (v41 < v21)
        v21 = v41;
      v42 = *v40;
      objc_msgSend(v24, sel_maxValueIncludingReferenceRangeForUnit_, v42);
      v44 = v43;

      if (v22 <= v44)
        v22 = v44;
      a1 = v69;
    }
    while (v68 != v20);
    swift_bridgeObjectRelease();
    v45 = v65;
    *(_QWORD *)(v65 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v46 = (_QWORD *)(v45 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_cachedBucketedSets);
    swift_beginAccess();
    *v46 = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRelease();
    v47 = (void *)sub_1BC62A700();
    v48 = (void *)sub_1BC62A700();
    v49 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v47, v48);

    v50 = (void **)(v45 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange);
    swift_beginAccess();
    v51 = *v50;
    *v50 = v49;

    v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v21);
    v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v22);
    objc_msgSend(v53, sel_floatValue);
    v55 = v54;
    objc_msgSend(v52, sel_floatValue);
    if ((float)(v55 - v56) >= COERCE_FLOAT(1))
    {
      v62 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v52, v53);
      v63 = (void **)(v45 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange);
      swift_beginAccess();
      v61 = *v63;
      *v63 = v62;
    }
    else
    {
      v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v21 * 0.8);
      v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v22 * 1.2);
      v59 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v57, v58);

      v60 = (void **)(v45 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange);
      swift_beginAccess();
      v61 = *v60;
      *v60 = v59;
    }

    v33(v76, v3);
    v33(v75, v3);
  }
}

uint64_t sub_1BC4B6878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  char *v32;
  unint64_t v33;
  char v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  char v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  char v48;
  int v49;
  void *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  void *v58;
  id v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t *v66;
  char isUniquelyReferenced_nonNull_native;
  char v68;
  uint64_t result;
  uint64_t *v70;
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  char *v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;

  v2 = v1;
  v4 = sub_1BC62A760();
  v80 = *(_QWORD **)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v70 - v8;
  MEMORY[0x1E0C80A78](v10);
  v79 = (char *)&v70 - v11;
  MEMORY[0x1E0C80A78](v12);
  v71 = (char *)&v70 - v13;
  v14 = (char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_cachedBucketedSets);
  swift_beginAccess();
  v15 = *(_QWORD *)v14;
  if (*(_QWORD *)(*(_QWORD *)v14 + 16))
  {
    v16 = sub_1BC559338(a1);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
      return (uint64_t)v18;
    }
  }
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets);
  v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v19)
    return (uint64_t)v18;
  v20 = *(_BYTE *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_collapseIntoRangePoints) == 1;
  v78 = a1;
  v75 = v4;
  v76 = v19;
  v21 = v19 >> 62;
  if (v20)
  {
    if (v21)
      goto LABEL_52;
    v22 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v70 = (uint64_t *)v14;
    if (!v22)
    {
LABEL_53:
      swift_bridgeObjectRelease();
      v65 = swift_bridgeObjectRetain();
      v18 = sub_1BC3D72BC(v65);
      swift_bridgeObjectRelease();
      v66 = v70;
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v81 = *v66;
      *v66 = 0x8000000000000000;
      sub_1BC48CEAC((uint64_t)v18, a1, isUniquelyReferenced_nonNull_native);
      *v66 = v81;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_bridgeObjectRelease();
      return (uint64_t)v18;
    }
LABEL_9:
    if (v22 < 1)
    {
      __break(1u);
      goto LABEL_59;
    }
    v23 = 0;
    v74 = v19 & 0xC000000000000001;
    v24 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v25 = v71;
    v73 = v22;
    while (1)
    {
      if (v74)
        v29 = (id)MEMORY[0x1BCCF24CC](v23, v19);
      else
        v29 = *(id *)(v19 + 8 * v23 + 32);
      v30 = v29;
      v31 = objc_msgSend(v29, sel_date, v70);
      v32 = v79;
      sub_1BC62A724();

      HKTimeScope.bucketingDate(for:)((uint64_t)v32, a1, v25);
      v77 = (void (*)(char *, uint64_t))v80[1];
      v77(v32, v4);
      if (v24[2])
      {
        v33 = sub_1BC5595C0((uint64_t)v25);
        if ((v34 & 1) != 0)
        {
          v35 = *(id *)(v24[7] + 8 * v33);
          v36 = objc_msgSend(v30, sel_quantities);
          if (!v36)
          {
            sub_1BC34B6A0(0, (unint64_t *)&qword_1EF432A70);
            sub_1BC62C878();
            v36 = (id)sub_1BC62C86C();
            v19 = v76;
            swift_bridgeObjectRelease();
          }
          objc_msgSend(v35, sel_addChartableCodedQuantities_, v36);

          v30 = v36;
          v28 = v73;
          v27 = v77;
          goto LABEL_14;
        }
      }
      v72 = (void (*)(char *, char *, uint64_t))v80[2];
      v72(v9, v25, v4);
      v37 = (void *)sub_1BC62A700();
      v38 = objc_msgSend(v30, sel_chartableCodedQuantitySetByChangingDate_, v37);

      if (!v38)
      {
        swift_bridgeObjectRetain();
        v46 = sub_1BC5595C0((uint64_t)v9);
        v48 = v47;
        swift_bridgeObjectRelease();
        if ((v48 & 1) != 0)
        {
          v49 = swift_isUniquelyReferenced_nonNull_native();
          v82 = v24;
          if (!v49)
          {
            sub_1BC5A6A7C();
            v24 = v82;
          }
          v27 = v77;
          v77((char *)(v24[6] + v80[9] * v46), v4);
          v24 = v82;
          v50 = *(void **)(v82[7] + 8 * v46);
          sub_1BC5A3CB8(v46, (uint64_t)v82);
          swift_bridgeObjectRelease();
        }
        else
        {
          v50 = 0;
          v27 = v77;
        }
        v27(v9, v4);

        v30 = v50;
        goto LABEL_13;
      }
      a1 = swift_isUniquelyReferenced_nonNull_native();
      v82 = v24;
      v14 = v9;
      v19 = sub_1BC5595C0((uint64_t)v9);
      v40 = v24[2];
      v41 = (v39 & 1) == 0;
      v42 = v40 + v41;
      if (__OFADD__(v40, v41))
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        swift_bridgeObjectRetain_n();
        v22 = sub_1BC62D3B8();
        swift_bridgeObjectRelease();
        v70 = (uint64_t *)v14;
        if (!v22)
          goto LABEL_53;
        goto LABEL_9;
      }
      v43 = v39;
      if (v24[3] >= v42)
      {
        if ((a1 & 1) != 0)
        {
          v24 = v82;
          if ((v39 & 1) == 0)
            goto LABEL_35;
        }
        else
        {
          sub_1BC5A6A7C();
          v24 = v82;
          if ((v43 & 1) == 0)
            goto LABEL_35;
        }
      }
      else
      {
        sub_1BC3C5C60(v42, a1);
        v44 = sub_1BC5595C0((uint64_t)v9);
        if ((v43 & 1) != (v45 & 1))
          goto LABEL_60;
        v19 = v44;
        v24 = v82;
        if ((v43 & 1) == 0)
        {
LABEL_35:
          v24[(v19 >> 6) + 8] |= 1 << v19;
          v4 = v75;
          v72((char *)(v24[6] + v80[9] * v19), v9, v75);
          *(_QWORD *)(v24[7] + 8 * v19) = v38;
          v51 = v24[2];
          v52 = __OFADD__(v51, 1);
          v53 = v51 + 1;
          if (v52)
            goto LABEL_51;
          v24[2] = v53;
          goto LABEL_12;
        }
      }
      v26 = v24[7];

      *(_QWORD *)(v26 + 8 * v19) = v38;
      v4 = v75;
LABEL_12:
      swift_bridgeObjectRelease();
      v27 = v77;
      v77(v9, v4);
      v19 = v76;
      v25 = v71;
LABEL_13:
      v28 = v73;
LABEL_14:
      ++v23;

      v27(v25, v4);
      a1 = v78;
      if (v28 == v23)
        goto LABEL_53;
    }
  }
  if (!v21)
  {
    v54 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v54)
      goto LABEL_43;
LABEL_55:
    swift_bridgeObjectRelease();
LABEL_56:
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v68 = swift_isUniquelyReferenced_nonNull_native();
    v81 = *(_QWORD *)v14;
    *(_QWORD *)v14 = 0x8000000000000000;
    sub_1BC48CEAC((uint64_t)v18, a1, v68);
    *(_QWORD *)v14 = v81;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return (uint64_t)v18;
  }
  swift_bridgeObjectRetain();
  v54 = sub_1BC62D3B8();
  if (!v54)
    goto LABEL_55;
LABEL_43:
  v70 = (uint64_t *)v14;
  v82 = v18;
  sub_1BC62D28C();
  if ((v54 & 0x8000000000000000) == 0)
  {
    v55 = 0;
    v56 = v19 & 0xC000000000000001;
    do
    {
      if (v56)
        v57 = (id)MEMORY[0x1BCCF24CC](v55, v19);
      else
        v57 = *(id *)(v19 + 8 * v55 + 32);
      v58 = v57;
      ++v55;
      v59 = objc_msgSend(v57, sel_date);
      sub_1BC62A724();

      v60 = v79;
      HKTimeScope.bucketingDate(for:)((uint64_t)v6, v78, v79);
      v61 = (void (*)(char *, uint64_t))v80[1];
      v62 = v75;
      v61(v6, v75);
      v63 = (void *)sub_1BC62A700();
      v61(v60, v62);
      v64 = objc_msgSend(v58, sel_chartableCodedQuantitySetByChangingDate_, v63);

      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v19 = v76;
    }
    while (v54 != v55);
    v18 = v82;
    swift_bridgeObjectRelease();
    a1 = v78;
    v14 = (char *)v70;
    goto LABEL_56;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

id MedicalRecordChartDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicalRecordChartDataSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicalRecordChartDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordChartDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC4B7188(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC505EE8();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BC4B7200(v6);
  return sub_1BC62D274();
}

void sub_1BC4B7200(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  void *v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  char v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v131 = sub_1BC62A760();
  v129 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v130 = (char *)&v117 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v117 - v4;
  v6 = a1[1];
  v7 = sub_1BC62D520();
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_134;
    if (v6)
      sub_1BC4B7AEC(0, v6, 1, a1);
    return;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_142;
  v122 = v7;
  v119 = a1;
  if (v6 < 2)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    v133 = MEMORY[0x1E0DEE9D8];
    v127 = (id *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_101:
      v109 = v128;
      if (v15 >= 2)
      {
        v110 = *v119;
        do
        {
          v111 = v15 - 2;
          if (v15 < 2)
            goto LABEL_129;
          if (!v110)
            goto LABEL_141;
          v112 = v11;
          v113 = *(_QWORD *)&v11[16 * v111 + 32];
          v114 = *(_QWORD *)&v11[16 * v15 + 24];
          sub_1BC4B7CB4((void **)(v110 + 8 * v113), (id *)(v110 + 8 * *(_QWORD *)&v11[16 * v15 + 16]), (id *)(v110 + 8 * v114), v127);
          if (v109)
            break;
          if (v114 < v113)
            goto LABEL_130;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v112 = sub_1BC504414((uint64_t)v112);
          if (v111 >= *((_QWORD *)v112 + 2))
            goto LABEL_131;
          v115 = &v112[16 * v111 + 32];
          *(_QWORD *)v115 = v113;
          *((_QWORD *)v115 + 1) = v114;
          v116 = *((_QWORD *)v112 + 2);
          if (v15 > v116)
            goto LABEL_132;
          memmove(&v112[16 * v15 + 16], &v112[16 * v15 + 32], 16 * (v116 - v15));
          v11 = v112;
          *((_QWORD *)v112 + 2) = v116 - 1;
          v15 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BC62C890();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v9 = v8 >> 1;
    sub_1BC34B6A0(0, &qword_1EF42CA48);
    v10 = sub_1BC62C8CC();
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    v127 = (id *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v133 = v10;
  }
  v12 = 0;
  v13 = *a1;
  v14 = *a1 + 16;
  v120 = *a1 - 8;
  v121 = v14;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v125 = v6;
  v132 = v13;
  while (1)
  {
    v16 = v12 + 1;
    v124 = v12;
    if (v12 + 1 < v6)
    {
      v17 = v11;
      v18 = *(void **)(v13 + 8 * v12);
      v19 = *(id *)(v13 + 8 * v16);
      v20 = v18;
      v21 = objc_msgSend(v19, sel_date);
      sub_1BC62A724();

      v22 = objc_msgSend(v20, sel_date);
      v23 = v130;
      sub_1BC62A724();

      LODWORD(v126) = sub_1BC62A718();
      v24 = *(void (**)(char *, uint64_t))(v129 + 8);
      v25 = v23;
      v26 = v131;
      v24(v25, v131);
      v24(v5, v26);

      v6 = v125;
      v16 = v12 + 2;
      if (v12 + 2 < v6)
      {
        v27 = (id *)(v121 + 8 * v12);
        while (1)
        {
          v28 = v16;
          v29 = *(v27 - 1);
          v30 = *v27;
          v31 = v29;
          v32 = objc_msgSend(v30, sel_date);
          sub_1BC62A724();

          v33 = objc_msgSend(v31, sel_date);
          v34 = v130;
          sub_1BC62A724();

          LODWORD(v33) = sub_1BC62A718();
          v35 = v34;
          v36 = v131;
          v24(v35, v131);
          v24(v5, v36);

          if (((v126 ^ v33) & 1) != 0)
            break;
          v16 = v28 + 1;
          ++v27;
          v6 = v125;
          if (v125 == v28 + 1)
          {
            v16 = v125;
            goto LABEL_22;
          }
        }
        v6 = v125;
        v16 = v28;
LABEL_22:
        v12 = v124;
      }
      v11 = v17;
      v13 = v132;
      if ((v126 & 1) != 0)
      {
        if (v16 < v12)
          goto LABEL_135;
        if (v12 < v16)
        {
          v37 = (uint64_t *)(v120 + 8 * v16);
          v38 = v16;
          v39 = v12;
          v40 = (uint64_t *)(v132 + 8 * v12);
          do
          {
            if (v39 != --v38)
            {
              if (!v13)
                goto LABEL_140;
              v41 = *v40;
              *v40 = *v37;
              *v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v16 < v6)
    {
      if (__OFSUB__(v16, v12))
        goto LABEL_133;
      if (v16 - v12 < v122)
        break;
    }
LABEL_50:
    if (v16 < v12)
      goto LABEL_128;
    v56 = v11;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v11 = v56;
    else
      v11 = sub_1BC503AB4(0, *((_QWORD *)v56 + 2) + 1, 1, v56);
    v58 = *((_QWORD *)v11 + 2);
    v57 = *((_QWORD *)v11 + 3);
    v15 = v58 + 1;
    v13 = v132;
    if (v58 >= v57 >> 1)
    {
      v108 = sub_1BC503AB4((char *)(v57 > 1), v58 + 1, 1, v11);
      v13 = v132;
      v11 = v108;
    }
    *((_QWORD *)v11 + 2) = v15;
    v59 = v11 + 32;
    v60 = &v11[16 * v58 + 32];
    *(_QWORD *)v60 = v12;
    *((_QWORD *)v60 + 1) = v16;
    v126 = v16;
    if (v58)
    {
      while (1)
      {
        v61 = v15 - 1;
        if (v15 >= 4)
        {
          v66 = &v59[16 * v15];
          v67 = *((_QWORD *)v66 - 8);
          v68 = *((_QWORD *)v66 - 7);
          v72 = __OFSUB__(v68, v67);
          v69 = v68 - v67;
          if (v72)
            goto LABEL_117;
          v71 = *((_QWORD *)v66 - 6);
          v70 = *((_QWORD *)v66 - 5);
          v72 = __OFSUB__(v70, v71);
          v64 = v70 - v71;
          v65 = v72;
          if (v72)
            goto LABEL_118;
          v73 = v15 - 2;
          v74 = &v59[16 * v15 - 32];
          v76 = *(_QWORD *)v74;
          v75 = *((_QWORD *)v74 + 1);
          v72 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          if (v72)
            goto LABEL_120;
          v72 = __OFADD__(v64, v77);
          v78 = v64 + v77;
          if (v72)
            goto LABEL_123;
          if (v78 >= v69)
          {
            v96 = &v59[16 * v61];
            v98 = *(_QWORD *)v96;
            v97 = *((_QWORD *)v96 + 1);
            v72 = __OFSUB__(v97, v98);
            v99 = v97 - v98;
            if (v72)
              goto LABEL_127;
            v89 = v64 < v99;
            goto LABEL_87;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v90 = *((_QWORD *)v11 + 4);
            v91 = *((_QWORD *)v11 + 5);
            v72 = __OFSUB__(v91, v90);
            v83 = v91 - v90;
            v84 = v72;
            goto LABEL_81;
          }
          v63 = *((_QWORD *)v11 + 4);
          v62 = *((_QWORD *)v11 + 5);
          v72 = __OFSUB__(v62, v63);
          v64 = v62 - v63;
          v65 = v72;
        }
        if ((v65 & 1) != 0)
          goto LABEL_119;
        v73 = v15 - 2;
        v79 = &v59[16 * v15 - 32];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v82 = __OFSUB__(v80, v81);
        v83 = v80 - v81;
        v84 = v82;
        if (v82)
          goto LABEL_122;
        v85 = &v59[16 * v61];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v72 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v72)
          goto LABEL_125;
        if (__OFADD__(v83, v88))
          goto LABEL_126;
        if (v83 + v88 >= v64)
        {
          v89 = v64 < v88;
LABEL_87:
          if (v89)
            v61 = v73;
          goto LABEL_89;
        }
LABEL_81:
        if ((v84 & 1) != 0)
          goto LABEL_121;
        v92 = &v59[16 * v61];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v72 = __OFSUB__(v93, v94);
        v95 = v93 - v94;
        if (v72)
          goto LABEL_124;
        if (v95 < v83)
          goto LABEL_14;
LABEL_89:
        v100 = v61 - 1;
        if (v61 - 1 >= v15)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13)
          goto LABEL_139;
        v101 = v11;
        v102 = &v59[16 * v100];
        v103 = *(_QWORD *)v102;
        v104 = &v59[16 * v61];
        v105 = *((_QWORD *)v104 + 1);
        v106 = v128;
        sub_1BC4B7CB4((void **)(v13 + 8 * *(_QWORD *)v102), (id *)(v13 + 8 * *(_QWORD *)v104), (id *)(v13 + 8 * v105), v127);
        v128 = v106;
        if (v106)
          goto LABEL_112;
        if (v105 < v103)
          goto LABEL_114;
        if (v61 > *((_QWORD *)v101 + 2))
          goto LABEL_115;
        *(_QWORD *)v102 = v103;
        *(_QWORD *)&v59[16 * v100 + 8] = v105;
        v107 = *((_QWORD *)v101 + 2);
        if (v61 >= v107)
          goto LABEL_116;
        v15 = v107 - 1;
        memmove(&v59[16 * v61], v104 + 16, 16 * (v107 - 1 - v61));
        v11 = v101;
        *((_QWORD *)v101 + 2) = v107 - 1;
        v13 = v132;
        if (v107 <= 2)
          goto LABEL_14;
      }
    }
    v15 = 1;
LABEL_14:
    v6 = v125;
    v12 = v126;
    if (v126 >= v125)
      goto LABEL_101;
  }
  if (__OFADD__(v12, v122))
    goto LABEL_136;
  if (v12 + v122 >= v6)
    v42 = v6;
  else
    v42 = v12 + v122;
  if (v42 >= v12)
  {
    if (v16 != v42)
    {
      v118 = v11;
      v43 = v120 + 8 * v16;
      v123 = v42;
      do
      {
        v44 = v16;
        v45 = *(void **)(v13 + 8 * v16);
        v126 = v43;
        while (1)
        {
          v46 = *(void **)v43;
          v47 = v45;
          v48 = v46;
          v49 = objc_msgSend(v47, sel_date);
          sub_1BC62A724();

          v50 = objc_msgSend(v48, sel_date);
          v51 = v130;
          sub_1BC62A724();

          LOBYTE(v50) = sub_1BC62A718();
          v52 = *(void (**)(char *, uint64_t))(v129 + 8);
          v53 = v51;
          v54 = v131;
          v52(v53, v131);
          v52(v5, v54);

          if ((v50 & 1) == 0)
            break;
          v13 = v132;
          if (!v132)
            goto LABEL_138;
          v55 = *(void **)v43;
          v45 = *(void **)(v43 + 8);
          *(_QWORD *)v43 = v45;
          *(_QWORD *)(v43 + 8) = v55;
          v43 -= 8;
          if (v44 == ++v12)
            goto LABEL_43;
        }
        v13 = v132;
LABEL_43:
        v16 = v44 + 1;
        v43 = v126 + 8;
        v12 = v124;
      }
      while (v44 + 1 != v123);
      v16 = v123;
      v11 = v118;
    }
    goto LABEL_50;
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  sub_1BC62D388();
  __break(1u);
}

void sub_1BC4B7AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a1;
  v7 = sub_1BC62A760();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v30 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  v27 = a2;
  if (a3 != a2)
  {
    v33 = *a4;
    v12 = v33 + 8 * a3 - 8;
LABEL_5:
    v13 = *(void **)(v33 + 8 * a3);
    v14 = v28;
    v29 = v12;
    while (1)
    {
      v15 = *(void **)v12;
      v16 = v13;
      v17 = v15;
      v18 = objc_msgSend(v16, sel_date);
      sub_1BC62A724();

      v19 = objc_msgSend(v17, sel_date);
      v20 = v30;
      sub_1BC62A724();

      LOBYTE(v19) = sub_1BC62A718();
      v21 = a3;
      v22 = *(void (**)(char *, uint64_t))(v31 + 8);
      v23 = v20;
      v24 = v32;
      v22(v23, v32);
      v22(v11, v24);
      a3 = v21;

      if ((v19 & 1) == 0)
      {
LABEL_4:
        a3 = v21 + 1;
        v12 = v29 + 8;
        if (v21 + 1 == v27)
          return;
        goto LABEL_5;
      }
      if (!v33)
        break;
      v25 = *(void **)v12;
      v13 = *(void **)(v12 + 8);
      *(_QWORD *)v12 = v13;
      *(_QWORD *)(v12 + 8) = v25;
      v12 -= 8;
      if (v21 == ++v14)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BC4B7CB4(void **a1, id *a2, id *a3, id *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  id *v28;
  id *v29;
  unint64_t v30;
  id *v31;
  id *v32;
  unint64_t v33;
  id *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  id *v45;
  uint64_t result;
  uint64_t v47;
  void **v48;
  id *v49;
  unint64_t v50;
  void **v51;
  id *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void **v58;
  id *v59;

  v8 = sub_1BC62A760();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  MEMORY[0x1E0C80A78](v8);
  v54 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v52 = a3;
  v53 = (char *)&v47 - v11;
  v12 = (char *)a2 - (char *)a1;
  v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v13 = (char *)a2 - (char *)a1;
  v14 = v13 >> 3;
  v15 = (char *)a3 - (char *)a2;
  v16 = v15 / 8;
  v59 = a1;
  v49 = a4;
  v58 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_43;
    v29 = v49;
    if (v49 != a2 || &a2[v16] <= v49)
      memmove(v49, a2, 8 * v16);
    v30 = (unint64_t)&v29[v16];
    v57 = (_QWORD *)v30;
    v59 = a2;
    if (v15 < 8 || a1 >= a2)
      goto LABEL_42;
    v31 = v52 - 1;
    v32 = a2;
    v48 = a1;
    while (1)
    {
      v52 = a2;
      v50 = v30;
      v51 = v31 + 1;
      v34 = (id *)(v30 - 8);
      v35 = *--v32;
      v36 = *(id *)(v30 - 8);
      v37 = v35;
      v38 = objc_msgSend(v36, sel_date);
      v39 = v53;
      sub_1BC62A724();

      v40 = objc_msgSend(v37, sel_date);
      v41 = v54;
      sub_1BC62A724();

      LOBYTE(v40) = sub_1BC62A718();
      v42 = *(void (**)(char *, uint64_t))(v55 + 8);
      v43 = v41;
      v44 = v56;
      v42(v43, v56);
      v42(v39, v44);

      if ((v40 & 1) != 0)
        break;
      v57 = v34;
      v32 = v52;
      if ((unint64_t)v51 < v50 || (unint64_t)v31 >= v50)
      {
        *v31 = *v34;
        v30 = (unint64_t)v34;
        goto LABEL_30;
      }
      v33 = (unint64_t)v48;
      v45 = v49;
      if (v51 != (void **)v50)
        *v31 = *v34;
      v30 = (unint64_t)v34;
      if (v34 <= v45)
        goto LABEL_42;
LABEL_31:
      --v31;
      a2 = v32;
      if ((unint64_t)v32 <= v33)
        goto LABEL_42;
    }
    v30 = v50;
    if (v51 != v52 || v31 >= v52)
      *v31 = *v32;
    v59 = v32;
LABEL_30:
    v33 = (unint64_t)v48;
    if (v30 <= (unint64_t)v49)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    v17 = v49;
    if (v49 != a1 || &a1[v14] <= v49)
      memmove(v49, a1, 8 * v14);
    v51 = &v17[v14];
    v57 = v51;
    if (v12 >= 8 && a2 < v52)
    {
      v18 = v53;
      do
      {
        v19 = *v17;
        v20 = *a2;
        v21 = v19;
        v22 = objc_msgSend(v20, sel_date);
        sub_1BC62A724();

        v23 = objc_msgSend(v21, sel_date);
        v24 = v54;
        sub_1BC62A724();

        LOBYTE(v23) = sub_1BC62A718();
        v25 = *(void (**)(char *, uint64_t))(v55 + 8);
        v26 = v24;
        v27 = v56;
        v25(v26, v56);
        v25(v18, v27);

        if ((v23 & 1) != 0)
        {
          v28 = a2 + 1;
          if (a1 < a2 || a1 >= v28 || a1 != a2)
            *a1 = *a2;
        }
        else
        {
          if (a1 != v17)
            *a1 = *v17;
          v58 = ++v17;
          v28 = a2;
        }
        v59 = ++a1;
        if (v17 >= v51)
          break;
        a2 = v28;
      }
      while (v28 < v52);
    }
LABEL_42:
    sub_1BC503C80(&v59, &v58, &v57);
    return 1;
  }
LABEL_43:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

id sub_1BC4B811C(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  char *v6;
  void **v12;
  void *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;

  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_cachedBucketedSets] = MEMORY[0x1E0DEE9E0];
  v12 = (void **)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors];
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_type] = a6;
  sub_1BC4B825C(a1, (uint64_t)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining]);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_dataTransformer] = a2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit] = a3;
  swift_beginAccess();
  v13 = *v12;
  *v12 = a4;
  v14 = v6;
  swift_unknownObjectRetain();
  v15 = a3;
  v16 = a4;

  v14[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_collapseIntoRangePoints] = a5;
  v19.receiver = v14;
  v19.super_class = (Class)type metadata accessor for MedicalRecordChartDataSource();
  v17 = objc_msgSendSuper2(&v19, sel_init);
  sub_1BC348D78(a1, (uint64_t (*)(_QWORD))sub_1BC4B82A0);
  return v17;
}

uint64_t sub_1BC4B825C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC4B82A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC4B82A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4329E0)
  {
    sub_1BC4B82F4();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4329E0);
  }
}

unint64_t sub_1BC4B82F4()
{
  unint64_t result;

  result = qword_1EF42CD58;
  if (!qword_1EF42CD58)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42CD58);
  }
  return result;
}

uint64_t sub_1BC4B8348(unint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v18;

  v4 = v3;
  v6 = a1;
  if (a1 >> 62)
    goto LABEL_14;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v7)
      break;
    v18 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    v15 = v4;
    v16 = v6 & 0xC000000000000001;
    v9 = (_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
    v10 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_dataTransformer);
    a2 = *(_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_type);
    swift_beginAccess();
    v11 = 0;
    v12 = v6;
    while (v7 != v11)
    {
      if (v16)
        v13 = (id)MEMORY[0x1BCCF24CC](v11, v6);
      else
        v13 = *(id *)(v6 + 8 * v11 + 32);
      v14 = v13;
      ++v11;
      v4 = objc_msgSend(v10, sel_chartPointFor_in_with_dataSourceType_, v13, *v9, a3, a2, v15);

      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      v6 = v12;
      if (v7 == v11)
        return v18;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v7 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1BC4B84F8(void *a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  char *v6;
  void **v12;
  void *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;
  __int128 v20;
  __int128 v21;
  _UNKNOWN **v22;

  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_cachedBucketedSets] = MEMORY[0x1E0DEE9E0];
  v12 = (void **)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors];
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_type] = a6;
  if (a1)
  {
    *((_QWORD *)&v21 + 1) = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4294F8);
    v22 = &protocol witness table for HKConcept;
    *(_QWORD *)&v20 = a1;
  }
  else
  {
    v22 = 0;
    v20 = 0u;
    v21 = 0u;
  }
  sub_1BC4B897C((uint64_t)&v20, (uint64_t)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining]);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_dataTransformer] = a2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit] = a3;
  swift_beginAccess();
  v13 = *v12;
  *v12 = a4;
  v14 = v6;
  v15 = a1;
  swift_unknownObjectRetain();
  v16 = a3;
  v17 = a4;

  v14[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_collapseIntoRangePoints] = a5 & 1;
  v19.receiver = v14;
  v19.super_class = (Class)type metadata accessor for MedicalRecordChartDataSource();
  return objc_msgSendSuper2(&v19, sel_init);
}

unint64_t sub_1BC4B8668()
{
  unint64_t result;

  result = qword_1EF4354D0;
  if (!qword_1EF4354D0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF4354D0);
  }
  return result;
}

uint64_t sub_1BC4B86BC(id *a1)
{
  return sub_1BC4B5CB8(a1) & 1;
}

unint64_t sub_1BC4B86D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42EC50;
  if (!qword_1EF42EC50)
  {
    v1 = sub_1BC62A760();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42EC50);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordChartDataSource()
{
  return objc_opt_self();
}

unint64_t sub_1BC4B8744()
{
  unint64_t result;

  result = qword_1EF432A38;
  if (!qword_1EF432A38)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for MedicalRecordChartDataSourceType, &type metadata for MedicalRecordChartDataSourceType);
    atomic_store(result, (unint64_t *)&qword_1EF432A38);
  }
  return result;
}

id sub_1BC4B8788@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

id sub_1BC4B87DC@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors, a2);
}

void sub_1BC4B87E8(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1BC38B3E0(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors);
}

id sub_1BC4B8804@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange, a2);
}

void sub_1BC4B8810(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1BC38B3E0(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange);
}

id sub_1BC4B882C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange, a2);
}

void sub_1BC4B8838(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1BC38B3E0(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange);
}

ValueMetadata *type metadata accessor for MedicalRecordChartDataSourceType()
{
  return &type metadata for MedicalRecordChartDataSourceType;
}

uint64_t method lookup function for MedicalRecordChartDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.unit.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.preferredColors.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.chartableXRange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.chartableYRange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.displayName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.__allocating_init(chartDefining:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.__allocating_init(concept:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.numberOfDataPoints(in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.graphSeries(withMainColor:verticalAxis:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.chartDisplayType(verticalAxis:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.take(chartableCodedQuantitySets:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t sub_1BC4B897C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC4B82A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC4B89C0(id *a1)
{
  return sub_1BC4B86BC(a1) & 1;
}

ValueMetadata *type metadata accessor for PDF()
{
  return &type metadata for PDF;
}

uint64_t sub_1BC4B89E8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;

  v25 = a2;
  v26 = a3;
  sub_1BC4B98B8(0, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN, a4);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  sub_1BC4B9864(0, &qword_1EF432A78, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (uint64_t *)((char *)&v24 - v15);
  v17 = (void *)MEMORY[0x1BCCF2DD8](v14);
  sub_1BC365E04(a1, v16);
  objc_autoreleasePoolPop(v17);
  sub_1BC4B98FC((uint64_t)v16, (uint64_t)v13, &qword_1EF432A78, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    v18 = 0;
  }
  else
  {
    v19 = sub_1BC4B9988((uint64_t)v13, (uint64_t)v9, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN);
    v21 = (uint64_t)v25;
    v20 = v26;
    if ((v25(v19) & 1) != 0)
      v18 = 0;
    else
      v18 = sub_1BC4B8BCC((uint64_t)v9, v21, v20, v22);
    sub_1BC4B8DFC((uint64_t)v9, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN, v22);
  }
  sub_1BC4B994C((uint64_t)v16, &qword_1EF432A78, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN);
  return v18;
}

uint64_t sub_1BC4B8BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t result;
  uint64_t v23;
  _QWORD aBlock[6];
  __int128 v25;

  sub_1BC4B98B8(0, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)aBlock - v10;
  v12 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v13 = sub_1BC62CCBC();

  v25 = xmmword_1BC6436B0;
  sub_1BC4B960C(a1, (uint64_t)v11, v14, v15);
  v16 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  sub_1BC4B9988((uint64_t)v11, v18 + v16, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN);
  v19 = (_QWORD *)(v18 + v17);
  *v19 = a2;
  v19[1] = a3;
  *(_QWORD *)(v18 + ((v17 + 23) & 0xFFFFFFFFFFFFFFF8)) = &v25;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1BC4B97DC;
  *(_QWORD *)(v20 + 24) = v18;
  aBlock[4] = sub_1BC3AABB0;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC4E2FD0;
  aBlock[3] = &block_descriptor_38;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend((id)v13, sel_performAsCurrentTraitCollection_, v21);

  _Block_release(v21);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v13 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v23 = v25;
    swift_release();
    return v23;
  }
  return result;
}

uint64_t sub_1BC4B8DFC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  sub_1BC4B98B8(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BC4B8E38(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  return sub_1BC62BBD0();
}

uint64_t sub_1BC4B8E74(uint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  unint64_t v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (**v63)(_QWORD, _QWORD, _QWORD, _QWORD);
  char v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  id v76;
  id v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  uint64_t (**v82)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t (**v109)(_QWORD, _QWORD, _QWORD, _QWORD);
  int *v110;
  uint64_t (*v111)(void);
  uint64_t v112;
  char v113;
  uint64_t v114[4];

  v103 = (uint64_t *)a4;
  sub_1BC4B98B8(0, (unint64_t *)&qword_1EF432A80, (uint64_t)&_s13PaginatedDataVN, a4);
  v107 = *(_QWORD *)(v6 - 8);
  v108 = v6;
  MEMORY[0x1E0C80A78](v6);
  v102 = (uint64_t)&v94 - v7;
  sub_1BC4B98B8(0, &qword_1EF432A88, (uint64_t)&_s9SizedDataVN, v8);
  v109 = (uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))*((_QWORD *)v9 - 1);
  v110 = v9;
  MEMORY[0x1E0C80A78](v9);
  v105 = (uint64_t)&v94 - v10;
  sub_1BC4B9864(0, &qword_1EF432A90, (unint64_t *)&qword_1EF432A80, (uint64_t)&_s13PaginatedDataVN);
  v12 = MEMORY[0x1E0C80A78](v11);
  v104 = (uint64_t)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v106 = (char *)&v94 - v14;
  sub_1BC4B98B8(0, &qword_1EF4303F0, (uint64_t)&_s10SortedDataVN, v15);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (uint64_t *)((char *)&v94 - v19);
  sub_1BC4B9864(0, &qword_1EF432A98, &qword_1EF432A88, (uint64_t)&_s9SizedDataVN);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v112 = (uint64_t)&v94 - v25;
  sub_1BC4B9864(0, &qword_1EF432AA0, &qword_1EF4303F0, (uint64_t)&_s10SortedDataVN);
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (uint64_t *)((char *)&v94 - v31);
  v33 = (void *)MEMORY[0x1BCCF2DD8](v30);
  sub_1BC44C854(a1, v32);
  objc_autoreleasePoolPop(v33);
  v111 = a2;
  if ((a2() & 1) != 0)
    return sub_1BC4B994C((uint64_t)v32, &qword_1EF432AA0, &qword_1EF4303F0, (uint64_t)&_s10SortedDataVN);
  sub_1BC4B98FC((uint64_t)v32, (uint64_t)v29, &qword_1EF432AA0, &qword_1EF4303F0, (uint64_t)&_s10SortedDataVN);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v29, 1, v17) == 1)
  {
    v34 = v110;
    v35 = v112;
    v36 = ((uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))v109)[7](v112, 1, 1, v110);
    v37 = v111;
    if ((((uint64_t (*)(uint64_t))v111)(v36) & 1) != 0)
      goto LABEL_17;
  }
  else
  {
    v38 = sub_1BC4B9988((uint64_t)v29, (uint64_t)v20, &qword_1EF4303F0, (uint64_t)&_s10SortedDataVN);
    v39 = (void *)MEMORY[0x1BCCF2DD8](v38);
    v35 = v112;
    sub_1BC596554(v20, v112);
    objc_autoreleasePoolPop(v39);
    v41 = sub_1BC4B8DFC((uint64_t)v20, &qword_1EF4303F0, (uint64_t)&_s10SortedDataVN, v40);
    v34 = v110;
    v37 = v111;
    if ((((uint64_t (*)(uint64_t))v111)(v41) & 1) != 0)
    {
LABEL_17:
      sub_1BC4B994C(v35, &qword_1EF432A98, &qword_1EF432A88, (uint64_t)&_s9SizedDataVN);
      return sub_1BC4B994C((uint64_t)v32, &qword_1EF432AA0, &qword_1EF4303F0, (uint64_t)&_s10SortedDataVN);
    }
  }
  sub_1BC4B98FC(v35, (uint64_t)v24, &qword_1EF432A98, &qword_1EF432A88, (uint64_t)&_s9SizedDataVN);
  if (((unsigned int (*)(char *, uint64_t, int *))v109[6])(v24, 1, v34) != 1)
  {
    v47 = (uint64_t)v24;
    v48 = v105;
    v49 = sub_1BC4B9988(v47, v105, &qword_1EF432A88, (uint64_t)&_s9SizedDataVN);
    v50 = (int *)MEMORY[0x1BCCF2DD8](v49);
    v51 = *(_QWORD *)(v48 + 112);
    v52 = *(double *)(v48 + 160);
    v53 = sub_1BC3F4BB0(v52);
    v54 = sub_1BC384F34(v51, *(uint64_t (**)(uint64_t))(v48 + 200), v53, *(_QWORD *)(v48 + 208), *(uint64_t (**)(uint64_t))(v48 + 168), *(_QWORD *)(v48 + 176), *(uint64_t (**)(unint64_t, uint64_t))(v48 + 232), *(_QWORD *)(v48 + 240), *(double (**)(void))(v48 + 264), *(_QWORD *)(v48 + 272), 40);
    if (v54)
    {
      v55 = v54;
      v100 = *(id *)v48;
      v56 = v100;
      v57 = *(_QWORD *)(v48 + 8);
      v58 = *(_QWORD *)(v48 + 16);
      v101 = *(id *)(v48 + 24);
      v59 = v101;
      v60 = *(_QWORD *)(v48 + 32);
      v61 = *(_QWORD *)(v48 + 40);
      v62 = *(_QWORD *)(v48 + 56);
      v109 = *(uint64_t (***)(_QWORD, _QWORD, _QWORD, _QWORD))(v48 + 48);
      v63 = v109;
      v95 = v62;
      v94 = *(_QWORD *)(v48 + 64);
      LOBYTE(v62) = *(_BYTE *)(v48 + 72);
      v96 = *(void **)(v48 + 80);
      v98 = *(_QWORD *)(v48 + 88);
      v97 = *(_QWORD *)(v48 + 96);
      v64 = *(_BYTE *)(v48 + 104);
      v99 = *(void **)(v48 + 120);
      v65 = *(_QWORD *)(v48 + 128);
      v66 = *(_QWORD *)(v48 + 136);
      v110 = v50;
      v67 = *(void **)(v48 + 144);
      v68 = *(_QWORD *)(v48 + 152);
      LOBYTE(v114[0]) = v62;
      v69 = v48 + v34[7];
      v70 = v108;
      v42 = (uint64_t)v106;
      v71 = (uint64_t)&v106[*(int *)(v108 + 28)];
      v113 = v64;
      sub_1BC36D6D8(v69, v71);
      *(_QWORD *)v42 = v56;
      *(_QWORD *)(v42 + 8) = v57;
      *(_QWORD *)(v42 + 16) = v58;
      *(_QWORD *)(v42 + 24) = v59;
      *(_QWORD *)(v42 + 32) = v60;
      *(_QWORD *)(v42 + 40) = v61;
      v72 = v95;
      *(_QWORD *)(v42 + 48) = v63;
      *(_QWORD *)(v42 + 56) = v72;
      *(_QWORD *)(v42 + 64) = v94;
      *(_BYTE *)(v42 + 72) = v114[0];
      v73 = v96;
      v74 = v98;
      *(_QWORD *)(v42 + 80) = v96;
      *(_QWORD *)(v42 + 88) = v74;
      *(_QWORD *)(v42 + 96) = v97;
      *(_BYTE *)(v42 + 104) = v113;
      v75 = v99;
      *(_QWORD *)(v42 + 112) = v55;
      *(_QWORD *)(v42 + 120) = v75;
      *(_QWORD *)(v42 + 128) = v65;
      *(_QWORD *)(v42 + 136) = v66;
      *(_QWORD *)(v42 + 144) = v67;
      *(_QWORD *)(v42 + 152) = v68;
      *(double *)(v42 + 160) = v52;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v107 + 56))(v42, 0, 1, v70);
      v76 = v73;
      v37 = v111;
      v35 = v112;
      v77 = v75;
      v78 = v105;
      v79 = v67;
      v50 = v110;
      v80 = v100;
      v81 = v101;
      v82 = v109;
    }
    else
    {
      v78 = v48;
      v42 = (uint64_t)v106;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56))(v106, 1, 1, v108);
    }
    objc_autoreleasePoolPop(v50);
    v93 = sub_1BC4B8DFC(v78, &qword_1EF432A88, (uint64_t)&_s9SizedDataVN, v92);
    if ((((uint64_t (*)(uint64_t))v37)(v93) & 1) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
  v42 = (uint64_t)v106;
  v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56))(v106, 1, 1, v108);
  if ((((uint64_t (*)(uint64_t))v37)(v43) & 1) != 0)
  {
LABEL_16:
    sub_1BC4B994C(v42, &qword_1EF432A90, (unint64_t *)&qword_1EF432A80, (uint64_t)&_s13PaginatedDataVN);
    goto LABEL_17;
  }
LABEL_8:
  v44 = v104;
  sub_1BC4B98FC(v42, v104, &qword_1EF432A90, (unint64_t *)&qword_1EF432A80, (uint64_t)&_s13PaginatedDataVN);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v44, 1, v108) == 1)
  {
    v45 = 0;
    v46 = 0xF000000000000000;
  }
  else
  {
    v83 = v102;
    v84 = sub_1BC4B9988(v44, v102, (unint64_t *)&qword_1EF432A80, (uint64_t)&_s13PaginatedDataVN);
    v85 = (void *)MEMORY[0x1BCCF2DD8](v84);
    sub_1BC59B3D4(v83, v114);
    objc_autoreleasePoolPop(v85);
    v45 = v114[0];
    v46 = v114[1];
    v86 = v83;
    v35 = v112;
    sub_1BC4B8DFC(v86, (unint64_t *)&qword_1EF432A80, (uint64_t)&_s13PaginatedDataVN, v87);
  }
  v88 = v103;
  sub_1BC4B994C(v42, &qword_1EF432A90, (unint64_t *)&qword_1EF432A80, (uint64_t)&_s13PaginatedDataVN);
  sub_1BC4B994C(v35, &qword_1EF432A98, &qword_1EF432A88, (uint64_t)&_s9SizedDataVN);
  sub_1BC4B994C((uint64_t)v32, &qword_1EF432AA0, &qword_1EF4303F0, (uint64_t)&_s10SortedDataVN);
  v89 = *v88;
  v90 = v88[1];
  *v88 = v45;
  v88[1] = v46;
  return sub_1BC35E5E8(v89, v90);
}

uint64_t sub_1BC4B960C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  sub_1BC4B98B8(0, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BC4B9660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1BC4B98B8(0, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN, a4);
  v6 = v5;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v8 = v4 + ((v7 + 16) & ~v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v8 + *(int *)(v6 + 28);
  v10 = sub_1BC62A8D4();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v12 = (int *)_s13ConfigurationVMa();
  v13 = v9 + v12[5];
  v14 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);

  v15 = v9 + v12[9];
  v16 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);

  v11(v9 + v12[12], v10);
  return swift_deallocObject();
}

uint64_t sub_1BC4B97DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1BC4B98B8(0, &qword_1EF429B10, (uint64_t)&_s13FormattedDataVN, a4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC4B8E74((uint64_t *)(v4 + v7), *(uint64_t (**)(void))(v4 + v8), *(_QWORD *)(v4 + v8 + 8), *(_QWORD *)(v4 + ((v8 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BC4B983C()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

void sub_1BC4B9864(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC4B98B8(255, a3, a4, a4);
    v5 = sub_1BC62CFE0();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC4B98B8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = _s7PDFDataVMa(0, a3, a3, a4);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC4B98FC(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v7;

  sub_1BC4B9864(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BC4B994C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v5;

  sub_1BC4B9864(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BC4B9988(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1BC4B98B8(0, a3, a4, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t min<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1BC4B99EC(a1, a2, a3, a4, MEMORY[0x1E0DEDA20], a5);
}

uint64_t max<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1BC4B99EC(a1, a2, a3, a4, MEMORY[0x1E0DEDA10], a5);
}

uint64_t sub_1BC4B99EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(char *, char *, uint64_t, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, __n128);
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t, uint64_t);
  uint64_t v33;

  v31 = a4;
  v32 = a5;
  v33 = a6;
  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  v15 = sub_1BC62CFE0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v17 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v19 = (char *)&v30 - v18;
  v21 = (char *)&v30 + *(int *)(v20 + 48) - v18;
  v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v15 - 8) + 16);
  v22((char *)&v30 - v18, a1, v15, v17);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v21, a2, v15);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v15) = v23(v19, 1, a3);
  v24 = v23(v21, 1, a3);
  if ((_DWORD)v15 != 1)
  {
    v27 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
    if (v24 == 1)
    {
      v26 = v33;
      v27(v33, v19, a3);
    }
    else
    {
      v27((uint64_t)v14, v19, a3);
      v27((uint64_t)v11, v21, a3);
      v26 = v33;
      v32(v14, v11, a3, v31);
      v28 = *(void (**)(char *, uint64_t))(v9 + 8);
      v28(v11, a3);
      v28(v14, a3);
    }
    goto LABEL_8;
  }
  if (v24 != 1)
  {
    v26 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v33, v21, a3);
LABEL_8:
    v25 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v26, v25, 1, a3);
  }
  v25 = 1;
  v26 = v33;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v26, v25, 1, a3);
}

id sub_1BC4B9BFC()
{
  id *v0;

  return objc_msgSend(*v0, sel_sampleType);
}

id sub_1BC4B9C20()
{
  id *v0;

  return objc_msgSend(*v0, sel_predicate);
}

uint64_t CategoryRecordQueryDescription.category.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC3B226C(v1 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_category, a1);
}

id CategoryRecordQueryDescription.queryDescriptor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
}

id sub_1BC4B9C68()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor), sel_sampleType);
}

id sub_1BC4B9C94()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor), sel_predicate);
}

void sub_1BC4B9CC4()
{
  uint64_t v0;
  id v1;

  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  sub_1BC62CEC0();

}

uint64_t CategoryRecordQueryDescription.deinit()
{
  uint64_t v0;

  sub_1BC3B22E8(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_category);

  return v0;
}

uint64_t CategoryRecordQueryDescription.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BC3B22E8(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_category);

  return swift_deallocClassInstance();
}

uint64_t sub_1BC4B9DC0()
{
  sub_1BC62D670();
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62CEC0();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4B9E3C()
{
  sub_1BC62D670();
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62CEC0();
  return sub_1BC62D6AC();
}

void sub_1BC4B9EC0()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v2 = *(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  sub_1BC62CEC0();

}

uint64_t sub_1BC4B9F48()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  sub_1BC62D670();
  v1 = *v0;
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v2 = *(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  sub_1BC62CEC0();

  return sub_1BC62D6AC();
}

id sub_1BC4B9FD4()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor), sel_sampleType);
}

id sub_1BC4BA004()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor), sel_predicate);
}

uint64_t sub_1BC4BA034()
{
  return _s15HealthRecordsUI30CategoryRecordQueryDescriptionC2eeoiySbAC_ACtFZ_0();
}

uint64_t _s15HealthRecordsUI30CategoryRecordQueryDescriptionC2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  BrowseCategory.rawValue.getter();
  v1 = v0;
  v3 = v2;
  BrowseCategory.rawValue.getter();
  if (v1 == v5 && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      return 0;
  }
  sub_1BC3996E4();
  return sub_1BC62CEB4() & 1;
}

unint64_t sub_1BC4BA110()
{
  unint64_t result;
  uint64_t Description;

  result = qword_1ED6A51D8;
  if (!qword_1ED6A51D8)
  {
    Description = type metadata accessor for CategoryRecordQueryDescription();
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for CategoryRecordQueryDescription, Description);
    atomic_store(result, (unint64_t *)&qword_1ED6A51D8);
  }
  return result;
}

uint64_t type metadata accessor for CategoryRecordQueryDescription()
{
  uint64_t result;

  result = qword_1ED6A51E0;
  if (!qword_1ED6A51E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t dispatch thunk of QueryDescriptor.sampleType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of QueryDescriptor.predicate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BC4BA1A4()
{
  return type metadata accessor for CategoryRecordQueryDescription();
}

uint64_t sub_1BC4BA1AC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BrowseCategory();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CategoryRecordQueryDescription()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CategoryRecordQueryDescription.sampleType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of CategoryRecordQueryDescription.predicate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of CategoryRecordQueryDescription.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CategoryRecordQueryDescription.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t Result<>.init(success:failureOrNil:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  if (a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    *a4 = a2;
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, a1, a3);
  }
  sub_1BC35E44C();
  sub_1BC62D6C4();
  return swift_storeEnumTagMultiPayload();
}

uint64_t Result<>.init(successOrNil:failureOrNil:fallbackFailure:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;

  v10 = sub_1BC62CFE0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - v12;
  v14 = *(_QWORD *)(a4 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
    *(_QWORD *)a5 = a2;
    sub_1BC35E44C();
    sub_1BC62D6C4();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 32))(v13, a1, v10, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      *(_QWORD *)a5 = a3;
    }
    else
    {

      v20 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v20(v18, v13, a4);
      v20(a5, v18, a4);
    }
    sub_1BC35E44C();
    sub_1BC62D6C4();
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t static ResultError.== infix(_:_:)()
{
  return 1;
}

uint64_t ResultError.hash(into:)()
{
  return sub_1BC62D67C();
}

uint64_t ResultError.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

unint64_t sub_1BC4BA57C()
{
  unint64_t result;

  result = qword_1EF432AA8;
  if (!qword_1EF432AA8)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for ResultError, &type metadata for ResultError);
    atomic_store(result, (unint64_t *)&qword_1EF432AA8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ResultError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC4BA600 + 4 * byte_1BC6437B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC4BA620 + 4 * byte_1BC6437B5[v4]))();
}

_BYTE *sub_1BC4BA600(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC4BA620(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4BA628(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4BA630(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4BA638(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4BA640(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ResultError()
{
  return &type metadata for ResultError;
}

uint64_t sub_1BC4BA65C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  __int128 v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;

  v1 = v0;
  v2 = sub_1BC62B288();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v38 - v7;
  v9 = v0[8];
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = v9 + 32;
    v41 = type metadata accessor for RecordCell();
    v40 = (id)v0[6];
    v38[1] = v9;
    swift_bridgeObjectRetain();
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v13 = 1;
    v39 = xmmword_1BC639590;
    v55 = MEMORY[0x1E0DEE9D8];
    v45 = v0;
    v44 = v2;
    v43 = v3;
    v42 = v5;
    do
    {
      sub_1BC34E674(v11, (uint64_t)v64);
      sub_1BC4BAF98(v64, v13 & 1, (uint64_t)&v56);
      v53 = *((_QWORD *)&v56 + 1);
      v54 = v56;
      v51 = v58;
      v52 = v57;
      v49 = v60;
      v50 = v59;
      v48 = v61;
      v47 = v62;
      v46 = v63;
      sub_1BC34E674((uint64_t)v64, (uint64_t)&v56);
      v14 = type metadata accessor for RecordItem();
      v15 = (_QWORD *)swift_allocObject();
      sub_1BC379B20(&qword_1EF432AB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for RecordCell, (uint64_t)&unk_1BC640514);
      v16 = v40;
      v15[8] = sub_1BC62ADA8();
      v15[9] = v17;
      sub_1BC34E718(&v56, (uint64_t)(v15 + 2));
      v15[7] = v16;
      sub_1BC41EB3C(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = v39;
      *(_QWORD *)(v18 + 56) = v14;
      *(_QWORD *)(v18 + 64) = sub_1BC379B20(&qword_1EF432C30, 255, (uint64_t (*)(uint64_t))type metadata accessor for RecordItem, (uint64_t)&unk_1BC6463DC);
      *(_QWORD *)(v18 + 32) = v15;
      v19 = v65;
      v20 = v66;
      __swift_project_boxed_opaque_existential_1Tm(v64, v65);
      v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 56);
      swift_retain();
      *(_QWORD *)&v56 = v21(v19, v20);
      *((_QWORD *)&v56 + 1) = v22;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      sub_1BC62B270();
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_1BC3B67A0(0, v12[2] + 1, 1, v12);
      v24 = v12[2];
      v23 = v12[3];
      v1 = v45;
      v25 = v44;
      v26 = v43;
      v27 = v42;
      if (v24 >= v23 >> 1)
        v12 = sub_1BC3B67A0((_QWORD *)(v23 > 1), v24 + 1, 1, v12);
      v12[2] = v24 + 1;
      v28 = &v12[9 * v24];
      v29 = v53;
      v28[4] = v54;
      v28[5] = v29;
      v30 = v51;
      v28[6] = v52;
      v28[7] = v30;
      v31 = v49;
      v28[8] = v50;
      v28[9] = v31;
      v32 = v47;
      v28[10] = v48;
      v28[11] = v32;
      *((_BYTE *)v28 + 96) = v46;
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v27, v8, v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v55 = sub_1BC3B5F84(0, *(_QWORD *)(v55 + 16) + 1, 1, v55);
      v34 = *(_QWORD *)(v55 + 16);
      v33 = *(_QWORD *)(v55 + 24);
      if (v34 >= v33 >> 1)
        v55 = sub_1BC3B5F84(v33 > 1, v34 + 1, 1, v55);
      v35 = v55;
      *(_QWORD *)(v55 + 16) = v34 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v35+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v34, v27, v25);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v25);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v64);
      v13 = 0;
      v11 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v36 = sub_1BC3D2510((uint64_t)v12);
    swift_bridgeObjectRelease();
    v1[7] = v36;
    swift_bridgeObjectRelease();
    sub_1BC62AF4C();
    sub_1BC62B2D0();
    swift_release();
  }
  else
  {
    v0[7] = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return sub_1BC546A60(*(_QWORD *)(v1[8] + 16) == 0);
}

_QWORD *RecordDataSource.__allocating_init(recordPublisher:profile:)(uint64_t a1, void *a2)
{
  swift_allocObject();
  return RecordDataSource.init(recordPublisher:profile:)(a1, a2);
}

_QWORD *RecordDataSource.init(recordPublisher:profile:)(uint64_t a1, void *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - v6;
  sub_1BC41E9E8();
  v9 = v8;
  v19 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0DEE9D8];
  v2[7] = MEMORY[0x1E0DEE9D8];
  v2[8] = v12;
  v2[9] = 0;
  v2[5] = a1;
  v2[6] = a2;
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC639590;
  swift_retain();
  v18 = a2;
  sub_1BC62B270();
  v14 = ConceptsDataSource.init(arrangedSections:isHidden:)(v13, 0);
  v21 = v14[5];
  sub_1BC35A280();
  swift_retain();
  swift_retain();
  v20 = (id)sub_1BC62CC74();
  v15 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
  sub_1BC41EAB8();
  sub_1BC379B20(&qword_1EF42F110, 255, (uint64_t (*)(uint64_t))sub_1BC41EAB8, MEMORY[0x1E0C95D90]);
  sub_1BC379B20((unint64_t *)&qword_1ED6A4E00, 255, (uint64_t (*)(uint64_t))sub_1BC35A280, MEMORY[0x1E0DEF7F8]);
  sub_1BC62C080();
  sub_1BC377E3C((uint64_t)v7, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1BC379B20(&qword_1EF42F118, 255, (uint64_t (*)(uint64_t))sub_1BC41E9E8, MEMORY[0x1E0C95CB8]);
  v16 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  v14[9] = v16;
  swift_release();
  swift_retain();
  sub_1BC546A60(1);
  swift_release_n();
  swift_release();

  return v14;
}

uint64_t sub_1BC4BAEF4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC4BAF18(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_QWORD *)(result + 64) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BC4BA65C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC4BAF90(uint64_t *a1)
{
  return sub_1BC4BAF18(a1);
}

uint64_t sub_1BC4BAF98@<X0>(_QWORD *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[2];
  int v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v36 - v6;
  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v36[0] = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v11 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v12 = sub_1BC62A4A8();
  v14 = v13;
  swift_bridgeObjectRelease();

  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BC377E3C((uint64_t)v7, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v17 = v12;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = v36[0];
    (*(void (**)(_QWORD, char *, uint64_t))(v9 + 32))(v36[0], v7, v8);
    v19 = objc_msgSend(*(id *)(v36[1] + 48), sel_utcDateFormatter);
    v20 = objc_msgSend(v19, sel_monthDayYearFormatter);

    v21 = (void *)sub_1BC62A700();
    v22 = objc_msgSend(v20, sel_stringFromDate_, v21);

    v17 = sub_1BC62C680();
    v14 = v23;

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v18, v8);
  }
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v24);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 48))(v24, v25);
  v28 = v27;
  v29 = a1[3];
  v30 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v29);
  v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 56))(v29, v30);
  v39 = v31;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v32 = v38;
  v33 = v39;
  swift_beginAccess();
  v34 = qword_1EF436CD8;
  *(_QWORD *)a3 = qword_1EF436CD0;
  *(_QWORD *)(a3 + 8) = v34;
  *(_QWORD *)(a3 + 16) = v17;
  *(_QWORD *)(a3 + 24) = v14;
  *(_QWORD *)(a3 + 32) = v26;
  *(_QWORD *)(a3 + 40) = v28;
  *(_QWORD *)(a3 + 48) = v32;
  *(_QWORD *)(a3 + 56) = v33;
  *(_BYTE *)(a3 + 64) = v37 & 1;
  return swift_bridgeObjectRetain();
}

void RecordDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void RecordDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC4BB338()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t RecordDataSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t RecordDataSource.__deallocating_deinit()
{
  RecordDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC4BB3D8()
{
  MEMORY[0x1BCCF35C4](&protocol conformance descriptor for RecordDataSource);
  return sub_1BC62B834();
}

Swift::Void __swiftcall RecordDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for RecordCell();
  sub_1BC379B20(&qword_1EF432AB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for RecordCell, (uint64_t)&unk_1BC640514);
  sub_1BC62CB48();
  type metadata accessor for RecordTitleWithSubtitleView();
  sub_1BC379B20(&qword_1EF432AB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for RecordTitleWithSubtitleView, (uint64_t)&protocol conformance descriptor for RecordTitleWithSubtitleView);
  sub_1BC62CB60();
}

uint64_t sub_1BC4BB4B8()
{
  type metadata accessor for RecordCell();
  sub_1BC379B20(&qword_1EF432AB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for RecordCell, (uint64_t)&unk_1BC640514);
  sub_1BC62CB48();
  type metadata accessor for RecordTitleWithSubtitleView();
  sub_1BC379B20(&qword_1EF432AB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for RecordTitleWithSubtitleView, (uint64_t)&protocol conformance descriptor for RecordTitleWithSubtitleView);
  return sub_1BC62CB60();
}

uint64_t RecordDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  v3 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v3);
  if (*(_QWORD *)(*(_QWORD *)(v1 + 56) + 16))
  {
    v4 = sub_1BC62A964();
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v5 = *(_QWORD *)(v1 + 56);
      if (v4 < *(_QWORD *)(v5 + 16))
        return sub_1BC34E674(v5 + 40 * v4 + 32, (uint64_t)a1);
    }
    __break(1u);
    goto LABEL_9;
  }
  if (qword_1ED6A4888 != -1)
LABEL_9:
    swift_once();
  v7 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62BD44();
  v8 = sub_1BC62AD3C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v10 = sub_1BC62AD24();
  a1[3] = v8;
  result = sub_1BC379B20((unint64_t *)&qword_1ED6A4108, 255, v9, MEMORY[0x1E0D2A8A0]);
  a1[4] = result;
  *a1 = v10;
  return result;
}

uint64_t sub_1BC4BB724(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF432AC0, a2, (uint64_t (*)(uint64_t))type metadata accessor for RecordDataSource, (uint64_t)&protocol conformance descriptor for RecordDataSource);
}

uint64_t type metadata accessor for RecordDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1BC4BB770@<X0>(uint64_t *a1@<X8>)
{
  return RecordDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t method lookup function for RecordDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecordDataSource.__allocating_init(recordPublisher:profile:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of RecordDataSource.layout(for:environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

id OnboardingTileViewController.__allocating_init(with:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_profile] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_initWithStyle_, 1);
}

id OnboardingTileViewController.init(with:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_profile] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for OnboardingTileViewController();
  return objc_msgSendSuper2(&v3, sel_initWithStyle_, 1);
}

uint64_t type metadata accessor for OnboardingTileViewController()
{
  return objc_opt_self();
}

void sub_1BC4BB8B8()
{
  void *v0;
  void *v1;
  objc_class *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t ObjCClassFromMetadata;
  void *v29;
  id v30;
  void *v31;
  _QWORD v32[4];
  objc_super v33;

  v1 = v0;
  v2 = (objc_class *)type metadata accessor for OnboardingTileViewController();
  v33.receiver = v0;
  v33.super_class = v2;
  objc_msgSendSuper2(&v33, sel_viewDidLoad);
  if (qword_1ED6A4880 != -1)
    swift_once();
  v3 = (id)qword_1ED6A5510;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v4, 0xE000000000000000);

  v5 = objc_msgSend(v0, sel_navigationItem);
  v6 = objc_msgSend(v0, sel_navigationController);
  if (!v6)
    goto LABEL_13;
  v7 = v6;
  v8 = objc_msgSend(v6, sel_viewControllers);

  sub_1BC34B6A0(0, &qword_1EF429570);
  v9 = sub_1BC62C878();

  if (!(v9 >> 62))
  {
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v16)
    goto LABEL_12;
LABEL_6:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x1BCCF24CC](0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v10 = *(id *)(v9 + 32);
  }
  v11 = v10;
  swift_bridgeObjectRelease();
  v12 = v1;
  v13 = v11;
  v14 = sub_1BC62CEB4();

  if ((v14 & 1) != 0)
  {
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v12, sel_closeButtonTapped);
    goto LABEL_14;
  }
LABEL_13:
  v15 = 0;
LABEL_14:
  v32[3] = v2;
  v32[0] = v1;
  v17 = v1;
  v18 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v32, (uint64_t)sel_tapToRadar_);
  sub_1BC39BD2C((uint64_t)v32);
  v32[0] = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v19 = v15;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v18)
  {
    v20 = v18;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  sub_1BC34B6A0(0, &qword_1EF4295C8);
  v21 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setRightBarButtonItems_, v21);

  v22 = objc_msgSend(v17, sel_tableView);
  if (!v22)
    goto LABEL_29;
  v23 = v22;
  objc_msgSend(v22, sel__setSectionContentInset_, 32.0, 16.0, 0.0, 16.0);

  v24 = objc_msgSend(v17, sel_tableView);
  if (!v24)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v25 = v24;
  objc_msgSend(v24, sel__setSectionCornerRadius_, 10.0);

  v26 = objc_msgSend(v17, sel_tableView);
  if (!v26)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v27 = v26;
  type metadata accessor for OnboardingTableViewCell(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v29 = (void *)sub_1BC62C650();
  objc_msgSend(v27, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v29);

  v30 = objc_msgSend(v17, sel_tableView);
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v30, sel_reloadData);

    return;
  }
LABEL_32:
  __break(1u);
}

id OnboardingTileViewController.__allocating_init(usingInsetStyling:)(char a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), sel_initWithUsingInsetStyling_, a1 & 1);
}

void OnboardingTileViewController.init(usingInsetStyling:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id OnboardingTileViewController.__allocating_init(style:)(uint64_t a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), sel_initWithStyle_, a1);
}

void OnboardingTileViewController.init(style:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id OnboardingTileViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void OnboardingTileViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id OnboardingTileViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC4BC320()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  objc_super v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_profile);
  v2 = (objc_class *)type metadata accessor for OnboardingTableViewCell(0);
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[qword_1EF43A140] = v1;
  v4 = v1;
  v5 = (void *)sub_1BC62C650();
  v9.receiver = v3;
  v9.super_class = v2;
  v6 = objc_msgSendSuper2(&v9, sel_initWithStyle_reuseIdentifier_, 0, v5);

  v7 = v6;
  sub_1BC60047C();

  return v7;
}

uint64_t method lookup function for OnboardingTileViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OnboardingTileViewController.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t PluginFeedItem.updateHideInDiscover(using:)(_QWORD *a1)
{
  sub_1BC4BC408(a1);
  return sub_1BC62AACC();
}

uint64_t sub_1BC4BC408(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  sub_1BC4BC57C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62AAF0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC62AAD8();
  sub_1BC62AB08();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BC4BC5D0((uint64_t)v4);
    return 2;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if ((sub_1BC62AAB4() & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return 0;
    }
    else
    {
      v9 = sub_1BC62AAC0();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return v9;
}

void sub_1BC4BC57C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4EA8)
  {
    sub_1BC62AAF0();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4EA8);
  }
}

uint64_t sub_1BC4BC5D0(uint64_t a1)
{
  uint64_t v2;

  sub_1BC4BC57C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for SignedClinicalDataQRCodeView(id *a1)
{

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for SignedClinicalDataQRCodeView(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v6;
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SignedClinicalDataQRCodeView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SignedClinicalDataQRCodeView(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SignedClinicalDataQRCodeView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SignedClinicalDataQRCodeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataQRCodeView()
{
  return &type metadata for SignedClinicalDataQRCodeView;
}

uint64_t sub_1BC4BC870()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BC4BC880()
{
  sub_1BC62C278();
  sub_1BC357158(0, &qword_1EF432CB0, (uint64_t (*)(uint64_t))sub_1BC4BE0EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC4BE530();
  return sub_1BC62C0EC();
}

uint64_t sub_1BC4BC90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[6];
  _OWORD v37[2];
  _OWORD v38[8];
  char v39;

  v31 = a2;
  v35 = a3;
  sub_1BC4BE73C(0, &qword_1EF432D80, MEMORY[0x1E0CDB848]);
  v34 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - v5;
  sub_1BC357158(0, &qword_1EF432CB0, (uint64_t (*)(uint64_t))sub_1BC4BE0EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v30 - v8;
  v9 = sub_1BC62C104();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  sub_1BC4BE100();
  v13 = v12;
  v32 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[0] = *(_OWORD *)(a1 + 8);
  sub_1BC357158(0, &qword_1EF432CA8, (uint64_t (*)(uint64_t))sub_1BC4BDA34, MEMORY[0x1E0CDF9A8]);
  sub_1BC62C3D4();
  if (*(_QWORD *)&v36[0])
  {
    *(_QWORD *)&v38[0] = *(_QWORD *)&v36[0];
    swift_getKeyPath();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v9);
    v16 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v17 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v16, (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    sub_1BC3A0B4C();
    sub_1BC357158(0, &qword_1EF432CC8, (uint64_t (*)(uint64_t))sub_1BC4BE1F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC347F0C(&qword_1EF432D00, (uint64_t (*)(uint64_t))sub_1BC3A0B4C, MEMORY[0x1E0DEAF48]);
    sub_1BC347F0C(&qword_1EF432D08, (uint64_t (*)(uint64_t))sub_1BC4BDA50, MEMORY[0x1E0DEFCF8]);
    sub_1BC4BE688();
    sub_1BC62C41C();
    v18 = v32;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v6, v15, v13);
    swift_storeEnumTagMultiPayload();
    sub_1BC4BE364();
    sub_1BC4BE628();
    sub_1BC347F0C(&qword_1EF432D78, (uint64_t (*)(uint64_t))sub_1BC4BE364, MEMORY[0x1E0CDFB10]);
    v19 = (uint64_t)v33;
    sub_1BC62C248();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v13);
    sub_1BC4BE0EC(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
    return sub_1BC4BDA8C(v19, v35, (uint64_t)&qword_1EF432CB0, (uint64_t)sub_1BC4BE0EC, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
  }
  v38[0] = *(_OWORD *)(a1 + 24);
  *(_QWORD *)&v38[1] = *(_QWORD *)(a1 + 40);
  sub_1BC4BDB64(0, &qword_1EF432CA0, MEMORY[0x1E0CDF9A8]);
  sub_1BC62C3D4();
  v22 = v35;
  if (*((_QWORD *)&v36[0] + 1))
  {
    if (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
    {
      v23 = sub_1BC62C1B8();
      sub_1BC4BD0A8((uint64_t)v36);
      swift_bridgeObjectRelease();
      *(_OWORD *)((char *)&v38[4] + 7) = v36[4];
      *(_OWORD *)((char *)&v38[5] + 7) = v36[5];
      *(_OWORD *)((char *)&v38[6] + 7) = v37[0];
      v38[7] = *(_OWORD *)((char *)v37 + 9);
      *(_OWORD *)((char *)v38 + 7) = v36[0];
      *(_OWORD *)((char *)&v38[1] + 7) = v36[1];
      *(_OWORD *)((char *)&v38[2] + 7) = v36[2];
      *(_OWORD *)((char *)&v38[3] + 7) = v36[3];
      v24 = v38[6];
      *(_OWORD *)(v6 + 129) = *(_OWORD *)((char *)v37 + 9);
      v25 = v38[5];
      *(_OWORD *)(v6 + 81) = v38[4];
      *(_OWORD *)(v6 + 97) = v25;
      v26 = v38[2];
      *(_OWORD *)(v6 + 65) = v38[3];
      *(_OWORD *)(v6 + 49) = v26;
      v27 = v38[0];
      *(_OWORD *)(v6 + 33) = v38[1];
      *(_OWORD *)(v6 + 17) = v27;
      v39 = 1;
      *(_QWORD *)v6 = v23;
      *((_QWORD *)v6 + 1) = 0;
      v6[16] = 1;
      *(_OWORD *)(v6 + 113) = v24;
      swift_storeEnumTagMultiPayload();
      sub_1BC4BE364();
      sub_1BC4BE628();
      sub_1BC347F0C(&qword_1EF432D78, (uint64_t (*)(uint64_t))sub_1BC4BE364, MEMORY[0x1E0CDFB10]);
      sub_1BC62C248();
      sub_1BC4BE0EC(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v22, 0, 1, v28);
    }
    swift_bridgeObjectRelease();
  }
  sub_1BC4BE0EC(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v22, 1, 1, v29);
}

uint64_t sub_1BC4BCE30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  double v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[10];
  _BYTE v32[7];
  _BYTE v33[7];
  char v34;
  _BYTE v35[11];
  __int16 v36;
  char v37;
  _BYTE v38[7];
  char v39;
  __int128 v40;
  char v41;
  _BYTE v42[7];
  uint64_t v43;
  uint64_t v44;
  __int16 v45;
  int v46;
  __int16 v47;
  char v48;
  _BYTE v49[7];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _BYTE v55[7];
  char v56;
  _BYTE v57[7];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  _BYTE v63[152];

  v2 = sub_1BC62C3B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC62C0F8();
  CIImage.createUIImage(dimension:)(v6 + -60.0);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1BC62C218();
    v10 = v8;
    sub_1BC62C3A4();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDF6F8], v2);
    v11 = sub_1BC62C3BC();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    v12 = sub_1BC62C284();
    sub_1BC62C0D4();
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v21 = sub_1BC62C284();
    sub_1BC62C0D4();
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;

    v39 = 1;
    v37 = 1;
    v34 = 0;
    v31[8] = 0;
    v40 = (unint64_t)v9;
    v41 = 1;
    *(_DWORD *)v42 = *(_DWORD *)v38;
    *(_DWORD *)&v42[3] = *(_DWORD *)&v38[3];
    v43 = v11;
    v44 = 0;
    v45 = 257;
    v47 = v36;
    v46 = *(_DWORD *)&v35[7];
    v48 = v12;
    *(_DWORD *)&v49[3] = *(_DWORD *)&v35[3];
    *(_DWORD *)v49 = *(_DWORD *)v35;
    v50 = v14;
    v51 = v16;
    v52 = v18;
    v53 = v20;
    v54 = 0;
    *(_DWORD *)&v55[3] = *(_DWORD *)&v33[3];
    *(_DWORD *)v55 = *(_DWORD *)v33;
    v56 = v21;
    *(_DWORD *)v57 = *(_DWORD *)v32;
    *(_DWORD *)&v57[3] = *(_DWORD *)&v32[3];
    v58 = v23;
    v59 = v25;
    v60 = v27;
    v61 = v29;
    v62 = 0;
    nullsub_1(&v40);
  }
  else
  {
    sub_1BC4BE850(&v40);
  }
  sub_1BC4BDA8C((uint64_t)&v40, (uint64_t)v63, (uint64_t)&qword_1EF432CC8, (uint64_t)sub_1BC4BE1F0, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
  return sub_1BC4BDA8C((uint64_t)v63, a1, (uint64_t)&qword_1EF432CC8, (uint64_t)sub_1BC4BE1F0, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
}

uint64_t sub_1BC4BD0A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t KeyPath;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[7];
  _BYTE v18[7];
  _BYTE v19[7];
  _BYTE v20[7];
  _BYTE v21[7];

  v2 = sub_1BC62C1F4();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC62C1E8();
  sub_1BC62C1DC();
  sub_1BC62C1D0();
  sub_1BC62C1DC();
  sub_1BC62C20C();
  v3 = sub_1BC62C32C();
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  KeyPath = swift_getKeyPath();
  v11 = sub_1BC62C284();
  sub_1BC62C0D4();
  *(_DWORD *)(a1 + 9) = *(_DWORD *)v21;
  *(_DWORD *)(a1 + 12) = *(_DWORD *)&v21[3];
  *(_DWORD *)(a1 + 33) = *(_DWORD *)v20;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)&v20[3];
  *(_DWORD *)(a1 + 60) = *(_DWORD *)&v19[3];
  *(_DWORD *)(a1 + 57) = *(_DWORD *)v19;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)&v18[3];
  *(_DWORD *)(a1 + 65) = *(_DWORD *)v18;
  *(_DWORD *)(a1 + 108) = *(_DWORD *)&v17[3];
  *(_DWORD *)(a1 + 105) = *(_DWORD *)v17;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = KeyPath;
  *(_BYTE *)(a1 + 56) = 1;
  *(_BYTE *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v15;
  *(_BYTE *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 120) = 1;
  sub_1BC404110(v3, v5, v9);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC4040D0(v3, v5, v9);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC4BD2A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v13;
  uint64_t v14;
  _BYTE v15[8];
  _BYTE v16[16];
  __int128 v17;
  _BYTE v18[8];
  _BYTE v19[8];

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - v3;
  v5 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1BC62C944();
  v6 = *(void **)a1;
  v17 = *(_OWORD *)(a1 + 8);
  sub_1BC375724((uint64_t)&v17, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC4BDA34);
  sub_1BC4BDA8C((uint64_t)&v17 + 8, (uint64_t)v18, (uint64_t)&unk_1EF432C68, (uint64_t)sub_1BC4BDAE4, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
  v13 = *(_OWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 40);
  sub_1BC4BDA8C((uint64_t)&v13, (uint64_t)v16, (uint64_t)&qword_1EF4290E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
  sub_1BC375724((uint64_t)&v14, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC4BDB00);
  v7 = v6;
  sub_1BC4BDC30((uint64_t)v19);
  sub_1BC4BDC58((uint64_t)v18);
  sub_1BC34B650((uint64_t)v16);
  sub_1BC4BDC58((uint64_t)v15);
  v8 = sub_1BC62C938();
  v9 = swift_allocObject();
  v10 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v10;
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v9 + 48) = v11;
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(a1 + 32);
  sub_1BC5C2784((uint64_t)v4, (uint64_t)&unk_1EF432C90, v9);
  return swift_release();
}

uint64_t sub_1BC4BD460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4[19] = a4;
  v6 = sub_1BC62BB34();
  v4[20] = v6;
  v4[21] = *(_QWORD *)(v6 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = sub_1BC62C944();
  v4[24] = sub_1BC62C938();
  v8 = a4[1];
  v7 = a4[2];
  v9 = *a4;
  v10 = (_QWORD *)swift_task_alloc();
  v4[25] = v10;
  *v10 = v4;
  v10[1] = sub_1BC4BD508;
  return sub_1BC4BDD38(v9, v8, v7);
}

uint64_t sub_1BC4BD508()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC4BD590()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC4BD5C8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void **)(v0 + 208);
  swift_release();
  sub_1BC62BAF8();
  v2 = v1;
  v3 = v1;
  v4 = sub_1BC62BB28();
  v5 = sub_1BC62CAC4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 208);
    v7 = *(_QWORD *)(v0 + 168);
    v24 = *(_QWORD *)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 176);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v26 = v9;
    *(_QWORD *)(v0 + 136) = v6;
    v10 = v6;
    sub_1BC35E44C();
    v11 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 144) = sub_1BC4991F0(v11, v12, &v26);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v4, v5, "Failed to generate QR code CIImages with error: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v9, -1, -1);
    MEMORY[0x1BCCF36A8](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v24);
  }
  else
  {
    v13 = *(void **)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 168);
    v14 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v17 = *(void **)(v0 + 208);
  v18 = *(_QWORD *)(v0 + 152);
  swift_getErrorValue();
  v19 = sub_1BC62D610();
  v21 = v20;
  v22 = *(_QWORD *)(v18 + 40);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v18 + 24);
  *(_QWORD *)(v0 + 80) = v22;
  sub_1BC4BDA8C(v0 + 64, v0 + 88, (uint64_t)&qword_1EF4290E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
  sub_1BC375724(v0 + 80, v0 + 128, (uint64_t (*)(_QWORD))sub_1BC4BDB00);
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 104) = v19;
  *(_QWORD *)(v0 + 112) = v21;
  sub_1BC34B650(v0 + 88);
  sub_1BC4BDC58(v0 + 128);
  sub_1BC4BDB64(0, &qword_1EF432CA0, MEMORY[0x1E0CDF9A8]);
  sub_1BC62C3E0();

  sub_1BC34B678(v0 + 88);
  sub_1BC4BE0BC(v0 + 128);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC4BD8A4@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  __int128 v9;
  _BYTE v10[8];
  _BYTE v11[8];
  __int128 v12;
  uint64_t v13;
  _BYTE v14[8];
  _BYTE v15[16];

  v3 = *(void **)v1;
  v9 = *(_OWORD *)(v1 + 8);
  sub_1BC375724((uint64_t)&v9, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC4BDA34);
  sub_1BC4BDA8C((uint64_t)&v9 + 8, (uint64_t)v10, (uint64_t)&unk_1EF432C68, (uint64_t)sub_1BC4BDAE4, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
  v12 = *(_OWORD *)(v1 + 24);
  v13 = *(_QWORD *)(v1 + 40);
  sub_1BC4BDA8C((uint64_t)&v12, (uint64_t)v15, (uint64_t)&qword_1EF4290E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
  sub_1BC375724((uint64_t)&v13, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC4BDB00);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(v1 + 40);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v5 + 56) = *(_QWORD *)(v1 + 40);
  *a1 = sub_1BC4BDBD8;
  a1[1] = (uint64_t (*)())v4;
  a1[2] = sub_1BC4BDC28;
  a1[3] = (uint64_t (*)())v5;
  a1[4] = 0;
  a1[5] = 0;
  v6 = v3;
  sub_1BC4BDC30((uint64_t)v11);
  sub_1BC4BDC58((uint64_t)v10);
  sub_1BC34B650((uint64_t)v15);
  sub_1BC4BDC58((uint64_t)v14);
  v7 = v6;
  sub_1BC4BDC30((uint64_t)v11);
  sub_1BC4BDC58((uint64_t)v10);
  sub_1BC34B650((uint64_t)v15);
  return sub_1BC4BDC58((uint64_t)v14);
}

void sub_1BC4BDA34(uint64_t a1)
{
  sub_1BC357158(a1, &qword_1EF42DFC0, (uint64_t (*)(uint64_t))sub_1BC3A0B4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BC4BDA50()
{
  unint64_t result;

  result = qword_1EF429770;
  if (!qword_1EF429770)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF429770);
  }
  return result;
}

uint64_t sub_1BC4BDA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;

  v7 = a5(0, a3, a4, MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1BC4BDAE4(uint64_t a1)
{
  sub_1BC357158(a1, &qword_1EF432C70, (uint64_t (*)(uint64_t))sub_1BC4BDA34, MEMORY[0x1E0CD8690]);
}

void sub_1BC4BDB00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432C78)
  {
    sub_1BC4BDB64(255, &qword_1EF432C80, MEMORY[0x1E0CD8690]);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432C78);
  }
}

void sub_1BC4BDB64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC34B508(255, (unint64_t *)&qword_1EF4290E0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC4BDBD8()
{
  return sub_1BC4BC880();
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4BDC28()
{
  uint64_t v0;

  return sub_1BC4BD2A4(v0 + 16);
}

uint64_t sub_1BC4BDC30(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC4BDC58(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1BC4BDC80()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4BDCCC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1BC377F18;
  return sub_1BC4BD460(a1, v4, v5, v1 + 4);
}

uint64_t sub_1BC4BDD38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  sub_1BC62C944();
  v3[12] = sub_1BC62C938();
  v3[13] = sub_1BC62C908();
  v3[14] = v4;
  return swift_task_switch();
}

uint64_t sub_1BC4BDDA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v4;

  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 80);
  sub_1BC357158(0, &qword_1EF432CA8, (uint64_t (*)(uint64_t))sub_1BC4BDA34, MEMORY[0x1E0CDF9A8]);
  *(_QWORD *)(v0 + 120) = v1;
  sub_1BC62C3D4();
  v2 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRelease();
  if (v2
    || (v4 = objc_msgSend(*(id *)(v0 + 72), sel_QRRepresentation),
        (*(_QWORD *)(v0 + 128) = v4) == 0))
  {
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 136) = type metadata accessor for SignedClinicalDataQRCodeGenerator();
    return swift_task_switch();
  }
}

uint64_t sub_1BC4BDE74()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[9].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[8], v0[8], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[9].i64[1] = (uint64_t)v2;
  sub_1BC3A0B4C();
  *v2 = v0;
  v2[1] = sub_1BC4BDF24;
  return sub_1BC62D5BC();
}

uint64_t sub_1BC4BDF24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC4BDF90()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v0 + 56);
  return swift_task_switch();
}

uint64_t sub_1BC4BDFA8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(void **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 80);
  swift_release();
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v0 + 40) = v3;
  *(_QWORD *)(v0 + 64) = v1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC62C3E0();

  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC4BE044()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC4BE07C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC4BE0BC(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_1BC4BE0E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC4BC90C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1BC4BE0EC(uint64_t a1)
{
  sub_1BC4BE73C(a1, &qword_1EF432CB8, MEMORY[0x1E0CDB880]);
}

void sub_1BC4BE100()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432CC0)
  {
    sub_1BC3A0B4C();
    sub_1BC4BDA50();
    sub_1BC357158(255, &qword_1EF432CC8, (uint64_t (*)(uint64_t))sub_1BC4BE1F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC347F0C(&qword_1EF432D00, (uint64_t (*)(uint64_t))sub_1BC3A0B4C, MEMORY[0x1E0DEAF48]);
    sub_1BC347F0C(&qword_1EF432D08, (uint64_t (*)(uint64_t))sub_1BC4BDA50, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC62C434();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432CC0);
  }
}

void sub_1BC4BE1F0(uint64_t a1)
{
  sub_1BC4BE970(a1, &qword_1EF432CD0, (void (*)(uint64_t))sub_1BC4BE20C);
}

void sub_1BC4BE20C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432CD8)
  {
    sub_1BC4BE28C(255);
    sub_1BC4BE8EC(&qword_1EF432CF0, (uint64_t (*)(uint64_t))sub_1BC4BE28C, (uint64_t (*)(void))sub_1BC4BE304, MEMORY[0x1E0CD9758]);
    v0 = sub_1BC62C410();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432CD8);
  }
}

void sub_1BC4BE28C(uint64_t a1)
{
  sub_1BC4BE970(a1, &qword_1EF432CE0, (void (*)(uint64_t))sub_1BC4BE2A8);
}

void sub_1BC4BE2A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432CE8)
  {
    v0 = sub_1BC62C14C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432CE8);
  }
}

unint64_t sub_1BC4BE304()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF432CF8;
  if (!qword_1EF432CF8)
  {
    sub_1BC4BE2A8();
    v2[0] = MEMORY[0x1E0CDF820];
    v2[1] = MEMORY[0x1E0CDB158];
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF432CF8);
  }
  return result;
}

void sub_1BC4BE364()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432D10)
  {
    sub_1BC357158(255, &qword_1EF432D18, (uint64_t (*)(uint64_t))sub_1BC4BE3DC, MEMORY[0x1E0CE0648]);
    sub_1BC4BE4D0();
    v0 = sub_1BC62C404();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432D10);
  }
}

void sub_1BC4BE3DC()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF432D20)
  {
    sub_1BC4BE970(255, &qword_1EF432D28, (void (*)(uint64_t))sub_1BC4BE45C);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF432D20);
  }
}

void sub_1BC4BE45C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432D30)
  {
    sub_1BC34B508(255, &qword_1EF432D38, MEMORY[0x1E0CD9070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDCF68]);
    v0 = sub_1BC62C14C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432D30);
  }
}

unint64_t sub_1BC4BE4D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF432D40;
  if (!qword_1EF432D40)
  {
    sub_1BC357158(255, &qword_1EF432D18, (uint64_t (*)(uint64_t))sub_1BC4BE3DC, MEMORY[0x1E0CE0648]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CE0680], v1);
    atomic_store(result, (unint64_t *)&qword_1EF432D40);
  }
  return result;
}

unint64_t sub_1BC4BE530()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF432D48;
  if (!qword_1EF432D48)
  {
    sub_1BC357158(255, &qword_1EF432CB0, (uint64_t (*)(uint64_t))sub_1BC4BE0EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = v1;
    v3 = sub_1BC4BE5A8();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CE0798], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF432D48);
  }
  return result;
}

unint64_t sub_1BC4BE5A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF432D50;
  if (!qword_1EF432D50)
  {
    sub_1BC4BE0EC(255);
    v2 = v1;
    v3[0] = sub_1BC4BE628();
    v3[1] = sub_1BC347F0C(&qword_1EF432D78, (uint64_t (*)(uint64_t))sub_1BC4BE364, MEMORY[0x1E0CDFB10]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1EF432D50);
  }
  return result;
}

unint64_t sub_1BC4BE628()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF432D58;
  if (!qword_1EF432D58)
  {
    sub_1BC4BE100();
    v2 = v1;
    v3 = sub_1BC4BE688();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CDFEE8], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF432D58);
  }
  return result;
}

unint64_t sub_1BC4BE688()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF432D60;
  if (!qword_1EF432D60)
  {
    sub_1BC357158(255, &qword_1EF432CC8, (uint64_t (*)(uint64_t))sub_1BC4BE1F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = v1;
    v3 = sub_1BC4BE8EC(&qword_1EF432D68, (uint64_t (*)(uint64_t))sub_1BC4BE1F0, sub_1BC4BE720, MEMORY[0x1E0CD9758]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CE0798], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF432D60);
  }
  return result;
}

uint64_t sub_1BC4BE720()
{
  return sub_1BC347F0C(&qword_1EF432D70, (uint64_t (*)(uint64_t))sub_1BC4BE20C, MEMORY[0x1E0CDFCC0]);
}

void sub_1BC4BE73C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC4BE100();
    v7 = v6;
    sub_1BC4BE364();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC4BE7A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BC62C104();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BC4BE804@<X0>(uint64_t a1@<X8>)
{
  sub_1BC62C104();
  return sub_1BC4BCE30(a1);
}

double sub_1BC4BE850(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 121) = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1BC4BE86C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC62C188();
  *a1 = result;
  return result;
}

uint64_t sub_1BC4BE894()
{
  return sub_1BC62C194();
}

uint64_t sub_1BC4BE8B8()
{
  return sub_1BC4BE8EC(&qword_1EF432D88, (uint64_t (*)(uint64_t))sub_1BC4BE954, sub_1BC4BEABC, MEMORY[0x1E0CDC8B0]);
}

uint64_t sub_1BC4BE8EC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC4BE954(uint64_t a1)
{
  sub_1BC4BE970(a1, &qword_1EF432D90, (void (*)(uint64_t))sub_1BC4BE9CC);
}

void sub_1BC4BE970(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC62C14C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC4BE9CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432D98)
  {
    sub_1BC4BEA44();
    sub_1BC347F0C(&qword_1EF432DA8, (uint64_t (*)(uint64_t))sub_1BC4BEA44, MEMORY[0x1E0CD8558]);
    v0 = sub_1BC62C11C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432D98);
  }
}

void sub_1BC4BEA44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432DA0)
  {
    sub_1BC357158(255, &qword_1EF432CB0, (uint64_t (*)(uint64_t))sub_1BC4BE0EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC4BE530();
    v0 = sub_1BC62C0E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432DA0);
  }
}

uint64_t sub_1BC4BEABC()
{
  return sub_1BC347F0C(&qword_1EF432DB0, (uint64_t (*)(uint64_t))sub_1BC4BE9CC, MEMORY[0x1E0CD9318]);
}

id sub_1BC4BEAD8(void *a1)
{
  return sub_1BC4BEAEC(a1, &OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store, sub_1BC506E54);
}

id sub_1BC4BEAEC(void *a1, _QWORD *a2, uint64_t (*a3)(id))
{
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;

  v5 = *(void **)(v3 + *a2);
  v6 = a1;
  v7 = v5;
  v8 = a3(v6);
  v10 = v9;

  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  if (v11)
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v12, sel_setDisplayItemType_, 15);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v13 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v14 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setTitle_, v14, 0xE000000000000000);

    v15 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setSubtitle_, v15);

    objc_msgSend(v12, sel_setSeparatorStyle_, 0);
    objc_msgSend(v12, sel_setSeparatorHidden_, 0);
    objc_msgSend(v12, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

id VaccinationRecordFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store);
}

uint64_t VaccinationRecordFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context);
}

id VaccinationRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id VaccinationRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for VaccinationRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for VaccinationRecordFormatter()
{
  return objc_opt_self();
}

unint64_t sub_1BC4BEDD4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC4BF07C(a1);
  if (!v2)
    return sub_1BC4BEE34(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC4BEE34(void *a1)
{
  uint64_t inited;
  unsigned int v3;
  id v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t i;
  void *v17;
  id v18;
  uint64_t v20;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B398, (uint64_t (*)(uint64_t))sub_1BC39CBC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC643A80;
  *(_QWORD *)(inited + 32) = sub_1BC4BFA84(a1);
  *(_QWORD *)(inited + 40) = sub_1BC4BFCC8(a1);
  *(_QWORD *)(inited + 48) = sub_1BC4BFF08(a1);
  v3 = objc_msgSend(a1, sel_notGiven);
  v4 = 0;
  if (v3)
    v4 = sub_1BC61F828(a1);
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = sub_1BC4BEAEC(a1, &OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store, sub_1BC506E54);
  *(_QWORD *)(inited + 72) = sub_1BC4C0148(a1);
  v5 = sub_1BC39CBE4();
  v6 = a1;
  v7 = sub_1BC5070A0(v6);

  v8 = Array<A>.newlineJoined.getter(v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 80) = sub_1BC4A95FC(v8, v10, v5);
  v11 = v6;
  v12 = sub_1BC5070AC(v11);

  v13 = Array<A>.newlineJoined.getter(v12);
  v15 = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 88) = sub_1BC4A9F24(v13, v15);
  *(_QWORD *)(inited + 96) = sub_1BC4C0328(v11);
  *(_QWORD *)(inited + 104) = sub_1BC4C0520(v11);
  *(_QWORD *)(inited + 112) = sub_1BC546064(v11);
  *(_QWORD *)(inited + 120) = sub_1BC4C0718(v11);
  *(_QWORD *)(inited + 128) = sub_1BC4C0AD0(v11);
  sub_1BC62C890();
  v20 = MEMORY[0x1E0DEE9D8];
  for (i = 32; i != 136; i += 8)
  {
    v17 = *(void **)(inited + i);
    if (v17)
    {
      v18 = v17;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }
  }
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t sub_1BC4BF07C(void *a1)
{
  unint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;

  v2 = MEMORY[0x1E0DEE9D8];
  v46 = MEMORY[0x1E0DEE9D8];
  v3 = sub_1BC4BFCC8(a1);
  if (v3)
  {
    v4 = v3;
    sub_1BC39CBE4();
    v5 = v4;
    v6 = a1;
    v7 = sub_1BC5070AC(v6);

    v8 = Array<A>.newlineJoined.getter(v7);
    v10 = v9;
    swift_bridgeObjectRelease();
    v11 = sub_1BC4A9F24(v8, v10);
    v45 = v2;
    v12 = v5;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    if (v11)
    {
      v13 = v11;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }

    sub_1BC3BB208(v45);
    v2 = v46;
  }
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v37 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v37 > 1)
      goto LABEL_15;
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_15;
  }
  v14 = sub_1BC4BFF08(a1);
  if (v14)
  {
    v15 = v14;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    v2 = v46;
  }
LABEL_15:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v38 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v38 > 1)
      goto LABEL_22;
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_22;
  }
  if (objc_msgSend(a1, sel_notGiven, v45))
  {
    v16 = sub_1BC61F828(a1);
    if (v16)
    {
      v17 = v16;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();

      v2 = v46;
    }
  }
LABEL_22:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v39 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v39 > 1)
      goto LABEL_28;
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_28;
  }
  v18 = sub_1BC4BEAEC(a1, &OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store, sub_1BC506E54);
  if (v18)
  {
    v19 = v18;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    v2 = v46;
  }
LABEL_28:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v40 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v40 > 1)
      goto LABEL_34;
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_34;
  }
  v20 = sub_1BC4C0148(a1);
  if (v20)
  {
    v21 = v20;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    v2 = v46;
  }
LABEL_34:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v41 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v41 > 1)
      goto LABEL_40;
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_40;
  }
  v22 = sub_1BC39CBE4();
  v23 = a1;
  v24 = sub_1BC5070A0(v23);

  v25 = Array<A>.newlineJoined.getter(v24);
  v27 = v26;
  swift_bridgeObjectRelease();
  v28 = (void *)sub_1BC4A95FC(v25, v27, v22);
  if (v28)
  {
    v29 = v28;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    v2 = v46;
  }
LABEL_40:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v42 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v42 > 1)
      goto LABEL_46;
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_46;
  }
  v30 = sub_1BC4C0328(a1);
  if (v30)
  {
    v31 = v30;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    v2 = v46;
  }
LABEL_46:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v43 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v43 > 1)
      goto LABEL_52;
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_52;
  }
  v32 = sub_1BC4C0520(a1);
  if (v32)
  {
    v33 = v32;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    v2 = v46;
  }
LABEL_52:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v44 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v44 > 1)
      return v2;
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    return v2;
  }
  v34 = (void *)sub_1BC546064(a1);
  if (v34)
  {
    v35 = v34;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    return v46;
  }
  return v2;
}

id VaccinationRecordFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void VaccinationRecordFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VaccinationRecordFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VaccinationRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC4BF8E8()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store);
}

uint64_t sub_1BC4BF8FC()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context);
}

id sub_1BC4BF910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for VaccinationRecordFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

unint64_t sub_1BC4BF980(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t result;

  v2 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC4BF07C(a1);
  if (!v2)
    return sub_1BC4BEE34(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

unint64_t sub_1BC4BF9EC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC4BFA10();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC4BFA10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF432E08;
  if (!qword_1EF432E08)
  {
    v1 = type metadata accessor for VaccinationRecordFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF432E08);
  }
  return result;
}

uint64_t method lookup function for VaccinationRecordFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VaccinationRecordFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of VaccinationRecordFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

id sub_1BC4BFA84(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (objc_msgSend(a1, sel_notGiven))
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
  }
  else if (qword_1ED6A4888 != -1)
  {
    swift_once();
  }
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC39CBE4();
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_administrationDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1BC4BFCC8(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  if (!objc_msgSend(a1, sel_notGiven))
    return 0;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  v4 = v3;
  swift_bridgeObjectRelease();

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init, 0xE000000000000000);
  objc_msgSend(v6, sel_setDisplayItemType_, 15);
  v7 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSubtitle_, v9);

  objc_msgSend(v6, sel_setSeparatorStyle_, 0);
  objc_msgSend(v6, sel_setSeparatorHidden_, 0);
  objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  return v6;
}

id sub_1BC4BFF08(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  if (!objc_msgSend(a1, sel_patientReported))
    return 0;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  v4 = v3;
  swift_bridgeObjectRelease();

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init, 0xE000000000000000);
  objc_msgSend(v6, sel_setDisplayItemType_, 15);
  v7 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSubtitle_, v9);

  objc_msgSend(v6, sel_setSeparatorStyle_, 0);
  objc_msgSend(v6, sel_setSeparatorHidden_, 0);
  objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  return v6;
}

id sub_1BC4C0148(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v1 = a1;
  v2 = sub_1BC507094(v1);
  v4 = v3;

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1ED6A4888 != -1)
      swift_once();
    v7 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1BC4C0328(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;

  v1 = objc_msgSend(a1, sel_reaction);
  if (v1)
  {
    v2 = sub_1BC62C680();
    v4 = v3;

    v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v5 = v2 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v6 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v7 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

id sub_1BC4C0520(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;

  v1 = objc_msgSend(a1, sel_performer);
  if (v1)
  {
    v2 = sub_1BC62C680();
    v4 = v3;

    v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v5 = v2 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v6 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v7 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

id sub_1BC4C0718(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v27;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - v3;
  v5 = objc_msgSend(a1, sel_doseNumber);
  if (!v5)
    return 0;
  v6 = v5;
  v7 = sub_1BC62C680();
  v9 = v8;

  v10 = objc_msgSend(a1, sel_doseQuantity);
  if (v10)
  {
    v11 = v10;
    v12 = sub_1BC62C680();
    v14 = v13;

    v15 = sub_1BC62A820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BC6395A0;
    v17 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
    v18 = sub_1BC3644C0();
    *(_QWORD *)(v16 + 32) = v7;
    *(_QWORD *)(v16 + 40) = v9;
    *(_QWORD *)(v16 + 96) = v17;
    *(_QWORD *)(v16 + 104) = v18;
    *(_QWORD *)(v16 + 64) = v18;
    *(_QWORD *)(v16 + 72) = v12;
    *(_QWORD *)(v16 + 80) = v14;
    if (qword_1ED6A4888 != -1)
      swift_once();
    v19 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    v7 = sub_1BC62C6A4();
    v9 = v20;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC3B3154((uint64_t)v4);
  }
  v21 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v21 = v7 & 0xFFFFFFFFFFFFLL;
  if (!v21)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v22 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
  objc_msgSend(v22, sel_setDisplayItemType_, 15);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v23 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v24 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setTitle_, v24);

  v25 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setSubtitle_, v25);

  objc_msgSend(v22, sel_setSeparatorStyle_, 0);
  objc_msgSend(v22, sel_setSeparatorHidden_, 0);
  objc_msgSend(v22, sel_setExtraTopPadding_, 0);

  return v22;
}

id sub_1BC4C0AD0(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;

  v1 = objc_msgSend(a1, sel_lotNumber);
  if (v1)
  {
    v2 = sub_1BC62C680();
    v4 = v3;

    v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v5 = v2 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v6 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v7 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

uint64_t sub_1BC4C0CC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC62D0DC();
    sub_1BC62BEB8();
    sub_1BC347F0C(&qword_1EF432E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
    result = sub_1BC62CA1C();
    v1 = v18;
    v17 = v19;
    v3 = v20;
    v4 = v21;
    v5 = v22;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v4 << 6);
      v12 = v4;
      goto LABEL_29;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v13 >= v9)
      return sub_1BC3583F4();
    v14 = *(_QWORD *)(v17 + 8 * v13);
    v12 = v4 + 1;
    if (!v14)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v9)
        return sub_1BC3583F4();
      v14 = *(_QWORD *)(v17 + 8 * v12);
      if (!v14)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v9)
          return sub_1BC3583F4();
        v14 = *(_QWORD *)(v17 + 8 * v12);
        if (!v14)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v9)
            return sub_1BC3583F4();
          v14 = *(_QWORD *)(v17 + 8 * v12);
          if (!v14)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v9)
              return sub_1BC3583F4();
            v14 = *(_QWORD *)(v17 + 8 * v12);
            if (!v14)
            {
              v15 = v4 + 6;
              while (v9 != v15)
              {
                v14 = *(_QWORD *)(v17 + 8 * v15++);
                if (v14)
                {
                  v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1BC3583F4();
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16)
      return sub_1BC3583F4();
    while (1)
    {
      sub_1BC62BEAC();
      result = swift_release();
      v4 = v12;
      v5 = v10;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1BC62D13C())
      {
        sub_1BC62BEB8();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        v12 = v4;
        v10 = v5;
        if (v23)
          continue;
      }
      return sub_1BC3583F4();
    }
  }
  __break(1u);
  return result;
}

uint64_t UDCListDataSource.init(listManager:healthStore:collectionView:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  _QWORD v16[2];

  v4 = v3;
  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + qword_1ED6A40F0) = MEMORY[0x1E0DEE9E8];
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v4 + qword_1ED6A4100) = 0;
  *(_QWORD *)(v4 + qword_1ED6A40E8) = a1;
  *(_QWORD *)(v4 + qword_1ED6A40E0) = a2;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  swift_retain();
  v12 = a2;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "MutableArray<");
  HIWORD(v16[1]) = -4864;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v13 = sub_1BC62B2B8();
  swift_retain();
  sub_1BC4C1578();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1BC4C1134()
{
  sub_1BC62B408();
  sub_1BC62CB48();
  sub_1BC62B60C();
  return sub_1BC62CB54();
}

uint64_t UDCListDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  sub_1BC4C0CC8(v0);
  swift_bridgeObjectRelease();
  v1 = sub_1BC62B300();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();

  return v1;
}

void UDCListDataSource.__allocating_init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC4C1268()
{
  sub_1BC4C2020();
  return swift_retain();
}

uint64_t sub_1BC4C127C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + qword_1ED6A40E8);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t sub_1BC4C12CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1ED6A40F8;
  swift_beginAccess();
  return MEMORY[0x1BCCF37A4](v1);
}

void sub_1BC4C1314(void *a1)
{
  sub_1BC4C2064();

}

void (*sub_1BC4C1338(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = qword_1ED6A40F8;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCF37A4](v5);
  return sub_1BC4C13A8;
}

void sub_1BC4C13A8(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

id sub_1BC4C1410()
{
  return (id)sub_1BC4C20B4();
}

void sub_1BC4C1424(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + qword_1ED6A40E0);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_1BC4C1474())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1BC4C14B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1ED6A4100;
  v2 = *(void **)(v0 + qword_1ED6A4100);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1ED6A4100);
  }
  else
  {
    v4 = sub_1BC4C1C44(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC4C1518(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_1ED6A4100);
  *(_QWORD *)(v1 + qword_1ED6A4100) = a1;

}

void (*sub_1BC4C152C(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1BC4C14B8();
  return sub_1BC4C1560;
}

void sub_1BC4C1560(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + qword_1ED6A4100);
  *(_QWORD *)(v1 + qword_1ED6A4100) = v2;

}

uint64_t sub_1BC4C1578()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v22 = *v0;
  sub_1BC4C24E8();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v22 + class metadata base offset for UDCListDataSource;
  v5 = *(_QWORD *)(v22 + class metadata base offset for UDCListDataSource);
  sub_1BC62C8E4();
  swift_getTupleTypeMetadata2();
  v6 = sub_1BC62BE94();
  v7 = sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
  v8 = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95D90], v6);
  v9 = sub_1BC3ABB20();
  v24 = v6;
  v25 = v7;
  v26 = v8;
  v27 = v9;
  v10 = sub_1BC62BE70();
  v21 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - v12;
  v24 = (*(uint64_t (**)(__n128))(v4 + 192))(v11);
  v23 = (id)sub_1BC62CC74();
  v14 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v3, 1, 1, v14);
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v3);

  swift_release();
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v5;
  v17 = *(_QWORD *)(class metadata base offset for UDCListDataSource + v22 + 8);
  v16[3] = v17;
  v16[4] = v15;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v5;
  v18[3] = v17;
  v18[4] = sub_1BC4C2584;
  v18[5] = v16;
  MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95CB8], v10);
  sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v10);
  swift_beginAccess();
  sub_1BC62BEA0();
  swift_endAccess();
  return swift_release();
}

uint64_t (*sub_1BC4C1848())()
{
  return nullsub_1;
}

uint64_t sub_1BC4C1858@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t *v22;

  v3 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1BC62B288();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62B2C4();
  v9 = sub_1BC62A964();
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v9 >= *(_QWORD *)(v8 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v22 = a1;
  (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v9, v4);
  swift_bridgeObjectRelease();
  sub_1BC62B27C();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v11)
  {
    if (qword_1ED6A4888 == -1)
    {
LABEL_5:
      v12 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      goto LABEL_6;
    }
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
LABEL_6:
  v13 = sub_1BC62A964();
  (*(void (**)(uint64_t))(class metadata base offset for UDCListDataSource + *v1 + 208))(v13);
  v14 = sub_1BC62A964();
  v15 = (*(uint64_t (**)(uint64_t))(class metadata base offset for UDCListDataSource + *v1 + 216))(v14);
  sub_1BC38F084(v15);
  sub_1BC62BD44();
  v16 = sub_1BC62AD3C();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v18 = sub_1BC62AD24();
  v19 = v22;
  v22[3] = v16;
  v19[4] = sub_1BC347F0C((unint64_t *)&qword_1ED6A4108, v17, MEMORY[0x1E0D2A8A0]);
  result = sub_1BC36D770(v15);
  *v19 = v18;
  return result;
}

uint64_t sub_1BC4C1B1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1BC62B3C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62B330();
  sub_1BC62B378();
  sub_1BC4179B8();
  v9 = *(int *)(v8 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a1, v7, v4);
  v10 = v2 + qword_1ED6A40F8;
  swift_beginAccess();
  v11 = MEMORY[0x1BCCF37A4](v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)(a1 + v9) = v11;
  v12 = *MEMORY[0x1E0D2B1A0];
  v13 = sub_1BC62B318();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(a1, v12, v13);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
}

id sub_1BC4C1C44(uint64_t a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)(a1 + qword_1ED6A40E0);
  swift_beginAccess();
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6D40]), sel_initWithHealthStore_, *v1);
}

uint64_t UDCListDataSource.__allocating_init(listManager:healthStore:collectionView:)(uint64_t a1, void *a2, void *a3)
{
  swift_allocObject();
  return UDCListDataSource.init(listManager:healthStore:collectionView:)(a1, a2, a3);
}

_QWORD *sub_1BC4C1CF4(uint64_t a1, uint64_t a2)
{
  _QWORD *result;

  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t))(class metadata base offset for UDCListDataSource + *result + 200))(a1, a2);
    sub_1BC62B2D0();
    swift_bridgeObjectRelease();
    sub_1BC62B2DC();
    return (_QWORD *)swift_release();
  }
  return result;
}

void sub_1BC4C1D8C()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC62D394();
  __break(1u);
}

void sub_1BC4C1E04()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC62D394();
  __break(1u);
}

void sub_1BC4C1E7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();

}

uint64_t UDCListDataSource.__deallocating_deinit()
{
  UDCListDataSource.deinit();
  return swift_deallocClassInstance();
}

void UDCListDataSource.init(arrangedSections:identifier:)()
{
  sub_1BC4C1FF4();
}

uint64_t sub_1BC4C1F0C()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + **v0 + 224))();
}

uint64_t sub_1BC4C1F40()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + **v0 + 232))();
}

uint64_t sub_1BC4C1F74()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + **v0 + 240))();
}

uint64_t sub_1BC4C1FA8()
{
  MEMORY[0x1BCCF35C4](&protocol conformance descriptor for UDCListDataSource<A>);
  return sub_1BC62B660();
}

void sub_1BC4C1FF4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC4C2020()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1ED6A40E8;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1BC4C2064()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1BC4C20B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1ED6A40E0;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

void sub_1BC4C20F8()
{
  JUMPOUT(0x1BCCF35C4);
}

uint64_t sub_1BC4C2108@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1BC4C2020();
  return swift_retain();
}

uint64_t sub_1BC4C2130()
{
  uint64_t v0;

  v0 = swift_retain();
  return sub_1BC4C127C(v0);
}

uint64_t sub_1BC4C2158()
{
  return 16;
}

__n128 sub_1BC4C2164(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BC4C2170@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC4C12CC();
  *a1 = result;
  return result;
}

uint64_t sub_1BC4C2198()
{
  return sub_1BC4C2064();
}

uint64_t sub_1BC4C21BC()
{
  return 16;
}

__n128 sub_1BC4C21C8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

id sub_1BC4C21D4@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  v2 = (void *)sub_1BC4C20B4();
  *a1 = v2;
  return v2;
}

void sub_1BC4C21FC(id *a1)
{
  sub_1BC4C1424(*a1);
}

uint64_t sub_1BC4C2224()
{
  return 16;
}

__n128 sub_1BC4C2230(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

id sub_1BC4C223C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1BC4C14B8();
  *a1 = result;
  return result;
}

void sub_1BC4C2264(id *a1)
{
  sub_1BC4C1518((uint64_t)*a1);
}

uint64_t sub_1BC4C228C()
{
  return 16;
}

__n128 sub_1BC4C2298(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BC4C22A4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UDCListDataSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UDCListDataSource);
}

uint64_t method lookup function for UDCListDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UDCListDataSource.listManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 80))();
}

uint64_t dispatch thunk of UDCListDataSource.collectionView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 104))();
}

uint64_t dispatch thunk of UDCListDataSource.collectionView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 112))();
}

uint64_t dispatch thunk of UDCListDataSource.collectionView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 120))();
}

uint64_t dispatch thunk of UDCListDataSource.healthStore.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 128))();
}

uint64_t dispatch thunk of UDCListDataSource.healthStore.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 136))();
}

uint64_t dispatch thunk of UDCListDataSource.healthStore.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 144))();
}

uint64_t dispatch thunk of UDCListDataSource.conceptStore.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 152))();
}

uint64_t dispatch thunk of UDCListDataSource.conceptStore.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 160))();
}

uint64_t dispatch thunk of UDCListDataSource.conceptStore.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 168))();
}

uint64_t dispatch thunk of UDCListDataSource.__allocating_init(listManager:healthStore:collectionView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + v0 + 176))();
}

uint64_t dispatch thunk of UDCListDataSource.makePublisher()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 192))();
}

uint64_t dispatch thunk of UDCListDataSource.sectionsForItems(listItems:nonListItems:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 200))();
}

uint64_t dispatch thunk of UDCListDataSource.buttonText(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 208))();
}

uint64_t dispatch thunk of UDCListDataSource.buttonTappedCallback(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 216))();
}

uint64_t dispatch thunk of UDCListDataSource.layoutType(for:with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 224))();
}

uint64_t dispatch thunk of UDCListDataSource.registerCells(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 232))();
}

uint64_t dispatch thunk of UDCListDataSource.supplementaryItem(ofKind:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 240))();
}

void sub_1BC4C24E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4DF0)
  {
    sub_1BC62CC38();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4DF0);
  }
}

uint64_t sub_1BC4C253C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC4C2560()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1BC4C2584(uint64_t a1, uint64_t a2)
{
  return sub_1BC4C1CF4(a1, a2);
}

uint64_t sub_1BC4C2590()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4C25B4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 32))(*a1, a1[1]);
}

void sub_1BC4C25DC(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id sub_1BC4C263C()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore);
  swift_beginAccess();
  return *v1;
}

void sub_1BC4C2680(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_1BC4C26D0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC4C2714()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1BC4C2758(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BC4C27A0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void NotificationPolicy.__allocating_init(healthStore:)(void *a1)
{
  objc_class *v1;
  id v3;
  void *v4;
  _BYTE *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unsigned __int8 v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  objc_super v15;

  v3 = objc_allocWithZone(v1);
  v4 = (void *)objc_opt_self();
  v5 = v3;
  v6 = objc_msgSend(v4, sel_sharedBehavior);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_features);

    if (v8)
    {
      v9 = OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently;
      v10 = objc_msgSend(v8, sel_urgentNotificationDismiss);

      v5[v9] = v10;
      *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_cancellables] = MEMORY[0x1E0DEE9E8];
      *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_healthStore] = a1;
      sub_1BC62C680();
      v11 = objc_allocWithZone(MEMORY[0x1E0CB6940]);
      v12 = a1;
      v13 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v14 = objc_msgSend(v11, sel_initWithClientIdentifier_healthStore_, v13, v12);

      *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore] = v14;
      v15.receiver = v5;
      v15.super_class = v1;
      objc_msgSendSuper2(&v15, sel_init);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t NotificationPolicy.init(healthStore:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1BC4C510C(a1);
  v3 = v2;

  return v3;
}

uint64_t sub_1BC4C2994(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  if (qword_1EF428870 != -1)
    swift_once();
  if ((sub_1BC60FC6C() & 1) != 0)
    v4 = 0;
  else
    v4 = 27;
  return a3(v4);
}

uint64_t sub_1BC4C2AC4(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4)
{
  return sub_1BC4C552C(a2, a3, a4);
}

uint64_t sub_1BC4C2B6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  swift_getObjectType();
  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BB1C();
  v9 = sub_1BC62BB28();
  v10 = sub_1BC62CADC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v20 = v5;
    v12 = v11;
    v18 = swift_slowAlloc();
    v23 = v18;
    *(_DWORD *)v12 = 136315394;
    v19 = v6;
    v13 = sub_1BC62D718();
    v15 = sub_1BC4991F0(v13, v14, &v23);
    v21 = v3;
    v22 = v15;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v22 = sub_1BC4991F0(0xD000000000000046, 0x80000001BC65DC60, &v23);
    sub_1BC62CFF8();
    _os_log_impl(&dword_1BC30A000, v9, v10, "%s %s running", (uint8_t *)v12, 0x16u);
    v16 = v18;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v16, -1, -1);
    MEMORY[0x1BCCF36A8](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_1BC4C4B84();
  return a2();
}

uint64_t sub_1BC4C2DA0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  id v26;
  char *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t ObjectType;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v58 = a2;
  v59 = a3;
  ObjectType = swift_getObjectType();
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v50 - v5;
  v7 = sub_1BC62A604();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v57 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC62BB34();
  v56 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v50 - v14;
  sub_1BC62BB1C();
  v16 = sub_1BC62BB28();
  v17 = sub_1BC62CADC();
  v18 = os_log_type_enabled(v16, v17);
  v54 = v10;
  v55 = a1;
  if (v18)
  {
    v19 = swift_slowAlloc();
    v52 = v8;
    v20 = v19;
    v50 = swift_slowAlloc();
    v61 = v50;
    *(_DWORD *)v20 = 136315394;
    v21 = sub_1BC62D718();
    v60 = sub_1BC4991F0(v21, v22, &v61);
    v51 = v6;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v60 = sub_1BC4991F0(0xD000000000000036, 0x80000001BC65DC20, &v61);
    v6 = v51;
    v10 = v54;
    sub_1BC62CFF8();
    _os_log_impl(&dword_1BC30A000, v16, v17, "%s %s running", (uint8_t *)v20, 0x16u);
    v23 = v50;
    swift_arrayDestroy();
    a1 = v55;
    MEMORY[0x1BCCF36A8](v23, -1, -1);
    v24 = v20;
    v8 = v52;
    MEMORY[0x1BCCF36A8](v24, -1, -1);
  }

  v25 = *(void (**)(char *, uint64_t))(v56 + 8);
  v25(v15, v10);
  v26 = objc_msgSend(a1, sel_notification);
  sub_1BC62CB0C();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BC384EB4((uint64_t)v6, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  else
  {
    v27 = v6;
    v28 = v8;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v27, v7);
    v29 = objc_msgSend(a1, sel_actionIdentifier);
    v30 = sub_1BC62C680();
    v32 = v31;

    if (v30 == sub_1BC62C680() && v32 == v33)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v34 = sub_1BC62D574();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        v49 = v57;
        sub_1BC4C4B84();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v49, v7);
        goto LABEL_14;
      }
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v57, v7);
  }
  sub_1BC62BB1C();
  v35 = sub_1BC62BB28();
  v36 = sub_1BC62CAC4();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v61 = v38;
    *(_DWORD *)v37 = 136315394;
    v39 = sub_1BC62D718();
    v60 = sub_1BC4991F0(v39, v40, &v61);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2080;
    v60 = sub_1BC4991F0(0xD000000000000036, 0x80000001BC65DC20, &v61);
    sub_1BC62CFF8();
    _os_log_impl(&dword_1BC30A000, v35, v36, "%s %s No content request URL found", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    v41 = v38;
    a1 = v55;
    MEMORY[0x1BCCF36A8](v41, -1, -1);
    MEMORY[0x1BCCF36A8](v37, -1, -1);

    v42 = v12;
    v43 = v54;
  }
  else
  {

    v42 = v12;
    v43 = v10;
  }
  v25(v42, v43);
LABEL_14:
  v44 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v45 = (_QWORD *)swift_allocObject();
  v45[2] = v44;
  v45[3] = a1;
  v46 = v59;
  v45[4] = v58;
  v45[5] = v46;
  swift_retain();
  v47 = a1;
  swift_retain();
  sub_1BC4C33F4((uint64_t)v47, (void (*)(uint64_t))sub_1BC4C6360, (uint64_t)v45);
  swift_release();
  return swift_release();
}

void sub_1BC4C3380(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), void (*a4)(char *, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1BCCF37A4](v7);
  if (v8)
  {
    v9 = (void *)v8;
    sub_1BC4C403C(a2, a3, a4);

  }
}

void sub_1BC4C33F4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  void *v28;
  char *v29;
  id v30;
  uint64_t v31;
  id v32;
  _QWORD *v33;
  _QWORD *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(uint64_t);
  uint64_t v78;
  uint64_t ObjectType;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84[5];
  __int128 v85;
  __int128 v86;

  v77 = a2;
  v78 = a3;
  v75 = a1;
  ObjectType = swift_getObjectType();
  v3 = (_QWORD *)sub_1BC62AB98();
  v69 = *(v3 - 1);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v67 - v7;
  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  v73 = v8;
  v74 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v70 = (char *)&v67 - v13;
  v14 = sub_1BC62BB34();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v80 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v67 - v18;
  sub_1BC62BB1C();
  v20 = sub_1BC62BB28();
  v21 = sub_1BC62CADC();
  v22 = os_log_type_enabled(v20, v21);
  v81 = v14;
  v71 = v5;
  v68 = v11;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v84[0] = v24;
    *(_DWORD *)v23 = 136315394;
    v25 = sub_1BC62D718();
    *(_QWORD *)&v85 = sub_1BC4991F0(v25, v26, v84);
    v67 = v3;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    *(_QWORD *)&v85 = sub_1BC4991F0(0xD00000000000003BLL, 0x80000001BC65DBE0, v84);
    v3 = v67;
    sub_1BC62CFF8();
    _os_log_impl(&dword_1BC30A000, v20, v21, "%s %s running", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v24, -1, -1);
    MEMORY[0x1BCCF36A8](v23, -1, -1);

    v27 = *(void (**)(char *, uint64_t))(v15 + 8);
    v27(v19, v81);
  }
  else
  {

    v27 = *(void (**)(char *, uint64_t))(v15 + 8);
    v27(v19, v14);
  }
  v28 = (void *)v75;
  v29 = v76;
  sub_1BC62AA3C();
  v30 = *(id *)&v29[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_healthStore];
  v31 = sub_1BC62AA24();
  sub_1BC62AA30();
  v32 = objc_msgSend(v28, sel_notification);
  v33 = objc_msgSend(v32, sel_request);

  v34 = v33;
  v35 = objc_msgSend(v33, sel_content);
  v36 = objc_msgSend(v35, sel_userInfo);

  v37 = sub_1BC62C548();
  v82 = sub_1BC62C680();
  v83 = v38;
  sub_1BC62D184();
  if (*(_QWORD *)(v37 + 16) && (v39 = sub_1BC559254((uint64_t)v84), (v40 & 1) != 0))
  {
    sub_1BC375540(*(_QWORD *)(v37 + 56) + 32 * v39, (uint64_t)&v85);
  }
  else
  {
    v85 = 0u;
    v86 = 0u;
  }
  sub_1BC3DDAC0((uint64_t)v84);
  v76 = (char *)v27;
  if (!*((_QWORD *)&v86 + 1))
  {
    sub_1BC348D78((uint64_t)&v85, (uint64_t (*)(_QWORD))sub_1BC39BD68);
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    v46 = v80;
    goto LABEL_14;
  }
  v41 = v34;
  v42 = v31;
  v43 = (uint64_t)v72;
  sub_1BC62A76C();
  swift_bridgeObjectRelease();
  v44 = v73;
  v45 = v74;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v43, 1, v73) != 1)
  {
    swift_bridgeObjectRelease();
    v60 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v70, v43, v44);
    v67 = v41;
    v61 = v44;
    v62 = v45;
    v63 = objc_msgSend(v41, sel_identifier);
    sub_1BC62C680();

    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v68, v60, v61);
    v64 = v71;
    sub_1BC62AB8C();
    v84[0] = sub_1BC62AA18();
    v65 = (_QWORD *)swift_allocObject();
    v66 = v78;
    v65[2] = v77;
    v65[3] = v66;
    v65[4] = ObjectType;
    sub_1BC4C6258();
    sub_1BC4C62C0();
    swift_retain();
    sub_1BC62C038();
    swift_release();
    swift_release();
    swift_beginAccess();
    sub_1BC62BEA0();
    swift_endAccess();
    swift_release();

    swift_release();
    (*(void (**)(char *, _QWORD *))(v69 + 8))(v64, v3);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v60, v61);
    return;
  }
  sub_1BC384EB4(v43, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v46 = v80;
  v31 = v42;
  v34 = v41;
LABEL_14:
  sub_1BC62BB1C();
  swift_bridgeObjectRetain();
  v47 = sub_1BC62BB28();
  v48 = sub_1BC62CAC4();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc();
    v75 = swift_slowAlloc();
    v84[0] = v75;
    *(_DWORD *)v49 = 136446466;
    v50 = sub_1BC62D718();
    *(_QWORD *)&v85 = sub_1BC4991F0(v50, v51, v84);
    ObjectType = v31;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    swift_bridgeObjectRetain();
    v52 = v34;
    v53 = sub_1BC62C554();
    v55 = v54;
    swift_bridgeObjectRelease();
    v56 = v53;
    v34 = v52;
    *(_QWORD *)&v85 = sub_1BC4991F0(v56, v55, v84);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v47, v48, "%{public}s Could not set notification acknowledgement: Missing identifier in user info: %s", (uint8_t *)v49, 0x16u);
    v57 = v75;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v57, -1, -1);
    MEMORY[0x1BCCF36A8](v49, -1, -1);

    v58 = v80;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v58 = v46;
  }
  v59 = ((uint64_t (*)(char *, uint64_t))v76)(v58, v81);
  v77(v59);
  swift_release();

}

uint64_t sub_1BC4C3CA8(void **a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;

  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - v11;
  v13 = *a1;
  if (v13)
  {
    v14 = v13;
    sub_1BC62BB1C();
    v15 = v13;
    v16 = v13;
    v17 = sub_1BC62BB28();
    v18 = sub_1BC62CAC4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v35 = a3;
      v21 = v20;
      v38 = v20;
      *(_DWORD *)v19 = 136446466;
      v36 = a2;
      v22 = sub_1BC62D718();
      v37 = sub_1BC4991F0(v22, v23, &v38);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      v37 = (uint64_t)v13;
      v24 = v13;
      sub_1BC35E44C();
      v25 = sub_1BC62C6F8();
      v37 = sub_1BC4991F0(v25, v26, &v38);
      a2 = v36;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v17, v18, "%{public}s Could not set notification acknowledgement: %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v21, -1, -1);
      MEMORY[0x1BCCF36A8](v19, -1, -1);

    }
    else
    {

    }
    v33 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    sub_1BC62BB1C();
    v27 = sub_1BC62BB28();
    v28 = sub_1BC62CADC();
    if (os_log_type_enabled(v27, v28))
    {
      v35 = a3;
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v38 = v30;
      v36 = a2;
      *(_DWORD *)v29 = 136446210;
      v31 = sub_1BC62D718();
      v37 = sub_1BC4991F0(v31, v32, &v38);
      a2 = v36;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v27, v28, "%{public}s Successfully set notification acknowledgement", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v30, -1, -1);
      MEMORY[0x1BCCF36A8](v29, -1, -1);
    }

    v33 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return a2(v33);
}

uint64_t sub_1BC4C403C(void *a1, uint64_t (*a2)(uint64_t), void (*a3)(char *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  void *v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void **v48;
  void *v49;
  _QWORD *v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  id v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t aBlock[6];
  uint64_t v68;
  uint64_t v69;

  v4 = v3;
  v59 = a1;
  ObjectType = swift_getObjectType();
  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v65 = (char *)&v56 - v13;
  v66 = sub_1BC62BB34();
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v63 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v56 - v16;
  sub_1BC62BB1C();
  v18 = sub_1BC62BB28();
  v19 = sub_1BC62CADC();
  v20 = os_log_type_enabled(v18, v19);
  v61 = v9;
  v62 = v8;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    aBlock[0] = v57;
    *(_DWORD *)v21 = 136315394;
    v22 = sub_1BC62D718();
    v60 = v11;
    v69 = sub_1BC4991F0(v22, v23, aBlock);
    v58 = a3;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    v69 = sub_1BC4991F0(0xD00000000000003ALL, 0x80000001BC65DB70, aBlock);
    a3 = v58;
    v11 = v60;
    sub_1BC62CFF8();
    _os_log_impl(&dword_1BC30A000, v18, v19, "%s %s running", (uint8_t *)v21, 0x16u);
    v24 = v57;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v24, -1, -1);
    MEMORY[0x1BCCF36A8](v21, -1, -1);
  }

  v25 = *(void (**)(char *, uint64_t))(v64 + 8);
  v26 = v66;
  v25(v17, v66);
  v27 = (_BYTE *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently);
  v28 = swift_beginAccess();
  if (*v27 != 1)
    return a2(v28);
  v58 = v25;
  v57 = (uint64_t)a2;
  v29 = objc_msgSend(v59, sel_notification);
  v30 = objc_msgSend(v29, sel_request);

  v31 = objc_msgSend(v30, sel_identifier);
  v32 = sub_1BC62C680();
  v34 = v33;

  sub_1BC62A754();
  sub_1BC62C98C();
  sub_1BC62A6F4();
  v35 = objc_allocWithZone(MEMORY[0x1E0CB6920]);
  swift_bridgeObjectRetain();
  v64 = v32;
  v36 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v37 = (void *)sub_1BC62A700();
  v59 = objc_msgSend(v35, sel_initWithAction_categoryIdentifier_expirationDate_, 1, v36, v37);

  v38 = v63;
  sub_1BC62BB1C();
  swift_bridgeObjectRetain_n();
  v39 = sub_1BC62BB28();
  v40 = sub_1BC62CADC();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    aBlock[0] = v56;
    *(_DWORD *)v41 = 136446466;
    v60 = v11;
    v42 = sub_1BC62D718();
    v68 = sub_1BC4991F0(v42, v43, aBlock);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    swift_bridgeObjectRetain();
    v68 = sub_1BC4991F0(v64, v34, aBlock);
    v11 = v60;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BC30A000, v39, v40, "%{public}s Sending dismiss instruction for %s", (uint8_t *)v41, 0x16u);
    v44 = v56;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v44, -1, -1);
    MEMORY[0x1BCCF36A8](v41, -1, -1);

    v45 = v63;
    v46 = v66;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v45 = v38;
    v46 = v26;
  }
  v58(v45, v46);
  v48 = (void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore);
  swift_beginAccess();
  v49 = *v48;
  v50 = (_QWORD *)swift_allocObject();
  v50[2] = v64;
  v50[3] = v34;
  v50[4] = v57;
  v50[5] = a3;
  v50[6] = ObjectType;
  aBlock[4] = (uint64_t)sub_1BC4C6218;
  aBlock[5] = (uint64_t)v50;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC3EFECC;
  aBlock[3] = (uint64_t)&block_descriptor_9_6;
  v51 = _Block_copy(aBlock);
  v52 = v49;
  swift_retain();
  swift_release();
  v53 = v59;
  objc_msgSend(v52, sel_sendNotificationInstruction_completion_, v59, v51);
  _Block_release(v51);

  v54 = v62;
  v55 = *(void (**)(char *, uint64_t))(v61 + 8);
  v55(v11, v62);
  return ((uint64_t (*)(char *, uint64_t))v55)(v65, v54);
}

uint64_t sub_1BC4C46B0(int a1, void *a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t a7)
{
  NSObject *v12;
  Class isa;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, NSObject *);
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  char *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  NSObject *v48;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  char *v54;
  uint64_t v55;
  uint64_t (*v56)(_QWORD);
  uint64_t v57;
  NSObject *v58;
  uint64_t v59;
  uint64_t v60;

  v57 = a7;
  v53 = a1;
  v12 = sub_1BC62BB34();
  isa = v12[-1].isa;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v50 - v17;
  sub_1BC62BB1C();
  swift_bridgeObjectRetain_n();
  v19 = sub_1BC62BB28();
  v20 = sub_1BC62CADC();
  v58 = v19;
  v52 = v20;
  v21 = os_log_type_enabled(v19, v20);
  v51 = a3;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v56 = a5;
    v23 = v22;
    v50 = swift_slowAlloc();
    v60 = v50;
    *(_DWORD *)v23 = 136446722;
    v55 = a6;
    v24 = sub_1BC62D718();
    v59 = sub_1BC4991F0(v24, v25, &v60);
    v54 = v15;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    v59 = sub_1BC4991F0(a3, a4, &v60);
    v15 = v54;
    a6 = v55;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 22) = 1024;
    LODWORD(v59) = v53 & 1;
    sub_1BC62CFF8();
    v26 = v58;
    _os_log_impl(&dword_1BC30A000, v58, (os_log_type_t)v52, "%{public}s Sent dismiss instruction for %s successfully: %{BOOL}d", (uint8_t *)v23, 0x1Cu);
    v27 = v50;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v27, -1, -1);
    v28 = v23;
    a5 = v56;
    MEMORY[0x1BCCF36A8](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v29 = (uint64_t (*)(char *, NSObject *))*((_QWORD *)isa + 1);
  v30 = v29(v18, v12);
  if (a2)
  {
    v31 = a2;
    sub_1BC62BB1C();
    swift_bridgeObjectRetain();
    v32 = a2;
    swift_bridgeObjectRetain();
    v33 = a2;
    v34 = sub_1BC62BB28();
    v35 = v15;
    v36 = sub_1BC62CAC4();
    if (os_log_type_enabled(v34, v36))
    {
      v37 = swift_slowAlloc();
      v54 = v35;
      v38 = v37;
      v39 = swift_slowAlloc();
      v56 = a5;
      v40 = v39;
      v60 = v39;
      *(_DWORD *)v38 = 136446722;
      v55 = a6;
      v41 = sub_1BC62D718();
      v58 = v12;
      v59 = sub_1BC4991F0(v41, v42, &v60);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      swift_bridgeObjectRetain();
      v59 = sub_1BC4991F0(v51, a4, &v60);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v38 + 22) = 2082;
      v59 = (uint64_t)a2;
      v43 = a2;
      sub_1BC35E44C();
      v44 = sub_1BC62C6F8();
      v59 = sub_1BC4991F0(v44, v45, &v60);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v34, v36, "%{public}s Unable to send dismiss instruction for %s. %{public}s", (uint8_t *)v38, 0x20u);
      swift_arrayDestroy();
      v46 = v40;
      a5 = v56;
      MEMORY[0x1BCCF36A8](v46, -1, -1);
      MEMORY[0x1BCCF36A8](v38, -1, -1);

      v47 = v54;
      v48 = v58;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v47 = v35;
      v48 = v12;
    }
    v30 = v29(v47, v48);
  }
  return a5(v30);
}

void sub_1BC4C4B84()
{
  uint64_t ObjectType;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  ObjectType = swift_getObjectType();
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v1)
  {
    v2 = v1;
    v3 = (void *)sub_1BC62A598();
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = ObjectType;
    v6[4] = sub_1BC4C61CC;
    v6[5] = v4;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 1107296256;
    v6[2] = sub_1BC620F7C;
    v6[3] = &block_descriptor_39;
    v5 = _Block_copy(v6);
    swift_release();
    objc_msgSend(v2, sel_openURL_configuration_completionHandler_, v3, 0, v5);
    _Block_release(v5);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC4C4C84(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = sub_1BC62BB34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v7 = a2;
    sub_1BC62BB1C();
    v8 = a2;
    v9 = a2;
    v10 = sub_1BC62BB28();
    v11 = sub_1BC62CAC4();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v22 = v20;
      *(_DWORD *)v12 = 136315394;
      v13 = sub_1BC62D718();
      v21 = sub_1BC4991F0(v13, v14, &v22);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2112;
      v15 = a2;
      v16 = _swift_stdlib_bridgeErrorToNSError();
      v21 = v16;
      sub_1BC62CFF8();
      v17 = v19;
      *v19 = v16;

      _os_log_impl(&dword_1BC30A000, v10, v11, "%s Unable to open URL for ViewHealthRecords: %@", (uint8_t *)v12, 0x16u);
      sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4B80, (void (*)(uint64_t))sub_1BC3996E4);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v17, -1, -1);
      v18 = v20;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v18, -1, -1);
      MEMORY[0x1BCCF36A8](v12, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1BC4C4EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v5[2] = a4;
  v5[3] = a5;
  v5[4] = sub_1BC62C944();
  v5[5] = sub_1BC62C938();
  type metadata accessor for HealthRecordsViewRouter();
  v6 = (_QWORD *)swift_task_alloc();
  v5[6] = v6;
  *v6 = v5;
  v6[1] = sub_1BC4C4F74;
  return sub_1BC5B9C78(0xD000000000000022, 0x80000001BC65DD40);
}

uint64_t sub_1BC4C4F74()
{
  swift_task_dealloc();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC4C4FE4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = swift_release();
  v1(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id NotificationPolicy.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void NotificationPolicy.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id NotificationPolicy.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NotificationPolicy();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC4C510C(void *a1)
{
  void *v1;
  void *v3;
  _BYTE *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  unsigned __int8 v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  objc_super v14;

  v3 = (void *)objc_opt_self();
  v4 = v1;
  v5 = objc_msgSend(v3, sel_sharedBehavior);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_features);

    if (v7)
    {
      v8 = OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently;
      v9 = objc_msgSend(v7, sel_urgentNotificationDismiss);

      v4[v8] = v9;
      *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_cancellables] = MEMORY[0x1E0DEE9E8];
      *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_healthStore] = a1;
      sub_1BC62C680();
      v10 = objc_allocWithZone(MEMORY[0x1E0CB6940]);
      v11 = a1;
      v12 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v13 = objc_msgSend(v10, sel_initWithClientIdentifier_healthStore_, v12, v11);

      *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore] = v13;
      v14.receiver = v4;
      v14.super_class = (Class)type metadata accessor for NotificationPolicy();
      objc_msgSendSuper2(&v14, sel_init);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1BC4C527C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  swift_getObjectType();
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - v5;
  v7 = sub_1BC62BB34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BB1C();
  v11 = sub_1BC62BB28();
  v12 = sub_1BC62CADC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v28 = a1;
    v14 = v13;
    v15 = swift_slowAlloc();
    v27 = v6;
    v16 = v15;
    v31 = v15;
    *(_DWORD *)v14 = 136315394;
    v29 = a2;
    v17 = sub_1BC62D718();
    v30 = sub_1BC4991F0(v17, v18, &v31);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    v30 = sub_1BC4991F0(0xD000000000000040, 0x80000001BC65DCF0, &v31);
    a2 = v29;
    sub_1BC62CFF8();
    _os_log_impl(&dword_1BC30A000, v11, v12, "%s %s running", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    v19 = v16;
    v6 = v27;
    MEMORY[0x1BCCF36A8](v19, -1, -1);
    v20 = v14;
    a1 = v28;
    MEMORY[0x1BCCF36A8](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v21 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
  sub_1BC62C944();
  swift_retain();
  v22 = sub_1BC62C938();
  v23 = (_QWORD *)swift_allocObject();
  v24 = MEMORY[0x1E0DF06E8];
  v23[2] = v22;
  v23[3] = v24;
  v23[4] = a1;
  v23[5] = a2;
  sub_1BC5C2784((uint64_t)v6, (uint64_t)&unk_1EF432F78, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_1BC4C552C(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int EnumCaseMultiPayload;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t result;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  void (*v83)(void);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t (*v96)(void);
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103[2];

  v96 = a2;
  v97 = a3;
  ObjectType = swift_getObjectType();
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v5);
  v90 = (char *)&v84 - v6;
  v94 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1E0C80A78](v94);
  v89 = (uint64_t)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v84 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v84 - v12;
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v14);
  v100 = (char *)&v84 - v15;
  v16 = sub_1BC62A604();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v101 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC62BB34();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v95 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v92 = (char *)&v84 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v84 - v25;
  sub_1BC62BB1C();
  v27 = a1;
  v28 = sub_1BC62BB28();
  v29 = sub_1BC62CADC();
  LODWORD(v98) = v29;
  v30 = os_log_type_enabled(v28, v29);
  v99 = v17;
  v93 = ObjectType;
  if (v30)
  {
    v31 = swift_slowAlloc();
    v91 = v10;
    v32 = v31;
    v86 = swift_slowAlloc();
    v103[0] = v86;
    *(_DWORD *)v32 = 136446978;
    v33 = sub_1BC62D718();
    v88 = v19;
    v102 = sub_1BC4991F0(v33, v34, v103);
    v85 = v20;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    v102 = sub_1BC4991F0(0xD00000000000003BLL, 0x80000001BC65DCB0, v103);
    sub_1BC62CFF8();
    *(_WORD *)(v32 + 22) = 2080;
    v35 = objc_msgSend(v27, sel_notification);
    v36 = objc_msgSend(v35, sel_request);
    v87 = v13;
    v37 = v36;

    v38 = objc_msgSend(v37, sel_identifier);
    v39 = sub_1BC62C680();
    v40 = v16;
    v42 = v41;

    v102 = sub_1BC4991F0(v39, v42, v103);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 32) = 2082;
    v43 = objc_msgSend(v27, sel_actionIdentifier);
    v44 = sub_1BC62C680();
    v46 = v45;

    v13 = v87;
    v47 = v44;
    v16 = v40;
    v17 = v99;
    v102 = sub_1BC4991F0(v47, v46, v103);
    v19 = v88;
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v28, (os_log_type_t)v98, "%{public}s %{public}s notification: %s action: %{public}s", (uint8_t *)v32, 0x2Au);
    v48 = v86;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v48, -1, -1);
    v49 = v32;
    v10 = v91;
    MEMORY[0x1BCCF36A8](v49, -1, -1);

    v98 = *(void (**)(char *, uint64_t))(v85 + 8);
    v98(v26, v19);
    v50 = 0x1E7511000;
  }
  else
  {
    v50 = 0x1F2931000uLL;

    v98 = *(void (**)(char *, uint64_t))(v20 + 8);
    v98(v26, v19);
  }
  v51 = (uint64_t)v101;
  v52 = objc_msgSend(v27, *(SEL *)(v50 + 4048));
  v53 = (uint64_t)v100;
  sub_1BC62CB0C();

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v53, 1, v16) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v51, v53, v16);
    type metadata accessor for HealthRecordsURLHandler();
    swift_initStackObject();
    sub_1BC47ABA0(v51, (uint64_t)v13);
    sub_1BC397938((uint64_t)v13, (uint64_t)v10);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 13)
      {
        sub_1BC4C2DA0(v27, (uint64_t)v96, v97);
        goto LABEL_23;
      }
      if (EnumCaseMultiPayload == 2)
      {
        sub_1BC397938((uint64_t)v10, v89);
        swift_bridgeObjectRelease();
        sub_1BC4C527C((uint64_t)v96, v97);
LABEL_23:
        swift_release();
        sub_1BC348D78((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsURLParsingResult);
        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v51, v16);
        return sub_1BC348D78((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsURLParsingResult);
      }
    }
    else if (URL.isCategoryRoomURL.getter())
    {
      sub_1BC4C2B6C(v51, v96);
      goto LABEL_23;
    }
    v75 = v92;
    sub_1BC62BB1C();
    v76 = sub_1BC62BB28();
    v77 = sub_1BC62CADC();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = swift_slowAlloc();
      v79 = swift_slowAlloc();
      v103[0] = v79;
      *(_DWORD *)v78 = 136315394;
      v91 = v10;
      v80 = sub_1BC62D718();
      v102 = sub_1BC4991F0(v80, v81, v103);
      v100 = (char *)v16;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v78 + 12) = 2080;
      v102 = sub_1BC4991F0(0xD00000000000003BLL, 0x80000001BC65DCB0, v103);
      v16 = (uint64_t)v100;
      v10 = v91;
      sub_1BC62CFF8();
      _os_log_impl(&dword_1BC30A000, v76, v77, "%s %s default response: open URL", (uint8_t *)v78, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v79, -1, -1);
      MEMORY[0x1BCCF36A8](v78, -1, -1);

      v82 = v92;
    }
    else
    {

      v82 = v75;
    }
    v98(v82, v19);
    v83 = (void (*)(void))v96;
    v51 = (uint64_t)v101;
    sub_1BC4C4B84();
    v83();
    goto LABEL_23;
  }
  sub_1BC384EB4(v53, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v54 = v95;
  sub_1BC62BB1C();
  v55 = sub_1BC62BB28();
  v56 = sub_1BC62CADC();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    v103[0] = v58;
    *(_DWORD *)v57 = 136315394;
    v59 = sub_1BC62D718();
    v102 = sub_1BC4991F0(v59, v60, v103);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2080;
    v102 = sub_1BC4991F0(0xD00000000000003BLL, 0x80000001BC65DCB0, v103);
    sub_1BC62CFF8();
    _os_log_impl(&dword_1BC30A000, v55, v56, "%s %s No content request URL found", (uint8_t *)v57, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v58, -1, -1);
    MEMORY[0x1BCCF36A8](v57, -1, -1);
  }

  v98(v54, v19);
  v62 = objc_msgSend(v27, sel_actionIdentifier);
  v63 = sub_1BC62C680();
  v65 = v64;

  if (v63 == sub_1BC62C680() && v65 == v66)
    return swift_bridgeObjectRelease_n();
  v68 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v68 & 1) == 0)
  {
    v69 = sub_1BC62C95C();
    v70 = (uint64_t)v90;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v90, 1, 1, v69);
    sub_1BC62C944();
    v71 = v97;
    swift_retain();
    v72 = sub_1BC62C938();
    v73 = (_QWORD *)swift_allocObject();
    v74 = MEMORY[0x1E0DF06E8];
    v73[2] = v72;
    v73[3] = v74;
    v73[4] = v96;
    v73[5] = v71;
    sub_1BC5C2784(v70, (uint64_t)&unk_1EF432F70, (uint64_t)v73);
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for NotificationPolicy()
{
  return objc_opt_self();
}

id sub_1BC4C5FD8@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1BC4C602C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1BC4C607C(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t method lookup function for NotificationPolicy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NotificationPolicy.notificationSyncStore.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of NotificationPolicy.notificationSyncStore.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of NotificationPolicy.notificationSyncStore.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of NotificationPolicy.shouldDismissNotificationsUrgently.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of NotificationPolicy.shouldDismissNotificationsUrgently.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of NotificationPolicy.shouldDismissNotificationsUrgently.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of NotificationPolicy.__allocating_init(healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of NotificationPolicy.userNotificationCenter(_:willPresent:withCompletionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of NotificationPolicy.userNotificationCenter(_:didReceive:withCompletionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t sub_1BC4C61BC()
{
  return swift_deallocObject();
}

void sub_1BC4C61CC(uint64_t a1, void *a2)
{
  sub_1BC4C4C84(a1, a2);
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t sub_1BC4C61EC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4C6218(int a1, void *a2)
{
  uint64_t v2;

  return sub_1BC4C46B0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(_QWORD))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1BC4C6228()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4C624C(void **a1)
{
  uint64_t v1;

  return sub_1BC4C3CA8(a1, *(uint64_t (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BC4C6258()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432F58)
  {
    sub_1BC35E44C();
    v0 = sub_1BC62BE94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432F58);
  }
}

unint64_t sub_1BC4C62C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF432F60;
  if (!qword_1EF432F60)
  {
    sub_1BC4C6258();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, &qword_1EF432F60);
  }
  return result;
}

uint64_t sub_1BC4C6308()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC4C632C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1BC4C6360()
{
  uint64_t v0;

  sub_1BC4C3380(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(void (**)(char *, uint64_t))(v0 + 40));
}

uint64_t sub_1BC4C636C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BC4C6394(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC3781C0;
  return sub_1BC4C4EF0(a1, v4, v5, v7, v6);
}

uint64_t sub_1BC4C6410(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC377F18;
  return sub_1BC4C4EF0(a1, v4, v5, v7, v6);
}

id MedicalRecordChartPoint.__allocating_init(chartableSet:unit:blockCoordinateInfo:)(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  objc_super v17;
  uint64_t v18;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet] = a1;
  v8 = v7;
  v9 = a1;
  v10 = objc_msgSend(v9, sel_quantities);
  sub_1BC3B3DC8();
  v11 = sub_1BC62C878();

  v12 = a2;
  v13 = sub_1BC4C7990(v11, (uint64_t)v12);
  swift_bridgeObjectRelease();

  v18 = v13;
  swift_bridgeObjectRetain();
  sub_1BC4C702C(&v18);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues] = v18;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo] = a3;
  v14 = a3;

  v17.receiver = v8;
  v17.super_class = v3;
  v15 = objc_msgSendSuper2(&v17, sel_init);

  return v15;
}

id MedicalRecordChartPoint.chartableSet.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet);
}

id MedicalRecordChartPoint.blockCoordinateInfo.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo);
}

uint64_t MedicalRecordChartPoint.sortedYValues.getter()
{
  return swift_bridgeObjectRetain();
}

id MedicalRecordChartPoint.init(chartableSet:unit:blockCoordinateInfo:)(void *a1, void *a2, void *a3)
{
  id v6;

  v6 = sub_1BC4C7B00(a1, a2, a3);

  return v6;
}

void *sub_1BC4C6648()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo);
  v2 = v1;
  return v1;
}

void sub_1BC4C6684(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet), sel_date));
  a1[3] = sub_1BC62A760();
  __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1BC62A724();

}

double sub_1BC4C68FC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v2 = v1;
  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BAE0();
  v8 = sub_1BC62BB28();
  v9 = sub_1BC62CAC4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    MEMORY[0x1BCCF36A8](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues);
  if (*(_QWORD *)(v11 + 16))
  {
    result = *(double *)(v11 + 32);
    *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEB070];
    *(double *)a1 = result;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1BC4C6B14()
{
  uint64_t v0;

  return sub_1BC3D2678(*(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues));
}

double sub_1BC4C6B84@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues);
  if (*(_QWORD *)(v2 + 16))
  {
    result = *(double *)(v2 + 32);
    *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEB070];
    *(double *)a1 = result;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double sub_1BC4C6C0C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    result = *(double *)(v2 + 8 * v3 + 24);
    *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEB070];
    *(double *)a1 = result;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1BC4C6D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = v0;
  v2 = sub_1BC62A760();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  sub_1BC62C764();
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet), sel_date));
  sub_1BC62A724();

  sub_1BC4C7C1C();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1BC62C764();
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues);
  if (*(_QWORD *)(v7 + 16))
    sub_1BC62C980();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  if (*(_QWORD *)(v7 + 16))
    sub_1BC62C980();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return v9[0];
}

id MedicalRecordChartPoint.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicalRecordChartPoint.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicalRecordChartPoint.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordChartPoint();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC4C702C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC5048C8(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BC4C7094(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BC4C7094(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  uint64_t v26;
  double *v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t i;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1BC62D520();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v80 = 0;
      v81 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v83 = *(double *)(v81 + 8 * i);
        v84 = v80;
        do
        {
          v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85)
            break;
          if (!v81)
            goto LABEL_140;
          *(_QWORD *)(v85 + 8) = *(_QWORD *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v97 = result;
  v98 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v96 = v8;
      if (v12 >= 2)
      {
        v86 = *v2;
        do
        {
          v87 = v12 - 2;
          if (v12 < 2)
            goto LABEL_131;
          if (!v86)
            goto LABEL_144;
          v88 = v11;
          v89 = v11 + 32;
          v90 = *(_QWORD *)&v11[16 * v87 + 32];
          v91 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1BC4C7724((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(_QWORD *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1)
            break;
          if (v91 < v90)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v88 = sub_1BC504414((uint64_t)v88);
          if (v87 >= *((_QWORD *)v88 + 2))
            goto LABEL_133;
          v92 = &v88[16 * v87 + 32];
          *(_QWORD *)v92 = v90;
          *((_QWORD *)v92 + 1) = v91;
          v93 = *((_QWORD *)v88 + 2);
          if (v12 > v93)
            goto LABEL_134;
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          v11 = v88;
          *((_QWORD *)v88 + 2) = v93 - 1;
          v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v96 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BC62C8CC();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v98;
    v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v94 = v2;
  v95 = *v2 - 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v99 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(double *)(v10 + 8 * v9);
      v15 = *(double *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = v16;
          v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_137;
        if (v13 < v9)
        {
          v18 = (uint64_t *)(v95 + 8 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_143;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_135;
    if (v9 - v13 >= v97)
      goto LABEL_46;
    v23 = v13 + v97;
    if (__OFADD__(v13, v97))
      goto LABEL_138;
    if (v23 >= v3)
      v23 = v3;
    if (v23 < v13)
      break;
    if (v9 != v23)
    {
      v24 = (double *)(v95 + 8 * v9);
      do
      {
        v25 = *(double *)(v10 + 8 * v9);
        v26 = v13;
        v27 = v24;
        do
        {
          v28 = *v27;
          if (v25 >= *v27)
            break;
          if (!v10)
            goto LABEL_141;
          *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      v9 = v23;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BC503AB4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v30 = *((_QWORD *)v11 + 2);
    v29 = *((_QWORD *)v11 + 3);
    v12 = v30 + 1;
    v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_1BC503AB4((char *)(v29 > 1), v30 + 1, 1, v11);
      v10 = v99;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(_QWORD *)v32 = v13;
    *((_QWORD *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        v33 = v12 - 1;
        if (v12 >= 4)
        {
          v38 = &v31[16 * v12];
          v39 = *((_QWORD *)v38 - 8);
          v40 = *((_QWORD *)v38 - 7);
          v44 = __OFSUB__(v40, v39);
          v41 = v40 - v39;
          if (v44)
            goto LABEL_119;
          v43 = *((_QWORD *)v38 - 6);
          v42 = *((_QWORD *)v38 - 5);
          v44 = __OFSUB__(v42, v43);
          v36 = v42 - v43;
          v37 = v44;
          if (v44)
            goto LABEL_120;
          v45 = v12 - 2;
          v46 = &v31[16 * v12 - 32];
          v48 = *(_QWORD *)v46;
          v47 = *((_QWORD *)v46 + 1);
          v44 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          if (v44)
            goto LABEL_122;
          v44 = __OFADD__(v36, v49);
          v50 = v36 + v49;
          if (v44)
            goto LABEL_125;
          if (v50 >= v41)
          {
            v68 = &v31[16 * v33];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v44 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v44)
              goto LABEL_129;
            v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v62 = *((_QWORD *)v11 + 4);
            v63 = *((_QWORD *)v11 + 5);
            v44 = __OFSUB__(v63, v62);
            v55 = v63 - v62;
            v56 = v44;
            goto LABEL_77;
          }
          v35 = *((_QWORD *)v11 + 4);
          v34 = *((_QWORD *)v11 + 5);
          v44 = __OFSUB__(v34, v35);
          v36 = v34 - v35;
          v37 = v44;
        }
        if ((v37 & 1) != 0)
          goto LABEL_121;
        v45 = v12 - 2;
        v51 = &v31[16 * v12 - 32];
        v53 = *(_QWORD *)v51;
        v52 = *((_QWORD *)v51 + 1);
        v54 = __OFSUB__(v52, v53);
        v55 = v52 - v53;
        v56 = v54;
        if (v54)
          goto LABEL_124;
        v57 = &v31[16 * v33];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v44 = __OFSUB__(v58, v59);
        v60 = v58 - v59;
        if (v44)
          goto LABEL_127;
        if (__OFADD__(v55, v60))
          goto LABEL_128;
        if (v55 + v60 >= v36)
        {
          v61 = v36 < v60;
LABEL_83:
          if (v61)
            v33 = v45;
          goto LABEL_85;
        }
LABEL_77:
        if ((v56 & 1) != 0)
          goto LABEL_123;
        v64 = &v31[16 * v33];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v44 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v44)
          goto LABEL_126;
        if (v67 < v55)
          goto LABEL_15;
LABEL_85:
        v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10)
          goto LABEL_142;
        v73 = &v31[16 * v72];
        v74 = *(_QWORD *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        v77 = *((_QWORD *)v76 + 1);
        sub_1BC4C7724((double *)(v10 + 8 * *(_QWORD *)v73), (double *)(v10 + 8 * *(_QWORD *)v76), v10 + 8 * v77, __dst);
        if (v1)
          goto LABEL_113;
        if (v77 < v74)
          goto LABEL_116;
        if (v33 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v73 = v74;
        *(_QWORD *)&v75[16 * v72 + 8] = v77;
        v78 = *((_QWORD *)v11 + 2);
        if (v33 >= v78)
          goto LABEL_118;
        v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        v31 = v75;
        *((_QWORD *)v11 + 2) = v78 - 1;
        v10 = v99;
        if (v78 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v98;
    if (v9 >= v98)
    {
      v8 = v96;
      v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC4C7724(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  uint64_t result;
  double *v22;
  double *v23;
  double *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (double *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1BC503C84((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC4C7990(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = v2;
  if (a1 >> 62)
    goto LABEL_15;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    if (!v6)
      return v7;
    v16 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC3BDAB0(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
      break;
    v15 = v3;
    v9 = 0;
    v7 = v16;
    while (v6 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1BCCF24CC](v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      objc_msgSend(v10, sel_doubleValueForUnit_, a2, v15);
      v13 = v12;

      v3 = *(_QWORD *)(v16 + 16);
      v14 = *(_QWORD *)(v16 + 24);
      if (v3 >= v14 >> 1)
        sub_1BC3BDAB0(v14 > 1, v3 + 1, 1);
      ++v9;
      *(_QWORD *)(v16 + 16) = v3 + 1;
      *(_QWORD *)(v16 + 8 * v3 + 32) = v13;
      if (v6 == v9)
        return v7;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v6 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_1BC4C7B00(void *a1, void *a2, void *a3)
{
  char *v3;
  char *v7;
  id v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  objc_super v14;
  uint64_t v15;

  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet] = a1;
  v7 = v3;
  v8 = objc_msgSend(a1, sel_quantities);
  sub_1BC3B3DC8();
  v9 = sub_1BC62C878();

  v10 = a2;
  v11 = sub_1BC4C7990(v9, (uint64_t)v10);
  swift_bridgeObjectRelease();

  v15 = v11;
  swift_bridgeObjectRetain();
  sub_1BC4C702C(&v15);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues] = v15;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo] = a3;
  v12 = a3;

  v14.receiver = v7;
  v14.super_class = (Class)type metadata accessor for MedicalRecordChartPoint();
  return objc_msgSendSuper2(&v14, sel_init);
}

unint64_t sub_1BC4C7C1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF432FA0;
  if (!qword_1EF432FA0)
  {
    v1 = sub_1BC62A760();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF432FA0);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordChartPoint()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedicalRecordChartPoint()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.__allocating_init(chartableSet:unit:blockCoordinateInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.userInfo()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.xValueAsGenericType()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.maxXValueAsGenericType()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.minXValueAsGenericType()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.yValue()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.yValue(forKey:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.allYValues()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.minYValue()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.maxYValue()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

void *BrowseIcon.tintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  if ((*(_QWORD *)(v0 + 32) & 0x8000000000000000) != 0)
    return 0;
  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

BOOL BrowseIcon.ignoreInvertColors.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32) >= 0;
}

void BrowseIcon.hash(into:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;

  v2 = *(void **)v0;
  v1 = *(void **)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 32);
  if (v3 < 0)
  {
    v6 = *(_QWORD *)(v0 + 16);
    v7 = *(_QWORD *)(v0 + 24);
    v8 = *(void **)(v0 + 40);
    sub_1BC62D67C();
    sub_1BC62D67C();
    sub_1BC62D67C();
    if ((v3 & 1) == 0)
    {
      sub_1BC62D6A0();
      sub_1BC62D6A0();
      sub_1BC62D6A0();
    }
    v9 = v8;
    sub_1BC62CEC0();
    sub_1BC378D70(v2, v1, v6, v7, v3, v8);
  }
  else
  {
    sub_1BC62D67C();
    v4 = v1;
    v11 = v2;
    sub_1BC62CEC0();
    sub_1BC62D688();
    if (v1)
    {
      v10 = v4;
      sub_1BC62CEC0();

      v5 = v10;
    }
    else
    {
      v5 = v11;
    }

  }
}

uint64_t BrowseIcon.hashValue.getter()
{
  sub_1BC62D670();
  BrowseIcon.hash(into:)();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4C7FE0()
{
  sub_1BC62D670();
  BrowseIcon.hash(into:)();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4C8034()
{
  sub_1BC62D670();
  BrowseIcon.hash(into:)();
  return sub_1BC62D6AC();
}

uint64_t _s15HealthRecordsUI10BrowseIconO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  id v20;
  id v21;
  char v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char v29;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  double v49[4];
  char v50;
  void *v51;
  double v52[4];
  char v53;
  void *v54;

  v2 = *(void **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(void **)(a1 + 40);
  v7 = *(void **)a2;
  v6 = *(void **)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  v10 = *(void **)(a2 + 40);
  v47 = *(void **)a1;
  v48 = *(_QWORD *)(a1 + 32);
  if (v48 < 0)
  {
    if (v11 < 0)
    {
      LOBYTE(v52[0]) = v47 & 1;
      *(_QWORD *)&v52[1] = v2;
      *(_QWORD *)&v52[2] = v3;
      v31 = v3;
      *(_QWORD *)&v52[3] = v4;
      v53 = v48 & 1;
      v54 = v5;
      v32 = v7;
      LOBYTE(v49[0]) = v7 & 1;
      v33 = v6;
      *(_QWORD *)&v49[1] = v6;
      *(_QWORD *)&v49[2] = v8;
      *(_QWORD *)&v49[3] = v9;
      v50 = v11 & 1;
      v51 = v10;
      v34 = v32;
      v39 = v32;
      v35 = v8;
      v44 = v11;
      v36 = v11;
      v37 = v10;
      sub_1BC35EEF4(v32, v33, v8, v9, v36, v10);
      sub_1BC35EEF4(v47, v2, v31, v4, v48, v5);
      sub_1BC35EEF4(v34, v33, v35, v9, v44, v10);
      sub_1BC35EEF4(v47, v2, v31, v4, v48, v5);
      v29 = _s15HealthRecordsUI11AccountIconV2eeoiySbAC_ACtFZ_0(v52, v49);
      sub_1BC378D70(v47, v2, v31, v4, v48, v5);
      sub_1BC378D70(v39, v33, v35, v9, v44, v37);
      sub_1BC378D70(v39, v33, v35, v9, v44, v37);
      sub_1BC378D70(v47, v2, v31, v4, v48, v5);
      return v29 & 1;
    }
    goto LABEL_9;
  }
  if (v11 < 0)
  {
LABEL_9:
    v45 = *(_QWORD *)(a2 + 16);
    sub_1BC35EEF4(v7, v6, v8, v9, v11, v10);
    sub_1BC35EEF4(v47, v2, v3, v4, v48, v5);
    sub_1BC378D70(v47, v2, v3, v4, v48, v5);
    v23 = v7;
    v24 = v6;
    v25 = v45;
    v26 = v9;
    v27 = v11;
    v28 = v10;
LABEL_11:
    sub_1BC378D70(v23, v24, v25, v26, v27, v28);
    goto LABEL_12;
  }
  v12 = *(_QWORD *)(a2 + 16);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  v43 = v11;
  sub_1BC35EEF4(v7, v6, v12, v9, v11, v10);
  v13 = v3;
  v41 = v5;
  v42 = v4;
  sub_1BC35EEF4(v47, v2, v3, v4, v48, v5);
  v40 = v6;
  v14 = v10;
  v46 = v9;
  v15 = v47;
  v16 = v2;
  v17 = v7;
  v18 = v16;
  v19 = sub_1BC62CEB4();

  if ((v19 & 1) == 0)
  {

    sub_1BC378D70(v47, v16, v13, v42, v48, v41);
    v23 = v7;
    v24 = v6;
    v25 = v12;
    v26 = v46;
    v27 = v43;
    v28 = v14;
    goto LABEL_11;
  }
  if (v16)
  {
    if (v6)
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
      v20 = v18;
      v21 = v40;
      v22 = sub_1BC62CEB4();

      sub_1BC378D70(v47, v16, v13, v42, v48, v41);
      sub_1BC378D70(v7, v6, v12, v46, v43, v14);

      if ((v22 & 1) != 0)
        goto LABEL_16;
      goto LABEL_12;
    }
    sub_1BC378D70(v47, v16, v13, v42, v48, v41);
    sub_1BC378D70(v7, 0, v12, v46, v43, v14);
    v38 = v18;
  }
  else
  {
    sub_1BC378D70(v47, 0, v13, v42, v48, v41);
    sub_1BC378D70(v7, v6, v12, v46, v43, v14);
    v38 = v40;
    if (!v6)
    {
LABEL_16:
      v29 = 1;
      return v29 & 1;
    }
  }

LABEL_12:
  v29 = 0;
  return v29 & 1;
}

unint64_t sub_1BC4C84F0()
{
  unint64_t result;

  result = qword_1EF432FD0;
  if (!qword_1EF432FD0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for BrowseIcon, &type metadata for BrowseIcon);
    atomic_store(result, (unint64_t *)&qword_1EF432FD0);
  }
  return result;
}

void destroy for BrowseIcon(uint64_t a1)
{
  sub_1BC378D70(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(void **)(a1 + 40));
}

_QWORD *initializeWithCopy for BrowseIcon(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  sub_1BC35EEF4(*(void **)a2, v4, v5, v6, v7, v8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  return a1;
}

uint64_t assignWithCopy for BrowseIcon(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  sub_1BC35EEF4(*(void **)a2, v4, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(void **)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(void **)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  sub_1BC378D70(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for BrowseIcon(uint64_t a1, _OWORD *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;

  v3 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a1 + 40);
  v9 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_OWORD *)(a1 + 32) = a2[2];
  sub_1BC378D70(v3, v5, v4, v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseIcon(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for BrowseIcon(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 40) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = 2 * -a2;
      *(_QWORD *)(a1 + 40) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BC4C8720(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32) >> 63;
}

uint64_t sub_1BC4C872C(uint64_t result)
{
  *(_QWORD *)(result + 32) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1BC4C873C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 32) = *(_QWORD *)(result + 32) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for BrowseIcon()
{
  return &type metadata for BrowseIcon;
}

uint64_t LabTipFeedItemData.concept.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1BC4C8798();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_1BC4C8798()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF432FD8)
  {
    sub_1BC4C87EC();
    v0 = sub_1BC62C524();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF432FD8);
  }
}

unint64_t sub_1BC4C87EC()
{
  unint64_t result;

  result = qword_1ED6A4938;
  if (!qword_1ED6A4938)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A4938);
  }
  return result;
}

uint64_t LabTipFeedItemData.ontologyPreferredName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for LabTipFeedItemData() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for LabTipFeedItemData()
{
  uint64_t result;

  result = qword_1EF433060;
  if (!qword_1EF433060)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LabTipFeedItemData.ontologyPreferredName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for LabTipFeedItemData() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*LabTipFeedItemData.ontologyPreferredName.modify())(_QWORD)
{
  type metadata accessor for LabTipFeedItemData();
  return nullsub_1;
}

uint64_t LabTipFeedItemData.relevanceInMonths.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for LabTipFeedItemData() + 24));
}

uint64_t LabTipFeedItemData.relevanceInMonths.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LabTipFeedItemData();
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*LabTipFeedItemData.relevanceInMonths.modify())(_QWORD)
{
  type metadata accessor for LabTipFeedItemData();
  return nullsub_1;
}

uint64_t LabTipFeedItemData.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LabTipFeedItemData() + 28);
  v4 = sub_1BC62A7B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LabTipFeedItemData.uuid.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LabTipFeedItemData() + 28);
  v4 = sub_1BC62A7B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*LabTipFeedItemData.uuid.modify())(_QWORD)
{
  type metadata accessor for LabTipFeedItemData();
  return nullsub_1;
}

uint64_t LabTipFeedItemData.init(concept:ontologyPreferredName:relevanceInMonths:uuid:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  int *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BC4C87EC();
  sub_1BC62C530();
  v10 = (int *)type metadata accessor for LabTipFeedItemData();
  v11 = (_QWORD *)(a5 + v10[5]);
  *v11 = a1;
  v11[1] = a2;
  *(_QWORD *)(a5 + v10[6]) = a3;
  v12 = a5 + v10[7];
  v13 = sub_1BC62A7B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a4, v13);
}

uint64_t sub_1BC4C8AD4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC4C8B04 + 4 * byte_1BC643CD0[*v0]))(0x747065636E6F63, 0xE700000000000000);
}

unint64_t sub_1BC4C8B04()
{
  return 0xD000000000000015;
}

unint64_t sub_1BC4C8B24()
{
  return 0xD000000000000011;
}

uint64_t sub_1BC4C8B40()
{
  return 1684632949;
}

uint64_t sub_1BC4C8B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC4C9ACC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC4C8B74(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1BC4C8B80()
{
  sub_1BC4C922C();
  return sub_1BC62D700();
}

uint64_t sub_1BC4C8BA8()
{
  sub_1BC4C922C();
  return sub_1BC62D70C();
}

uint64_t LabTipFeedItemData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BC4C9270(0, &qword_1EF432FE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC4C922C();
  sub_1BC62D6F4();
  v9[15] = 0;
  sub_1BC4C8798();
  sub_1BC347F0C(&qword_1EF432FF0, (uint64_t (*)(uint64_t))sub_1BC4C8798, MEMORY[0x1E0CB4358]);
  sub_1BC62D4FC();
  if (!v1)
  {
    type metadata accessor for LabTipFeedItemData();
    v9[14] = 1;
    sub_1BC62D4D8();
    v9[13] = 2;
    sub_1BC62D4F0();
    v9[12] = 3;
    sub_1BC62A7B4();
    sub_1BC347F0C(qword_1EF429C80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1BC62D4FC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t LabTipFeedItemData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v26 = a2;
  v27 = sub_1BC62A7B4();
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v28 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4C8798();
  v30 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4C9270(0, &qword_1EF432FF8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v32 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - v9;
  v11 = type metadata accessor for LabTipFeedItemData();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC4C922C();
  v31 = v10;
  v14 = v33;
  sub_1BC62D6DC();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v15 = v8;
  v16 = (uint64_t)a1;
  v37 = 0;
  sub_1BC347F0C(&qword_1EF433000, (uint64_t (*)(uint64_t))sub_1BC4C8798, MEMORY[0x1E0CB4370]);
  v17 = v29;
  sub_1BC62D490();
  v33 = v5;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v17, v30);
  v36 = 1;
  v18 = sub_1BC62D46C();
  v19 = v11;
  v20 = (uint64_t *)&v13[*(int *)(v11 + 20)];
  *v20 = v18;
  v20[1] = v21;
  v35 = 2;
  *(_QWORD *)&v13[*(int *)(v11 + 24)] = sub_1BC62D484();
  v34 = 3;
  sub_1BC347F0C(&qword_1EF429C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v22 = v27;
  sub_1BC62D490();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v31, v32);
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v13[*(int *)(v19 + 28)], v28, v22);
  sub_1BC4C92CC((uint64_t)v13, v26);
  __swift_destroy_boxed_opaque_existential_1Tm(v16);
  return sub_1BC4C9310((uint64_t)v13);
}

uint64_t sub_1BC4C912C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LabTipFeedItemData.init(from:)(a1, a2);
}

uint64_t sub_1BC4C9140(_QWORD *a1)
{
  return LabTipFeedItemData.encode(to:)(a1);
}

uint64_t _s15HealthRecordsUI18LabTipFeedItemDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;

  sub_1BC4C87EC();
  sub_1BC347F0C(&qword_1EF4330B8, (uint64_t (*)(uint64_t))sub_1BC4C87EC, MEMORY[0x1E0DEFD00]);
  if ((sub_1BC62C518() & 1) != 0
    && ((v4 = type metadata accessor for LabTipFeedItemData(),
         v5 = *(int *)(v4 + 20),
         v6 = *(_QWORD *)(a1 + v5),
         v7 = *(_QWORD *)(a1 + v5 + 8),
         v8 = (_QWORD *)(a2 + v5),
         v6 == *v8)
      ? (v9 = v7 == v8[1])
      : (v9 = 0),
        (v9 || (sub_1BC62D574() & 1) != 0) && *(_QWORD *)(a1 + *(int *)(v4 + 24)) == *(_QWORD *)(a2 + *(int *)(v4 + 24))))
  {
    return sub_1BC62A790();
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1BC4C922C()
{
  unint64_t result;

  result = qword_1EF432FE8;
  if (!qword_1EF432FE8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC643E74, &type metadata for LabTipFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF432FE8);
  }
  return result;
}

void sub_1BC4C9270(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC4C922C();
    v7 = a3(a1, &type metadata for LabTipFeedItemData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC4C92CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LabTipFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC4C9310(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LabTipFeedItemData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for LabTipFeedItemData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1BC4C8798();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = *v11;
    v13 = v11[1];
    v14 = *(uint64_t *)((char *)a2 + v9);
    *v10 = v12;
    v10[1] = v13;
    *(uint64_t *)((char *)a1 + v9) = v14;
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_1BC62A7B4();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for LabTipFeedItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BC4C8798();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_1BC62A7B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for LabTipFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  sub_1BC4C8798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (uint64_t *)(a2 + v7);
  v11 = *v10;
  v12 = v10[1];
  v13 = *(_QWORD *)(a2 + v8);
  *v9 = v11;
  v9[1] = v12;
  *(_QWORD *)(a1 + v8) = v13;
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1BC62A7B4();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  return a1;
}

uint64_t assignWithCopy for LabTipFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BC4C8798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for LabTipFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC4C8798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for LabTipFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1BC4C8798();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for LabTipFeedItemData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC4C972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  sub_1BC4C8798();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1BC62A7B4();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for LabTipFeedItemData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BC4C97E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_1BC4C8798();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return;
    }
    v10 = sub_1BC62A7B4();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  v11(v12, a2, a2, v10);
}

void sub_1BC4C988C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC4C8798();
  if (v0 <= 0x3F)
  {
    sub_1BC62A7B4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for LabTipFeedItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC4C9974 + 4 * byte_1BC643CD9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC4C99A8 + 4 * byte_1BC643CD4[v4]))();
}

uint64_t sub_1BC4C99A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4C99B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC4C99B8);
  return result;
}

uint64_t sub_1BC4C99C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4C99CCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC4C99D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4C99D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LabTipFeedItemData.CodingKeys()
{
  return &type metadata for LabTipFeedItemData.CodingKeys;
}

unint64_t sub_1BC4C99F8()
{
  unint64_t result;

  result = qword_1EF4330A0;
  if (!qword_1EF4330A0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC643E4C, &type metadata for LabTipFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4330A0);
  }
  return result;
}

unint64_t sub_1BC4C9A40()
{
  unint64_t result;

  result = qword_1EF4330A8;
  if (!qword_1EF4330A8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC643DBC, &type metadata for LabTipFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4330A8);
  }
  return result;
}

unint64_t sub_1BC4C9A88()
{
  unint64_t result;

  result = qword_1EF4330B0;
  if (!qword_1EF4330B0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC643DE4, &type metadata for LabTipFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4330B0);
  }
  return result;
}

uint64_t sub_1BC4C9ACC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x747065636E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BC65DE40 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BC65DE60 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

id static UIColor.dynamicColor(default:dark:)(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  _QWORD v11[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v11[4] = sub_1BC4CB6DC;
  v11[5] = v4;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1BC4CB70C;
  v11[3] = &block_descriptor_40;
  v6 = _Block_copy(v11);
  v7 = a2;
  v8 = a1;
  v9 = objc_msgSend(v5, sel_initWithDynamicProvider_, v6);
  _Block_release(v6);
  swift_release();
  return v9;
}

uint64_t sub_1BC4C9D38()
{
  uint64_t result;

  sub_1BC4CB7B0();
  result = sub_1BC62CE48();
  qword_1EF4330C0 = result;
  return result;
}

id static UIColor.hrui_tableViewCellHighlightColor.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428628, (id *)&qword_1EF4330C0);
}

id sub_1BC4C9D84(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1EF428628, (id *)&qword_1EF4330C0);
}

id sub_1BC4C9DA0()
{
  if (qword_1ED6A3208 != -1)
    swift_once();
  qword_1EF4330C8 = qword_1ED6A47F0;
  return (id)qword_1ED6A47F0;
}

id static UIColor.hrui_clinicalDocuments.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428630, (id *)&qword_1EF4330C8);
}

id sub_1BC4C9E04(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1EF428630, (id *)&qword_1EF4330C8);
}

uint64_t sub_1BC4C9E20(uint64_t a1)
{
  return sub_1BC4CAF28(a1, (uint64_t)&unk_1E74DF400, (uint64_t)sub_1BC4CB778, (uint64_t)&block_descriptor_104, &qword_1ED6A47F0);
}

id UIColor.init(decimalRed:green:blue:alpha:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithRed_green_blue_alpha_, (double)a1 / 255.0, (double)a2 / 255.0, (double)a3 / 255.0, a4);
}

id static UIColor.dynamicColor(default:defaultHighConstrast:dark:darkHighConstrast:)(void *a1, void *a2, void *a3, void *a4)
{
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD v17[6];

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a4;
  v8[3] = a3;
  v8[4] = a2;
  v8[5] = a1;
  v9 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v17[4] = sub_1BC4CB778;
  v17[5] = v8;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1BC4CB70C;
  v17[3] = &block_descriptor_6_4;
  v10 = _Block_copy(v17);
  v11 = a4;
  v12 = a3;
  v13 = a2;
  v14 = a1;
  v15 = objc_msgSend(v9, sel_initWithDynamicProvider_, v10);
  _Block_release(v10);
  swift_release();
  return v15;
}

id static UIColor.hrui_healthRecords.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A3208, (id *)&qword_1ED6A47F0);
}

id sub_1BC4C9FC4(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1ED6A3208, (id *)&qword_1ED6A47F0);
}

uint64_t sub_1BC4C9FE0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemBlueColor);
  v2 = objc_msgSend(v0, sel_systemDarkBlueColor);
  v3 = objc_msgSend(v0, sel_systemBlueColor);
  v4 = objc_msgSend(v0, sel_systemBlueColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_97;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1ED6A4E08 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_clinicalNotes.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A4E10, (id *)&qword_1ED6A4E08);
}

id sub_1BC4CA174(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1ED6A4E10, (id *)&qword_1ED6A4E08);
}

uint64_t sub_1BC4CA190()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemPinkColor);
  v2 = objc_msgSend(v0, sel_systemDarkPinkColor);
  v3 = objc_msgSend(v0, sel_systemPinkColor);
  v4 = objc_msgSend(v0, sel_systemPinkColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_90;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1ED6A5968 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_clinicalVitals.getter()
{
  return sub_1BC4CB5EC(qword_1ED6A48F8, (id *)&qword_1ED6A5968);
}

id sub_1BC4CA324(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, qword_1ED6A48F8, (id *)&qword_1ED6A5968);
}

uint64_t sub_1BC4CA340()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemCyanColor);
  v2 = objc_msgSend(v0, sel_systemCyanColor);
  v3 = objc_msgSend(v0, sel_systemCyanColor);
  v4 = objc_msgSend(v0, sel_systemCyanColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_83;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1ED6A5958 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_medications.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A48E0, (id *)&qword_1ED6A5958);
}

id sub_1BC4CA4D0(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1ED6A48E0, (id *)&qword_1ED6A5958);
}

uint64_t sub_1BC4CA4EC()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemGreenColor);
  v2 = objc_msgSend(v0, sel_systemDarkGreenColor);
  v3 = objc_msgSend(v0, sel_systemGreenColor);
  v4 = objc_msgSend(v0, sel_systemGreenColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_76;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1ED6A5960 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_immunizations.getter()
{
  return sub_1BC4CB5EC(qword_1ED6A48E8, (id *)&qword_1ED6A5960);
}

id sub_1BC4CA680(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, qword_1ED6A48E8, (id *)&qword_1ED6A5960);
}

uint64_t sub_1BC4CA69C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemBlueColor);
  v2 = objc_msgSend(v0, sel_systemDarkBlueColor);
  v3 = objc_msgSend(v0, sel_systemBlueColor);
  v4 = objc_msgSend(v0, sel_systemBlueColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_69;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1ED6A5930 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_insurance.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A48B0, (id *)&qword_1ED6A5930);
}

id sub_1BC4CA830(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1ED6A48B0, (id *)&qword_1ED6A5930);
}

uint64_t sub_1BC4CA84C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemCyanColor);
  v2 = objc_msgSend(v0, sel_systemCyanColor);
  v3 = objc_msgSend(v0, sel_systemCyanColor);
  v4 = objc_msgSend(v0, sel_systemCyanColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_62;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1ED6A5928 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_allergies.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A48A8, (id *)&qword_1ED6A5928);
}

id sub_1BC4CA9DC(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1ED6A48A8, (id *)&qword_1ED6A5928);
}

uint64_t sub_1BC4CA9F8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemBlueColor);
  v2 = objc_msgSend(v0, sel_systemDarkBlueColor);
  v3 = objc_msgSend(v0, sel_systemBlueColor);
  v4 = objc_msgSend(v0, sel_systemBlueColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_55_1;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1ED6A5940 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_labResults.getter()
{
  return sub_1BC4CB5EC(qword_1ED6A48C0, (id *)&qword_1ED6A5940);
}

id sub_1BC4CAB8C(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, qword_1ED6A48C0, (id *)&qword_1ED6A5940);
}

uint64_t sub_1BC4CABA8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemIndigoColor);
  v2 = objc_msgSend(v0, sel_systemIndigoColor);
  v3 = objc_msgSend(v0, sel_systemIndigoColor);
  v4 = objc_msgSend(v0, sel_systemIndigoColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_48;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1ED6A5938 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_conditions.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A48B8, (id *)&qword_1ED6A5938);
}

id sub_1BC4CAD38(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1ED6A48B8, (id *)&qword_1ED6A5938);
}

uint64_t sub_1BC4CAD54()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemPurpleColor);
  v2 = objc_msgSend(v0, sel_systemDarkPurpleColor);
  v3 = objc_msgSend(v0, sel_systemPurpleColor);
  v4 = objc_msgSend(v0, sel_systemPurpleColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_41;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1ED6A5948 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_procedures.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A48D0, (id *)&qword_1ED6A5948);
}

id sub_1BC4CAEE8(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1ED6A48D0, (id *)&qword_1ED6A5948);
}

uint64_t sub_1BC4CAF04(uint64_t a1)
{
  return sub_1BC4CAF28(a1, (uint64_t)&unk_1E74DF0E0, (uint64_t)sub_1BC4CB778, (uint64_t)&block_descriptor_34_0, &qword_1ED6A5950);
}

uint64_t sub_1BC4CAF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t result;
  _QWORD v22[6];

  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_systemGrayColor);
  v10 = objc_msgSend(v8, sel_systemDarkGrayColor);
  v11 = objc_msgSend(v8, sel_systemGrayColor);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.658823529, 0.658823529, 0.678431373, 1.0);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = v11;
  v13[4] = v10;
  v13[5] = v9;
  v14 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v22[4] = a3;
  v22[5] = v13;
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 1107296256;
  v22[2] = sub_1BC4CB70C;
  v22[3] = a4;
  v15 = _Block_copy(v22);
  v16 = v12;
  v17 = v11;
  v18 = v10;
  v19 = v9;
  v20 = objc_msgSend(v14, sel_initWithDynamicProvider_, v15);
  _Block_release(v15);

  result = swift_release();
  *a5 = v20;
  return result;
}

id static UIColor.hrui_unreadable.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A48D8, (id *)&qword_1ED6A5950);
}

id sub_1BC4CB0DC(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1ED6A48D8, (id *)&qword_1ED6A5950);
}

uint64_t sub_1BC4CB0F8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemRedColor);
  v2 = objc_msgSend(v0, sel_systemDarkRedColor);
  v3 = objc_msgSend(v0, sel_systemRedColor);
  v4 = objc_msgSend(v0, sel_systemRedColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_27_2;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1EF4330D0 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_devices.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428640, (id *)&qword_1EF4330D0);
}

id sub_1BC4CB28C(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1EF428640, (id *)&qword_1EF4330D0);
}

uint64_t sub_1BC4CB2A8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemGreenColor);
  v2 = objc_msgSend(v0, sel_systemDarkGreenColor);
  v3 = objc_msgSend(v0, sel_systemGreenColor);
  v4 = objc_msgSend(v0, sel_systemGreenColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_20_2;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1EF4330D8 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_socialHistory.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428648, (id *)&qword_1EF4330D8);
}

id sub_1BC4CB43C(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1EF428648, (id *)&qword_1EF4330D8);
}

uint64_t sub_1BC4CB458()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemBlueColor);
  v2 = objc_msgSend(v0, sel_systemDarkBlueColor);
  v3 = objc_msgSend(v0, sel_systemBlueColor);
  v4 = objc_msgSend(v0, sel_systemBlueColor);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v14[4] = sub_1BC4CB778;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC4CB70C;
  v14[3] = &block_descriptor_13_1;
  v7 = _Block_copy(v14);
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  result = swift_release();
  qword_1EF4330E0 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_carePlans.getter()
{
  return sub_1BC4CB5EC(qword_1EF428650, (id *)&qword_1EF4330E0);
}

id sub_1BC4CB5EC(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

id sub_1BC4CB624(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, qword_1EF428650, (id *)&qword_1EF4330E0);
}

id sub_1BC4CB640(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4)
{
  if (*a3 != -1)
    swift_once();
  return *a4;
}

id sub_1BC4CB67C(void *a1, void *a2, void *a3)
{
  void *v5;

  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
    v5 = a2;
  else
    v5 = a3;
  return v5;
}

uint64_t sub_1BC4CB6B0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC4CB6DC(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
    v4 = v2;
  else
    v4 = v3;
  return v4;
}

id sub_1BC4CB70C(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

unint64_t sub_1BC4CB7B0()
{
  unint64_t result;

  result = qword_1ED6A5970;
  if (!qword_1ED6A5970)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A5970);
  }
  return result;
}

uint64_t objectdestroy_2Tm_3()
{
  id *v0;

  return swift_deallocObject();
}

id sub_1BC4CB82C(void *a1)
{
  _QWORD *v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;

  v3 = (void *)v1[2];
  v4 = (void *)v1[3];
  v5 = (void *)v1[4];
  v6 = (void *)v1[5];
  v7 = objc_msgSend(a1, sel_userInterfaceStyle);
  v8 = objc_msgSend(a1, sel_accessibilityContrast);
  if (v8 == (id)1)
    v9 = v3;
  else
    v9 = v4;
  if (v8 == (id)1)
    v10 = v5;
  else
    v10 = v6;
  if (v7 == (id)2)
    v11 = v9;
  else
    v11 = v10;
  return v11;
}

uint64_t sub_1BC4CB90C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;

  v50 = type metadata accessor for UserDomainConceptViewData();
  v2 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v47 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t)&v41 - v7;
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v52 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v10 = *(_QWORD *)(a1 + 56);
  v44 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v51 = v6;
  v48 = v6 + 8;
  v45 = (unint64_t)(v11 + 63) >> 6;
  v42 = xmmword_1BC639590;
  v43 = a1;
  v46 = v2;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v8 << 6);
    }
    else
    {
      v16 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_37;
      if (v16 >= v45)
      {
LABEL_34:
        swift_release();
        return (uint64_t)v9;
      }
      v17 = *(_QWORD *)(v44 + 8 * v16);
      ++v8;
      if (!v17)
      {
        v8 = v16 + 1;
        if (v16 + 1 >= v45)
          goto LABEL_34;
        v17 = *(_QWORD *)(v44 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 2;
          if (v16 + 2 >= v45)
            goto LABEL_34;
          v17 = *(_QWORD *)(v44 + 8 * v8);
          if (!v17)
          {
            v8 = v16 + 3;
            if (v16 + 3 >= v45)
              goto LABEL_34;
            v17 = *(_QWORD *)(v44 + 8 * v8);
            if (!v17)
            {
              v18 = v16 + 4;
              if (v18 >= v45)
                goto LABEL_34;
              v17 = *(_QWORD *)(v44 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  v8 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_38;
                  if (v8 >= v45)
                    goto LABEL_34;
                  v17 = *(_QWORD *)(v44 + 8 * v8);
                  ++v18;
                  if (v17)
                    goto LABEL_21;
                }
              }
              v8 = v18;
            }
          }
        }
      }
LABEL_21:
      v13 = (v17 - 1) & v17;
      v15 = __clz(__rbit64(v17)) + (v8 << 6);
    }
    v19 = *(_QWORD *)(v2 + 72);
    v20 = v49;
    sub_1BC3AA02C(*(_QWORD *)(a1 + 48) + v19 * v15, v49);
    sub_1BC4220A8(v20, v51);
    v21 = *(_BYTE *)(v48 + *(int *)(v50 + 56));
    v23 = sub_1BC559658(v21);
    v24 = v9[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      break;
    v27 = v22;
    if (v9[3] < v26)
    {
      sub_1BC3C6010(v26, 1);
      v9 = v52;
      v28 = sub_1BC559658(v21);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_39;
      v23 = v28;
    }
    if ((v27 & 1) != 0)
    {
      v30 = v9[7];
      sub_1BC4220A8(v51, v47);
      v31 = *(_QWORD *)(v30 + 8 * v23);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v30 + 8 * v23) = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v31 = sub_1BC3B60B8(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
        *(_QWORD *)(v30 + 8 * v23) = v31;
      }
      v34 = *(_QWORD *)(v31 + 16);
      v33 = *(_QWORD *)(v31 + 24);
      if (v34 >= v33 >> 1)
      {
        v31 = sub_1BC3B60B8(v33 > 1, v34 + 1, 1, v31);
        *(_QWORD *)(v30 + 8 * v23) = v31;
      }
      *(_QWORD *)(v31 + 16) = v34 + 1;
      v2 = v46;
      sub_1BC4220A8(v47, v31 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80)) + v34 * v19);
      a1 = v43;
    }
    else
    {
      sub_1BC357158(0, &qword_1EF42C658, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v35 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v42;
      sub_1BC4220A8(v51, v36 + v35);
      v9[(v23 >> 6) + 8] |= 1 << v23;
      *(_BYTE *)(v9[6] + v23) = v21;
      *(_QWORD *)(v9[7] + 8 * v23) = v36;
      v37 = v9[2];
      v38 = __OFADD__(v37, 1);
      v39 = v37 + 1;
      if (v38)
        goto LABEL_36;
      v9[2] = v39;
      v2 = v46;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

uint64_t sub_1BC4CBD24(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t (*v31)(uint64_t);
  id v32;
  uint64_t v33;
  _QWORD *v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;

  v68 = a3;
  v65 = a2;
  v54 = a1;
  v5 = sub_1BC62CC5C();
  v78 = *(_QWORD *)(v5 - 8);
  v79 = v5;
  MEMORY[0x1E0C80A78](v5);
  v77 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v53 - v8;
  sub_1BC4CC3D0();
  v55 = v10;
  v58 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4CC750(0, &qword_1EF433100, v13, (void (*)(uint64_t))sub_1BC4CC4A0, (void (*)(void))sub_1BC4CC54C);
  v64 = v14;
  v67 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v53 - v15;
  sub_1BC4CC568();
  v18 = *(_QWORD *)(v17 - 8);
  v69 = v17;
  v70 = v18;
  MEMORY[0x1E0C80A78](v17);
  v59 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4CC710(0);
  v21 = *(_QWORD *)(v20 - 8);
  v71 = v20;
  v72 = v21;
  MEMORY[0x1E0C80A78](v20);
  v63 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4CC750(0, &qword_1EF433148, v23, (void (*)(uint64_t))sub_1BC3EA894, (void (*)(void))sub_1BC4CC7D0);
  v25 = *(_QWORD *)(v24 - 8);
  v73 = v24;
  v74 = v25;
  MEMORY[0x1E0C80A78](v24);
  v62 = (char *)&v53 - v26;
  sub_1BC4CC7EC();
  v28 = *(_QWORD *)(v27 - 8);
  v75 = v27;
  v76 = v28;
  MEMORY[0x1E0C80A78](v27);
  v66 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = (void *)sub_1BC62BA68();
  v80 = a4;
  v81 = v30;
  v61 = sub_1BC62CC38();
  v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56);
  v60(v9, 1, 1, v61);
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EFE8];
  sub_1BC486CEC(0, (unint64_t *)&qword_1EF4330F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EFE8], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  v57 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  sub_1BC4CEE38(&qword_1EF4330F8, (unint64_t *)&qword_1EF4330F0, v31);
  v56 = sub_1BC3ABB20();
  v32 = a4;
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v9);

  swift_release();
  sub_1BC4CC4A0();
  sub_1BC4CC54C();
  v33 = v55;
  sub_1BC62C02C();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v33);
  v34 = (_QWORD *)swift_allocObject();
  v35 = v65;
  v34[2] = v54;
  v34[3] = v35;
  v34[4] = v68;
  v34[5] = v32;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_1BC4CCE2C;
  *(_QWORD *)(v36 + 24) = v34;
  v37 = v32;
  swift_retain();
  v38 = v35;
  swift_retain();
  sub_1BC62BE88();
  sub_1BC4CC62C();
  sub_1BC4CC6A8();
  sub_1BC347F0C(&qword_1EF433128, (uint64_t (*)(uint64_t))sub_1BC4CC62C, MEMORY[0x1E0C95D90]);
  v39 = v59;
  v40 = v64;
  sub_1BC62C0C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v16, v40);
  v81 = (id)MEMORY[0x1E0DEE9D8];
  sub_1BC4CC734();
  v41 = v63;
  v42 = v69;
  sub_1BC62C014();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v42);
  sub_1BC3EA894();
  sub_1BC4CC7D0();
  v43 = v62;
  v44 = v71;
  sub_1BC62C02C();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v41, v44);
  v45 = v77;
  sub_1BC62CC50();
  v81 = v37;
  v60(v9, 1, 1, v61);
  sub_1BC4CC8A4();
  v46 = v37;
  v47 = v66;
  v48 = v73;
  sub_1BC62C08C();
  sub_1BC3A4334((uint64_t)v9);

  (*(void (**)(char *, uint64_t))(v78 + 8))(v45, v79);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v48);
  sub_1BC347F0C(&qword_1EF433168, (uint64_t (*)(uint64_t))sub_1BC4CC7EC, MEMORY[0x1E0C95BB0]);
  v49 = v75;
  v50 = (void *)sub_1BC62BFE4();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v47, v49);
  v81 = v50;
  sub_1BC3EA7C0(0, &qword_1EF433170, (uint64_t (*)(uint64_t))sub_1BC4CD018, sub_1BC4CD134, MEMORY[0x1E0C95758]);
  sub_1BC4CD150();
  v51 = sub_1BC62BFFC();
  swift_release();
  return v51;
}

void sub_1BC4CC3D0()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF4330E8)
  {
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EFE8];
    sub_1BC486CEC(255, (unint64_t *)&qword_1EF4330F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EFE8], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC4CEE38(&qword_1EF4330F8, (unint64_t *)&qword_1EF4330F0, v0);
    sub_1BC3ABB20();
    v1 = sub_1BC62BE70();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF4330E8);
  }
}

void sub_1BC4CC4A0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF433108)
  {
    sub_1BC3DD918(255, &qword_1ED6A4970, (unint64_t *)&qword_1ED6A4938, 0x1E0CB6870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC3DD918(255, &qword_1ED6A4930, &qword_1ED6A4978, 0x1E0CB6800, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF433108);
  }
}

uint64_t sub_1BC4CC54C()
{
  return sub_1BC347F0C(&qword_1EF433110, (uint64_t (*)(uint64_t))sub_1BC4CC3D0, MEMORY[0x1E0C95CB8]);
}

void sub_1BC4CC568()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433118)
  {
    sub_1BC4CC62C();
    sub_1BC4CC750(255, &qword_1EF433100, (void (*)(uint64_t))sub_1BC4CC3D0, (void (*)(uint64_t))sub_1BC4CC4A0, (void (*)(void))sub_1BC4CC54C);
    sub_1BC347F0C(&qword_1EF433128, (uint64_t (*)(uint64_t))sub_1BC4CC62C, MEMORY[0x1E0C95D90]);
    sub_1BC4CC6A8();
    v0 = sub_1BC62BE28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433118);
  }
}

void sub_1BC4CC62C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433120)
  {
    sub_1BC357158(255, &qword_1EF42CA90, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC62BE94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433120);
  }
}

unint64_t sub_1BC4CC6A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433130;
  if (!qword_1EF433130)
  {
    sub_1BC4CC750(255, &qword_1EF433100, (void (*)(uint64_t))sub_1BC4CC3D0, (void (*)(uint64_t))sub_1BC4CC4A0, (void (*)(void))sub_1BC4CC54C);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433130);
  }
  return result;
}

void sub_1BC4CC710(uint64_t a1)
{
  sub_1BC3EA7C0(a1, &qword_1EF433138, (uint64_t (*)(uint64_t))sub_1BC4CC568, sub_1BC4CC734, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C957D8]);
}

uint64_t sub_1BC4CC734()
{
  return sub_1BC347F0C(&qword_1EF433140, (uint64_t (*)(uint64_t))sub_1BC4CC568, MEMORY[0x1E0C95B78]);
}

void sub_1BC4CC750(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    v8 = sub_1BC62BE10();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC4CC7D0()
{
  return sub_1BC347F0C(&qword_1EF433150, (uint64_t (*)(uint64_t))sub_1BC4CC710, MEMORY[0x1E0C957E8]);
}

void sub_1BC4CC7EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433158)
  {
    sub_1BC4CC750(255, &qword_1EF433148, sub_1BC4CC710, (void (*)(uint64_t))sub_1BC3EA894, (void (*)(void))sub_1BC4CC7D0);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC4CC8A4();
    sub_1BC3ABB20();
    v0 = sub_1BC62BE34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433158);
  }
}

unint64_t sub_1BC4CC8A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433160;
  if (!qword_1EF433160)
  {
    sub_1BC4CC750(255, &qword_1EF433148, sub_1BC4CC710, (void (*)(uint64_t))sub_1BC3EA894, (void (*)(void))sub_1BC4CC7D0);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433160);
  }
  return result;
}

uint64_t sub_1BC4CC90C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  uint64_t j;
  void *v8;
  uint64_t v9;

  v2 = sub_1BC62BAB0();
  v3 = sub_1BC62BA80();
  sub_1BC3BB8D8(v3);
  v9 = MEMORY[0x1E0DEE9D8];
  if (!(v2 >> 62))
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a1 = v9;
    result = sub_1BC62BAA4();
    a1[1] = result;
    return result;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v4 = result;
  if (!result)
    goto LABEL_19;
LABEL_3:
  if (v4 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        MEMORY[0x1BCCF24CC](i, v2);
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x1BCCF1B30]();
          if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          sub_1BC62C8D8();
          sub_1BC62C890();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      for (j = 0; j != v4; ++j)
      {
        v8 = *(void **)(v2 + 8 * j + 32);
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x1BCCF1B30](v8);
          if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          sub_1BC62C8D8();
          sub_1BC62C890();
        }
      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC4CCB2C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a6;
  sub_1BC4CEC58();
  v34 = v11;
  v38 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4CED5C();
  v15 = *(_QWORD *)(v14 - 8);
  v36 = v14;
  v37 = v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC3EA7C0(0, &qword_1EF4331D8, v18, sub_1BC4CEE80, MEMORY[0x1E0C95B50]);
  v20 = v19;
  v35 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v32 - v21;
  v39 = a1;
  sub_1BC3DD918(0, &qword_1ED6A4970, (unint64_t *)&qword_1ED6A4938, 0x1E0CB6870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC4CECF4();
  sub_1BC62C800();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a3;
  v23[3] = a4;
  v24 = v33;
  v23[4] = a5;
  v23[5] = v24;
  v23[6] = a2;
  v25 = a2;
  swift_retain();
  v26 = a4;
  swift_retain();
  v27 = v24;
  sub_1BC62BE88();
  sub_1BC486CEC(0, &qword_1EF4331C0, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC347F0C(&qword_1EF4331D0, (uint64_t (*)(uint64_t))sub_1BC4CEC58, MEMORY[0x1E0C95C10]);
  sub_1BC4CEE38(&qword_1EF4331C8, &qword_1EF4331C0, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData);
  v28 = v34;
  sub_1BC62C0C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v28);
  sub_1BC4CEE80();
  v29 = v36;
  sub_1BC62C068();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v29);
  sub_1BC4CEF18();
  v30 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v20);
  return v30;
}

uint64_t sub_1BC4CCDF0()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4CCE2C(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC4CCB2C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1BC4CCE38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4CCE5C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1BC4CCE8C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC58C544(v2);
  swift_bridgeObjectRelease();
  v4 = sub_1BC4CB90C(v3);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1BC559658(0), (v6 & 1) != 0))
  {
    v7 = *(_QWORD **)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v7;
  swift_bridgeObjectRetain();
  sub_1BC4CDA54(&v14);
  swift_bridgeObjectRelease();
  v8 = v14;
  if (*(_QWORD *)(v4 + 16) && (v9 = sub_1BC559658(1), (v10 & 1) != 0))
  {
    v11 = *(_QWORD **)(*(_QWORD *)(v4 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v14 = v11;
  swift_getKeyPath();
  sub_1BC357158(0, &qword_1EF42CA90, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35A2BC(&qword_1EF4331A0, &qword_1EF42CA90, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData);
  v12 = sub_1BC62C7E8();
  swift_release();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  a1[1] = v12;
  return result;
}

void sub_1BC4CD018()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433178)
  {
    sub_1BC4CC7EC();
    sub_1BC486CEC(255, &qword_1EF433180, (uint64_t (*)(uint64_t))sub_1BC3EA894, MEMORY[0x1E0D29B38]);
    sub_1BC347F0C(&qword_1EF433168, (uint64_t (*)(uint64_t))sub_1BC4CC7EC, MEMORY[0x1E0C95BB0]);
    sub_1BC4CD0D4();
    v0 = sub_1BC62BE64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433178);
  }
}

unint64_t sub_1BC4CD0D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433188;
  if (!qword_1EF433188)
  {
    sub_1BC486CEC(255, &qword_1EF433180, (uint64_t (*)(uint64_t))sub_1BC3EA894, MEMORY[0x1E0D29B38]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D29B40], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433188);
  }
  return result;
}

uint64_t sub_1BC4CD134()
{
  return sub_1BC347F0C(&qword_1EF433190, (uint64_t (*)(uint64_t))sub_1BC4CD018, MEMORY[0x1E0C95C98]);
}

unint64_t sub_1BC4CD150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433198;
  if (!qword_1EF433198)
  {
    sub_1BC3EA7C0(255, &qword_1EF433170, (uint64_t (*)(uint64_t))sub_1BC4CD018, sub_1BC4CD134, MEMORY[0x1E0C95758]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95768], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433198);
  }
  return result;
}

void sub_1BC4CD1B8(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, NSObject *a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  char v10;
  unint64_t v11;
  void *v12;

  v10 = a5 & 1;
  v11 = *a1;
  v12 = (void *)MEMORY[0x1BCCF2DD8]();
  sub_1BC4CD23C(v11, a2, a3, a4, v10, a6);
  objc_autoreleasePoolPop(v12);
}

uint64_t sub_1BC4CD23C@<X0>(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, NSObject *a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  void *v6;
  void *v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  os_log_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  ValueMetadata *v70;
  uint64_t v71;

  v7 = v6;
  v66 = a4;
  v67 = a3;
  v68 = a6;
  v69 = a2;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v61 - v11;
  v13 = sub_1BC62BB34();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1BC62D3B8())
    {
LABEL_3:
      if ((a1 & 0xC000000000000001) != 0)
      {
        v18 = (id)MEMORY[0x1BCCF24CC](0, a1);
      }
      else
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_27;
        }
        v18 = *(id *)(a1 + 32);
      }
      v19 = v18;
      swift_bridgeObjectRelease();
      v16 = v19;
      v20 = *(_QWORD *)(HKDiagnosticTestResult.valueDisplayables.getter() + 16);

      swift_bridgeObjectRelease();
      if (v20 < 2)
      {
        v24 = HKDiagnosticTestResult.valueString.getter();
        v64 = v25;
        v65 = (uint64_t)v24;
        v26 = v16;
        v27 = sub_1BC4CD840(v16);
        v62 = v28;
        v63 = v27;

        goto LABEL_10;
      }
      if (qword_1ED6A4888 == -1)
      {
LABEL_8:
        v21 = (id)qword_1ED6A5528;
        swift_bridgeObjectRetain();
        v22 = sub_1BC62A4A8();
        v64 = v23;
        v65 = v22;
        swift_bridgeObjectRelease();

        v62 = 0;
        v63 = 0;
LABEL_10:
        v29 = objc_msgSend(v16, sel_state);
        v30 = objc_msgSend(v16, sel_meaningfulDate);
        if (v30)
        {
          v31 = v30;
          sub_1BC62A724();

          v32 = sub_1BC62A760();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v12, 0, 1, v32);
        }
        else
        {
          v33 = sub_1BC62A760();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v12, 1, 1, v33);
        }
        v34 = a5 & 1;
        if (a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v35 = sub_1BC62D3B8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v35 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v36 = objc_msgSend(v16, sel_value);
        if (v36)
        {
          v37 = v36;
          v38 = objc_msgSend(v16, sel_referenceRanges);
          v39 = objc_msgSend(v37, sel_valueInRangeWithReferenceRanges_includeUnitString_allowsNullRange_, v38, 1, 1);

        }
        else
        {
          v39 = 0;
        }
        v40 = v69;
        v41 = v68;
        sub_1BC5E2F14(v40, (uint64_t)v29, (uint64_t)v12, v35, (uint64_t)v39, v65, v64, v63, v68, v62, v67, 0, (uint64_t)v66, v34);

        v42 = type metadata accessor for UserDomainConceptViewData();
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 0, 1, v42);
      }
LABEL_27:
      swift_once();
      goto LABEL_8;
    }
  }
  else
  {
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  sub_1BC62BAF8();
  v44 = v69;
  v45 = sub_1BC62BB28();
  v46 = sub_1BC62CAAC();
  v47 = v46;
  if (os_log_type_enabled(v45, v46))
  {
    v48 = swift_slowAlloc();
    v66 = v45;
    v49 = v48;
    v67 = swift_slowAlloc();
    v71 = v67;
    *(_DWORD *)v49 = 136315394;
    v70 = &type metadata for LabsListViewDataProvider;
    sub_1BC4CF8E4();
    LODWORD(v65) = v47;
    v50 = sub_1BC62C6E0();
    v69 = v7;
    v70 = (ValueMetadata *)sub_1BC4991F0(v50, v51, &v71);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    v64 = v49 + 14;
    v52 = v44;
    v53 = objc_msgSend(v52, sel_description);
    v54 = sub_1BC62C680();
    v56 = v55;

    v70 = (ValueMetadata *)sub_1BC4991F0(v54, v56, &v71);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    v57 = v66;
    _os_log_impl(&dword_1BC30A000, v66, (os_log_type_t)v65, "%s itemPublisher dropping %s because it has no records", (uint8_t *)v49, 0x16u);
    v58 = v67;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v58, -1, -1);
    MEMORY[0x1BCCF36A8](v49, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v59 = v68;
  v60 = type metadata accessor for UserDomainConceptViewData();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
}

uint64_t sub_1BC4CD840(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v11;
  void *v12;

  if (!a1)
    return 0;
  v1 = objc_msgSend(a1, sel_value);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(), sel__unitStringForValueCollection_, v1);
  sub_1BC62C680();

  if (qword_1ED6A4878 != -1)
    v4 = swift_once();
  v11 = *(_QWORD *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v4);
  sub_1BC62AA6C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v5, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();
  swift_release();
  v6 = objc_msgSend(v12, sel_ucumDisplayConverter, v11);
  v7 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_synonymForUCUMUnitString_, v7);

  v9 = sub_1BC62C680();
  return v9;
}

void sub_1BC4CDA54(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(type metadata accessor for UserDomainConceptViewData() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BC5049F4(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1BC4CDAD4(v5);
  *a1 = v3;
}

void sub_1BC4CDAD4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;

  v2 = v1;
  v154 = type metadata accessor for UserDomainConceptViewData();
  v148 = *(_QWORD *)(v154 - 8);
  MEMORY[0x1E0C80A78](v154);
  v143 = (uint64_t)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v155 = (uint64_t)&v136 - v6;
  MEMORY[0x1E0C80A78](v7);
  v150 = (uint64_t)&v136 - v8;
  MEMORY[0x1E0C80A78](v9);
  v149 = (uint64_t)&v136 - v10;
  MEMORY[0x1E0C80A78](v11);
  v145 = (uint64_t)&v136 - v12;
  MEMORY[0x1E0C80A78](v13);
  v144 = (uint64_t)&v136 - v14;
  MEMORY[0x1E0C80A78](v15);
  v140 = (uint64_t)&v136 - v16;
  MEMORY[0x1E0C80A78](v17);
  v139 = (uint64_t)&v136 - v18;
  v19 = a1[1];
  v20 = sub_1BC62D520();
  if (v20 >= v19)
  {
    if (v19 < 0)
      goto LABEL_158;
    if (v19)
      sub_1BC4CE534(0, v19, 1, a1);
    return;
  }
  if (v19 >= 0)
    v21 = v19;
  else
    v21 = v19 + 1;
  if (v19 < -1)
    goto LABEL_166;
  v138 = v20;
  if (v19 < 2)
  {
    v25 = (char *)MEMORY[0x1E0DEE9D8];
    v147 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80));
    v137 = MEMORY[0x1E0DEE9D8];
    if (v19 != 1)
    {
      v27 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_124:
      if (v27 >= 2)
      {
        v130 = *a1;
        do
        {
          v131 = v27 - 2;
          if (v27 < 2)
            goto LABEL_153;
          if (!v130)
            goto LABEL_165;
          v132 = *(_QWORD *)&v25[16 * v131 + 32];
          v133 = *(_QWORD *)&v25[16 * v27 + 24];
          sub_1BC4CE768(v130 + *(_QWORD *)(v148 + 72) * v132, v130 + *(_QWORD *)(v148 + 72) * *(_QWORD *)&v25[16 * v27 + 16], v130 + *(_QWORD *)(v148 + 72) * v133, v147);
          if (v2)
            break;
          if (v133 < v132)
            goto LABEL_154;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v25 = sub_1BC504414((uint64_t)v25);
          if (v131 >= *((_QWORD *)v25 + 2))
            goto LABEL_155;
          v134 = &v25[16 * v131 + 32];
          *(_QWORD *)v134 = v132;
          *((_QWORD *)v134 + 1) = v133;
          v135 = *((_QWORD *)v25 + 2);
          if (v27 > v135)
            goto LABEL_156;
          memmove(&v25[16 * v27 + 16], &v25[16 * v27 + 32], 16 * (v135 - v27));
          *((_QWORD *)v25 + 2) = v135 - 1;
          v27 = v135 - 1;
        }
        while (v135 > 2);
      }
LABEL_135:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v137 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v22 = v21 >> 1;
    v23 = sub_1BC62C8CC();
    *(_QWORD *)(v23 + 16) = v22;
    v24 = *(unsigned __int8 *)(v148 + 80);
    v137 = v23;
    v147 = v23 + ((v24 + 32) & ~v24);
  }
  v26 = 0;
  v25 = (char *)MEMORY[0x1E0DEE9D8];
  v152 = a1;
  while (1)
  {
    v28 = v26;
    v29 = v26 + 1;
    v146 = v26;
    if (v26 + 1 >= v19)
      break;
    v141 = v25;
    v30 = *a1;
    v31 = *(_QWORD *)(v148 + 72);
    v32 = v139;
    sub_1BC3AA02C(*a1 + v31 * v29, v139);
    v33 = v30 + v31 * v28;
    v34 = v140;
    sub_1BC3AA02C(v33, v140);
    v35 = *(int *)(v154 + 56);
    if (*(_BYTE *)(v32 + v35 + 8))
      v36 = -1;
    else
      v36 = *(_QWORD *)(v32 + v35);
    v156 = v36;
    v37 = v34 + v35;
    if (*(_BYTE *)(v37 + 8))
      v38 = -1;
    else
      v38 = *(_QWORD *)v37;
    v153 = v38;
    v39 = v34;
    v28 = v146;
    sub_1BC421F94(v39);
    sub_1BC421F94(v32);
    v151 = v30;
    v157 = v31;
    if (v28 + 2 >= v19)
    {
      v29 = v28 + 2;
    }
    else
    {
      v136 = v2;
      v40 = v31 * v29;
      v41 = v30;
      v29 = v28 + 2;
      v42 = v31 * (v28 + 2);
      while (1)
      {
        v43 = v19;
        v44 = v156 < v153;
        v45 = v144;
        sub_1BC3AA02C(v41 + v42, v144);
        v46 = v145;
        sub_1BC3AA02C(v41 + v40, v145);
        v47 = *(int *)(v154 + 56);
        v48 = *(_BYTE *)(v45 + v47 + 8) ? -1 : *(_QWORD *)(v45 + v47);
        v49 = v46 + v47;
        v50 = *(_BYTE *)(v49 + 8) ? -1 : *(_QWORD *)v49;
        v51 = v48 >= v50;
        sub_1BC421F94(v46);
        sub_1BC421F94(v45);
        if (v44 == v51)
          break;
        v41 += v157;
        ++v29;
        v19 = v43;
        if (v43 == v29)
        {
          v29 = v43;
          a1 = v152;
          v28 = v146;
          goto LABEL_35;
        }
      }
      a1 = v152;
      v28 = v146;
      v19 = v43;
LABEL_35:
      v2 = v136;
    }
    if (v156 >= v153)
    {
      v25 = v141;
      break;
    }
    v25 = v141;
    if (v29 < v28)
      goto LABEL_159;
    if (v28 >= v29)
      break;
    v153 = v19;
    v52 = 0;
    v53 = v157;
    v54 = v157 * (v29 - 1);
    v55 = v29 * v157;
    v56 = v28 * v157;
    do
    {
      if (v28 != v29 + v52 - 1)
      {
        v58 = v29;
        v59 = v151;
        if (!v151)
          goto LABEL_164;
        v60 = v151 + v56;
        v156 = v151 + v54;
        sub_1BC4220A8(v151 + v56, v143);
        if (v56 < v54 || v60 >= v59 + v55)
        {
          v57 = v156;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v57 = v156;
          if (v56 != v54)
            swift_arrayInitWithTakeBackToFront();
        }
        sub_1BC4220A8(v143, v57);
        v29 = v58;
        v53 = v157;
      }
      ++v28;
      --v52;
      v54 -= v53;
      v55 -= v53;
      v56 += v53;
    }
    while (v28 < v29 + v52);
    a1 = v152;
    v19 = v153;
    v25 = v141;
    v28 = v146;
    if (v29 < v153)
      goto LABEL_51;
LABEL_76:
    if (v29 < v28)
      goto LABEL_152;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v153 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v25 = sub_1BC503AB4(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v80 = *((_QWORD *)v25 + 2);
    v79 = *((_QWORD *)v25 + 3);
    v27 = v80 + 1;
    if (v80 >= v79 >> 1)
      v25 = sub_1BC503AB4((char *)(v79 > 1), v80 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v27;
    v81 = v25 + 32;
    v82 = &v25[16 * v80 + 32];
    v83 = v153;
    *(_QWORD *)v82 = v146;
    *((_QWORD *)v82 + 1) = v83;
    if (v80)
    {
      while (1)
      {
        v84 = v27 - 1;
        if (v27 >= 4)
        {
          v89 = &v81[16 * v27];
          v90 = *((_QWORD *)v89 - 8);
          v91 = *((_QWORD *)v89 - 7);
          v95 = __OFSUB__(v91, v90);
          v92 = v91 - v90;
          if (v95)
            goto LABEL_141;
          v94 = *((_QWORD *)v89 - 6);
          v93 = *((_QWORD *)v89 - 5);
          v95 = __OFSUB__(v93, v94);
          v87 = v93 - v94;
          v88 = v95;
          if (v95)
            goto LABEL_142;
          v96 = v27 - 2;
          v97 = &v81[16 * v27 - 32];
          v99 = *(_QWORD *)v97;
          v98 = *((_QWORD *)v97 + 1);
          v95 = __OFSUB__(v98, v99);
          v100 = v98 - v99;
          if (v95)
            goto LABEL_144;
          v95 = __OFADD__(v87, v100);
          v101 = v87 + v100;
          if (v95)
            goto LABEL_147;
          if (v101 >= v92)
          {
            v119 = &v81[16 * v84];
            v121 = *(_QWORD *)v119;
            v120 = *((_QWORD *)v119 + 1);
            v95 = __OFSUB__(v120, v121);
            v122 = v120 - v121;
            if (v95)
              goto LABEL_151;
            v112 = v87 < v122;
            goto LABEL_113;
          }
        }
        else
        {
          if (v27 != 3)
          {
            v113 = *((_QWORD *)v25 + 4);
            v114 = *((_QWORD *)v25 + 5);
            v95 = __OFSUB__(v114, v113);
            v106 = v114 - v113;
            v107 = v95;
            goto LABEL_107;
          }
          v86 = *((_QWORD *)v25 + 4);
          v85 = *((_QWORD *)v25 + 5);
          v95 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          v88 = v95;
        }
        if ((v88 & 1) != 0)
          goto LABEL_143;
        v96 = v27 - 2;
        v102 = &v81[16 * v27 - 32];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v105 = __OFSUB__(v103, v104);
        v106 = v103 - v104;
        v107 = v105;
        if (v105)
          goto LABEL_146;
        v108 = &v81[16 * v84];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v95 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v95)
          goto LABEL_149;
        if (__OFADD__(v106, v111))
          goto LABEL_150;
        if (v106 + v111 >= v87)
        {
          v112 = v87 < v111;
LABEL_113:
          if (v112)
            v84 = v96;
          goto LABEL_115;
        }
LABEL_107:
        if ((v107 & 1) != 0)
          goto LABEL_145;
        v115 = &v81[16 * v84];
        v117 = *(_QWORD *)v115;
        v116 = *((_QWORD *)v115 + 1);
        v95 = __OFSUB__(v116, v117);
        v118 = v116 - v117;
        if (v95)
          goto LABEL_148;
        if (v118 < v106)
          goto LABEL_14;
LABEL_115:
        v123 = v84 - 1;
        if (v84 - 1 >= v27)
        {
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
          goto LABEL_161;
        }
        v124 = *a1;
        if (!*a1)
          goto LABEL_163;
        v125 = &v81[16 * v123];
        v126 = *(_QWORD *)v125;
        v127 = &v81[16 * v84];
        v128 = *((_QWORD *)v127 + 1);
        sub_1BC4CE768(v124 + *(_QWORD *)(v148 + 72) * *(_QWORD *)v125, v124 + *(_QWORD *)(v148 + 72) * *(_QWORD *)v127, v124 + *(_QWORD *)(v148 + 72) * v128, v147);
        if (v2)
          goto LABEL_135;
        if (v128 < v126)
          goto LABEL_138;
        if (v84 > *((_QWORD *)v25 + 2))
          goto LABEL_139;
        *(_QWORD *)v125 = v126;
        *(_QWORD *)&v81[16 * v123 + 8] = v128;
        v129 = *((_QWORD *)v25 + 2);
        if (v84 >= v129)
          goto LABEL_140;
        v27 = v129 - 1;
        memmove(&v81[16 * v84], v127 + 16, 16 * (v129 - 1 - v84));
        *((_QWORD *)v25 + 2) = v129 - 1;
        a1 = v152;
        if (v129 <= 2)
          goto LABEL_14;
      }
    }
    v27 = 1;
LABEL_14:
    v19 = a1[1];
    v26 = v153;
    if (v153 >= v19)
      goto LABEL_124;
  }
  if (v29 >= v19)
    goto LABEL_76;
LABEL_51:
  if (__OFSUB__(v29, v28))
    goto LABEL_157;
  if (v29 - v28 >= v138)
    goto LABEL_76;
  if (__OFADD__(v28, v138))
    goto LABEL_160;
  if (v28 + v138 >= v19)
    v61 = v19;
  else
    v61 = v28 + v138;
  if (v61 >= v28)
  {
    if (v29 != v61)
    {
      v141 = v25;
      v142 = v61;
      v136 = v2;
      v62 = *(_QWORD *)(v148 + 72);
      v63 = v62 * (v29 - 1);
      v151 = v62;
      v64 = v29 * v62;
      do
      {
        v66 = 0;
        v153 = v29;
        while (1)
        {
          v156 = v28;
          v67 = *a1;
          v68 = v149;
          sub_1BC3AA02C(v64 + v66 + *a1, v149);
          v69 = v63;
          v70 = v63 + v66 + v67;
          v71 = v150;
          sub_1BC3AA02C(v70, v150);
          v72 = *(int *)(v154 + 56);
          v73 = *(_BYTE *)(v68 + v72 + 8) ? -1 : *(_QWORD *)(v68 + v72);
          v157 = v73;
          v74 = v71 + v72;
          v75 = *(_BYTE *)(v74 + 8) ? -1 : *(_QWORD *)v74;
          sub_1BC421F94(v71);
          sub_1BC421F94(v68);
          if (v157 >= v75)
            break;
          v76 = *a1;
          if (!*a1)
            goto LABEL_162;
          v63 = v69;
          v77 = v76 + v69 + v66;
          sub_1BC4220A8(v76 + v64 + v66, v155);
          swift_arrayInitWithTakeFrontToBack();
          sub_1BC4220A8(v155, v77);
          a1 = v152;
          v66 -= v151;
          v28 = v156 + 1;
          v65 = v153;
          if (v153 == v156 + 1)
            goto LABEL_61;
        }
        v65 = v153;
        v63 = v69;
LABEL_61:
        v29 = v65 + 1;
        v63 += v151;
        v64 += v151;
        v28 = v146;
      }
      while (v29 != v142);
      v29 = v142;
      v2 = v136;
      v25 = v141;
    }
    goto LABEL_76;
  }
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  sub_1BC62D388();
  __break(1u);
}

void sub_1BC4CE534(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v29 = a1;
  v32 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v32);
  v33 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - v9;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - v13;
  v31 = a3;
  v28 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v35 = v15 * (v31 - 1);
    v30 = v15;
    v34 = v15 * v31;
LABEL_5:
    v16 = 0;
    v17 = v29;
    while (1)
    {
      v18 = a4;
      v19 = *a4;
      sub_1BC3AA02C(v34 + v16 + v19, (uint64_t)v14);
      sub_1BC3AA02C(v35 + v16 + v19, (uint64_t)v10);
      v20 = *(int *)(v32 + 56);
      if (v14[v20 + 8])
        v21 = -1;
      else
        v21 = *(_QWORD *)&v14[v20];
      v22 = &v10[v20];
      if (v22[8])
        v23 = -1;
      else
        v23 = *(_QWORD *)v22;
      sub_1BC421F94((uint64_t)v10);
      sub_1BC421F94((uint64_t)v14);
      v24 = v21 < v23;
      a4 = v18;
      if (!v24)
      {
LABEL_4:
        v35 += v30;
        v34 += v30;
        if (++v31 == v28)
          return;
        goto LABEL_5;
      }
      v25 = *v18;
      if (!*v18)
        break;
      v26 = v25 + v35 + v16;
      sub_1BC4220A8(v25 + v34 + v16, v33);
      swift_arrayInitWithTakeFrontToBack();
      sub_1BC4220A8(v33, v26);
      v16 -= v30;
      ++v17;
      a4 = v18;
      if (v31 == v17)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BC4CE768(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v33;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v8 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1E0C80A78](v8);
  v55 = (unint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v54 = (char *)&v50 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v50 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v50 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_79;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1)
    goto LABEL_80;
  v21 = (uint64_t)(a2 - a1) / v19;
  v58 = a1;
  v57 = a4;
  v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v35 = a4 + v24;
      v56 = a4 + v24;
      v58 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v37 = -v19;
        v52 = a4;
        v53 = a1;
        v51 = v8;
        v38 = (uint64_t)v54;
        do
        {
          sub_1BC3AA02C(v35 + v37, v38);
          v39 = a2 + v37;
          v40 = v55;
          sub_1BC3AA02C(a2 + v37, v55);
          v41 = *(int *)(v8 + 56);
          if (*(_BYTE *)(v38 + v41 + 8))
            v42 = -1;
          else
            v42 = *(_QWORD *)(v38 + v41);
          v43 = v40 + v41;
          if (*(_BYTE *)(v43 + 8))
            v44 = -1;
          else
            v44 = *(_QWORD *)v43;
          v45 = a3 + v37;
          sub_1BC421F94(v40);
          sub_1BC421F94(v38);
          if (v42 >= v44)
          {
            v48 = v56;
            v56 += v37;
            if (a3 < v48 || v45 >= v48)
            {
              v8 = v51;
              swift_arrayInitWithTakeFrontToBack();
              v39 = a2;
              v46 = v52;
              v47 = v53;
            }
            else
            {
              v8 = v51;
              v46 = v52;
              v47 = v53;
              if (a3 != v48)
                swift_arrayInitWithTakeBackToFront();
              v39 = a2;
            }
          }
          else
          {
            if (a3 < a2 || v45 >= a2)
            {
              v8 = v51;
              swift_arrayInitWithTakeFrontToBack();
              v46 = v52;
              v47 = v53;
            }
            else
            {
              v8 = v51;
              v46 = v52;
              v47 = v53;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v58 += v37;
          }
          v35 = v56;
          if (v56 <= v46)
            break;
          a2 = v39;
          a3 += v37;
        }
        while (v39 > v47);
      }
      goto LABEL_77;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v55 = a4 + v23;
    v56 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      do
      {
        sub_1BC3AA02C(a2, (uint64_t)v17);
        sub_1BC3AA02C(a4, (uint64_t)v14);
        v26 = *(int *)(v8 + 56);
        if (v17[v26 + 8])
          v27 = -1;
        else
          v27 = *(_QWORD *)&v17[v26];
        v28 = &v14[v26];
        if (v28[8])
          v29 = -1;
        else
          v29 = *(_QWORD *)v28;
        sub_1BC421F94((uint64_t)v14);
        sub_1BC421F94((uint64_t)v17);
        v30 = v58;
        if (v27 >= v29)
        {
          v33 = v57 + v19;
          if (v58 < v57 || v58 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v58 != v57)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v57 = v33;
          v31 = a2;
        }
        else
        {
          v31 = a2 + v19;
          if (v58 < a2 || v58 >= v31)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v58 == a2)
          {
            v30 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v58 = v30 + v19;
        a4 = v57;
        if (v57 >= v55)
          break;
        a2 = v31;
      }
      while (v31 < a3);
    }
LABEL_77:
    sub_1BC504248(&v58, &v57, (uint64_t *)&v56);
    return 1;
  }
LABEL_81:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

void sub_1BC4CEC58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4331A8)
  {
    sub_1BC3DD918(255, &qword_1ED6A4970, (unint64_t *)&qword_1ED6A4938, 0x1E0CB6870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC4CECF4();
    v0 = sub_1BC62BE4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4331A8);
  }
}

unint64_t sub_1BC4CECF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4331B0;
  if (!qword_1EF4331B0)
  {
    sub_1BC3DD918(255, &qword_1ED6A4970, (unint64_t *)&qword_1ED6A4938, 0x1E0CB6870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF4331B0);
  }
  return result;
}

void sub_1BC4CED5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4331B8)
  {
    sub_1BC486CEC(255, &qword_1EF4331C0, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC4CEC58();
    sub_1BC4CEE38(&qword_1EF4331C8, &qword_1EF4331C0, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData);
    sub_1BC347F0C(&qword_1EF4331D0, (uint64_t (*)(uint64_t))sub_1BC4CEC58, MEMORY[0x1E0C95C10]);
    v0 = sub_1BC62BE28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4331B8);
  }
}

uint64_t sub_1BC4CEE38(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC486CEC(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95D90], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC4CEE80()
{
  return sub_1BC347F0C(&qword_1EF4331E0, (uint64_t (*)(uint64_t))sub_1BC4CED5C, MEMORY[0x1E0C95B78]);
}

uint64_t sub_1BC4CEE9C()
{
  id *v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4CEEE0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC4CF380(*(_QWORD *)(v2 + 32), *a1, *(void **)(v2 + 24), *(void **)(v2 + 48));
  *a2 = result;
  return result;
}

unint64_t sub_1BC4CEF18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4331E8;
  if (!qword_1EF4331E8)
  {
    sub_1BC3EA7C0(255, &qword_1EF4331D8, (uint64_t (*)(uint64_t))sub_1BC4CED5C, sub_1BC4CEE80, MEMORY[0x1E0C95B50]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95B60], v1);
    atomic_store(result, (unint64_t *)&qword_1EF4331E8);
  }
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1BC4CEF80(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v14 = a2;
  v2 = sub_1BC62CC68();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62CC20();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1BC62C4AC();
  MEMORY[0x1E0C80A78](v8);
  v13 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  sub_1BC62C4A0();
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58E8, v7, MEMORY[0x1E0DEF828]);
  sub_1BC357158(0, &qword_1ED6A58B0, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35A2BC((unint64_t *)&qword_1ED6A58B8, &qword_1ED6A58B0, v7);
  sub_1BC62D0A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v2);
  sub_1BC62CCA4();
  type metadata accessor for UserDomainConceptDataProvider();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x1E0DEE9E0];
  v9[2] = MEMORY[0x1E0DEE9E0];
  v9[3] = v10;
  v11 = v14;
  v9[4] = v14;
  v12 = v11;
}

uint64_t sub_1BC4CF1A0(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD v21[2];
  unint64_t v22;
  uint64_t v23;
  id v24;

  v3 = v2;
  v24 = a2;
  v5 = sub_1BC62A7B4();
  v23 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - v10;
  if (!(a1 >> 62))
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_3;
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  v12 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v12)
    return 0;
LABEL_3:
  v13 = 0;
  v21[1] = v3;
  v22 = a1 & 0xC000000000000001;
  v14 = (id *)a1;
  while (1)
  {
    v15 = v22 ? (id)MEMORY[0x1BCCF24CC](v13, a1, v9) : *(id *)(a1 + 8 * v13 + 32);
    v16 = v15;
    v17 = objc_msgSend(v15, sel_targetUUID);
    sub_1BC62A79C();

    v18 = objc_msgSend(v24, sel_UUID);
    sub_1BC62A79C();

    v3 = sub_1BC62A790();
    a1 = *(_QWORD *)(v23 + 8);
    ((void (*)(char *, uint64_t))a1)(v7, v5);
    ((void (*)(char *, uint64_t))a1)(v11, v5);

    if ((v3 & 1) != 0)
      return v13;
    v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v13;
    a1 = (unint64_t)v14;
    if (v19 == v12)
      return 0;
  }
}

uint64_t sub_1BC4CF380(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  unint64_t v21;
  id v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a1;
  sub_1BC3EA7C0(0, &qword_1EF4331F0, (uint64_t (*)(uint64_t))sub_1BC4CF67C, sub_1BC4CF708, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C957D8]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v33 - v10;
  sub_1BC4CF724();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BC62BA5C();
  v36 = v9;
  v37 = a3;
  v34 = v17;
  v35 = v14;
  if (!a4)
    goto LABEL_5;
  v18 = objc_msgSend(a4, sel_linkCollection, v33);
  if (!v18)
  {
    a4 = 0;
LABEL_5:
    v25 = 1;
    goto LABEL_6;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, sel_links);

  sub_1BC34B6A0(0, &qword_1EF4320D8);
  v21 = sub_1BC62C878();

  v22 = a2;
  a4 = (void *)sub_1BC4CF1A0(v21, v22);
  v24 = v23;
  swift_bridgeObjectRelease();

  v25 = v24 & 1;
LABEL_6:
  v39 = sub_1BC48AC18(a2, 2, 0, 0);
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1BC4CF67C();
  sub_1BC4CF708();
  sub_1BC62C014();
  swift_release();
  v26 = swift_allocObject();
  v27 = v37;
  *(_QWORD *)(v26 + 16) = a2;
  *(_QWORD *)(v26 + 24) = v27;
  *(_QWORD *)(v26 + 32) = v34;
  *(_QWORD *)(v26 + 40) = a4;
  *(_BYTE *)(v26 + 48) = v25;
  type metadata accessor for UserDomainConceptViewData();
  sub_1BC4CF7BC();
  v28 = a2;
  v29 = v27;
  sub_1BC62C008();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
  sub_1BC4CF860();
  v30 = sub_1BC62C050();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v13);
  v39 = v30;
  sub_1BC3EA7C0(0, &qword_1EF433220, (uint64_t (*)(uint64_t))sub_1BC4CF724, sub_1BC4CF860, MEMORY[0x1E0C95A90]);
  sub_1BC4CF87C();
  v31 = sub_1BC62BFFC();
  swift_release();
  return v31;
}

void sub_1BC4CF67C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4331F8)
  {
    sub_1BC3DD918(255, &qword_1EF4320A8, (unint64_t *)&qword_1EF42CFA8, 0x1E0CB6620, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35E44C();
    v0 = sub_1BC62BE94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4331F8);
  }
}

uint64_t sub_1BC4CF708()
{
  return sub_1BC347F0C(&qword_1EF433200, (uint64_t (*)(uint64_t))sub_1BC4CF67C, MEMORY[0x1E0C95D90]);
}

void sub_1BC4CF724()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433208)
  {
    sub_1BC3EA7C0(255, &qword_1EF4331F0, (uint64_t (*)(uint64_t))sub_1BC4CF67C, sub_1BC4CF708, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C957D8]);
    type metadata accessor for UserDomainConceptViewData();
    sub_1BC4CF7BC();
    v0 = sub_1BC62BDEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433208);
  }
}

unint64_t sub_1BC4CF7BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433210;
  if (!qword_1EF433210)
  {
    sub_1BC3EA7C0(255, &qword_1EF4331F0, (uint64_t (*)(uint64_t))sub_1BC4CF67C, sub_1BC4CF708, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C957D8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C957E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433210);
  }
  return result;
}

uint64_t sub_1BC4CF824()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC4CF850(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BC4CD1B8(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 32), *(NSObject **)(v2 + 40), *(_BYTE *)(v2 + 48), a2);
}

uint64_t sub_1BC4CF860()
{
  return sub_1BC347F0C(&qword_1EF433218, (uint64_t (*)(uint64_t))sub_1BC4CF724, MEMORY[0x1E0C95708]);
}

unint64_t sub_1BC4CF87C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433228;
  if (!qword_1EF433228)
  {
    sub_1BC3EA7C0(255, &qword_1EF433220, (uint64_t (*)(uint64_t))sub_1BC4CF724, sub_1BC4CF860, MEMORY[0x1E0C95A90]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95AA0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433228);
  }
  return result;
}

unint64_t sub_1BC4CF8E4()
{
  unint64_t result;

  result = qword_1EF433230;
  if (!qword_1EF433230)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF433230);
  }
  return result;
}

void destroy for LabsListViewDataProvider(uint64_t a1)
{
  swift_release();

  swift_release();
}

_QWORD *initializeWithCopy for LabsListViewDataProvider(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  v5 = v3;
  swift_retain();
  v6 = v4;
  return a1;
}

_QWORD *assignWithCopy for LabsListViewDataProvider(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  a1[2] = a2[2];
  swift_retain();
  swift_release();
  v7 = (void *)a2[3];
  v8 = (void *)a1[3];
  a1[3] = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for LabsListViewDataProvider(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  swift_release();
  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for GatewayIdentifiedClinicalAccount(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GatewayIdentifiedClinicalAccount(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LabsListViewDataProvider()
{
  return &type metadata for LabsListViewDataProvider;
}

uint64_t storeEnumTagSinglePayload for LabsListViewDataProvider.ItemState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC4CFB5C + 4 * byte_1BC643EE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC4CFB90 + 4 * byte_1BC643EE0[v4]))();
}

uint64_t sub_1BC4CFB90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4CFB98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC4CFBA0);
  return result;
}

uint64_t sub_1BC4CFBAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4CFBB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC4CFBB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4CFBC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LabsListViewDataProvider.ItemState()
{
  return &type metadata for LabsListViewDataProvider.ItemState;
}

unint64_t sub_1BC4CFBE0()
{
  unint64_t result;

  result = qword_1EF433238;
  if (!qword_1EF433238)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC643F44, &type metadata for LabsListViewDataProvider.ItemState);
    atomic_store(result, (unint64_t *)&qword_1EF433238);
  }
  return result;
}

uint64_t sub_1BC4CFC24@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC4CFCA0(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v4 = v2;
  v5 = v3;
  return sub_1BC62BFCC();
}

uint64_t sub_1BC4CFD10()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BC4CFD88()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1BC62BFCC();
}

void (*sub_1BC4CFDF0(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1BC62BFB4();
  return sub_1BC4CFE68;
}

void sub_1BC4CFE68(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_1BC4CFEB4()
{
  swift_beginAccess();
  sub_1BC357158(0, (unint64_t *)&unk_1EF43B680, (uint64_t (*)(uint64_t))sub_1BC4D00DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BF9C();
  return swift_endAccess();
}

uint64_t sub_1BC4CFF2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  uint64_t v13;

  sub_1BC357158(0, &qword_1EF433260, (uint64_t (*)(uint64_t))sub_1BC4D00DC, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v11((char *)&v13 - v9, a1, v3, v8);
  ((void (*)(char *, char *, uint64_t))v11)(v6, v10, v3);
  swift_beginAccess();
  sub_1BC357158(0, (unint64_t *)&unk_1EF43B680, (uint64_t (*)(uint64_t))sub_1BC4D00DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BFA8();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_1BC4D0068()
{
  swift_beginAccess();
  sub_1BC357158(0, (unint64_t *)&unk_1EF43B680, (uint64_t (*)(uint64_t))sub_1BC4D00DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BF9C();
  return swift_endAccess();
}

void sub_1BC4D00DC(uint64_t a1)
{
  sub_1BC357158(a1, (unint64_t *)&unk_1EF433250, (uint64_t (*)(uint64_t))sub_1BC4D00F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BC4D00F8()
{
  unint64_t result;

  result = qword_1EF43B690;
  if (!qword_1EF43B690)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EF43B690);
  }
  return result;
}

uint64_t sub_1BC4D0134(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  sub_1BC357158(0, &qword_1EF433260, (uint64_t (*)(uint64_t))sub_1BC4D00DC, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v8 - v6, a1, v3, v5);
  swift_beginAccess();
  sub_1BC357158(0, (unint64_t *)&unk_1EF43B680, (uint64_t (*)(uint64_t))sub_1BC4D00DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BFA8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*sub_1BC4D022C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1BC357158(0, &qword_1EF433260, (uint64_t (*)(uint64_t))sub_1BC4D00DC, MEMORY[0x1E0C96180]);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener__latestChange;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_1BC357158(0, (unint64_t *)&unk_1EF43B680, (uint64_t (*)(uint64_t))sub_1BC4D00DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v3[16] = v9;
  sub_1BC62BF9C();
  swift_endAccess();
  return sub_1BC4D031C;
}

void sub_1BC4D031C(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1BC62BFA8();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_1BC62BFA8();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

id DownloadableAttachmentStateChangeListener.__allocating_init(handler:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  id v14;
  uint64_t v16;
  objc_super v17;
  uint64_t v18;

  sub_1BC357158(0, (unint64_t *)&unk_1EF43B680, (uint64_t (*)(uint64_t))sub_1BC4D00DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  v10 = (char *)objc_allocWithZone(v2);
  v11 = &v10[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener__latestChange];
  v18 = 0;
  sub_1BC4D00DC(0);
  v12 = v10;
  sub_1BC62BF90();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v9, v6);
  v13 = &v12[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener_handler];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  swift_retain();

  v17.receiver = v12;
  v17.super_class = v2;
  v14 = objc_msgSendSuper2(&v17, sel_init);
  swift_release();
  return v14;
}

id DownloadableAttachmentStateChangeListener.init(handler:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  objc_class *v13;
  id v14;
  uint64_t v16;
  objc_super v17;
  uint64_t v18;

  sub_1BC357158(0, (unint64_t *)&unk_1EF43B680, (uint64_t (*)(uint64_t))sub_1BC4D00DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  v10 = &v2[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener__latestChange];
  v18 = 0;
  sub_1BC4D00DC(0);
  v11 = v2;
  sub_1BC62BF90();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v9, v6);
  v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener_handler];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  swift_retain();

  v13 = (objc_class *)type metadata accessor for DownloadableAttachmentStateChangeListener();
  v17.receiver = v11;
  v17.super_class = v13;
  v14 = objc_msgSendSuper2(&v17, sel_init);
  swift_release();
  return v14;
}

uint64_t type metadata accessor for DownloadableAttachmentStateChangeListener()
{
  uint64_t result;

  result = qword_1EF4332F8;
  if (!qword_1EF4332F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC4D06B4(void *a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  void (*v25)(id);
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BAF8();
  v9 = a1;
  v10 = sub_1BC62BB28();
  v11 = sub_1BC62CAB8();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v31 = v2;
    v13 = v12;
    v28 = swift_slowAlloc();
    v32 = v28;
    v33 = ObjectType;
    *(_DWORD *)v13 = 136446466;
    swift_getMetatypeMetadata();
    v30 = v6;
    v14 = sub_1BC62C6E0();
    v29 = v5;
    v33 = sub_1BC4991F0(v14, v15, &v32);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    v27[1] = v13 + 14;
    v16 = v9;
    v17 = objc_msgSend(v16, sel_description);
    v18 = sub_1BC62C680();
    v20 = v19;

    v33 = sub_1BC4991F0(v18, v20, &v32);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v10, v11, "[%{public}s]: downloadableAttachmentDidChangeState (downloadableAttachment: %s)", (uint8_t *)v13, 0x16u);
    v21 = v28;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v21, -1, -1);
    v22 = v13;
    v2 = v31;
    MEMORY[0x1BCCF36A8](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v33 = (uint64_t)v9;
  v23 = v9;
  v24 = v2;
  sub_1BC62BFCC();
  v25 = *(void (**)(id))&v24[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener_handler];
  swift_retain();
  v25(v23);
  return swift_release();
}

id DownloadableAttachmentStateChangeListener.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DownloadableAttachmentStateChangeListener.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DownloadableAttachmentStateChangeListener.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownloadableAttachmentStateChangeListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC4D0AE0()
{
  return type metadata accessor for DownloadableAttachmentStateChangeListener();
}

void sub_1BC4D0AE8()
{
  unint64_t v0;

  sub_1BC357158(319, (unint64_t *)&unk_1EF43B680, (uint64_t (*)(uint64_t))sub_1BC4D00DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for DownloadableAttachmentStateChangeListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.latestChange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.latestChange.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.latestChange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.$latestChange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.$latestChange.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.$latestChange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.__allocating_init(handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.downloadableAttachmentDidChangeState(downloadableAttachment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

unint64_t ClinicalSharingOnboardingStep.init(rawValue:)(unint64_t a1)
{
  return sub_1BC4D0C9C(a1);
}

unint64_t sub_1BC4D0C6C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1BC4D0C9C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_1BC4D0C9C(unint64_t result)
{
  if (result > 5)
    return 0;
  return result;
}

unint64_t sub_1BC4D0CB0()
{
  unint64_t result;

  result = qword_1EF433310;
  if (!qword_1EF433310)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for ClinicalSharingOnboardingStep, &type metadata for ClinicalSharingOnboardingStep);
    atomic_store(result, (unint64_t *)&qword_1EF433310);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingOnboardingStep()
{
  return &type metadata for ClinicalSharingOnboardingStep;
}

id TextAndActionCell.actionButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___HRUITextAndActionCell_actionButton);
}

uint64_t sub_1BC4D0D30()
{
  return sub_1BC38BBC4(&OBJC_IVAR___HRUITextAndActionCell_explanation);
}

void sub_1BC4D0D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  void *v6;
  void *v7;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___HRUITextAndActionCell_explanation);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  v6 = *(void **)(v2 + OBJC_IVAR___HRUITextAndActionCell_explanationLabel);
  if (v5[1])
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v6, sel_setText_, v7);

}

void (*sub_1BC4D0DFC(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRUITextAndActionCell_explanation;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC4D0E54;
}

void sub_1BC4D0E54(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(void **)(v4 + OBJC_IVAR___HRUITextAndActionCell_explanationLabel);
    if (*(_QWORD *)(v4 + v3[4] + 8))
    {
      swift_bridgeObjectRetain();
      v6 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v5, sel_setText_, v6);

  }
  free(v3);
}

uint64_t sub_1BC4D0EF8()
{
  return sub_1BC38BBC4(&OBJC_IVAR___HRUITextAndActionCell_actionTitle);
}

void sub_1BC4D0F10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  void *v6;
  void *v7;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___HRUITextAndActionCell_actionTitle);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  v6 = *(void **)(v2 + OBJC_IVAR___HRUITextAndActionCell_actionButton);
  if (v5[1])
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v6, sel_setTitle_forState_, v7, 0);

}

void (*sub_1BC4D0FC8(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRUITextAndActionCell_actionTitle;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC4D1020;
}

void sub_1BC4D1020(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(void **)(v4 + OBJC_IVAR___HRUITextAndActionCell_actionButton);
    if (*(_QWORD *)(v4 + v3[4] + 8))
    {
      swift_bridgeObjectRetain();
      v6 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v5, sel_setTitle_forState_, v6, 0);

  }
  free(v3);
}

id TextAndActionCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id TextAndActionCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  objc_super v16;

  v6 = OBJC_IVAR___HRUITextAndActionCell_explanationLabel;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_init);
  v9 = OBJC_IVAR___HRUITextAndActionCell_actionButton;
  *(_QWORD *)&v8[v9] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  v10 = &v8[OBJC_IVAR___HRUITextAndActionCell_explanation];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &v8[OBJC_IVAR___HRUITextAndActionCell_actionTitle];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;

  if (a3)
  {
    v12 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v16.receiver = v8;
  v16.super_class = (Class)type metadata accessor for TextAndActionCell();
  v13 = objc_msgSendSuper2(&v16, sel_initWithStyle_reuseIdentifier_, a1, v12);

  v14 = v13;
  sub_1BC4D13D0();

  return v14;
}

uint64_t type metadata accessor for TextAndActionCell()
{
  return objc_opt_self();
}

id sub_1BC4D12C8(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  id v9;
  objc_super v11;

  v3 = OBJC_IVAR___HRUITextAndActionCell_explanationLabel;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = OBJC_IVAR___HRUITextAndActionCell_actionButton;
  *(_QWORD *)&v5[v6] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  v7 = &v5[OBJC_IVAR___HRUITextAndActionCell_explanation];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v5[OBJC_IVAR___HRUITextAndActionCell_actionTitle];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for TextAndActionCell();
  v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

void sub_1BC4D13D0()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  double v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;

  v1 = *(void **)&v0[OBJC_IVAR___HRUITextAndActionCell_explanationLabel];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v2 = (void *)objc_opt_self();
  v3 = *MEMORY[0x1E0DC4A88];
  v4 = objc_msgSend(v2, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v1, sel_setFont_, v4);

  v5 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v1, sel_setTextColor_, v5);

  objc_msgSend(v1, sel_setTextAlignment_, 1);
  objc_msgSend(v1, sel_setNumberOfLines_, 0);
  v6 = *(void **)&v0[OBJC_IVAR___HRUITextAndActionCell_actionButton];
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v7 = objc_msgSend(v6, sel_titleLabel);
  if (v7)
  {
    v9 = v7;
    v10 = objc_msgSend(v2, sel_preferredFontForTextStyle_, v3);
    objc_msgSend(v9, sel_setFont_, v10);

  }
  LODWORD(v8) = 1144750080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, v8);
  LODWORD(v11) = 1144750080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 1, v11);
  LODWORD(v12) = 1144750080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1, v12);
  LODWORD(v13) = 1144750080;
  objc_msgSend(v6, sel_setContentHuggingPriority_forAxis_, 0, v13);
  LODWORD(v14) = 1144750080;
  objc_msgSend(v6, sel_setContentCompressionResistancePriority_forAxis_, 1, v14);
  v15 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v15, sel_addSubview_, v1);

  v16 = objc_msgSend(v0, (SEL)&selRef_invalidate);
  objc_msgSend(v16, sel_addSubview_, v6);

  v45 = (void *)objc_opt_self();
  sub_1BC34D844();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BC63B440;
  v18 = objc_msgSend(v1, sel_leadingAnchor);
  v19 = objc_msgSend(v0, (SEL)&selRef_invalidate);
  v20 = objc_msgSend(v19, (SEL)&selRef_dateCache + 6);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 16.0);
  *(_QWORD *)(v17 + 32) = v21;
  v22 = objc_msgSend(v1, sel_topAnchor);
  v23 = objc_msgSend(v0, (SEL)&selRef_invalidate);
  v24 = objc_msgSend(v23, sel_topAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, 8.0);
  *(_QWORD *)(v17 + 40) = v25;
  v26 = objc_msgSend(v1, sel_trailingAnchor);
  v27 = objc_msgSend(v0, (SEL)&selRef_invalidate);
  v28 = objc_msgSend(v27, (SEL)&selRef_registerReuseIdentifiersWithTableView_);

  v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, -16.0);
  *(_QWORD *)(v17 + 48) = v29;
  v30 = objc_msgSend(v1, sel_bottomAnchor);
  v31 = objc_msgSend(v6, sel_topAnchor);
  v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, -16.0);

  *(_QWORD *)(v17 + 56) = v32;
  v33 = objc_msgSend(v6, sel_leadingAnchor);
  v34 = objc_msgSend(v0, sel_contentView);
  v35 = objc_msgSend(v34, sel_leadingAnchor);

  v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v35, 16.0);
  *(_QWORD *)(v17 + 64) = v36;
  v37 = objc_msgSend(v6, sel_trailingAnchor);
  v38 = objc_msgSend(v0, sel_contentView);
  v39 = objc_msgSend(v38, sel_trailingAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v39, -16.0);
  *(_QWORD *)(v17 + 72) = v40;
  v41 = objc_msgSend(v6, sel_bottomAnchor);
  v42 = objc_msgSend(v0, sel_contentView);
  v43 = objc_msgSend(v42, sel_bottomAnchor);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, -8.0);
  *(_QWORD *)(v17 + 80) = v44;
  sub_1BC62C890();
  sub_1BC34D89C();
  v46 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v45, sel_activateConstraints_, v46);

}

id TextAndActionCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextAndActionCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC4D1A1C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___HRUITextAndActionCell_explanation, a2);
}

uint64_t sub_1BC4D1A28(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC4D0D48);
}

uint64_t sub_1BC4D1A34@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___HRUITextAndActionCell_actionTitle, a2);
}

uint64_t sub_1BC4D1A40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC4D0F10);
}

uint64_t method lookup function for TextAndActionCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TextAndActionCell.explanation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TextAndActionCell.explanation.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TextAndActionCell.explanation.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TextAndActionCell.actionTitle.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TextAndActionCell.actionTitle.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TextAndActionCell.actionTitle.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t sub_1BC4D1B60(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      sub_1BC4D2278();
      result = sub_1BC62CED8();
      break;
    default:
      result = sub_1BC62D5C8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t UserInteractionType.init(rawValue:)(unint64_t a1)
{
  return sub_1BC4D2258(a1);
}

unint64_t sub_1BC4D1C6C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1BC4D2258(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1BC4D1C9C(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      sub_1BC4D2278();
      result = sub_1BC62CED8();
      break;
    default:
      result = sub_1BC62D5C8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t UserInteractionContext.init(rawValue:)(unint64_t a1)
{
  return sub_1BC4D2268(a1);
}

unint64_t sub_1BC4D1F44@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1BC4D2268(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t DisplayCategory.Kind.categoryAnalyticsName.getter()
{
  sub_1BC4D2278();
  return sub_1BC62CED8();
}

unint64_t UserInteractionAction.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t SearchContext.init(rawValue:)()
{
  return 0;
}

_QWORD *sub_1BC4D20DC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 0;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1BC4D20F4(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_1BC4D2278();
      result = sub_1BC62CED8();
      break;
    default:
      result = sub_1BC62D5C8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t PinLabUserActionType.init(rawValue:)(unint64_t a1)
{
  return sub_1BC4D22B4(a1);
}

unint64_t sub_1BC4D21E8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1BC4D22B4(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

BOOL PinLabRoomType.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t HRUserDomainConceptListType.categoryRoomContextAnalytic.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = 1;
  if (a1)
    v1 = 2;
  if (a1 == 1)
    return 0;
  else
    return v1;
}

unint64_t sub_1BC4D2258(unint64_t result)
{
  if (result > 4)
    return 0;
  return result;
}

unint64_t sub_1BC4D2268(unint64_t result)
{
  if (result > 0x13)
    return 0;
  return result;
}

unint64_t sub_1BC4D2278()
{
  unint64_t result;

  result = qword_1ED6A4800;
  if (!qword_1ED6A4800)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A4800);
  }
  return result;
}

unint64_t sub_1BC4D22B4(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t sub_1BC4D22C8()
{
  unint64_t result;

  result = qword_1EF433360;
  if (!qword_1EF433360)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for UserInteractionType, &type metadata for UserInteractionType);
    atomic_store(result, (unint64_t *)&qword_1EF433360);
  }
  return result;
}

unint64_t sub_1BC4D2310()
{
  unint64_t result;

  result = qword_1EF433368;
  if (!qword_1EF433368)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for UserInteractionContext, &type metadata for UserInteractionContext);
    atomic_store(result, (unint64_t *)&qword_1EF433368);
  }
  return result;
}

unint64_t sub_1BC4D2358()
{
  unint64_t result;

  result = qword_1EF433370;
  if (!qword_1EF433370)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for UserInteractionAction, &type metadata for UserInteractionAction);
    atomic_store(result, (unint64_t *)&qword_1EF433370);
  }
  return result;
}

unint64_t sub_1BC4D23A0()
{
  unint64_t result;

  result = qword_1EF433378;
  if (!qword_1EF433378)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for CategoryRoomAction, &type metadata for CategoryRoomAction);
    atomic_store(result, (unint64_t *)&qword_1EF433378);
  }
  return result;
}

unint64_t sub_1BC4D23E8()
{
  unint64_t result;

  result = qword_1EF433380;
  if (!qword_1EF433380)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for SearchContext, &type metadata for SearchContext);
    atomic_store(result, (unint64_t *)&qword_1EF433380);
  }
  return result;
}

unint64_t sub_1BC4D2430()
{
  unint64_t result;

  result = qword_1EF433388;
  if (!qword_1EF433388)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for PinLabUserActionType, &type metadata for PinLabUserActionType);
    atomic_store(result, (unint64_t *)&qword_1EF433388);
  }
  return result;
}

unint64_t sub_1BC4D2478()
{
  unint64_t result;

  result = qword_1EF433390;
  if (!qword_1EF433390)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for PinLabRoomType, &type metadata for PinLabRoomType);
    atomic_store(result, (unint64_t *)&qword_1EF433390);
  }
  return result;
}

unint64_t sub_1BC4D24C0()
{
  unint64_t result;

  result = qword_1EF433398;
  if (!qword_1EF433398)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for PinLabCategoryRoomContext, &type metadata for PinLabCategoryRoomContext);
    atomic_store(result, (unint64_t *)&qword_1EF433398);
  }
  return result;
}

ValueMetadata *type metadata accessor for UserInteractionType()
{
  return &type metadata for UserInteractionType;
}

ValueMetadata *type metadata accessor for UserInteractionContext()
{
  return &type metadata for UserInteractionContext;
}

ValueMetadata *type metadata accessor for UserInteractionAction()
{
  return &type metadata for UserInteractionAction;
}

ValueMetadata *type metadata accessor for CategoryRoomAction()
{
  return &type metadata for CategoryRoomAction;
}

ValueMetadata *type metadata accessor for SearchContext()
{
  return &type metadata for SearchContext;
}

ValueMetadata *type metadata accessor for PinLabUserActionType()
{
  return &type metadata for PinLabUserActionType;
}

ValueMetadata *type metadata accessor for PinLabRoomType()
{
  return &type metadata for PinLabRoomType;
}

ValueMetadata *type metadata accessor for PinLabCategoryRoomContext()
{
  return &type metadata for PinLabCategoryRoomContext;
}

void sub_1BC4D2594(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id sub_1BC4D25F4()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font);
  swift_beginAccess();
  return *v1;
}

void sub_1BC4D2638(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_1BC4D2688())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id LabelStackView.__allocating_init(textStyle:)(void *a1)
{
  objc_class *v1;
  char *v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_interItemSpacing] = 0x4010000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_textStyle] = a1;
  v4 = (void *)objc_opt_self();
  v5 = v3;
  v6 = a1;
  v7 = objc_msgSend(v4, sel_preferredFontForTextStyle_, v6);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font] = v7;

  v10.receiver = v5;
  v10.super_class = v1;
  v8 = objc_msgSendSuper2(&v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  return v8;
}

id LabelStackView.init(textStyle:)(void *a1)
{
  char *v1;
  void *v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_interItemSpacing] = 0x4010000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_textStyle] = a1;
  v3 = (void *)objc_opt_self();
  v4 = v1;
  v5 = a1;
  v6 = objc_msgSend(v3, sel_preferredFontForTextStyle_, v5);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font] = v6;

  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for LabelStackView();
  v7 = objc_msgSendSuper2(&v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  return v7;
}

uint64_t type metadata accessor for LabelStackView()
{
  return objc_opt_self();
}

void sub_1BC4D2938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  id v8;
  void *v9;
  char *v10;
  char *v11;
  id v12;

  v5 = v4;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v9 = (void *)sub_1BC62C650();
  objc_msgSend(v8, sel_setText_, v9);

  objc_msgSend(v8, sel_setTextColor_, a3);
  v10 = &v5[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font];
  swift_beginAccess();
  objc_msgSend(v8, sel_setFont_, *(_QWORD *)v10);
  objc_msgSend(v8, sel_setNumberOfLines_, a4);
  objc_msgSend(v5, sel_addSubview_, v8);
  v11 = &v5[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels];
  swift_beginAccess();
  v12 = v8;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*(_QWORD *)v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v11 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  swift_endAccess();
  objc_msgSend(v5, sel_setNeedsLayout);

}

void sub_1BC4D2AB4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v6;
  char *v7;
  id v8;

  v3 = v2;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v6, sel_setAttributedText_, a1);
  objc_msgSend(v6, sel_setNumberOfLines_, a2);
  objc_msgSend(v3, sel_addSubview_, v6);
  v7 = &v3[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels];
  swift_beginAccess();
  v8 = v6;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  swift_endAccess();
  objc_msgSend(v3, sel_setNeedsLayout);

}

id sub_1BC4D2BC0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  uint64_t i;
  id v6;
  void *v7;

  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels];
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!(*(_QWORD *)v1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain_n();
    if (v3)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease_n();
    *(_QWORD *)v1 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    return objc_msgSend(v0, sel_setNeedsLayout);
  }
  swift_bridgeObjectRetain_n();
  result = (id)sub_1BC62D3B8();
  v3 = (uint64_t)result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1BCCF24CC](i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v6, sel_removeFromSuperview);

    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC4D2CEC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  double v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  objc_super v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;

  v1 = sub_1BC62D55C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for LabelStackView();
  v25.receiver = v0;
  v25.super_class = v5;
  objc_msgSendSuper2(&v25, sel_layoutSubviews);
  objc_msgSend(v0, sel_directionalLayoutMargins);
  v7 = v6;
  objc_msgSend(v0, sel_directionalLayoutMargins);
  v9 = v8;
  objc_msgSend(v0, sel_bounds);
  v10 = CGRectGetWidth(v26) - v7;
  v11 = &v0[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels];
  swift_beginAccess();
  v12 = *(_QWORD *)v11;
  if (*(_QWORD *)v11 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC62D3B8();
    v15 = v10 - v9;
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  v15 = v10 - v9;
  if (!v13)
    goto LABEL_8;
LABEL_3:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x1BCCF24CC](0, v12);
  }
  else
  {
    if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    v16 = *(id *)(v12 + 32);
  }
  v17 = v16;
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_sizeThatFits_, v15, 1.79769313e308);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DED500], v1);
  v18 = objc_msgSend(v17, sel_traitCollection);
  objc_msgSend(v18, sel_displayScale);
  sub_1BC62A994();
  objc_msgSend(v18, sel_displayScale);
  sub_1BC62A994();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
LABEL_9:
  v19 = *(_QWORD *)v11;
  if (!(*(_QWORD *)v11 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_11;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v20 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_11:
  if (v20 >= 1)
  {
    v21 = 0;
    do
    {
      if ((v19 & 0xC000000000000001) != 0)
        v22 = (id)MEMORY[0x1BCCF24CC](v21, v19);
      else
        v22 = *(id *)(v19 + 8 * v21 + 32);
      v23 = v22;
      if (objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
      {
        objc_msgSend(v0, sel_bounds, v7);
        CGRectGetWidth(v28);
        objc_msgSend(v23, sel_intrinsicContentSize);
      }
      ++v21;
      objc_msgSend(v23, sel_setFrame_);
      objc_msgSend(v23, sel_sizeToFit);
      objc_msgSend(v23, sel_frame);
      CGRectGetMaxY(v27);

    }
    while (v20 != v21);
    return swift_bridgeObjectRelease();
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1BC4D30A8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double Width;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  double v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  char *v28;
  char *v29;
  unint64_t v30;
  CGRect v31;

  v1 = v0;
  v2 = sub_1BC62D55C();
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = MEMORY[0x1E0C80A78](v2).n128_u64[0];
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_directionalLayoutMargins, v4);
  v8 = v7;
  objc_msgSend(v0, sel_directionalLayoutMargins);
  v10 = v9;
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v31);
  v12 = &v0[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels];
  swift_beginAccess();
  v13 = *(_QWORD *)v12;
  if (*(_QWORD *)v12 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC62D3B8();
    v14 = result;
    v28 = v12;
    v29 = v1;
    if (!result)
      goto LABEL_10;
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v28 = v12;
    v29 = v1;
    if (!v14)
      goto LABEL_10;
  }
  if (v14 < 1)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v16 = 0;
  v17 = Width - v8 - v10;
  v30 = v13 & 0xC000000000000001;
  v18 = *MEMORY[0x1E0DED500];
  v19 = 0.0;
  v20 = v13;
  v21 = v14;
  do
  {
    if (v30)
      v22 = (id)MEMORY[0x1BCCF24CC](v16, v13);
    else
      v22 = *(id *)(v13 + 8 * v16 + 32);
    v23 = v22;
    ++v16;
    objc_msgSend(v22, sel_sizeThatFits_, v17, 1.79769313e308, v28, v29);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 104))(v6, v18, v2);
    v24 = objc_msgSend(v23, sel_traitCollection);
    objc_msgSend(v24, sel_displayScale);
    sub_1BC62A994();
    objc_msgSend(v24, sel_displayScale);
    sub_1BC62A994();
    v26 = v25;

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v19 = v19 + v26;
    v13 = v20;
  }
  while (v21 != v16);
LABEL_10:
  result = swift_bridgeObjectRelease();
  if (!(*(_QWORD *)v28 >> 62))
  {
    if (!__OFSUB__(*(_QWORD *)((*(_QWORD *)v28 & 0xFFFFFFFFFFFFF8) + 0x10), 1))
      return result;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v27 = sub_1BC62D3B8();
  result = swift_bridgeObjectRelease();
  if (__OFSUB__(v27, 1))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  return result;
}

id LabelStackView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void LabelStackView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LabelStackView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LabelStackView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC4D34EC@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for LabelStackView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LabelStackView.font.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of LabelStackView.font.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of LabelStackView.font.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of LabelStackView.__allocating_init(textStyle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of LabelStackView.addLabel(text:textColor:numberOfLines:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of LabelStackView.addLabel(attributedText:numberOfLines:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of LabelStackView.removeAll()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t sub_1BC4D35FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v2 = sub_1BC62CC68();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62C4AC();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1BC62CC20();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v13[1] = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  sub_1BC357158(0, &qword_1ED6A4820, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC639590;
  sub_1BC62CC14();
  v15 = v9;
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58E8, v8, MEMORY[0x1E0DEF828]);
  sub_1BC4D8104(0);
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58B8, (uint64_t (*)(uint64_t))sub_1BC4D8104, MEMORY[0x1E0DEAF38]);
  sub_1BC62D0A0();
  sub_1BC62C494();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v2);
  v10 = sub_1BC62CCA4();
  v11 = v14;
  *(_QWORD *)(v1 + 16) = v10;
  *(_QWORD *)(v1 + 24) = v11;
  return v1;
}

uint64_t sub_1BC4D3820(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1BC4D3834(a1, a2, a3);
}

uint64_t sub_1BC4D3834(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  swift_beginAccess();
  v6 = *(_QWORD *)(a3 + 24);
  swift_bridgeObjectRetain();
  a1(&v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC4D38B8@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  objc_class *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;

  v2 = sub_1BC35DB8C(MEMORY[0x1E0DEE9D8]);
  sub_1BC4D81A4(0, &qword_1ED6A47B0, &qword_1ED6A47D0, &qword_1ED6A47E8, (uint64_t)off_1E74D01B8);
  swift_allocObject();
  *a1 = sub_1BC4D35FC(v2);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (void *)*MEMORY[0x1E0DC4778];
  v17 = 0u;
  v18 = 0u;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (void *)objc_opt_self();
  swift_retain_n();
  v7 = v4;
  v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  v10 = sub_1BC3DE508(v7, (uint64_t)&v17, v8, (uint64_t)sub_1BC4D89B0, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  v11 = (void *)*MEMORY[0x1E0DC4768];
  v17 = 0u;
  v18 = 0u;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v12 + 24) = v3;
  swift_retain();
  v13 = v11;
  v14 = objc_msgSend(v6, sel_defaultCenter);
  v15 = sub_1BC3DE508(v13, (uint64_t)&v17, v14, (uint64_t)sub_1BC4D89B4, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1BC4D3AE8@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  objc_class *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;

  v2 = sub_1BC35B6D8(MEMORY[0x1E0DEE9D8]);
  sub_1BC357158(0, &qword_1ED6A47C0, (uint64_t (*)(uint64_t))sub_1BC4D8120, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Box);
  swift_allocObject();
  *a1 = sub_1BC4D35FC(v2);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (void *)*MEMORY[0x1E0DC4778];
  v17 = 0u;
  v18 = 0u;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (void *)objc_opt_self();
  swift_retain_n();
  v7 = v4;
  v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  v10 = sub_1BC3DE508(v7, (uint64_t)&v17, v8, (uint64_t)sub_1BC4D89B0, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  v11 = (void *)*MEMORY[0x1E0DC4768];
  v17 = 0u;
  v18 = 0u;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v12 + 24) = v3;
  swift_retain();
  v13 = v11;
  v14 = objc_msgSend(v6, sel_defaultCenter);
  v15 = sub_1BC3DE508(v13, (uint64_t)&v17, v14, (uint64_t)sub_1BC4D89B4, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1BC4D3D10@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  objc_class *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;

  v2 = sub_1BC35B82C(MEMORY[0x1E0DEE9D8]);
  sub_1BC357158(0, &qword_1ED6A47A8, (uint64_t (*)(uint64_t))sub_1BC4D8208, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Box);
  swift_allocObject();
  *a1 = sub_1BC4D35FC(v2);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (void *)*MEMORY[0x1E0DC4778];
  v17 = 0u;
  v18 = 0u;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BC4D82B4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (void *)objc_opt_self();
  swift_retain_n();
  v7 = v4;
  v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  v10 = sub_1BC3DE508(v7, (uint64_t)&v17, v8, (uint64_t)sub_1BC4D89B0, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  v11 = (void *)*MEMORY[0x1E0DC4768];
  v17 = 0u;
  v18 = 0u;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC4D82B4;
  *(_QWORD *)(v12 + 24) = v3;
  swift_retain();
  v13 = v11;
  v14 = objc_msgSend(v6, sel_defaultCenter);
  v15 = sub_1BC3DE508(v13, (uint64_t)&v17, v14, (uint64_t)sub_1BC4D89B4, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1BC4D3F38@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  objc_class *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;

  v2 = sub_1BC35DBA8(MEMORY[0x1E0DEE9D8]);
  sub_1BC4D81A4(0, &qword_1EF433420, &qword_1EF433428, (unint64_t *)&qword_1ED6A47F8, 0x1E0DC3870);
  swift_allocObject();
  *a1 = sub_1BC4D35FC(v2);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (void *)*MEMORY[0x1E0DC4778];
  v17 = 0u;
  v18 = 0u;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (void *)objc_opt_self();
  swift_retain_n();
  v7 = v4;
  v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  v10 = sub_1BC3DE508(v7, (uint64_t)&v17, v8, (uint64_t)sub_1BC4D89B0, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  v11 = (void *)*MEMORY[0x1E0DC4768];
  v17 = 0u;
  v18 = 0u;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v12 + 24) = v3;
  swift_retain();
  v13 = v11;
  v14 = objc_msgSend(v6, sel_defaultCenter);
  v15 = sub_1BC3DE508(v13, (uint64_t)&v17, v14, (uint64_t)sub_1BC4D89B4, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1BC4D4168@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  objc_class *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;

  v2 = sub_1BC35E76C(MEMORY[0x1E0DEE9D8]);
  sub_1BC4D86E8(0, &qword_1EF433430, &qword_1EF433438, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))MEMORY[0x1E0DEA048], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Box);
  swift_allocObject();
  *a1 = sub_1BC4D35FC(v2);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (void *)*MEMORY[0x1E0DC4778];
  v17 = 0u;
  v18 = 0u;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (void *)objc_opt_self();
  swift_retain_n();
  v7 = v4;
  v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  v10 = sub_1BC3DE508(v7, (uint64_t)&v17, v8, (uint64_t)sub_1BC4D89B0, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  v11 = (void *)*MEMORY[0x1E0DC4768];
  v17 = 0u;
  v18 = 0u;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v12 + 24) = v3;
  swift_retain();
  v13 = v11;
  v14 = objc_msgSend(v6, sel_defaultCenter);
  v15 = sub_1BC3DE508(v13, (uint64_t)&v17, v14, (uint64_t)sub_1BC4D89B4, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1BC4D4398@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  objc_class *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;

  v2 = sub_1BC35CE48(MEMORY[0x1E0DEE9D8]);
  sub_1BC4D87FC(0);
  swift_allocObject();
  *a1 = sub_1BC4D35FC(v2);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (void *)*MEMORY[0x1E0DC4778];
  v17 = 0u;
  v18 = 0u;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (void *)objc_opt_self();
  swift_retain_n();
  v7 = v4;
  v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  v10 = sub_1BC3DE508(v7, (uint64_t)&v17, v8, (uint64_t)sub_1BC4D89B0, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  v11 = (void *)*MEMORY[0x1E0DC4768];
  v17 = 0u;
  v18 = 0u;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v12 + 24) = v3;
  swift_retain();
  v13 = v11;
  v14 = objc_msgSend(v6, sel_defaultCenter);
  v15 = sub_1BC3DE508(v13, (uint64_t)&v17, v14, (uint64_t)sub_1BC4D89B4, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1BC4D45A8@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  objc_class *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;

  v2 = sub_1BC35E8B4(MEMORY[0x1E0DEE9D8]);
  sub_1BC4D8074(0);
  swift_allocObject();
  *a1 = sub_1BC4D35FC(v2);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (void *)*MEMORY[0x1E0DC4778];
  v17 = 0u;
  v18 = 0u;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (void *)objc_opt_self();
  swift_retain_n();
  v7 = v4;
  v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  v10 = sub_1BC3DE508(v7, (uint64_t)&v17, v8, (uint64_t)sub_1BC3DE500, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  v11 = (void *)*MEMORY[0x1E0DC4768];
  v17 = 0u;
  v18 = 0u;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC4D80E0;
  *(_QWORD *)(v12 + 24) = v3;
  swift_retain();
  v13 = v11;
  v14 = objc_msgSend(v6, sel_defaultCenter);
  v15 = sub_1BC3DE508(v13, (uint64_t)&v17, v14, (uint64_t)sub_1BC3DE6D8, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1BC4D47B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];

  v0 = sub_1BC62C47C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC357158(0, &qword_1ED6A4818, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BC639590;
    sub_1BC62C470();
    v9[2] = v7;
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, v6, MEMORY[0x1E0DEF510]);
    sub_1BC370738();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
    v8 = sub_1BC62D0A0();
    MEMORY[0x1E0C80A78](v8);
    v9[-4] = sub_1BC4D8968;
    v9[-3] = 0;
    v9[-2] = v5;
    sub_1BC62CC80();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC4D4988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];

  v0 = sub_1BC62C47C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC357158(0, &qword_1ED6A4818, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BC639590;
    sub_1BC62C470();
    v9[2] = v7;
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, v6, MEMORY[0x1E0DEF510]);
    sub_1BC370738();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
    v8 = sub_1BC62D0A0();
    MEMORY[0x1E0C80A78](v8);
    v9[-4] = sub_1BC4D4B58;
    v9[-3] = 0;
    v9[-2] = v5;
    sub_1BC62CC80();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC4D4B58(_QWORD *a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t sub_1BC4D4B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  _QWORD *v28;
  uint64_t v29;
  _QWORD v30[5];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[4];
  uint64_t v37;
  _QWORD v38[7];

  v4 = v3;
  v8 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v8);
  v20 = (uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v4;
  v11 = *(void **)a1;
  v10 = *(void **)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v22 = *(void **)(a1 + 40);
  v15 = *(_QWORD *)a2;
  v25 = *(_QWORD *)(a2 + 8);
  v26 = v15;
  v24 = *(_QWORD *)(a2 + 16);
  v23 = *(unsigned __int8 *)(a2 + 24);
  v16 = *v4;
  v30[2] = a3;
  v27 = sub_1BC4D8914;
  v28 = v30;
  v29 = v16;
  sub_1BC4D86E8(0, &qword_1ED6A4288, (unint64_t *)&qword_1ED6A4280, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC62CC8C();
  if ((_QWORD)v31)
  {
    v36[2] = v33;
    v36[3] = v34;
    v37 = v35;
    v36[0] = v31;
    v36[1] = v32;
    *(_QWORD *)&v31 = v11;
    *((_QWORD *)&v31 + 1) = v10;
    *(_QWORD *)&v32 = v13;
    *((_QWORD *)&v32 + 1) = v12;
    *(_QWORD *)&v33 = v14;
    *((_QWORD *)&v33 + 1) = v22;
    sub_1BC35EEF4(v11, v10, v13, v12, v14, v22);
    sub_1BC511CE4((uint64_t)&v31, v26, v25, v24, v23);
  }
  else
  {
    sub_1BC4D6F38((uint64_t)&v31);
    sub_1BC4D4168((uint64_t *)v36);
    v38[0] = v11;
    v38[1] = v10;
    v38[2] = v13;
    v38[3] = v12;
    v38[4] = v14;
    v38[5] = v22;
    sub_1BC35EEF4(v11, v10, v13, v12, v14, v22);
    sub_1BC511CE4((uint64_t)v38, v26, v25, v24, v23);
    v17 = v20;
    sub_1BC3B226C(a3, v20);
    sub_1BC4D8638((uint64_t)v36, (uint64_t)&v31);
    sub_1BC511ECC((uint64_t)&v31, v17);
  }
  return sub_1BC4D8694((uint64_t)v36);
}

uint64_t sub_1BC4D4D94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;

  if (qword_1ED6A31F0 != -1)
    swift_once();
  v0 = qword_1ED6A4498;
  type metadata accessor for BrowseIconProvider();
  v1 = (uint64_t *)swift_allocObject();
  swift_retain();
  sub_1BC4D4398(v1 + 2);
  result = sub_1BC4D4398(v1 + 11);
  v1[20] = v0;
  qword_1ED6A4390 = (uint64_t)v1;
  return result;
}

uint64_t *BrowseIconProvider.__allocating_init(accountIconProvider:)(uint64_t a1)
{
  uint64_t *v2;

  v2 = (uint64_t *)swift_allocObject();
  sub_1BC4D4398(v2 + 2);
  sub_1BC4D4398(v2 + 11);
  v2[20] = a1;
  return v2;
}

uint64_t static BrowseIconProvider.shared.getter()
{
  if (qword_1ED6A31A8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t *BrowseIconProvider.init(accountIconProvider:)(uint64_t a1)
{
  uint64_t *v1;

  sub_1BC4D4398(v1 + 2);
  sub_1BC4D4398(v1 + 11);
  v1[20] = a1;
  return v1;
}

uint64_t sub_1BC4D4EDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  _QWORD *v53;
  _QWORD v54[3];
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  id v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;

  v7 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  v11 = a2[1];
  v12 = a2[2];
  v13 = *((unsigned __int8 *)a2 + 24);
  sub_1BC3B226C(a1, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BC356030();
    v15 = (uint64_t *)&v9[*(int *)(v14 + 48)];
    v16 = v13;
    v17 = *v15;
    v18 = v15[1];
    v62 = v10;
    v63 = v11;
    v64 = v12;
    v65 = v16;
    sub_1BC512C94(v17, v18, (uint64_t)&v62, (uint64_t)&v66);
    swift_bridgeObjectRelease();
    v19 = v68;
    v20 = v69;
    v21 = BYTE8(v68) | 0x8000000000000000;
    v22 = v67;
    *(_QWORD *)a3 = v66;
    *(_OWORD *)(a3 + 8) = v22;
    *(_QWORD *)(a3 + 24) = v19;
    *(_QWORD *)(a3 + 32) = v21;
    *(_QWORD *)(a3 + 40) = v20;
    v23 = sub_1BC62A7B4();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v9, v23);
  }
  v52 = v13;
  v53 = (_QWORD *)a3;
  v50 = v10;
  v51 = v11;
  swift_beginAccess();
  v48[1] = v3 + 88;
  v25 = sub_1BC4D530C(v3 + 88, (uint64_t)&v66);
  MEMORY[0x1E0C80A78](v25);
  v48[-2] = a1;
  MEMORY[0x1E0C80A78](v26);
  v48[-4] = sub_1BC4D6EC4;
  v48[-3] = v27;
  v48[-2] = v28;
  sub_1BC4D86E8(0, &qword_1ED6A4288, (unint64_t *)&qword_1ED6A4280, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC62CC8C();
  v29 = sub_1BC4D6EEC((uint64_t)&v66);
  v30 = a1;
  v49 = v12;
  if (!v62)
  {
    sub_1BC4D6F38((uint64_t)&v62);
    v40 = (uint64_t)v9;
    goto LABEL_7;
  }
  v54[0] = v50;
  v54[1] = v51;
  v54[2] = v12;
  v55 = v52;
  MEMORY[0x1E0C80A78](v29);
  v48[-2] = v54;
  MEMORY[0x1E0C80A78](v31);
  v48[-4] = sub_1BC4D6F94;
  v48[-3] = v32;
  v48[-2] = v33;
  sub_1BC4D6F98();
  sub_1BC62CC8C();
  v34 = v56;
  v35 = v57;
  v37 = v58;
  v36 = v59;
  v38 = v60;
  v39 = v61;
  sub_1BC4D6F38((uint64_t)&v62);
  v40 = (uint64_t)v9;
  if (v38 >> 1 == 0xFFFFFFFF)
  {
LABEL_7:
    BrowseCategory.systemImageName.getter();
    v42 = v53;
    if (v43
      && (v44 = objc_msgSend((id)objc_opt_self(), sel_configurationPreferringMulticolor),
          v45 = (void *)sub_1BC62C650(),
          swift_bridgeObjectRelease(),
          v46 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v45, v44),
          v45,
          v44,
          v46))
    {
      v67 = 0u;
      v68 = 0u;
      v66 = v46;
      v69 = 0;
      v62 = v50;
      v63 = v51;
      v64 = v49;
      v65 = v52;
      swift_beginAccess();
      v47 = v46;
      sub_1BC4D4B88((uint64_t)&v66, (uint64_t)&v62, v30);
      swift_endAccess();

      *v42 = v46;
      *(_OWORD *)(v42 + 1) = 0u;
      *(_OWORD *)(v42 + 3) = 0u;
      v42[5] = 0;
    }
    else
    {
      *(_OWORD *)v42 = 0u;
      *((_OWORD *)v42 + 1) = 0u;
      *((_OWORD *)v42 + 2) = xmmword_1BC644770;
    }
    return sub_1BC3B22E8(v40);
  }
  v41 = v53;
  *v53 = v34;
  v41[1] = v35;
  v41[2] = v37;
  v41[3] = v36;
  v41[4] = v38;
  v41[5] = v39;
  return sub_1BC3B22E8(v40);
}

uint64_t sub_1BC4D530C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC4D8860(0, &qword_1ED6A4298, type metadata accessor for UnboundedCache);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC4D5360(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t a1), void (*a4)(_QWORD *), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  void *v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  char *v55;
  void *v56;
  char *v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t (**v73)(uint64_t);
  uint64_t (*v74)(uint64_t);
  void *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  int v82;
  uint64_t v83;
  void (*v84)(_QWORD *);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t);
  uint64_t (*v102)(uint64_t);
  _QWORD *v103;
  _QWORD v104[3];
  char v105;
  void *v106;
  void *v107;
  uint64_t (*v108)(uint64_t);
  uint64_t v109;
  unint64_t v110;
  void *v111;
  _QWORD aBlock[9];
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(uint64_t);
  void *v116;
  uint64_t (*v117)();
  uint64_t v118;
  char v119;

  v100 = a1;
  v9 = sub_1BC62C488();
  v89 = *(_QWORD *)(v9 - 8);
  v90 = v9;
  MEMORY[0x1E0C80A78](v9);
  v88 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_1BC62C47C();
  v94 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v93 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1BC62C4AC();
  v92 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v91 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62A7B4();
  v97 = *(char **)(v13 - 8);
  v98 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for BrowseCategory();
  v85 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v86 = v17;
  v87 = (uint64_t)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v79 - v19;
  v21 = *(_QWORD *)(a2 + 8);
  v99 = *(_QWORD *)a2;
  v102 = *(uint64_t (**)(uint64_t))(a2 + 16);
  v22 = *(unsigned __int8 *)(a2 + 24);
  v23 = (_QWORD *)swift_allocObject();
  v101 = a3;
  v23[2] = a3;
  v23[3] = a4;
  v24 = (uint64_t)v23;
  v84 = a4;
  v25 = v100;
  v23[4] = a5;
  sub_1BC3B226C(v25, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BC356030();
    v26 = v101;
    swift_retain();
    swift_bridgeObjectRelease();
    v28 = (uint64_t)v97;
    v27 = v98;
    (*((void (**)(char *, char *, uint64_t))v97 + 4))(v15, v20, v98);
    v29 = v103[20];
    v113 = v99;
    v114 = v21;
    v115 = v102;
    LOBYTE(v116) = v22;
    swift_retain();
    sub_1BC515434((uint64_t)v15, &v113, v29, (void (*)(uint64_t *))sub_1BC4D6FF0, v24);
    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v27);
  }
  v83 = v24;
  v97 = v20;
  v98 = v21;
  v32 = v102;
  v31 = v103;
  swift_beginAccess();
  v33 = sub_1BC4D530C((uint64_t)(v31 + 2), (uint64_t)&v113);
  MEMORY[0x1E0C80A78](v33);
  *(&v79 - 2) = v25;
  MEMORY[0x1E0C80A78](v34);
  *(&v79 - 4) = (uint64_t)sub_1BC4D8914;
  *(&v79 - 3) = v35;
  *(&v79 - 2) = v36;
  sub_1BC4D86E8(0, &qword_1ED6A4288, (unint64_t *)&qword_1ED6A4280, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v81 = a5;
  swift_retain();
  v80 = v101;
  sub_1BC62CC8C();
  v37 = sub_1BC4D6EEC((uint64_t)&v113);
  v82 = v22;
  if (aBlock[0])
  {
    v38 = v99;
    v104[0] = v99;
    v104[1] = v98;
    v39 = v98;
    v104[2] = v32;
    v105 = v22;
    MEMORY[0x1E0C80A78](v37);
    *(&v79 - 2) = (uint64_t)v104;
    MEMORY[0x1E0C80A78](v40);
    *(&v79 - 4) = (uint64_t)sub_1BC4D6F94;
    *(&v79 - 3) = v41;
    *(&v79 - 2) = v42;
    sub_1BC4D6F98();
    sub_1BC62CC8C();
    v44 = v106;
    v43 = v107;
    v46 = v108;
    v45 = v109;
    v48 = v110;
    v47 = v111;
    sub_1BC4D6F38((uint64_t)aBlock);
    if (v48 >> 1 != 0xFFFFFFFF)
    {
      v113 = (uint64_t)v44;
      v114 = (uint64_t)v43;
      v115 = v46;
      v116 = (void *)v45;
      v117 = (uint64_t (*)())v48;
      v118 = (uint64_t)v47;
      v119 = 0;
      if (v101)
      {
        v49 = v47;
        v50 = swift_allocObject();
        v51 = v81;
        *(_QWORD *)(v50 + 16) = v84;
        *(_QWORD *)(v50 + 24) = v51;
        sub_1BC4D701C((uint64_t)&v113, v50 + 32);
        aBlock[4] = sub_1BC4D7088;
        aBlock[5] = v50;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BC39BE70;
        aBlock[3] = &block_descriptor_13_2;
        v102 = (uint64_t (*)(uint64_t))_Block_copy(aBlock);
        sub_1BC4D708C(v44, v43, (uint64_t)v46, v45, v48, v49);
        swift_retain();
        v52 = v80;
        v53 = v45;
        v79 = v45;
        v54 = v52;
        sub_1BC4D708C(v44, v43, (uint64_t)v46, v53, v48, v49);
        v103 = v44;
        v55 = v91;
        sub_1BC62C494();
        v106 = (void *)MEMORY[0x1E0DEE9D8];
        sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        v101 = v46;
        sub_1BC370738();
        sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
        v56 = v43;
        v57 = v93;
        v58 = v96;
        sub_1BC62D0A0();
        v59 = v102;
        MEMORY[0x1BCCF1F68](0, v55, v57, v102);
        _Block_release(v59);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v58);
        (*(void (**)(char *, uint64_t))(v92 + 8))(v55, v95);
        swift_release();
        v60 = v103;
        v61 = (uint64_t)v101;
        v62 = v79;
        sub_1BC378D5C(v103, v56, (uint64_t)v101, v79, v48, v49);
        swift_release();
        sub_1BC378D5C(v60, v56, v61, v62, v48, v49);
      }
      else
      {
        sub_1BC4D701C((uint64_t)&v113, (uint64_t)aBlock);
        sub_1BC35EEF4(v44, v43, (uint64_t)v46, v45, v48, v47);
        v84(aBlock);
        sub_1BC378D5C(v44, v43, (uint64_t)v46, v45, v48, v47);
        swift_release();
        sub_1BC378D5C(v44, v43, (uint64_t)v46, v45, v48, v47);
      }
      return sub_1BC3B22E8((uint64_t)v97);
    }
  }
  else
  {
    sub_1BC4D6F38((uint64_t)aBlock);
    v39 = v98;
    v38 = v99;
  }
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v64 = v88;
  v63 = v89;
  v65 = v90;
  (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v88, *MEMORY[0x1E0DEF530], v90);
  v66 = (void *)sub_1BC62CCB0();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  v67 = v87;
  sub_1BC3B226C(v25, v87);
  v68 = (*(unsigned __int8 *)(v85 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  v69 = (v68 + v86 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v68 + v86 + 39) & 0xFFFFFFFFFFFFFFF8;
  v71 = swift_allocObject();
  *(_QWORD *)(v71 + 16) = v103;
  sub_1BC35F080(v67, v71 + v68);
  v72 = v71 + v69;
  *(_QWORD *)v72 = v38;
  *(_QWORD *)(v72 + 8) = v39;
  *(_QWORD *)(v72 + 16) = v102;
  *(_BYTE *)(v72 + 24) = v82;
  v73 = (uint64_t (**)(uint64_t))(v71 + v70);
  v74 = (uint64_t (*)(uint64_t))v83;
  *v73 = sub_1BC4D6FF0;
  v73[1] = v74;
  v117 = sub_1BC4D7000;
  v118 = v71;
  v113 = MEMORY[0x1E0C809B0];
  v114 = 1107296256;
  v115 = sub_1BC39BE70;
  v116 = &block_descriptor_41;
  v75 = _Block_copy(&v113);
  swift_retain();
  swift_retain();
  v76 = v91;
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC370738();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
  v77 = v93;
  v78 = v96;
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v76, v77, v75);
  _Block_release(v75);
  swift_release();

  (*(void (**)(char *, uint64_t))(v94 + 8))(v77, v78);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v76, v95);
  swift_release();
  return sub_1BC3B22E8((uint64_t)v97);
}

uint64_t sub_1BC4D5C98(uint64_t a1, void *a2, uint64_t (*a3)(_QWORD *), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v20[2];
  _QWORD aBlock[7];
  _BYTE v22[56];

  v8 = sub_1BC62C47C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62C4AC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4D701C(a1, (uint64_t)v22);
  if (a2)
  {
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a3;
    *(_QWORD *)(v16 + 24) = a4;
    sub_1BC4D701C((uint64_t)v22, v16 + 32);
    aBlock[4] = sub_1BC4D7088;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_117;
    v17 = _Block_copy(aBlock);
    v18 = a2;
    swift_retain();
    sub_1BC4D8600((uint64_t)v22);
    sub_1BC62C494();
    v20[1] = MEMORY[0x1E0DEE9D8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC370738();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v15, v11, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return swift_release();
  }
  else
  {
    sub_1BC4D701C((uint64_t)v22, (uint64_t)aBlock);
    return a3(aBlock);
  }
}

void sub_1BC4D5ECC(uint64_t a1, void (*a2)(_QWORD *))
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];
  char v17;

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 48);
  v10 = *(_QWORD *)a1 & 1;
  v11 = v7 & 1 | 0x8000000000000000;
  if ((v9 & 1) != 0)
  {
    v10 = *(_QWORD *)a1;
    v12 = 0;
  }
  else
  {
    v12 = *(_QWORD *)(a1 + 8);
  }
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
    v13 = 0;
  else
    v13 = *(_QWORD *)(a1 + 16);
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
    v14 = 0;
  else
    v14 = *(_QWORD *)(a1 + 24);
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v11 = 0;
    v15 = 0;
  }
  else
  {
    v15 = *(_QWORD *)(a1 + 40);
  }
  v16[0] = v10;
  v16[1] = v12;
  v16[2] = v13;
  v16[3] = v14;
  v16[4] = v11;
  v16[5] = v15;
  v17 = v9;
  sub_1BC4D8564(v3, v4, v5, v6, v7, v8, v9);
  a2(v16);
  sub_1BC407FDC(v3, v4, v5, v6, v7, v8, v9);
}

void sub_1BC4D5FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void (*a7)(void **))
{
  uint64_t v11;
  double v12;
  BOOL v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD v22[3];
  char v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  char v30;

  if ((a6 & 1) != 0)
  {
    v11 = a5 | a4;
    if (a5 | a4 | a3)
    {
      if (a3 != 1 || v11)
      {
        if (v11)
          v13 = 0;
        else
          v13 = a3 == 2;
        v12 = 80.0;
        if (v13)
          v12 = 60.0;
      }
      else
      {
        v12 = 45.0;
      }
    }
    else
    {
      v12 = 36.0;
    }
  }
  else
  {
    v12 = *(double *)&a3;
  }
  sub_1BC4D6B68((uint64_t)&v24, v12, v12);
  v14 = v24;
  v15 = v25;
  v16 = v26;
  v17 = v27;
  v18 = v28;
  v19 = v29;
  if (v28 >> 1 != 0xFFFFFFFF)
  {
    v22[0] = a3;
    v22[1] = a4;
    v22[2] = a5;
    v23 = a6 & 1;
    swift_beginAccess();
    sub_1BC35EEF4(v14, v15, v16, v17, v18, v19);
    sub_1BC4D4B88((uint64_t)&v24, (uint64_t)v22, a2);
    swift_endAccess();
    sub_1BC378D5C(v14, v15, v16, v17, v18, v19);
  }
  v24 = v14;
  v25 = v15;
  v26 = v16;
  v27 = v17;
  v28 = v18;
  v29 = v19;
  v30 = 0;
  sub_1BC4D708C(v14, v15, v16, v17, v18, v19);
  a7(&v24);
  sub_1BC378D5C(v14, v15, v16, v17, v18, v19);
  sub_1BC378D5C(v14, v15, v16, v17, v18, v19);
}

uint64_t sub_1BC4D617C(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;

  v5 = type metadata accessor for BrowseCategory();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  sub_1BC4D7E0C();
  v9 = v8;
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a2;
  v12 = *((_QWORD *)a2 + 2);
  v13 = *((_BYTE *)a2 + 24);
  sub_1BC3B226C(a1, (uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  sub_1BC35F080((uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  v16 = v15 + ((v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_OWORD *)v16 = v19;
  *(_QWORD *)(v16 + 16) = v12;
  *(_BYTE *)(v16 + 24) = v13;
  sub_1BC4D7E84(0, &qword_1EF4333F0, (uint64_t (*)(uint64_t))sub_1BC4D7EF4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC4D7F58();
  swift_retain();
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF433408, (uint64_t (*)(uint64_t))sub_1BC4D7E0C, MEMORY[0x1E0C96148]);
  v17 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v9);
  return v17;
}

uint64_t sub_1BC4D633C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t *v20;

  v20 = a6;
  v11 = type metadata accessor for BrowseCategory();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = swift_allocObject();
  swift_weakInit();
  sub_1BC3B226C(a1, (uint64_t)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v14;
  sub_1BC35F080((uint64_t)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  v17 = v16 + ((v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v17 = a2;
  *(_QWORD *)(v17 + 8) = a3;
  *(_QWORD *)(v17 + 16) = a4;
  *(_BYTE *)(v17 + 24) = a5 & 1;
  sub_1BC4D7E84(0, &qword_1EF4333F0, (uint64_t (*)(uint64_t))sub_1BC4D7EF4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  result = sub_1BC62BF60();
  *v20 = result;
  return result;
}

uint64_t sub_1BC4D6498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  _QWORD *v15;
  uint64_t Strong;
  uint64_t v17;
  void *v18;
  _QWORD v20[3];
  char v21;

  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v17 = Strong;
    v20[0] = a5;
    v20[1] = a6;
    v20[2] = a7;
    v21 = a8 & 1;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    swift_retain();
    v18 = (void *)sub_1BC62CC74();
    sub_1BC4D7410(a4, (uint64_t)v20, v18, v17, (void (*)(void *, uint64_t))sub_1BC37C738, v15);
    swift_release();

  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

void sub_1BC4D65C0(uint64_t a1, void (*a2)(void *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  NSObject *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  uint8_t *v55;
  int v56;
  NSObject *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62[4];
  uint64_t v63[2];

  v63[1] = *MEMORY[0x1E0C80C00];
  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)a1;
  v9 = *(void **)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v13 = *(void **)(a1 + 40);
  if (*(_BYTE *)(a1 + 48) == 1)
  {
    v15 = *(_QWORD *)(a1 + 16);
    v16 = *(_QWORD *)(a1 + 24);
    v17 = v10;
    a2(v10, 1);
    sub_1BC4D707C(v10, v9, v15, v16, v14, v13, 1);
  }
  else if (v14 >> 1 == 0xFFFFFFFF)
  {
    ((void (*)(_QWORD, _QWORD, uint64_t, uint64_t, __n128))a2)(0, 0, v11, v12, v6);
  }
  else if ((v14 & 0x8000000000000000) != 0)
  {
    if ((v10 & 1) != 0)
    {
      v31 = *(void **)a1;
      v32 = *(void **)(a1 + 8);
      v33 = *(_QWORD *)(a1 + 16);
      v34 = *(_QWORD *)(a1 + 24);
      sub_1BC4D708C(v31, v32, v11, v12, v14, v13);
      a2(v13, 0);
      sub_1BC4D707C(v10, v9, v33, v34, v14, v13, 0);
    }
    else
    {
      v62[0] = 0;
      v22 = v9;
      v61 = v9;
      v23 = v11;
      v24 = v12;
      sub_1BC4D708C(v10, v22, v11, v12, v14, v13);
      v59 = v23;
      v60 = v24;
      sub_1BC4D708C(v10, v61, v23, v24, v14, v13);
      v25 = objc_msgSend(v13, sel_hr_imageWithWhiteBackground_, v62);
      v26 = v62[0];
      if (v25)
      {
        v27 = v25;
        a2(v25, 0);
        v28 = v60;
        v29 = v61;
        v30 = v59;
        sub_1BC4D707C(v10, v61, v59, v60, v14, v13, 0);
        sub_1BC4D707C(v10, v29, v30, v28, v14, v13, 0);

      }
      else
      {
        v35 = v26;
        v36 = (void *)sub_1BC62A55C();

        swift_willThrow();
        sub_1BC62BAF8();
        v37 = v36;
        v58 = v36;
        v38 = v36;
        v39 = sub_1BC62BB28();
        v40 = sub_1BC62CAC4();
        v57 = v39;
        v56 = v40;
        if (os_log_type_enabled(v39, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc();
          v54 = swift_slowAlloc();
          v63[0] = v54;
          v55 = v41;
          *(_DWORD *)v41 = 136446210;
          v53[2] = v41 + 12;
          v53[1] = v41 + 4;
          v62[0] = v58;
          v42 = v58;
          sub_1BC35E44C();
          sub_1BC62D5D4();
          v43 = (id)HKSensitiveLogItem();
          swift_unknownObjectRelease();
          sub_1BC62D088();
          swift_unknownObjectRelease();
          v53[0] = MEMORY[0x1E0DEE9B8] + 8;
          v44 = sub_1BC62C6F8();
          v62[0] = (id)sub_1BC4991F0(v44, v45, v63);
          sub_1BC62CFF8();
          swift_bridgeObjectRelease();
          v46 = v58;

          v47 = v57;
          _os_log_impl(&dword_1BC30A000, v57, (os_log_type_t)v56, "Failed to create image with white background: %{public}s", v55, 0xCu);
          v48 = v54;
          swift_arrayDestroy();
          MEMORY[0x1BCCF36A8](v48, -1, -1);
          MEMORY[0x1BCCF36A8](v55, -1, -1);

        }
        else
        {
          v49 = v58;

        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        v50 = v60;
        v51 = v61;
        v52 = v59;
        sub_1BC4D708C(v10, v61, v59, v60, v14, v13);
        a2(v13, 0);
        sub_1BC4D707C(v10, v51, v52, v50, v14, v13, 0);
        sub_1BC4D707C(v10, v51, v52, v50, v14, v13, 0);
        sub_1BC378D5C(v10, v51, v52, v50, v14, v13);

      }
    }
  }
  else
  {
    v18 = *(void **)a1;
    v19 = *(void **)(a1 + 8);
    v20 = *(_QWORD *)(a1 + 16);
    v21 = *(_QWORD *)(a1 + 24);
    sub_1BC4D8574(v18, v19, v11, v12, v14, v13, 0);
    v61 = v10;
    a2(v10, 0);
    sub_1BC4D707C(v10, v9, v20, v21, v14, v13, 0);

  }
}

void sub_1BC4D6B68(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  __int128 v20;

  BrowseCategory.systemImageName.getter();
  if (v7)
  {
    if (v6 == 0x69662E736C6C6970 && v7 == 0xEA00000000006C6CLL || (sub_1BC62D574() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v8 = objc_msgSend((id)objc_opt_self(), sel_hk_medicationsSymbolImage);
      if (v8)
      {
LABEL_6:
        *(_QWORD *)a1 = v8;
        *(_OWORD *)(a1 + 8) = 0u;
        *(_OWORD *)(a1 + 24) = 0u;
        *(_QWORD *)(a1 + 40) = 0;
        return;
      }
    }
    else
    {
      v9 = objc_msgSend((id)objc_opt_self(), sel_configurationPreferringMulticolor);
      v10 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v10, v9);

      if (v8)
        goto LABEL_6;
    }
  }
  BrowseCategory.coloredImageName.getter();
  if (!v11)
    goto LABEL_13;
  if (qword_1ED6A4918 != -1)
    swift_once();
  v12 = (id)qword_1ED6A5980;
  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v13, v12, 0);

  if (!v14)
  {
LABEL_13:
    sub_1BC5FC724();
    if (v16)
    {
      if (qword_1ED6A4908 != -1)
        swift_once();
      v17 = (id)qword_1ED6A5978;
      v18 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v14 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v18, v17, 0);

      v15 = BrowseCategory.tintColorForTemplateImage.getter();
      if (v14)
        goto LABEL_17;
    }
    else
    {
      v15 = BrowseCategory.tintColorForTemplateImage.getter();
    }

    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    v20 = xmmword_1BC644770;
    goto LABEL_20;
  }
  v15 = 0;
LABEL_17:
  v19 = objc_msgSend(v14, sel_scaledToTargetSize_, a2, a3);

  *(_QWORD *)a1 = v19;
  *(_QWORD *)(a1 + 8) = v15;
  v20 = 0uLL;
  *(_OWORD *)(a1 + 16) = 0u;
LABEL_20:
  *(_OWORD *)(a1 + 32) = v20;
}

uint64_t BrowseIconProvider.deinit()
{
  uint64_t v0;

  sub_1BC4D6EEC(v0 + 16);
  sub_1BC4D6EEC(v0 + 88);
  swift_release();
  return v0;
}

uint64_t BrowseIconProvider.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BC4D6EEC(v0 + 16);
  sub_1BC4D6EEC(v0 + 88);
  swift_release();
  return swift_deallocClassInstance();
}

double sub_1BC4D6EC4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC512590(*a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BC4D6ED0()
{
  uint64_t v0;

  return sub_1BC4D3834(*(void (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BC4D6EEC(uint64_t a1)
{
  uint64_t v2;

  sub_1BC4D8860(0, &qword_1ED6A4298, type metadata accessor for UnboundedCache);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC4D6F38(uint64_t a1)
{
  uint64_t v2;

  sub_1BC4D86E8(0, &qword_1ED6A4288, (unint64_t *)&qword_1ED6A4280, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC4D6F98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4158)
  {
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4158);
  }
}

uint64_t sub_1BC4D6FF0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC4D5C98(a1, *(void **)(v1 + 16), *(uint64_t (**)(_QWORD *))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t sub_1BC4D701C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC4D7E84(0, &qword_1ED6A4828, (uint64_t (*)(uint64_t))sub_1BC4D6F98, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0DEE030]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC4D707C(id a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char a7)
{
  if ((a7 & 1) != 0)

  else
    sub_1BC378D5C(a1, a2, a3, a4, a5, a6);
}

void *sub_1BC4D708C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if ((unint64_t)a5 >> 1 != 0xFFFFFFFF)
    return sub_1BC35EEF4(a1, a2, a3, a4, a5, a6);
  return a1;
}

void sub_1BC4D70A0(uint64_t a1, void *a2, void (*a3)(_QWORD *), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  char *v32;
  const void *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[7];
  _QWORD v46[6];
  char v47;

  v43 = a4;
  v41 = sub_1BC62C47C();
  v7 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v42 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62C4AC();
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)a1;
  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 32);
  v19 = *(void **)(a1 + 40);
  v20 = *(_BYTE *)(a1 + 48);
  v21 = v14 & 1;
  v22 = v18 & 1 | 0x8000000000000000;
  if ((v20 & 1) != 0)
  {
    v21 = (unint64_t)v14;
    v23 = 0;
  }
  else
  {
    v23 = v15;
  }
  v24 = v16;
  if ((v20 & 1) != 0)
  {
    v16 = 0;
    v25 = 0;
  }
  else
  {
    v25 = v17;
  }
  if ((v20 & 1) != 0)
  {
    v22 = 0;
    v26 = 0;
  }
  else
  {
    v26 = v19;
  }
  v46[0] = v21;
  v46[1] = v23;
  v46[2] = v16;
  v46[3] = v25;
  v46[4] = v22;
  v46[5] = v26;
  v47 = v20;
  if (a2)
  {
    v40 = v10;
    v34 = v13;
    v39 = v11;
    v27 = swift_allocObject();
    v38 = v7;
    v28 = v27;
    *(_QWORD *)(v27 + 16) = a3;
    *(_QWORD *)(v27 + 24) = v43;
    sub_1BC4D701C((uint64_t)v46, v27 + 32);
    aBlock[4] = sub_1BC4D7088;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_110;
    v36 = _Block_copy(aBlock);
    v37 = v24;
    sub_1BC4D8564(v14, v15, v24, v17, v18, v19, v20);
    sub_1BC4D8564(v14, v15, v24, v17, v18, v19, v20);
    v29 = a2;
    swift_retain();
    v43 = v17;
    v30 = v34;
    sub_1BC62C494();
    v44 = MEMORY[0x1E0DEE9D8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    v31 = v41;
    v35 = v15;
    sub_1BC370738();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
    v32 = v42;
    sub_1BC62D0A0();
    v33 = v36;
    MEMORY[0x1BCCF1F68](0, v30, v32, v36);
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v31);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v40);
    swift_release();
    sub_1BC407FDC(v14, v35, v37, v43, v18, v19, v20);

  }
  else
  {
    sub_1BC4D701C((uint64_t)v46, (uint64_t)aBlock);
    sub_1BC4D8564(v14, v15, v24, v17, v18, v19, v20);
    a3(aBlock);
    sub_1BC407FDC(v14, v15, v24, v17, v18, v19, v20);
  }
}

uint64_t sub_1BC4D7410(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void *, uint64_t), void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  int v23;
  uint64_t (*v24)(uint64_t);
  void *v25;
  uint64_t v26;
  id v27;
  char *v28;
  id v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  id v56;
  id v57;
  char *v58;
  char *v59;
  void *v60;
  uint64_t v61;
  const void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t (**v80)(uint64_t);
  uint64_t (*v81)(uint64_t);
  void *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v87;
  void *v88;
  id v89;
  void (*v90)(void *, uint64_t);
  uint64_t (*v91)(uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[3];
  char v113;
  void *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  void *v119;
  _QWORD aBlock[9];
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t);
  void *v124;
  uint64_t (*v125)();
  uint64_t v126;
  char v127;

  v110 = a1;
  v111 = a4;
  v10 = sub_1BC62C488();
  v96 = *(_QWORD *)(v10 - 8);
  v97 = v10;
  MEMORY[0x1E0C80A78](v10);
  v95 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1BC62C47C();
  v101 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v100 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_1BC62C4AC();
  v99 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v98 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1BC62A7B4();
  v108 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v105 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for BrowseCategory();
  v92 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v93 = v16;
  v94 = (uint64_t)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v87 - v18;
  v20 = swift_allocObject();
  v90 = a5;
  *(_QWORD *)(v20 + 16) = a5;
  *(_QWORD *)(v20 + 24) = a6;
  v109 = a6;
  v21 = *(_QWORD *)a2;
  v107 = *(_QWORD *)(a2 + 8);
  v22 = *(uint64_t (**)(uint64_t))(a2 + 16);
  v23 = *(unsigned __int8 *)(a2 + 24);
  v24 = (uint64_t (*)(uint64_t))swift_allocObject();
  v25 = a3;
  *((_QWORD *)v24 + 2) = a3;
  *((_QWORD *)v24 + 3) = sub_1BC4D83E4;
  v26 = v110;
  *((_QWORD *)v24 + 4) = v20;
  sub_1BC3B226C(v26, (uint64_t)v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BC356030();
    v104 = v25;
    v27 = v25;
    v28 = v19;
    v29 = v27;
    swift_retain_n();
    v30 = v29;
    swift_retain();
    swift_bridgeObjectRelease();
    v31 = (uint64_t)v105;
    v32 = v28;
    v33 = v106;
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v105, v32, v106);
    v34 = *(_QWORD *)(v111 + 160);
    v121 = v21;
    v122 = v107;
    v123 = v22;
    LOBYTE(v124) = v23;
    swift_retain();
    v35 = v30;
    swift_retain();
    sub_1BC515000(v31, &v121, v34, v104, (void (*)(_QWORD *))sub_1BC4D83E4, v20);
    swift_release_n();

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v31, v33);
    return swift_release();
  }
  v105 = v19;
  v106 = (uint64_t)v22;
  v91 = v24;
  LODWORD(v108) = v23;
  v36 = v111 + 16;
  swift_beginAccess();
  v37 = sub_1BC4D530C(v36, (uint64_t)&v121);
  MEMORY[0x1E0C80A78](v37);
  *(&v87 - 2) = v26;
  MEMORY[0x1E0C80A78](v38);
  *(&v87 - 4) = (uint64_t)sub_1BC4D8914;
  *(&v87 - 3) = v39;
  *(&v87 - 2) = v40;
  sub_1BC4D86E8(0, &qword_1ED6A4288, (unint64_t *)&qword_1ED6A4280, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v41 = v25;
  swift_retain_n();
  v89 = v41;
  swift_retain();
  sub_1BC62CC8C();
  v42 = sub_1BC4D6EEC((uint64_t)&v121);
  if (!aBlock[0])
  {
    sub_1BC4D6F38((uint64_t)aBlock);
    v44 = v107;
    v43 = v21;
    goto LABEL_8;
  }
  v104 = v25;
  v43 = v21;
  v44 = v107;
  v112[0] = v21;
  v112[1] = v107;
  v112[2] = v106;
  v113 = v108;
  MEMORY[0x1E0C80A78](v42);
  *(&v87 - 2) = (uint64_t)v112;
  MEMORY[0x1E0C80A78](v45);
  *(&v87 - 4) = (uint64_t)sub_1BC4D6F94;
  *(&v87 - 3) = v46;
  *(&v87 - 2) = v47;
  sub_1BC4D6F98();
  sub_1BC62CC8C();
  v48 = v114;
  v49 = v115;
  v51 = v116;
  v50 = v117;
  v52 = v118;
  v53 = v119;
  sub_1BC4D6F38((uint64_t)aBlock);
  if (v52 >> 1 == 0xFFFFFFFF)
  {
LABEL_8:
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
    v71 = v95;
    v70 = v96;
    v72 = v97;
    (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v95, *MEMORY[0x1E0DEF530], v97);
    v73 = (void *)sub_1BC62CCB0();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    v74 = v94;
    sub_1BC3B226C(v110, v94);
    v75 = (*(unsigned __int8 *)(v92 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    v110 = v20;
    v76 = (v75 + v93 + 7) & 0xFFFFFFFFFFFFFFF8;
    v77 = (v75 + v93 + 39) & 0xFFFFFFFFFFFFFFF8;
    v78 = swift_allocObject();
    *(_QWORD *)(v78 + 16) = v111;
    sub_1BC35F080(v74, v78 + v75);
    v79 = v78 + v76;
    *(_QWORD *)v79 = v43;
    *(_QWORD *)(v79 + 8) = v44;
    *(_QWORD *)(v79 + 16) = v106;
    *(_BYTE *)(v79 + 24) = v108;
    v80 = (uint64_t (**)(uint64_t))(v78 + v77);
    v81 = v91;
    *v80 = sub_1BC4D8910;
    v80[1] = v81;
    v125 = sub_1BC4D7000;
    v126 = v78;
    v121 = MEMORY[0x1E0C809B0];
    v122 = 1107296256;
    v123 = sub_1BC39BE70;
    v124 = &block_descriptor_94;
    v82 = _Block_copy(&v121);
    swift_retain();
    swift_retain();
    v83 = v98;
    sub_1BC62C494();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC370738();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
    v84 = v100;
    v85 = v103;
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v83, v84, v82);
    _Block_release(v82);
    swift_release();

    swift_release();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v84, v85);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v83, v102);
    swift_release();
    sub_1BC3B22E8((uint64_t)v105);
    return swift_release();
  }
  v121 = (uint64_t)v48;
  v122 = (uint64_t)v49;
  v123 = (uint64_t (*)(uint64_t))v51;
  v124 = (void *)v50;
  v125 = (uint64_t (*)())v52;
  v126 = (uint64_t)v53;
  v127 = 0;
  if (v104)
  {
    v54 = v48;
    v55 = swift_allocObject();
    *(_QWORD *)(v55 + 16) = sub_1BC4D83E4;
    *(_QWORD *)(v55 + 24) = v20;
    sub_1BC4D701C((uint64_t)&v121, v55 + 32);
    aBlock[4] = sub_1BC4D7088;
    aBlock[5] = v55;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_103_0;
    v109 = _Block_copy(aBlock);
    v88 = v54;
    sub_1BC4D708C(v54, v49, v51, v50, v52, v53);
    swift_retain();
    v56 = v89;
    v110 = v20;
    v57 = v56;
    sub_1BC4D708C(v54, v49, v51, v50, v52, v53);
    v111 = v51;
    v58 = v98;
    sub_1BC62C494();
    v114 = (void *)MEMORY[0x1E0DEE9D8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    v108 = v50;
    sub_1BC370738();
    sub_1BC347F0C((unint64_t *)&qword_1ED6A58A0, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
    v59 = v100;
    v60 = v49;
    v61 = v103;
    sub_1BC62D0A0();
    v62 = v109;
    MEMORY[0x1BCCF1F68](0, v58, v59, v109);
    _Block_release(v62);

    (*(void (**)(char *, uint64_t))(v101 + 8))(v59, v61);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v58, v102);
    swift_release();
    v63 = v88;
    v64 = v111;
    v65 = v108;
    sub_1BC378D5C(v88, v60, v111, v108, v52, v53);
    swift_release();

    swift_release();
    v66 = v63;
    v67 = v60;
    v68 = v64;
    v69 = v65;
  }
  else
  {
    sub_1BC4D701C((uint64_t)&v121, (uint64_t)aBlock);
    sub_1BC35EEF4(v48, v49, v51, v50, v52, v53);
    sub_1BC4D65C0((uint64_t)aBlock, v90);
    sub_1BC378D5C(v48, v49, v51, v50, v52, v53);
    swift_release();
    swift_release();
    v66 = v48;
    v67 = v49;
    v68 = v51;
    v69 = v50;
  }
  sub_1BC378D5C(v66, v67, v68, v69, v52, v53);
  sub_1BC3B22E8((uint64_t)v105);
  return swift_release();
}

void sub_1BC4D7E0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4333E8)
  {
    sub_1BC4D7E84(255, &qword_1EF4333F0, (uint64_t (*)(uint64_t))sub_1BC4D7EF4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC4D7F58();
    v0 = sub_1BC62BF84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4333E8);
  }
}

void sub_1BC4D7E84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = sub_1BC35E44C();
    v9 = a4(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC4D7EF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4333F8)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A47F8);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4333F8);
  }
}

unint64_t sub_1BC4D7F58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433400;
  if (!qword_1EF433400)
  {
    sub_1BC4D7E84(255, &qword_1EF4333F0, (uint64_t (*)(uint64_t))sub_1BC4D7EF4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433400);
  }
  return result;
}

uint64_t sub_1BC4D7FBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for BrowseCategory() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1BC4D633C(v1 + v4, *(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_BYTE *)(v5 + 24), a1);
}

uint64_t type metadata accessor for BrowseIconProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for BrowseIconProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BrowseIconProvider.__allocating_init(accountIconProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of BrowseIconProvider.placeholder(for:size:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of BrowseIconProvider.fetchIcon(for:size:queue:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of BrowseIconProvider.makeIconPublisher(for:size:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

void sub_1BC4D8074(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF433410)
  {
    sub_1BC4D8750(255, &qword_1EF433418, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))MEMORY[0x1E0DEA048]);
    v5 = type metadata accessor for Box(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF433410);
  }
}

uint64_t sub_1BC4D80E0()
{
  return sub_1BC4D47B8();
}

uint64_t sub_1BC4D80E8()
{
  uint64_t v0;

  return sub_1BC511734(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1BC4D8104(uint64_t a1)
{
  sub_1BC357158(a1, &qword_1ED6A58B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BC4D8120()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A47E0)
  {
    sub_1BC35EAA4(255, (unint64_t *)&qword_1ED6A4278, (unint64_t *)&qword_1ED6A47F8, 0x1E0DC3870, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
    v0 = sub_1BC62C59C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A47E0);
  }
}

void sub_1BC4D81A4(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    sub_1BC35EAA4(255, a3, a4, a5, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t))MEMORY[0x1E0DEA048]);
    v10 = type metadata accessor for Box(a1, v7, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_1BC4D8208()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6A47C8)
  {
    sub_1BC62A7B4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC4D8750(255, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
    sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v0, MEMORY[0x1E0CB09C8]);
    v1 = sub_1BC62C59C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6A47C8);
  }
}

uint64_t sub_1BC4D82B4()
{
  return sub_1BC4D4988();
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BrowseCategory() - 8) + 80);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1BC62A7B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0 + ((v1 + 24) & ~v1), v2);
    sub_1BC356030();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BC4D8374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for BrowseCategory() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1BC4D6498(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_BYTE *)(v7 + 24));
}

void sub_1BC4D83E4(uint64_t a1)
{
  uint64_t v1;

  sub_1BC4D65C0(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t objectdestroyTm_7()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_4Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for BrowseCategory() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = sub_1BC62A7B4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
    sub_1BC356030();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1BC4D84E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for BrowseCategory() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  sub_1BC4D5FA4(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(_BYTE *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 24), *(void (**)(void **))(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8)));
}

double sub_1BC4D8548@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC512620(*a1, **(_QWORD **)(v2 + 16), *(_QWORD *)(*(_QWORD *)(v2 + 16) + 8), *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16), *(_BYTE *)(*(_QWORD *)(v2 + 16) + 24), a2);
}

id sub_1BC4D8564(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char a7)
{
  if ((a7 & 1) != 0)
    return a1;
  else
    return a6;
}

id sub_1BC4D8574(id a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char a7)
{
  if ((a7 & 1) != 0)
    return a1;
  else
    return sub_1BC4D708C(a1, a2, a3, a4, a5, a6);
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;

  swift_release();
  sub_1BC4D707C(*(id *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(_BYTE *)(v0 + 80));
  return swift_deallocObject();
}

uint64_t sub_1BC4D85BC()
{
  uint64_t v0;
  uint64_t (*v1)(_BYTE *);
  _BYTE v3[56];

  v1 = *(uint64_t (**)(_BYTE *))(v0 + 16);
  sub_1BC4D701C(v0 + 32, (uint64_t)v3);
  return v1(v3);
}

uint64_t sub_1BC4D8600(uint64_t a1)
{
  sub_1BC4D8574(*(id *)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(void **)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

uint64_t sub_1BC4D8638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC4D8750(0, (unint64_t *)&qword_1ED6A4280, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC4D8694(uint64_t a1)
{
  uint64_t v2;

  sub_1BC4D8750(0, (unint64_t *)&qword_1ED6A4280, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC4D86E8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, ValueMetadata *, uint64_t, unint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC4D8750(255, a3, (uint64_t)&type metadata for BrowseIcon, a4);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC4D8750(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, ValueMetadata *, uint64_t, unint64_t))
{
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC35EA60();
    v9 = a4(a1, &type metadata for AccountIcon.Size, a3, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC4D87B4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC4D87D8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC4D87FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED6A47B8)
  {
    sub_1BC4D8860(255, &qword_1ED6A47D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
    v5 = type metadata accessor for Box(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED6A47B8);
  }
}

void sub_1BC4D8860(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v6 = type metadata accessor for BrowseCategory();
    sub_1BC4D8750(255, (unint64_t *)&qword_1ED6A4280, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
    v8 = v7;
    v9 = sub_1BC347F0C(&qword_1ED6A5438, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t)&protocol conformance descriptor for BrowseCategory);
    v10 = a3(a1, v6, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_1BC4D899C()
{
  return sub_1BC4D6ED0();
}

uint64_t type metadata accessor for HighlightsDataSource()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for VerticalHighlightsDataSource()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for HorizontalHighlightsDataSource()
{
  uint64_t result;

  result = qword_1EF433570;
  if (!qword_1EF433570)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC4D8A34()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC4D8A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v9;

  v1 = sub_1BC62AE74();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62AE68();
  v5 = sub_1BC62AE50();
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    v6 = (void *)v5;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v7 = objc_msgSend((id)objc_opt_self(), sel_estimatedDimension_, 100.0);
    v1 = sub_1BC62CD58();

  }
  return v1;
}

uint64_t sub_1BC4D8B6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t result;

  v2 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BC62AD3C();
  if (qword_1ED6A4888 != -1)
    swift_once();
  v4 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62BD44();
  v5 = sub_1BC62AD30();
  a1[3] = v3;
  result = sub_1BC347F0C((unint64_t *)&qword_1ED6A4108, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8], MEMORY[0x1E0D2A8A0]);
  a1[4] = result;
  *a1 = v5;
  return result;
}

void sub_1BC4D8CD8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC4D8D04()
{
  sub_1BC4D8D34();
}

void sub_1BC4D8D1C()
{
  sub_1BC4D8D34();
}

void sub_1BC4D8D34()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC4D8D5C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HorizontalHighlightsDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC4D8D90()
{
  return type metadata accessor for HorizontalHighlightsDataSource();
}

uint64_t sub_1BC4D8D98@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC4D8B6C(a1);
}

id sub_1BC4D8DAC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a5;
  v42 = a4;
  v37 = a3;
  v41 = a1;
  sub_1BC357158(0, &qword_1EF42D368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36 - v7;
  v40 = *a2;
  v39 = *((_QWORD *)a2 + 1);
  sub_1BC62AC10();
  v9 = (void *)MEMORY[0x1BCCEFEBC]();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC639580;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC6395A0;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1BC3644C0();
  strcpy((char *)(v12 + 32), "pluginPackage");
  *(_WORD *)(v12 + 46) = -4864;
  *(_QWORD *)(v12 + 96) = v13;
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 72) = 0xD000000000000025;
  *(_QWORD *)(v12 + 80) = 0x80000001BC654E10;
  *(_QWORD *)(v10 + 32) = sub_1BC62CA64();
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], v11);
  v15 = sub_1BC62AA78();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  v38 = xmmword_1BC639590;
  *(_OWORD *)(v18 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E0D2D5A0], v15);
  v19 = sub_1BC62AB2C();
  v21 = v20;
  v22 = sub_1BC62A31C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 1, 1, v22);
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v38;
  *(_QWORD *)(v23 + 32) = sub_1BC62AA90();
  v24 = MEMORY[0x1BCCEFEA4](v18, v19, v21, v8, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3E23B8((uint64_t)v8);
  *(_QWORD *)(v10 + 40) = v24;
  if (v39)
    v25 = v40;
  else
    v25 = 11;
  LOBYTE(v44) = v25;
  *(_QWORD *)(v10 + 48) = _s14HealthPlatform8FeedItemC0A9RecordsUIE028predicateForConceptHighlightC5Items4uuid12categoryKind13sourceProfileSo11NSPredicateC10Foundation4UUIDVSg_AD15DisplayCategoryV0N0OSgAA06SourceP0OtFZ_0(v41, (unsigned __int8 *)&v44);
  v44 = v10;
  sub_1BC62C890();
  v26 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v26);

  objc_msgSend(v9, sel_setPredicate_, v27);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BC6396B0;
  v29 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v30 = (void *)sub_1BC62C650();
  v31 = objc_msgSend(v29, sel_initWithKey_ascending_selector_, v30, 1, sel_localizedStandardCompare_);

  *(_QWORD *)(v28 + 32) = v31;
  v44 = v28;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v32 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setSortDescriptors_, v32);

  if ((v42 & 1) == 0)
    objc_msgSend(v9, sel_setFetchLimit_, v37);
  v33 = objc_allocWithZone(MEMORY[0x1E0C97B68]);
  v34 = objc_msgSend(v33, sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v9, v43, 0, 0);

  return v34;
}

uint64_t sub_1BC4D9274(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;

  v2 = sub_1BC62B12C();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC379AA4();
  v3 = qword_1ED6A4888;
  v4 = a1;
  if (v3 != -1)
    swift_once();
  v5 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62B0FC();
  v6 = sub_1BC62AF34();
  sub_1BC347F0C(&qword_1EF42EE08, (uint64_t (*)(uint64_t))sub_1BC379AA4, MEMORY[0x1E0D2ACB0]);
  sub_1BC347F0C((unint64_t *)&qword_1EF42A240, (uint64_t (*)(uint64_t))sub_1BC379AA4, MEMORY[0x1E0D2B7F8]);
  return v6;
}

uint64_t sub_1BC4D9408(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _OWORD v23[4];
  uint64_t v24;

  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  v23[0] = *(_OWORD *)a2;
  v23[1] = v6;
  v7 = *(_OWORD *)(a2 + 48);
  v23[2] = *(_OWORD *)(a2 + 32);
  v23[3] = v7;
  v24 = v5;
  v8 = sub_1BC4D8DAC(a1, (unsigned __int8 *)v23, a3, a4 & 1, a5);
  v9 = sub_1BC4D9274(v8);
  v11 = v10;
  v13 = v12;
  v14 = objc_allocWithZone((Class)type metadata accessor for HorizontalHighlightsDataSource());
  v15 = v8;
  v16 = (void *)sub_1BC62B6F0();
  sub_1BC357158(0, &qword_1EF42BA78, (uint64_t (*)(uint64_t))sub_1BC3A4194, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(inited + 32) = 2;
  v18 = sub_1BC347F0C(&qword_1EF4335C0, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalHighlightsDataSource, MEMORY[0x1E0D2B810]);
  v19 = sub_1BC347F0C(&qword_1EF4335C8, (uint64_t (*)(uint64_t))type metadata accessor for HorizontalHighlightsDataSource, MEMORY[0x1E0D2B7F8]);
  *(_QWORD *)(inited + 40) = v16;
  *(_QWORD *)(inited + 48) = v18;
  *(_QWORD *)(inited + 56) = v19;
  *(_QWORD *)(inited + 64) = 1;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = v11;
  *(_QWORD *)(inited + 88) = v13;
  sub_1BC35DCCC(inited);
  swift_setDeallocating();
  sub_1BC3A4194();
  v20 = v16;
  swift_unknownObjectRetain();
  swift_arrayDestroy();
  sub_1BC62B5C4();
  swift_allocObject();
  swift_unknownObjectRetain();
  v21 = sub_1BC62B5B8();
  swift_unknownObjectRelease();

  return v21;
}

uint64_t sub_1BC4D95DC()
{
  uint64_t result;

  result = sub_1BC62C650();
  qword_1EF4335D0 = result;
  return result;
}

id static NSNotificationName.ClinicalAccountOnboardingCompletionNotification.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428660, (id *)&qword_1EF4335D0);
}

id sub_1BC4D962C(uint64_t a1)
{
  return sub_1BC4D9B38(a1, &qword_1EF428660, (void **)&qword_1EF4335D0, &qword_1EF4335D8);
}

id static NSNotification.ClinicalAccountOnboardingCompletionNotification.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428668, &qword_1EF4335D8);
}

id sub_1BC4D966C(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1EF428668, &qword_1EF4335D8);
}

unint64_t static ClinicalAccountOnboardingCompletionNotificationUserInfoKeys.account.getter()
{
  return 0xD000000000000041;
}

unint64_t static ClinicalAccountOnboardingCompletionNotificationUserInfoKeys.error.getter()
{
  return 0xD00000000000003FLL;
}

id ClinicalAccountOnboardingCompletionNotificationUserInfoKeys.init()()
{
  return sub_1BC4D9864(type metadata accessor for ClinicalAccountOnboardingCompletionNotificationUserInfoKeys);
}

uint64_t type metadata accessor for ClinicalAccountOnboardingCompletionNotificationUserInfoKeys()
{
  return objc_opt_self();
}

id ClinicalAccountOnboardingCompletionNotificationUserInfoKeys.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for ClinicalAccountOnboardingCompletionNotificationUserInfoKeys);
}

unint64_t static OAuthCompletionNotificationUserInfoKeys.account.getter()
{
  return 0xD00000000000002DLL;
}

unint64_t static OAuthCompletionNotificationUserInfoKeys.state.getter()
{
  return 0xD00000000000002BLL;
}

unint64_t static OAuthCompletionNotificationUserInfoKeys.error.getter()
{
  return 0xD00000000000002BLL;
}

id OAuthCompletionNotificationUserInfoKeys.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id OAuthCompletionNotificationUserInfoKeys.init()()
{
  return sub_1BC4D9864(type metadata accessor for OAuthCompletionNotificationUserInfoKeys);
}

id sub_1BC4D9864(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for OAuthCompletionNotificationUserInfoKeys()
{
  return objc_opt_self();
}

id sub_1BC4D98C0(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return objc_msgSendSuper2(&v4, sel_init);
}

id OAuthCompletionNotificationUserInfoKeys.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for OAuthCompletionNotificationUserInfoKeys);
}

uint64_t sub_1BC4D990C()
{
  uint64_t result;

  result = sub_1BC62C650();
  qword_1EF4335E0 = result;
  return result;
}

id static NSNotificationName.OAuthCompletionNotification.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428670, (id *)&qword_1EF4335E0);
}

id sub_1BC4D995C(uint64_t a1)
{
  return sub_1BC4D9B38(a1, &qword_1EF428670, (void **)&qword_1EF4335E0, &qword_1EF4335E8);
}

id static NSNotification.OAuthCompletionNotification.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428678, &qword_1EF4335E8);
}

id sub_1BC4D999C(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1EF428678, &qword_1EF4335E8);
}

uint64_t sub_1BC4D99B8()
{
  uint64_t result;

  result = sub_1BC62C650();
  qword_1ED6A3F40 = result;
  return result;
}

id static NSNotificationName.accountStatusSummaryTileDidDismiss.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A3780, (id *)&qword_1ED6A3F40);
}

uint64_t sub_1BC4D9A08()
{
  uint64_t result;

  result = sub_1BC62C650();
  qword_1ED6A3F48 = result;
  return result;
}

id static NSNotificationName.accountStatusSummaryTileShouldReset.getter()
{
  return sub_1BC4CB5EC(&qword_1ED6A3F58, (id *)&qword_1ED6A3F48);
}

uint64_t sub_1BC4D9A58()
{
  uint64_t result;

  result = sub_1BC62C650();
  qword_1EF4335F0 = result;
  return result;
}

id static NSNotificationName.accountStatusRedetermineUpgradableAccounts.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428680, (id *)&qword_1EF4335F0);
}

uint64_t static AccountStatusSummaryTileNotificationKey.accountID.getter()
{
  return 0x49746E756F636361;
}

uint64_t sub_1BC4D9AC4()
{
  uint64_t result;

  result = sub_1BC62C650();
  qword_1EF4335F8 = result;
  return result;
}

id static NSNotificationName.WDMedicalRecordTimelineShouldReloadNotification.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428688, (id *)&qword_1EF4335F8);
}

id sub_1BC4D9B14(uint64_t a1)
{
  return sub_1BC4D9B38(a1, &qword_1EF428688, (void **)&qword_1EF4335F8, (void **)&qword_1EF433600);
}

id sub_1BC4D9B38(uint64_t a1, _QWORD *a2, void **a3, void **a4)
{
  void *v6;

  if (*a2 != -1)
    swift_once();
  v6 = *a3;
  *a4 = *a3;
  return v6;
}

id static NSNotification.WDMedicalRecordTimelineShouldReloadNotification.getter()
{
  return sub_1BC4CB5EC(&qword_1EF428690, (id *)&qword_1EF433600);
}

ValueMetadata *type metadata accessor for AccountStatusSummaryTileNotificationKey()
{
  return &type metadata for AccountStatusSummaryTileNotificationKey;
}

id sub_1BC4D9BA8(uint64_t a1, uint64_t a2)
{
  return sub_1BC4CB640(a1, a2, &qword_1EF428690, (id *)&qword_1EF433600);
}

id sub_1BC4D9BC8()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v7[0] = 0;
  v1 = objc_msgSend(v0, sel_countOfConceptsAssociatedToUserRecordsWithError_, v7);
  v2 = v7[0];
  if (v1)
  {
    v3 = v1;
    v4 = v7[0];
    v2 = objc_msgSend(v3, sel_integerValue);

  }
  else
  {
    v5 = v7[0];
    sub_1BC62A55C();

    swift_willThrow();
  }
  return v2;
}

BOOL URL.isCategoryRoomURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int16 v27;
  unsigned __int8 *v28;
  char v29;
  char v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = sub_1BC62A604();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62A5EC();
  if (!v7)
    return 0;
  v8 = v6;
  v9 = v7;
  v10 = sub_1BC62A5D4();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v12 = v10;
  v13 = v11;
  v33 = v8;
  v34 = v9;
  strcpy((char *)v32, "x-apple-health");
  HIBYTE(v32[1]) = -18;
  v14 = sub_1BC36E2AC();
  v15 = sub_1BC62D040();
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  v33 = v12;
  v34 = v13;
  v32[0] = 0xD00000000000001DLL;
  v32[1] = 0x80000001BC65E8F0;
  v16 = sub_1BC62D040();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  if (v16)
    goto LABEL_7;
  v33 = sub_1BC62A5E0();
  v34 = v18;
  v19 = MEMORY[0x1BCCF2340](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x1E0DEA968], v14);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v21 = (unint64_t *)(v19 + 32 * v20);
    v22 = *v21;
    v23 = v21[1];
    v25 = v21[2];
    v24 = v21[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((v23 ^ v22) >= 0x4000)
    {
      v26 = sub_1BC4DA744(v22, v23, v25, v24, 10);
      if ((v27 & 0x100) != 0)
      {
        swift_bridgeObjectRetain();
        v28 = sub_1BC4DA3D8(v22, v23, v25, v24, 10);
        v30 = v29;
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0)
          goto LABEL_16;
      }
      else if ((v27 & 1) == 0)
      {
        v28 = (unsigned __int8 *)v26;
LABEL_16:
        DisplayCategory.Kind.init(rawValue:)((Swift::Int)v28);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRelease();
  LOBYTE(v33) = 11;
LABEL_18:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v33 != 11;
}

uint64_t URL.chrDisplayCategoryKind.getter@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int16 v11;
  unsigned __int8 *v12;
  char v13;
  char v14;
  uint64_t result;

  sub_1BC62A5E0();
  v2 = sub_1BC36E2AC();
  v3 = MEMORY[0x1BCCF2340](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x1E0DEA968], v2);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (unint64_t *)(v3 + 32 * v4);
    v6 = *v5;
    v7 = v5[1];
    v9 = v5[2];
    v8 = v5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((v7 ^ v6) >= 0x4000)
    {
      v10 = sub_1BC4DA744(v6, v7, v9, v8, 10);
      if ((v11 & 0x100) != 0)
      {
        swift_bridgeObjectRetain();
        v12 = sub_1BC4DA3D8(v6, v7, v9, v8, 10);
        v14 = v13;
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
          goto LABEL_8;
      }
      else if ((v11 & 1) == 0)
      {
        v12 = (unsigned __int8 *)v10;
LABEL_8:
        DisplayCategory.Kind.init(rawValue:)((Swift::Int)v12);
        return swift_bridgeObjectRelease();
      }
    }
  }
  result = swift_bridgeObjectRelease();
  *a1 = 11;
  return result;
}

BOOL URL.isViewHealthRecordURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1BC62A604();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62A5EC();
  if (!v7)
    return 0;
  v8 = v6;
  v9 = v7;
  v10 = sub_1BC62A5D4();
  if (v11)
  {
    v12 = v10;
    v13 = v11;
    v20 = v8;
    v21 = v9;
    strcpy((char *)v19, "x-apple-health");
    HIBYTE(v19[1]) = -18;
    sub_1BC36E2AC();
    v14 = sub_1BC62D040();
    swift_bridgeObjectRelease();
    if (v14)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
      v15 = 0;
    }
    else
    {
      v20 = v12;
      v21 = v13;
      v19[0] = 0xD000000000000010;
      v19[1] = 0x80000001BC65E910;
      v16 = sub_1BC62D040();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
      if (v16)
      {
        v15 = 0;
      }
      else
      {
        v17 = *(_QWORD *)(sub_1BC62A580() + 16);
        swift_bridgeObjectRelease();
        v15 = v17 == 2;
      }
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v15;
}

uint64_t URL.medicalRecordID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3;

  if (URL.isViewHealthRecordURL.getter())
  {
    sub_1BC62A58C();
    sub_1BC62A76C();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v3 = sub_1BC62A7B4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 1, 1, v3);
  }
}

uint64_t static URL.categoryRoomURL(for:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[4];

  sub_1BC4DA814();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v11[2] = 0xD00000000000002FLL;
  v11[3] = 0x80000001BC65E930;
  v11[1] = v7;
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62A5F8();
  swift_bridgeObjectRelease();
  v8 = sub_1BC62A604();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
  __break(1u);
  return result;
}

unsigned __int8 *sub_1BC4DA3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_1BC4DA868();
  swift_bridgeObjectRetain();
  v7 = sub_1BC62C7C4();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_1BC5FCC78();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_1BC62D250();
  }
LABEL_7:
  v13 = sub_1BC4DA4C8(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1BC4DA4C8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1BC4DA744(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_1BC62D250();
  }
  result = sub_1BC4DA8AC((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

void sub_1BC4DA814()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42B258)
  {
    sub_1BC62A604();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42B258);
  }
}

unint64_t sub_1BC4DA868()
{
  unint64_t result;

  result = qword_1EF433658;
  if (!qword_1EF433658)
  {
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EF433658);
  }
  return result;
}

uint64_t sub_1BC4DA8AC(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned int v43;
  char v44;
  uint64_t v45;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_1BC5FCC00(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_95;
  result = sub_1BC62C794();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_1BC5FCC00(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_1BC5FCC00(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_91;
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  result = sub_1BC62C794();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v31 = a6 + 48;
        v32 = a6 + 55;
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v31 = 58;
        }
        else
        {
          v33 = 97;
          v32 = 65;
        }
        if (v19)
        {
          v24 = 0;
          v34 = v19 + 1;
          v35 = result - 1;
          do
          {
            v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                v29 = 0;
                if (v36 < 0x61 || v36 >= v33)
                  return v29;
                v37 = -87;
              }
              else
              {
                v37 = -55;
              }
            }
            else
            {
              v37 = -48;
            }
            v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
              return 0;
            v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37)))
              return 0;
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v39 = a6 + 48;
      v40 = a6 + 55;
      v41 = a6 + 87;
      if (a6 > 10)
      {
        v39 = 58;
      }
      else
      {
        v41 = 97;
        v40 = 65;
      }
      if (v19)
      {
        v42 = 0;
        do
        {
          v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              v29 = 0;
              if (v43 < 0x61 || v43 >= v41)
                return v29;
              v44 = -87;
            }
            else
            {
              v44 = -55;
            }
          }
          else
          {
            v44 = -48;
          }
          v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63)
            return 0;
          v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44)))
            return 0;
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 48;
      v22 = a6 + 55;
      v23 = a6 + 87;
      if (a6 > 10)
      {
        v21 = 58;
      }
      else
      {
        v23 = 97;
        v22 = 65;
      }
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              if (v27 < 0x61 || v27 >= v23)
                return v29;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
            return 0;
          v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28)))
            return 0;
          ++v25;
          if (!--v26)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

id sub_1BC4DACD0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___iconView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___iconView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___iconView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
    objc_msgSend(v4, sel_setContentMode_, 1);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC4DAD68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___titleLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    objc_msgSend(v4, sel_setFont_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_1BC4DAE48()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell_baseAccessibilityIdentifier + 8];
  if (v1)
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell_baseAccessibilityIdentifier];
    sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v3 + 32) = v2;
    *(_QWORD *)(v3 + 40) = v1;
    swift_bridgeObjectRetain_n();
    v4 = (void *)sub_1BC62C86C();
    v5 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v0, sel_setAccessibilityIdentifier_, v5);
    swift_bridgeObjectRelease();

    v6 = sub_1BC4DACD0();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v7 + 32) = v2;
    *(_QWORD *)(v7 + 40) = v1;
    *(_QWORD *)(v7 + 48) = 1852793673;
    *(_QWORD *)(v7 + 56) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1BC62C86C();
    v9 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v6, sel_setAccessibilityIdentifier_, v9);
    swift_bridgeObjectRelease();

    v10 = sub_1BC4DAD68();
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v11 + 32) = v2;
    *(_QWORD *)(v11 + 40) = v1;
    *(_QWORD *)(v11 + 48) = 0x6554636974617453;
    *(_QWORD *)(v11 + 56) = 0xEA00000000007478;
    v12 = (void *)sub_1BC62C86C();
    v13 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v13);
    swift_bridgeObjectRelease();

  }
}

id sub_1BC4DB060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v5;
  void *v6;
  id v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___iconView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___titleLabel] = 0;
  v5 = &v3[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell_baseAccessibilityIdentifier];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  if (a3)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for TextWithIconCell();
  v7 = objc_msgSendSuper2(&v10, sel_initWithStyle_reuseIdentifier_, a1, v6);

  v8 = v7;
  sub_1BC4DB1F0();

  return v8;
}

void sub_1BC4DB1F0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = sub_1BC4DACD0();
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = objc_msgSend(v0, sel_contentView);
  v4 = sub_1BC4DAD68();
  objc_msgSend(v3, sel_addSubview_, v4);

  v58 = (void *)objc_opt_self();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC63A940;
  v6 = sub_1BC4DACD0();
  v7 = objc_msgSend(v6, sel_widthAnchor);

  if (qword_1EF428698 != -1)
    swift_once();
  v8 = objc_msgSend(v7, sel_constraintEqualToConstant_, *(double *)&qword_1EF433660);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = sub_1BC4DACD0();
  v10 = objc_msgSend(v9, sel_heightAnchor);

  v11 = objc_msgSend(v10, sel_constraintEqualToConstant_, *(double *)&qword_1EF433660);
  *(_QWORD *)(v5 + 40) = v11;
  v12 = sub_1BC4DACD0();
  v13 = objc_msgSend(v12, sel_leadingAnchor);

  v14 = objc_msgSend(v0, sel_contentView);
  v15 = objc_msgSend(v14, sel_layoutMarginsGuide);

  v16 = objc_msgSend(v15, (SEL)&selRef_dateCache + 6);
  v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v5 + 48) = v17;
  v18 = sub_1BC4DACD0();
  v19 = objc_msgSend(v18, sel_topAnchor);

  v20 = objc_msgSend(v0, sel_contentView);
  v21 = objc_msgSend(v20, sel_layoutMarginsGuide);

  v22 = objc_msgSend(v21, sel_topAnchor);
  v23 = objc_msgSend(v19, sel_constraintGreaterThanOrEqualToAnchor_, v22);

  *(_QWORD *)(v5 + 56) = v23;
  v24 = objc_msgSend(v0, sel_contentView);
  v25 = objc_msgSend(v24, sel_layoutMarginsGuide);

  v26 = objc_msgSend(v25, sel_bottomAnchor);
  v27 = sub_1BC4DACD0();
  v28 = objc_msgSend(v27, sel_bottomAnchor);

  v29 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToAnchor_, v28);
  *(_QWORD *)(v5 + 64) = v29;
  v30 = sub_1BC4DAD68();
  v31 = objc_msgSend(v30, sel_centerYAnchor);

  v32 = sub_1BC4DACD0();
  v33 = objc_msgSend(v32, sel_centerYAnchor);

  v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v33);
  *(_QWORD *)(v5 + 72) = v34;
  v35 = sub_1BC4DAD68();
  v36 = objc_msgSend(v35, sel_topAnchor);

  v37 = objc_msgSend(v0, sel_contentView);
  v38 = objc_msgSend(v37, sel_layoutMarginsGuide);

  v39 = objc_msgSend(v38, sel_topAnchor);
  v40 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v39);

  *(_QWORD *)(v5 + 80) = v40;
  v41 = sub_1BC4DAD68();
  v42 = objc_msgSend(v41, sel_leadingAnchor);

  v43 = sub_1BC4DACD0();
  v44 = objc_msgSend(v43, sel_trailingAnchor);

  if (qword_1EF4286A0 != -1)
    swift_once();
  v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v44, *(double *)&qword_1EF433668);

  *(_QWORD *)(v5 + 88) = v45;
  v46 = objc_msgSend(v0, sel_contentView);
  v47 = objc_msgSend(v46, sel_layoutMarginsGuide);

  v48 = objc_msgSend(v47, sel_trailingAnchor);
  v49 = sub_1BC4DAD68();
  v50 = objc_msgSend(v49, sel_trailingAnchor);

  v51 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v50);
  *(_QWORD *)(v5 + 96) = v51;
  v52 = objc_msgSend(v0, sel_contentView);
  v53 = objc_msgSend(v52, sel_layoutMarginsGuide);

  v54 = objc_msgSend(v53, sel_bottomAnchor);
  v55 = sub_1BC4DAD68();
  v56 = objc_msgSend(v55, sel_bottomAnchor);

  v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v56);
  *(_QWORD *)(v5 + 104) = v57;
  sub_1BC62C890();
  sub_1BC34D89C();
  v59 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v58, sel_activateConstraints_, v59);

}

id sub_1BC4DBA08()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextWithIconCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TextWithIconCell()
{
  return objc_opt_self();
}

void sub_1BC4DBAA4()
{
  qword_1EF433660 = 0x403D000000000000;
}

void sub_1BC4DBAB4()
{
  qword_1EF433668 = 0x4030000000000000;
}

uint64_t SettingsViewController.tableView(_:didSelectRowAt:)(void *a1)
{
  void *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (void *)sub_1BC62A928();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v2, 1);

  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BC41F2A8(v3);
  swift_bridgeObjectRelease();
  v5 = sub_1BC62A964();
  if ((v5 & 0x8000000000000000) == 0 && v5 < v4[2])
  {
    v6 = *((unsigned __int8 *)v4 + v5 + 32);
    swift_bridgeObjectRelease();
    __asm { BR              X9 }
  }
  return swift_bridgeObjectRelease();
}

void sub_1BC4DBD98()
{
  char *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(objc_allocWithZone((Class)WDClinicalSettingsViewController), sel_initWithStyle_profile_, 1, *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile]);
  if (v1)
  {
    v3 = v1;
    v2 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v2, sel_setLargeTitleDisplayMode_, 2);

    objc_msgSend(v0, sel_showViewController_sender_, v3, 0);
    JUMPOUT(0x1BC4DBF70);
  }
  JUMPOUT(0x1BC4DBE78);
}

void sub_1BC4DBE18()
{
  sub_1BC4DC614();
}

void sub_1BC4DBE30()
{
  uint64_t v0;

  v0 = sub_1BC62A94C();
  sub_1BC4DC718(v0);
}

void sub_1BC4DBFEC()
{
  char *v0;
  void *v1;
  void *v2;
  objc_class *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  _OWORD v8[4];
  uint64_t v9;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
  v3 = (objc_class *)type metadata accessor for PDFConfigurationViewController();
  v4 = objc_allocWithZone(v3);
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  v5 = objc_allocWithZone(v3);
  v6 = PDFConfigurationViewController.init(profile:account:category:)(v2, 0, (uint64_t *)v8);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B0]), sel_initWithRootViewController_, v6);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v7, 1, 0);

}

void sub_1BC4DC0CC(unint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  char **v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  NSObject *v37;
  _QWORD *v38;
  uint64_t v39;
  NSObject *v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  _QWORD *v52;
  int v53;
  uint64_t v54;
  NSObject *v55;
  id v56[4];
  uint64_t v57[2];

  v3 = v2;
  v57[1] = *MEMORY[0x1E0C80C00];
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0xC000000000000001) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v11 = *(id *)(a2 + 8 * a1 + 32);
      goto LABEL_5;
    }
    __break(1u);
  }
  v11 = (id)MEMORY[0x1BCCF24CC](a1, a2, v8);
LABEL_5:
  v12 = v11;
  v13 = &selRef_predicateWithFormat_;
  v14 = objc_msgSend(v11, sel_source);
  v56[0] = 0;
  v15 = objc_msgSend(v14, sel__fetchBundleWithError_, v56);

  if (v15)
  {
    v16 = v56[0];

    v17 = *(id *)&v3[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
    v18 = objc_msgSend(v12, sel_source);
    v19 = objc_msgSend(objc_allocWithZone((Class)WDClinicalAuthorizationSettingsViewController), sel_initWithProfile_source_, v17, v18);

    objc_msgSend(v3, sel_showViewController_sender_, v19, 0);
  }
  else
  {
    v20 = v56[0];
    v21 = (void *)sub_1BC62A55C();

    swift_willThrow();
    sub_1BC62BAEC();
    v22 = v12;
    v23 = v21;
    v24 = v22;
    v25 = v21;
    v26 = sub_1BC62BB28();
    v27 = sub_1BC62CAC4();
    v28 = v27;
    v55 = v26;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = swift_slowAlloc();
      v53 = v28;
      v30 = v29;
      v31 = (_QWORD *)swift_slowAlloc();
      v52 = v31;
      v54 = swift_slowAlloc();
      v57[0] = v54;
      *(_DWORD *)v30 = 138543618;
      v32 = objc_msgSend(v24, sel_source);
      v56[0] = v32;
      sub_1BC62CFF8();
      *v31 = v32;

      *(_WORD *)(v30 + 12) = 2082;
      v56[0] = v21;
      v33 = v21;
      sub_1BC35E44C();
      sub_1BC62D5D4();
      v34 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v51 = MEMORY[0x1E0DEE9B8] + 8;
      v35 = sub_1BC62C6F8();
      v56[0] = (id)sub_1BC4991F0(v35, v36, v57);
      sub_1BC62CFF8();
      v13 = &selRef_predicateWithFormat_;
      swift_bridgeObjectRelease();

      v37 = v55;
      _os_log_impl(&dword_1BC30A000, v55, (os_log_type_t)v53, "Failed to fetch app bundle for source %{public}@: %{public}s", (uint8_t *)v30, 0x16u);
      sub_1BC4DCD38();
      v38 = v52;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v38, -1, -1);
      v39 = v6;
      v40 = v37;
      v41 = v3;
      v42 = v24;
      v43 = v54;
      swift_arrayDestroy();
      v44 = v43;
      v24 = v42;
      v3 = v41;
      MEMORY[0x1BCCF36A8](v44, -1, -1);
      MEMORY[0x1BCCF36A8](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v39);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    v45 = (void *)objc_opt_self();
    v46 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile], sel_healthStore);
    v47 = objc_msgSend(v45, sel_sharedInstanceForHealthStore_, v46);

    v48 = objc_msgSend(v24, v13[421]);
    v49 = objc_msgSend(v47, sel_createDeletedSourceMessageViewControllerForSource_, v48);

    v50 = objc_msgSend(v49, sel_navigationItem);
    objc_msgSend(v50, sel_setLargeTitleDisplayMode_, 2);

    objc_msgSend(v3, sel_showViewController_sender_, v49, 0);
  }
}

void sub_1BC4DC614()
{
  uint64_t v0;
  void *v1;
  id v2;

  if (qword_1ED6A31B0 != -1)
    swift_once();
  v1 = (void *)sub_1BC62C650();
  v2 = objc_msgSend((id)objc_opt_self(), sel_presenterForPrivacySplashWithIdentifier_, v1);

  if (v2)
  {
    objc_msgSend(v2, sel_setPresentingViewController_, v0);
    objc_msgSend(v2, sel_present);
    if (qword_1ED6A3198 != -1)
      swift_once();
    sub_1BC4E5384(0, 1, 1);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC4DC718(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  id v9;
  char v10;
  char v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = sub_1BC62A8F8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall);
  switch(a1)
  {
    case 0:
      if (qword_1EF428878 != -1)
        swift_once();
      LOBYTE(v31) = byte_1EF43AD38;
      UserInterfaceMode.toggle()();
      v30 = (char)v31;
      _s15HealthRecordsUI8FeaturesC7setMode_6notifyyAA013UserInterfaceF0O_SbtFZ_0(&v30, 1);
      v8 = swift_bridgeObjectRetain();
      v9 = sub_1BC41F2A8(v8);
      swift_bridgeObjectRelease();
      sub_1BC6104E0(6u, (uint64_t)v9);
      v11 = v10;
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v12 = objc_msgSend(v2, sel_tableView);
        if (!v12)
        {
          __break(1u);
          JUMPOUT(0x1BC4DCA60);
        }
        v13 = v12;
        sub_1BC62A8EC();
        v14 = (id)sub_1BC62A8E0();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        objc_msgSend(v13, sel_reloadSections_withRowAnimation_, v14, 100);

        goto LABEL_11;
      }
      break;
    case 1:
      v25 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
      v26 = objc_allocWithZone((Class)type metadata accessor for InternalStateViewController());
      v27 = v25;
      v29 = sub_1BC3A5E74(v27);

      objc_msgSend(v2, sel_showViewController_sender_, v29, v2);
      goto LABEL_13;
    case 2:
      v15 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
      v16 = objc_allocWithZone((Class)type metadata accessor for InternalSharedItemsViewController());
      v29 = sub_1BC520D34(v15);
      objc_msgSend(v2, sel_showViewController_sender_, v29, v2);
LABEL_13:

      break;
    case 3:
      v17 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
      type metadata accessor for EntriesDataSource(0);
      swift_allocObject();
      v18 = v17;
      sub_1BC576548(v18);
      sub_1BC4DCD8C();
      v19 = sub_1BC62C140();
      v21 = v20;

      v31 = v18;
      v32 = v19;
      v33 = v21;
      sub_1BC4DCDD4();
      v23 = objc_allocWithZone(v22);
      v14 = (id)sub_1BC62C230();
      v24 = (void *)sub_1BC62C650();
      objc_msgSend(v14, sel_setTitle_, v24);

      objc_msgSend(v2, sel_showViewController_sender_, v14, v2);
LABEL_11:

      break;
    default:
      return;
  }
}

BOOL SettingsViewController.tableView(_:shouldHighlightRowAt:)()
{
  return sub_1BC4DCC30();
}

uint64_t sub_1BC4DCBDC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

BOOL sub_1BC4DCC30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t *v7;
  unint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BC41F2A8(v3);
  swift_bridgeObjectRelease();
  v5 = sub_1BC62A964();
  if (v5 < 0 || v5 >= v4[2])
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  v6 = *((unsigned __int8 *)v4 + v5 + 32);
  swift_bridgeObjectRelease();
  if (v6)
  {
    if (v6 == 2)
    {
      v7 = &OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels;
      goto LABEL_11;
    }
    if (v6 == 3)
    {
      v7 = &OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_researchStudySourceModels;
LABEL_11:
      v9 = *(_QWORD *)(v1 + *v7);
      goto LABEL_12;
    }
    return 1;
  }
  v9 = *(_QWORD *)(v1 + v2);
LABEL_12:
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v10 != 0;
}

void sub_1BC4DCD38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A4B80)
  {
    sub_1BC3996E4();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A4B80);
  }
}

unint64_t sub_1BC4DCD8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4336B0;
  if (!qword_1EF4336B0)
  {
    v1 = type metadata accessor for EntriesDataSource(255);
    result = MEMORY[0x1BCCF35C4](&unk_1BC648804, v1);
    atomic_store(result, (unint64_t *)&qword_1EF4336B0);
  }
  return result;
}

void sub_1BC4DCDD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4336B8)
  {
    sub_1BC4DCE2C();
    v0 = sub_1BC62C23C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4336B8);
  }
}

unint64_t sub_1BC4DCE2C()
{
  unint64_t result;

  result = qword_1EF4336C0;
  if (!qword_1EF4336C0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6488A8, &type metadata for OntologyRegistryView);
    atomic_store(result, (unint64_t *)&qword_1EF4336C0);
  }
  return result;
}

uint64_t sub_1BC4DCE70(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  __int128 v16[2];

  v3 = *(void **)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(void **)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 64);
  v10 = v1 + 88;
  v11 = *(_QWORD *)(v1 + 72);
  sub_1BC34E674(v10, (uint64_t)v16);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 128) = 0;
  *(_BYTE *)(v12 + 136) = 1;
  *(_QWORD *)(v12 + 16) = v3;
  *(_QWORD *)(v12 + 24) = v4;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v6;
  *(_QWORD *)(v12 + 48) = v7;
  *(_QWORD *)(v12 + 56) = v8;
  *(_BYTE *)(v12 + 64) = v9;
  *(_QWORD *)(v12 + 72) = v11;
  *(_QWORD *)(v12 + 80) = a1;
  sub_1BC34E718(v16, v12 + 88);
  swift_retain();
  swift_bridgeObjectRetain();
  v13 = v3;
  v14 = v6;
  return v12;
}

uint64_t sub_1BC4DCF3C(uint64_t a1)
{
  _QWORD *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  __int128 v13[2];

  v3 = (void *)v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = (void *)v1[5];
  v7 = v1[6];
  v8 = v1[7];
  sub_1BC34E674((uint64_t)(v1 + 9), (uint64_t)v13);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 112) = 0;
  *(_BYTE *)(v9 + 120) = 1;
  *(_QWORD *)(v9 + 128) = 0;
  *(_BYTE *)(v9 + 136) = 1;
  *(_QWORD *)(v9 + 144) = 0;
  *(_BYTE *)(v9 + 152) = 1;
  *(_QWORD *)(v9 + 16) = v3;
  *(_QWORD *)(v9 + 24) = v4;
  *(_QWORD *)(v9 + 32) = v5;
  *(_QWORD *)(v9 + 40) = v6;
  *(_QWORD *)(v9 + 48) = v7;
  *(_QWORD *)(v9 + 56) = v8;
  *(_QWORD *)(v9 + 64) = a1;
  sub_1BC34E718(v13, v9 + 72);
  v10 = v3;
  v11 = v6;
  swift_bridgeObjectRetain();
  return v9;
}

double sub_1BC4DD004(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  double v17;
  _QWORD v19[4];

  v2 = v1;
  v4 = 0.0;
  v5 = 0.0;
  if ((*(_BYTE *)(v1 + 40) & 1) == 0)
  {
    v6 = *(double *)(v1 + 32);
    v7 = a1[3];
    v8 = a1[4];
    __swift_project_boxed_opaque_existential_1Tm(a1, v7);
    v5 = sub_1BC3F4680(v7, v8, v6);
  }
  v9 = *(_QWORD *)(v2 + 48);
  MEMORY[0x1E0C80A78](a1);
  v19[2] = a1;
  swift_bridgeObjectRetain();
  v10 = sub_1BC3B158C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BC4E1C7C, (uint64_t)v19, v9);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    if (v11 == 1)
    {
      v12 = 0;
LABEL_9:
      v15 = v11 - v12;
      v16 = (double *)(v10 + 8 * v12 + 32);
      do
      {
        v17 = *v16++;
        v4 = v4 + v17;
        --v15;
      }
      while (v15);
      goto LABEL_11;
    }
    v12 = v11 & 0x7FFFFFFFFFFFFFFELL;
    v13 = (double *)(v10 + 40);
    v14 = v11 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v4 = v4 + *(v13 - 1) + *v13;
      v13 += 2;
      v14 -= 2;
    }
    while (v14);
    if (v11 != v12)
      goto LABEL_9;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return v5 + v4;
}

double sub_1BC4DD144()
{
  uint64_t v0;
  double result;

  if ((*(_BYTE *)(v0 + 120) & 1) == 0)
    return *(double *)(v0 + 112);
  sub_1BC4DD178((_QWORD *)v0);
  *(double *)(v0 + 112) = result;
  *(_BYTE *)(v0 + 120) = 0;
  return result;
}

void sub_1BC4DD178(_QWORD *a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[8];
  v3 = v2 >> 62;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v4 < 0)
    {
      __break(1u);
      goto LABEL_20;
    }
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4)
  {
    if ((v2 & 0xC000000000000001) == 0 && (unint64_t)(v4 - 1) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_retain();
    v5 = 0;
    v6 = 0.0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCF24CC](v5, v2);
      else
        swift_retain();
      ++v5;
      v7 = sub_1BC4DD344();
      swift_release();
      v6 = v6 + v7;
    }
    while (v4 != v5);
    swift_release();
    if (!v3)
      goto LABEL_12;
  }
  else if (!v3)
  {
LABEL_12:
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
LABEL_15:
  if (__OFSUB__(v8, 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v9 = a1[12];
  v10 = a1[13];
  __swift_project_boxed_opaque_existential_1Tm(a1 + 9, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
  if (qword_1EF428488 != -1)
LABEL_21:
    swift_once();
}

double sub_1BC4DD344()
{
  uint64_t v0;
  double result;

  if ((*(_BYTE *)(v0 + 136) & 1) == 0)
    return *(double *)(v0 + 128);
  sub_1BC4DDBA4((_QWORD *)v0);
  *(double *)(v0 + 128) = result;
  *(_BYTE *)(v0 + 136) = 0;
  return result;
}

uint64_t sub_1BC4DD378()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + 136) != 1)
    return *(_QWORD *)(v0 + 128);
  result = sub_1BC4DD3B0(v0);
  *(_QWORD *)(v0 + 128) = result;
  *(_BYTE *)(v0 + 136) = 0;
  return result;
}

uint64_t sub_1BC4DD3B0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1 >> 62)
    goto LABEL_38;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; v2 = sub_1BC62D3B8())
  {
    v3 = 0;
    v4 = 0;
    v23 = v1;
    v24 = v1 & 0xC000000000000001;
    v21 = v1 + 32;
    v22 = v2;
    while (1)
    {
      if (v24)
      {
        v5 = MEMORY[0x1BCCF24CC](v3, v1);
        v6 = __OFADD__(v3++, 1);
        if (v6)
          goto LABEL_35;
      }
      else
      {
        v5 = *(_QWORD *)(v21 + 8 * v3);
        swift_retain();
        v6 = __OFADD__(v3++, 1);
        if (v6)
          goto LABEL_35;
      }
      v7 = *(_QWORD *)(v5 + 80);
      if (v7 >> 62)
        break;
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8)
        goto LABEL_11;
LABEL_29:
      swift_bridgeObjectRelease();
      v10 = MEMORY[0x1E0DEE9D8];
      v16 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v16)
        goto LABEL_24;
LABEL_30:
      v17 = 0;
LABEL_31:
      swift_release();
      swift_bridgeObjectRelease();
      v6 = __OFADD__(v4, v17);
      v4 += v17;
      if (v6)
        goto LABEL_36;
      if (v3 == v2)
        goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    v8 = sub_1BC62D3B8();
    if (!v8)
      goto LABEL_29;
LABEL_11:
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BDA10(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
      goto LABEL_37;
    v9 = 0;
    v10 = v25;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x1BCCF24CC](v9, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v9 + 32);
        swift_retain();
      }
      v12 = *(_QWORD *)(v11 + 48);
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        v13 = sub_1BC62D3B8();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_release();
      }
      v15 = *(_QWORD *)(v25 + 16);
      v14 = *(_QWORD *)(v25 + 24);
      if (v15 >= v14 >> 1)
        sub_1BC3BDA10(v14 > 1, v15 + 1, 1);
      ++v9;
      *(_QWORD *)(v25 + 16) = v15 + 1;
      *(_QWORD *)(v25 + 8 * v15 + 32) = v13;
    }
    while (v8 != v9);
    swift_bridgeObjectRelease();
    v2 = v22;
    v1 = v23;
    v16 = *(_QWORD *)(v25 + 16);
    if (!v16)
      goto LABEL_30;
LABEL_24:
    v17 = 0;
    v18 = (uint64_t *)(v10 + 32);
    while (1)
    {
      v19 = *v18++;
      v6 = __OFADD__(v17, v19);
      v17 += v19;
      if (v6)
        break;
      if (!--v16)
        goto LABEL_31;
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain_n();
  }
  v4 = 0;
LABEL_40:
  swift_bridgeObjectRelease_n();
  return v4;
}

double sub_1BC4DD66C()
{
  uint64_t v0;
  double result;

  if ((*(_BYTE *)(v0 + 152) & 1) == 0)
    return *(double *)(v0 + 144);
  sub_1BC4DD6A0(v0);
  *(double *)(v0 + 144) = result;
  *(_BYTE *)(v0 + 152) = 0;
  return result;
}

uint64_t sub_1BC4DD6A0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t *v7;
  double v8;
  uint64_t v9;
  double v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_1BC62D3B8();
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v2 >= 1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      v5 = 0.0;
      do
      {
        v6 = *(double *)(MEMORY[0x1BCCF24CC](v4, v1) + 24);
        swift_unknownObjectRelease();
        if (v5 <= v6)
          v5 = v6;
        ++v4;
      }
      while (v2 != v4);
    }
    else
    {
      v7 = (uint64_t *)(v1 + 32);
      v8 = 0.0;
      do
      {
        v9 = *v7++;
        v10 = *(double *)(v9 + 24);
        if (v8 <= v10)
          v8 = v10;
        --v2;
      }
      while (v2);
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC4DD794()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 64);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  if (!sub_1BC62D3B8())
    goto LABEL_19;
LABEL_3:
  if ((v1 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3 = *(_QWORD *)(v1 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    v1 = *(_QWORD *)(v3 + 80);
    swift_bridgeObjectRetain();
    swift_release();
    if ((v1 & 0x8000000000000000) == 0 && (v1 & 0x4000000000000000) == 0)
      goto LABEL_7;
    goto LABEL_22;
  }
LABEL_20:
  v9 = MEMORY[0x1BCCF24CC](0, v1);
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v9 + 80);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  if ((v1 & 0x8000000000000000) == 0 && (v1 & 0x4000000000000000) == 0)
  {
LABEL_7:
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  v10 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_24;
  }
LABEL_8:
  if ((v1 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v4 = *(_QWORD *)(v1 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    v1 = *(_QWORD *)(v4 + 48);
    swift_bridgeObjectRetain();
    swift_release();
    if ((v1 & 0x8000000000000000) == 0 && (v1 & 0x4000000000000000) == 0)
      goto LABEL_12;
    goto LABEL_27;
  }
LABEL_25:
  v11 = MEMORY[0x1BCCF24CC](0, v1);
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v11 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  if ((v1 & 0x8000000000000000) == 0 && (v1 & 0x4000000000000000) == 0)
  {
LABEL_12:
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_13;
    goto LABEL_28;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  v12 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v12)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_29;
  }
LABEL_13:
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_30:
    v5 = MEMORY[0x1BCCF24CC](0, v1);
    goto LABEL_16;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_32;
  }
  v5 = *(_QWORD *)(v1 + 32);
  swift_retain();
LABEL_16:
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 16);
  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_release();
    return v7;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  v13 = sub_1BC62D3B8();
  swift_release();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1BC4DDA1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  return swift_deallocClassInstance();
}

uint64_t _s12SizedSectionCMa()
{
  return objc_opt_self();
}

double sub_1BC4DDA78()
{
  uint64_t v0;
  _QWORD *v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (_QWORD *)v0;
  v2 = 0.0;
  v3 = 0.0;
  if ((*(_BYTE *)(v0 + 64) & 1) == 0)
  {
    v4 = *(double *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 112);
    v6 = v1[15];
    __swift_project_boxed_opaque_existential_1Tm(v1 + 11, v1[14]);
    v7 = sub_1BC3F4680(v5, v6, v4);
    v8 = v1[14];
    v9 = v1[15];
    __swift_project_boxed_opaque_existential_1Tm(v1 + 11, v8);
    v3 = v7 + (*(double (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
  }
  if (v1[9])
  {
    sub_1BC4DDB58();
    v11 = v10;
    v12 = v1 + 11;
    v14 = v1[14];
    v13 = v1[15];
    __swift_project_boxed_opaque_existential_1Tm(v12, v14);
    v2 = sub_1BC3F4680(v14, v13, v11);
  }
  return v3 + v2;
}

void sub_1BC4DDB58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double *v3;
  double v4;
  double v5;
  double v6;

  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 32);
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v3 = (double *)(v1 + 32);
      v4 = 0.0;
      do
      {
        v5 = *v3++;
        v6 = v5;
        if (v4 <= v5)
          v4 = v6;
        --v2;
      }
      while (v2);
    }
    else
    {
      v4 = 0.0;
    }
    *(double *)(v0 + 48) = v4;
    *(_BYTE *)(v0 + 56) = 0;
  }
}

void sub_1BC4DDBA4(_QWORD *a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = a1[10];
  swift_retain();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BC4E1C98(v3, a1);
  swift_bridgeObjectRelease();
  swift_release();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    if (v5 == 1)
    {
      v6 = 0;
      v7 = 0.0;
LABEL_8:
      v10 = v5 - v6;
      v11 = (double *)(v4 + 8 * v6 + 32);
      do
      {
        v12 = *v11++;
        v7 = v7 + v12;
        --v10;
      }
      while (v10);
      goto LABEL_10;
    }
    v6 = v5 & 0x7FFFFFFFFFFFFFFELL;
    v8 = (double *)(v4 + 40);
    v7 = 0.0;
    v9 = v5 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v7 = v7 + *(v8 - 1) + *v8;
      v8 += 2;
      v9 -= 2;
    }
    while (v9);
    if (v5 != v6)
      goto LABEL_8;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!__OFSUB__(v15, 1))
      goto LABEL_12;
  }
  else if (!__OFSUB__(*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10), 1))
  {
LABEL_12:
    v13 = a1[14];
    v14 = a1[15];
    __swift_project_boxed_opaque_existential_1Tm(a1 + 11, v13);
    (*(double (**)(uint64_t, uint64_t))(v14 + 48))(v13, v14);
    sub_1BC4DDA78();
    return;
  }
  __break(1u);
}

uint64_t sub_1BC4DDD0C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  return swift_deallocClassInstance();
}

uint64_t _s11SizedRecordCMa()
{
  return objc_opt_self();
}

void sub_1BC4DDD70(_QWORD *a1@<X1>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double v5;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v3);
  sub_1BC4DDB58();
  *a2 = sub_1BC3F4680(v3, v4, v5);
}

uint64_t sub_1BC4DDDD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s15SizedValueGroupCMa()
{
  return objc_opt_self();
}

uint64_t sub_1BC4DDE20(unint64_t a1, double a2)
{
  uint64_t result;
  double *v4;
  unint64_t v5;
  double v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_1BC62D388();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x1E0DEE9D8];
  result = sub_1BC62C8CC();
  *(_QWORD *)(result + 16) = a1;
  v4 = (double *)(result + 32);
  if (a1 < 4)
  {
    v5 = 0;
    v6 = a2;
LABEL_9:
    v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  v6 = a2;
  v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  v8 = (int64x2_t *)(result + 48);
  v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_1BC4DDF10()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s10SizedValueCMa()
{
  return objc_opt_self();
}

uint64_t sub_1BC4DDF64()
{
  return sub_1BC4E18B8(&qword_1EF4339F0, &qword_1EF4339F8, MEMORY[0x1E0DEC1C0], MEMORY[0x1E0DEC1E8]);
}

uint64_t sub_1BC4DDF98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  sub_1BC4E1308();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = 0;
  swift_bridgeObjectRetain();
  result = swift_release();
  *a1 = v4;
  return result;
}

uint64_t sub_1BC4DDFF4()
{
  return 2;
}

uint64_t sub_1BC4DDFFC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_1BC4DE908(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1BC4DE030(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1BC4DF19C(a1, a2, a3);
}

uint64_t sub_1BC4DE050()
{
  return sub_1BC62C818();
}

uint64_t sub_1BC4DE070@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  sub_1BC4E1450();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = 0;
  swift_bridgeObjectRetain();
  result = swift_release();
  *a1 = v4;
  return result;
}

uint64_t sub_1BC4DE0CC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_1BC4DE6B0(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1BC4DE100(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1BC4DEFA8(a1, a2, a3);
}

uint64_t sub_1BC4DE120@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  sub_1BC4E1598();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = 0;
  swift_bridgeObjectRetain();
  result = swift_release();
  *a1 = v4;
  return result;
}

uint64_t sub_1BC4DE17C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_1BC4DEB60(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1BC4DE1B0(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1BC4DF390(a1, a2, a3);
}

uint64_t sub_1BC4DE1D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  sub_1BC4E1758();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = 0;
  swift_bridgeObjectRetain();
  result = swift_release();
  *a1 = v4;
  return result;
}

uint64_t sub_1BC4DE22C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_1BC4DE458(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1BC4DE260(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  return sub_1BC4DEDB8(a1, a2, a3);
}

uint64_t sub_1BC4DE280()
{
  return sub_1BC4DE358(&qword_1EF433A08, &qword_1EF433A10, _s10SizedValueCMa);
}

void sub_1BC4DE2AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3();
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC4DE300()
{
  return sub_1BC4DE358(&qword_1EF433A18, &qword_1EF433A20, _s15SizedValueGroupCMa);
}

uint64_t sub_1BC4DE32C()
{
  return sub_1BC4DE358(&qword_1EF433A28, &qword_1EF433A30, _s11SizedRecordCMa);
}

uint64_t sub_1BC4DE358(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC4DE2AC(255, a2, a3, MEMORY[0x1E0DEC1C0]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEC1E8], v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1BC4DE3A0(_QWORD *a1)
{
  return sub_1BC3B68D8(0, a1[2], 0, a1);
}

_QWORD *sub_1BC4DE3B4(_QWORD *a1)
{
  return sub_1BC3B6B34(0, a1[2], 0, a1);
}

_QWORD *sub_1BC4DE3C8(_QWORD *a1)
{
  return sub_1BC3B6C54(0, a1[2], 0, a1);
}

void sub_1BC4DE3DC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1BCCF24D8);
}

uint64_t sub_1BC4DE444(unint64_t a1)
{
  return sub_1BC3B5190(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1BC4DE458(uint64_t a1)
{
  unint64_t v1;
  _QWORD *inited;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  id v8;
  BOOL v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  sub_1BC4E1758();
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v1;
  inited[3] = 0;
  if (v1 >> 62)
    goto LABEL_31;
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_34;
  while (2)
  {
    v27 = inited;
    v4 = 0;
    v5 = 0;
    v6 = v1 & 0xC000000000000001;
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    inited = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
    v28 = v1 & 0xC000000000000001;
    v29 = v1 & 0xFFFFFFFFFFFFFF8;
    while (v6)
    {
      v8 = (id)MEMORY[0x1BCCF24CC](v5, v1);
      if (!v4)
        goto LABEL_11;
LABEL_6:
      v9 = __OFSUB__(v4--, 1);
      if (v9)
        goto LABEL_28;
LABEL_26:
      ++v5;
      *inited++ = v8;
      if (v3 == v5)
      {
        v27[3] = v3;
        result = swift_release();
        goto LABEL_35;
      }
    }
    if (v5 >= *(_QWORD *)(v29 + 16))
      goto LABEL_29;
    v8 = *(id *)(v1 + 8 * v5 + 32);
    if (v4)
      goto LABEL_6;
LABEL_11:
    v10 = v7[3];
    if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_30;
    v11 = v1;
    v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (v12 <= 1)
      v13 = 1;
    else
      v13 = v12;
    sub_1BC34D844();
    v14 = (_QWORD *)swift_allocObject();
    v15 = _swift_stdlib_malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v17 = v16 >> 3;
    v14[2] = v13;
    v14[3] = (2 * (v16 >> 3)) | 1;
    v18 = (unint64_t)(v14 + 4);
    v19 = v7[3] >> 1;
    if (v7[2])
    {
      if (v14 != v7 || v18 >= (unint64_t)&v7[v19 + 4])
        memmove(v14 + 4, v7 + 4, 8 * v19);
      v7[2] = 0;
    }
    inited = (_QWORD *)(v18 + 8 * v19);
    v21 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
    swift_release();
    v7 = v14;
    v1 = v11;
    v6 = v28;
    v9 = __OFSUB__(v21, 1);
    v4 = v21 - 1;
    if (!v9)
      goto LABEL_26;
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain_n();
    v23 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRetain();
      v3 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v3 < 1)
      {
        __break(1u);
        break;
      }
      continue;
    }
    break;
  }
LABEL_34:
  result = swift_release();
  v4 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_35:
  v24 = v7[3];
  if (v24 < 2)
    return (uint64_t)v7;
  v25 = v24 >> 1;
  v9 = __OFSUB__(v25, v4);
  v26 = v25 - v4;
  if (!v9)
  {
    v7[2] = v26;
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC4DE6B0(uint64_t a1)
{
  unint64_t v1;
  uint64_t *inited;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 80);
  sub_1BC4E1450();
  inited = (uint64_t *)swift_initStackObject();
  inited[2] = v1;
  inited[3] = 0;
  if (v1 >> 62)
    goto LABEL_31;
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_34;
  while (2)
  {
    v27 = inited;
    v4 = 0;
    v5 = 0;
    v6 = v1 & 0xC000000000000001;
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    inited = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    v28 = v1 & 0xC000000000000001;
    v29 = v1 & 0xFFFFFFFFFFFFFF8;
    while (v6)
    {
      v8 = MEMORY[0x1BCCF24CC](v5, v1);
      if (!v4)
        goto LABEL_11;
LABEL_6:
      v9 = __OFSUB__(v4--, 1);
      if (v9)
        goto LABEL_28;
LABEL_26:
      ++v5;
      *inited++ = v8;
      if (v3 == v5)
      {
        v27[3] = v3;
        result = swift_release();
        goto LABEL_35;
      }
    }
    if (v5 >= *(_QWORD *)(v29 + 16))
      goto LABEL_29;
    v8 = *(_QWORD *)(v1 + 8 * v5 + 32);
    swift_retain();
    if (v4)
      goto LABEL_6;
LABEL_11:
    v10 = v7[3];
    if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_30;
    v11 = v1;
    v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (v12 <= 1)
      v13 = 1;
    else
      v13 = v12;
    sub_1BC34D844();
    v14 = (_QWORD *)swift_allocObject();
    v15 = _swift_stdlib_malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v17 = v16 >> 3;
    v14[2] = v13;
    v14[3] = (2 * (v16 >> 3)) | 1;
    v18 = (unint64_t)(v14 + 4);
    v19 = v7[3] >> 1;
    if (v7[2])
    {
      if (v14 != v7 || v18 >= (unint64_t)&v7[v19 + 4])
        memmove(v14 + 4, v7 + 4, 8 * v19);
      v7[2] = 0;
    }
    inited = (uint64_t *)(v18 + 8 * v19);
    v21 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
    swift_release();
    v7 = v14;
    v1 = v11;
    v6 = v28;
    v9 = __OFSUB__(v21, 1);
    v4 = v21 - 1;
    if (!v9)
      goto LABEL_26;
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain_n();
    v23 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRetain();
      v3 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v3 < 1)
      {
        __break(1u);
        break;
      }
      continue;
    }
    break;
  }
LABEL_34:
  result = swift_release();
  v4 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_35:
  v24 = v7[3];
  if (v24 < 2)
    return (uint64_t)v7;
  v25 = v24 >> 1;
  v9 = __OFSUB__(v25, v4);
  v26 = v25 - v4;
  if (!v9)
  {
    v7[2] = v26;
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC4DE908(uint64_t a1)
{
  unint64_t v1;
  uint64_t *inited;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 64);
  sub_1BC4E1308();
  inited = (uint64_t *)swift_initStackObject();
  inited[2] = v1;
  inited[3] = 0;
  if (v1 >> 62)
    goto LABEL_31;
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_34;
  while (2)
  {
    v27 = inited;
    v4 = 0;
    v5 = 0;
    v6 = v1 & 0xC000000000000001;
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    inited = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    v28 = v1 & 0xC000000000000001;
    v29 = v1 & 0xFFFFFFFFFFFFFF8;
    while (v6)
    {
      v8 = MEMORY[0x1BCCF24CC](v5, v1);
      if (!v4)
        goto LABEL_11;
LABEL_6:
      v9 = __OFSUB__(v4--, 1);
      if (v9)
        goto LABEL_28;
LABEL_26:
      ++v5;
      *inited++ = v8;
      if (v3 == v5)
      {
        v27[3] = v3;
        result = swift_release();
        goto LABEL_35;
      }
    }
    if (v5 >= *(_QWORD *)(v29 + 16))
      goto LABEL_29;
    v8 = *(_QWORD *)(v1 + 8 * v5 + 32);
    swift_retain();
    if (v4)
      goto LABEL_6;
LABEL_11:
    v10 = v7[3];
    if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_30;
    v11 = v1;
    v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (v12 <= 1)
      v13 = 1;
    else
      v13 = v12;
    sub_1BC34D844();
    v14 = (_QWORD *)swift_allocObject();
    v15 = _swift_stdlib_malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v17 = v16 >> 3;
    v14[2] = v13;
    v14[3] = (2 * (v16 >> 3)) | 1;
    v18 = (unint64_t)(v14 + 4);
    v19 = v7[3] >> 1;
    if (v7[2])
    {
      if (v14 != v7 || v18 >= (unint64_t)&v7[v19 + 4])
        memmove(v14 + 4, v7 + 4, 8 * v19);
      v7[2] = 0;
    }
    inited = (uint64_t *)(v18 + 8 * v19);
    v21 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
    swift_release();
    v7 = v14;
    v1 = v11;
    v6 = v28;
    v9 = __OFSUB__(v21, 1);
    v4 = v21 - 1;
    if (!v9)
      goto LABEL_26;
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain_n();
    v23 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRetain();
      v3 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v3 < 1)
      {
        __break(1u);
        break;
      }
      continue;
    }
    break;
  }
LABEL_34:
  result = swift_release();
  v4 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_35:
  v24 = v7[3];
  if (v24 < 2)
    return (uint64_t)v7;
  v25 = v24 >> 1;
  v9 = __OFSUB__(v25, v4);
  v26 = v25 - v4;
  if (!v9)
  {
    v7[2] = v26;
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC4DEB60(uint64_t a1)
{
  unint64_t v1;
  uint64_t *inited;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 48);
  sub_1BC4E1598();
  inited = (uint64_t *)swift_initStackObject();
  inited[2] = v1;
  inited[3] = 0;
  if (v1 >> 62)
    goto LABEL_31;
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_34;
  while (2)
  {
    v27 = inited;
    v4 = 0;
    v5 = 0;
    v6 = v1 & 0xC000000000000001;
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    inited = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    v28 = v1 & 0xC000000000000001;
    v29 = v1 & 0xFFFFFFFFFFFFFF8;
    while (v6)
    {
      v8 = MEMORY[0x1BCCF24CC](v5, v1);
      if (!v4)
        goto LABEL_11;
LABEL_6:
      v9 = __OFSUB__(v4--, 1);
      if (v9)
        goto LABEL_28;
LABEL_26:
      ++v5;
      *inited++ = v8;
      if (v3 == v5)
      {
        v27[3] = v3;
        result = swift_release();
        goto LABEL_35;
      }
    }
    if (v5 >= *(_QWORD *)(v29 + 16))
      goto LABEL_29;
    v8 = *(_QWORD *)(v1 + 8 * v5 + 32);
    swift_retain();
    if (v4)
      goto LABEL_6;
LABEL_11:
    v10 = v7[3];
    if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_30;
    v11 = v1;
    v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (v12 <= 1)
      v13 = 1;
    else
      v13 = v12;
    sub_1BC34D844();
    v14 = (_QWORD *)swift_allocObject();
    v15 = _swift_stdlib_malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v17 = v16 >> 3;
    v14[2] = v13;
    v14[3] = (2 * (v16 >> 3)) | 1;
    v18 = (unint64_t)(v14 + 4);
    v19 = v7[3] >> 1;
    if (v7[2])
    {
      if (v14 != v7 || v18 >= (unint64_t)&v7[v19 + 4])
        memmove(v14 + 4, v7 + 4, 8 * v19);
      v7[2] = 0;
    }
    inited = (uint64_t *)(v18 + 8 * v19);
    v21 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
    swift_release();
    v7 = v14;
    v1 = v11;
    v6 = v28;
    v9 = __OFSUB__(v21, 1);
    v4 = v21 - 1;
    if (!v9)
      goto LABEL_26;
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain_n();
    v23 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRetain();
      v3 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v3 < 1)
      {
        __break(1u);
        break;
      }
      continue;
    }
    break;
  }
LABEL_34:
  result = swift_release();
  v4 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_35:
  v24 = v7[3];
  if (v24 < 2)
    return (uint64_t)v7;
  v25 = v24 >> 1;
  v9 = __OFSUB__(v25, v4);
  v26 = v25 - v4;
  if (!v9)
  {
    v7[2] = v26;
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC4DEDB8(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  id v11;
  id v12;
  char *v13;
  char *v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v8 = *(_QWORD *)(v3 + 16);
  sub_1BC4E1758();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = 0;
  swift_bridgeObjectRetain();
  result = swift_release();
  if (a2 && a3)
  {
    if (a3 < 0)
      goto LABEL_30;
    v4 = v8 >> 62;
    if (v8 >> 62)
      goto LABEL_31;
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          v11 = (id)MEMORY[0x1BCCF24CC](0, v8);
        }
        else
        {
          if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          v11 = *(id *)(v8 + 32);
        }
        v12 = v11;
        result = 1;
        *(_QWORD *)(v9 + 24) = 1;
        *(_QWORD *)a2 = v12;
        v13 = (char *)(a3 - 1);
        if (a3 == 1)
          goto LABEL_33;
        v19 = a3;
        v20 = a1;
        v14 = 0;
        a1 = (_QWORD *)(v8 & 0xFFFFFFFFFFFFFF8);
        a3 = a2 + 8;
        while (v13 != v14)
        {
          if (v4)
          {
            swift_bridgeObjectRetain();
            v15 = sub_1BC62D3B8();
            swift_bridgeObjectRelease();
          }
          else
          {
            v15 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          a2 = (unint64_t)(v14 + 1);
          if (v14 + 1 == (char *)v15)
            goto LABEL_25;
          if ((v8 & 0xC000000000000001) != 0)
          {
            v16 = (id)MEMORY[0x1BCCF24CC](v14 + 1, v8);
            v17 = v14 + 2;
            if (__OFADD__(a2, 1))
            {
LABEL_24:
              __break(1u);
LABEL_25:
              result = (uint64_t)(v14 + 1);
LABEL_26:
              a1 = v20;
              goto LABEL_33;
            }
          }
          else
          {
            if ((a2 & 0x8000000000000000) != 0)
              goto LABEL_28;
            if (a2 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_29;
            v16 = *(id *)(v8 + 8 * (_QWORD)v14 + 40);
            v17 = v14 + 2;
            if (__OFADD__(a2, 1))
              goto LABEL_24;
          }
          *(_QWORD *)(v9 + 24) = v17;
          *(_QWORD *)(a3 + 8 * (_QWORD)v14++) = v16;
          if (v13 == v14)
          {
            result = v19;
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        v18 = sub_1BC62D3B8();
        result = swift_bridgeObjectRelease();
      }
      while (v18);
    }
  }
  result = 0;
LABEL_33:
  *a1 = v9;
  return result;
}

uint64_t sub_1BC4DEFA8(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v8 = *(_QWORD *)(v3 + 80);
  sub_1BC4E1450();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = 0;
  swift_bridgeObjectRetain();
  result = swift_release();
  if (a2 && a3)
  {
    if (a3 < 0)
      goto LABEL_30;
    v4 = v8 >> 62;
    if (v8 >> 62)
      goto LABEL_31;
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          v11 = MEMORY[0x1BCCF24CC](0, v8);
        }
        else
        {
          if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          v11 = *(_QWORD *)(v8 + 32);
          swift_retain();
        }
        result = 1;
        *(_QWORD *)(v9 + 24) = 1;
        *a2 = v11;
        v12 = (char *)(a3 - 1);
        if (a3 == 1)
          goto LABEL_33;
        v18 = a3;
        v19 = a1;
        v13 = 0;
        a1 = (_QWORD *)(v8 & 0xFFFFFFFFFFFFFF8);
        a3 = (uint64_t)(a2 + 1);
        while (v12 != (char *)v13)
        {
          if (v4)
          {
            swift_bridgeObjectRetain();
            v14 = sub_1BC62D3B8();
            swift_bridgeObjectRelease();
          }
          else
          {
            v14 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          a2 = (uint64_t *)(v13 + 1);
          if (v13 + 1 == v14)
            goto LABEL_25;
          if ((v8 & 0xC000000000000001) != 0)
          {
            v15 = MEMORY[0x1BCCF24CC](v13 + 1, v8);
            v16 = v13 + 2;
            if (__OFADD__(a2, 1))
            {
LABEL_24:
              __break(1u);
LABEL_25:
              result = v13 + 1;
LABEL_26:
              a1 = v19;
              goto LABEL_33;
            }
          }
          else
          {
            if (((unint64_t)a2 & 0x8000000000000000) != 0)
              goto LABEL_28;
            if ((unint64_t)a2 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_29;
            v15 = swift_retain();
            v16 = v13 + 2;
            if (__OFADD__(a2, 1))
              goto LABEL_24;
          }
          *(_QWORD *)(v9 + 24) = v16;
          *(_QWORD *)(a3 + 8 * v13++) = v15;
          if (v12 == (char *)v13)
          {
            result = v18;
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        v17 = sub_1BC62D3B8();
        result = swift_bridgeObjectRelease();
      }
      while (v17);
    }
  }
  result = 0;
LABEL_33:
  *a1 = v9;
  return result;
}

uint64_t sub_1BC4DF19C(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v8 = *(_QWORD *)(v3 + 64);
  sub_1BC4E1308();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = 0;
  swift_bridgeObjectRetain();
  result = swift_release();
  if (a2 && a3)
  {
    if (a3 < 0)
      goto LABEL_30;
    v4 = v8 >> 62;
    if (v8 >> 62)
      goto LABEL_31;
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          v11 = MEMORY[0x1BCCF24CC](0, v8);
        }
        else
        {
          if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          v11 = *(_QWORD *)(v8 + 32);
          swift_retain();
        }
        result = 1;
        *(_QWORD *)(v9 + 24) = 1;
        *a2 = v11;
        v12 = (char *)(a3 - 1);
        if (a3 == 1)
          goto LABEL_33;
        v18 = a3;
        v19 = a1;
        v13 = 0;
        a1 = (_QWORD *)(v8 & 0xFFFFFFFFFFFFFF8);
        a3 = (uint64_t)(a2 + 1);
        while (v12 != (char *)v13)
        {
          if (v4)
          {
            swift_bridgeObjectRetain();
            v14 = sub_1BC62D3B8();
            swift_bridgeObjectRelease();
          }
          else
          {
            v14 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          a2 = (uint64_t *)(v13 + 1);
          if (v13 + 1 == v14)
            goto LABEL_25;
          if ((v8 & 0xC000000000000001) != 0)
          {
            v15 = MEMORY[0x1BCCF24CC](v13 + 1, v8);
            v16 = v13 + 2;
            if (__OFADD__(a2, 1))
            {
LABEL_24:
              __break(1u);
LABEL_25:
              result = v13 + 1;
LABEL_26:
              a1 = v19;
              goto LABEL_33;
            }
          }
          else
          {
            if (((unint64_t)a2 & 0x8000000000000000) != 0)
              goto LABEL_28;
            if ((unint64_t)a2 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_29;
            v15 = swift_retain();
            v16 = v13 + 2;
            if (__OFADD__(a2, 1))
              goto LABEL_24;
          }
          *(_QWORD *)(v9 + 24) = v16;
          *(_QWORD *)(a3 + 8 * v13++) = v15;
          if (v12 == (char *)v13)
          {
            result = v18;
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        v17 = sub_1BC62D3B8();
        result = swift_bridgeObjectRelease();
      }
      while (v17);
    }
  }
  result = 0;
LABEL_33:
  *a1 = v9;
  return result;
}

uint64_t sub_1BC4DF390(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v8 = *(_QWORD *)(v3 + 48);
  sub_1BC4E1598();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = 0;
  swift_bridgeObjectRetain();
  result = swift_release();
  if (a2 && a3)
  {
    if (a3 < 0)
      goto LABEL_30;
    v4 = v8 >> 62;
    if (v8 >> 62)
      goto LABEL_31;
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          v11 = MEMORY[0x1BCCF24CC](0, v8);
        }
        else
        {
          if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          v11 = *(_QWORD *)(v8 + 32);
          swift_retain();
        }
        result = 1;
        *(_QWORD *)(v9 + 24) = 1;
        *a2 = v11;
        v12 = (char *)(a3 - 1);
        if (a3 == 1)
          goto LABEL_33;
        v18 = a3;
        v19 = a1;
        v13 = 0;
        a1 = (_QWORD *)(v8 & 0xFFFFFFFFFFFFFF8);
        a3 = (uint64_t)(a2 + 1);
        while (v12 != (char *)v13)
        {
          if (v4)
          {
            swift_bridgeObjectRetain();
            v14 = sub_1BC62D3B8();
            swift_bridgeObjectRelease();
          }
          else
          {
            v14 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          a2 = (uint64_t *)(v13 + 1);
          if (v13 + 1 == v14)
            goto LABEL_25;
          if ((v8 & 0xC000000000000001) != 0)
          {
            v15 = MEMORY[0x1BCCF24CC](v13 + 1, v8);
            v16 = v13 + 2;
            if (__OFADD__(a2, 1))
            {
LABEL_24:
              __break(1u);
LABEL_25:
              result = v13 + 1;
LABEL_26:
              a1 = v19;
              goto LABEL_33;
            }
          }
          else
          {
            if (((unint64_t)a2 & 0x8000000000000000) != 0)
              goto LABEL_28;
            if ((unint64_t)a2 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_29;
            v15 = swift_retain();
            v16 = v13 + 2;
            if (__OFADD__(a2, 1))
              goto LABEL_24;
          }
          *(_QWORD *)(v9 + 24) = v16;
          *(_QWORD *)(a3 + 8 * v13++) = v15;
          if (v12 == (char *)v13)
          {
            result = v18;
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        v17 = sub_1BC62D3B8();
        result = swift_bridgeObjectRelease();
      }
      while (v17);
    }
  }
  result = 0;
LABEL_33:
  *a1 = v9;
  return result;
}

uint64_t sub_1BC4DF584(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v31 - v14;
  v36 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v35 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v30 = v35;
    *a1 = v36;
    a1[1] = v30;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 24);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_1BC35EBE0(*(_QWORD *)(v36 + 48) + v29 * v25, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1BC375724((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    result = sub_1BC375724((uint64_t)v15, a2, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v35 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v35 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1BC4DF840(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  int64_t v32;
  uint64_t v33;

  v6 = *(_QWORD *)(a4 + 56);
  v4 = a4 + 56;
  v5 = v6;
  v33 = v4;
  v7 = -1 << *(_BYTE *)(v4 - 24);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & v5;
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *result = a4;
    result[1] = v33;
    result[2] = ~v7;
    result[3] = v12;
    result[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v30 = -1 << *(_BYTE *)(v4 - 24);
  v31 = result;
  v12 = 0;
  v13 = 0;
  v32 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v15 = v14 | (v12 << 6);
  while (1)
  {
    v19 = *(_QWORD *)(a4 + 48) + 72 * v15;
    ++v13;
    v21 = *(void **)(v19 + 8);
    v20 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 40);
    v22 = *(_QWORD *)(v19 + 48);
    v25 = *(_QWORD *)(v19 + 56);
    v24 = *(void **)(v19 + 64);
    v26 = *(_OWORD *)(v19 + 24);
    *(_BYTE *)v11 = *(_BYTE *)v19;
    *(_QWORD *)(v11 + 8) = v21;
    *(_QWORD *)(v11 + 16) = v20;
    *(_OWORD *)(v11 + 24) = v26;
    *(_QWORD *)(v11 + 40) = v23;
    *(_QWORD *)(v11 + 48) = v22;
    *(_QWORD *)(v11 + 56) = v25;
    *(_QWORD *)(v11 + 64) = v24;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = v24;
      v29 = v21;
      goto LABEL_38;
    }
    v11 += 72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = v24;
    result = v21;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v16 >= v32)
      goto LABEL_33;
    v17 = *(_QWORD *)(v33 + 8 * v16);
    if (!v17)
    {
      v12 += 2;
      if (v16 + 1 >= v32)
      {
        v9 = 0;
        v12 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v33 + 8 * v12);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v32)
          goto LABEL_33;
        v17 = *(_QWORD *)(v33 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v12 = v16 + 3;
        if (v16 + 3 < v32)
        {
          v17 = *(_QWORD *)(v33 + 8 * v12);
          if (v17)
          {
LABEL_14:
            v16 = v12;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v32)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v33 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v32)
              {
                v9 = 0;
                v12 = v32 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v33 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v16 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v30;
      result = v31;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v12 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1BC4DFAF0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BC4DFCEC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1BC4DFEE4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC4E03E4(a1, a2, a3, a4, &qword_1EF42DAC0, 0x1E0CB6C18, &qword_1EF42DAC8);
}

uint64_t sub_1BC4DFF00(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_1BC62B8C4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 24);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 48) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BC4E01C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *(_BYTE *)v11 = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v16);
    *(_QWORD *)(v11 + 8) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 16;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1BC4E03C8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC4E03E4(a1, a2, a3, a4, (unint64_t *)&qword_1EF431480, 0x1E0D2EE90, &qword_1EF42C7B8);
}

_QWORD *sub_1BC4E03E4(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;

  v7 = a4;
  v9 = a2;
  v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1BC62D0DC();
    sub_1BC34B6A0(0, a5);
    sub_1BC35E2D8(a7, a5);
    result = (_QWORD *)sub_1BC62CA1C();
    v7 = v33;
    v12 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    if (v9)
      goto LABEL_3;
LABEL_36:
    v16 = 0;
    goto LABEL_38;
  }
  v14 = 0;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  v12 = a4 + 56;
  v13 = ~v24;
  v25 = -v24;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  else
    v26 = -1;
  v15 = v26 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v16 = 0;
LABEL_38:
    v27 = v29;
LABEL_41:
    *v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (_QWORD *)v16;
  }
  if (a3 < 0)
    goto LABEL_48;
  v16 = 0;
  v30 = (unint64_t)(v13 + 64) >> 6;
  v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_1BC62D13C())
        goto LABEL_40;
      sub_1BC34B6A0(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v19 = v32;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v32)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v20 >= v30)
    {
      v15 = 0;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_23;
    v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30)
        goto LABEL_44;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_23;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          v15 = 0;
          v14 = v22;
          goto LABEL_40;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v23 = v14 + 6;
          while (v30 != v23)
          {
            v21 = *(_QWORD *)(v12 + 8 * v23++);
            if (v21)
            {
              v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          v15 = 0;
          v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v20 = v22;
LABEL_23:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_40:
      v13 = v28;
      v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1BC4E06DC(uint64_t result, int64_t *a2, uint64_t a3, uint64_t a4, int64_t a5)
{
  BOOL v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t *v10;
  uint64_t v11;
  unint64_t v12;
  int64x2_t v13;
  int64x2_t *v14;
  int64x2_t v15;
  int64x2_t v16;
  int64x2_t v17;
  _QWORD *v18;

  if (!a2)
  {
    v7 = 0;
    a3 = 0;
    v5 = 1;
    goto LABEL_22;
  }
  v5 = a3 == 0;
  if (!a3)
  {
    v7 = 0;
    goto LABEL_22;
  }
  if (a3 < 0)
    goto LABEL_25;
  v6 = a5 - a4;
  if (a5 >= a4)
  {
    *a2 = a5;
    if (a3 == 1)
    {
      v5 = 0;
      v7 = a5;
LABEL_22:
      *(_QWORD *)result = a4;
      *(_QWORD *)(result + 8) = a5;
      *(_QWORD *)(result + 16) = v7;
      *(_BYTE *)(result + 24) = v5;
      return a3;
    }
    if (a3 - 2 < v6)
      v6 = a3 - 2;
    v8 = v6 + 1;
    if (v8 > 4)
    {
      v11 = v8 & 3;
      if ((v8 & 3) == 0)
        v11 = 4;
      v12 = v8 - v11;
      v7 = a5 - (v8 - v11);
      v9 = v12 + 1;
      v10 = &a2[v12];
      v13 = vaddq_s64(vdupq_n_s64(a5), (int64x2_t)xmmword_1BC644960);
      v14 = (int64x2_t *)(a2 + 3);
      v15.i64[0] = -1;
      v15.i64[1] = -1;
      v16 = vdupq_n_s64(0xFFFFFFFFFFFFFFFDLL);
      v17 = vdupq_n_s64(0xFFFFFFFFFFFFFFFCLL);
      do
      {
        v14[-1] = vaddq_s64(v13, v15);
        *v14 = vaddq_s64(v13, v16);
        v13 = vaddq_s64(v13, v17);
        v14 += 2;
        v12 -= 4;
      }
      while (v12);
    }
    else
    {
      v9 = 1;
      v7 = a5;
      v10 = a2;
    }
    v18 = v10 + 1;
    while (1)
    {
      if (a4 == v7)
      {
        v5 = 0;
        v7 = a4;
        a3 = v9;
        goto LABEL_22;
      }
      if (v7 <= a4)
        break;
      ++v9;
      *v18++ = --v7;
      if (a3 == v9)
      {
        v5 = 0;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC4E080C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1BC4E0A04(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1BC3CD250();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = *(_QWORD *)(a4 + 64);
  v34 = a4 + 64;
  v15 = -1 << *(_BYTE *)(a4 + 32);
  if (-v15 < 64)
    v16 = ~(-1 << -(char)v15);
  else
    v16 = -1;
  v17 = v16 & v14;
  if (!a2)
  {
    v18 = 0;
LABEL_38:
    v28 = v34;
    *a1 = a4;
    a1[1] = v28;
    a1[2] = ~v15;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    v18 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v31 = -1 << *(_BYTE *)(a4 + 32);
  v32 = a1;
  v18 = 0;
  v19 = 0;
  v33 = (unint64_t)(63 - v15) >> 6;
  v30 = v33 - 1;
  v20 = a3;
  if (!v17)
    goto LABEL_9;
LABEL_8:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v22 = v21 | (v18 << 6);
  while (1)
  {
    ++v19;
    v26 = *(_QWORD *)(a4 + 48);
    v27 = type metadata accessor for BrowseCategory();
    sub_1BC35EBE0(v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v22, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
    *(_QWORD *)&v10[*(int *)(v36 + 48)] = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v22);
    sub_1BC375724((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC3CD250);
    sub_1BC375724((uint64_t)v13, a2, (uint64_t (*)(_QWORD))sub_1BC3CD250);
    if (v19 == v20)
      goto LABEL_37;
    a2 += *(_QWORD *)(v35 + 72);
    if (v17)
      goto LABEL_8;
LABEL_9:
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v23 >= v33)
      goto LABEL_33;
    v24 = *(_QWORD *)(v34 + 8 * v23);
    if (!v24)
      break;
LABEL_18:
    v17 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
    v18 = v23;
  }
  v18 += 2;
  if (v23 + 1 >= v33)
  {
    v17 = 0;
    v18 = v23;
    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v34 + 8 * v18);
  if (v24)
    goto LABEL_14;
  v25 = v23 + 2;
  if (v23 + 2 >= v33)
    goto LABEL_33;
  v24 = *(_QWORD *)(v34 + 8 * v25);
  if (v24)
    goto LABEL_17;
  v18 = v23 + 3;
  if (v23 + 3 >= v33)
  {
    v17 = 0;
    v18 = v23 + 2;
    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v34 + 8 * v18);
  if (v24)
  {
LABEL_14:
    v23 = v18;
    goto LABEL_18;
  }
  v25 = v23 + 4;
  if (v23 + 4 >= v33)
  {
LABEL_33:
    v17 = 0;
LABEL_37:
    v15 = v31;
    a1 = v32;
    goto LABEL_38;
  }
  v24 = *(_QWORD *)(v34 + 8 * v25);
  if (v24)
  {
LABEL_17:
    v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v33)
    {
      v17 = 0;
      v18 = v30;
      goto LABEL_37;
    }
    v24 = *(_QWORD *)(v34 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
}

_QWORD *sub_1BC4E0CF4(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BC4E0EEC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BC4E10E8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v27 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = 16 * v16;
    v21 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v23 = *v21;
    v22 = v21[1];
    v24 = (uint64_t *)(*(_QWORD *)(a4 + 56) + v20);
    v25 = *v24;
    v26 = v24[1];
    *v11 = v23;
    v11[1] = v22;
    v11[2] = v25;
    v11[3] = v26;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v27;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_1BC4E1308()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433A38)
  {
    sub_1BC4E1618(255, &qword_1EF433A40, &qword_1EF42CF80, _s11SizedRecordCMa, (void (*)(void))sub_1BC4E1388);
    sub_1BC4E13E8();
    v0 = sub_1BC62D214();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433A38);
  }
}

unint64_t sub_1BC4E1388()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42CF88;
  if (!qword_1EF42CF88)
  {
    sub_1BC4DE2AC(255, &qword_1EF42CF80, _s11SizedRecordCMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42CF88);
  }
  return result;
}

unint64_t sub_1BC4E13E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433A48;
  if (!qword_1EF433A48)
  {
    sub_1BC4E1618(255, &qword_1EF433A40, &qword_1EF42CF80, _s11SizedRecordCMa, (void (*)(void))sub_1BC4E1388);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEC908], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433A48);
  }
  return result;
}

void sub_1BC4E1450()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433A50)
  {
    sub_1BC4E1618(255, &qword_1EF433A58, &qword_1EF42CF90, _s15SizedValueGroupCMa, (void (*)(void))sub_1BC4E14D0);
    sub_1BC4E1530();
    v0 = sub_1BC62D214();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433A50);
  }
}

unint64_t sub_1BC4E14D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42CF98;
  if (!qword_1EF42CF98)
  {
    sub_1BC4DE2AC(255, &qword_1EF42CF90, _s15SizedValueGroupCMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42CF98);
  }
  return result;
}

unint64_t sub_1BC4E1530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433A60;
  if (!qword_1EF433A60)
  {
    sub_1BC4E1618(255, &qword_1EF433A58, &qword_1EF42CF90, _s15SizedValueGroupCMa, (void (*)(void))sub_1BC4E14D0);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEC908], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433A60);
  }
  return result;
}

void sub_1BC4E1598()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433A68)
  {
    sub_1BC4E1618(255, &qword_1EF433A70, &qword_1EF42CF60, _s10SizedValueCMa, (void (*)(void))sub_1BC4E1690);
    sub_1BC4E16F0();
    v0 = sub_1BC62D214();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433A68);
  }
}

void sub_1BC4E1618(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), void (*a5)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC4DE2AC(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    a5();
    v7 = sub_1BC62D2E0();
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BC4E1690()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF42CF68;
  if (!qword_1EF42CF68)
  {
    sub_1BC4DE2AC(255, &qword_1EF42CF60, _s10SizedValueCMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF42CF68);
  }
  return result;
}

unint64_t sub_1BC4E16F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433A78;
  if (!qword_1EF433A78)
  {
    sub_1BC4E1618(255, &qword_1EF433A70, &qword_1EF42CF60, _s10SizedValueCMa, (void (*)(void))sub_1BC4E1690);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEC908], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433A78);
  }
  return result;
}

void sub_1BC4E1758()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433A80)
  {
    sub_1BC4E17B8();
    sub_1BC4E18F8();
    v0 = sub_1BC62D214();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433A80);
  }
}

void sub_1BC4E17B8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF433A88)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
    sub_1BC4E1850(255, &qword_1EF433A90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC4E18B8(&qword_1EF433A98, &qword_1EF433A90, v0, MEMORY[0x1E0DEAF50]);
    v1 = sub_1BC62D2E0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF433A88);
  }
}

void sub_1BC4E1850(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC34B6A0(255, (unint64_t *)&qword_1EF433A00);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC4E18B8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC4E1850(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC4E18F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433AA0;
  if (!qword_1EF433AA0)
  {
    sub_1BC4E17B8();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEC908], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433AA0);
  }
  return result;
}

uint64_t sub_1BC4E1940(_QWORD *a1, uint64_t a2, char a3, double a4)
{
  uint64_t v4;
  unint64_t v7;
  uint64_t result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v7 = *(_QWORD *)(*(_QWORD *)(v4 + 32) + 16);
  swift_bridgeObjectRetain();
  result = sub_1BC4DDE20(v7, 0.0);
  v9 = (_QWORD *)result;
  v33 = v4;
  v10 = *(_QWORD *)(v4 + 16);
  if (v10 >> 62)
    goto LABEL_46;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v11)
    {
LABEL_39:
      v31 = *(_BYTE *)(v33 + 40);
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 48) = 0;
      *(_BYTE *)(v32 + 56) = 1;
      *(_QWORD *)(v32 + 16) = v10;
      *(_QWORD *)(v32 + 24) = a1;
      *(_QWORD *)(v32 + 32) = v9;
      *(_BYTE *)(v32 + 40) = v31;
      swift_bridgeObjectRetain();
      return v32;
    }
    v12 = v10 & 0xC000000000000001;
    if ((v10 & 0xC000000000000001) == 0
      && (unint64_t)(v11 - 1) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      break;
    }
    v13 = 0;
    v14 = v10 + 32;
    while (1)
    {
      if (v12)
        v16 = (id)MEMORY[0x1BCCF24CC](v13, v10);
      else
        v16 = *(id *)(v14 + 8 * v13);
      v17 = v16;
      v18 = objc_msgSend(v16, sel_string);

      v19 = sub_1BC62C680();
      v21 = v20;

      swift_bridgeObjectRelease();
      v22 = HIBYTE(v21) & 0xF;
      if ((v21 & 0x2000000000000000) == 0)
        v22 = v19 & 0xFFFFFFFFFFFFLL;
      if (!v22)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a1 = sub_1BC4DE3A0(a1);
        if (v13 >= a1[2])
          goto LABEL_43;
        a1[v13 + 4] = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1BC4DE3A0(v9);
        v15 = 0.0;
        if (v13 >= v9[2])
          goto LABEL_44;
        goto LABEL_8;
      }
      if (v13 >= a1[2])
        break;
      v23 = 0.0;
      if ((a3 & 1) == 0 && a2 == v13)
      {
        if (*(_BYTE *)(v33 + 40))
          v23 = a4;
        else
          v23 = 0.0;
      }
      v24 = *(double *)&a1[v13 + 4];
      if (v12)
      {
        v25 = (id)MEMORY[0x1BCCF24CC](v13, v10);
      }
      else
      {
        if (v13 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_45;
        v25 = *(id *)(v14 + 8 * v13);
      }
      v26 = v25;
      objc_msgSend(v25, sel_boundingRectWithSize_options_context_, 1, 0, v24 + v23, 1.79769313e308);
      v28 = v27;
      v30 = v29;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a1 = sub_1BC4DE3A0(a1);
      if (v13 >= a1[2])
        goto LABEL_41;
      *(double *)&a1[v13 + 4] = ceil(v28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_1BC4DE3A0(v9);
      if (v13 >= v9[2])
        goto LABEL_42;
      v15 = ceil(v30);
LABEL_8:
      *(double *)&v9[v13++ + 4] = v15;
      if (v11 == v13)
        goto LABEL_39;
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    v11 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
    if (v11 < 0)
    {
      __break(1u);
      break;
    }
  }
  __break(1u);
  return result;
}

void sub_1BC4E1C7C(double *a1@<X8>)
{
  uint64_t v1;

  sub_1BC4DDD70(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_1BC4E1C98(unint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  double v18;
  double v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v22[4];
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v25 = a2;
  v2 = a1;
  if (a1 >> 62)
    goto LABEL_22;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v4 = MEMORY[0x1E0DEE9D8];
    if (!v3)
      return v4;
    v28 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC3BDA2C(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v6 = 0;
    v4 = v28;
    v26 = v2;
    v27 = v2 & 0xC000000000000001;
    v7 = v25 + 11;
    v24 = (_QWORD *)(v2 + 32);
    while (v6 != v3)
    {
      if (v27)
      {
        v8 = MEMORY[0x1BCCF24CC](v6, v26);
        v9 = v8;
      }
      else
      {
        v9 = v24[v6];
        v8 = swift_retain();
      }
      v10 = 0.0;
      if ((*(_BYTE *)(v9 + 40) & 1) == 0)
      {
        v11 = *(double *)(v9 + 32);
        v12 = v25[14];
        v13 = v25[15];
        __swift_project_boxed_opaque_existential_1Tm(v7, v12);
        v10 = sub_1BC3F4680(v12, v13, v11);
      }
      v2 = (unint64_t)&v23;
      v14 = *(_QWORD *)(v9 + 48);
      MEMORY[0x1E0C80A78](v8);
      v22[2] = v7;
      swift_bridgeObjectRetain();
      v15 = sub_1BC3B158C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BC4E2450, (uint64_t)v22, v14);
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        v17 = (double *)(v15 + 32);
        v18 = 0.0;
        do
        {
          v19 = *v17++;
          v18 = v18 + v19;
          --v16;
        }
        while (v16);
        swift_release();
      }
      else
      {
        swift_release();
        v18 = 0.0;
      }
      swift_bridgeObjectRelease();
      v28 = v4;
      v21 = *(_QWORD *)(v4 + 16);
      v20 = *(_QWORD *)(v4 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1BC3BDA2C(v20 > 1, v21 + 1, 1);
        v4 = v28;
      }
      ++v6;
      *(_QWORD *)(v4 + 16) = v21 + 1;
      *(double *)(v4 + 8 * v21 + 32) = v10 + v18;
      if (v6 == v3)
        return v4;
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    v3 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

