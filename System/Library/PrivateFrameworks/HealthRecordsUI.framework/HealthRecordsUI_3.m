uint64_t _s9SizedDataVwxx(id *a1)
{

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s9SizedDataVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  __int128 v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v20;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v20 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v20;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v5 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v6;
  v7 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  v8 = *(void **)(a2 + 144);
  *(_QWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v9 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v9;
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  v10 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v10;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v11 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v11;
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v12 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v12;
  v13 = v3;
  v14 = v20;
  v15 = v4;
  v16 = v5;
  swift_bridgeObjectRetain();
  v17 = v7;
  v18 = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s9SizedDataVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  __int128 v13;
  void *v14;
  void *v15;
  id v16;
  __int128 v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  v13 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v13;
  v14 = *(void **)(a1 + 80);
  v15 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v15;
  v16 = v15;

  v17 = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = *(void **)(a2 + 120);
  v19 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v18;
  v20 = v18;

  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v21 = *(void **)(a2 + 144);
  v22 = *(void **)(a1 + 144);
  *(_QWORD *)(a1 + 144) = v21;
  v23 = v21;

  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v24 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v24;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v25 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v25;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v26 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v26;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  v27 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v27;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy280_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t _s9SizedDataVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v7 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  v9 = *(void **)(a1 + 144);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);

  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_release();
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  swift_release();
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  swift_release();
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  swift_release();
  return a1;
}

uint64_t _s9SizedDataVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 280))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s9SizedDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 280) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 280) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s9SizedDataVMa()
{
  return &_s9SizedDataVN;
}

void sub_1BC4E2450(double *a1@<X8>)
{
  sub_1BC4E1C7C(a1);
}

uint64_t type metadata accessor for ClinicalSharingAllItemsDataSource()
{
  uint64_t result;

  result = qword_1EF433AC0;
  if (!qword_1EF433AC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC4E24A0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC4E24FC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t result;
  _QWORD v59[2];
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;

  v3 = v2;
  v65 = *v2;
  v6 = sub_1BC62BB34();
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v63 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v59 - v9;
  v71 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v11 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v13 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0DEE9D8];
  v61 = qword_1EF433AA8;
  *(_QWORD *)((char *)v2 + qword_1EF433AA8) = MEMORY[0x1E0DEE9D8];
  v15 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)((char *)v3 + qword_1EF433AB8) = v15;
  swift_beginAccess();
  *(_QWORD *)((char *)v3 + qword_1EF433AB0) = *(_QWORD *)(v15 + 16);
  swift_retain();
  v67 = a2;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v72 = sub_1BC35BB40(v14);
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    v55 = sub_1BC5AF758(v72);
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v3 + v61) = v55;
    swift_release();
    swift_bridgeObjectRelease();
    v56 = swift_bridgeObjectRetain();
    sub_1BC3D1B70(v56);
    swift_bridgeObjectRelease();
    v18 = sub_1BC62B504();
    v26 = *(_QWORD *)(v18 + qword_1EF433AA8);
    if (v26 >> 62)
      goto LABEL_34;
    v57 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v57)
      goto LABEL_28;
LABEL_35:
    swift_release();
    swift_release_n();
    swift_bridgeObjectRelease();
    return v18;
  }
  v60 = v3;
  v18 = 0;
  v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v59[1] = a1;
  v20 = a1 + v19;
  v73 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)&v16 = 136315138;
  v64 = v16;
  v62 = MEMORY[0x1E0DEE9B8] + 8;
  v68 = v13;
  v66 = v10;
  while (1)
  {
    sub_1BC3AFE24(v20, (uint64_t)v13);
    v21 = *((_QWORD *)v13 + 8);
    if (!v21)
    {
      sub_1BC62BAF8();
      v36 = sub_1BC62BB28();
      v37 = sub_1BC62CADC();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc();
        v39 = swift_slowAlloc();
        v74 = v39;
        *(_DWORD *)v38 = v64;
        v40 = sub_1BC62D718();
        *(_QWORD *)(v38 + 4) = sub_1BC4991F0(v40, v41, (uint64_t *)&v74);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC30A000, v36, v37, "[%s] Item did not have a name", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v39, -1, -1);
        MEMORY[0x1BCCF36A8](v38, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v69 + 8))(v10, v70);
      goto LABEL_4;
    }
    v22 = *(_QWORD *)&v13[*(int *)(v71 + 52)];
    if (v22)
      break;
    v42 = v63;
    sub_1BC62BAF8();
    v43 = sub_1BC62BB28();
    v44 = sub_1BC62CADC();
    if (os_log_type_enabled(v43, (os_log_type_t)v44))
    {
      v45 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v74 = v46;
      *(_DWORD *)v45 = v64;
      v47 = sub_1BC62D718();
      *(_QWORD *)(v45 + 4) = sub_1BC4991F0(v47, v48, (uint64_t *)&v74);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v43, (os_log_type_t)v44, "[%s] Item did not have any associate items", (uint8_t *)v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v46, -1, -1);
      MEMORY[0x1BCCF36A8](v45, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v70);
LABEL_23:
    v13 = v68;
LABEL_4:
    sub_1BC3AFE68((uint64_t)v13);
    v20 += v73;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      v3 = v60;
      goto LABEL_26;
    }
  }
  v23 = *((_QWORD *)v13 + 7);
  v24 = v67;
  swift_retain();
  swift_bridgeObjectRetain();
  v25 = sub_1BC4E2C70(v22, v24);
  swift_release();
  v26 = v72;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v74 = v26;
  v29 = sub_1BC558D94(v23, v21);
  v30 = *(_QWORD *)(v26 + 16);
  v31 = (v28 & 1) == 0;
  v32 = v30 + v31;
  if (!__OFADD__(v30, v31))
  {
    v33 = v28;
    if (*(_QWORD *)(v26 + 24) >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v26 = (unint64_t)&v74;
        sub_1BC5A50E8();
      }
    }
    else
    {
      sub_1BC3C28F4(v32, isUniquelyReferenced_nonNull_native);
      v26 = v74;
      v34 = sub_1BC558D94(v23, v21);
      if ((v33 & 1) != (v35 & 1))
        goto LABEL_39;
      v29 = v34;
    }
    v49 = (_QWORD *)v74;
    v72 = v74;
    if ((v33 & 1) != 0)
    {
      v50 = *(_QWORD *)(v74 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v50 + 8 * v29) = v25;
    }
    else
    {
      *(_QWORD *)(v74 + 8 * (v29 >> 6) + 64) |= 1 << v29;
      v51 = (uint64_t *)(v49[6] + 16 * v29);
      *v51 = v23;
      v51[1] = v21;
      *(_QWORD *)(v49[7] + 8 * v29) = v25;
      v52 = v49[2];
      v53 = __OFADD__(v52, 1);
      v54 = v52 + 1;
      if (v53)
        goto LABEL_33;
      v49[2] = v54;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v66;
    goto LABEL_23;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  swift_retain();
  swift_bridgeObjectRetain();
  if (!sub_1BC62D3B8())
    goto LABEL_35;
LABEL_28:
  if ((v26 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1BCCF24CC](0, v26);
LABEL_31:
    swift_bridgeObjectRelease();
    type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
    sub_1BC62B00C();
    swift_release();
    swift_release();
    swift_release_n();
    return v18;
  }
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    goto LABEL_31;
  }
  __break(1u);
LABEL_39:
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

void sub_1BC4E2BA4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC4E2BD0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BC4E2C0C()
{
  sub_1BC62B4F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC4E2C68()
{
  return type metadata accessor for ClinicalSharingAllItemsDataSource();
}

uint64_t sub_1BC4E2C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  char *v22;
  char v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;

  v4 = sub_1BC62B8C4();
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v42 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD79C(0, v9, 0);
    v11 = 0;
    v37 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v12 = *(_QWORD *)(v6 + 72);
    v35 = v12;
    v36 = a1 + v37;
    v30 = v8;
    v31 = a2;
    v32 = v9;
    do
    {
      sub_1BC3AFE24(v36 + v12 * v11, (uint64_t)v8);
      v13 = *(_QWORD *)(a2 + 48);
      v14 = *(_QWORD *)(v13 + 24);
      if (*(_QWORD *)(v14 + 16))
      {
        v38 = v11;
        v15 = &v8[*(int *)(v33 + 48)];
        sub_1BC4E2F8C(&qword_1EF42C7A8, MEMORY[0x1E0D2BF08]);
        swift_retain();
        swift_bridgeObjectRetain();
        v41 = v15;
        v16 = sub_1BC62C5C0();
        v17 = -1 << *(_BYTE *)(v14 + 32);
        v18 = v16 & ~v17;
        if (((*(_QWORD *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
        {
          v34 = v13;
          v19 = ~v17;
          v20 = *(_QWORD *)(v40 + 72);
          v21 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
          while (1)
          {
            v22 = v39;
            v21(v39, *(_QWORD *)(v14 + 48) + v20 * v18, v4);
            sub_1BC4E2F8C(&qword_1EF42D5B0, MEMORY[0x1E0D2BF10]);
            v23 = sub_1BC62C644();
            (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v4);
            if ((v23 & 1) != 0)
              break;
            v18 = (v18 + 1) & v19;
            if (((*(_QWORD *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
            {
              swift_release();
              v24 = 0;
              goto LABEL_12;
            }
          }
          swift_release();
          v24 = 1;
LABEL_12:
          v8 = v30;
          a2 = v31;
        }
        else
        {
          swift_release();
          v24 = 0;
        }
        v9 = v32;
        v11 = v38;
        swift_bridgeObjectRelease();
      }
      else
      {
        v24 = 0;
      }
      v8[49] = v24;
      v10 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC3BD79C(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v42;
      }
      v26 = *(_QWORD *)(v10 + 16);
      v25 = *(_QWORD *)(v10 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1BC3BD79C(v25 > 1, v26 + 1, 1);
        v10 = v42;
      }
      ++v11;
      *(_QWORD *)(v10 + 16) = v26 + 1;
      v27 = v10 + v37 + v26 * v35;
      v12 = v35;
      sub_1BC3AFDE0((uint64_t)v8, v27);
    }
    while (v11 != v9);
  }
  return v10;
}

uint64_t sub_1BC4E2F8C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BC62B8C4();
    result = MEMORY[0x1BCCF35C4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC4E2FD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

Swift::Void __swiftcall AnalyticsManager.postSignedClinicalDataImportEvent(source:action:outcome:)(HealthRecordsUI::SignedClinicalDataImportEvent::SourceType source, HealthRecordsUI::SignedClinicalDataImportEvent::ActionType action, HealthRecordsUI::SignedClinicalDataImportEvent::OutcomeType outcome)
{
  char v3;
  char v4;
  _BYTE *v5;
  _BYTE v6[3];

  v3 = *(_BYTE *)action;
  v4 = *(_BYTE *)outcome;
  v6[0] = *(_BYTE *)source;
  v6[1] = v3;
  v6[2] = v4;
  v5 = v6;
  AnalyticsManager.postSignedClinicalDataImportEvent(_:)((HealthRecordsUI::SignedClinicalDataImportEvent)v5);
}

uint64_t Presentation.funnelContext()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t result;
  uint64_t v12;

  v1 = sub_1BC62AD9C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v5, v0, v1, v3);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v6 == *MEMORY[0x1E0D2A970] || v6 == *MEMORY[0x1E0D2A968])
    return 1;
  if (v6 == *MEMORY[0x1E0D2A9C8])
    return 0;
  if (v6 == *MEMORY[0x1E0D2A9E0])
    return 2;
  if (v6 == *MEMORY[0x1E0D2A9C0] || v6 == *MEMORY[0x1E0D2A9A0])
    return 0;
  if (v6 == *MEMORY[0x1E0D2A980] || v6 == *MEMORY[0x1E0D2A9D0])
    return 3;
  if (v6 == *MEMORY[0x1E0D2A990] || v6 == *MEMORY[0x1E0D2A978])
    return 6;
  if (v6 == *MEMORY[0x1E0D2A9D8])
    return 0;
  if (v6 == *MEMORY[0x1E0D2A998])
    return 7;
  if (v6 == *MEMORY[0x1E0D2A988])
    return 9;
  if (v6 == *MEMORY[0x1E0D2A9E8])
    return 0;
  result = sub_1BC62D394();
  __break(1u);
  return result;
}

uint64_t sub_1BC4E3228(uint64_t result)
{
  switch(result)
  {
    case 0:
      return result;
    case 1:
    case 2:
    case 3:
    case 4:
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
      result = sub_1BC62CED8();
      break;
    default:
      result = sub_1BC62D5C8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t HealthRecordsConceptType.init(rawValue:)(unint64_t a1)
{
  return sub_1BC4D2258(a1);
}

id sub_1BC4E335C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AnalyticsManager()), sel_init);
  qword_1ED6A42A0 = (uint64_t)result;
  return result;
}

id AnalyticsManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static AnalyticsManager.shared.getter()
{
  if (qword_1ED6A3198 != -1)
    swift_once();
  return (id)qword_1ED6A42A0;
}

id AnalyticsManager.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  objc_class *v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;
  uint64_t v19;

  v17 = sub_1BC62CC68();
  v1 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC62CC20();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1BC62C4AC();
  MEMORY[0x1E0C80A78](v6);
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR___CHRAnalyticsManager_queuedEvents] = MEMORY[0x1E0DEE9D8];
  v16 = OBJC_IVAR___CHRAnalyticsManager_managerQueue;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v8 = v0;
  sub_1BC62C494();
  v19 = v7;
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58E8, v5, MEMORY[0x1E0DEF828]);
  sub_1BC357158(0, &qword_1ED6A58B0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC4E65CC();
  sub_1BC62D0A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v17);
  *(_QWORD *)&v0[v16] = sub_1BC62CCA4();
  v8[OBJC_IVAR___CHRAnalyticsManager_optInDetermined] = 0;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  *(_QWORD *)&v8[OBJC_IVAR___CHRAnalyticsManager_healthStore] = v9;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6768]), sel_initWithHealthStore_, v9);
  *(_QWORD *)&v8[OBJC_IVAR___CHRAnalyticsManager_healthRecordsStore] = v10;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB64D0]), sel_initWithHealthStore_, v9);
  *(_QWORD *)&v8[OBJC_IVAR___CHRAnalyticsManager_conceptStore] = v11;

  v12 = (objc_class *)type metadata accessor for AnalyticsManager();
  v18.receiver = v8;
  v18.super_class = v12;
  v13 = objc_msgSendSuper2(&v18, sel_init);
  sub_1BC4E5A28();

  return v13;
}

uint64_t sub_1BC4E371C(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  NSObject *v12;
  char v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  char *v19;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v7 = sub_1BC62C4D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)&v3[OBJC_IVAR___CHRAnalyticsManager_managerQueue];
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF738], v7);
  v12 = v11;
  v13 = sub_1BC62C4F4();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = v3;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1BC4E6678;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_1BC4E6694;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC4E2FD0;
  aBlock[3] = &block_descriptor_43;
  v17 = _Block_copy(aBlock);
  v18 = a3;
  v19 = v3;
  swift_retain();
  swift_release();
  dispatch_sync(v12, v17);
  _Block_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1BC4E38EC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  _QWORD **v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;

  sub_1BC357158(0, &qword_1EF433B50, (uint64_t (*)(uint64_t))sub_1BC4E6A3C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(inited + 32) = 1885697139;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  sub_1BC408D3C(a1);
  v9 = sub_1BC62C650();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = 0x747865746E6F63;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  sub_1BC408EF4(a2);
  v10 = sub_1BC62C650();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = 0x6D614E746E657665;
  *(_QWORD *)(inited + 88) = 0xE900000000000065;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
  *(_QWORD *)(inited + 96) = sub_1BC62CED8();
  v11 = sub_1BC35D018(inited);
  if (a3
    && (v12 = a3,
        v13 = swift_isUniquelyReferenced_nonNull_native(),
        sub_1BC48D278((uint64_t)v12, 0x5579617765746167, 0xEA00000000006C72, v13),
        v12,
        swift_bridgeObjectRelease(),
        (*(_BYTE *)(a4 + OBJC_IVAR___CHRAnalyticsManager_optInDetermined) & 1) == 0))
  {
    v14 = (_QWORD **)(a4 + OBJC_IVAR___CHRAnalyticsManager_queuedEvents);
    swift_beginAccess();
    v15 = *v14;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v14 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = sub_1BC3B69F8(0, v15[2] + 1, 1, v15);
      *v14 = v15;
    }
    v18 = v15[2];
    v17 = v15[3];
    if (v18 >= v17 >> 1)
    {
      v15 = sub_1BC3B69F8((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
      *v14 = v15;
    }
    v15[2] = v18 + 1;
    v15[v18 + 4] = v11;
    swift_endAccess();
  }
  else
  {
    sub_1BC4E6B4C(v11);
  }
  return swift_bridgeObjectRelease();
}

void sub_1BC4E3BB8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  char *v18;
  char v19;
  uint64_t aBlock;
  uint64_t v21;
  uint64_t (*v22)();
  void *v23;
  void (*v24)(void *, uint64_t);
  uint64_t v25;
  id v26;

  if (a4)
  {
    sub_1BC4FC8D8(a4, (uint64_t)&aBlock);
    v19 = aBlock;
    v10 = a1;
    v11 = a2;
    v12 = a3;
    v13 = (void *)v21;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    a3 = v12;
    a2 = v11;
    a1 = v10;
    swift_bridgeObjectRelease();
    if (a5)
    {
LABEL_3:
      v14 = *(void **)&v5[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v5;
      *(_QWORD *)(v15 + 24) = a1;
      *(_QWORD *)(v15 + 32) = a2;
      *(_QWORD *)(v15 + 40) = a3;
      *(_BYTE *)(v15 + 48) = v19;
      v24 = sub_1BC4E66CC;
      v25 = v15;
      aBlock = MEMORY[0x1E0C809B0];
      v21 = 1107296256;
      v22 = sub_1BC4E2FCC;
      v23 = &block_descriptor_9_7;
      v16 = _Block_copy(&aBlock);
      v17 = a5;
      v18 = v5;
      swift_release();
      objc_msgSend(v14, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v17, 0, v16);
      _Block_release(v16);

      return;
    }
  }
  else
  {
    v19 = 11;
    if (a5)
      goto LABEL_3;
  }
  LOBYTE(aBlock) = v19;
  sub_1BC4E4100(a1, a2, a3, (char *)&aBlock, 0);
}

void sub_1BC4E3DEC(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, void *a5)
{
  char *v5;
  char v9;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  _QWORD v16[6];

  v9 = *a4;
  if (a5)
  {
    v11 = *(void **)&v5[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v5;
    *(_QWORD *)(v12 + 24) = a1;
    *(_QWORD *)(v12 + 32) = a2;
    *(_QWORD *)(v12 + 40) = a3;
    *(_BYTE *)(v12 + 48) = v9;
    v16[4] = sub_1BC4E66CC;
    v16[5] = v12;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = sub_1BC4E2FCC;
    v16[3] = &block_descriptor_16;
    v13 = _Block_copy(v16);
    v14 = a5;
    v15 = v5;
    swift_release();
    objc_msgSend(v11, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v14, 0, v13);
    _Block_release(v13);

  }
  else
  {
    LOBYTE(v16[0]) = *a4;
    sub_1BC4E4100(a1, a2, a3, (char *)v16, 0);
  }
}

void sub_1BC4E3F08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  id v10;
  uint64_t v11;
  char v12;
  char v13;

  if (a1)
  {
    v12 = a7;
    v10 = a1;
    if (objc_msgSend(v10, sel_isAdHoc))
      v11 = 1;
    else
      v11 = 2;
    sub_1BC4E4100(a4, a5, a6, &v12, v11);

  }
  else
  {
    v13 = a7;
    sub_1BC4E4100(a4, a5, a6, &v13, 0);
  }
}

uint64_t sub_1BC4E3FA8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  char *v5;
  char v7;
  char v8;

  if (a5)
  {
    v7 = *a4;
    v5 = &v7;
    a5 = 4;
  }
  else
  {
    v8 = *a4;
    v5 = &v8;
  }
  return sub_1BC4E4100(a1, a2, a3, v5, a5);
}

void sub_1BC4E3FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v3 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v3);
  sub_1BC3B226C(a2, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)sub_1BC4E4078 + 4 * byte_1BC644C65[swift_getEnumCaseMultiPayload()];
  __asm { BR              X11 }
}

uint64_t sub_1BC4E4078@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 49) = a1;
  return sub_1BC4E4100(0, 6, v1, (char *)(v2 - 49), 0);
}

uint64_t sub_1BC4E4100(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  char v16;
  NSObject *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v11 = sub_1BC62C4D0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (_QWORD *)((char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v5 + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
  v16 = *a4;
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF738], v11);
  v17 = v15;
  LOBYTE(v15) = sub_1BC62C4F4();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  *(_QWORD *)(v19 + 32) = a5;
  *(_BYTE *)(v19 + 40) = v16;
  *(_QWORD *)(v19 + 48) = a3;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1BC4E6704;
  *(_QWORD *)(v20 + 24) = v19;
  aBlock[4] = sub_1BC4E6E24;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC4E2FD0;
  aBlock[3] = &block_descriptor_26;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v17, v21);
  _Block_release(v21);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_5:
    __break(1u);
  return result;
}

void sub_1BC4E42DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[6];

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
  v10 = (void *)sub_1BC62CED8();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_BYTE *)(v11 + 40) = a4;
  *(_QWORD *)(v11 + 48) = a5;
  v13[4] = sub_1BC4E6B38;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1BC4E4680;
  v13[3] = &block_descriptor_119;
  v12 = _Block_copy(v13);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v12);

}

uint64_t sub_1BC4E43DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;

  v9 = sub_1BC4D1B60(a1);
  v10 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC48D278(v9, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v12 = sub_1BC4D1C9C(a2);
  v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC48D278(v12, 0x747865746E6F63, 0xE700000000000000, v13);
  v24 = v10;
  swift_bridgeObjectRelease();
  v14 = sub_1BC4E3228(a3);
  if (v14)
  {
    v15 = v14;
    v16 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC48D278(v15, 0x54747065636E6F63, 0xEB00000000657079, v16);
    v24 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {

  }
  if (a4 != 11)
  {
    v17 = DisplayCategory.Kind.categoryAnalyticsName.getter();
    if (!v17)
    {

      if (a5 == 1)
        goto LABEL_11;
      goto LABEL_8;
    }
    v18 = v17;
    v19 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC48D278(v18, 0x79726F6765746163, 0xEA00000000004449, v19);
    swift_bridgeObjectRelease();
  }
  if (a5 == 1)
  {
LABEL_11:
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    v21 = sub_1BC62CE90();
    v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC48D278(v21, 0x6E6F69746361, 0xE600000000000000, v22);
    v20 = v24;
    swift_bridgeObjectRelease();
    return v20;
  }
LABEL_8:
  if (!a5)
    goto LABEL_11;

  return v24;
}

id sub_1BC4E4680(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
    v4 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_1BC4E4704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _QWORD aBlock[6];

  v5 = sub_1BC62C4D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF738], v5);
  v10 = v9;
  LOBYTE(v9) = sub_1BC62C4F4();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v12;
    v13[3] = a1;
    v13[4] = a2;
    v14 = *(void **)(v2 + OBJC_IVAR___CHRAnalyticsManager_healthRecordsStore);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1BC4E6770;
    *(_QWORD *)(v15 + 24) = v13;
    aBlock[4] = sub_1BC4E677C;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC4E2FCC;
    aBlock[3] = &block_descriptor_38_1;
    v16 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_fetchIsImproveHealthRecordsDataSubmissionAllowedWithCompletion_, v16);
    _Block_release(v16);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC4E48CC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  char *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v8 = a3 + 16;
  swift_beginAccess();
  v9 = (char *)MEMORY[0x1BCCF37A4](v8);
  if (v9)
  {
    v10 = v9;
    if ((a1 & 1) != 0)
    {
      v11 = *(NSObject **)&v9[OBJC_IVAR___CHRAnalyticsManager_managerQueue];
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = a4;
      *(_QWORD *)(v12 + 24) = a5;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = sub_1BC4E6AF8;
      *(_QWORD *)(v13 + 24) = v12;
      aBlock[4] = sub_1BC4E6E24;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC4E2FD0;
      aBlock[3] = &block_descriptor_107;
      v14 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      dispatch_sync(v11, v14);

      _Block_release(v14);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        __break(1u);
    }
    else
    {

    }
  }
}

void sub_1BC4E4A34(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[6];

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
  v4 = (void *)sub_1BC62CED8();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v7[4] = sub_1BC4E6B20;
  v7[5] = v5;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1BC4E4680;
  v7[3] = &block_descriptor_113;
  v6 = _Block_copy(v7);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v6);

}

uint64_t sub_1BC4E4B14(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;

  if (a1 > 1
    || (sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800),
        v3 = sub_1BC62CED8(),
        v4 = MEMORY[0x1E0DEE9E0],
        v5 = swift_isUniquelyReferenced_nonNull_native(),
        sub_1BC48D278(v3, 0x6E6F69746361, 0xE600000000000000, v5),
        swift_bridgeObjectRelease(),
        a2))
  {
    result = sub_1BC62D5C8();
    __break(1u);
  }
  else
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
    v6 = sub_1BC62CED8();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC48D278(v6, 0x747865746E6F63, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

uint64_t sub_1BC4E4C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[6];

  v6 = v5;
  v9 = *a5;
  v10 = *((_BYTE *)a5 + 8);
  result = sub_1BC62BA50();
  if ((result & 1) != 0)
  {
    v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = a3;
    *(_QWORD *)(v13 + 32) = a4;
    *(_QWORD *)(v13 + 40) = v9;
    *(_BYTE *)(v13 + 48) = v10;
    v14 = *(void **)(v6 + OBJC_IVAR___CHRAnalyticsManager_healthRecordsStore);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1BC4E67A8;
    *(_QWORD *)(v15 + 24) = v13;
    v17[4] = sub_1BC4E6ECC;
    v17[5] = v15;
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 1107296256;
    v17[2] = sub_1BC4E2FCC;
    v17[3] = &block_descriptor_49_0;
    v16 = _Block_copy(v17);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_fetchIsImproveHealthRecordsDataSubmissionAllowedWithCompletion_, v16);
    _Block_release(v16);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1BC4E4DEC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v12 = a3 + 16;
  swift_beginAccess();
  v13 = MEMORY[0x1BCCF37A4](v12);
  if (v13)
  {
    v14 = (void *)v13;
    if ((a1 & 1) != 0)
    {
      v15 = 1;
      if (a6)
        v15 = 2;
      if (a6 == 1)
        v15 = 0;
      if ((a7 & 1) != 0)
        v16 = 2;
      else
        v16 = v15;
      sub_1BC4E4E90(a4, a5, v16);
    }

  }
}

uint64_t sub_1BC4E4E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  NSObject *v12;
  char v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v7 = sub_1BC62C4D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v3 + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF738], v7);
  v12 = v11;
  v13 = sub_1BC62C4F4();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1BC4E67C8;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_1BC4E6E24;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC4E2FD0;
  aBlock[3] = &block_descriptor_59;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v12, v17);
  _Block_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_5:
    __break(1u);
  return result;
}

void sub_1BC4E5050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  _QWORD *v7;
  void *v8;
  _QWORD v9[6];

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
  v6 = (void *)sub_1BC62CED8();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v9[4] = sub_1BC4E6ADC;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1BC4E4680;
  v9[3] = &block_descriptor_97_0;
  v8 = _Block_copy(v9);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v8);

}

uint64_t sub_1BC4E5138(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t result;

  v5 = sub_1BC4D20F4(a1);
  v6 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC48D278(v5, 0xD000000000000010, 0x80000001BC65EED0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  if (a2 <= 1
    && ((sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800),
         v8 = sub_1BC62CED8(),
         v9 = swift_isUniquelyReferenced_nonNull_native(),
         sub_1BC48D278(v8, 0x657079546D6F6F72, 0xE800000000000000, v9),
         swift_bridgeObjectRelease(),
         a3 == 2)
     || a3 == 1
     || !a3))
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
    v10 = sub_1BC62CED8();
    v11 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC48D278(v10, 0xD000000000000013, 0x80000001BC65EF00, v11);
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    result = sub_1BC62D5C8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC4E5384(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  NSObject *v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v7 = sub_1BC62C4D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v3 + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF738], v7);
  v12 = v11;
  v13 = sub_1BC62C4F4();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  *(_BYTE *)(v15 + 32) = a3 & 1;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1BC4E67F4;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_1BC4E6E24;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC4E2FD0;
  aBlock[3] = &block_descriptor_69_0;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v12, v17);
  _Block_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_5:
    __break(1u);
  return result;
}

void sub_1BC4E5548(uint64_t a1, uint64_t a2, char a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
  v6 = (void *)sub_1BC62CED8();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_BYTE *)(v7 + 32) = a3;
  v9[4] = sub_1BC4E6AC0;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1BC4E4680;
  v9[3] = &block_descriptor_91_0;
  v8 = _Block_copy(v9);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v8);

}

uint64_t sub_1BC4E5630(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char v9;
  id v10;
  char v11;
  uint64_t result;

  if (a1 > 1)
  {
    result = sub_1BC62D5C8();
    __break(1u);
  }
  else
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
    v5 = sub_1BC62CED8();
    v6 = MEMORY[0x1E0DEE9E0];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC48D278(v5, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    v8 = sub_1BC6147B4(a2);
    v9 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC48D278(v8, 0x747865746E6F63, 0xE700000000000000, v9);
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, a3 & 1);
    v11 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BC48D278((uint64_t)v10, 0x6E6F69746361, 0xE600000000000000, v11);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t sub_1BC4E5824(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  unsigned int *v15;
  uint64_t v17;

  v2 = sub_1BC62B780();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62B78C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC62B7A4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v7 + 104))(v9, *MEMORY[0x1E0D2B950], v6, v12);
  v15 = (unsigned int *)MEMORY[0x1E0D2B928];
  if ((a1 & 1) == 0)
    v15 = (unsigned int *)MEMORY[0x1E0D2B940];
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *v15, v2);
  sub_1BC62B798();
  sub_1BC347F0C(&qword_1EF433B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B968], MEMORY[0x1E0D2B920]);
  sub_1BC62AC34();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

void sub_1BC4E59C4(void *a1, uint64_t a2, void (*a3)(_QWORD))
{
  id v4;

  if (a1)
  {
    v4 = a1;
    ((void (*)(id, _QWORD))a3)(objc_msgSend(v4, sel_BOOLValue), 0);

  }
  else
  {
    a3(2);
  }
}

uint64_t sub_1BC4E5A28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  _QWORD v6[6];

  v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v2 = *(void **)(v0 + OBJC_IVAR___CHRAnalyticsManager_healthRecordsStore);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1BC4E6DB8;
  *(_QWORD *)(v3 + 24) = v1;
  v6[4] = sub_1BC4E6ECC;
  v6[5] = v3;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1BC4E2FCC;
  v6[3] = &block_descriptor_133;
  v4 = _Block_copy(v6);
  swift_retain_n();
  swift_release();
  objc_msgSend(v2, sel_fetchIsImproveHealthRecordsDataSubmissionAllowedWithCompletion_, v4);
  _Block_release(v4);
  return swift_release_n();
}

uint64_t sub_1BC4E5B24(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD aBlock[6];

  v4 = a3 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCF37A4](v4);
  if (result)
  {
    v6 = (void *)result;
    v7 = *(NSObject **)(result + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *(_BYTE *)(v8 + 24) = a1;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = sub_1BC4E6E08;
    *(_QWORD *)(v9 + 24) = v8;
    aBlock[4] = sub_1BC4E6E24;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC4E2FD0;
    aBlock[3] = &block_descriptor_143;
    v10 = _Block_copy(aBlock);
    v11 = v6;
    swift_retain();
    swift_release();
    dispatch_sync(v7, v10);

    _Block_release(v10);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v7 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1BC4E5C84(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  void *v10;
  id v11;
  unint64_t v12;
  _QWORD *v13;
  char v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  _QWORD *aBlock;
  uint64_t v54;
  id (*v55)(uint64_t);
  void *v56;
  uint64_t (*v57)();
  uint64_t v58;

  *(_BYTE *)(result + OBJC_IVAR___CHRAnalyticsManager_optInDetermined) = a2 != 2;
  if (a2 == 2)
    return result;
  v2 = result + OBJC_IVAR___CHRAnalyticsManager_queuedEvents;
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (!v4)
  {
LABEL_41:
    *(_QWORD *)v2 = MEMORY[0x1E0DEE9D8];
    return swift_bridgeObjectRelease();
  }
  v50 = v2;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v7 = *(_QWORD *)(v3 + 8 * v5 + 32);
    if (!*(_QWORD *)(v7 + 16))
      goto LABEL_5;
    swift_bridgeObjectRetain();
    v8 = sub_1BC558D94(0x6D614E746E657665, 0xE900000000000065);
    if ((v9 & 1) != 0)
    {
      v10 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v8);
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        aBlock = 0;
        v54 = 0;
        v11 = v10;
        sub_1BC62C674();

        if (v54)
          break;
      }
    }
    swift_bridgeObjectRelease();
LABEL_5:
    if (v4 == ++v5)
    {
      swift_bridgeObjectRelease();
      v2 = v50;
      goto LABEL_41;
    }
  }
  if (!*(_QWORD *)(v7 + 16))
  {
    v13 = v6;
    goto LABEL_39;
  }
  v12 = sub_1BC558D94(1885697139, 0xE400000000000000);
  v13 = v6;
  if ((v14 & 1) == 0)
    goto LABEL_25;
  v51 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v12);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  aBlock = v6;
  v17 = sub_1BC558D94(1885697139, 0xE400000000000000);
  v18 = v6;
  v19 = v6[2];
  v20 = (v16 & 1) == 0;
  v21 = v19 + v20;
  if (!__OFADD__(v19, v20))
  {
    v22 = v16;
    if (v18[3] >= v21)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v13 = aBlock;
        if ((v16 & 1) == 0)
          goto LABEL_22;
      }
      else
      {
        sub_1BC5A70D8();
        v13 = aBlock;
        if ((v22 & 1) == 0)
          goto LABEL_22;
      }
    }
    else
    {
      sub_1BC3C6ABC(v21, isUniquelyReferenced_nonNull_native);
      v23 = sub_1BC558D94(1885697139, 0xE400000000000000);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_47;
      v17 = v23;
      v13 = aBlock;
      if ((v22 & 1) == 0)
      {
LABEL_22:
        v13[(v17 >> 6) + 8] |= 1 << v17;
        v27 = (_QWORD *)(v13[6] + 16 * v17);
        *v27 = 1885697139;
        v27[1] = 0xE400000000000000;
        v26 = v51;
        *(_QWORD *)(v13[7] + 8 * v17) = v51;
        v28 = v13[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_45;
        v13[2] = v30;
LABEL_24:
        v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];

        swift_bridgeObjectRelease();
LABEL_25:
        if (!*(_QWORD *)(v7 + 16))
          goto LABEL_39;
        v31 = sub_1BC558D94(0x747865746E6F63, 0xE700000000000000);
        if ((v32 & 1) == 0)
          goto LABEL_39;
        v52 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v31);
        v33 = swift_isUniquelyReferenced_nonNull_native();
        aBlock = v13;
        v35 = sub_1BC558D94(0x747865746E6F63, 0xE700000000000000);
        v36 = v13[2];
        v37 = (v34 & 1) == 0;
        v38 = v36 + v37;
        if (__OFADD__(v36, v37))
          goto LABEL_44;
        v39 = v34;
        if (v13[3] >= v38)
        {
          if ((v33 & 1) != 0)
          {
            v13 = aBlock;
            if ((v34 & 1) == 0)
              goto LABEL_36;
          }
          else
          {
            sub_1BC5A70D8();
            v13 = aBlock;
            if ((v39 & 1) == 0)
              goto LABEL_36;
          }
        }
        else
        {
          sub_1BC3C6ABC(v38, v33);
          v40 = sub_1BC558D94(0x747865746E6F63, 0xE700000000000000);
          if ((v39 & 1) != (v41 & 1))
            goto LABEL_47;
          v35 = v40;
          v13 = aBlock;
          if ((v39 & 1) == 0)
          {
LABEL_36:
            v13[(v35 >> 6) + 8] |= 1 << v35;
            v44 = (_QWORD *)(v13[6] + 16 * v35);
            *v44 = 0x747865746E6F63;
            v44[1] = 0xE700000000000000;
            v43 = v52;
            *(_QWORD *)(v13[7] + 8 * v35) = v52;
            v45 = v13[2];
            v29 = __OFADD__(v45, 1);
            v46 = v45 + 1;
            if (v29)
              goto LABEL_46;
            v13[2] = v46;
LABEL_38:
            v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];

            swift_bridgeObjectRelease();
LABEL_39:
            v47 = (void *)sub_1BC62C650();
            swift_bridgeObjectRelease();
            v48 = swift_allocObject();
            *(_QWORD *)(v48 + 16) = v13;
            v57 = sub_1BC4E6E80;
            v58 = v48;
            aBlock = (_QWORD *)MEMORY[0x1E0C809B0];
            v54 = 1107296256;
            v55 = sub_1BC4E4680;
            v56 = &block_descriptor_150;
            v49 = _Block_copy(&aBlock);
            swift_release();
            AnalyticsSendEventLazy();
            _Block_release(v49);
            swift_bridgeObjectRelease();

            goto LABEL_5;
          }
        }
        v42 = v13[7];

        v43 = v52;
        *(_QWORD *)(v42 + 8 * v35) = v52;
        goto LABEL_38;
      }
    }
    v25 = v13[7];

    v26 = v51;
    *(_QWORD *)(v25 + 8 * v17) = v51;
    goto LABEL_24;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  result = sub_1BC62D5EC();
  __break(1u);
  return result;
}

id AnalyticsManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalyticsManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall AnalyticsManager.postSignedClinicalDataImportEvent(_:)(HealthRecordsUI::SignedClinicalDataImportEvent a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  char v9;
  void *v10;
  char v11;
  NSObject *v12;
  _BYTE *v13;
  uint64_t v14;
  void *v15;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v2 = *(char **)&a1.source;
  v3 = sub_1BC62C4D0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (_QWORD *)((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *v2;
  v9 = v2[1];
  v10 = *(void **)(v1 + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
  v11 = v2[2];
  *v7 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, *MEMORY[0x1E0DEF738], v3, v5);
  v12 = v10;
  LOBYTE(v10) = sub_1BC62C4F4();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v13 = (_BYTE *)swift_allocObject();
  v13[16] = v8;
  v13[17] = v9;
  v13[18] = v11;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BC4E6820;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_1BC4E6E24;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC4E2FD0;
  aBlock[3] = &block_descriptor_79_0;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);
  _Block_release(v15);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_5:
    __break(1u);
}

void sub_1BC4E642C(unsigned int a1)
{
  unsigned int v2;
  void *v3;
  _BYTE *v4;
  void *v5;
  _QWORD v6[6];

  v2 = a1 >> 8;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
  v3 = (void *)sub_1BC62CED8();
  v4 = (_BYTE *)swift_allocObject();
  v4[16] = a1;
  v4[17] = v2;
  v4[18] = BYTE2(a1) & 1;
  v6[4] = sub_1BC4E6A18;
  v6[5] = v4;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1BC4E4680;
  v6[3] = &block_descriptor_85;
  v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);

}

unint64_t sub_1BC4E6518()
{
  uint64_t inited;
  uint64_t v1;

  sub_1BC357158(0, &qword_1EF433B50, (uint64_t (*)(uint64_t))sub_1BC4E6A3C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC639590;
  *(_QWORD *)(inited + 32) = 0x6E6F69746361;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  SignedClinicalDataImportEvent.eventDescription.getter();
  v1 = sub_1BC62C650();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v1;
  return sub_1BC35D018(inited);
}

unint64_t sub_1BC4E65CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A58B8;
  if (!qword_1ED6A58B8)
  {
    sub_1BC357158(255, &qword_1ED6A58B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A58B8);
  }
  return result;
}

uint64_t type metadata accessor for AnalyticsManager()
{
  return objc_opt_self();
}

uint64_t sub_1BC4E664C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC4E6678()
{
  uint64_t v0;

  return sub_1BC4E38EC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BC4E6684()
{
  return swift_deallocObject();
}

uint64_t sub_1BC4E6694()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t sub_1BC4E66D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC4E66F4()
{
  return swift_deallocObject();
}

void sub_1BC4E6704()
{
  uint64_t v0;

  sub_1BC4E42DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1BC4E6718()
{
  return swift_deallocObject();
}

uint64_t sub_1BC4E6728()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC4E674C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC4E6770(char a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1BC4E48CC(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_1BC4E677C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC4E59C4(a1, a2, *(void (**)(_QWORD))(v2 + 16));
}

uint64_t sub_1BC4E6784()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC4E67A8(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC4E4DEC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_BYTE *)(v2 + 48));
}

uint64_t sub_1BC4E67B8()
{
  return swift_deallocObject();
}

void sub_1BC4E67C8()
{
  uint64_t *v0;

  sub_1BC4E5050(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BC4E67D4()
{
  return swift_deallocObject();
}

uint64_t sub_1BC4E67E4()
{
  return swift_deallocObject();
}

void sub_1BC4E67F4()
{
  uint64_t v0;

  sub_1BC4E5548(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_1BC4E6800()
{
  return swift_deallocObject();
}

uint64_t sub_1BC4E6810()
{
  return swift_deallocObject();
}

void sub_1BC4E6820()
{
  unsigned __int8 *v0;
  int v1;

  if (v0[18])
    v1 = 0x10000;
  else
    v1 = 0;
  sub_1BC4E642C(v1 | (v0[17] << 8) | v0[16]);
}

uint64_t sub_1BC4E6844()
{
  return swift_deallocObject();
}

unint64_t sub_1BC4E6858()
{
  unint64_t result;

  result = qword_1EF433B48;
  if (!qword_1EF433B48)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for HealthRecordsConceptType, &type metadata for HealthRecordsConceptType);
    atomic_store(result, (unint64_t *)&qword_1EF433B48);
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthRecordsConceptType()
{
  return &type metadata for HealthRecordsConceptType;
}

uint64_t method lookup function for AnalyticsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnalyticsManager.submitAndFlushQueuedEvents()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AnalyticsManager.postOnboardingFunnelEvent(step:context:gatewayUrl:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AnalyticsManager.postUserInteractionEvent(type:context:action:category:conceptIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AnalyticsManager.postUserInteractionEvent(type:context:action:categoryKind:conceptIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AnalyticsManager.postUserInteractionEvent(type:context:action:categoryKind:userConcept:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of AnalyticsManager.postUserInteractionEvent(action:browseCategory:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AnalyticsManager.postUserInteractionEvent(type:context:action:categoryKind:conceptType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of AnalyticsManager.postLabSearchEvent(action:context:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of AnalyticsManager.postPinLabEventIfNeeded(for:conceptManager:userActionType:room:configuration:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of AnalyticsManager.postPinLabEvent(userActionType:roomType:categoryRoomContext:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of AnalyticsManager.postPrivacyInteractionEvent(type:context:action:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of AnalyticsManager.postNotificationAlertResponseEvent(didTapSettings:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t sub_1BC4E6A08()
{
  return swift_deallocObject();
}

unint64_t sub_1BC4E6A18()
{
  return sub_1BC4E6518();
}

void sub_1BC4E6A3C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF433B58)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A4E60);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF433B58);
  }
}

uint64_t sub_1BC4E6AB0()
{
  return swift_deallocObject();
}

uint64_t sub_1BC4E6AC0()
{
  uint64_t v0;

  return sub_1BC4E5630(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_1BC4E6ACC()
{
  return swift_deallocObject();
}

uint64_t sub_1BC4E6ADC()
{
  uint64_t v0;

  return sub_1BC4E5138(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BC4E6AE8()
{
  return swift_deallocObject();
}

void sub_1BC4E6AF8()
{
  uint64_t v0;

  sub_1BC4E4A34(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC4E6B00()
{
  return swift_deallocObject();
}

uint64_t sub_1BC4E6B10()
{
  return swift_deallocObject();
}

uint64_t sub_1BC4E6B20()
{
  uint64_t v0;

  return sub_1BC4E4B14(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC4E6B28()
{
  return swift_deallocObject();
}

uint64_t sub_1BC4E6B38()
{
  uint64_t v0;

  return sub_1BC4E43DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_1BC4E6B4C(uint64_t a1)
{
  unint64_t v2;
  char v3;
  void *v4;
  id v5;

  if (*(_QWORD *)(a1 + 16))
  {
    v2 = sub_1BC558D94(0x6D614E746E657665, 0xE900000000000065);
    if ((v3 & 1) != 0)
    {
      v4 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v2);
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        v5 = v4;
        sub_1BC62C674();

      }
    }
  }
}

uint64_t sub_1BC4E6D8C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC4E6DB0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC4E6DB8(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC4E5B24(a1, a2, v2);
}

uint64_t sub_1BC4E6DC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4E6DE4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC4E6E08()
{
  uint64_t v0;

  return sub_1BC4E5C84(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1BC4E6E14()
{
  return swift_deallocObject();
}

id AllergyReactionFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1BC4E6F34(unint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;

  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BC442B94(a1, (uint64_t)v3);

  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BC4E6F9C(unint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;

  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BC4E7DF4(a1, (uint64_t)v3);

  swift_bridgeObjectRelease();
  return v4;
}

id AllergyReactionFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store);
}

uint64_t AllergyReactionFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context);
}

id AllergyReactionFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for AllergyReactionFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1BC4E7068(void *a1)
{
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context) < 2uLL)
    return sub_1BC4E7B4C(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC4E716C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v25[2];
  void *v26;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25[-1] - v3;
  v5 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC6395A0;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v7 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v8 = sub_1BC62A4A8();
  v10 = v9;
  swift_bridgeObjectRelease();

  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1BC3644C0();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v10;
  v13 = objc_msgSend(a1, sel_onsetDate);
  if (!v13)
  {
    v17 = (uint64_t *)(v6 + 72);
    *(_QWORD *)(v6 + 96) = v11;
    *(_QWORD *)(v6 + 104) = v12;
    goto LABEL_7;
  }
  v14 = v13;
  v26 = v13;
  sub_1BC4E7478(&v26, v25);

  v15 = v25[0];
  v16 = v25[1];
  v17 = (uint64_t *)(v6 + 72);
  *(_QWORD *)(v6 + 96) = v11;
  *(_QWORD *)(v6 + 104) = v12;
  if (!v16)
  {
LABEL_7:
    v18 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v19 = sub_1BC62A4A8();
    v16 = v20;
    swift_bridgeObjectRelease();

    *v17 = v19;
    goto LABEL_8;
  }
  *v17 = v15;
LABEL_8:
  *(_QWORD *)(v6 + 80) = v16;
  v21 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v22 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v4);
  return v22;
}

uint64_t sub_1BC4E7478@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;

  v26 = a2;
  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - v4;
  v6 = *a1;
  v7 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC6395A0;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v9 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v10 = sub_1BC62A4A8();
  v12 = v11;
  swift_bridgeObjectRelease();

  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1BC3644C0();
  *(_QWORD *)(v8 + 64) = v14;
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = v12;
  v15 = objc_msgSend(v6, sel_displayString);
  v16 = sub_1BC62C680();
  v18 = v17;

  *(_QWORD *)(v8 + 96) = v13;
  *(_QWORD *)(v8 + 104) = v14;
  *(_QWORD *)(v8 + 72) = v16;
  *(_QWORD *)(v8 + 80) = v18;
  v19 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v20 = sub_1BC62C6A4();
  v22 = v21;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1BC3B3154((uint64_t)v5);
  v24 = v26;
  *v26 = v20;
  v24[1] = v22;
  return result;
}

id AllergyReactionFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AllergyReactionFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AllergyReactionFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AllergyReactionFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC4E77BC()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store);
}

uint64_t sub_1BC4E77D0()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context);
}

id sub_1BC4E77E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for AllergyReactionFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1BC4E7854(void *a1)
{
  _QWORD *v1;
  uint64_t result;

  if (*(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context) < 2uLL)
    return sub_1BC4E7B4C(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

id sub_1BC4E78A8(void *a1)
{
  unint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  _BYTE v18[16];
  void *v19;

  v2 = sub_1BC39CBE4();
  v19 = a1;
  v3 = a1;
  v4 = sub_1BC506DE4(v3);

  v5 = Array<A>.newlineJoined.getter(v4);
  v7 = v6;
  swift_bridgeObjectRelease();
  v8 = (id)sub_1BC4AB44C(v5, v7, v2, sub_1BC4E8040, v18);
  if (!v8)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v9 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v10 = sub_1BC62A4A8();
    v12 = v11;
    swift_bridgeObjectRelease();

    v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v13 = v10 & 0xFFFFFFFFFFFFLL;
    if (!v13)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v8 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init, 0xE000000000000000);
    objc_msgSend(v8, sel_setDisplayItemType_, 15);
    v14 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v15 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setTitle_, v15, 0xE000000000000000);

    v16 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setSubtitle_, v16);

    objc_msgSend(v8, sel_setSeparatorStyle_, 0);
    objc_msgSend(v8, sel_setSeparatorHidden_, 0);
    objc_msgSend(v8, sel_setExtraTopPadding_, 0);

  }
  objc_msgSend(v8, sel_setSeparatorStyle_, 1);
  return v8;
}

uint64_t sub_1BC4E7B4C(void *a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v2 = sub_1BC4E78A8(a1);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v3 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC39CBE4();
  swift_bridgeObjectRetain();
  v4 = a1;
  v5 = sub_1BC506DF0(v4);
  v7 = v6;

  v8 = sub_1BC4AB450(v5, v7);
  swift_bridgeObjectRelease();
  if (!v8)
  {
    v9 = (void *)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v10 = v9;
    swift_bridgeObjectRetain();
    v11 = sub_1BC62A4A8();
    v13 = v12;
    swift_bridgeObjectRelease();

    v8 = sub_1BC4AB450(v11, v13);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v15 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    MEMORY[0x1BCCF1B30](v2);
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v8)
  {
    MEMORY[0x1BCCF1B30](v8);
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  return v15;
}

uint64_t sub_1BC4E7DF4(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_12:
  swift_bridgeObjectRetain();
  v4 = sub_1BC62D3B8();
  if (!v4)
    goto LABEL_13;
LABEL_3:
  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context);
  for (i = 4; ; ++i)
  {
    a2 = i - 4;
    if ((a1 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x1BCCF24CC](i - 4, a1);
    else
      v7 = *(id *)(a1 + 8 * i);
    v8 = v7;
    v9 = i - 3;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    if (v5 >= 2)
      break;
    v10 = sub_1BC4E7B4C(v7);

    sub_1BC3BB208(v10);
    if (v9 == v4)
    {
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AllergyReactionFormatter()
{
  return objc_opt_self();
}

unint64_t sub_1BC4E7F70(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC4E7F94();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC4E7F94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433BB0;
  if (!qword_1EF433BB0)
  {
    v1 = type metadata accessor for AllergyReactionFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433BB0);
  }
  return result;
}

uint64_t method lookup function for AllergyReactionFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AllergyReactionFormatter.structuredItems(from:country:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AllergyReactionFormatter.displayItems(from:country:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AllergyReactionFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BC4E8040()
{
  uint64_t v0;

  return sub_1BC4E716C(*(void **)(v0 + 16));
}

uint64_t type metadata accessor for UserDomainConceptDetailViewController()
{
  uint64_t result;

  result = qword_1EF433BF8;
  if (!qword_1EF433BF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC4E8084()
{
  return swift_initClassMetadata2();
}

void sub_1BC4E80E0()
{
  sub_1BC62D394();
  __break(1u);
}

void sub_1BC4E8138()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  _QWORD *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  objc_super v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = *(void **)&v0[qword_1EF433BE8];
  v3 = *(void **)&v0[qword_1EF433BE0];
  v4 = *(_QWORD *)&v0[qword_1EF433BF0];
  v5 = type metadata accessor for UserDomainConceptDetailDataSourceProvider();
  swift_allocObject();
  v6 = v2;
  v7 = v3;
  swift_retain();
  v8 = sub_1BC4EAEEC(v6, v7, v4);

  swift_release();
  v17 = v5;
  v18 = sub_1BC347F0C(&qword_1EF433C48, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptDetailDataSourceProvider, (uint64_t)&unk_1BC644F1C);
  v16 = v8;
  sub_1BC62B7E0();
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for UserDomainConceptDetailViewController();
  objc_msgSendSuper2(&v15, sel_viewDidLoad);
  v9 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v9, sel_setLargeTitleDisplayMode_, 2);

  v10 = objc_msgSend(v1, sel_navigationItem);
  v11 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v12 = objc_msgSend(v11, sel_preferredLocalizations);

  v13 = sub_1BC62C878();
  HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v13);
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setTitle_, v14);

}

void sub_1BC4E8334(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC4E8138();

}

id sub_1BC4E8368()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    sub_1BC62B7C8();
    sub_1BC62B7BC();
    swift_allocObject();
    return (id)sub_1BC62B7B0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BC4E83E8()
{
  void *v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  void *v6;
  __int128 v7[2];
  uint64_t v8;
  __int128 v9;
  _QWORD v10[4];

  sub_1BC62B7EC();
  v1 = (void (*)(void))sub_1BC62B7F8();
  v1();
  sub_1BC62B7C8();
  v2 = sub_1BC62B4BC();
  swift_release();
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return (id)swift_bridgeObjectRelease();
  sub_1BC3B9914(0, (unint64_t *)&qword_1EF42A0F8);
  sub_1BC3B9914(0, &qword_1EF433C50);
  v4 = 0;
  while (1)
  {
    v9 = *(_OWORD *)(v2 + 16 * v4 + 32);
    swift_unknownObjectRetain_n();
    if ((swift_dynamicCast() & 1) != 0)
      break;
    v8 = 0;
    memset(v7, 0, sizeof(v7));
    swift_unknownObjectRelease();
    sub_1BC4E8B5C((uint64_t)v7, &qword_1EF433C58, &qword_1EF433C50);
LABEL_4:
    if (v3 == ++v4)
      return (id)swift_bridgeObjectRelease();
  }
  sub_1BC34E718(v7, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
  result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    v6 = result;
    sub_1BC62B570();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

void sub_1BC4E85B8(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  __int128 *v5;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[40];

  v2 = (void *)sub_1BC62A928();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_1BC62A928();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1BC62B7C8();
    sub_1BC62B4EC();
    sub_1BC62B060();
    swift_release();
    sub_1BC34E674((uint64_t)v11, (uint64_t)v8);
    sub_1BC3B9914(0, (unint64_t *)&qword_1EF42ADC0);
    sub_1BC3B9914(0, &qword_1EF429AE0);
    if (swift_dynamicCast())
    {
      v5 = v6;
LABEL_6:
      sub_1BC34E718(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
      sub_1BC62B1BC();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      return;
    }
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1BC4E8B5C((uint64_t)v6, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
    *(_QWORD *)&v6[0] = v4;
    sub_1BC3658C0();
    v4 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v8;
      goto LABEL_6;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_1BC4E8B5C((uint64_t)v8, (unint64_t *)&qword_1EF429AE8, &qword_1EF429AE0);
  }
}

uint64_t sub_1BC4E87D8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC62A970();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v9 = a3;
  v10 = a1;
  sub_1BC4E85B8(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BC4E8888()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC4E88B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC4E88E4()
{
  uint64_t v0;

  return swift_release();
}

id sub_1BC4E8920()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UserDomainConceptDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC4E8954(uint64_t a1)
{

  return swift_release();
}

uint64_t sub_1BC4E899C()
{
  return type metadata accessor for UserDomainConceptDetailViewController();
}

id sub_1BC4E89A4(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  objc_super v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)&v2[qword_1EF433BE0] = a2;
  *(_QWORD *)&v2[qword_1EF433BE8] = a1;
  v5 = qword_1ED6A4878;
  v6 = v2;
  v7 = a2;
  v8 = a1;
  if (v5 != -1)
    swift_once();
  v9 = qword_1ED6A54F0;
  v10 = objc_msgSend(v7, sel_healthStore);
  v11 = objc_msgSend(v10, sel_profileIdentifier);

  v16 = *(_QWORD *)(v9 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v12);
  sub_1BC62AA6C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  sub_1BC62BA74();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v13, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();

  swift_release();
  *(_QWORD *)&v6[qword_1EF433BF0] = v17;

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for UserDomainConceptDetailViewController();
  return objc_msgSendSuper2(&v15, sel_initWithCollectionViewLayout_, 0);
}

uint64_t sub_1BC4E8B5C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_1BC4E8B98(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BC4E8B98(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC3B9914(255, a3);
    v4 = sub_1BC62CFE0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t HKDiagnosticTestResult.unitString.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_value);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(), sel__unitStringForValueCollection_, v1);
  v4 = sub_1BC62C680();

  return v4;
}

BOOL TestResultRepresentable.displaysMultipleValues.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = *(_QWORD *)((*(uint64_t (**)(void))(a2 + 80))() + 16);
  swift_bridgeObjectRelease();
  return v2 > 1;
}

id HKDiagnosticTestResult.valueString.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD v29[2];

  v1 = sub_1BC62A2BC();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_value, v3);
  if (v6
    && (v7 = v6, v8 = objc_msgSend(v6, sel_inspectableValue), v7, v8)
    && (v9 = objc_msgSend(v8, sel_codedValueCollection), v8, v9)
    && (v10 = objc_msgSend(v9, sel_canonicalBloodPressureDisplay),
        v9,
        v10))
  {
    v11 = (id)sub_1BC62C680();

  }
  else
  {
    v12 = objc_msgSend(v0, sel_value);
    if (!v12)
      goto LABEL_8;
    v13 = v12;
    v14 = objc_msgSend(v12, sel_displayString);

    sub_1BC62C680();
    v15 = sub_1BC62C710();
    v17 = v16;
    swift_bridgeObjectRelease();
    if (!v17)
    {
LABEL_8:
      v18 = objc_msgSend(v0, sel_value);
      if (!v18)
        goto LABEL_14;
      v19 = v18;
      v20 = objc_msgSend(v18, sel_inspectableValue);

      if (!v20)
        goto LABEL_14;
      v21 = objc_msgSend(v20, sel_ontologyConcept);

      if (!v21)
        goto LABEL_14;
      v22 = objc_msgSend(v21, sel_localizedPreferredName);

      if (v22
        && (sub_1BC62C680(), v22, v15 = sub_1BC62C710(), v17 = v23, swift_bridgeObjectRelease(), v17))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_14:
        v24 = objc_msgSend(v0, sel_value);
        v25 = v24;
        if (!v24)
          goto LABEL_21;
        v11 = objc_msgSend(v24, sel_inspectableValue);

        if (!v11)
        {
          swift_bridgeObjectRelease_n();
          return v11;
        }
        v26 = objc_msgSend(v11, sel_stringValue);

        if (!v26)
        {
LABEL_21:
          swift_bridgeObjectRelease_n();
          return 0;
        }
        v15 = sub_1BC62C680();
        v17 = v27;
        swift_bridgeObjectRelease_n();

      }
    }
    v29[0] = v15;
    v29[1] = v17;
    sub_1BC62A2B0();
    sub_1BC36E2AC();
    v11 = (id)sub_1BC62D028();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    swift_bridgeObjectRelease();
  }
  return v11;
}

id HKDiagnosticTestResult.valueInRange.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, sel_value);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v0, sel_referenceRanges);
  v4 = objc_msgSend(v2, sel_valueInRangeWithReferenceRanges_includeUnitString_allowsNullRange_, v3, 1, 1);

  return v4;
}

uint64_t HKCodedValue.valueTitle.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_ontologyConcept);
  v2 = objc_msgSend(v1, sel_localizedPreferredName);

  if (!v2)
    return 0;
  v3 = sub_1BC62C680();

  return v3;
}

id HKCodedValue.valueInRange.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, sel_value);
  v2 = objc_msgSend((id)objc_opt_self(), sel_inspectableValueCollectionSingleWithValue_, v1);

  v3 = objc_msgSend(v0, sel_referenceRanges);
  v4 = objc_msgSend(v2, sel_valueInRangeWithReferenceRanges_includeUnitString_allowsNullRange_, v3, 1, 1);

  return v4;
}

uint64_t HKCodedValue.valueString.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = sub_1BC62A2BC();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_value, v3);
  v7 = objc_msgSend(v6, sel_displayString);

  v8 = sub_1BC62C680();
  v10 = v9;

  v13[0] = v8;
  v13[1] = v10;
  sub_1BC62A2B0();
  sub_1BC36E2AC();
  v11 = sub_1BC62D028();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t HKCodedValue.unitString.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v0, sel_value);
  v3 = objc_msgSend(v1, sel__unitStringForValue_, v2);

  v4 = sub_1BC62C680();
  return v4;
}

uint64_t sub_1BC4E9364()
{
  id *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_ontologyConcept);
  v2 = objc_msgSend(v1, sel_localizedPreferredName);

  if (!v2)
    return 0;
  v3 = sub_1BC62C680();

  return v3;
}

id sub_1BC4E93E8()
{
  id *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = *v0;
  v2 = objc_msgSend(*v0, sel_value);
  v3 = objc_msgSend((id)objc_opt_self(), sel_inspectableValueCollectionSingleWithValue_, v2);

  v4 = objc_msgSend(v1, sel_referenceRanges);
  v5 = objc_msgSend(v3, sel_valueInRangeWithReferenceRanges_includeUnitString_allowsNullRange_, v4, 1, 1);

  return v5;
}

uint64_t sub_1BC4E94A4()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = sub_1BC62A2BC();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*v0, sel_value, v3);
  v7 = objc_msgSend(v6, sel_displayString);

  v8 = sub_1BC62C680();
  v10 = v9;

  v13[0] = v8;
  v13[1] = v10;
  sub_1BC62A2B0();
  sub_1BC36E2AC();
  v11 = sub_1BC62D028();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BC4E95A8()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = *v0;
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v1, sel_value);
  v4 = objc_msgSend(v2, sel__unitStringForValue_, v3);

  v5 = sub_1BC62C680();
  return v5;
}

uint64_t HKDiagnosticTestResult.testResultTitle.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_preferredDisplayName);
  v2 = sub_1BC62C680();

  return v2;
}

uint64_t HKDiagnosticTestResult.date.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(v1, sel_meaningfulDate);
  if (v3)
  {
    v4 = v3;
    sub_1BC62A724();

    v5 = sub_1BC62A760();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1BC62A760();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

uint64_t HKDiagnosticTestResult.dateTitle.getter()
{
  return sub_1BC4E9870((SEL *)&selRef_meaningfulDateTitle);
}

uint64_t HKDiagnosticTestResult.sourceName.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_sourceRevision);
  v2 = objc_msgSend(v1, sel_source);

  v3 = objc_msgSend(v2, sel_name);
  v4 = sub_1BC62C680();

  return v4;
}

uint64_t HKDiagnosticTestResult.identifier.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_UUID, v3);
  sub_1BC62A79C();

  v7 = sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7;
}

uint64_t HKDiagnosticTestResult.valueTitle.getter()
{
  return sub_1BC4E9870((SEL *)&selRef_preferredDisplayName);
}

uint64_t sub_1BC4E9870(SEL *a1)
{
  void *v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(v1, *a1);
  v3 = sub_1BC62C680();

  return v3;
}

uint64_t HKDiagnosticTestResult.valueDisplayables.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;

  v1 = objc_msgSend(v0, sel_value);
  if (v1
    && (v2 = v1, v3 = objc_msgSend(v1, sel_inspectableValue), v2, v3)
    && (v4 = objc_msgSend(v3, sel_codedValueCollection), v3, v4)
    && (v5 = objc_msgSend(v4, sel_canonicalBloodPressureDisplay),
        v4,
        v5))
  {

  }
  else
  {
    v6 = objc_msgSend(v0, sel_value);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, sel_inspectableValue);

      if (v8)
      {
        v9 = objc_msgSend(v8, sel_codedValueCollection);

        if (v9)
        {
          v10 = objc_msgSend(v9, sel_codedValues);

          sub_1BC4E9A34();
          v11 = sub_1BC62C878();

          v12 = sub_1BC3D2304(v11);
          swift_bridgeObjectRelease();
          return v12;
        }
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

unint64_t sub_1BC4E9A34()
{
  unint64_t result;

  result = qword_1EF42CFF8;
  if (!qword_1EF42CFF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42CFF8);
  }
  return result;
}

uint64_t HKDiagnosticTestResult.interactive.getter()
{
  return 1;
}

BOOL HKDiagnosticTestResult.verifiable.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_medicalRecordOriginType) == (id)3;
}

uint64_t HKDiagnosticTestResult.sharedResult.getter()
{
  return 0;
}

uint64_t sub_1BC4E9AA8()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_preferredDisplayName);
  v2 = sub_1BC62C680();

  return v2;
}

uint64_t sub_1BC4E9AFC(uint64_t a1, uint64_t a2)
{
  return sub_1BC4E9CA4(a1, a2, (SEL *)&selRef_meaningfulDateTitle);
}

uint64_t sub_1BC4E9B08()
{
  id *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(*v0, sel_sourceRevision);
  v2 = objc_msgSend(v1, sel_source);

  v3 = objc_msgSend(v2, sel_name);
  v4 = sub_1BC62C680();

  return v4;
}

uint64_t sub_1BC4E9B9C()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*v0, sel_UUID, v3);
  sub_1BC62A79C();

  v7 = sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7;
}

BOOL sub_1BC4E9C50()
{
  id *v0;

  return objc_msgSend(*v0, sel_medicalRecordOriginType) == (id)3;
}

uint64_t sub_1BC4E9C78()
{
  return HKDiagnosticTestResult.valueDisplayables.getter();
}

uint64_t sub_1BC4E9C98(uint64_t a1, uint64_t a2)
{
  return sub_1BC4E9CA4(a1, a2, (SEL *)&selRef_preferredDisplayName);
}

uint64_t sub_1BC4E9CA4(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(*v3, *a3);
  v5 = sub_1BC62C680();

  return v5;
}

id sub_1BC4E9CF4()
{
  void **v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *v0;
  v2 = objc_msgSend(v1, sel_value);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(v1, sel_referenceRanges);
  v5 = objc_msgSend(v3, sel_valueInRangeWithReferenceRanges_includeUnitString_allowsNullRange_, v4, 1, 1);

  return v5;
}

id sub_1BC4E9D90()
{
  return HKDiagnosticTestResult.valueString.getter();
}

uint64_t sub_1BC4E9DB0()
{
  id *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(*v0, sel_value);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(), sel__unitStringForValueCollection_, v1);
  v4 = sub_1BC62C680();

  return v4;
}

uint64_t dispatch thunk of TestResultValueDisplayable.valueTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TestResultValueDisplayable.valueInRange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TestResultValueDisplayable.unitString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TestResultRepresentable.categoryKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TestResultRepresentable.testResultTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TestResultRepresentable.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TestResultRepresentable.dateTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TestResultRepresentable.sourceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TestResultRepresentable.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of TestResultRepresentable.interactive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of TestResultRepresentable.verifiable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of TestResultRepresentable.valueDisplayables.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of TestResultRepresentable.sharedResult.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of TestResultRepresentable.displaysMultipleValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_1BC4E9EB4@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC3D2798(*a1);
  *a2 = result;
  return result;
}

_QWORD *sub_1BC4E9EDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[20];

  v1 = v0;
  v47 = sub_1BC62BB34();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49[5] = (uint64_t)sub_1BC4EA408();
  v49[6] = v4;
  v5 = (void *)v0[2];
  v49[7] = sub_1BC4EB170(v5, 1);
  v49[8] = v6;
  type metadata accessor for EducationDataSource();
  v7 = swift_allocObject();
  v8 = v5;
  v9 = sub_1BC4EACA4(v8, v7);
  v10 = sub_1BC347F0C(&qword_1EF433D88, (uint64_t (*)(uint64_t))type metadata accessor for EducationDataSource, (uint64_t)&protocol conformance descriptor for ConceptsDataSource);
  v49[9] = (uint64_t)v9;
  v49[10] = v10;
  v49[11] = sub_1BC4EB2DC(v8);
  v49[12] = v11;
  v12 = (void *)v1[4];
  v13 = v1[5];
  v14 = v8;
  swift_retain();
  v15 = objc_msgSend(v12, sel_healthStore);
  type metadata accessor for PinnedConceptDataSource();
  swift_allocObject();
  v16 = sub_1BC58560C(v14, v13, v15);
  v17 = sub_1BC347F0C(&qword_1EF433D90, (uint64_t (*)(uint64_t))type metadata accessor for PinnedConceptDataSource, (uint64_t)&protocol conformance descriptor for ConceptsDataSource);
  v49[13] = (uint64_t)v16;
  v49[14] = v17;
  v18 = v1[6];
  type metadata accessor for RecordDataSource();
  swift_allocObject();
  swift_retain();
  v19 = v12;
  v20 = RecordDataSource.init(recordPublisher:profile:)(v18, v19);
  v21 = sub_1BC347F0C(&qword_1EF433D98, (uint64_t (*)(uint64_t))type metadata accessor for RecordDataSource, (uint64_t)&protocol conformance descriptor for ConceptsDataSource);
  v49[15] = (uint64_t)v20;
  v49[16] = v21;
  type metadata accessor for ShowAllRecordsDataSource();
  swift_allocObject();
  v22 = v14;
  swift_retain();
  v23 = sub_1BC41E414(v22, v18, v19, 0xD000000000000015, 0x80000001BC65F270);
  v24 = sub_1BC347F0C(&qword_1EF433DA0, (uint64_t (*)(uint64_t))type metadata accessor for ShowAllRecordsDataSource, (uint64_t)&protocol conformance descriptor for ConceptsDataSource);
  v25 = 0;
  v49[17] = (uint64_t)v23;
  v49[18] = v24;
  v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v28 = v49[v25 + 5];
    if (v28)
    {
      v29 = v49[v25 + 6];
      swift_unknownObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v49[0] = (uint64_t)v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v26 = sub_1BC3B51A4(0, v26[2] + 1, 1, v26);
        v49[0] = (uint64_t)v26;
      }
      v32 = v26[2];
      v31 = v26[3];
      if (v32 >= v31 >> 1)
      {
        v26 = sub_1BC3B51A4((_QWORD *)(v31 > 1), v32 + 1, 1, v26);
        v49[0] = (uint64_t)v26;
      }
      ObjectType = swift_getObjectType();
      sub_1BC4607A0(v32, v28, v49, ObjectType, v29);
    }
    v25 += 2;
  }
  while (v25 != 14);
  sub_1BC459A18();
  swift_arrayDestroy();
  sub_1BC62BAF8();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v33 = sub_1BC62BB28();
  v34 = sub_1BC62CADC();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    *(_DWORD *)v35 = 136446466;
    v48 = *v1;
    v49[0] = v36;
    sub_1BC4EB444();
    v37 = sub_1BC62C6E0();
    v48 = sub_1BC4991F0(v37, v38, v49);
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2082;
    v39 = sub_1BC3B9914(0, (unint64_t *)&qword_1EF42A0F8);
    v40 = swift_bridgeObjectRetain();
    v41 = MEMORY[0x1BCCF1B54](v40, v39);
    v43 = v42;
    swift_bridgeObjectRelease();
    v48 = sub_1BC4991F0(v41, v43, v49);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v33, v34, "[%{public}s] Notifying data sources of hidden display types change, sources: %{public}s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v36, -1, -1);
    MEMORY[0x1BCCF36A8](v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v46 + 8))(v3, v47);
  return v26;
}

_QWORD *sub_1BC4EA408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BC4EB478(0, &qword_1EF433D60, &qword_1EF42E550, (unint64_t *)&qword_1EF42C960);
  v2 = v1;
  v18 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v17 - v3;
  sub_1BC4EA7AC();
  v6 = v5;
  v19 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v0 + 24);
  type metadata accessor for UserDomainConceptDataProvider();
  v10 = (_QWORD *)swift_allocObject();
  v11 = MEMORY[0x1E0DEE9E0];
  v10[2] = MEMORY[0x1E0DEE9E0];
  v10[3] = v11;
  v10[4] = v9;
  v12 = *(void **)(v0 + 16);
  v17 = v9;
  v20 = sub_1BC48AC18(v12, 0, 0, 0);
  sub_1BC4CF67C();
  sub_1BC4EA754(0, &qword_1EF42E550, (unint64_t *)&qword_1EF42C960);
  sub_1BC347F0C(&qword_1EF433200, (uint64_t (*)(uint64_t))sub_1BC4CF67C, MEMORY[0x1E0C95D90]);
  sub_1BC62C02C();
  swift_release();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1BC4EA82C();
  sub_1BC62C014();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v2);
  sub_1BC347F0C(&qword_1EF433D78, (uint64_t (*)(uint64_t))sub_1BC4EA7AC, MEMORY[0x1E0C957E8]);
  v13 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  type metadata accessor for ChartDataSource();
  v14 = swift_allocObject();
  v15 = sub_1BC4EA894((uint64_t)v12, 0, v13, 0, 1, v17, v14);
  swift_release();
  sub_1BC347F0C(&qword_1EF433D80, (uint64_t (*)(uint64_t))type metadata accessor for ChartDataSource, (uint64_t)&protocol conformance descriptor for ConceptsDataSource);
  return v15;
}

uint64_t sub_1BC4EA6A8@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC3D2988(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC4EA6D0()
{
  id *v0;

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UserDomainConceptDetailDataSourceProvider()
{
  return objc_opt_self();
}

_QWORD *sub_1BC4EA734()
{
  return sub_1BC4E9EDC();
}

void sub_1BC4EA754(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC3B9914(255, a3);
    v4 = sub_1BC62C8E4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC4EA7AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433D68)
  {
    sub_1BC4EB478(255, &qword_1EF433D60, &qword_1EF42E550, (unint64_t *)&qword_1EF42C960);
    sub_1BC4EA82C();
    v0 = sub_1BC62BDF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433D68);
  }
}

unint64_t sub_1BC4EA82C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433D70;
  if (!qword_1EF433D70)
  {
    sub_1BC4EB478(255, &qword_1EF433D60, &qword_1EF42E550, (unint64_t *)&qword_1EF42C960);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433D70);
  }
  return result;
}

_QWORD *sub_1BC4EA894(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31;
  int v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  _QWORD v36[5];

  v30 = a4;
  v31 = a6;
  v10 = a4;
  v32 = a2 & 1;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - v14;
  sub_1BC40A3DC();
  v17 = v16;
  v33 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[3] = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4938);
  v36[4] = &protocol witness table for HKMedicalUserDomainConcept;
  v36[0] = a1;
  *(_QWORD *)(a7 + 112) = 0;
  sub_1BC34E674((uint64_t)v36, a7 + 40);
  v20 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartabilityDeterminer());
  swift_retain();
  *(_QWORD *)(a7 + 80) = objc_msgSend(v20, sel_init);
  *(_QWORD *)(a7 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F748]), sel_initWithHealthStore_, a6);
  *(_QWORD *)(a7 + 96) = v10;
  LOBYTE(v10) = a5 & 1;
  *(_BYTE *)(a7 + 104) = a5 & 1;
  swift_release();
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC639590;
  sub_1BC62B270();
  v22 = ConceptsDataSource.init(arrangedSections:isHidden:)(v21, 0);
  swift_retain();
  sub_1BC546A60(1);
  v35 = a3;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v34 = (id)sub_1BC62CC74();
  v23 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v15, 1, 1, v23);
  sub_1BC40A4AC();
  sub_1BC347F0C(&qword_1EF42E558, (uint64_t (*)(uint64_t))sub_1BC40A4AC, MEMORY[0x1E0C95D90]);
  sub_1BC3ABB20();
  sub_1BC62C080();
  sub_1BC377E3C((uint64_t)v15, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  v24 = swift_allocObject();
  swift_weakInit();
  v25 = swift_allocObject();
  v26 = v30;
  *(_QWORD *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = v26;
  *(_BYTE *)(v25 + 32) = v10;
  *(_BYTE *)(v25 + 33) = v32;
  sub_1BC347F0C(qword_1EF42E560, (uint64_t (*)(uint64_t))sub_1BC40A3DC, MEMORY[0x1E0C95CB8]);
  v27 = sub_1BC62C0BC();
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v17);
  v22[14] = v27;
  swift_release();
  return v22;
}

uint64_t sub_1BC4EAC5C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC4EAC80()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1BC4EACA4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  BOOL v12;
  char v13;
  __int128 v15[2];
  _QWORD v16[5];

  v16[3] = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4938);
  v16[4] = &protocol witness table for HKMedicalUserDomainConcept;
  v16[0] = a1;
  sub_1BC34E674((uint64_t)v16, a2 + 40);
  sub_1BC34E674((uint64_t)v16, (uint64_t)v15);
  type metadata accessor for EducationItem();
  v4 = swift_allocObject();
  type metadata accessor for EducationCell();
  sub_1BC347F0C(&qword_1EF4319A0, (uint64_t (*)(uint64_t))type metadata accessor for EducationCell, (uint64_t)&unk_1BC64A5C0);
  *(_QWORD *)(v4 + 56) = sub_1BC62ADA8();
  *(_QWORD *)(v4 + 64) = v5;
  sub_1BC34E718(v15, v4 + 16);
  sub_1BC34D844();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)&v15[0] = inited;
  sub_1BC62C890();
  v7 = *(_QWORD *)&v15[0];
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC639590;
  swift_retain();
  HKMedicalUserDomainConcept.educationTitle.getter();
  sub_1BC3D24F4(v7);
  swift_bridgeObjectRelease();
  sub_1BC62B270();
  v9 = ConceptsDataSource.init(arrangedSections:isHidden:)(v8, 0);
  swift_retain();
  v10 = objc_msgSend(a1, sel_educationContent);
  if (v10)
  {
    v11 = v10;
    v12 = sub_1BC62467C();

    v13 = !v12;
  }
  else
  {
    v13 = 1;
  }
  sub_1BC546A60(v13 & 1);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  return v9;
}

_QWORD *sub_1BC4EAEEC(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  sub_1BC4EB478(0, &qword_1EF433DB0, &qword_1EF42F108, (unint64_t *)&qword_1EF42C970);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - v11;
  sub_1BC4EB52C();
  v14 = v13;
  v25 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[2] = a1;
  v17 = a1;
  v4[3] = objc_msgSend(a2, sel_healthStore);
  v4[4] = a2;
  v4[5] = a3;
  v18 = a2;
  swift_retain();
  v19 = objc_msgSend(v18, sel_healthStore);
  type metadata accessor for UserDomainConceptDataProvider();
  v20 = (_QWORD *)swift_allocObject();
  v21 = MEMORY[0x1E0DEE9E0];
  v20[2] = MEMORY[0x1E0DEE9E0];
  v20[3] = v21;
  v20[4] = v19;
  v22 = sub_1BC48AC18(v17, 3, 0, 0);
  swift_release();
  v26 = v22;
  sub_1BC4CF67C();
  sub_1BC4EA754(0, &qword_1EF42F108, (unint64_t *)&qword_1EF42C970);
  sub_1BC347F0C(&qword_1EF433200, (uint64_t (*)(uint64_t))sub_1BC4CF67C, MEMORY[0x1E0C95D90]);
  sub_1BC62C02C();
  swift_release();
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1BC4EB5AC();
  sub_1BC62C014();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1BC347F0C(&qword_1EF433DC8, (uint64_t (*)(uint64_t))sub_1BC4EB52C, MEMORY[0x1E0C957E8]);
  v23 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v14);
  v4[6] = v23;
  return v4;
}

uint64_t sub_1BC4EB170(void *a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD v16[4];
  _OWORD v17[4];
  uint64_t v18;

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  *(_QWORD *)&v6 = MEMORY[0x1E0C80A78](v5).n128_u64[0];
  v8 = (char *)&v16[-1] - v7;
  v9 = objc_msgSend(a1, sel_UUID, v6);
  sub_1BC62A79C();

  v10 = sub_1BC62A7B4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
  v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_1BC62CB90();
  __swift_project_boxed_opaque_existential_1Tm(v16, v16[3]);
  v11 = (void *)sub_1BC62A9D0();
  v12 = (void *)sub_1BC62AA90();
  v13 = sub_1BC4D9408((uint64_t)v8, (uint64_t)v17, a2, 0, (uint64_t)v11);

  sub_1BC377E3C((uint64_t)v8, (unint64_t *)&qword_1EF42B210, v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  return v13;
}

uint64_t sub_1BC4EB2DC(void *a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD v14[4];
  _OWORD v15[4];
  uint64_t v16;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  *(_QWORD *)&v4 = MEMORY[0x1E0C80A78](v3).n128_u64[0];
  v6 = (char *)&v14[-1] - v5;
  v7 = objc_msgSend(a1, sel_UUID, v4);
  sub_1BC62A79C();

  v8 = sub_1BC62A7B4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 0, 1, v8);
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_1BC62CB90();
  __swift_project_boxed_opaque_existential_1Tm(v14, v14[3]);
  v9 = (void *)sub_1BC62A9D0();
  v10 = (void *)sub_1BC62AA90();
  v11 = sub_1BC3AABF0((uint64_t)v6, (unsigned __int8 *)v15, 1, 0, (uint64_t)v9);

  sub_1BC377E3C((uint64_t)v6, (unint64_t *)&qword_1EF42B210, v2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v11;
}

unint64_t sub_1BC4EB444()
{
  unint64_t result;

  result = qword_1EF433DA8;
  if (!qword_1EF433DA8)
  {
    type metadata accessor for UserDomainConceptDetailDataSourceProvider();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF433DA8);
  }
  return result;
}

void sub_1BC4EB478(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC4CF67C();
    sub_1BC4EA754(255, a3, a4);
    sub_1BC347F0C(&qword_1EF433200, (uint64_t (*)(uint64_t))sub_1BC4CF67C, MEMORY[0x1E0C95D90]);
    v7 = sub_1BC62BE10();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC4EB52C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433DB8)
  {
    sub_1BC4EB478(255, &qword_1EF433DB0, &qword_1EF42F108, (unint64_t *)&qword_1EF42C970);
    sub_1BC4EB5AC();
    v0 = sub_1BC62BDF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433DB8);
  }
}

unint64_t sub_1BC4EB5AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF433DC0;
  if (!qword_1EF433DC0)
  {
    sub_1BC4EB478(255, &qword_1EF433DB0, &qword_1EF42F108, (unint64_t *)&qword_1EF42C970);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1EF433DC0);
  }
  return result;
}

uint64_t type metadata accessor for PatientDetailsDataSource()
{
  uint64_t result;

  result = qword_1EF433DE0;
  if (!qword_1EF433DE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC4EB650()
{
  return swift_initClassMetadata2();
}

void sub_1BC4EB6A4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  char v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  _QWORD *v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v4 = sub_1BC62A7B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC62C4D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v11 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    v13 = qword_1EF433DD0;
    v14 = *(void **)(v2 + qword_1EF433DD0);
    if (v14)
    {
      if (!a1)
        goto LABEL_6;
      sub_1BC34B6A0(0, &qword_1EF42DDA8);
      v15 = a1;
      v16 = v14;
      v17 = sub_1BC62CEB4();

      if ((v17 & 1) != 0)
        return;
      v14 = *(void **)(v2 + v13);
      if (v14)
      {
LABEL_6:
        v52 = v4;
        v53 = v2;
        v18 = *(void **)(v2 + qword_1EF433DD8);
        v19 = v14;
        v50 = v18;
        v20 = objc_msgSend(v18, sel_clinicalSourcesDataProvider);
        v49 = v19;
        v21 = objc_msgSend(v20, sel_nameAndFormattedBirthDateForAccountOwner_useMultipleLines_, v19, 1);

        if (v21)
        {
          v2 = sub_1BC62C680();
          v4 = v22;

        }
        else
        {
          v2 = 0;
          v4 = 0;
        }
        v51 = v5;
        if (qword_1ED6A4888 == -1)
          goto LABEL_12;
        goto LABEL_18;
      }
    }
    else if (!a1)
    {
      return;
    }
    sub_1BC62B2D0();
    return;
  }
  __break(1u);
LABEL_18:
  swift_once();
LABEL_12:
  v23 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v24 = sub_1BC62A4A8();
  v26 = v25;
  swift_bridgeObjectRelease();

  sub_1BC359F44();
  v27 = swift_allocObject();
  v48 = xmmword_1BC6395A0;
  *(_OWORD *)(v27 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v27 + 32) = sub_1BC62C680();
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = 0x746E6569746150;
  *(_QWORD *)(v27 + 56) = 0xE700000000000000;
  v29 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v30 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v30)
  {
    v31 = sub_1BC62C680();
    v33 = v32;

  }
  else
  {
    v31 = 0;
    v33 = 0;
  }
  v34 = type metadata accessor for TitleSubtitleDetailItem(0);
  v35 = (_QWORD *)swift_allocObject();
  sub_1BC62A7A8();
  v35[2] = v24;
  v35[3] = v26;
  v35[4] = v2;
  v35[5] = v4;
  v36 = MEMORY[0x1E0DEE9D8];
  v35[6] = 0;
  v35[7] = v36;
  v35[8] = v31;
  v35[9] = v33;
  v37 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v38 = sub_1BC62A4A8();
  v40 = v39;
  swift_bridgeObjectRelease();

  v41 = type metadata accessor for FHIRRawResourceItem();
  swift_allocObject();
  v42 = v49;
  v43 = v50;
  v44 = sub_1BC4EBE70(v38, v40, v43, v42);

  v45 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
  sub_1BC357158(0, &qword_1EF42C5F0, (uint64_t (*)(uint64_t))sub_1BC37AE0C, v45);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v48;
  *(_QWORD *)(v46 + 56) = v34;
  *(_QWORD *)(v46 + 64) = sub_1BC379B20(&qword_1EF42B7C0, 255, type metadata accessor for TitleSubtitleDetailItem, (uint64_t)&unk_1BC63DA50);
  *(_QWORD *)(v46 + 32) = v35;
  *(_QWORD *)(v46 + 96) = v41;
  *(_QWORD *)(v46 + 104) = sub_1BC379B20(&qword_1EF433F40, v47, (uint64_t (*)(uint64_t))type metadata accessor for FHIRRawResourceItem, (uint64_t)&protocol conformance descriptor for TextItem);
  *(_QWORD *)(v46 + 72) = v44;
  swift_retain();
  swift_retain();
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v7, v52);
  sub_1BC62B270();
  sub_1BC62B2D0();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1BC4EBC88()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC4EBCB4()
{
  uint64_t v0;

}

uint64_t sub_1BC4EBCE0()
{
  uint64_t v0;

  v0 = sub_1BC62B300();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC4EBD2C()
{
  return type metadata accessor for PatientDetailsDataSource();
}

uint64_t sub_1BC4EBD34()
{
  MEMORY[0x1BCCF35C4](&unk_1BC64503C);
  return sub_1BC62B834();
}

void sub_1BC4EBD80()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for FHIRRawResourceItem()
{
  return objc_opt_self();
}

void sub_1BC4EBDCC(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t v4;
  id v5;

  v4 = *v2;
  v5 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordSourceDataViewController), sel_initWithProfile_medicalRecord_, *(_QWORD *)(v4 + 96), *(_QWORD *)(v4 + 104));
  objc_msgSend(a2, sel_showViewController_sender_, v5, v4);

}

uint64_t sub_1BC4EBE40()
{
  return sub_1BC379B20(&qword_1EF433F38, 255, (uint64_t (*)(uint64_t))type metadata accessor for PatientDetailsDataSource, (uint64_t)&unk_1BC64500C);
}

_QWORD *sub_1BC4EBE70(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = v4;
  v34 = a1;
  v35 = a2;
  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - v9;
  v11 = sub_1BC62BBAC();
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC62BB64();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[12] = a3;
  v5[13] = a4;
  sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62BBC4();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC639590;
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DC1C20], v14);
  v19 = sub_1BC62BB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 1, 1, v19);
  v20 = a3;
  v21 = a4;
  sub_1BC62BBA0();
  sub_1BC62BB7C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v33);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_1BC359F44();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v22 + 32) = sub_1BC62C680();
  *(_QWORD *)(v22 + 40) = v23;
  *(_QWORD *)(v22 + 48) = 0xD000000000000010;
  *(_QWORD *)(v22 + 56) = 0x80000001BC65F300;
  v24 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v25 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v25)
  {
    v26 = sub_1BC62C680();
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  type metadata accessor for TextItemCell();
  sub_1BC379B20(&qword_1EF429AF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&protocol conformance descriptor for TextItemCell);
  v5[10] = sub_1BC62ADA8();
  v5[11] = v29;
  v30 = v35;
  v5[2] = v34;
  v5[3] = v30;
  v5[4] = 0;
  v5[5] = 0;
  v5[6] = 0;
  v5[7] = v18;
  v5[8] = v26;
  v5[9] = v28;
  return v5;
}

uint64_t sub_1BC4EC170(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void (*v9)(char *, uint64_t);
  _QWORD v11[2];

  v2 = v1;
  v4 = sub_1BC62A7B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + qword_1EF433DD0) = 0;
  *(_QWORD *)(v2 + qword_1EF433DD8) = a1;
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
  v8 = a1;
  sub_1BC62A7A8();
  sub_1BC62A778();
  v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  sub_1BC62B270();
  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  strcpy((char *)v11, "MutableArray<");
  HIWORD(v11[1]) = -4864;
  sub_1BC62A7A8();
  sub_1BC62A778();
  v9(v7, v4);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return sub_1BC62B2B8();
}

uint64_t BloodPressureChartData.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_date;
  v4 = sub_1BC62A760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BloodPressureChartData.dateFormat.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_dateFormat);
}

uint64_t BloodPressureChartData.hasTime.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_hasTime);
}

uint64_t BloodPressureChartData.partOfOutOfRangeSeries.getter()
{
  return 0;
}

id BloodPressureChartData.__allocating_init(date:dateFormat:hasTime:systolicRange:diastolicRange:)(uint64_t a1, uint64_t a2, char a3, void *a4, void *a5)
{
  objc_class *v5;
  objc_class *v6;
  _BYTE *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  objc_super v18;

  v6 = v5;
  v12 = objc_allocWithZone(v6);
  v12[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_partOfOutOfRangeSeries] = 0;
  v13 = &v12[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_date];
  v14 = sub_1BC62A760();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  *(_QWORD *)&v12[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_dateFormat] = a2;
  v12[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_hasTime] = a3;
  v18.receiver = v12;
  v18.super_class = v6;
  v16 = objc_msgSendSuper2(&v18, sel_init);
  objc_msgSend(v16, sel_setSystolicRange_, a4);
  objc_msgSend(v16, sel_setDiastolicRange_, a5);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  return v16;
}

id BloodPressureChartData.init(date:dateFormat:hasTime:systolicRange:diastolicRange:)(uint64_t a1, uint64_t a2, char a3, void *a4, void *a5)
{
  _BYTE *v5;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  objc_super v16;

  v5[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_partOfOutOfRangeSeries] = 0;
  v11 = &v5[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_date];
  v12 = sub_1BC62A760();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_dateFormat] = a2;
  v5[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_hasTime] = a3;
  v16.receiver = v5;
  v16.super_class = (Class)type metadata accessor for BloodPressureChartData();
  v14 = objc_msgSendSuper2(&v16, sel_init);
  objc_msgSend(v14, sel_setSystolicRange_, a4);
  objc_msgSend(v14, sel_setDiastolicRange_, a5);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  return v14;
}

uint64_t type metadata accessor for BloodPressureChartData()
{
  uint64_t result;

  result = qword_1EF433F70;
  if (!qword_1EF433F70)
    return swift_getSingletonMetadata();
  return result;
}

id BloodPressureChartData.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BloodPressureChartData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BloodPressureChartData.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureChartData();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC4EC708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_date;
  v4 = sub_1BC62A760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC4EC74C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_dateFormat);
}

uint64_t sub_1BC4EC75C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_hasTime);
}

void Array<A>.minMaxRanges()(unint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v56 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v56 >= 2)
      goto LABEL_3;
    swift_bridgeObjectRetain();
    if (sub_1BC62D3B8())
      goto LABEL_7;
LABEL_65:
    swift_bridgeObjectRelease();
    return;
  }
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3 > 1)
  {
LABEL_3:
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F8E0]), sel_init);
    v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F8E0]), sel_init);
    if (v2)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1BC62D3B8();
      if (!v5)
        goto LABEL_65;
    }
    else
    {
      v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v5)
        goto LABEL_65;
    }
    if (v5 >= 1)
    {
      v9 = 0;
      v57 = v4;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v10 = (id)MEMORY[0x1BCCF24CC](v9, a1);
        else
          v10 = *(id *)(a1 + 8 * v9 + 32);
        v11 = v10;
        v12 = objc_msgSend(v10, sel_systolicRange, v57);
        if (v12)
        {
          v13 = v12;
          v14 = objc_msgSend(v12, sel_minValue);

          if (v14)
          {
            sub_1BC497C80();
            v15 = (void *)sub_1BC62CE9C();
            v16 = objc_msgSend(v15, sel_compare_, v14);

            if (v16 == (id)-1)
            {
              v17 = objc_msgSend(v4, sel_minValue);
              v18 = v14;
              v19 = v18;
              if (v17)
              {
                v20 = v18;
                v21 = v17;
                if (objc_msgSend(v20, sel_compare_, v21) == (id)-1)
                  v22 = v20;
                else
                  v22 = v21;
                v19 = v22;

                v4 = v57;
              }
              objc_msgSend(v4, sel_setMinValue_, v19);

            }
          }
        }
        v23 = objc_msgSend(v11, sel_systolicRange);
        if (v23)
        {
          v24 = v23;
          v25 = objc_msgSend(v23, sel_maxValue);

          if (v25)
          {
            sub_1BC497C80();
            v26 = (void *)sub_1BC62CE9C();
            v27 = objc_msgSend(v26, sel_compare_, v25);

            if (v27 == (id)-1)
            {
              v28 = objc_msgSend(v4, sel_maxValue);
              v29 = v25;
              v30 = v29;
              if (v28)
              {
                v31 = v29;
                v32 = v28;
                if (objc_msgSend(v31, sel_compare_, v32) == (id)-1)
                  v33 = v32;
                else
                  v33 = v31;
                v30 = v33;

                v4 = v57;
              }
              objc_msgSend(v4, sel_setMaxValue_, v30);

            }
          }
        }
        v34 = objc_msgSend(v11, sel_diastolicRange);
        if (v34)
        {
          v35 = v34;
          v36 = objc_msgSend(v34, sel_minValue);

          if (v36)
          {
            sub_1BC497C80();
            v37 = (void *)sub_1BC62CE9C();
            v38 = objc_msgSend(v37, sel_compare_, v36);

            if (v38 == (id)-1)
            {
              v39 = objc_msgSend(v58, sel_minValue);
              v40 = v36;
              v41 = v40;
              if (v39)
              {
                v42 = v40;
                v43 = v39;
                if (objc_msgSend(v42, sel_compare_, v43) == (id)-1)
                  v44 = v42;
                else
                  v44 = v43;
                v41 = v44;

                v4 = v57;
              }
              objc_msgSend(v58, sel_setMinValue_, v41);

            }
          }
        }
        v45 = objc_msgSend(v11, sel_diastolicRange);
        if (v45)
        {
          v46 = v45;
          v47 = objc_msgSend(v45, sel_maxValue);

          if (v47)
          {
            sub_1BC497C80();
            v48 = (void *)sub_1BC62CE9C();
            v49 = objc_msgSend(v48, sel_compare_, v47);

            if (v49 == (id)-1)
            {
              v50 = objc_msgSend(v58, sel_maxValue);
              v51 = v47;
              v52 = v51;
              if (v50)
              {
                v53 = v51;
                v54 = v50;
                if (objc_msgSend(v53, sel_compare_, v54) == (id)-1)
                  v55 = v54;
                else
                  v55 = v53;
                v52 = v55;

                v4 = v57;
              }
              objc_msgSend(v58, sel_setMaxValue_, v52);

            }
          }
        }
        ++v9;

      }
      while (v5 != v9);
      goto LABEL_65;
    }
    goto LABEL_68;
  }
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_65;
LABEL_7:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1BCCF24CC](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    v6 = *(id *)(a1 + 32);
  }
  v7 = v6;
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_systolicRange);

  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v8 = (id)MEMORY[0x1BCCF24CC](0, a1);
    swift_bridgeObjectRelease();
LABEL_62:
    objc_msgSend(v8, sel_diastolicRange);

    return;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(a1 + 32);
    goto LABEL_62;
  }
LABEL_69:
  __break(1u);
}

uint64_t sub_1BC4ECDD4()
{
  return type metadata accessor for BloodPressureChartData();
}

uint64_t sub_1BC4ECDDC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62A760();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BloodPressureChartData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BloodPressureChartData.__allocating_init(date:dateFormat:hasTime:systolicRange:diastolicRange:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1BC62C8E4();
  MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF48], v4);
  sub_1BC62CA40();
  sub_1BC4ED0D0();
  if ((sub_1BC62CA4C() & 1) != 0)
  {
    sub_1BC62C8F0();
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v5, 1, a1);
}

uint64_t Array<A>.excluding(_:)()
{
  uint64_t v0;

  v0 = sub_1BC62C8E4();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF60], v0);
  return sub_1BC62D25C();
}

{
  uint64_t v0;

  v0 = sub_1BC62C8E4();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF60], v0);
  return sub_1BC62D25C();
}

BOOL sub_1BC4ED054()
{
  uint64_t v0;

  v0 = sub_1BC62C8E4();
  MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF38], v0);
  return (sub_1BC62C824() & 1) == 0;
}

void sub_1BC4ED0D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF433F80)
  {
    v0 = sub_1BC62CA58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF433F80);
  }
}

BOOL sub_1BC4ED12C()
{
  return (sub_1BC62C644() & 1) == 0;
}

BOOL sub_1BC4ED164()
{
  return sub_1BC4ED054();
}

unint64_t static RemovedCategoryNavigationFeedItemIdentifierFactory.makePrefixComponent(feedItemKind:)()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  FeedItemKind.rawValue.getter();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return 0xD000000000000016;
}

unint64_t static RemovedCategoryNavigationFeedItemIdentifierFactory.makeComponent(categoryKind:)()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return 0xD00000000000001BLL;
}

uint64_t static RemovedCategoryNavigationFeedItemIdentifierFactory.make(categoryKind:profile:)(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  unint64_t v18;
  unint64_t v19;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A53C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC6395A0;
  v8 = (void *)sub_1BC62AA84();
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  if (v8)
  {
    v18 = 0x656C69666F72505BLL;
    v19 = 0xE90000000000003ALL;
    v9 = v8;
    v10 = objc_msgSend(v9, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v12 = v18;
    v11 = v19;
  }
  else
  {
    v11 = 0x80000001BC655390;
    v12 = 0xD000000000000013;
  }
  v18 = v12;
  v19 = v11;
  sub_1BC62C764();

  v13 = v19;
  *(_QWORD *)(v7 + 32) = v18;
  *(_QWORD *)(v7 + 40) = v13;
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v18 = 0xD00000000000001BLL;
  v19 = 0x80000001BC658620;
  v17[1] = v6;
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v14 = v19;
  *(_QWORD *)(v7 + 48) = v18;
  *(_QWORD *)(v7 + 56) = v14;
  v18 = v7;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v15 = sub_1BC62C5D8();
  swift_bridgeObjectRelease();
  return v15;
}

ValueMetadata *type metadata accessor for RemovedCategoryNavigationFeedItemIdentifierFactory()
{
  return &type metadata for RemovedCategoryNavigationFeedItemIdentifierFactory;
}

uint64_t sub_1BC4ED554(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEB0000000068746CLL;
  v3 = 0x6165486F54646461;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6C61576F54646461;
    else
      v5 = 0xD000000000000014;
    if (v4 == 1)
      v6 = 0xEB0000000074656CLL;
    else
      v6 = 0x80000001BC650CC0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6165486F54646461;
  v6 = 0xEB0000000068746CLL;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x6C61576F54646461;
    else
      v3 = 0xD000000000000014;
    if (v7 == 1)
      v2 = 0xEB0000000074656CLL;
    else
      v2 = 0x80000001BC650CC0;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BC4ED684(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x64656C696166;
  else
    v3 = 0x6564656563637573;
  if (v2)
    v4 = 0xE900000000000064;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x64656C696166;
  else
    v5 = 0x6564656563637573;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE900000000000064;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1BC4ED728(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x65646F63205251;
    else
      v3 = 0x51204343442D5545;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xEE0065646F632052;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x65646F63205251;
      else
        v6 = 0x51204343442D5545;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xEE0065646F632052;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701603686;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701603686)
  {
LABEL_21:
    v8 = sub_1BC62D574();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BC4ED848(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x74726F706D69;
    else
      v3 = 0x65746172656E6567;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xEB00000000464450;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x74726F706D69;
      else
        v6 = 0x65746172656E6567;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xEB00000000464450;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x77656976657270;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x77656976657270)
  {
LABEL_21:
    v8 = sub_1BC62D574();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BC4ED968(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7265656E69676E45;
  else
    v3 = 0x647261646E617453;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEB00000000676E69;
  if ((a2 & 1) != 0)
    v5 = 0x7265656E69676E45;
  else
    v5 = 0x647261646E617453;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000676E69;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1BC4EDA14(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x676E6964616F6CLL;
  else
    v3 = 0x617461446F6ELL;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x676E6964616F6CLL;
  else
    v5 = 0x617461446F6ELL;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1BC4EDAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = FeedItemKind.rawValue.getter();
  v2 = v1;
  if (v0 == FeedItemKind.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BC4EDB48(char a1)
{
  char v2;
  char v3;

  if (!a1)
    goto LABEL_5;
  v2 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    if (a1 != 2)
    {
      v3 = sub_1BC62D574();
      goto LABEL_7;
    }
LABEL_5:
    v3 = 1;
LABEL_7:
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
  v3 = 1;
  return v3 & 1;
}

uint64_t sub_1BC4EDC54(unsigned __int8 a1)
{
  char v2;
  char v3;

  if (a1 == 1)
    goto LABEL_6;
  v2 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    if (a1 <= 1u)
    {
      v3 = sub_1BC62D574();
LABEL_7:
      swift_bridgeObjectRelease();
      return v3 & 1;
    }
LABEL_6:
    v3 = 1;
    goto LABEL_7;
  }
  v3 = 1;
  return v3 & 1;
}

uint64_t sub_1BC4EDD98()
{
  sub_1BC62D670();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4EDE4C()
{
  sub_1BC62C740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC4EDEDC()
{
  sub_1BC62D670();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4EDF8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC4F1400();
  *a1 = result;
  return result;
}

void sub_1BC4EDFB8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB0000000068746CLL;
  v4 = 0xEB0000000074656CLL;
  v5 = 0x6C61576F54646461;
  if (v2 != 1)
  {
    v5 = 0xD000000000000014;
    v4 = 0x80000001BC650CC0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6165486F54646461;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BC4EE02C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BC4ED554(*a1, *a2);
}

void sub_1BC4EE038(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC4EE06C()
{
  unint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  if (!(v0 >> 62))
  {
    v1 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v1 == 1)
    {
LABEL_3:
      if ((v0 & 0xC000000000000001) != 0)
      {
        v2 = (id)MEMORY[0x1BCCF24CC](0, v0);
      }
      else
      {
        if (!*(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x1BC4EE278);
        }
        v2 = *(id *)(v0 + 32);
      }
      v3 = (uint64_t)v2;
      goto LABEL_7;
    }
LABEL_11:
    sub_1BC4F1470((void *)v0, 0);
    return 0;
  }
  swift_bridgeObjectRetain();
  if (sub_1BC62D3B8() != 1)
    goto LABEL_11;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62D3B8();
  sub_1BC4F1470((void *)v0, 0);
  if (v3)
    goto LABEL_3;
LABEL_7:
  sub_1BC4F1470((void *)v0, 0);
  return v3;
}

void sub_1BC4EE2B0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC4EE2E4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  void *v32;
  uint64_t v33;
  id v34;

  *(_QWORD *)(v33 - 48) = 0;
  *(_QWORD *)(v33 - 40) = 0xE000000000000000;
  v34 = v32;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 - 48) = 0xD000000000000023;
  *(_QWORD *)(v33 - 40) = 0x80000001BC65F760;
  swift_getErrorValue();
  sub_1BC62D610();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC4F165C((unint64_t)v32);
  return *(_QWORD *)(v33 - 48);
}

void sub_1BC4EE4E8()
{
  JUMPOUT(0x1BC4EE4D4);
}

void sub_1BC4EE4F8()
{
  JUMPOUT(0x1BC4EE4D4);
}

void sub_1BC4EE508()
{
  JUMPOUT(0x1BC4EE4D4);
}

void sub_1BC4EE518()
{
  JUMPOUT(0x1BC4EE4D4);
}

void sub_1BC4EE528()
{
  JUMPOUT(0x1BC4EE4D4);
}

void sub_1BC4EE538()
{
  JUMPOUT(0x1BC4EE4D4);
}

void sub_1BC4EE548()
{
  JUMPOUT(0x1BC4EE4D4);
}

void sub_1BC4EE558()
{
  JUMPOUT(0x1BC4EE4D4);
}

void sub_1BC4EE568()
{
  JUMPOUT(0x1BC4EE4D4);
}

void sub_1BC4EE574()
{
  JUMPOUT(0x1BC4EE4D4);
}

void sub_1BC4EE580()
{
  JUMPOUT(0x1BC4EE4D4);
}

void sub_1BC4EE590()
{
  JUMPOUT(0x1BC4EE59CLL);
}

uint64_t sub_1BC4EE5A8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  if (!*(_BYTE *)(v0 + 16))
  {
    if (qword_1EF428588 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    if (qword_1EF428588 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (qword_1EF428588 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v1 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1BC4EE758()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  if (!*(_BYTE *)(v0 + 16))
  {
    if (qword_1EF428588 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    if (qword_1EF428588 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (qword_1EF428588 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v1 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v2;
}

id sub_1BC4EE908()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  char *v24;
  id v25;
  uint64_t v26;
  id v27;
  char *v28;
  id v29;
  uint64_t v31;

  v1 = v0;
  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_BYTE *)(v0 + 16))
  {
    v2 = *(_QWORD *)(v0 + 24);
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v5 = (char *)sub_1BC62D3B8();
      if (!v5)
        goto LABEL_35;
    }
    else
    {
      v5 = *(char **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v5)
        goto LABEL_35;
    }
    if ((v2 & 0xC000000000000001) != 0)
      v13 = (id)MEMORY[0x1BCCF24CC](0, v2);
    else
      v13 = *(id *)(v2 + 32);
    v14 = v13;
    if ((sub_1BC62CD64() & 1) != 0)
      goto LABEL_14;

    if (v5 != (char *)1)
    {
      v22 = 5;
      do
      {
        if ((v2 & 0xC000000000000001) != 0)
          v23 = (id)MEMORY[0x1BCCF24CC](v22 - 4, v2);
        else
          v23 = *(id *)(v2 + 8 * v22);
        v14 = v23;
        v24 = (char *)(v22 - 3);
        if (__OFADD__(v22 - 4, 1))
          goto LABEL_52;
        if ((sub_1BC62CD64() & 1) != 0)
          goto LABEL_14;

        ++v22;
      }
      while (v24 != v5);
    }
LABEL_35:
    swift_bridgeObjectRelease_n();
    v2 = *(_QWORD *)(v1 + 24);
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v5 = (char *)sub_1BC62D3B8();
      if (!v5)
        goto LABEL_49;
    }
    else
    {
      v5 = *(char **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v5)
        goto LABEL_49;
    }
    v1 = v2 & 0xC000000000000001;
    if ((v2 & 0xC000000000000001) != 0)
      v25 = (id)MEMORY[0x1BCCF24CC](0, v2);
    else
      v25 = *(id *)(v2 + 32);
    v14 = v25;
    if ((sub_1BC62CD7C() & 1) != 0)
    {
LABEL_14:
      swift_bridgeObjectRelease_n();

      v10 = (id)HKHealthUIFrameworkBundle();
      v11 = (void *)sub_1BC62C650();
      v12 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v11, v10);
      goto LABEL_50;
    }

    if (v5 != (char *)1)
    {
      v26 = 5;
      do
      {
        if (v1)
          v27 = (id)MEMORY[0x1BCCF24CC](v26 - 4, v2);
        else
          v27 = *(id *)(v2 + 8 * v26);
        v14 = v27;
        v28 = (char *)(v26 - 3);
        if (__OFADD__(v26 - 4, 1))
          goto LABEL_53;
        if ((sub_1BC62CD7C() & 1) != 0)
          goto LABEL_14;

        ++v26;
      }
      while (v28 != v5);
    }
LABEL_49:
    swift_bridgeObjectRelease_n();
    v10 = (id)HKHealthUIFrameworkBundle();
    v11 = (void *)sub_1BC62C650();
    v12 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v11, v10);
    goto LABEL_50;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v1 = *(_QWORD *)(v0 + 24);
    if (v1 >> 62)
      goto LABEL_54;
    v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v6)
    {
      while (1)
      {
        v7 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF24CC](0, v1) : *(id *)(v1 + 32);
        v8 = v7;
        if ((sub_1BC62CD64() & 1) != 0)
          break;

        if (v6 != 1)
        {
          v16 = 5;
          while (1)
          {
            v17 = (v1 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x1BCCF24CC](v16 - 4, v1)
                : *(id *)(v1 + 8 * v16);
            v8 = v17;
            v18 = v16 - 3;
            if (__OFADD__(v16 - 4, 1))
              break;
            if ((sub_1BC62CD64() & 1) != 0)
              goto LABEL_8;

            ++v16;
            if (v18 == v6)
              goto LABEL_24;
          }
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          swift_bridgeObjectRetain_n();
          v6 = sub_1BC62D3B8();
          if (v6)
            continue;
        }
        goto LABEL_24;
      }
LABEL_8:
      swift_bridgeObjectRelease_n();

      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v11 = (void *)sub_1BC62C650();
      v12 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v11, v10);
    }
    else
    {
LABEL_24:
      swift_bridgeObjectRelease_n();
      sub_1BC62BAF8();
      v19 = sub_1BC62BB28();
      v20 = sub_1BC62CAD0();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_1BC30A000, v19, v20, "SignedClinicalDataPreviewViewController is in “Add to Wallet” mode but got no immunization record types, falling back to showing generic top icon", v21, 2u);
        MEMORY[0x1BCCF36A8](v21, -1, -1);
      }

      (*(void (**)(char *, unint64_t))(v3 + 8))(v5, v2);
      v10 = (id)HKHealthUIFrameworkBundle();
      v11 = (void *)sub_1BC62C650();
      v12 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v11, v10);
    }
  }
  else
  {
    v15 = swift_getObjCClassFromMetadata();
    v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v15);
    v11 = (void *)sub_1BC62C650();
    v12 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v11, v10);
  }
LABEL_50:
  v29 = v12;

  return v29;
}

uint64_t sub_1BC4EEF60()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  if (!*(_BYTE *)(v0 + 16))
  {
    if (qword_1EF428588 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    if (qword_1EF428588 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (qword_1EF428588 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v1 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t *sub_1BC4EF11C(unint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = v2;
  v32 = *v2;
  v33 = a2;
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_44;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; v10 = sub_1BC62D3B8())
  {
    v11 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) == 0)
    {
      v12 = *(id *)(a1 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v12 = (id)MEMORY[0x1BCCF24CC](0, a1);
LABEL_5:
      v13 = v12;
      if ((sub_1BC62CD70() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v14 = 0;
        goto LABEL_22;
      }

      if (v10 == 1)
        goto LABEL_8;
      v31 = v7;
      if (v11)
        break;
      v11 = 5;
      while (1)
      {
        v7 = v11 - 3;
        if (__OFADD__(v11 - 4, 1))
          break;
        v13 = *(id *)(a1 + 8 * v11);
        if ((sub_1BC62CD70() & 1) != 0)
        {
LABEL_20:
          swift_bridgeObjectRelease();
          v14 = 0;
          goto LABEL_21;
        }

        ++v11;
        if (v7 == v10)
        {
LABEL_19:
          swift_bridgeObjectRelease();
          v13 = 0;
          v14 = 1;
LABEL_21:
          v7 = v31;
          goto LABEL_22;
        }
      }
      __break(1u);
    }
    v15 = 1;
    while (1)
    {
      v16 = MEMORY[0x1BCCF24CC](v15, a1);
      v7 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      v13 = (id)v16;
      if ((sub_1BC62CD70() & 1) != 0)
        goto LABEL_20;
      swift_unknownObjectRelease();
      ++v15;
      if (v7 == v10)
        goto LABEL_19;
    }
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
  }
LABEL_8:
  swift_bridgeObjectRelease();
  v13 = 0;
  v14 = 1;
LABEL_22:

  sub_1BC62B9FC();
  if ((sub_1BC62B9E4() & 1) == 0)
  {
    v17 = v33;
    if (v33)
    {
LABEL_27:
      v18 = 0;
      goto LABEL_28;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    sub_1BC4F169C();
    swift_allocError();
    swift_willThrow();
    type metadata accessor for SignedClinicalDataImportHandler();
    swift_deallocPartialClassInstance();
    return v4;
  }
  v17 = v33;
  if (v33)
  {
    if ((v14 & 1) != 0)
    {
      v18 = 2;
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if ((v14 & 1) == 0)
    goto LABEL_41;
  v18 = 1;
LABEL_28:
  *((_BYTE *)v4 + 16) = v18;
  v4[3] = a1;
  v4[4] = v17;
  swift_retain();
  sub_1BC62BAF8();
  swift_retain_n();
  v19 = sub_1BC62BB28();
  v20 = sub_1BC62CADC();
  if (os_log_type_enabled(v19, v20))
  {
    v30[1] = v3;
    v31 = v7;
    v30[0] = v6;
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v34 = v22;
    *(_DWORD *)v21 = 136315394;
    v35 = v32;
    swift_getMetatypeMetadata();
    v23 = sub_1BC62C6E0();
    v35 = sub_1BC4991F0(v23, v24, &v34);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    v25 = 0xEB0000000074656CLL;
    v26 = 0x6C61576F54646461;
    if (*((_BYTE *)v4 + 16) != 1)
    {
      v26 = 0xD000000000000014;
      v25 = 0x80000001BC650CC0;
    }
    if (*((_BYTE *)v4 + 16))
      v27 = v26;
    else
      v27 = 0x6165486F54646461;
    if (*((_BYTE *)v4 + 16))
      v28 = v25;
    else
      v28 = 0xEB0000000068746CLL;
    v35 = sub_1BC4991F0(v27, v28, &v34);
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v19, v20, "%s initialized in %s mode", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v22, -1, -1);
    MEMORY[0x1BCCF36A8](v21, -1, -1);

    swift_release();
    (*(void (**)(char *, _QWORD))(v31 + 8))(v9, v30[0]);
  }
  else
  {

    swift_release();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v4;
}

uint64_t sub_1BC4EF5B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t Strong;

  if (a1)
  {
    v4 = a1;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      *(_QWORD *)(Strong + 24) = v4;
      swift_bridgeObjectRetain();
      swift_release();
      swift_bridgeObjectRelease();
    }
    a1 = 1;
  }
  return a3(a1);
}

uint64_t sub_1BC4EF644(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v5 = *v2;
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BAF8();
  swift_retain_n();
  v10 = sub_1BC62BB28();
  v11 = sub_1BC62CADC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v21 = v6;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v22 = a1;
    v15 = v14;
    v26 = v14;
    v23 = a2;
    v24 = v5;
    *(_DWORD *)v13 = 136315138;
    v20[1] = v13 + 4;
    swift_getMetatypeMetadata();
    v24 = sub_1BC62C6E0();
    v25 = v16;
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v24 = sub_1BC4991F0(v24, v25, &v26);
    a2 = v23;
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v10, v11, "%s adding records", v13, 0xCu);
    swift_arrayDestroy();
    v17 = v15;
    a1 = v22;
    MEMORY[0x1BCCF36A8](v17, -1, -1);
    MEMORY[0x1BCCF36A8](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v2;
  v18[3] = a1;
  v18[4] = a2;
  swift_retain();
  swift_retain();
  sub_1BC4EFC5C((void (*)(_QWORD, _QWORD))sub_1BC4F14D4, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1BC4EF8E4(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_BYTE *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  sub_1BC4F152C(a1, a2);
  swift_retain();
  swift_retain();
  sub_1BC4F0658((uint64_t)a1, a2, (void (*)(_QWORD))sub_1BC4F1518, v10);
  return swift_release();
}

void sub_1BC4EF984(void *a1, void *a2, char a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  void (*v29)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v11 = sub_1BC62BB34();
  v30 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4F152C(a2, a3);
  sub_1BC4F161C(a1);
  sub_1BC4F1560((uint64_t)a2, a3);
  v15 = v14;
  sub_1BC62BAF8();
  swift_retain();
  sub_1BC4F162C(v15);
  swift_retain();
  sub_1BC4F162C(v15);
  v16 = sub_1BC62BB28();
  v17 = sub_1BC62CADC();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v28[0] = v11;
    v19 = v18;
    v20 = swift_slowAlloc();
    v32 = v20;
    *(_DWORD *)v19 = 136315394;
    v29 = a5;
    v21 = sub_1BC41E1F4();
    v31 = sub_1BC4991F0(v21, v22, &v32);
    v28[1] = a6;
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    sub_1BC4F162C(v15);
    sub_1BC4EE2B0(v15);
    v24 = v23;
    v26 = v25;
    sub_1BC4F165C(v15);
    v27 = v24;
    a5 = v29;
    v31 = sub_1BC4991F0(v27, v26, &v32);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC4F165C(v15);
    sub_1BC4F165C(v15);
    _os_log_impl(&dword_1BC30A000, v16, v17, "%s adding records outcome: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v20, -1, -1);
    MEMORY[0x1BCCF36A8](v19, -1, -1);

    (*(void (**)(char *, _QWORD))(v30 + 8))(v13, v28[0]);
  }
  else
  {
    swift_release_n();
    sub_1BC4F165C(v15);
    sub_1BC4F165C(v15);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v11);
  }
  a5(v15);
  sub_1BC4F165C(v15);
}

uint64_t sub_1BC4EFC5C(void (*a1)(_QWORD, _QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD, _QWORD);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = *(_QWORD *)v2;
  v7 = sub_1BC62BB34();
  v35 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - v11;
  if ((sub_1BC4EDB48(*(_BYTE *)(v2 + 16)) & 1) != 0 && (v13 = *(_QWORD *)(v2 + 32)) != 0)
  {
    swift_retain();
    sub_1BC62BAF8();
    swift_retain_n();
    v14 = sub_1BC62BB28();
    v15 = sub_1BC62CADC();
    if (os_log_type_enabled(v14, v15))
    {
      v33 = v7;
      v16 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v38 = v32;
      v34 = a1;
      *(_DWORD *)v16 = 136315138;
      v30[1] = v16 + 4;
      v31 = v16;
      v36 = v6;
      swift_getMetatypeMetadata();
      v36 = sub_1BC62C6E0();
      v37 = v17;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v36 = sub_1BC4991F0(v36, v37, &v38);
      a1 = v34;
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      v18 = v31;
      _os_log_impl(&dword_1BC30A000, v14, v15, "%s starting to store to Health", v31, 0xCu);
      v19 = v32;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v19, -1, -1);
      MEMORY[0x1BCCF36A8](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v33);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v7);
    }
    swift_retain();
    swift_retain();
    sub_1BC471850(v13, v3, (uint64_t)a1, a2);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    sub_1BC62BAF8();
    swift_retain_n();
    v20 = sub_1BC62BB28();
    v21 = sub_1BC62CADC();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v33 = v7;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v34 = a1;
      v25 = v24;
      v38 = v24;
      *(_DWORD *)v23 = 136315138;
      v32 = (uint64_t)(v23 + 4);
      v36 = v6;
      swift_getMetatypeMetadata();
      v36 = sub_1BC62C6E0();
      v37 = v26;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v36 = sub_1BC4991F0(v36, v37, &v38);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v20, v21, "%s skipping storing to Health", v23, 0xCu);
      swift_arrayDestroy();
      v27 = v25;
      a1 = v34;
      MEMORY[0x1BCCF36A8](v27, -1, -1);
      MEMORY[0x1BCCF36A8](v23, -1, -1);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v33);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v7);
    }
    v28 = swift_bridgeObjectRetain();
    a1(v28, 0);
    return swift_bridgeObjectRelease();
  }
}

void sub_1BC4F0130(uint64_t a1, int a2, void *a3, uint64_t a4, void (*a5)(_QWORD, _QWORD), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD, _QWORD);
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v12 = sub_1BC62BB34();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v44 - v17;
  if (!a1)
  {
    sub_1BC62BAF8();
    swift_retain();
    v28 = a3;
    swift_retain();
    v29 = a3;
    v30 = sub_1BC62BB28();
    v31 = sub_1BC62CAC4();
    if (os_log_type_enabled(v30, v31))
    {
      v49 = v13;
      v45 = v12;
      v46 = a6;
      v47 = a5;
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v51 = v33;
      *(_DWORD *)v32 = 136315394;
      v34 = sub_1BC41E1F4();
      v50 = sub_1BC4991F0(v34, v35, &v51);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      if (a3)
      {
        swift_getErrorValue();
        v36 = sub_1BC62D610();
        v38 = v37;
      }
      else
      {
        v38 = 0xEB000000007D726FLL;
        v36 = 0x727265206C696E7BLL;
      }
      v50 = sub_1BC4991F0(v36, v38, &v51);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v30, v31, "%s failed to store to Health: %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v33, -1, -1);
      MEMORY[0x1BCCF36A8](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v45);
      a5 = v47;
      v40 = a3;
      if (a3)
        goto LABEL_17;
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      v40 = a3;
      if (a3)
      {
LABEL_17:
        v43 = a3;
        a5(v40, 3);

        return;
      }
    }
    v41 = (void *)objc_opt_self();
    v42 = (void *)sub_1BC62C650();
    v40 = objc_msgSend(v41, sel_hk_error_description_, 0, v42);

    goto LABEL_17;
  }
  v48 = a2;
  v49 = v13;
  *(_QWORD *)(a4 + 24) = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BC62BAF8();
  swift_retain_n();
  v19 = sub_1BC62BB28();
  v20 = sub_1BC62CADC();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v46 = a6;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v47 = a5;
    v24 = v23;
    v51 = v23;
    *(_DWORD *)v22 = 136315138;
    v45 = v12;
    v25 = sub_1BC41E1F4();
    v50 = sub_1BC4991F0(v25, v26, &v51);
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v19, v20, "%s stored to Health", v22, 0xCu);
    swift_arrayDestroy();
    v27 = v24;
    a5 = v47;
    MEMORY[0x1BCCF36A8](v27, -1, -1);
    MEMORY[0x1BCCF36A8](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v45);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v12);
  }
  if ((v48 & 1) != 0)
    v39 = 2;
  else
    v39 = 1;
  a5(a1, v39);
  swift_bridgeObjectRelease();
}

void sub_1BC4F0658(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  void *v21;
  void *v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  unint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  id v47;
  uint8_t *v48;
  id v49;
  uint64_t v50;
  id v51;
  void (*v52)(_QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t aBlock;
  unint64_t v56;
  void (*v57)(uint64_t, void *, void *);
  void *v58;
  void (*v59)(void *, void *);
  _QWORD *v60;
  uint64_t v61;

  v5 = v4;
  v10 = *(_QWORD *)v5;
  v11 = sub_1BC62BB34();
  v53 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v48 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v48 - v18;
  v20 = sub_1BC4EDC54(*(_BYTE *)(v5 + 16));
  v54 = v11;
  if ((v20 & 1) != 0)
  {
    sub_1BC4EE038(a1, a2);
    if (v21)
    {
      v22 = v21;
      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
      v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EF58]), sel_initWithHealthStore_, v23);
      sub_1BC62BAF8();
      swift_retain_n();
      v24 = sub_1BC62BB28();
      v25 = sub_1BC62CADC();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v50 = a4;
        v27 = (uint8_t *)v26;
        v28 = swift_slowAlloc();
        v52 = a3;
        v29 = v28;
        v61 = v28;
        v49 = v23;
        *(_DWORD *)v27 = 136315138;
        v48 = v27 + 4;
        aBlock = v10;
        swift_getMetatypeMetadata();
        aBlock = sub_1BC62C6E0();
        v56 = v30;
        swift_bridgeObjectRetain();
        sub_1BC62C764();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1BC62C764();
        swift_bridgeObjectRelease();
        aBlock = sub_1BC4991F0(aBlock, v56, &v61);
        v23 = v49;
        sub_1BC62CFF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC30A000, v24, v25, "%s starting to fetch SCD group", v27, 0xCu);
        swift_arrayDestroy();
        v31 = v29;
        a3 = v52;
        MEMORY[0x1BCCF36A8](v31, -1, -1);
        v32 = v27;
        a4 = v50;
        MEMORY[0x1BCCF36A8](v32, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v19, v54);
      v45 = (_QWORD *)swift_allocObject();
      v45[2] = v5;
      v45[3] = a3;
      v45[4] = a4;
      v59 = sub_1BC4F144C;
      v60 = v45;
      aBlock = MEMORY[0x1E0C809B0];
      v56 = 1107296256;
      v57 = sub_1BC46FB0C;
      v58 = &block_descriptor_44;
      v46 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      v47 = v51;
      objc_msgSend(v51, sel_fetchSignedClinicalDataGroupBackingMedicalRecord_options_completion_, v22, 11, v46);
      _Block_release(v46);

    }
    else
    {
      sub_1BC62BAF8();
      swift_retain_n();
      v38 = sub_1BC62BB28();
      v39 = sub_1BC62CADC();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        v41 = swift_slowAlloc();
        v52 = a3;
        v42 = v41;
        v61 = v41;
        v50 = a4;
        *(_DWORD *)v40 = 136315138;
        v51 = v40 + 4;
        aBlock = v10;
        swift_getMetatypeMetadata();
        aBlock = sub_1BC62C6E0();
        v56 = v43;
        swift_bridgeObjectRetain();
        sub_1BC62C764();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1BC62C764();
        swift_bridgeObjectRelease();
        aBlock = sub_1BC4991F0(aBlock, v56, &v61);
        sub_1BC62CFF8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC30A000, v38, v39, "%s skipping adding to Wallet (may not proceed given Health outcome)", v40, 0xCu);
        swift_arrayDestroy();
        v44 = v42;
        a3 = v52;
        MEMORY[0x1BCCF36A8](v44, -1, -1);
        MEMORY[0x1BCCF36A8](v40, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v54);
      a3(0);
    }
  }
  else
  {
    v52 = a3;
    sub_1BC62BAF8();
    swift_retain_n();
    v33 = sub_1BC62BB28();
    v34 = sub_1BC62CADC();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v61 = v36;
      *(_DWORD *)v35 = 136315138;
      v51 = v35 + 4;
      aBlock = v10;
      swift_getMetatypeMetadata();
      aBlock = sub_1BC62C6E0();
      v56 = v37;
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      aBlock = sub_1BC4991F0(aBlock, v56, &v61);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v33, v34, "%s skipping adding to Wallet (not in add-to-Wallet mode)", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v36, -1, -1);
      MEMORY[0x1BCCF36A8](v35, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v54);
    v52(0);
  }
}

void sub_1BC4F0D8C(void *a1, void *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  id v26;
  void *v27;
  void (*v28)(uint64_t);
  void *v29;
  id v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  id v42;
  void (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v9 = sub_1BC62BB34();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v42 - v14;
  if (a1)
  {
    v16 = a1;
    sub_1BC62BAF8();
    swift_retain_n();
    v17 = sub_1BC62BB28();
    v18 = sub_1BC62CADC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v43 = a4;
      v20 = (uint8_t *)v19;
      v21 = swift_slowAlloc();
      v44 = v10;
      v22 = v21;
      v47 = v21;
      v45 = v9;
      *(_DWORD *)v20 = 136315138;
      v42 = v16;
      v23 = sub_1BC41E1F4();
      v46 = sub_1BC4991F0(v23, v24, &v47);
      v16 = v42;
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v17, v18, "%s got SCD group, attempting to add to Wallet", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v22, -1, -1);
      v25 = v20;
      a4 = v43;
      MEMORY[0x1BCCF36A8](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    type metadata accessor for SignedClinicalDataWalletHandler();
    swift_allocObject();
    sub_1BC41D188(v16, a4, a5);

    swift_release();
  }
  else
  {
    v44 = v10;
    v45 = v9;
    if (a2)
    {
      v26 = a2;
    }
    else
    {
      v27 = (void *)objc_opt_self();
      v28 = a4;
      v29 = (void *)sub_1BC62C650();
      v26 = objc_msgSend(v27, sel_hk_error_description_, 0, v29);

      a4 = v28;
    }
    v30 = a2;
    sub_1BC62BAF8();
    swift_retain();
    v31 = v26;
    swift_retain();
    v32 = v26;
    v33 = sub_1BC62BB28();
    v34 = sub_1BC62CAC4();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v47 = v36;
      *(_DWORD *)v35 = 136315394;
      v43 = a4;
      v37 = sub_1BC41E1F4();
      v46 = sub_1BC4991F0(v37, v38, &v47);
      v42 = (id)a5;
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      swift_getErrorValue();
      v39 = sub_1BC62D610();
      v46 = sub_1BC4991F0(v39, v40, &v47);
      a4 = v43;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v33, v34, "%s failed to fetch SCD group: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v36, -1, -1);
      MEMORY[0x1BCCF36A8](v35, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v45);
    v41 = v26;
    a4((uint64_t)v26);

  }
}

uint64_t sub_1BC4F1278()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SignedClinicalDataImportHandler()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for SignedClinicalDataImportHandler.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC4F1310 + 4 * byte_1BC645138[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC4F1344 + 4 * byte_1BC645133[v4]))();
}

uint64_t sub_1BC4F1344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4F134C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC4F1354);
  return result;
}

uint64_t sub_1BC4F1360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4F1368);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC4F136C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4F1374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataImportHandler.Mode()
{
  return &type metadata for SignedClinicalDataImportHandler.Mode;
}

unint64_t sub_1BC4F1394()
{
  unint64_t result;

  result = qword_1EF4340A0;
  if (!qword_1EF4340A0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6451A8, &type metadata for SignedClinicalDataImportHandler.Mode);
    atomic_store(result, (unint64_t *)&qword_1EF4340A0);
  }
  return result;
}

unint64_t sub_1BC4F13D8()
{
  return 0xD000000000000015;
}

uint64_t sub_1BC4F1400()
{
  unint64_t v0;

  v0 = sub_1BC62D430();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

void sub_1BC4F144C(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC4F0D8C(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t block_copy_helper_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_43()
{
  return swift_release();
}

void sub_1BC4F1470(void *a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      break;
    case 3:

      break;
    default:
      return;
  }
}

uint64_t objectdestroyTm_8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4F14D4(void *a1, char a2)
{
  uint64_t *v2;

  return sub_1BC4EF8E4(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BC4F14E0()
{
  uint64_t v0;

  sub_1BC4F1470(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC4F1518(void *a1)
{
  uint64_t v1;

  sub_1BC4EF984(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(_QWORD))(v1 + 40), *(_QWORD *)(v1 + 48));
}

id sub_1BC4F152C(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BC4F1560(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC4F1590()
{
  unint64_t v0;
  void *v1;

  sub_1BC4F1470(v1, 0);
  if (v0 >= 5)
    return v0 | 0x4000000000000000;
  else
    return qword_1BC645390[v0];
}

id sub_1BC4F161C(id result)
{
  if ((unint64_t)result >= 5)
    return result;
  return result;
}

unint64_t sub_1BC4F162C(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
      goto LABEL_3;
    case 1uLL:
    case 2uLL:
    case 3uLL:
      result &= 0x1FFFFFFFFFFFFFFFuLL;
LABEL_3:
      result = (unint64_t)(id)result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BC4F165C(unint64_t a1)
{
  switch(a1 >> 61)
  {
    case 0uLL:
      goto LABEL_3;
    case 1uLL:
    case 2uLL:
    case 3uLL:
      a1 &= 0x1FFFFFFFFFFFFFFFuLL;
LABEL_3:

      break;
    default:
      return;
  }
}

void sub_1BC4F168C(id a1)
{
  if ((unint64_t)a1 >= 5)

}

unint64_t sub_1BC4F169C()
{
  unint64_t result;

  result = qword_1EF4340A8;
  if (!qword_1EF4340A8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64534C, &type metadata for SignedClinicalDataImportHandlerError);
    atomic_store(result, (unint64_t *)&qword_1EF4340A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SignedClinicalDataImportHandlerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC4F1720 + 4 * byte_1BC645151[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC4F1740 + 4 * byte_1BC645156[v4]))();
}

_BYTE *sub_1BC4F1720(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC4F1740(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4F1748(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4F1750(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4F1758(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4F1760(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataImportHandlerError()
{
  return &type metadata for SignedClinicalDataImportHandlerError;
}

unint64_t sub_1BC4F1784()
{
  unint64_t result;

  result = qword_1EF4340B0;
  if (!qword_1EF4340B0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC645324, &type metadata for SignedClinicalDataImportHandlerError);
    atomic_store(result, (unint64_t *)&qword_1EF4340B0);
  }
  return result;
}

unint64_t sub_1BC4F17F4()
{
  return 0xD000000000000014;
}

id AccountTableViewCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

char *AccountTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC4F22BC(a2, a3);
}

char *sub_1BC4F18CC(void *a1)
{
  char *v1;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  char *v9;
  char *v10;
  char *v11;
  void *v12;
  char *v13;
  id v14;
  id v15;
  objc_super v17;

  v3 = OBJC_IVAR___HRAccountTableViewCell_brandView;
  v4 = *MEMORY[0x1E0C9D628];
  v5 = *(double *)(MEMORY[0x1E0C9D628] + 8);
  v6 = *(double *)(MEMORY[0x1E0C9D628] + 16);
  v7 = *(double *)(MEMORY[0x1E0C9D628] + 24);
  v8 = objc_allocWithZone((Class)WDMedicalRecordBrandView);
  v9 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v8, sel_initWithFrame_, v4, v5, v6, v7);

  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for AccountTableViewCell();
  v10 = (char *)objc_msgSendSuper2(&v17, sel_initWithCoder_, a1);
  v11 = v10;
  if (v10)
  {
    v12 = *(void **)&v10[OBJC_IVAR___HRAccountTableViewCell_brandView];
    v13 = v10;
    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v12, sel_setLogoSize_, 36.0);
    v14 = objc_msgSend(v13, sel_contentView);
    objc_msgSend(v14, sel_addSubview_, v12);

    v15 = objc_msgSend(v13, sel_contentView);
    if (qword_1EF428860 != -1)
      swift_once();
    objc_msgSend(v12, sel_hk_alignConstraintsWithView_insets_, v15, xmmword_1EF43AC48, *(double *)&qword_1EF43AC58, unk_1EF43AC60);

  }
  else
  {
    v15 = a1;
  }

  return v11;
}

void sub_1BC4F1AA4(void *a1, uint64_t a2)
{
  sub_1BC4F1B68(a1, 0, a2, 0, 0, 0);
}

void sub_1BC4F1AC4(void *a1, uint64_t a2)
{
  sub_1BC4F1B68(a1, 0, a2, 0, 0, 1);
}

void sub_1BC4F1AE4(void *a1, uint64_t a2, void *a3, void *a4, char a5)
{
  id v8;
  id v9;
  id v10;

  v8 = a3;
  v9 = a4;
  v10 = a1;
  sub_1BC4F1B68(v8, 0, (uint64_t)v9, 0, 0, a5);

}

void sub_1BC4F1B68(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;

  v48 = a4;
  sub_1BC4F24F4();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)&v17 = MEMORY[0x1E0C80A78](v15).n128_u64[0];
  v47 = (uint64_t)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v49 = v6;
  v19 = *(void **)(v6 + OBJC_IVAR___HRAccountTableViewCell_brandView);
  objc_msgSend(v19, sel_setBrandable_dataProvider_, a1, a3, v17);
  if ((a6 & 1) != 0)
    goto LABEL_7;
  if (qword_1EF4287E0 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_1EF438CA0 != 1)
    goto LABEL_7;
  v20 = a2;
  v21 = a1;
  sub_1BC3EEE9C(v21, a2, 0, 0, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC4F24F4);
LABEL_7:
    v22 = objc_msgSend(v19, sel_brandSubtitleLabel);
    v23 = objc_msgSend(a1, sel_subtitle);
    objc_msgSend(v22, sel_setText_, v23);

    v24 = objc_msgSend(v19, sel_brandSubtitleLabel);
    v25 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v24, sel_setTextColor_, v25);

    v26 = objc_msgSend(v19, sel_brandSubtitleLabel);
    objc_msgSend(v26, sel_setNumberOfLines_, 1);

    goto LABEL_8;
  }
  sub_1BC378168((uint64_t)v14, v47);
  v38 = objc_msgSend(v19, sel_brandSubtitleLabel);
  sub_1BC3EF740();
  if (v39)
    goto LABEL_14;
  v40 = objc_msgSend(v21, sel_subtitle);
  if (v40)
  {
    v41 = v40;
    sub_1BC62C680();

LABEL_14:
    v42 = v47;
    v43 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v43 = 0;
  v42 = v47;
LABEL_15:
  objc_msgSend(v38, sel_setText_, v43);

  v44 = objc_msgSend(v19, sel_brandSubtitleLabel);
  if ((*(_QWORD *)(v42 + *(int *)(v15 + 20)) | 2) == 3
    || (v45 = objc_msgSend((id)objc_opt_self(), sel_hk_appErrorColor)) == 0)
  {
    v45 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  }
  objc_msgSend(v44, sel_setTextColor_, v45);

  v46 = objc_msgSend(v19, sel_brandSubtitleLabel);
  objc_msgSend(v46, sel_setNumberOfLines_, 0);

  sub_1BC348D78(v42, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalAccountLoginUpgradeAction);
LABEL_8:
  v27 = (void *)v49;
  objc_msgSend((id)v49, sel_setAccessoryType_, 1);
  if (a5)
  {
    swift_bridgeObjectRetain();
    v28 = v48;
    v29 = (void *)sub_1BC62C650();
    objc_msgSend(v27, sel_setAccessibilityIdentifier_, v29);

    v30 = objc_msgSend(v19, sel_brandTitleLabel);
    sub_1BC359F44();
    v31 = swift_allocObject();
    v49 = xmmword_1BC6395A0;
    *(_OWORD *)(v31 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v31 + 32) = v28;
    *(_QWORD *)(v31 + 40) = a5;
    *(_QWORD *)(v31 + 48) = 0x656C746954;
    *(_QWORD *)(v31 + 56) = 0xE500000000000000;
    swift_bridgeObjectRetain();
    v32 = (void *)sub_1BC62C86C();
    v33 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v30, sel_setAccessibilityIdentifier_, v33);
    swift_bridgeObjectRelease();

    v34 = objc_msgSend(v19, sel_brandSubtitleLabel);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v49;
    *(_QWORD *)(v35 + 32) = v28;
    *(_QWORD *)(v35 + 40) = a5;
    *(_QWORD *)(v35 + 48) = 0x656C746974627553;
    *(_QWORD *)(v35 + 56) = 0xE800000000000000;
    v36 = (void *)sub_1BC62C86C();
    v37 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v34, sel_setAccessibilityIdentifier_, v37);
    swift_bridgeObjectRelease();

  }
}

void sub_1BC4F226C()
{
  uint64_t v0;

}

id AccountTableViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_1BC4F22BC(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  char *v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  id v16;
  objc_super v18;

  v4 = OBJC_IVAR___HRAccountTableViewCell_brandView;
  v5 = *MEMORY[0x1E0C9D628];
  v6 = *(double *)(MEMORY[0x1E0C9D628] + 8);
  v7 = *(double *)(MEMORY[0x1E0C9D628] + 16);
  v8 = *(double *)(MEMORY[0x1E0C9D628] + 24);
  v9 = objc_allocWithZone((Class)WDMedicalRecordBrandView);
  v10 = v2;
  *(_QWORD *)&v2[v4] = objc_msgSend(v9, sel_initWithFrame_, v5, v6, v7, v8);

  if (a2)
  {
    v11 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v18.receiver = v10;
  v18.super_class = (Class)type metadata accessor for AccountTableViewCell();
  v12 = (char *)objc_msgSendSuper2(&v18, sel_initWithStyle_reuseIdentifier_, 3, v11);

  v13 = *(void **)&v12[OBJC_IVAR___HRAccountTableViewCell_brandView];
  v14 = v12;
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v13, sel_setLogoSize_, 36.0);
  v15 = objc_msgSend(v14, sel_contentView);
  objc_msgSend(v15, sel_addSubview_, v13);

  v16 = objc_msgSend(v14, sel_contentView);
  if (qword_1EF428860 != -1)
    swift_once();
  objc_msgSend(v13, sel_hk_alignConstraintsWithView_insets_, v16, xmmword_1EF43AC48, *(double *)&qword_1EF43AC58, unk_1EF43AC60);

  return v14;
}

uint64_t type metadata accessor for AccountTableViewCell()
{
  return objc_opt_self();
}

uint64_t method lookup function for AccountTableViewCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountTableViewCell.configureWithAccountDataProviderForObjC(_:_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AccountTableViewCell.configureIgnoreActionWithAccountDataProviderForObjC(_:_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

void sub_1BC4F24F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42A0C0)
  {
    type metadata accessor for ClinicalAccountLoginUpgradeAction();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42A0C0);
  }
}

uint64_t sub_1BC4F2548()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC4F2580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v14 = a1;
  v15 = a2;
  v12 = sub_1BC62CC68();
  v3 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62CC20();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1BC62C4AC();
  MEMORY[0x1E0C80A78](v8);
  v13 = OBJC_IVAR____TtC15HealthRecordsUI18PDFReportGenerator_queue;
  v11 = sub_1BC35A280();
  sub_1BC62C494();
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A58E8, v7, MEMORY[0x1E0DEF828]);
  sub_1BC357158(0, &qword_1ED6A58B0, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35A2BC((unint64_t *)&qword_1ED6A58B8, &qword_1ED6A58B0, v7);
  sub_1BC62D0A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v12);
  *(_QWORD *)(v2 + v13) = sub_1BC62CCA4();
  v9 = v15;
  *(_QWORD *)(v2 + 16) = v14;
  sub_1BC36D7DC(v9, v2 + OBJC_IVAR____TtC15HealthRecordsUI18PDFReportGenerator_configuration);
  return v2;
}

uint64_t sub_1BC4F2784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)();
  _QWORD *v22;
  void *v23;
  uint64_t *v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _QWORD aBlock[6];

  v29 = a4;
  v27 = a2;
  v28 = a3;
  v30 = a1;
  v33 = a7;
  v10 = _s13ConfigurationVMa();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4F32A0();
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 20) = 0;
  *(_BYTE *)(v14 + 16) = 0;
  v32 = type metadata accessor for PDFReportGenerator.CancellationToken();
  v15 = swift_allocObject();
  v31 = v15;
  *(_QWORD *)(v15 + 16) = sub_1BC4F32FC;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = sub_1BC4F332C;
  v16[3] = v14;
  v16[4] = a5;
  v16[5] = a6;
  v26 = *(id *)(v7 + 16);
  sub_1BC36D6D8(v7 + OBJC_IVAR____TtC15HealthRecordsUI18PDFReportGenerator_configuration, (uint64_t)v13);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = (v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BC4F338C;
  *(_QWORD *)(v19 + 24) = v16;
  v20 = v27;
  *(_QWORD *)(v19 + 32) = v7;
  *(_QWORD *)(v19 + 40) = v20;
  *(_QWORD *)(v19 + 48) = v28;
  *(_BYTE *)(v19 + 56) = v29 & 1;
  *(_QWORD *)(v19 + 64) = v30;
  sub_1BC36D7DC((uint64_t)v13, v19 + v17);
  v21 = (uint64_t (**)())(v19 + v18);
  *v21 = sub_1BC4F332C;
  v21[1] = (uint64_t (*)())v14;
  v22 = (_QWORD *)(v19 + ((v18 + 23) & 0xFFFFFFFFFFFFFFF8));
  *v22 = a5;
  v22[1] = a6;
  aBlock[4] = sub_1BC4F3548;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39B5A0;
  aBlock[3] = &block_descriptor_45;
  v23 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v26, sel_hk_fetchExistingDemographicInformationWithCompletion_, v23);
  _Block_release(v23);
  v24 = v33;
  v33[3] = v32;
  swift_release();
  result = swift_release();
  *v24 = v31;
  return result;
}

uint64_t sub_1BC4F29E4(void *a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t result;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD aBlock[7];

  v52 = a1;
  v53 = a8;
  v51 = a7;
  v49 = a5;
  v50 = a6;
  v16 = sub_1BC62C47C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC62C4AC();
  v54 = *(_QWORD *)(v20 - 8);
  v55 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = _s13ConfigurationVMa();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  v26 = MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = a2(v26);
  if ((result & 1) == 0)
  {
    v44 = a12;
    v45 = a13;
    v42 = a10;
    v43 = a11;
    v48 = *(_QWORD *)(a4 + OBJC_IVAR____TtC15HealthRecordsUI18PDFReportGenerator_queue);
    sub_1BC36D6D8(a9, (uint64_t)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    v29 = (*(unsigned __int8 *)(v24 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v30 = (v25 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v47 = v17;
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = a2;
    *(_QWORD *)(v31 + 24) = a3;
    v46 = v16;
    v32 = v52;
    v33 = v49;
    *(_QWORD *)(v31 + 32) = v52;
    *(_QWORD *)(v31 + 40) = v33;
    *(_QWORD *)(v31 + 48) = v50;
    *(_BYTE *)(v31 + 56) = v51 & 1;
    *(_QWORD *)(v31 + 64) = v53;
    sub_1BC36D7DC((uint64_t)v27, v31 + v29);
    v34 = (_QWORD *)(v31 + v30);
    v35 = v43;
    *v34 = v42;
    v34[1] = v35;
    v36 = (_QWORD *)(v31 + ((v30 + 23) & 0xFFFFFFFFFFFFFFF8));
    v37 = v45;
    *v36 = v44;
    v36[1] = v37;
    aBlock[4] = sub_1BC4F3758;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_9_8;
    v38 = _Block_copy(aBlock);
    swift_retain();
    v39 = v32;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1BC62C494();
    v56 = MEMORY[0x1E0DEE9D8];
    v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35A2BC((unint64_t *)&qword_1ED6A58A0, (unint64_t *)&qword_1ED6A5890, v40);
    v41 = v46;
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v22, v19, v38);
    _Block_release(v38);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v19, v41);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v55);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC4F2CF0(uint64_t (*a1)(void), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t), uint64_t a10, void (*a11)(uint64_t, unint64_t, uint64_t, uint64_t), uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t inited;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  LODWORD(v72) = a6;
  v18 = sub_1BC62A4E4();
  v66 = *(_QWORD *)(v18 - 8);
  v67 = v18;
  MEMORY[0x1E0C80A78](v18);
  v65 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC62A82C();
  v61 = *(_QWORD *)(v20 - 8);
  v62 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BC62A8D4();
  v63 = *(_QWORD *)(v23 - 8);
  v64 = v23;
  MEMORY[0x1E0C80A78](v23);
  v71 = (uint64_t)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1BC62A760();
  v69 = *(_QWORD *)(v25 - 8);
  v70 = v25;
  MEMORY[0x1E0C80A78](v25);
  v68 = (uint64_t)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34B508(0, &qword_1EF429B08, (uint64_t)&_s13HealthKitDataVN, (uint64_t (*)(_QWORD, uint64_t))_s7PDFDataVMa);
  v28 = v27;
  v29 = MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v60 - v30;
  result = ((uint64_t (*)(uint64_t))a1)(v29);
  if ((result & 1) == 0)
  {
    sub_1BC36D6D8(a8, (uint64_t)&v31[*(int *)(v28 + 28)]);
    *(_QWORD *)v31 = a3;
    *((_QWORD *)v31 + 1) = a4;
    *((_QWORD *)v31 + 2) = a5;
    v31[24] = v72 & 1;
    *((_QWORD *)v31 + 4) = a7;
    v33 = a3;
    v34 = swift_bridgeObjectRetain();
    if ((((uint64_t (*)(uint64_t))a1)(v34) & 1) == 0)
    {
      v36 = a8;
      v37 = sub_1BC4B89E8((uint64_t)v31, a9, a10, v35);
      if (v38 >> 60 == 15)
      {
        a11(0, 0, 0, 0);
      }
      else
      {
        v39 = v37;
        v40 = v38;
        if ((a1() & 1) != 0)
        {
          sub_1BC4F37D4((uint64_t)v31);
          return sub_1BC35E5E8(v39, v40);
        }
        v41 = _s13ConfigurationVMa();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v68, v36 + *(int *)(v41 + 20), v70);
        v43 = v61;
        v42 = v62;
        (*(void (**)(char *, _QWORD, unint64_t))(v61 + 104))(v22, *MEMORY[0x1E0CB0EF8], v62);
        sub_1BC62A838();
        (*(void (**)(char *, unint64_t))(v43 + 8))(v22, v42);
        v44 = v65;
        sub_1BC62A4D8();
        v45 = objc_msgSend(v33, sel_firstName);
        sub_1BC62C680();
        v62 = v40;
        v72 = a12;

        sub_1BC62A4B4();
        v46 = objc_msgSend(v33, sel_lastName);
        sub_1BC62C680();

        sub_1BC62A4C0();
        v47 = (void *)objc_opt_self();
        v48 = (void *)sub_1BC62A4CC();
        v49 = objc_msgSend(v47, sel_localizedStringFromPersonNameComponents_style_options_, v48, 2, 0);

        v50 = sub_1BC62C680();
        v52 = v51;

        sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BC639590;
        *(_QWORD *)(inited + 32) = v50;
        *(_QWORD *)(inited + 40) = v52;
        v54 = v68;
        v55 = v71;
        v56 = sub_1BC4F3828(v68, inited, v71, 1);
        v58 = v57;
        swift_setDeallocating();
        swift_arrayDestroy();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v44, v67);
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v55, v64);
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v54, v70);
        v59 = v62;
        sub_1BC35D4EC(v39, v62);
        a11(v39, v59, v56, v58);
        sub_1BC35D530(v39, v59);
        swift_bridgeObjectRelease();
        sub_1BC35E5E8(v39, v59);
      }
    }
    return sub_1BC4F37D4((uint64_t)v31);
  }
  return result;
}

uint64_t sub_1BC4F3178()
{
  uint64_t v0;

  sub_1BC36DCA4(v0 + OBJC_IVAR____TtC15HealthRecordsUI18PDFReportGenerator_configuration);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC4F31C0()
{
  return type metadata accessor for PDFReportGenerator();
}

uint64_t type metadata accessor for PDFReportGenerator()
{
  uint64_t result;

  result = qword_1EF434118;
  if (!qword_1EF434118)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC4F3204()
{
  uint64_t result;
  unint64_t v1;

  result = _s13ConfigurationVMa();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for PDFReportGenerator.CancellationToken()
{
  return objc_opt_self();
}

void sub_1BC4F32A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF434260)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC62D244();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF434260);
  }
}

void sub_1BC4F32FC()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 20));
  *(_BYTE *)(v0 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v0 + 20));
}

uint64_t sub_1BC4F332C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = (os_unfair_lock_s *)(v0 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 20));
  v2 = *(unsigned __int8 *)(v0 + 16);
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t sub_1BC4F3360()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4F338C()
{
  uint64_t v0;
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD);
  char v2;

  v1 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 32);
  v2 = (*(uint64_t (**)(void))(v0 + 16))();
  if ((v2 & 1) != 0)
    v1(0, 0, 0, 0);
  return v2 & 1;
}

uint64_t sub_1BC4F33E0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)_s13ConfigurationVMa();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 72) & ~v2;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = v0 + v3;
  v5 = sub_1BC62A8D4();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = v4 + v1[5];
  v8 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

  v9 = v4 + v1[9];
  v10 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);

  v6(v4 + v1[12], v5);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4F3548(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(_s13ConfigurationVMa() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC4F29E4(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(_QWORD *)(v1 + 64), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t block_copy_helper_44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_44()
{
  return swift_release();
}

uint64_t sub_1BC4F35F0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)_s13ConfigurationVMa();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 72) & ~v2;
  swift_release();

  swift_bridgeObjectRelease();
  v4 = v0 + v3;
  v5 = sub_1BC62A8D4();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = v4 + v1[5];
  v8 = sub_1BC62A760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

  v9 = v4 + v1[9];
  v10 = sub_1BC62A820();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);

  v6(v4 + v1[12], v5);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC4F3758()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(_s13ConfigurationVMa() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC4F2CF0(*(uint64_t (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(_QWORD *)(v0 + 64), v0 + v2, *(uint64_t (**)(uint64_t))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1BC4F37D4(uint64_t a1)
{
  uint64_t v2;

  sub_1BC34B508(0, &qword_1EF429B08, (uint64_t)&_s13HealthKitDataVN, (uint64_t (*)(_QWORD, uint64_t))_s7PDFDataVMa);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC4F3828(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v56[12];
  int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;

  v57 = a4;
  v58 = a1;
  v5 = sub_1BC62A91C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v56[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v56[-v10];
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v13 = (void *)sub_1BC62A868();
  objc_msgSend(v12, sel_setCalendar_, v13);

  sub_1BC62A898();
  v14 = sub_1BC62A820();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = 0;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) != 1)
  {
    v16 = (void *)sub_1BC62A7E4();
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v11, v14);
  }
  objc_msgSend(v12, sel_setLocale_, v16);

  sub_1BC62A8B0();
  v17 = (void *)sub_1BC62A910();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v12, sel_setTimeZone_, v17);

  v18 = (void *)sub_1BC62C650();
  objc_msgSend(v12, sel_setDateFormat_, v18);

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BC639590;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v20 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v21 = sub_1BC62A4A8();
  v23 = v22;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v19 + 32) = v21;
  *(_QWORD *)(v19 + 40) = v23;
  v65 = (_QWORD *)v19;
  v24 = *(_QWORD *)(a2 + 16);
  if (v24)
  {
    swift_bridgeObjectRetain();
    v25 = (uint64_t *)(a2 + 40);
    v26 = MEMORY[0x1E0DEE9D8];
    do
    {
      v30 = *(v25 - 1);
      v31 = *v25;
      v32 = HIBYTE(*v25) & 0xF;
      if ((*v25 & 0x2000000000000000) == 0)
        v32 = v30 & 0xFFFFFFFFFFFFLL;
      if (v32)
      {
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v63 = (_QWORD *)v26;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BC3BD748(0, *(_QWORD *)(v26 + 16) + 1, 1);
          v26 = (uint64_t)v63;
        }
        v28 = *(_QWORD *)(v26 + 16);
        v27 = *(_QWORD *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1BC3BD748(v27 > 1, v28 + 1, 1);
          v26 = (uint64_t)v63;
        }
        *(_QWORD *)(v26 + 16) = v28 + 1;
        v29 = v26 + 16 * v28;
        *(_QWORD *)(v29 + 32) = v30;
        *(_QWORD *)(v29 + 40) = v31;
      }
      v25 += 2;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BC3BB0B8(v26);
  v34 = (void *)sub_1BC62A700();
  v35 = objc_msgSend(v12, sel_stringFromDate_, v34);

  v36 = sub_1BC62C680();
  v38 = v37;

  v39 = v65;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v39 = sub_1BC3B5060(0, v39[2] + 1, 1, v39);
  v41 = v39[2];
  v40 = v39[3];
  if (v41 >= v40 >> 1)
    v39 = sub_1BC3B5060((_QWORD *)(v40 > 1), v41 + 1, 1, v39);
  v39[2] = v41 + 1;
  v42 = &v39[2 * v41];
  v42[4] = v36;
  v42[5] = v38;
  swift_bridgeObjectRelease();
  v63 = v39;
  v43 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A52C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v44 = sub_1BC62C5D8();
  v46 = v45;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v57 & 1) != 0)
  {
    objc_msgSend(v12, sel_setDateStyle_, 0);
    objc_msgSend(v12, sel_setTimeStyle_, 2);
    v47 = (void *)sub_1BC62A700();
    v48 = objc_msgSend(v12, sel_stringFromDate_, v47);

    if (!v48)
    {
      sub_1BC62C680();
      v48 = (id)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    v49 = objc_msgSend(v48, sel_hk_stringByNormalizingSpaces);

    sub_1BC62C680();
    v63 = (_QWORD *)v44;
    v64 = v46;
    v50 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v44 = (uint64_t)v63;
    v46 = v64;
  }
  v63 = (_QWORD *)v44;
  v64 = v46;
  v61 = 47;
  v62 = 0xE100000000000000;
  v59 = 45;
  v60 = 0xE100000000000000;
  sub_1BC36E2AC();
  v51 = sub_1BC62D034();
  v53 = v52;
  swift_bridgeObjectRelease();
  v63 = (_QWORD *)v51;
  v64 = v53;
  v61 = 58;
  v62 = 0xE100000000000000;
  v59 = 46;
  v60 = 0xE100000000000000;
  v54 = sub_1BC62D034();
  swift_bridgeObjectRelease();

  return v54;
}

uint64_t sub_1BC4F3FA0()
{
  uint64_t result;

  result = sub_1BC62C650();
  qword_1EF434268 = result;
  return result;
}

id static FeatureModeToggleAction.ActionData.notificationName.getter()
{
  if (qword_1EF4286B0 != -1)
    swift_once();
  return (id)qword_1EF434268;
}

void FeatureModeToggleAction.ActionData.mode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FeatureModeToggleAction.ActionData.hash(into:)()
{
  sub_1BC62C740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC4F4088()
{
  return 1701080941;
}

uint64_t sub_1BC4F4098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BC62D574();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BC4F411C()
{
  sub_1BC4F4EF0();
  return sub_1BC62D700();
}

uint64_t sub_1BC4F4144()
{
  sub_1BC4F4EF0();
  return sub_1BC62D70C();
}

uint64_t FeatureModeToggleAction.ActionData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  _BYTE v10[32];

  sub_1BC3B2CF8(0, &qword_1EF434270, (uint64_t (*)(void))sub_1BC4F4EF0, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v10[-v6];
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC4F4EF0();
  sub_1BC62D6F4();
  v10[31] = v8;
  sub_1BC4F4F34();
  sub_1BC62D4FC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FeatureModeToggleAction.ActionData.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t FeatureModeToggleAction.ActionData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _BYTE *v9;
  uint64_t v11;
  _BYTE *v12;
  char v13;

  v12 = a2;
  sub_1BC3B2CF8(0, &qword_1EF434288, (uint64_t (*)(void))sub_1BC4F4EF0, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC4F4EF0();
  sub_1BC62D6DC();
  if (!v2)
  {
    v9 = v12;
    sub_1BC4F4F78();
    sub_1BC62D490();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

id sub_1BC4F4460()
{
  if (qword_1EF4286B0 != -1)
    swift_once();
  return (id)qword_1EF434268;
}

uint64_t sub_1BC4F44A0()
{
  sub_1BC62D670();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4F4528()
{
  sub_1BC62C740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC4F458C()
{
  sub_1BC62D670();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4F4610@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FeatureModeToggleAction.ActionData.init(from:)(a1, a2);
}

uint64_t sub_1BC4F4624(_QWORD *a1)
{
  return FeatureModeToggleAction.ActionData.encode(to:)(a1);
}

uint64_t FeatureModeToggleAction.__allocating_init(_:)(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for FeatureModeToggleAction();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t FeatureModeToggleAction.__allocating_init(_:)(_BYTE *a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = *a1;
  return result;
}

uint64_t FeatureModeToggleAction.init(_:)(_BYTE *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *a1;
  return v1;
}

uint64_t FeatureModeToggleAction.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1BC62A364();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = sub_1BC4F4820((uint64_t)v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t FeatureModeToggleAction.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_1BC62A364();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  v7 = sub_1BC4F4820((uint64_t)v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v7;
}

uint64_t sub_1BC4F4820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v26;
  _BYTE v27[24];
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v3 = v1;
  v5 = (void *)sub_1BC62A34C();
  if (qword_1EF4286B0 != -1)
    swift_once();
  v6 = sub_1BC62C680();
  v8 = v7;
  if (v6 == sub_1BC62C680() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
LABEL_10:
    v14 = sub_1BC62A358();
    if (v14)
    {
      v15 = v14;
      v31 = sub_1BC62C650();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
      sub_1BC4F5524();
      sub_1BC62D184();
      if (*(_QWORD *)(v15 + 16) && (v16 = sub_1BC559254((uint64_t)v27), (v17 & 1) != 0))
      {
        sub_1BC375540(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v29);
      }
      else
      {
        v29 = 0u;
        v30 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1BC3DDAC0((uint64_t)v27);
    }
    else
    {
      v29 = 0u;
      v30 = 0u;
    }
    sub_1BC39BE10((uint64_t)&v29, (uint64_t)v27);
    if (v28)
    {
      sub_1BC34B6A0(0, &qword_1EF434408);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v18 = (void *)v31;
        if (qword_1EF4286C0 != -1)
          swift_once();
        v19 = v18;
        v20 = sub_1BC62A634();
        v22 = v21;

        sub_1BC4F502C();
        sub_1BC62A22C();
        if (!v2)
        {
          sub_1BC35D530(v20, v22);

          v26 = sub_1BC62A364();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(a1, v26);
          sub_1BC39BD2C((uint64_t)&v29);
          *(_BYTE *)(v3 + 16) = v27[0];
          return v3;
        }
        sub_1BC35D530(v20, v22);

        goto LABEL_25;
      }
    }
    else
    {
      sub_1BC39BD2C((uint64_t)v27);
    }
    sub_1BC4F54E0();
    swift_allocError();
    *v23 = 1;
    swift_willThrow();
LABEL_25:
    v24 = sub_1BC62A364();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
    sub_1BC39BD2C((uint64_t)&v29);
    goto LABEL_26;
  }
  v11 = sub_1BC62D574();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    goto LABEL_10;
  sub_1BC4F54E0();
  swift_allocError();
  *v12 = 0;
  swift_willThrow();
  v13 = sub_1BC62A364();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
LABEL_26:
  sub_1BC3B2CF8(0, (unint64_t *)&qword_1EF4343F8, (uint64_t (*)(void))sub_1BC4F5434, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemAction);
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t FeatureModeToggleAction.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2;
  _QWORD v4[5];

  swift_allocObject();
  sub_1BC34E674(a1, (uint64_t)v4);
  v2 = sub_1BC4F4C88(v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v2;
}

uint64_t FeatureModeToggleAction.init(from:)(uint64_t a1)
{
  uint64_t v2;
  _QWORD v4[5];

  sub_1BC34E674(a1, (uint64_t)v4);
  v2 = sub_1BC4F4C88(v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v2;
}

uint64_t sub_1BC4F4C88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  sub_1BC4F53B4();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC3B2CF8(0, &qword_1EF4343E0, (uint64_t (*)(void))sub_1BC4F5434, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemAction.CodingKeys);
  sub_1BC4F5478();
  sub_1BC62D6DC();
  if (v1)
  {
    v9 = v11;
    sub_1BC3B2CF8(0, (unint64_t *)&qword_1EF4343F8, (uint64_t (*)(void))sub_1BC4F5434, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemAction);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1BC4F502C();
    sub_1BC62D490();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = v11;
    *(_BYTE *)(v11 + 16) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v9;
}

uint64_t FeatureModeToggleAction.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FeatureModeToggleAction.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s15HealthRecordsUI23FeatureModeToggleActionC0G4DataV2eeoiySbAE_AEtFZ_0(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x7265656E69676E45;
  else
    v3 = 0x647261646E617453;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEB00000000676E69;
  if (*a2)
    v5 = 0x7265656E69676E45;
  else
    v5 = 0x647261646E617453;
  if (*a2)
    v6 = 0xEB00000000676E69;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1BC4F4EF0()
{
  unint64_t result;

  result = qword_1EF434278;
  if (!qword_1EF434278)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC645628, &type metadata for FeatureModeToggleAction.ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF434278);
  }
  return result;
}

unint64_t sub_1BC4F4F34()
{
  unint64_t result;

  result = qword_1EF434280;
  if (!qword_1EF434280)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for UserInterfaceMode, &type metadata for UserInterfaceMode);
    atomic_store(result, (unint64_t *)&qword_1EF434280);
  }
  return result;
}

unint64_t sub_1BC4F4F78()
{
  unint64_t result;

  result = qword_1EF434290;
  if (!qword_1EF434290)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for UserInterfaceMode, &type metadata for UserInterfaceMode);
    atomic_store(result, (unint64_t *)&qword_1EF434290);
  }
  return result;
}

uint64_t type metadata accessor for FeatureModeToggleAction()
{
  uint64_t result;

  result = qword_1EF4342E0;
  if (!qword_1EF4342E0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BC4F4FF8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BC4F502C();
  a1[2] = sub_1BC4F5070();
  result = sub_1BC4F50B4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BC4F502C()
{
  unint64_t result;

  result = qword_1EF434298;
  if (!qword_1EF434298)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for FeatureModeToggleAction.ActionData, &type metadata for FeatureModeToggleAction.ActionData);
    atomic_store(result, (unint64_t *)&qword_1EF434298);
  }
  return result;
}

unint64_t sub_1BC4F5070()
{
  unint64_t result;

  result = qword_1EF4342A0;
  if (!qword_1EF4342A0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for FeatureModeToggleAction.ActionData, &type metadata for FeatureModeToggleAction.ActionData);
    atomic_store(result, (unint64_t *)&qword_1EF4342A0);
  }
  return result;
}

unint64_t sub_1BC4F50B4()
{
  unint64_t result;

  result = qword_1EF4342A8;
  if (!qword_1EF4342A8)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for FeatureModeToggleAction.ActionData, &type metadata for FeatureModeToggleAction.ActionData);
    atomic_store(result, (unint64_t *)&qword_1EF4342A8);
  }
  return result;
}

unint64_t sub_1BC4F50FC()
{
  unint64_t result;

  result = qword_1EF4342B0;
  if (!qword_1EF4342B0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for FeatureModeToggleAction.ActionData, &type metadata for FeatureModeToggleAction.ActionData);
    atomic_store(result, (unint64_t *)&qword_1EF4342B0);
  }
  return result;
}

uint64_t sub_1BC4F5140()
{
  return swift_initClassMetadata2();
}

uint64_t storeEnumTagSinglePayload for FeatureModeToggleAction.ActionData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC4F51C0 + 4 * byte_1BC645445[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC4F51F4 + 4 * asc_1BC645440[v4]))();
}

uint64_t sub_1BC4F51F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4F51FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC4F5204);
  return result;
}

uint64_t sub_1BC4F5210(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4F5218);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC4F521C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4F5224(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureModeToggleAction.ActionData()
{
  return &type metadata for FeatureModeToggleAction.ActionData;
}

uint64_t storeEnumTagSinglePayload for FeatureModeToggleAction.ActionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC4F5280 + 4 * byte_1BC64544A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC4F52A0 + 4 * byte_1BC64544F[v4]))();
}

_BYTE *sub_1BC4F5280(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC4F52A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4F52A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4F52B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4F52B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4F52C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeatureModeToggleAction.ActionData.CodingKeys()
{
  return &type metadata for FeatureModeToggleAction.ActionData.CodingKeys;
}

unint64_t sub_1BC4F52E0()
{
  unint64_t result;

  result = qword_1EF4343C0;
  if (!qword_1EF4343C0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC645600, &type metadata for FeatureModeToggleAction.ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4343C0);
  }
  return result;
}

unint64_t sub_1BC4F5328()
{
  unint64_t result;

  result = qword_1EF4343C8;
  if (!qword_1EF4343C8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC645570, &type metadata for FeatureModeToggleAction.ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4343C8);
  }
  return result;
}

unint64_t sub_1BC4F5370()
{
  unint64_t result;

  result = qword_1EF4343D0;
  if (!qword_1EF4343D0)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC645598, &type metadata for FeatureModeToggleAction.ActionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4343D0);
  }
  return result;
}

void sub_1BC4F53B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4343D8)
  {
    sub_1BC3B2CF8(255, &qword_1EF4343E0, (uint64_t (*)(void))sub_1BC4F5434, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemAction.CodingKeys);
    sub_1BC4F5478();
    v0 = sub_1BC62D4A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4343D8);
  }
}

unint64_t sub_1BC4F5434()
{
  unint64_t result;

  result = qword_1EF4343E8;
  if (!qword_1EF4343E8)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for FeatureModeToggleAction.ActionData, &type metadata for FeatureModeToggleAction.ActionData);
    atomic_store(result, (unint64_t *)&qword_1EF4343E8);
  }
  return result;
}

unint64_t sub_1BC4F5478()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4343F0;
  if (!qword_1EF4343F0)
  {
    sub_1BC3B2CF8(255, &qword_1EF4343E0, (uint64_t (*)(void))sub_1BC4F5434, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemAction.CodingKeys);
    result = MEMORY[0x1BCCF35C4](&unk_1BC645968, v1);
    atomic_store(result, (unint64_t *)&qword_1EF4343F0);
  }
  return result;
}

unint64_t sub_1BC4F54E0()
{
  unint64_t result;

  result = qword_1EF434400;
  if (!qword_1EF434400)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for FeedItemActionError, &type metadata for FeedItemActionError);
    atomic_store(result, (unint64_t *)&qword_1EF434400);
  }
  return result;
}

unint64_t sub_1BC4F5524()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF434410;
  if (!qword_1EF434410)
  {
    v1 = sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A4800);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF434410);
  }
  return result;
}

uint64_t FeedItemAction.init(_:)(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), a1);
  return v1;
}

uint64_t *FeedItemAction.init(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD v34[2];
  char *v35;
  _BYTE v36[24];
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v34[0] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)sub_1BC62A34C();
  v8 = *(_QWORD *)(v4 + 88);
  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v5, v8);
  v10 = sub_1BC62C680();
  v12 = v11;
  if (v10 == sub_1BC62C680() && v12 == v13)
  {

    swift_bridgeObjectRelease_n();
LABEL_8:
    v19 = sub_1BC62A358();
    if (v19)
    {
      v20 = v19;
      v40 = sub_1BC62C650();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
      sub_1BC4F5524();
      sub_1BC62D184();
      if (*(_QWORD *)(v20 + 16) && (v21 = sub_1BC559254((uint64_t)v36), (v22 & 1) != 0))
      {
        sub_1BC375540(*(_QWORD *)(v20 + 56) + 32 * v21, (uint64_t)&v38);
      }
      else
      {
        v38 = 0u;
        v39 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1BC3DDAC0((uint64_t)v36);
    }
    else
    {
      v38 = 0u;
      v39 = 0u;
    }
    sub_1BC39BE10((uint64_t)&v38, (uint64_t)v36);
    if (v37)
    {
      sub_1BC34B6A0(0, &qword_1EF434408);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v23 = (void *)v40;
        if (qword_1EF4286C0 != -1)
          swift_once();
        v24 = v23;
        v25 = sub_1BC62A634();
        v27 = v26;

        v28 = v34[1];
        v29 = v35;
        sub_1BC62A22C();
        if (!v28)
        {
          sub_1BC35D530(v25, v27);

          v33 = sub_1BC62A364();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a1, v33);
          sub_1BC39BD2C((uint64_t)&v38);
          (*(void (**)(uint64_t, char *, uint64_t))(v34[0] + 32))((uint64_t)v2 + *(_QWORD *)(*v2 + 96), v29, v5);
          return v2;
        }
        sub_1BC35D530(v25, v27);

        goto LABEL_23;
      }
    }
    else
    {
      sub_1BC39BD2C((uint64_t)v36);
    }
    sub_1BC4F54E0();
    swift_allocError();
    *v30 = 1;
    swift_willThrow();
LABEL_23:
    v31 = sub_1BC62A364();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(a1, v31);
    sub_1BC39BD2C((uint64_t)&v38);
    goto LABEL_24;
  }
  v15 = sub_1BC62D574();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
    goto LABEL_8;
  sub_1BC4F54E0();
  swift_allocError();
  *v16 = 0;
  swift_willThrow();
  v17 = sub_1BC62A364();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
LABEL_24:
  type metadata accessor for FeedItemAction(0, v5, v8, v18);
  swift_deallocPartialClassInstance();
  return v2;
}

uint64_t FeedItemAction.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v22 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v23 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v5 + 88);
  v8 = type metadata accessor for FeedItemAction.CodingKeys(255, v3, v6, v7);
  MEMORY[0x1BCCF35C4](&unk_1BC645968, v8);
  v21 = sub_1BC62D4A8();
  v9 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v11 = (char *)&v20 - v10;
  v12 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v12);
  v13 = v24;
  sub_1BC62D6DC();
  if (v13)
  {
    v19 = v26;
    type metadata accessor for FeedItemAction(0, v3, v6, v14);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v15 = v22;
    v16 = v23;
    v17 = v21;
    sub_1BC62D490();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v17);
    v19 = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v19 + *(_QWORD *)(*(_QWORD *)v19 + 96), v16, v3);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  return v19;
}

uint64_t FeedItemAction.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return v0;
}

uint64_t sub_1BC4F5B8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1BC4F5BF0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*sub_1BC4F5C5C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1BC4F5CA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t inited;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40[4];
  uint64_t v41;

  v2 = v1;
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v39 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v38 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BB04();
  swift_retain_n();
  v10 = sub_1BC62BB28();
  v11 = sub_1BC62CADC();
  if (os_log_type_enabled(v10, v11))
  {
    v35 = v7;
    v12 = swift_slowAlloc();
    v36 = v3;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v34 = v6;
    *(_DWORD *)v13 = 136446210;
    v40[0] = v14;
    v33 = v13 + 4;
    v41 = *v2;
    type metadata accessor for FeedItemAction(255, v4, v36[11], v15);
    swift_getMetatypeMetadata();
    v16 = sub_1BC62C6F8();
    v41 = sub_1BC4991F0(v16, v17, v40);
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v10, v11, "Performing FeedItemAction: %%{public}%{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v14, -1, -1);
    v18 = v13;
    v3 = v36;
    MEMORY[0x1BCCF36A8](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v34);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_1BC34B6A0(0, &qword_1EF429C30);
  v19 = (void *)sub_1BC62CB3C();
  v36 = (_QWORD *)(*(uint64_t (**)(uint64_t, _QWORD))(v3[11] + 32))(v4, v3[11]);
  sub_1BC4F69F0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC639590;
  v40[0] = sub_1BC62C650();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4800);
  sub_1BC4F5524();
  sub_1BC62D184();
  if (qword_1EF4286B8 != -1)
    swift_once();
  v21 = *v2;
  v22 = (char *)v2 + *(_QWORD *)(*v2 + 96);
  swift_beginAccess();
  v23 = *(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(v21 + 80) - 8) + 16);
  v24 = v38;
  v23(v38, v22);
  v25 = v37;
  v26 = sub_1BC62A280();
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v4);

    sub_1BC3DDAC0(inited + 32);
    swift_setDeallocating();
    sub_1BC4F6A44();
    swift_arrayDestroy();
  }
  else
  {
    v28 = v26;
    v29 = v27;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v4);
    v30 = sub_1BC62A628();
    sub_1BC35D530(v28, v29);
    *(_QWORD *)(inited + 96) = sub_1BC34B6A0(0, &qword_1EF434408);
    *(_QWORD *)(inited + 72) = v30;
    sub_1BC35C258(inited);
    v31 = objc_allocWithZone((Class)sub_1BC62ACA0());
    v32 = (void *)sub_1BC62AC94();
    objc_msgSend(v19, sel_addOperation_, v32);

  }
}

uint64_t sub_1BC4F6110(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)v1 + *(_QWORD *)(v2 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  sub_1BC62C5CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BC4F61D0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(*v2 + 80) - 8);
  v21 = *(_QWORD *)(*v2 + 80);
  v24 = v4;
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v7 + 88);
  v10 = type metadata accessor for FeedItemAction.CodingKeys(255, v8, v22, v9);
  MEMORY[0x1BCCF35C4](&unk_1BC645968, v10);
  v11 = sub_1BC62D508();
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - v12;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC62D6F4();
  v14 = *v2;
  v15 = (uint64_t)v2 + *(_QWORD *)(*v2 + 96);
  swift_beginAccess();
  v16 = *(_QWORD *)(v14 + 80);
  v17 = v11;
  v18 = v21;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v6, v15);
  sub_1BC62D4FC();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v13, v17);
}

uint64_t sub_1BC4F6384()
{
  _BYTE v1[72];

  sub_1BC62D670();
  sub_1BC4F6110((uint64_t)v1);
  return sub_1BC62D6AC();
}

BOOL static FeedItemActionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedItemActionError.hash(into:)()
{
  return sub_1BC62D67C();
}

uint64_t FeedItemActionError.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4F6444(uint64_t a1)
{
  return sub_1BC4F647C(a1, (void (*)(_QWORD))MEMORY[0x1E0CAE1E8], MEMORY[0x1E0CAE1D8], &qword_1EF434418);
}

uint64_t sub_1BC4F6460(uint64_t a1)
{
  return sub_1BC4F647C(a1, (void (*)(_QWORD))MEMORY[0x1E0CAE0B8], MEMORY[0x1E0CAE0A8], &qword_1EF434420);
}

uint64_t sub_1BC4F647C(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t result;

  a2(0);
  swift_allocObject();
  result = a3();
  *a4 = result;
  return result;
}

uint64_t sub_1BC4F64C4(uint64_t a1)
{
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = (char *)&v6 - v2;
  (*(void (**)(char *, __n128))(v4 + 16))((char *)&v6 - v2, v1);
  return sub_1BC4F5BF0((uint64_t)v3);
}

uint64_t FeedItemAction.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), a1);
  return v2;
}

{
  uint64_t v2;

  v2 = swift_allocObject();
  FeedItemAction.init(_:)(a1);
  return v2;
}

uint64_t static FeedItemAction.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v19[24];

  v4 = *(_QWORD *)(v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v19[-v9];
  v12 = *v11;
  v13 = (uint64_t)v11 + *(_QWORD *)(*v11 + 96);
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v12 + 80) - 8) + 16))(v10, v13);
  v14 = *a2;
  v15 = (uint64_t)a2 + *(_QWORD *)(*a2 + 96);
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v14 + 80) - 8) + 16))(v7, v15);
  v16 = sub_1BC62C644();
  v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v17(v7, v4);
  v17(v10, v4);
  return v16 & 1;
}

uint64_t sub_1BC4F6714(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1BC4F6788()
{
  return 1635017060;
}

uint64_t sub_1BC4F6798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC4F6714(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BC4F67C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC373A04();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BC4F67F4(uint64_t a1)
{
  MEMORY[0x1BCCF35C4](&unk_1BC645968, a1);
  return sub_1BC62D700();
}

uint64_t sub_1BC4F6828(uint64_t a1)
{
  MEMORY[0x1BCCF35C4](&unk_1BC645968, a1);
  return sub_1BC62D70C();
}

uint64_t FeedItemAction.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t FeedItemAction.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FeedItemAction.init(from:)(a1);
  return v2;
}

uint64_t sub_1BC4F68E4()
{
  return sub_1BC4F6384();
}

uint64_t sub_1BC4F6904(uint64_t a1)
{
  return sub_1BC4F6110(a1);
}

uint64_t sub_1BC4F6924()
{
  _BYTE v1[72];

  sub_1BC62D670();
  sub_1BC4F6110((uint64_t)v1);
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4F6960@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 176))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1BC4F698C(_QWORD *a1)
{
  return sub_1BC4F61D0(a1);
}

void sub_1BC4F69AC(uint64_t a1)
{
  sub_1BC4F5CA0(a1);
}

uint64_t sub_1BC4F69CC(uint64_t *a1, uint64_t **a2)
{
  return static FeedItemAction.== infix(_:_:)(*a1, *a2);
}

uint64_t type metadata accessor for FeedItemAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedItemAction);
}

uint64_t type metadata accessor for FeedItemAction.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedItemAction.CodingKeys);
}

void sub_1BC4F69F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42B1E8)
  {
    sub_1BC4F6A44();
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42B1E8);
  }
}

void sub_1BC4F6A44()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF42B1F0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF42B1F0);
  }
}

unint64_t sub_1BC4F6AB0()
{
  unint64_t result;

  result = qword_1EF434428[0];
  if (!qword_1EF434428[0])
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for FeedItemActionError, &type metadata for FeedItemActionError);
    atomic_store(result, qword_1EF434428);
  }
  return result;
}

void sub_1BC4F6AF4()
{
  JUMPOUT(0x1BCCF35C4);
}

uint64_t sub_1BC4F6B04@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC4F5B8C(a1);
}

uint64_t sub_1BC4F6B28()
{
  return 16;
}

__n128 sub_1BC4F6B34(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of static FeedItemActionData.notificationName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedItemActionProtocol.perform()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t storeEnumTagSinglePayload for FeedItemActionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC4F6BAC + 4 * byte_1BC645685[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC4F6BE0 + 4 * byte_1BC645680[v4]))();
}

uint64_t sub_1BC4F6BE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4F6BE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC4F6BF0);
  return result;
}

uint64_t sub_1BC4F6BFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4F6C04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC4F6C08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4F6C10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemActionError()
{
  return &type metadata for FeedItemActionError;
}

uint64_t sub_1BC4F6C2C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FeedItemAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedItemAction.data.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of FeedItemAction.data.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of FeedItemAction.data.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of FeedItemAction.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of FeedItemAction.perform()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of FeedItemAction.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of FeedItemAction.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of FeedItemAction.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of FeedItemAction.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1BC4F6D54(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC4F6D94 + 4 * byte_1BC64568A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC4F6DB4 + 4 * byte_1BC64568F[v4]))();
}

_BYTE *sub_1BC4F6D94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC4F6DB4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4F6DBC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4F6DC4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC4F6DCC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC4F6DD4(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1BC4F6DE0()
{
  JUMPOUT(0x1BCCF35C4);
}

void sub_1BC4F6DF0()
{
  JUMPOUT(0x1BCCF35C4);
}

void sub_1BC4F6E00()
{
  JUMPOUT(0x1BCCF35C4);
}

id MedicalRecordChartOverlayContext.__allocating_init(title:dataSource:defaultColors:selectedColors:verticalAxis:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return MedicalRecordChartOverlayContext.init(title:dataSource:defaultColors:selectedColors:verticalAxis:)(a1, a2, a3, a4, a5, a6);
}

id MedicalRecordChartOverlayContext.init(title:dataSource:defaultColors:selectedColors:verticalAxis:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  char *v6;
  char *v8;
  id v9;
  void **v11;
  void *v12;
  id v13;
  objc_super v15;

  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedOverlayDisplayType] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedDataSource] = 0;
  v8 = &v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_title];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_dataSource] = a3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_defaultColors] = a4;
  if (a5)
  {
    v9 = a5;
  }
  else
  {
    v11 = (void **)(a3 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors);
    swift_beginAccess();
    v12 = *v11;
    if (*v11)
    {
      v9 = *v11;
    }
    else
    {
      v9 = a4;
      v12 = 0;
    }
    v13 = v12;
  }
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_selectedColors] = v9;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_verticalAxis] = a6;
  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for MedicalRecordChartOverlayContext();
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t type metadata accessor for MedicalRecordChartOverlayContext()
{
  return objc_opt_self();
}

id sub_1BC4F7028()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
  if (v2)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
    v4 = v3;
  }
  else
  {
    v4 = sub_1BC4F7720(0, 0);
    v3 = 0;
    v2 = *(void **)(v0 + v1);
  }
  *(_QWORD *)(v0 + v1) = v4;
  v5 = v3;
  v6 = v4;

  return v6;
}

uint64_t sub_1BC4F7118(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  unint64_t v29;
  _BYTE v30[16];

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v30[-v10];
  v12 = *(_QWORD *)(*(_QWORD *)(v5 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_dataSource)
                  + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets);
  if (v12)
  {
    MEMORY[0x1E0C80A78](v9);
    v29 = a1;
    swift_bridgeObjectRetain();
    v13 = sub_1BC3D19CC(sub_1BC4F7868, (uint64_t)&v30[-32], v12);
    if (v13 >> 62)
      v14 = sub_1BC62D3B8();
    else
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v15 = OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem;
  v16 = *(void **)(v5 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
  if (v16)
  {
    v17 = *(void **)(v5 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
    v18 = v17;
  }
  else
  {
    v18 = sub_1BC4F7720(0, 0);
    v17 = 0;
    v16 = *(void **)(v5 + v15);
  }
  *(_QWORD *)(v5 + v15) = v18;
  v19 = v17;
  v20 = v18;

  v21 = sub_1BC62A820();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 1, 1, v21);
  if (qword_1EF428550 != -1)
    swift_once();
  v22 = (void *)qword_1EF42F698;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = swift_allocObject();
  v24 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v23 + 16) = xmmword_1BC639590;
  v25 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v23 + 56) = v24;
  *(_QWORD *)(v23 + 64) = v25;
  *(_QWORD *)(v23 + 32) = v14;
  v26 = v22;
  swift_bridgeObjectRetain();
  v29 = 0xE000000000000000;
  sub_1BC62A4A8();
  sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v11);
  v27 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setValue_, v27);

  return a5(1, 0);
}

id sub_1BC4F74F8()
{
  sub_1BC4F7884();
  return objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_diagnosticTestResultTypeForIdentifier_, *MEMORY[0x1E0CB4CE0]);
}

id MedicalRecordChartOverlayContext.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicalRecordChartOverlayContext.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicalRecordChartOverlayContext.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordChartOverlayContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC4F7720(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F6F8]), sel_init);
  v5 = (void *)sub_1BC62C650();
  objc_msgSend(v4, sel_setTitle_, v5);

  v6 = (void *)sub_1BC62C650();
  objc_msgSend(v4, sel_setUnit_, v6);

  if (a2)
    a2 = (void *)sub_1BC62C650();
  objc_msgSend(v4, sel_setValue_, a2);

  v7 = (void *)sub_1BC62C650();
  objc_msgSend(v4, sel_setDateString_, v7);

  objc_msgSend(v4, sel_setInfoHidden_, 1);
  objc_msgSend(v4, sel_setMetricColors_, *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_defaultColors));
  objc_msgSend(v4, sel_setSelectedMetricColors_, *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_selectedColors));
  return v4;
}

uint64_t sub_1BC4F7868(id *a1)
{
  return sub_1BC4B5CA0(a1) & 1;
}

unint64_t sub_1BC4F7884()
{
  unint64_t result;

  result = qword_1EF436690;
  if (!qword_1EF436690)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF436690);
  }
  return result;
}

uint64_t sub_1BC4F78C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  unint64_t v27;
  _BYTE v28[16];

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v28[-v8];
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_dataSource)
                  + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets);
  if (v10)
  {
    MEMORY[0x1E0C80A78](v7);
    v27 = a1;
    swift_bridgeObjectRetain();
    v11 = sub_1BC3D19CC(sub_1BC4F7CF0, (uint64_t)&v28[-32], v10);
    if (v11 >> 62)
      v12 = sub_1BC62D3B8();
    else
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v13 = OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem;
  v14 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
  if (v14)
  {
    v15 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
    v16 = v15;
  }
  else
  {
    v16 = sub_1BC4F7720(0, 0);
    v15 = 0;
    v14 = *(void **)(a2 + v13);
  }
  *(_QWORD *)(a2 + v13) = v16;
  v17 = v15;
  v18 = v16;

  v19 = sub_1BC62A820();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
  if (qword_1EF428550 != -1)
    swift_once();
  v20 = (void *)qword_1EF42F698;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  v22 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v21 + 16) = xmmword_1BC639590;
  v23 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v21 + 56) = v22;
  *(_QWORD *)(v21 + 64) = v23;
  *(_QWORD *)(v21 + 32) = v12;
  v24 = v20;
  swift_bridgeObjectRetain();
  v27 = 0xE000000000000000;
  sub_1BC62A4A8();
  sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v9);
  v25 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setValue_, v25);

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a3 + 16))(a3, 1, 0);
}

void *sub_1BC4F7BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedOverlayDisplayType;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedOverlayDisplayType);
  v4 = v3;
  if (!v3)
  {
    v4 = (void *)(*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v1
                                                                                         + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_dataSource))
                                                   + 0x160))(*(_QWORD *)(v1
                                                                         + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_verticalAxis));
    v5 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v4;
    v6 = v4;

  }
  v7 = v3;
  return v4;
}

uint64_t method lookup function for MedicalRecordChartOverlayContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.__allocating_init(title:dataSource:defaultColors:selectedColors:verticalAxis:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.contextItemForLastUpdate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.updateItem(for:overlayController:timeScope:resolution:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.sampleTypeForDateRangeUpdates()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.overlayDisplayType(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.resolution(for:traitResolution:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t sub_1BC4F7CF0(id *a1)
{
  return sub_1BC4F7868(a1) & 1;
}

_UNKNOWN **sub_1BC4F7D08()
{
  return &off_1E74D85E0;
}

_UNKNOWN **sub_1BC4F7D14()
{
  return &off_1E74D85F0;
}

id sub_1BC4F7D20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___brandView;
  v2 = *(void **)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___brandView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___brandView);
  }
  else
  {
    sub_1BC4F7D80(v0);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC4F7D80(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;

  v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordBrandView), sel_init);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR___WDClinicalAccountAddedViewController_account);
  v4 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + OBJC_IVAR___WDClinicalAccountAddedViewController_onboardingSession)+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_clinicalSourcesDataProvider);
  objc_msgSend(v2, sel_setBrandable_dataProvider_, v3, v4);

  v5 = v2;
  v6 = (void *)sub_1BC62C86C();
  v7 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v7)
  {
    sub_1BC62C680();

    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setAccessibilityIdentifier_, v8);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC4F7EB8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v1 = OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___standardConstraints;
  if (*(_QWORD *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___standardConstraints])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___standardConstraints];
  }
  else
  {
    v3 = v0;
    sub_1BC34D844();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BC639580;
    v5 = sub_1BC4F7D20();
    v6 = objc_msgSend(v5, sel_centerXAnchor);

    v7 = objc_msgSend(v3, sel_contentView);
    v8 = objc_msgSend(v7, sel_centerXAnchor);

    v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
    *(_QWORD *)(v4 + 32) = v9;
    v10 = sub_1BC4F7D20();
    v11 = objc_msgSend(v10, sel_leadingAnchor);

    v12 = objc_msgSend(v3, sel_contentView);
    v13 = objc_msgSend(v12, sel_leadingAnchor);

    v14 = objc_msgSend(v11, sel_constraintGreaterThanOrEqualToAnchor_, v13);
    *(_QWORD *)(v4 + 40) = v14;
    v15 = objc_msgSend(v3, sel_contentView);
    v16 = objc_msgSend(v15, sel_trailingAnchor);

    v17 = sub_1BC4F7D20();
    v18 = objc_msgSend(v17, sel_trailingAnchor);

    v19 = objc_msgSend(v16, sel_constraintGreaterThanOrEqualToAnchor_, v18);
    *(_QWORD *)(v4 + 48) = v19;
    sub_1BC62C890();
    v2 = v4;
    *(_QWORD *)&v3[v1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC4F80E8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v1 = OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___accessibilityConstraints;
  if (*(_QWORD *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___accessibilityConstraints])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___accessibilityConstraints];
  }
  else
  {
    v3 = v0;
    sub_1BC34D844();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BC639570;
    v5 = sub_1BC4F7D20();
    v6 = objc_msgSend(v5, sel_leadingAnchor);

    v7 = objc_msgSend(v3, sel_contentView);
    v8 = objc_msgSend(v7, sel_leadingAnchor);

    v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
    *(_QWORD *)(v4 + 32) = v9;
    v10 = sub_1BC4F7D20();
    v11 = objc_msgSend(v10, sel_trailingAnchor);

    v12 = objc_msgSend(v3, sel_contentView);
    v13 = objc_msgSend(v12, sel_trailingAnchor);

    v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
    *(_QWORD *)(v4 + 40) = v14;
    sub_1BC62C890();
    v2 = v4;
    *(_QWORD *)&v3[v1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC4F8344()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler);
  swift_beginAccess();
  v2 = *v1;
  sub_1BC38F084(*v1);
  return v2;
}

uint64_t sub_1BC4F8430(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1BC36D770(v6);
}

uint64_t sub_1BC4F848C@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BC3AABB0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BC38F084(v4);
}

uint64_t sub_1BC4F8520(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC3AABB0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1BC38F084(v3);
  return sub_1BC36D770(v8);
}

uint64_t (*sub_1BC4F85D8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void AccountAddedViewController.__allocating_init(onboardingSession:account:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  AccountAddedViewController.init(onboardingSession:account:)(a1, a2);
}

void AccountAddedViewController.init(onboardingSession:account:)(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  objc_super v20;

  v5 = OBJC_IVAR___WDClinicalAccountAddedViewController_iconProvider;
  v6 = qword_1ED6A31F0;
  v7 = v2;
  if (v6 != -1)
    swift_once();
  *(_QWORD *)&v2[v5] = qword_1ED6A4498;
  *(_QWORD *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___brandView] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController_customConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___standardConstraints] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___accessibilityConstraints] = 0;
  v7[OBJC_IVAR___WDClinicalAccountAddedViewController_shouldPromptForDataCollection] = 0;
  v8 = &v7[OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_QWORD *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController_onboardingSession] = a1;
  *(_QWORD *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController_account] = a2;
  v9 = objc_allocWithZone((Class)type metadata accessor for HealthRecordsNotifications());
  swift_retain();
  v10 = a1;
  v11 = a2;
  v12 = objc_msgSend(v9, sel_init);
  *(_QWORD *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController_notificationsManager] = v12;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v13 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_1BC62C650();
  v17 = objc_msgSend(v15, sel_modelSpecificLocalizedStringKeyForKey_, v16, 0xE000000000000000);

  if (v17)
  {
    sub_1BC62C680();

    v18 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v19 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v20.receiver = v7;
    v20.super_class = (Class)type metadata accessor for AccountAddedViewController();
    objc_msgSendSuper2(&v20, sel_initWithTitle_detailText_symbolName_contentLayout_, v14, v19, 0, 2, 0xE000000000000000);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC4F89C0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  objc_super v30;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v30 - v2;
  v4 = (objc_class *)type metadata accessor for AccountAddedViewController();
  v30.receiver = v0;
  v30.super_class = v4;
  objc_msgSendSuper2(&v30, sel_viewDidLoad);
  v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  v6 = v5;
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  objc_msgSend(v0, sel_setModalInPresentation_, objc_msgSend(*(id *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController_account], sel_canEnableSharingToProvider));
  v8 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v8, sel_setHidesBackButton_, 1);

  sub_1BC357158(0, (unint64_t *)&qword_1EF429250, (uint64_t (*)(uint64_t))sub_1BC3571B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC639590;
  v10 = sub_1BC62BDD4();
  v11 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v11;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC4978B4();
  sub_1BC62CBC0();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_1EF428560 != -1)
    swift_once();
  v12 = (id)qword_1EF42F6C8;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1BC62C86C();
  v15 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v15)
    goto LABEL_9;
  sub_1BC62C680();

  v16 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v0, sel_hxui_addPrimaryFooterButtonWithTitle_accessibilityIdentifier_, v13, v16);

  v18 = OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton;
  v19 = *(void **)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton];
  *(_QWORD *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton] = v17;

  v20 = *(void **)&v0[v18];
  if (v20)
    objc_msgSend(v20, sel_setEnabled_, 0);
  v21 = objc_msgSend(v0, sel_contentView);
  v22 = sub_1BC4F7D20();
  objc_msgSend(v21, sel_addSubview_, v22);

  v23 = sub_1BC4F7D20();
  v24 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v23, sel_hk_alignVerticalConstraintsWithView_margin_, v24, 0.0);

  sub_1BC4F9420();
  v25 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v3, 1, 1, v25);
  sub_1BC62C944();
  v26 = v0;
  v27 = sub_1BC62C938();
  v28 = (_QWORD *)swift_allocObject();
  v29 = MEMORY[0x1E0DF06E8];
  v28[2] = v27;
  v28[3] = v29;
  v28[4] = v26;
  sub_1BC5C2784((uint64_t)v3, (uint64_t)&unk_1EF434668, (uint64_t)v28);
  swift_release();
}

void sub_1BC4F8E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCF37A4](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1BC4F9420();

  }
}

uint64_t sub_1BC4F8E6C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_1BC62C944();
  v0[3] = sub_1BC62C938();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_1BC3917E8;
  return sub_1BC4F9578();
}

void sub_1BC4F8F04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1BCCF37A4](v3);
  if (v4)
  {
    v5 = v4;
    if (a1)
      objc_msgSend(v4, sel_presentViewController_animated_completion_, a1, 1, 0);

  }
}

void sub_1BC4F9024()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  char *v9;
  id v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  id v14;

  v1 = v0;
  if (v0[OBJC_IVAR___WDClinicalAccountAddedViewController_shouldPromptForDataCollection] == 1)
  {
    v2 = *(void **)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController_onboardingSession];
    v3 = *(void **)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController_account];
    v4 = objc_allocWithZone((Class)type metadata accessor for ImprovementDataCollectionOptInViewController());
    v14 = sub_1BC36F1F0(v2, v3);
    v5 = objc_msgSend(v0, sel_navigationController);
    if (!v5)
    {
LABEL_4:

      return;
    }
LABEL_3:
    v6 = v5;
    objc_msgSend(v5, sel_pushViewController_animated_, v14, 1);

    goto LABEL_4;
  }
  v7 = *(void **)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController_account];
  if (objc_msgSend(*(id *)&v1[OBJC_IVAR___WDClinicalAccountAddedViewController_account], sel_canEnableSharingToProvider)&& objc_msgSend(v7, sel_hasClinicalSharingScopes))
  {
    v8 = *(void **)&v1[OBJC_IVAR___WDClinicalAccountAddedViewController_onboardingSession];
    objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingInformationalViewController());
    v9 = v8;
    v10 = v7;
    v14 = (id)ClinicalSharingOnboardingInformationalViewController.init(onboardingSession:flowType:selectedAccount:delegate:)(v9, (char *)2, v7, 0);
    v5 = objc_msgSend(v1, sel_navigationController);
    if (!v5)
      goto LABEL_4;
    goto LABEL_3;
  }
  v11 = &v1[OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler];
  swift_beginAccess();
  v12 = *(void (**)(uint64_t))v11;
  if (*(_QWORD *)v11)
  {
    v13 = swift_retain();
    v12(v13);
    sub_1BC36D770((uint64_t)v12);
  }
}

void sub_1BC4F9208()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  v1 = OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton;
  v2 = *(void **)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton);
  if (v2)
    objc_msgSend(v2, sel_setEnabled_, 1);
  if ((*(_BYTE *)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController_shouldPromptForDataCollection) & 1) == 0)
  {
    v3 = *(void **)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController_account);
    if (!objc_msgSend(v3, sel_canEnableSharingToProvider)
      || (objc_msgSend(v3, sel_hasClinicalSharingScopes) & 1) == 0)
    {
      v4 = *(void **)(v0 + v1);
      if (v4)
      {
        v5 = qword_1EF428560;
        v6 = v4;
        if (v5 != -1)
          swift_once();
        v7 = (id)qword_1EF42F6C8;
        swift_bridgeObjectRetain();
        sub_1BC62A4A8();
        swift_bridgeObjectRelease();

        v8 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
        objc_msgSend(v6, sel_setTitle_forState_, v8, 0, 0xE000000000000000);

        v9 = *(void **)(v0 + v1);
        if (v9)
        {
          v10 = v9;
          v11 = (void *)sub_1BC62C86C();
          v12 = (id)HKUIJoinStringsForAutomationIdentifier();

          if (v12)
          {
            sub_1BC62C680();

            v13 = (id)sub_1BC62C650();
            swift_bridgeObjectRelease();
            objc_msgSend(v10, sel_setAccessibilityIdentifier_, v13);

          }
          else
          {
            __break(1u);
          }
        }
      }
    }
  }
}

void sub_1BC4F9420()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = (void *)objc_opt_self();
  v2 = OBJC_IVAR___WDClinicalAccountAddedViewController_customConstraints;
  sub_1BC34D89C();
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  v4 = objc_msgSend(v0, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  LOBYTE(v4) = sub_1BC62CD1C();
  if ((v4 & 1) != 0)
    v6 = sub_1BC4F80E8();
  else
    v6 = sub_1BC4F7EB8();
  *(_QWORD *)&v0[v2] = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v7);

  v8 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v8, sel_setNeedsLayout);

}

uint64_t sub_1BC4F9578()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = v0;
  v1[6] = swift_getObjectType();
  v2 = sub_1BC62BB34();
  v1[7] = v2;
  v1[8] = *(_QWORD *)(v2 - 8);
  v1[9] = swift_task_alloc();
  sub_1BC62C944();
  v1[10] = sub_1BC62C938();
  v1[11] = sub_1BC62C908();
  v1[12] = v3;
  return swift_task_switch();
}

uint64_t sub_1BC4F9618()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[13] = objc_msgSend(*(id *)(*(_QWORD *)(v0[5] + OBJC_IVAR___WDClinicalAccountAddedViewController_onboardingSession)+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_healthRecordsStore);
  v1 = (_QWORD *)swift_task_alloc();
  v0[14] = v1;
  *v1 = v0;
  v1[1] = sub_1BC4F969C;
  return sub_1BC62CCD4();
}

uint64_t sub_1BC4F969C(char a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)v1 + 104);
  *(_BYTE *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_1BC4F96F8()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  _BYTE *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  NSObject *log;
  uint64_t v21;
  os_log_type_t type;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_BYTE **)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 120);
  swift_release();
  v1[OBJC_IVAR___WDClinicalAccountAddedViewController_shouldPromptForDataCollection] = v2;
  sub_1BC62BAF8();
  v3 = v1;
  v4 = sub_1BC62BB28();
  v5 = sub_1BC62CAAC();
  if (os_log_type_enabled(v4, v5))
  {
    v23 = *(_QWORD *)(v0 + 64);
    v6 = *(_QWORD *)(v0 + 48);
    v24 = *(_QWORD *)(v0 + 56);
    v25 = *(_QWORD *)(v0 + 72);
    type = v5;
    v7 = *(void **)(v0 + 40);
    log = v4;
    v8 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v26 = v21;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 16) = v6;
    swift_getMetatypeMetadata();
    v9 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 24) = sub_1BC4991F0(v9, v10, &v26);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 12) = 2080;
    v11 = (id)HKStringFromBool();
    v12 = sub_1BC62C680();
    v14 = v13;

    *(_QWORD *)(v0 + 32) = sub_1BC4991F0(v12, v14, &v26);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, log, type, "%s: Fetched shouldPromptForImproveHealthRecordsDataSubmission, should prompt: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v21, -1, -1);
    MEMORY[0x1BCCF36A8](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 64);
    v15 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 56);
    v18 = *(void **)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  sub_1BC4F9208();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id AccountAddedViewController.__allocating_init(title:detailText:symbolName:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  objc_class *v8;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v8 = v7;
  v12 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    v13 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v14 = 0;
    goto LABEL_6;
  }
  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
LABEL_6:
  v15 = objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_contentLayout_, v12, v13, v14, a7);

  return v15;
}

void AccountAddedViewController.init(title:detailText:symbolName:contentLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AccountAddedViewController.__allocating_init(title:detailText:icon:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  objc_class *v6;
  objc_class *v7;
  void *v11;
  void *v12;
  id v13;

  v7 = v6;
  v11 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v12 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_contentLayout_, v11, v12, a5, a6);

  return v13;
}

void AccountAddedViewController.init(title:detailText:icon:contentLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AccountAddedViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountAddedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AccountAddedViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BC4F9CB4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC4F9CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC4F8E1C(a1, a2, v2);
}

uint64_t sub_1BC4F9CE0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC4F9D0C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BC377F18;
  return sub_1BC4F8E6C();
}

uint64_t method lookup function for AccountAddedViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountAddedViewController.dismissHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of AccountAddedViewController.dismissHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of AccountAddedViewController.dismissHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of AccountAddedViewController.__allocating_init(onboardingSession:account:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 360))();
}

void sub_1BC4F9DE8(uint64_t a1)
{
  uint64_t v1;

  sub_1BC4F8F04(a1, v1);
}

uint64_t sub_1BC4F9DF0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t block_copy_helper_45(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_45()
{
  return swift_release();
}

uint64_t sub_1BC4F9E2C()
{
  swift_release();
  return swift_deallocObject();
}

id AccountStateChange.clinicalAccountStore.getter()
{
  id *v0;

  return *v0;
}

id AccountStateChange.account.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t AccountStateChange.changeType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

double sub_1BC4F9E6C@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_1BC4F9EF0(uint64_t a1, void **a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC3F4584(v2, v3);
  v5 = v4;
  return sub_1BC62BFCC();
}

uint64_t sub_1BC4F9F7C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC4F9FE8()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1BC62BFCC();
}

void (*sub_1BC4FA060(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1BC62BFB4();
  return sub_1BC4CFE68;
}

uint64_t sub_1BC4FA0D8()
{
  swift_beginAccess();
  sub_1BC4FA418(0, &qword_1ED6A53A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BF9C();
  return swift_endAccess();
}

uint64_t sub_1BC4FA148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  uint64_t v13;

  sub_1BC4FA418(0, &qword_1ED6A4DA8, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v11((char *)&v13 - v9, a1, v3, v8);
  ((void (*)(char *, char *, uint64_t))v11)(v6, v10, v3);
  swift_beginAccess();
  sub_1BC4FA418(0, &qword_1ED6A53A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BFA8();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_1BC4FA270()
{
  swift_beginAccess();
  sub_1BC4FA418(0, &qword_1ED6A53A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BF9C();
  return swift_endAccess();
}

void sub_1BC4FA2DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A5360)
  {
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A5360);
  }
}

uint64_t sub_1BC4FA330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  sub_1BC4FA418(0, &qword_1ED6A4DA8, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v8 - v6, a1, v3, v5);
  swift_beginAccess();
  sub_1BC4FA418(0, &qword_1ED6A53A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  sub_1BC62BFA8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void sub_1BC4FA418(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC4FA2DC();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void (*sub_1BC4FA470(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1BC4FA418(0, &qword_1ED6A4DA8, MEMORY[0x1E0C96180]);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener__latestChange;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_1BC4FA418(0, &qword_1ED6A53A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v3[16] = v9;
  sub_1BC62BF9C();
  swift_endAccess();
  return sub_1BC4D031C;
}

id AccountStateChangeListener.__allocating_init(handler:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v18;
  objc_super v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  sub_1BC4FA418(0, &qword_1ED6A53A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - v9;
  v11 = (char *)objc_allocWithZone(v3);
  v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener__latestChange];
  v20 = 0;
  v21 = 0;
  v22 = 0;
  sub_1BC4FA2DC();
  v13 = v11;
  sub_1BC62BF90();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v10, v7);
  v14 = OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_changePublisher;
  sub_1BC3583FC();
  swift_allocObject();
  *(_QWORD *)&v13[v14] = sub_1BC62BEE8();
  v15 = &v13[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_handler];
  *(_QWORD *)v15 = a1;
  *((_QWORD *)v15 + 1) = a2;
  swift_retain();

  v19.receiver = v13;
  v19.super_class = v3;
  v16 = objc_msgSendSuper2(&v19, sel_init);
  swift_release();
  return v16;
}

id AccountStateChangeListener.init(handler:)(uint64_t a1, uint64_t a2)
{
  id v2;

  v2 = sub_1BC4FABFC(a1, a2);
  swift_release();
  return v2;
}

void sub_1BC4FA6D0(void *a1, id a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void (*v32)(uint64_t *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  unint64_t v41;
  uint64_t v42;

  v7 = sub_1BC62BB34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BB04();
  v11 = v3;
  v12 = a1;
  v13 = v11;
  v14 = v12;
  v15 = sub_1BC62BB28();
  v16 = sub_1BC62CADC();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v35 = v8;
    v18 = v17;
    v33 = swift_slowAlloc();
    v39 = v33;
    *(_DWORD *)v18 = 136446722;
    ObjectType = swift_getObjectType();
    sub_1BC4FAD34();
    v34 = v7;
    v19 = sub_1BC62C6F8();
    v37 = a3;
    ObjectType = sub_1BC4991F0(v19, v20, &v39);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v18 + 12) = 2082;
    ObjectType = (uint64_t)v14;
    sub_1BC4FADA8();
    v21 = v14;
    v36 = a2;
    v22 = sub_1BC62C6F8();
    ObjectType = sub_1BC4991F0(v22, v23, &v39);
    sub_1BC62CFF8();
    a3 = v37;
    swift_bridgeObjectRelease();

    *(_WORD *)(v18 + 22) = 2082;
    ObjectType = 0;
    v41 = 0xE000000000000000;
    v38 = a3;
    type metadata accessor for HKClinicalAccountStateChangeType(0);
    sub_1BC62D2D4();
    ObjectType = sub_1BC4991F0(ObjectType, v41, &v39);
    a2 = v36;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v15, v16, "%{public}s: accountStateDidChange (store: %{public}s, change: %{public}s)", (uint8_t *)v18, 0x20u);
    v24 = v33;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v24, -1, -1);
    MEMORY[0x1BCCF36A8](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  ObjectType = (uint64_t)v14;
  v41 = (unint64_t)a2;
  v42 = a3;
  v25 = (char *)v13;
  v26 = v14;
  v27 = a2;
  v28 = v26;
  v29 = v27;
  sub_1BC62BFCC();
  ObjectType = (uint64_t)v14;
  v41 = (unint64_t)a2;
  v42 = a3;
  v30 = v28;
  v31 = v29;
  sub_1BC62BEDC();

  v32 = *(void (**)(uint64_t *))&v25[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_handler];
  ObjectType = (uint64_t)v30;
  v41 = (unint64_t)v31;
  v42 = a3;
  v32(&ObjectType);

}

id AccountStateChangeListener.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AccountStateChangeListener.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AccountStateChangeListener.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountStateChangeListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC4FABFC(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  uint64_t v16;
  objc_super v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BC4FA418(0, &qword_1ED6A53A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  v10 = &v2[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener__latestChange];
  v18 = 0;
  v19 = 0;
  v20 = 0;
  sub_1BC4FA2DC();
  v11 = v2;
  sub_1BC62BF90();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v9, v6);
  v12 = OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_changePublisher;
  sub_1BC3583FC();
  swift_allocObject();
  *(_QWORD *)&v11[v12] = sub_1BC62BEE8();
  v13 = &v11[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_handler];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  swift_retain();

  v14 = (objc_class *)type metadata accessor for AccountStateChangeListener();
  v17.receiver = v11;
  v17.super_class = v14;
  return objc_msgSendSuper2(&v17, sel_init);
}

unint64_t sub_1BC4FAD34()
{
  unint64_t result;

  result = qword_1EF4346A0;
  if (!qword_1EF4346A0)
  {
    type metadata accessor for AccountStateChangeListener();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF4346A0);
  }
  return result;
}

uint64_t type metadata accessor for AccountStateChangeListener()
{
  uint64_t result;

  result = qword_1ED6A5378;
  if (!qword_1ED6A5378)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BC4FADA8()
{
  unint64_t result;

  result = qword_1EF4346A8;
  if (!qword_1EF4346A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF4346A8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AccountStateChange(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for AccountStateChange(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for AccountStateChange(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for AccountStateChange()
{
  return &type metadata for AccountStateChange;
}

uint64_t sub_1BC4FAED4()
{
  return type metadata accessor for AccountStateChangeListener();
}

void sub_1BC4FAEDC()
{
  unint64_t v0;

  sub_1BC4FA418(319, &qword_1ED6A53A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for AccountStateChangeListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountStateChangeListener.latestChange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AccountStateChangeListener.latestChange.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AccountStateChangeListener.latestChange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AccountStateChangeListener.$latestChange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AccountStateChangeListener.$latestChange.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AccountStateChangeListener.$latestChange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AccountStateChangeListener.__allocating_init(handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of AccountStateChangeListener.accountStateDidChange(clinicalAccountStore:account:changeType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t sub_1BC4FB058(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A53C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC639590;
  v14 = 0;
  v15 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  if (a1)
  {
    v14 = 0x656C69666F72505BLL;
    v15 = 0xE90000000000003ALL;
    v7 = a1;
    v8 = objc_msgSend(v7, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v10 = v14;
    v9 = v15;
  }
  else
  {
    v9 = 0x80000001BC655390;
    v10 = 0xD000000000000013;
  }
  v14 = v10;
  v15 = v9;
  sub_1BC62C764();
  v11 = v15;
  *(_QWORD *)(v6 + 32) = v14;
  *(_QWORD *)(v6 + 40) = v11;
  v14 = v6;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v12 = sub_1BC62C5D8();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t _s15HealthRecordsUI35AddAccountFeedItemIdentifierFactoryV011makeGeneralab10OnboardingH03forSSSo09HKProfileH0CSg_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A53C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC639590;
  v14 = 0;
  v15 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  if (a1)
  {
    v14 = 0x656C69666F72505BLL;
    v15 = 0xE90000000000003ALL;
    v7 = a1;
    v8 = objc_msgSend(v7, sel_identifier);
    sub_1BC62A79C();

    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();

    v10 = v14;
    v9 = v15;
  }
  else
  {
    v9 = 0x80000001BC655390;
    v10 = 0xD000000000000013;
  }
  v14 = v10;
  v15 = v9;
  sub_1BC62C764();
  v11 = v15;
  *(_QWORD *)(v6 + 32) = v14;
  *(_QWORD *)(v6 + 40) = v11;
  v14 = v6;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BC3B4EE4();
  v12 = sub_1BC62C5D8();
  swift_bridgeObjectRelease();
  return v12;
}

ValueMetadata *type metadata accessor for AddAccountFeedItemIdentifierFactory()
{
  return &type metadata for AddAccountFeedItemIdentifierFactory;
}

unint64_t static ExplainerTextFooterCell.reuseIdentifier.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_1BC4FB520()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___HRExplainerTextFooterCell_content);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1BC4FB5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  void *v6;
  void *v7;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___HRExplainerTextFooterCell_content);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  v6 = *(void **)(v2 + OBJC_IVAR___HRExplainerTextFooterCell_label);
  if (v5[1])
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v6, sel_setText_, v7);

}

void (*sub_1BC4FB694(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRExplainerTextFooterCell_content;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC4FB6EC;
}

void sub_1BC4FB6EC(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(void **)(v4 + OBJC_IVAR___HRExplainerTextFooterCell_label);
    if (*(_QWORD *)(v4 + v3[4] + 8))
    {
      swift_bridgeObjectRetain();
      v6 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v5, sel_setText_, v6);

  }
  free(v3);
}

id ExplainerTextFooterCell.__allocating_init(reuseIdentifier:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_allocWithZone(v0);
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithStyle_reuseIdentifier_, 0, v2);

  v4 = v3;
  sub_1BC4FB8E0();

  return v4;
}

id ExplainerTextFooterCell.init(reuseIdentifier:)()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  v1 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithStyle_reuseIdentifier_, 0, v1);

  v3 = v2;
  sub_1BC4FB8E0();

  return v3;
}

void sub_1BC4FB8E0()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_clearColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v3);

  v4 = objc_msgSend(v2, sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v4);

  v5 = *(void **)&v0[OBJC_IVAR___HRExplainerTextFooterCell_label];
  v6 = objc_msgSend(v2, sel_systemGrayColor);
  objc_msgSend(v5, sel_setTextColor_, v6);

  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v7 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v7, sel_addSubview_, v5);

  v8 = objc_msgSend(v5, sel_leadingAnchor);
  v9 = objc_msgSend(v0, sel_contentView);
  v10 = objc_msgSend(v9, sel_layoutMarginsGuide);

  v11 = objc_msgSend(v10, sel_leadingAnchor);
  v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);

  objc_msgSend(v12, sel_setActive_, 1);
  v13 = objc_msgSend(v5, sel_trailingAnchor);
  v14 = objc_msgSend(v0, sel_contentView);
  v15 = objc_msgSend(v14, sel_layoutMarginsGuide);

  v16 = objc_msgSend(v15, sel_trailingAnchor);
  v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);

  objc_msgSend(v17, sel_setActive_, 1);
  v18 = objc_msgSend(v5, sel_topAnchor);
  v19 = objc_msgSend(v0, sel_contentView);
  v20 = objc_msgSend(v19, sel_layoutMarginsGuide);

  v21 = objc_msgSend(v20, sel_topAnchor);
  v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v21);

  objc_msgSend(v22, sel_setActive_, 1);
  v23 = objc_msgSend(v5, sel_bottomAnchor);
  v24 = objc_msgSend(v0, sel_contentView);
  v25 = objc_msgSend(v24, sel_layoutMarginsGuide);

  v26 = objc_msgSend(v25, sel_bottomAnchor);
  v27 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v26);

  objc_msgSend(v27, sel_setActive_, 1);
}

id ExplainerTextFooterCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id ExplainerTextFooterCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  char *v13;
  void *v14;
  id v15;
  objc_super v17;

  v6 = OBJC_IVAR___HRExplainerTextFooterCell_label;
  v7 = (void *)objc_opt_self();
  v8 = *MEMORY[0x1E0DC4AB8];
  v9 = v3;
  v10 = objc_msgSend(v7, sel_preferredFontForTextStyle_, v8);
  v11 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v12, sel_setFont_, v10);
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  objc_msgSend(v12, sel_setTextColor_, v11);

  *(_QWORD *)&v3[v6] = v12;
  v13 = &v9[OBJC_IVAR___HRExplainerTextFooterCell_content];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;

  if (a3)
  {
    v14 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for ExplainerTextFooterCell();
  v15 = objc_msgSendSuper2(&v17, sel_initWithStyle_reuseIdentifier_, a1, v14);

  return v15;
}

uint64_t type metadata accessor for ExplainerTextFooterCell()
{
  return objc_opt_self();
}

id ExplainerTextFooterCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ExplainerTextFooterCell.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  char *v10;
  id v11;
  objc_super v13;

  v3 = OBJC_IVAR___HRExplainerTextFooterCell_label;
  v4 = (void *)objc_opt_self();
  v5 = *MEMORY[0x1E0DC4AB8];
  v6 = v1;
  v7 = objc_msgSend(v4, sel_preferredFontForTextStyle_, v5);
  v8 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v9, sel_setFont_, v7);
  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  objc_msgSend(v9, sel_setTextColor_, v8);

  *(_QWORD *)&v1[v3] = v9;
  v10 = &v6[OBJC_IVAR___HRExplainerTextFooterCell_content];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;

  v13.receiver = v6;
  v13.super_class = (Class)type metadata accessor for ExplainerTextFooterCell();
  v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

id ExplainerTextFooterCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExplainerTextFooterCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC4FC104@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___HRExplainerTextFooterCell_content);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

void sub_1BC4FC158(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1BC4FB5E0(v1, v2);
}

uint64_t method lookup function for ExplainerTextFooterCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExplainerTextFooterCell.content.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ExplainerTextFooterCell.content.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ExplainerTextFooterCell.content.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

void DisplayCategory.Kind.hkDisplayCategory.getter()
{
  __asm { BR              X9 }
}

id sub_1BC4FC25C()
{
  return objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, 21);
}

void *static DisplayCategory.Kind.allCases.getter()
{
  return &unk_1E74D2610;
}

void DisplayCategory.Kind.systemImageName.getter()
{
  __asm { BR              X9 }
}

uint64_t sub_1BC4FC33C()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, 21);
  if (!v0)
    return 0;
  v1 = v0;
  v2 = objc_msgSend(v0, sel_systemImageName);

  v3 = sub_1BC62C680();
  return v3;
}

uint64_t DisplayCategory.Kind.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t DisplayCategory.Kind.medicalRecordCategoryType.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void DisplayCategory.Kind.medicalTypes.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BC4FC47C()
{
  uint64_t v0;

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639580;
  *(_QWORD *)(v0 + 32) = objc_msgSend((id)objc_opt_self(), sel_medicationDispenseRecordType);
  *(_QWORD *)(v0 + 40) = objc_msgSend((id)objc_opt_self(), sel_medicationOrderType);
  *(_QWORD *)(v0 + 48) = objc_msgSend((id)objc_opt_self(), sel_medicationRecordType);
  sub_1BC62C890();
  return v0;
}

void sub_1BC4FC850()
{
  sub_1BC62D394();
  __break(1u);
  JUMPOUT(0x1BC4FC898);
}

HealthRecordsUI::DisplayCategory::Kind_optional __swiftcall DisplayCategory.Kind.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 11;
  if ((unint64_t)rawValue < 0xB)
    v2 = rawValue;
  *v1 = v2;
  return (HealthRecordsUI::DisplayCategory::Kind_optional)rawValue;
}

void sub_1BC4FC8D8(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;

  v3 = a1;
  v28 = objc_msgSend(v3, sel_categoryType);
  v4 = objc_msgSend(v3, sel_categoryMetricColors);
  v5 = objc_msgSend(v4, sel_keyColor);

  if (!v5)
    v5 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v6 = objc_msgSend(v3, sel_displayImageName);
  if (v6)
  {
    v7 = v6;
    v8 = sub_1BC62C680();
    v24 = v9;
    v26 = v8;

  }
  else
  {
    v24 = 0;
    v26 = 0;
  }
  v10 = objc_msgSend(v3, sel_displayName, v24, v26);
  v11 = sub_1BC62C680();
  v13 = v12;

  v14 = objc_msgSend(v3, sel_sampleTypes);
  if (v14)
  {
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    v15 = sub_1BC62C878();

    v16 = v3;
    v17 = sub_1BC4FDCC0(v15, v16);
    swift_bridgeObjectRelease();

  }
  else
  {
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v18 = objc_msgSend(v3, sel_sampleTypes);
  if (v18)
  {
    v19 = v18;
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    v20 = sub_1BC62C878();

    v21 = v3;
    v22 = sub_1BC4FDF58(v20, v21);
    swift_bridgeObjectRelease();

  }
  else
  {
    v22 = MEMORY[0x1E0DEE9D8];
  }
  if ((unint64_t)v28 >= 0xB)
    v23 = 0;
  else
    v23 = (char)v28;

  *(_BYTE *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v25;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v22;
  *(_QWORD *)(a2 + 64) = v3;
}

void DisplayCategory.kind.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

id DisplayCategory.tintColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t DisplayCategory.imageName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DisplayCategory.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DisplayCategory.queryDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DisplayCategory.reachableQueryDescriptor.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1BC4FCB9C(void **a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v5;
  uint64_t inited;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;

  v5 = *a1;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A59B8, (uint64_t (*)(uint64_t))sub_1BC41CDD8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  v7 = v5;
  v8 = objc_msgSend(a2, sel_additionalPredicatesForCategory);
  if (v8)
  {
    v9 = v8;
    sub_1BC34B6A0(0, &qword_1ED6A58D8);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
    sub_1BC3754E8();
    v10 = sub_1BC62C548();

    v11 = v7;
    v12 = sub_1BC5A1610(v11, v10);
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 32) = v12;

  }
  else
  {
    *(_QWORD *)(inited + 32) = 0;
  }
  *(_QWORD *)(inited + 40) = objc_msgSend((id)objc_opt_self(), sel_predicateForMedicalRecordWithState_, 0);
  sub_1BC62C890();
  v20 = MEMORY[0x1E0DEE9D8];
  v13 = *(void **)(inited + 32);
  if (v13)
  {
    v14 = v13;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v15 = *(void **)(inited + 40);
  if (v15)
  {
    v16 = v15;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  swift_bridgeObjectRelease();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v17 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v17);

  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A88]), sel_initWithSampleType_predicate_, v7, v18);
  *a3 = v19;
}

void DisplayCategory.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  id v9;

  v3 = (void *)v1[1];
  v4 = v1[3];
  v5 = v1[6];
  v6 = v1[7];
  v7 = (void *)v1[8];
  sub_1BC62D67C();
  v8 = v3;
  sub_1BC62CEC0();

  sub_1BC62D688();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC4FD4B8(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC4FD4B8(a1, v6);
  swift_bridgeObjectRelease();
  v9 = v7;
  sub_1BC62CEC0();

}

uint64_t DisplayCategory.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _BYTE v5[80];
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 32);
  v5[72] = *(_BYTE *)v0;
  v6 = v1;
  v7 = *(_OWORD *)(v0 + 16);
  v8 = v2;
  v3 = *(_OWORD *)(v0 + 56);
  v9 = *(_OWORD *)(v0 + 40);
  v10 = v3;
  sub_1BC62D670();
  DisplayCategory.hash(into:)((uint64_t)v5);
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4FD000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _BYTE v5[80];
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 32);
  v5[72] = *(_BYTE *)v0;
  v6 = v1;
  v7 = *(_OWORD *)(v0 + 16);
  v8 = v2;
  v3 = *(_OWORD *)(v0 + 56);
  v9 = *(_OWORD *)(v0 + 40);
  v10 = v3;
  sub_1BC62D670();
  DisplayCategory.hash(into:)((uint64_t)v5);
  return sub_1BC62D6AC();
}

uint64_t sub_1BC4FD070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _BYTE v5[80];
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 32);
  v5[72] = *(_BYTE *)v0;
  v6 = v1;
  v7 = *(_OWORD *)(v0 + 16);
  v8 = v2;
  v3 = *(_OWORD *)(v0 + 56);
  v9 = *(_OWORD *)(v0 + 40);
  v10 = v3;
  sub_1BC62D670();
  DisplayCategory.hash(into:)((uint64_t)v5);
  return sub_1BC62D6AC();
}

HealthRecordsUI::DisplayCategory::Kind_optional sub_1BC4FD0DC(Swift::Int *a1)
{
  return DisplayCategory.Kind.init(rawValue:)(*a1);
}

void sub_1BC4FD0E4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E74D2610;
}

uint64_t sub_1BC4FD0F4()
{
  sub_1BC4FDC34();
  return sub_1BC62C854();
}

uint64_t sub_1BC4FD150()
{
  sub_1BC4FDC34();
  return sub_1BC62C83C();
}

void *sub_1BC4FD19C()
{
  void *result;

  result = (void *)sub_1BC5FD494((uint64_t)&unk_1E74D2610, (uint64_t)&unk_1E74D2FC0);
  off_1ED6A4EC8 = result;
  return result;
}

uint64_t static DisplayCategory.Kind.regularKinds.getter()
{
  return sub_1BC4FD228(&qword_1ED6A31D8);
}

void sub_1BC4FD1F8()
{
  qword_1EF4346E8 = (uint64_t)&unk_1E74D2FE8;
}

uint64_t static DisplayCategory.Kind.chartableKinds.getter()
{
  return sub_1BC4FD228(&qword_1EF4286D0);
}

uint64_t sub_1BC4FD228(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void *static DisplayCategory.Kind.kindsWithAttachments.getter()
{
  return &unk_1E74D3010;
}

id HKMedicalType.displayCategoryKind.getter@<X0>(char *a1@<X8>)
{
  void *v1;
  id result;
  char v4;

  result = objc_msgSend(v1, sel_code);
  v4 = 1;
  switch((unint64_t)result)
  {
    case 0x7EuLL:
    case 0x7FuLL:
    case 0x80uLL:
      break;
    case 0x81uLL:
    case 0x82uLL:
      v4 = 2;
      break;
    case 0x83uLL:
      v4 = 6;
      break;
    case 0x84uLL:
      v4 = 4;
      break;
    case 0x85uLL:
      v4 = 7;
      break;
    case 0x86uLL:
      v4 = 5;
      break;
    default:
      if (result == (id)267)
        v4 = 10;
      else
        v4 = 0;
      break;
  }
  *a1 = v4;
  return result;
}

id sub_1BC4FD2F8@<X0>(char *a1@<X8>)
{
  return HKMedicalType.displayCategoryKind.getter(a1);
}

uint64_t sub_1BC4FD318(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v18[2];

  v4 = sub_1BC62A7B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v18 - v10;
  v12 = *(_QWORD *)(a2 + 16);
  v18[1] = a1;
  sub_1BC62D67C();
  if (v12)
  {
    v13 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v14 = *(_QWORD *)(v5 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    while (1)
    {
      v15(v11, v13, v4);
      v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v16(v11, 0, 1, v4);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4);
      if ((_DWORD)result == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
      sub_1BC4FDC78();
      sub_1BC62C5CC();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v13 += v14;
      if (!--v12)
        return v16(v11, 1, 1, v4);
    }
  }
  else
  {
    v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v16(v11, 1, 1, v4);
  }
  return result;
}

void sub_1BC4FD4B8(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  void **v5;
  void *v6;
  id v7;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    sub_1BC62D67C();
    swift_bridgeObjectRetain();
    v3 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v3)
      return;
  }
  else
  {
    sub_1BC62D67C();
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      return;
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      MEMORY[0x1BCCF24CC](i, a2);
      sub_1BC62CEC0();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v5 = (void **)(a2 + 32);
    do
    {
      v6 = *v5++;
      v7 = v6;
      sub_1BC62CEC0();

      --v3;
    }
    while (v3);
  }
}

uint64_t _s15HealthRecordsUI15DisplayCategoryV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2)
    return 0;
  v2 = a1[3];
  v3 = a1[4];
  v13 = a1[6];
  v14 = a1[5];
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[5];
  v11 = a1[7];
  v12 = a2[6];
  v10 = a2[7];
  v7 = a2[2];
  v8 = a1[2];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  if ((sub_1BC62CEB4() & 1) == 0)
    return 0;
  if (v2)
  {
    if (!v4 || (v8 != v7 || v2 != v4) && (sub_1BC62D574() & 1) == 0)
      return 0;
  }
  else if (v4)
  {
    return 0;
  }
  if ((v3 == v5 && v14 == v6 || (sub_1BC62D574() & 1) != 0)
    && (sub_1BC3ED4CC(v13, v12) & 1) != 0
    && (sub_1BC3ED4CC(v11, v10) & 1) != 0)
  {
    return sub_1BC62CEB4() & 1;
  }
  return 0;
}

unint64_t sub_1BC4FD720()
{
  unint64_t result;

  result = qword_1ED6A5508;
  if (!qword_1ED6A5508)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for DisplayCategory, &type metadata for DisplayCategory);
    atomic_store(result, (unint64_t *)&qword_1ED6A5508);
  }
  return result;
}

unint64_t sub_1BC4FD768()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4346F0;
  if (!qword_1EF4346F0)
  {
    sub_1BC34B508(255, &qword_1EF4346F8, (uint64_t)&type metadata for DisplayCategory.Kind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF4346F0);
  }
  return result;
}

unint64_t sub_1BC4FD7CC()
{
  unint64_t result;

  result = qword_1ED6A4ED8;
  if (!qword_1ED6A4ED8)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for DisplayCategory.Kind, &type metadata for DisplayCategory.Kind);
    atomic_store(result, (unint64_t *)&qword_1ED6A4ED8);
  }
  return result;
}

void destroy for DisplayCategory(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for DisplayCategory(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v7;
  return a1;
}

uint64_t assignWithCopy for DisplayCategory(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 64);
  v8 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for DisplayCategory(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for DisplayCategory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisplayCategory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayCategory()
{
  return &type metadata for DisplayCategory;
}

uint64_t getEnumTagSinglePayload for DisplayCategory.Kind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DisplayCategory.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BC4FDBAC + 4 * byte_1BC645BDE[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BC4FDBE0 + 4 * byte_1BC645BD9[v4]))();
}

uint64_t sub_1BC4FDBE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4FDBE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC4FDBF0);
  return result;
}

uint64_t sub_1BC4FDBFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC4FDC04);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BC4FDC08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC4FDC10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DisplayCategory.Kind()
{
  return &type metadata for DisplayCategory.Kind;
}

uint64_t dispatch thunk of HKMedicalTypeCategoryKind.displayCategoryKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t sub_1BC4FDC34()
{
  unint64_t result;

  result = qword_1EF434700;
  if (!qword_1EF434700)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for DisplayCategory.Kind, &type metadata for DisplayCategory.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF434700);
  }
  return result;
}

unint64_t sub_1BC4FDC78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A4E38;
  if (!qword_1ED6A4E38)
  {
    v1 = sub_1BC62A7B4();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A4E38);
  }
  return result;
}

uint64_t sub_1BC4FDCC0(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  char v14;
  void *v16;
  uint64_t v17;

  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    v3 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = 0;
      while (1)
      {
        if (v3 == v5)
        {
          __break(1u);
          goto LABEL_25;
        }
        if ((a1 & 0xC000000000000001) != 0)
          v7 = (id)MEMORY[0x1BCCF24CC](v5, a1);
        else
          v7 = *(id *)(a1 + 8 * v5 + 32);
        v8 = v7;
        v9 = objc_msgSend(a2, sel_additionalPredicatesForCategory);
        if (!v9)
          goto LABEL_8;
        v10 = v9;
        sub_1BC34B6A0(0, &qword_1ED6A58D8);
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
        sub_1BC3754E8();
        v11 = sub_1BC62C548();

        if ((v11 & 0xC000000000000001) != 0)
        {
          v12 = v8;
          if (sub_1BC62D358())
          {
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v6 = v16;
            swift_unknownObjectRelease();
LABEL_21:

            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
        }
        else
        {
          if (!*(_QWORD *)(v11 + 16))
            goto LABEL_7;
          v12 = v8;
          v13 = sub_1BC558F8C((uint64_t)v12);
          if ((v14 & 1) != 0)
          {
            v6 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v13);
            goto LABEL_21;
          }
        }

LABEL_7:
        swift_bridgeObjectRelease();
LABEL_8:
        v6 = 0;
LABEL_9:
        ++v5;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A88]), sel_initWithSampleType_predicate_, v8, v6);

        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
        if (v3 == v5)
          return v17;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC4FDF58(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v5)
      break;
    v12 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1BCCF24CC](v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      v10 = v8;
      sub_1BC4FCB9C(&v10, a2, &v11);

      if (v2)
        return swift_release();
      ++v7;
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      if (v5 == v7)
        return v12;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v5 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ListConceptManagerConfiguration.isEnabled.getter()
{
  _QWORD *v0;

  return (*v0 < 5uLL) & (0x13u >> *v0);
}

uint64_t ListConceptManagerConfiguration.listType.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ListConceptManagerConfiguration.listType.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*ListConceptManagerConfiguration.listType.modify())()
{
  return nullsub_1;
}

uint64_t ListConceptManagerProviding.listConceptManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t ListConceptManagerProviding.listConceptManagerConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t UIViewController.resolvedListConceptManagerConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v3 = sub_1BC62BB34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BC62CBB4();
  v8 = v23;
  v9 = v24;
  if (v24 == 1)
  {
    sub_1BC62BB04();
    v10 = v1;
    v11 = sub_1BC62BB28();
    v12 = sub_1BC62CAC4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v20 = v3;
      v14 = (uint8_t *)v13;
      v19 = swift_slowAlloc();
      v23 = v19;
      v21 = v8;
      *(_DWORD *)v14 = 136446210;
      v18[1] = v14 + 4;
      v15 = sub_1BC62CBA8();
      v22 = sub_1BC4991F0(v15, v16, &v23);
      v8 = v21;
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v11, v12, "resolvedListConceptManagerConfiguration requested, but none found in hierarchy: %{public}s", v14, 0xCu);
      v17 = v19;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v17, -1, -1);
      MEMORY[0x1BCCF36A8](v14, -1, -1);

      result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v20);
    }
    else
    {

      result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  *(_QWORD *)a1 = v8;
  *(_BYTE *)(a1 + 8) = v9;
  return result;
}

uint64_t UIViewController.availableListConceptManagerConfiguration.getter()
{
  return sub_1BC62CBB4();
}

uint64_t sub_1BC4FE33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[32];
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  sub_1BC375540(a1, (uint64_t)v9);
  sub_1BC4FEAD0();
  v3 = swift_dynamicCast();
  if ((v3 & 1) != 0)
  {
    v4 = *((_QWORD *)&v11 + 1);
    v5 = v12;
    __swift_project_boxed_opaque_existential_1Tm(&v10, *((uint64_t *)&v11 + 1));
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 16))(&v8, v4, v5);
    v6 = v8;
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v10);
  }
  else
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    result = sub_1BC4FEB24((uint64_t)&v10);
    v6 = 0;
  }
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = v3 ^ 1;
  return result;
}

uint64_t sub_1BC4FE404@<X0>(uint64_t a1@<X8>)
{
  return UIViewController.resolvedListConceptManagerConfiguration.getter(a1);
}

void __swiftcall UIViewController.hrui_presentationCapableViewController()(Swift::tuple_viewController_UIViewController_shouldNotDismiss_Bool *__return_ptr retstr)
{
  void *v1;
  id v2;
  id v3;
  char v4;
  void *v5;
  unsigned __int8 v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;

  v2 = v1;
  v3 = objc_msgSend(v2, sel_presentedViewController);

  if (v3)
  {
    v4 = 0;
    v5 = v2;
    do
    {
      v6 = objc_msgSend(v5, sel_isModalInPresentation);
      v7 = objc_msgSend(v5, sel_presentedViewController);
      if (!v7)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        return;
      }
      v8 = v7;

      v4 |= v6;
      v9 = objc_msgSend(v8, sel_presentedViewController);

      v5 = v8;
    }
    while (v9);
    if ((v4 & 1) != 0)
      return;
  }
  v10 = objc_msgSend(v2, sel_presentingViewController);

  if (v10)
  {
    v11 = v2;
    v12 = objc_msgSend(v11, sel_presentingViewController);

    if (v12)
    {
      v13 = v11;
      while ((objc_msgSend(v13, sel_isModalInPresentation) & 1) == 0)
      {
        v14 = objc_msgSend(v13, sel_presentingViewController);
        if (!v14)
          goto LABEL_18;
        v11 = v14;

        v15 = objc_msgSend(v11, sel_presentingViewController);
        v13 = v11;
        if (!v15)
          goto LABEL_15;
      }
      v11 = v13;
    }
LABEL_15:

  }
}

Swift::Void __swiftcall UIViewController.hrui_presentIfPossible(_:animated:)(UIViewController *_, Swift::Bool animated)
{
  void *v2;
  void *v3;
  _BOOL4 v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  Swift::tuple_viewController_UIViewController_shouldNotDismiss_Bool *v15;
  void *v16;
  void *v17;
  char v18;
  id v19;
  UIViewController *v20;
  id v21;
  UIViewController *v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  UIViewController *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  UIViewController *v43;
  unsigned int v44;
  BOOL v45;
  void *v46;
  void *v47;
  void *v48;
  id v49;
  _BYTE v50[4];
  int v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _BOOL4 v55;
  uint64_t v56;
  uint64_t aBlock[6];

  v3 = v2;
  v4 = animated;
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1BC62C4D0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)&v50[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC35A280();
  *v13 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    UIViewController.hrui_presentationCapableViewController()(v15);
    v17 = v16;
    if ((v18 & 1) != 0)
    {
      v54 = v6;
      v55 = v4;
      sub_1BC62BAF8();
      v19 = v3;
      v20 = _;
      v21 = v19;
      v22 = v20;
      v23 = sub_1BC62BB28();
      v24 = sub_1BC62CAC4();
      v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        v26 = swift_slowAlloc();
        v52 = swift_slowAlloc();
        aBlock[0] = v52;
        *(_DWORD *)v26 = 136315394;
        v51 = v25;
        v27 = v21;
        v28 = objc_msgSend(v27, sel_description);
        v29 = sub_1BC62C680();
        v53 = v17;
        v30 = v29;
        v32 = v31;

        v56 = sub_1BC4991F0(v30, v32, aBlock);
        sub_1BC62CFF8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2080;
        v33 = v22;
        v34 = -[UIViewController description](v33, sel_description);
        v35 = sub_1BC62C680();
        v37 = v36;

        v38 = v35;
        v17 = v53;
        v56 = sub_1BC4991F0(v38, v37, aBlock);
        sub_1BC62CFF8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC30A000, v23, (os_log_type_t)v51, "%s was asked to present %s, however a modal is already being presented and the modal presentation should not be dismissed", (uint8_t *)v26, 0x16u);
        v39 = v52;
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v39, -1, -1);
        MEMORY[0x1BCCF36A8](v26, -1, -1);

      }
      else
      {

      }
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v54);
      v44 = objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall);
      v45 = v55;
      if (v44)
      {
        v46 = (void *)objc_opt_self();
        v47 = (void *)sub_1BC62C650();
        v48 = (void *)sub_1BC62C650();
        v49 = objc_msgSend(v46, sel_basicAlertControllerWithTitle_message_, v47, v48);

        objc_msgSend(v17, sel_presentViewController_animated_completion_, v49, v45, 0);
      }

    }
    else
    {
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = v3;
      *(_QWORD *)(v40 + 24) = _;
      *(_BYTE *)(v40 + 32) = v4;
      aBlock[4] = (uint64_t)sub_1BC4FEA80;
      aBlock[5] = v40;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1BC39BE70;
      aBlock[3] = (uint64_t)&block_descriptor_47;
      v41 = _Block_copy(aBlock);
      v42 = v3;
      v43 = _;
      swift_release();
      objc_msgSend(v42, sel_dismissViewControllerAnimated_completion_, v4, v41);

      _Block_release(v41);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC4FEA54()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC4FEA80()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_presentViewController_animated_completion_, *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), 0);
}

uint64_t block_copy_helper_46(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_46()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for ListConceptManagerConfiguration()
{
  return &type metadata for ListConceptManagerConfiguration;
}

uint64_t dispatch thunk of ListConceptManagerProviding.providedListConceptManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ListConceptManagerProviding.providedListConceptManagerConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unint64_t sub_1BC4FEAD0()
{
  unint64_t result;

  result = qword_1EF434708;
  if (!qword_1EF434708)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF434708);
  }
  return result;
}

uint64_t sub_1BC4FEB24(uint64_t a1)
{
  uint64_t v2;

  sub_1BC4FEB60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC4FEB60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF434710)
  {
    sub_1BC4FEAD0();
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF434710);
  }
}

id sub_1BC4FEBB4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = *(id *)(v0 + 64);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    objc_msgSend(v3, sel_setDateStyle_, 2);
    objc_msgSend(v3, sel_setTimeStyle_, 1);
    v4 = *(void **)(v0 + 64);
    *(_QWORD *)(v0 + 64) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1BC4FEC44()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v16;
  uint64_t v17;

  v1 = objc_msgSend(v0, sel_meaningfulDateTitle);
  v2 = sub_1BC62C680();
  v4 = v3;

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v6 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BC6395A0;
    v8 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    v9 = sub_1BC3644C0();
    *(_QWORD *)(v7 + 64) = v9;
    *(_QWORD *)(v7 + 32) = v2;
    *(_QWORD *)(v7 + 40) = v4;
    v10 = objc_msgSend(v0, sel_meaningfulDateString, 0xE000000000000000);
    v11 = sub_1BC62C680();
    v13 = v12;

    *(_QWORD *)(v7 + 96) = v8;
    *(_QWORD *)(v7 + 104) = v9;
    *(_QWORD *)(v7 + 72) = v11;
    *(_QWORD *)(v7 + 80) = v13;
    v14 = sub_1BC62C6B0();
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v0, sel_meaningfulDateString);
    v17 = sub_1BC62C680();

    return v17;
  }
}

uint64_t sub_1BC4FEE50()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[19] = v0;
  v1[20] = *v0;
  v2 = sub_1BC62A7B4();
  v1[21] = v2;
  v1[22] = *(_QWORD *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v3 = sub_1BC62BB34();
  v1[24] = v3;
  v1[25] = *(_QWORD *)(v3 - 8);
  v1[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC4FEEE0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[19];
  v2 = *(void **)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 16);
  v0[27] = v3;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1BC4FEF8C;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1BC4FF4D0;
  v5[3] = &block_descriptor_9_9;
  v5[4] = v4;
  objc_msgSend(v2, sel_getAttachmentsForObject_completion_, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_1BC4FEF8C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 224) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC4FEFEC()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t type;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 232) = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_retain();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v2;
    sub_1BC504FC4();
    type metadata accessor for AttachmentContext();
    *v2 = v0;
    v2[1] = sub_1BC4FF380;
    return sub_1BC62C89C();
  }
  swift_bridgeObjectRelease();
  sub_1BC62BAF8();
  swift_retain_n();
  v5 = sub_1BC62BB28();
  v6 = sub_1BC62CADC();
  if (os_log_type_enabled(v5, v6))
  {
    v19 = *(id *)(v0 + 216);
    v24 = *(_QWORD *)(v0 + 200);
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 208);
    type = v6;
    v7 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 160);
    v20 = *(_QWORD *)(v0 + 168);
    v21 = *(_QWORD *)(v0 + 176);
    v9 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v27 = v23;
    *(_DWORD *)v9 = 136446466;
    *(_QWORD *)(v0 + 128) = v8;
    swift_getMetatypeMetadata();
    v10 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 136) = sub_1BC4991F0(v10, v11, &v27);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    v12 = objc_msgSend(v19, sel_UUID);
    sub_1BC62A79C();

    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v13 = sub_1BC62D52C();
    v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v7, v20);
    *(_QWORD *)(v0 + 144) = sub_1BC4991F0(v13, v15, &v27);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BC30A000, v5, type, "%{public}s: No attachments for record %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v23, -1, -1);
    MEMORY[0x1BCCF36A8](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 200);
    v16 = *(_QWORD *)(v0 + 208);
    v18 = *(_QWORD *)(v0 + 192);
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1BC4FF380(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 248) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1BC4FF42C()
{
  uint64_t v0;

  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC4FF47C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC4FF4D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1BC504FC4();
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_1BC62C878();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1BC4FF574(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[2] = a1;
  v3[3] = a3;
  v5 = sub_1BC62A7B4();
  v3[4] = v5;
  v3[5] = *(_QWORD *)(v5 - 8);
  v3[6] = swift_task_alloc();
  v6 = sub_1BC62B99C();
  v3[7] = v6;
  v3[8] = *(_QWORD *)(v6 - 8);
  v3[9] = swift_task_alloc();
  v7 = swift_task_alloc();
  v8 = *a2;
  v3[10] = v7;
  v3[11] = v8;
  return swift_task_switch();
}

uint64_t sub_1BC4FF614()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  *(_QWORD *)(v0 + 96) = sub_1BC62CBD8();
  v3 = (uint64_t (*)(void))((int)*MEMORY[0x1E0CB43A0] + MEMORY[0x1E0CB43A0]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_1BC4FF684;
  return v3();
}

uint64_t sub_1BC4FF684(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[14] = a1;
  v4[15] = a2;
  v4[16] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC4FF6F4()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 88), sel_contentType);
  sub_1BC62B948();

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v2;
  *v2 = v0;
  v2[1] = sub_1BC4FF76C;
  return sub_1BC505560(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 80));
}

uint64_t sub_1BC4FF76C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 56);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 64);
  v4[18] = a1;
  v4[19] = a2;
  v4[20] = v2;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return swift_task_switch();
}

uint64_t sub_1BC4FF7FC()
{
  uint64_t v0;
  char **v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id *v7;
  unint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = &selRef_name;
  v2 = objc_msgSend(*(id *)(v0 + 88), sel_name);
  v3 = sub_1BC62C680();
  v5 = v4;

  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v7 = (id *)(v0 + 88);
  }
  else
  {
    v7 = (id *)(*(_QWORD *)(v0 + 24) + 16);
    v1 = &selRef_preferredDisplayName;
  }
  v8 = *(_QWORD *)(v0 + 152);
  v9 = *(void **)(v0 + 88);
  v10 = objc_msgSend(*v7, *v1);
  v11 = sub_1BC62C680();
  v13 = v12;

  v14 = objc_msgSend(v9, sel_identifier);
  sub_1BC62A79C();

  v15 = v8 >> 60;
  v44 = v11;
  if (v8 >> 60 == 15)
  {
    v16 = (uint64_t *)(v0 + 120);
    v17 = (uint64_t *)(v0 + 112);
    sub_1BC35D4EC(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  }
  else
  {
    v16 = (uint64_t *)(v0 + 152);
    v17 = (uint64_t *)(v0 + 144);
  }
  v18 = *v16;
  v19 = *v17;
  v20 = *(void **)(v0 + 88);
  sub_1BC505E34(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  v21 = sub_1BC4FFB34(v20);
  v42 = v22;
  v43 = v21;
  v23 = v19;
  v24 = v18;
  v25 = v13;
  if (v15 <= 0xE)
  {
    v30 = *(_QWORD *)(v0 + 144);
    v29 = *(_QWORD *)(v0 + 152);
    v32 = *(_QWORD *)(v0 + 112);
    v31 = *(_QWORD *)(v0 + 120);
    sub_1BC62B954();
    sub_1BC35E5E8(v30, v29);
    sub_1BC35D530(v32, v31);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 112);
    v26 = *(_QWORD *)(v0 + 120);
    v28 = objc_msgSend(*(id *)(v0 + 88), sel_contentType);
    sub_1BC62B948();
    sub_1BC35D530(v27, v26);

  }
  swift_release();
  v33 = *(_QWORD *)(v0 + 72);
  v35 = *(_QWORD *)(v0 + 56);
  v34 = *(_QWORD *)(v0 + 64);
  v36 = *(_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 32))(v36, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  v37 = (int *)type metadata accessor for AttachmentContext();
  v38 = (uint64_t *)(v36 + v37[5]);
  *v38 = v44;
  v38[1] = v25;
  v39 = (_QWORD *)(v36 + v37[6]);
  *v39 = v23;
  v39[1] = v24;
  v40 = (uint64_t *)(v36 + v37[7]);
  *v40 = v43;
  v40[1] = v42;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v36 + v37[8], v33, v35);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC4FFA74()
{
  uint64_t v0;

  sub_1BC35D530(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC4FFAD8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC4FFB34(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  int v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;

  v2 = v1;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - v5;
  v7 = sub_1BC62A760();
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = MEMORY[0x1E0C80A78](v7).n128_u64[0];
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_metadata, v9);
  if (!v12)
    goto LABEL_12;
  v13 = v12;
  v14 = MEMORY[0x1E0DEA968];
  v15 = sub_1BC62C548();

  v16 = sub_1BC62C680();
  if (!*(_QWORD *)(v15 + 16) || (v18 = sub_1BC558D94(v16, v17), (v19 & 1) == 0))
  {
    v38 = 0u;
    v39 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1BC375540(*(_QWORD *)(v15 + 56) + 32 * v18, (uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v39 + 1))
  {
LABEL_10:
    sub_1BC348D78((uint64_t)&v38, (uint64_t (*)(_QWORD))sub_1BC39BD68);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_11;
  }
  v20 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, v20 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_11:
    sub_1BC36D71C((uint64_t)v6);
LABEL_12:
    v34 = *(_QWORD *)(v2 + 24);
    swift_bridgeObjectRetain();
    return v34;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v21 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v22 = sub_1BC62A4A8();
  v36 = v23;
  v37 = v22;
  swift_bridgeObjectRelease();

  v24 = sub_1BC4FEBB4();
  v25 = (void *)sub_1BC62A700();
  v26 = objc_msgSend(v24, sel_stringFromDate_, v25);

  v27 = sub_1BC62C680();
  v29 = v28;

  v30 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v31 + 56) = v14;
  v32 = sub_1BC3644C0();
  v33 = v36;
  *(_QWORD *)(v31 + 32) = v37;
  *(_QWORD *)(v31 + 40) = v33;
  *(_QWORD *)(v31 + 96) = v14;
  *(_QWORD *)(v31 + 104) = v32;
  *(_QWORD *)(v31 + 64) = v32;
  *(_QWORD *)(v31 + 72) = v27;
  *(_QWORD *)(v31 + 80) = v29;
  v34 = sub_1BC62C6B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return v34;
}

uint64_t sub_1BC4FFF48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1BC4FFF60()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v3;

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
  v3 = *(_QWORD **)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC502218(&v3);
  *(_QWORD *)(v0 + 32) = v3;
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  type metadata accessor for AttachmentContext();
  sub_1BC62B288();
  *v1 = v0;
  v1[1] = sub_1BC500054;
  return sub_1BC62C8A8();
}

uint64_t sub_1BC500054(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1BC5000E8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC500124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 96) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 104) = v4;
  *v4 = v2;
  v4[1] = sub_1BC50018C;
  return sub_1BC500344(v2 + 56, a2);
}

uint64_t sub_1BC50018C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC5001F0()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  uint64_t v9;

  v1 = (__int128 *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 96);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_1BC34E718(v1, v0 + 16);
    sub_1BC41EB3C(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1BC639590;
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    v6 = __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(v0 + 16), v4);
    *(_QWORD *)(v3 + 56) = v4;
    *(_QWORD *)(v3 + 64) = *(_QWORD *)(v5 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 32));
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_1, v6, v4);
    sub_1BC62B258();
    v8 = sub_1BC62B288();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 0, 1, v8);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  else
  {
    sub_1BC504F04((uint64_t)v1);
    v9 = sub_1BC62B288();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 1, 1, v9);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC500338()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC500344(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = *v2;
  sub_1BC62C6D4();
  v3[23] = swift_task_alloc();
  v3[24] = type metadata accessor for PDFAttachmentItem(0);
  v3[25] = swift_task_alloc();
  v4 = sub_1BC62B99C();
  v3[26] = v4;
  v3[27] = *(_QWORD *)(v4 - 8);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = type metadata accessor for AttachmentContext();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  v5 = sub_1BC62BB34();
  v3[34] = v5;
  v3[35] = *(_QWORD *)(v5 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC500494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *boxed_opaque_existential_1;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  id v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint8_t *v79;
  _QWORD *v80;
  os_log_type_t v82;
  _BOOL4 v83;
  uint64_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  os_log_type_t v91;
  _BOOL4 v92;
  uint64_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  os_log_type_t type;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v1 + 256);
  v4 = *(_QWORD *)(v1 + 160);
  v5 = (uint64_t *)(v4 + *(int *)(*(_QWORD *)(v1 + 240) + 24));
  v7 = *v5;
  v6 = v5[1];
  sub_1BC62BAF8();
  sub_1BC3849DC(v4, v2);
  sub_1BC3849DC(v4, v3);
  swift_retain();
  sub_1BC35D4EC(v7, v6);
  swift_retain();
  sub_1BC35D4EC(v7, v6);
  v8 = sub_1BC62BB28();
  v9 = sub_1BC62CADC();
  if (os_log_type_enabled(v8, v9))
  {
    v105 = *(_QWORD *)(v1 + 312);
    v103 = *(_QWORD *)(v1 + 280);
    v104 = *(_QWORD *)(v1 + 272);
    v99 = *(_QWORD *)(v1 + 264);
    v10 = *(_QWORD *)(v1 + 240);
    v11 = *(_QWORD *)(v1 + 176);
    v100 = *(_QWORD *)(v1 + 256);
    v12 = swift_slowAlloc();
    v102 = swift_slowAlloc();
    v109 = v102;
    *(_DWORD *)v12 = 136446978;
    *(_QWORD *)(v1 + 112) = v11;
    swift_getMetatypeMetadata();
    v13 = sub_1BC62C6E0();
    *(_QWORD *)(v1 + 120) = sub_1BC4991F0(v13, v14, &v109);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v12 + 12) = 2080;
    v15 = (uint64_t *)(v99 + *(int *)(v10 + 20));
    type = v9;
    v17 = *v15;
    v16 = v15[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v1 + 128) = sub_1BC4991F0(v17, v16, &v109);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC348D78(v99, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
    *(_WORD *)(v12 + 22) = 2080;
    v18 = sub_1BC62B924();
    *(_QWORD *)(v1 + 136) = sub_1BC4991F0(v18, v19, &v109);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC348D78(v100, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
    *(_WORD *)(v12 + 32) = 2080;
    sub_1BC35D4EC(v7, v6);
    v20 = sub_1BC62A610();
    v22 = v21;
    sub_1BC35D530(v7, v6);
    *(_QWORD *)(v1 + 144) = sub_1BC4991F0(v20, v22, &v109);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    sub_1BC35D530(v7, v6);
    sub_1BC35D530(v7, v6);
    _os_log_impl(&dword_1BC30A000, v8, type, "%{public}s: Creating data source item for attachment: %s, content type: %s, data: %s", (uint8_t *)v12, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v102, -1, -1);
    MEMORY[0x1BCCF36A8](v12, -1, -1);

    v23 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v23(v105, v104);
  }
  else
  {
    v24 = *(_QWORD *)(v1 + 312);
    v25 = *(_QWORD *)(v1 + 272);
    v26 = *(_QWORD *)(v1 + 280);
    v28 = *(_QWORD *)(v1 + 256);
    v27 = *(_QWORD *)(v1 + 264);
    swift_release_n();
    sub_1BC348D78(v27, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
    sub_1BC348D78(v28, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
    sub_1BC35D530(v7, v6);
    sub_1BC35D530(v7, v6);

    v23 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v23(v24, v25);
  }
  v30 = *(_QWORD *)(v1 + 216);
  v29 = *(_QWORD *)(v1 + 224);
  v31 = *(_QWORD *)(v1 + 208);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v30 + 16))(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 160) + *(int *)(*(_QWORD *)(v1 + 240) + 32), v31);
  sub_1BC62B954();
  sub_1BC347F0C(&qword_1EF434900, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0340], MEMORY[0x1E0DF0360]);
  v32 = sub_1BC62C644();
  v33 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v33(v29, v31);
  v34 = *(_QWORD *)(v1 + 232);
  if ((v32 & 1) == 0)
  {
    v46 = *(_QWORD *)(v1 + 224);
    v47 = *(_QWORD *)(v1 + 208);
    sub_1BC62B990();
    v48 = sub_1BC62C644();
    v33(v46, v47);
    v33(v34, v47);
    if ((v48 & 1) != 0)
    {
      sub_1BC62C6BC();
      v49 = sub_1BC62C698();
      if (v50)
      {
        v51 = *(_QWORD *)(v1 + 248);
        v53 = *(uint64_t **)(v1 + 152);
        v52 = *(_QWORD *)(v1 + 160);
        *(_QWORD *)(v1 + 48) = v49;
        *(_QWORD *)(v1 + 56) = v50;
        *(_QWORD *)(v1 + 32) = 28252;
        *(_QWORD *)(v1 + 40) = 0xE200000000000000;
        *(_QWORD *)(v1 + 16) = 10;
        *(_QWORD *)(v1 + 24) = 0xE100000000000000;
        sub_1BC36E2AC();
        v54 = sub_1BC62D034();
        v56 = v55;
        swift_bridgeObjectRelease();
        sub_1BC3849DC(v52, v51);
        v57 = type metadata accessor for TextAttachmentItem(0);
        v58 = swift_allocObject();
        *(_QWORD *)(v58 + 16) = v54;
        *(_QWORD *)(v58 + 24) = v56;
        sub_1BC375724(v51, v58 + OBJC_IVAR____TtC15HealthRecordsUI18TextAttachmentItem_context, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
        v53[3] = v57;
        v53[4] = sub_1BC347F0C(&qword_1EF434918, type metadata accessor for TextAttachmentItem, (uint64_t)&unk_1BC63A6D8);
        *v53 = v58;
        goto LABEL_23;
      }
      sub_1BC62BAF8();
      swift_retain_n();
      v69 = sub_1BC62BB28();
      v82 = sub_1BC62CAC4();
      v83 = os_log_type_enabled(v69, v82);
      v72 = *(_QWORD *)(v1 + 296);
      v73 = *(_QWORD *)(v1 + 272);
      if (v83)
      {
        v84 = *(_QWORD *)(v1 + 176);
        v107 = *(_QWORD *)(v1 + 272);
        v85 = (uint8_t *)swift_slowAlloc();
        v86 = swift_slowAlloc();
        v109 = v86;
        *(_DWORD *)v85 = 136446210;
        *(_QWORD *)(v1 + 72) = v84;
        swift_getMetatypeMetadata();
        v87 = sub_1BC62C6E0();
        *(_QWORD *)(v1 + 64) = sub_1BC4991F0(v87, v88, &v109);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_1BC30A000, v69, v82, "%{public}s: Could not create TextAttachmentItem with plain text data", v85, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v86, -1, -1);
        MEMORY[0x1BCCF36A8](v85, -1, -1);

        v90 = v107;
        v89 = v72;
LABEL_22:
        v23(v89, v90);
        v98 = *(_QWORD *)(v1 + 152);
        *(_QWORD *)(v98 + 32) = 0;
        *(_OWORD *)v98 = 0u;
        *(_OWORD *)(v98 + 16) = 0u;
        goto LABEL_23;
      }
    }
    else
    {
      v59 = *(_QWORD *)(v1 + 224);
      v60 = *(_QWORD *)(v1 + 208);
      sub_1BC62B978();
      v61 = sub_1BC62B984();
      v33(v59, v60);
      if ((v61 & 1) == 0)
      {
        v80 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v1 + 320) = v80;
        *v80 = v1;
        v80[1] = sub_1BC501168;
        return sub_1BC50134C(*(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
      }
      v62 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
      sub_1BC35D4EC(v7, v6);
      v63 = (void *)sub_1BC62A628();
      v64 = objc_msgSend(v62, sel_initWithData_, v63);
      sub_1BC35D530(v7, v6);

      if (v64)
      {
        v65 = *(_QWORD *)(v1 + 248);
        v66 = *(uint64_t **)(v1 + 152);
        sub_1BC3849DC(*(_QWORD *)(v1 + 160), v65);
        v67 = type metadata accessor for ImageAttachmentItem(0);
        v68 = swift_allocObject();
        *(_QWORD *)(v68 + 16) = v64;
        sub_1BC375724(v65, v68 + OBJC_IVAR____TtC15HealthRecordsUI19ImageAttachmentItem_context, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
        v66[3] = v67;
        v66[4] = sub_1BC347F0C(&qword_1EF434910, type metadata accessor for ImageAttachmentItem, (uint64_t)&unk_1BC63A724);
        *v66 = v68;
        goto LABEL_23;
      }
      sub_1BC62BAF8();
      swift_retain_n();
      v69 = sub_1BC62BB28();
      v91 = sub_1BC62CAC4();
      v92 = os_log_type_enabled(v69, v91);
      v72 = *(_QWORD *)(v1 + 288);
      v73 = *(_QWORD *)(v1 + 272);
      if (v92)
      {
        v93 = *(_QWORD *)(v1 + 176);
        v108 = *(_QWORD *)(v1 + 272);
        v106 = *(_QWORD *)(v1 + 288);
        v94 = (uint8_t *)swift_slowAlloc();
        v95 = swift_slowAlloc();
        v109 = v95;
        *(_DWORD *)v94 = 136446210;
        *(_QWORD *)(v1 + 88) = v93;
        swift_getMetatypeMetadata();
        v96 = sub_1BC62C6E0();
        *(_QWORD *)(v1 + 80) = sub_1BC4991F0(v96, v97, &v109);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_1BC30A000, v69, v91, "%{public}s: Could not create ImageAttachmentItem with image data", v94, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v95, -1, -1);
        v79 = v94;
        goto LABEL_20;
      }
    }
LABEL_21:
    swift_release_n();

    v89 = v72;
    v90 = v73;
    goto LABEL_22;
  }
  v33(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 208));
  v35 = objc_allocWithZone(MEMORY[0x1E0CD0DB8]);
  sub_1BC35D4EC(v7, v6);
  v36 = (void *)sub_1BC62A628();
  v37 = objc_msgSend(v35, sel_initWithData_, v36);
  sub_1BC35D530(v7, v6);

  if (!v37)
  {
    sub_1BC62BAF8();
    swift_retain_n();
    v69 = sub_1BC62BB28();
    v70 = sub_1BC62CAC4();
    v71 = os_log_type_enabled(v69, v70);
    v72 = *(_QWORD *)(v1 + 304);
    v73 = *(_QWORD *)(v1 + 272);
    if (v71)
    {
      v108 = *(_QWORD *)(v1 + 272);
      v74 = *(_QWORD *)(v1 + 176);
      v106 = *(_QWORD *)(v1 + 304);
      v75 = (uint8_t *)swift_slowAlloc();
      v76 = swift_slowAlloc();
      v109 = v76;
      *(_DWORD *)v75 = 136446210;
      *(_QWORD *)(v1 + 96) = v74;
      swift_getMetatypeMetadata();
      v77 = sub_1BC62C6E0();
      *(_QWORD *)(v1 + 104) = sub_1BC4991F0(v77, v78, &v109);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1BC30A000, v69, v70, "%{public}s: Could not create PDFAttachmentItem with PDF data", v75, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v76, -1, -1);
      v79 = v75;
LABEL_20:
      MEMORY[0x1BCCF36A8](v79, -1, -1);

      v89 = v106;
      v90 = v108;
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  v38 = *(_QWORD *)(v1 + 248);
  v40 = *(_QWORD *)(v1 + 192);
  v39 = *(uint64_t **)(v1 + 200);
  v41 = *(_QWORD *)(v1 + 168);
  v42 = *(uint64_t **)(v1 + 152);
  sub_1BC3849DC(*(_QWORD *)(v1 + 160), v38);
  MEMORY[0x1BCCF37A4](v41 + 48);
  v43 = *(_QWORD *)(v41 + 56);
  v42[3] = v40;
  v42[4] = sub_1BC347F0C(&qword_1EF434920, type metadata accessor for PDFAttachmentItem, (uint64_t)&unk_1BC63A640);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v42);
  v45 = (char *)v39 + *(int *)(v40 + 24);
  *((_QWORD *)v45 + 1) = 0;
  swift_unknownObjectWeakInit();
  sub_1BC62AE8C();
  swift_allocObject();
  *v39 = sub_1BC62AE80();
  sub_1BC375724(v38, (uint64_t)v39 + *(int *)(v40 + 20), (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
  *((_QWORD *)v45 + 1) = v43;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BC375724((uint64_t)v39, (uint64_t)boxed_opaque_existential_1, type metadata accessor for PDFAttachmentItem);
LABEL_23:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1BC501168()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC5011CC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC50128C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC50134C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[16] = a1;
  v2[17] = a2;
  v2[18] = type metadata accessor for AttachmentContext();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5013A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 136) + *(int *)(*(_QWORD *)(v0 + 144) + 24));
  v2 = *v1;
  *(_QWORD *)(v0 + 160) = *v1;
  v3 = v1[1];
  *(_QWORD *)(v0 + 168) = v3;
  sub_1BC35D4EC(v2, v3);
  *(_QWORD *)(v0 + 176) = sub_1BC62B924();
  *(_QWORD *)(v0 + 184) = v4;
  if (qword_1EF4286D8 != -1)
    swift_once();
  *(_OWORD *)(v0 + 192) = xmmword_1EF434718;
  *(_QWORD *)(v0 + 208) = objc_opt_self();
  *(_QWORD *)(v0 + 216) = sub_1BC62C944();
  *(_QWORD *)(v0 + 224) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC50148C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 208);
  swift_release();
  *(_QWORD *)(v0 + 232) = objc_msgSend(v1, sel_mainScreen);
  return swift_task_switch();
}

uint64_t sub_1BC5014E8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 240) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC501548()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 232);
  swift_release();
  objc_msgSend(v1, sel_scale);
  *(_QWORD *)(v0 + 248) = v2;

  return swift_task_switch();
}

uint64_t sub_1BC50159C()
{
  _QWORD *v0;
  double v1;
  double v2;
  double v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = *((double *)v0 + 31);
  v3 = *((double *)v0 + 24);
  v2 = *((double *)v0 + 25);
  v5 = v0[20];
  v4 = v0[21];
  v6 = objc_allocWithZone(MEMORY[0x1E0CD32C8]);
  v7 = (void *)sub_1BC62A628();
  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v6, sel_initWithData_contentType_size_scale_representationTypes_, v7, v8, -1, v3, v2, v1);
  v0[32] = v9;
  sub_1BC35D530(v5, v4);

  objc_msgSend(v9, sel_setIconVariant_, 1);
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedGenerator);
  v0[33] = v10;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1BC501720;
  v11 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v12 = v0 + 10;
  v12[1] = 0x40000000;
  v12[2] = sub_1BC5018FC;
  v12[3] = &block_descriptor_48;
  v12[4] = v11;
  objc_msgSend(v10, sel_generateBestRepresentationForRequest_completionHandler_, v9, v12);
  return swift_continuation_await();
}

uint64_t sub_1BC501720()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 272) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC501780()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  id v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(uint64_t **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(void **)(v0 + 120);

  v6 = objc_msgSend(v5, sel_UIImage);
  v7 = objc_msgSend(v5, sel_type) != 0;
  sub_1BC3849DC(v3, v2);
  v8 = type metadata accessor for ThumbnailAttachmentItem(0);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v6;
  *(_BYTE *)(v9 + 24) = v7;
  sub_1BC375724(v2, v9 + OBJC_IVAR____TtC15HealthRecordsUI23ThumbnailAttachmentItem_context, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
  v4[3] = v8;
  v4[4] = sub_1BC347F0C(&qword_1EF434928, type metadata accessor for ThumbnailAttachmentItem, (uint64_t)&unk_1BC63A68C);

  *v4 = v9;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5018A0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 264);
  v2 = *(void **)(v0 + 256);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5018FC(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC501994()
{
  id *v0;

  swift_bridgeObjectRelease();
  sub_1BC359FDC((uint64_t)(v0 + 6));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicalAttachmentSectionProvider()
{
  return objc_opt_self();
}

uint64_t *sub_1BC5019F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC62A7B4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = *(uint64_t *)((char *)a2 + v9);
    v15 = *(uint64_t *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    sub_1BC35D4EC(v14, v15);
    *v13 = v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (char *)a1 + v17;
    v22 = (char *)a2 + v17;
    v23 = sub_1BC62B99C();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v24(v21, v22, v23);
  }
  return a1;
}

uint64_t sub_1BC501AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  sub_1BC35D530(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  v6 = sub_1BC62B99C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1BC501B84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (uint64_t *)(a1 + v8);
  v13 = *(_QWORD *)(a2 + v8);
  v14 = *(_QWORD *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  sub_1BC35D4EC(v13, v14);
  *v12 = v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a1 + v16;
  v21 = a2 + v16;
  v22 = sub_1BC62B99C();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  swift_bridgeObjectRetain();
  v23(v20, v21, v22);
  return a1;
}

uint64_t sub_1BC501C58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  v14 = v12[1];
  sub_1BC35D4EC(*v12, v14);
  v15 = *v11;
  v16 = v11[1];
  *v11 = v13;
  v11[1] = v14;
  sub_1BC35D530(v15, v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_1BC62B99C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

uint64_t sub_1BC501D5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1BC62B99C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_1BC501DF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = *(_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  sub_1BC35D530(v13, v14);
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_1BC62B99C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t sub_1BC501EC0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC501ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1BC62B99C();
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1BC501F78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC501F84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1BC62A7B4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1BC62B99C();
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for AttachmentContext()
{
  uint64_t result;

  result = qword_1EF434880;
  if (!qword_1EF434880)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC502068()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC62A7B4();
  if (v1 <= 0x3F)
  {
    result = sub_1BC62B99C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BC502100()
{
  return sub_1BC347F0C(&qword_1EF4348C8, (uint64_t (*)(uint64_t))type metadata accessor for AttachmentContext, (uint64_t)&unk_1BC645F80);
}

BOOL sub_1BC502134(uint64_t a1, uint64_t a2)
{
  return (sub_1BC504D24(a2, a1) & 1) == 0;
}

BOOL sub_1BC50215C(uint64_t a1, uint64_t a2)
{
  return (sub_1BC504D24(a1, a2) & 1) == 0;
}

uint64_t sub_1BC502178(uint64_t a1, uint64_t a2)
{
  return sub_1BC504D24(a2, a1);
}

double sub_1BC502188()
{
  double result;

  result = 33.0;
  xmmword_1EF434718 = xmmword_1BC645E70;
  return result;
}

double sub_1BC5021A0()
{
  double result;

  qword_1EF434728 = 0;
  unk_1EF434730 = 0;
  result = 612.0;
  xmmword_1EF434738 = xmmword_1BC645E80;
  return result;
}

void sub_1BC5021BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1EF4286E0 != -1)
    swift_once();
  qword_1EF434748 = UIEdgeInsetsInsetRect_0(*(double *)&qword_1EF434728);
  unk_1EF434750 = v0;
  qword_1EF434758 = v1;
  unk_1EF434760 = v2;
}

void sub_1BC502218(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for AttachmentContext() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BC504A08(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1BC502298(v5);
  *a1 = v3;
}

void sub_1BC502298(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char **v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  unsigned int v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v51;
  void *v52;
  signed int v53;
  void *v54;
  signed int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  unsigned int v64;
  void *v65;
  unsigned int v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  BOOL v71;
  int v72;
  void *v73;
  int v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  id v93;
  unsigned int v94;
  void *v95;
  uint64_t v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  BOOL v102;
  char v103;
  void *v104;
  signed int v105;
  void *v106;
  signed int v107;
  uint64_t v108;
  uint64_t v109;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  BOOL v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  BOOL v137;
  uint64_t v138;
  char v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  BOOL v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;

  v2 = v1;
  v4 = type metadata accessor for AttachmentContext();
  v182 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v177 = (uint64_t)&v168 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v189 = (uint64_t)&v168 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v168 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v168 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v168 - v15;
  MEMORY[0x1E0C80A78](v17);
  v179 = (uint64_t)&v168 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v168 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v168 - v23;
  v193 = a1;
  v25 = a1[1];
  v26 = sub_1BC62D520();
  if (v26 >= v25)
  {
    if (v25 < 0)
      goto LABEL_165;
    if (v25)
      sub_1BC503038(0, v25, 1, v193);
    return;
  }
  if (v25 >= 0)
    v27 = v25;
  else
    v27 = v25 + 1;
  if (v25 < -1)
    goto LABEL_173;
  v171 = v16;
  v174 = v24;
  v175 = v21;
  v170 = v26;
  if (v25 < 2)
  {
    v32 = (char *)MEMORY[0x1E0DEE9D8];
    v181 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80));
    v169 = MEMORY[0x1E0DEE9D8];
    if (v25 != 1)
    {
      v35 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_131:
      if (v35 >= 2)
      {
        v162 = *v193;
        do
        {
          v163 = v35 - 2;
          if (v35 < 2)
            goto LABEL_160;
          if (!v162)
            goto LABEL_172;
          v164 = *(_QWORD *)&v32[16 * v163 + 32];
          v165 = *(_QWORD *)&v32[16 * v35 + 24];
          sub_1BC50339C((char *)(v162 + *(_QWORD *)(v182 + 72) * v164), v162 + *(_QWORD *)(v182 + 72) * *(_QWORD *)&v32[16 * v35 + 16], v162 + *(_QWORD *)(v182 + 72) * v165, v181);
          if (v2)
            break;
          if (v165 < v164)
            goto LABEL_161;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v32 = sub_1BC504414((uint64_t)v32);
          if (v163 >= *((_QWORD *)v32 + 2))
            goto LABEL_162;
          v166 = &v32[16 * v163 + 32];
          *(_QWORD *)v166 = v164;
          *((_QWORD *)v166 + 1) = v165;
          v167 = *((_QWORD *)v32 + 2);
          if (v35 > v167)
            goto LABEL_163;
          memmove(&v32[16 * v35 + 16], &v32[16 * v35 + 32], 16 * (v167 - v35));
          *((_QWORD *)v32 + 2) = v167 - 1;
          v35 = v167 - 1;
        }
        while (v167 > 2);
      }
LABEL_142:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v169 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v28 = v25;
    v29 = v27 >> 1;
    v30 = sub_1BC62C8CC();
    *(_QWORD *)(v30 + 16) = v29;
    v25 = v28;
    v31 = *(unsigned __int8 *)(v182 + 80);
    v169 = v30;
    v181 = v30 + ((v31 + 32) & ~v31);
  }
  v33 = 0;
  v32 = (char *)MEMORY[0x1E0DEE9D8];
  v34 = &selRef_doubleValueForUnit_;
  v186 = v13;
  v187 = v4;
  v180 = v10;
LABEL_15:
  v36 = v33;
  v191 = v25;
  v178 = v33;
  if (v33 + 1 >= v25)
  {
    v51 = v33 + 1;
  }
  else
  {
    v37 = *v193;
    v38 = *(_QWORD *)(v182 + 72);
    v188 = v33 + 1;
    v39 = (uint64_t)v174;
    sub_1BC3849DC(v37 + v38 * (v33 + 1), (uint64_t)v174);
    v176 = v37;
    v192 = v38;
    v40 = (uint64_t)v175;
    sub_1BC3849DC(v37 + v38 * v36, (uint64_t)v175);
    v41 = (void *)objc_opt_self();
    v190 = v39 + *(int *)(v4 + 32);
    v42 = (void *)sub_1BC62B930();
    v43 = v4;
    v44 = objc_msgSend(v41, v34[41], v42);

    v184 = v40 + *(int *)(v43 + 32);
    v45 = (void *)sub_1BC62B930();
    LODWORD(v43) = objc_msgSend(v41, v34[41], v45);

    v185 = v41;
    if (v44 == (_DWORD)v43)
    {
      v4 = v187;
      v46 = *(int *)(v187 + 20);
      v47 = *(_QWORD *)(v39 + v46);
      v48 = *(_QWORD *)(v39 + v46 + 8);
      v49 = (_QWORD *)(v40 + v46);
      if (v47 == *v49 && v48 == v49[1])
        LODWORD(v190) = 0;
      else
        LODWORD(v190) = sub_1BC62D574();
    }
    else
    {
      v52 = (void *)sub_1BC62B930();
      v53 = objc_msgSend(v41, sel_sortOrderForType_, v52);

      v54 = (void *)sub_1BC62B930();
      v55 = objc_msgSend(v41, sel_sortOrderForType_, v54);

      LODWORD(v190) = v53 < v55;
      v4 = v187;
    }
    v13 = v186;
    v56 = (uint64_t)v171;
    v36 = v178;
    sub_1BC348D78((uint64_t)v175, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
    sub_1BC348D78((uint64_t)v174, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
    v51 = v36 + 2;
    if (v36 + 2 < v191)
    {
      v172 = v32;
      v173 = v2;
      v57 = v192 * v188;
      v58 = v176;
      v188 = v36 + 2;
      v183 = v192 * v51;
      v184 = v57;
      v59 = v179;
      while (1)
      {
        sub_1BC3849DC(v58 + v183, v59);
        sub_1BC3849DC(v58 + v184, v56);
        v60 = v56;
        v61 = (void *)sub_1BC62B930();
        v62 = v185;
        v63 = v4;
        v64 = objc_msgSend(v185, sel_sortOrderForType_, v61);

        v65 = (void *)sub_1BC62B930();
        v66 = objc_msgSend(v62, sel_sortOrderForType_, v65);

        if (v64 == v66)
        {
          v67 = *(int *)(v63 + 20);
          v68 = (_QWORD *)(v179 + v67);
          v69 = *(_QWORD *)(v179 + v67 + 8);
          v70 = (_QWORD *)(v60 + v67);
          v71 = *v68 == *v70 && v69 == v70[1];
          v4 = v63;
          v56 = v60;
          v72 = v71 ? 0 : sub_1BC62D574();
          v13 = v186;
        }
        else
        {
          v73 = (void *)sub_1BC62B930();
          v74 = objc_msgSend(v62, sel_sortOrderForType_, v73);

          v75 = (void *)sub_1BC62B930();
          LODWORD(v73) = objc_msgSend(v62, sel_sortOrderForType_, v75);

          v72 = v74 < (int)v73;
          v4 = v63;
          v13 = v186;
          v56 = v60;
        }
        sub_1BC348D78(v56, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
        v59 = v179;
        sub_1BC348D78(v179, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
        if (((v190 ^ v72) & 1) != 0)
          break;
        v58 += v192;
        if (v191 == ++v188)
        {
          v51 = v191;
          v32 = v172;
          v2 = v173;
          goto LABEL_40;
        }
      }
      v32 = v172;
      v2 = v173;
      v51 = v188;
LABEL_40:
      v36 = v178;
    }
    if ((v190 & 1) == 0)
      goto LABEL_54;
    if (v51 < v36)
      goto LABEL_166;
    if (v36 < v51)
    {
      v172 = v32;
      v173 = v2;
      v76 = 0;
      v77 = v192 * (v51 - 1);
      v78 = v36;
      v79 = v51 * v192;
      v80 = v78;
      v81 = v78 * v192;
      do
      {
        if (v80 != v51 + v76 - 1)
        {
          v82 = v176;
          if (!v176)
            goto LABEL_171;
          v83 = v176 + v81;
          sub_1BC375724(v176 + v81, v177, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
          if (v81 < v77 || v83 >= v82 + v79)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v81 != v77)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          sub_1BC375724(v177, v82 + v77, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
        }
        ++v80;
        --v76;
        v77 -= v192;
        v79 -= v192;
        v81 += v192;
      }
      while (v80 < v51 + v76);
      v32 = v172;
      v2 = v173;
      v13 = v186;
      v4 = v187;
      v10 = v180;
      v36 = v178;
    }
    else
    {
LABEL_54:
      v10 = v180;
    }
  }
  if (v51 >= v191)
    goto LABEL_82;
  if (__OFSUB__(v51, v36))
    goto LABEL_164;
  if (v51 - v36 >= v170)
    goto LABEL_82;
  if (__OFADD__(v36, v170))
    goto LABEL_167;
  if (v36 + v170 >= v191)
    v84 = v191;
  else
    v84 = v36 + v170;
  if (v84 >= v36)
  {
    if (v51 == v84)
      goto LABEL_82;
    v172 = v32;
    v173 = v2;
    v85 = objc_opt_self();
    v86 = *(_QWORD *)(v182 + 72);
    v87 = v86 * (v51 - 1);
    v183 = v85;
    v184 = v86;
    v192 = v51 * v86;
    v176 = v84;
LABEL_68:
    v89 = 0;
    v90 = v36;
    v188 = v51;
    v185 = (id)v87;
    while (1)
    {
      v91 = *v193;
      v191 = v192 + v89;
      sub_1BC3849DC(v192 + v89 + v91, (uint64_t)v13);
      v190 = v87 + v89;
      sub_1BC3849DC(v87 + v89 + v91, (uint64_t)v10);
      v92 = (void *)sub_1BC62B930();
      v93 = (id)v183;
      v94 = objc_msgSend((id)v183, sel_sortOrderForType_, v92);

      v95 = (void *)sub_1BC62B930();
      v96 = (uint64_t)v10;
      v97 = objc_msgSend(v93, sel_sortOrderForType_, v95);

      if (v94 == v97)
      {
        v13 = v186;
        v4 = v187;
        v98 = *(int *)(v187 + 20);
        v99 = *(_QWORD *)&v186[v98];
        v100 = *(_QWORD *)&v186[v98 + 8];
        v101 = (_QWORD *)(v96 + v98);
        v102 = v99 == *v101 && v100 == v101[1];
        v10 = (char *)v96;
        if (v102)
        {
          sub_1BC348D78(v96, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
          sub_1BC348D78((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
          v88 = v188;
          v87 = (uint64_t)v185;
LABEL_67:
          v51 = v88 + 1;
          v87 += v184;
          v192 += v184;
          v36 = v178;
          if (v51 != v176)
            goto LABEL_68;
          v51 = v176;
          v32 = v172;
          v2 = v173;
LABEL_82:
          if (v51 < v36)
            goto LABEL_159;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v188 = v51;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v32 = sub_1BC503AB4(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
          v112 = *((_QWORD *)v32 + 2);
          v111 = *((_QWORD *)v32 + 3);
          v35 = v112 + 1;
          if (v112 >= v111 >> 1)
            v32 = sub_1BC503AB4((char *)(v111 > 1), v112 + 1, 1, v32);
          *((_QWORD *)v32 + 2) = v35;
          v113 = v32 + 32;
          v114 = &v32[16 * v112 + 32];
          v115 = v188;
          *(_QWORD *)v114 = v36;
          *((_QWORD *)v114 + 1) = v115;
          if (v112)
          {
LABEL_88:
            v116 = v35 - 1;
            if (v35 >= 4)
            {
              v121 = &v113[16 * v35];
              v122 = *((_QWORD *)v121 - 8);
              v123 = *((_QWORD *)v121 - 7);
              v127 = __OFSUB__(v123, v122);
              v124 = v123 - v122;
              if (v127)
                goto LABEL_148;
              v126 = *((_QWORD *)v121 - 6);
              v125 = *((_QWORD *)v121 - 5);
              v127 = __OFSUB__(v125, v126);
              v119 = v125 - v126;
              v120 = v127;
              if (v127)
                goto LABEL_149;
              v128 = v35 - 2;
              v129 = &v113[16 * v35 - 32];
              v131 = *(_QWORD *)v129;
              v130 = *((_QWORD *)v129 + 1);
              v127 = __OFSUB__(v130, v131);
              v132 = v130 - v131;
              if (v127)
                goto LABEL_151;
              v127 = __OFADD__(v119, v132);
              v133 = v119 + v132;
              if (v127)
                goto LABEL_154;
              if (v133 >= v124)
              {
                v151 = &v113[16 * v116];
                v153 = *(_QWORD *)v151;
                v152 = *((_QWORD *)v151 + 1);
                v127 = __OFSUB__(v152, v153);
                v154 = v152 - v153;
                if (v127)
                  goto LABEL_158;
                v144 = v119 < v154;
              }
              else
              {
LABEL_101:
                if ((v120 & 1) != 0)
                  goto LABEL_150;
                v128 = v35 - 2;
                v134 = &v113[16 * v35 - 32];
                v136 = *(_QWORD *)v134;
                v135 = *((_QWORD *)v134 + 1);
                v137 = __OFSUB__(v135, v136);
                v138 = v135 - v136;
                v139 = v137;
                if (v137)
                  goto LABEL_153;
                v140 = &v113[16 * v116];
                v142 = *(_QWORD *)v140;
                v141 = *((_QWORD *)v140 + 1);
                v127 = __OFSUB__(v141, v142);
                v143 = v141 - v142;
                if (v127)
                  goto LABEL_156;
                if (__OFADD__(v138, v143))
                  goto LABEL_157;
                if (v138 + v143 < v119)
                  goto LABEL_113;
                v144 = v119 < v143;
              }
              if (v144)
                v116 = v128;
            }
            else
            {
              if (v35 == 3)
              {
                v118 = *((_QWORD *)v32 + 4);
                v117 = *((_QWORD *)v32 + 5);
                v127 = __OFSUB__(v117, v118);
                v119 = v117 - v118;
                v120 = v127;
                goto LABEL_101;
              }
              v145 = *((_QWORD *)v32 + 4);
              v146 = *((_QWORD *)v32 + 5);
              v127 = __OFSUB__(v146, v145);
              v138 = v146 - v145;
              v139 = v127;
LABEL_113:
              if ((v139 & 1) != 0)
                goto LABEL_152;
              v147 = &v113[16 * v116];
              v149 = *(_QWORD *)v147;
              v148 = *((_QWORD *)v147 + 1);
              v127 = __OFSUB__(v148, v149);
              v150 = v148 - v149;
              if (v127)
                goto LABEL_155;
              if (v150 < v138)
                goto LABEL_14;
            }
            v155 = v116 - 1;
            if (v116 - 1 >= v35)
            {
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
              break;
            }
            if (!*v193)
              goto LABEL_170;
            v156 = v32;
            v157 = &v113[16 * v155];
            v158 = *(_QWORD *)v157;
            v159 = &v113[16 * v116];
            v160 = *((_QWORD *)v159 + 1);
            sub_1BC50339C((char *)(*v193 + *(_QWORD *)(v182 + 72) * *(_QWORD *)v157), *v193 + *(_QWORD *)(v182 + 72) * *(_QWORD *)v159, *v193 + *(_QWORD *)(v182 + 72) * v160, v181);
            if (v2)
              goto LABEL_142;
            if (v160 < v158)
              goto LABEL_145;
            if (v116 > *((_QWORD *)v156 + 2))
              goto LABEL_146;
            *(_QWORD *)v157 = v158;
            *(_QWORD *)&v113[16 * v155 + 8] = v160;
            v161 = *((_QWORD *)v156 + 2);
            if (v116 >= v161)
              goto LABEL_147;
            v32 = v156;
            v35 = v161 - 1;
            memmove(&v113[16 * v116], v159 + 16, 16 * (v161 - 1 - v116));
            *((_QWORD *)v156 + 2) = v161 - 1;
            v144 = v161 > 2;
            v4 = v187;
            v10 = v180;
            if (!v144)
              goto LABEL_14;
            goto LABEL_88;
          }
          v35 = 1;
LABEL_14:
          v25 = v193[1];
          v33 = v188;
          v13 = v186;
          v34 = &selRef_doubleValueForUnit_;
          if (v188 >= v25)
            goto LABEL_131;
          goto LABEL_15;
        }
        v103 = sub_1BC62D574();
      }
      else
      {
        v104 = (void *)sub_1BC62B930();
        v105 = objc_msgSend(v93, sel_sortOrderForType_, v104);

        v106 = (void *)sub_1BC62B930();
        v107 = objc_msgSend(v93, sel_sortOrderForType_, v106);

        v103 = v105 < v107;
        v13 = v186;
        v4 = v187;
        v10 = (char *)v96;
      }
      v87 = (uint64_t)v185;
      sub_1BC348D78((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
      sub_1BC348D78((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
      if ((v103 & 1) == 0)
      {
        v88 = v188;
        goto LABEL_67;
      }
      v108 = *v193;
      if (!*v193)
        goto LABEL_169;
      v109 = v108 + v87 + v89;
      sub_1BC375724(v108 + v192 + v89, v189, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
      swift_arrayInitWithTakeFrontToBack();
      sub_1BC375724(v189, v109, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
      v89 -= v184;
      ++v90;
      v88 = v188;
      if (v188 == v90)
        goto LABEL_67;
    }
  }
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  sub_1BC62D388();
  __break(1u);
}

void sub_1BC503038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char **v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unsigned int v22;
  void *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v30;
  void *v31;
  signed int v32;
  void *v33;
  signed int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;

  v49 = a4;
  v39 = a1;
  v6 = type metadata accessor for AttachmentContext();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v46 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v37 - v13;
  v45 = a3;
  v38 = a2;
  if (a3 != a2)
  {
    v15 = (void *)objc_opt_self();
    v16 = *(_QWORD *)(v7 + 72);
    v17 = v16 * (v45 - 1);
    v42 = v14;
    v43 = v16;
    v51 = v16 * v45;
    v18 = &selRef_doubleValueForUnit_;
    v40 = v11;
    v41 = v6;
LABEL_6:
    v19 = 0;
    v50 = v39;
    v44 = v17;
    while (1)
    {
      v20 = *v49;
      v48 = v51 + v19;
      sub_1BC3849DC(v51 + v19 + v20, (uint64_t)v14);
      v47 = v17 + v19;
      sub_1BC3849DC(v17 + v19 + v20, (uint64_t)v11);
      v21 = (void *)sub_1BC62B930();
      v22 = objc_msgSend(v15, v18[41], v21);

      v23 = (void *)sub_1BC62B930();
      v24 = objc_msgSend(v15, v18[41], v23);

      if (v22 == v24)
      {
        v14 = v42;
        v25 = *(int *)(v41 + 20);
        v26 = *(_QWORD *)&v42[v25];
        v27 = *(_QWORD *)&v42[v25 + 8];
        v28 = &v11[v25];
        if (v26 == *(_QWORD *)v28 && v27 == *((_QWORD *)v28 + 1))
        {
          v11 = v40;
          sub_1BC348D78((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
          sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
          v17 = v44;
          v18 = &selRef_doubleValueForUnit_;
LABEL_5:
          v17 += v43;
          v51 += v43;
          if (++v45 == v38)
            return;
          goto LABEL_6;
        }
        v30 = sub_1BC62D574();
        v17 = v44;
        v18 = &selRef_doubleValueForUnit_;
      }
      else
      {
        v31 = (void *)sub_1BC62B930();
        v32 = objc_msgSend(v15, v18[41], v31);

        v33 = (void *)sub_1BC62B930();
        v34 = objc_msgSend(v15, v18[41], v33);

        v30 = v32 < v34;
        v14 = v42;
        v17 = v44;
      }
      v11 = v40;
      sub_1BC348D78((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
      sub_1BC348D78((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
      if ((v30 & 1) == 0)
        goto LABEL_5;
      v35 = *v49;
      if (!*v49)
        break;
      v36 = v35 + v17 + v19;
      sub_1BC375724(v35 + v51 + v19, v46, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
      swift_arrayInitWithTakeFrontToBack();
      sub_1BC375724(v46, v36, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
      v19 -= v43;
      ++v50;
      v18 = &selRef_doubleValueForUnit_;
      if (v45 == v50)
        goto LABEL_5;
    }
    __break(1u);
  }
}

uint64_t sub_1BC50339C(char *a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  unsigned int v28;
  void *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v36;
  void *v37;
  signed int v38;
  void *v39;
  signed int v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  unsigned int v57;
  void *v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char v65;
  BOOL v66;
  void *v67;
  signed int v68;
  void *v69;
  signed int v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  unint64_t v77;
  char *v78;
  uint64_t result;
  uint64_t v80;
  id v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;

  v90 = type metadata accessor for AttachmentContext();
  MEMORY[0x1E0C80A78](v90);
  MEMORY[0x1E0C80A78](v8);
  v85 = (unint64_t)&v80 - v9;
  MEMORY[0x1E0C80A78](v10);
  v87 = (char *)&v80 - v11;
  MEMORY[0x1E0C80A78](v12);
  v86 = (uint64_t)&v80 - v14;
  v16 = *(_QWORD *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (a2 - (_QWORD)a1 == 0x8000000000000000 && v16 == -1)
    goto LABEL_78;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1)
    goto LABEL_79;
  v18 = (uint64_t)(a2 - (_QWORD)a1) / v16;
  v93 = a1;
  v92 = (char *)a4;
  v19 = v17 / v16;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      v21 = v19 * v16;
      v86 = v13;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v47 = a4 + v21;
      v91 = a4 + v21;
      v93 = (char *)a2;
      v48 = v21 < 1 || (unint64_t)a1 >= a2;
      v49 = v85;
      if (!v48)
      {
        v50 = (void *)objc_opt_self();
        v51 = -v16;
        v83 = a1;
        v84 = a4;
        v81 = v50;
        v82 = v51;
        do
        {
          v88 = a3;
          sub_1BC3849DC(v47 + v51, v49);
          v89 = a2;
          v52 = a2 + v51;
          v87 = (char *)(a2 + v51);
          v53 = v49;
          v54 = v86;
          sub_1BC3849DC(v52, v86);
          v55 = (void *)sub_1BC62B930();
          v56 = v81;
          v57 = objc_msgSend(v81, sel_sortOrderForType_, v55);

          v58 = (void *)sub_1BC62B930();
          v59 = objc_msgSend(v56, sel_sortOrderForType_, v58);

          if (v57 == v59)
          {
            v60 = *(int *)(v90 + 20);
            v61 = *(_QWORD *)(v53 + v60);
            v62 = *(_QWORD *)(v53 + v60 + 8);
            v63 = (_QWORD *)(v54 + v60);
            if (v61 == *v63 && v62 == v63[1])
            {
              v66 = 0;
            }
            else
            {
              v65 = sub_1BC62D574();
              v54 = v86;
              v66 = v65;
            }
          }
          else
          {
            v67 = (void *)sub_1BC62B930();
            v68 = objc_msgSend(v56, sel_sortOrderForType_, v67);

            v69 = (void *)sub_1BC62B930();
            v70 = objc_msgSend(v56, sel_sortOrderForType_, v69);

            v66 = v68 < v70;
          }
          v72 = v88;
          v71 = (char *)v89;
          v74 = (unint64_t)v83;
          v73 = v84;
          v51 = v82;
          v75 = v88 + v82;
          sub_1BC348D78(v54, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
          v49 = v85;
          sub_1BC348D78(v85, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
          if (v66)
          {
            if (v72 < (unint64_t)v71 || v75 >= (unint64_t)v71)
            {
              v78 = v87;
              swift_arrayInitWithTakeFrontToBack();
              v76 = v78;
            }
            else
            {
              v76 = v87;
              if ((char *)v72 != v71)
              {
                swift_arrayInitWithTakeBackToFront();
                v76 = v87;
              }
            }
            v93 += v51;
          }
          else
          {
            v77 = v91;
            v91 += v51;
            if (v72 < v77 || v75 >= v77)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v72 != v77)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v76 = v71;
          }
          v47 = v91;
          if (v91 <= v73)
            break;
          a2 = (unint64_t)v76;
          a3 = v72 + v51;
        }
        while ((unint64_t)v76 > v74);
      }
LABEL_76:
      sub_1BC504308((unint64_t *)&v93, (unint64_t *)&v92, (uint64_t *)&v91, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
      return 1;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    v20 = v18 * v16;
    if (a4 < (unint64_t)a1 || (unint64_t)&a1[v20] <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if ((char *)a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v85 = a4 + v20;
    v91 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      v23 = (char *)objc_opt_self();
      v82 = v16;
      v83 = v23;
      v88 = a3;
      v24 = v86;
      v25 = (uint64_t)v87;
      while (1)
      {
        v89 = a2;
        sub_1BC3849DC(a2, v24);
        sub_1BC3849DC(a4, v25);
        v26 = (void *)sub_1BC62B930();
        v27 = v83;
        v28 = objc_msgSend(v83, sel_sortOrderForType_, v26);

        v29 = (void *)sub_1BC62B930();
        v30 = objc_msgSend(v27, sel_sortOrderForType_, v29);

        if (v28 == v30)
        {
          v31 = *(int *)(v90 + 20);
          v32 = *(_QWORD *)(v24 + v31);
          v33 = *(_QWORD *)(v24 + v31 + 8);
          v34 = (_QWORD *)(v25 + v31);
          if (v32 == *v34 && v33 == v34[1])
          {
            sub_1BC348D78(v25, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
            sub_1BC348D78(v24, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
            v42 = v88;
            v41 = v89;
            v43 = v82;
LABEL_36:
            v44 = (unint64_t)v93;
            v46 = (unint64_t)&v92[v43];
            if (v93 < v92 || (unint64_t)v93 >= v46)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v93 != v92)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v92 = (char *)v46;
            v45 = v41;
            goto LABEL_44;
          }
          v36 = sub_1BC62D574();
        }
        else
        {
          v37 = (void *)sub_1BC62B930();
          v38 = objc_msgSend(v27, sel_sortOrderForType_, v37);

          v39 = (void *)sub_1BC62B930();
          v40 = objc_msgSend(v27, sel_sortOrderForType_, v39);

          v36 = v38 < v40;
        }
        v42 = v88;
        v41 = v89;
        v43 = v82;
        sub_1BC348D78(v25, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
        sub_1BC348D78(v24, (uint64_t (*)(_QWORD))type metadata accessor for AttachmentContext);
        if ((v36 & 1) == 0)
          goto LABEL_36;
        v44 = (unint64_t)v93;
        v45 = v41 + v43;
        if ((unint64_t)v93 < v41 || (unint64_t)v93 >= v45)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v93 == (char *)v41)
        {
          v44 = v41;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_44:
        v93 = (char *)(v44 + v43);
        a4 = (unint64_t)v92;
        if ((unint64_t)v92 < v85)
        {
          a2 = v45;
          if (v45 < v42)
            continue;
        }
        goto LABEL_76;
      }
    }
    goto LABEL_76;
  }
LABEL_80:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

char *sub_1BC503AB4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC357158(0, &qword_1EF434930, (uint64_t (*)(uint64_t))sub_1BC4ED0D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BC503BC0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -72)
  {
    result = (char *)sub_1BC62D418();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 72;
    if (result != v3 || result >= &v3[72 * v6])
      return (char *)memmove(result, v3, 72 * v6);
  }
  return result;
}

char *sub_1BC503C84(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1BC62D418();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1BC503D2C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1BC62D418();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1BC503DD4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    result = (char *)sub_1BC62D418();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 48 * (v4 / 48);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1BC503E90(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_1BC62D418();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_1BC503F4C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -80)
  {
    result = (char *)sub_1BC62D418();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 80;
    if (result != v3 || result >= &v3[80 * v6])
      return (char *)memmove(result, v3, 80 * v6);
  }
  return result;
}

char *sub_1BC504004(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -72)
  {
    result = (char *)sub_1BC62D418();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 72 * (v4 / 72);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1BC5040C0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    result = (char *)sub_1BC62D418();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
      return (char *)memmove(result, v3, 48 * v6);
  }
  return result;
}

char *sub_1BC50417C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -56)
  {
    result = (char *)sub_1BC62D418();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
      return (char *)memmove(result, v3, 56 * v6);
  }
  return result;
}

uint64_t sub_1BC50423C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BC504308(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BC3CD250);
}

uint64_t sub_1BC504248(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BC504308(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptViewData);
}

char *sub_1BC504254(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_1BC62D418();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

uint64_t sub_1BC5042FC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BC504308(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
}

uint64_t sub_1BC504308(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_1BC62D418();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1BC504414(uint64_t a1)
{
  return sub_1BC503AB4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1BC504428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC504488(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1BC50466CLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_1BC504690(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC5046EC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_1BC504428((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_1BC35D530(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1BC5048B4(uint64_t a1)
{
  return sub_1BC3BE0B4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC5048C8(uint64_t a1)
{
  return sub_1BC3C0590(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1BC5048DC()
{
  JUMPOUT(0x1BCCF27E4);
}

uint64_t sub_1BC5048F0(_QWORD *a1)
{
  return sub_1BC3C0A6C(0, a1[2], 0, a1);
}

uint64_t sub_1BC504904(uint64_t a1)
{
  return sub_1BC3C0D9C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC504918(_QWORD *a1)
{
  return sub_1BC3C0F3C(0, a1[2], 0, a1);
}

uint64_t sub_1BC50492C(uint64_t a1)
{
  return sub_1BC3BE710(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC504940(_QWORD *a1)
{
  return sub_1BC3C0F60(0, a1[2], 0, a1);
}

uint64_t sub_1BC504954(uint64_t a1)
{
  return sub_1BC3BFA8C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC504968(_QWORD *a1)
{
  return sub_1BC3C115C(0, a1[2], 0, a1);
}

uint64_t sub_1BC50497C(uint64_t a1)
{
  return sub_1BC3BEC0C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC504990(_QWORD *a1)
{
  return sub_1BC3C1180(0, a1[2], 0, a1);
}

uint64_t sub_1BC5049A4(uint64_t a1)
{
  return sub_1BC3BF0F0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC5049B8(_QWORD *a1)
{
  return sub_1BC3C11A4(0, a1[2], 0, a1);
}

uint64_t sub_1BC5049CC(uint64_t a1)
{
  return sub_1BC3BF5CC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC5049E0(_QWORD *a1)
{
  return sub_1BC3C11C8(0, a1[2], 0, a1);
}

uint64_t sub_1BC5049F4(_QWORD *a1)
{
  return sub_1BC3C11DC(0, a1[2], 0, a1);
}

uint64_t sub_1BC504A08(_QWORD *a1)
{
  return sub_1BC3C1514(0, a1[2], 0, a1);
}

uint64_t sub_1BC504A1C(uint64_t a1)
{
  return sub_1BC3BDF38(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC504A30(_QWORD *a1)
{
  return sub_1BC3C187C(0, a1[2], 0, a1);
}

uint64_t sub_1BC504A44(_QWORD *a1)
{
  return sub_1BC3BE3E4(0, a1[2], 0, a1);
}

uint64_t sub_1BC504A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1BC62A3E8();
  v11 = result;
  if (result)
  {
    result = sub_1BC62A400();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1BC62A3F4();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1BC504428(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1BC504B0C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1BC504B50()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1BC504B84 + dword_1BC504C44[v0 >> 62]))();
}

uint64_t sub_1BC504B94@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
    {
      v5 = 1;
    }
    else
    {
      sub_1BC35D4EC(v2, v1);
      sub_1BC504690(v4, v3);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1BC504C54(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;

  if ((sub_1BC62A790() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for AttachmentContext();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if ((v9 || (sub_1BC62D574() & 1) != 0)
    && (sub_1BC504B0C(*(_QWORD *)(a1 + v4[6]), *(_QWORD *)(a1 + v4[6] + 8)), (v10 & 1) != 0)
    && ((v11 = v4[7],
         v12 = *(_QWORD *)(a1 + v11),
         v13 = *(_QWORD *)(a1 + v11 + 8),
         v14 = (_QWORD *)(a2 + v11),
         v12 == *v14)
      ? (v15 = v13 == v14[1])
      : (v15 = 0),
        v15 || (sub_1BC62D574() & 1) != 0))
  {
    return sub_1BC62B93C();
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1BC504D24(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  unsigned int v7;
  void *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v16;
  signed int v17;
  void *v18;
  signed int v19;

  v4 = (void *)objc_opt_self();
  v5 = type metadata accessor for AttachmentContext();
  v6 = (void *)sub_1BC62B930();
  v7 = objc_msgSend(v4, sel_sortOrderForType_, v6);

  v8 = (void *)sub_1BC62B930();
  v9 = objc_msgSend(v4, sel_sortOrderForType_, v8);

  if (v7 == v9)
  {
    v10 = *(int *)(v5 + 20);
    v11 = *(_QWORD *)(a1 + v10);
    v12 = *(_QWORD *)(a1 + v10 + 8);
    v13 = (_QWORD *)(a2 + v10);
    if (v11 == *v13 && v12 == v13[1])
      return 0;
    else
      return sub_1BC62D574();
  }
  else
  {
    v16 = (void *)sub_1BC62B930();
    v17 = objc_msgSend(v4, sel_sortOrderForType_, v16);

    v18 = (void *)sub_1BC62B930();
    v19 = objc_msgSend(v4, sel_sortOrderForType_, v18);

    return v17 < v19;
  }
}

uint64_t sub_1BC504E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  _QWORD *v6;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BC3781C0;
  v5[12] = a1;
  v6 = (_QWORD *)swift_task_alloc();
  v5[13] = v6;
  *v6 = v5;
  v6[1] = sub_1BC50018C;
  return sub_1BC500344((uint64_t)(v5 + 7), a2);
}

uint64_t sub_1BC504F04(uint64_t a1)
{
  uint64_t v2;

  sub_1BC41EB3C(0, &qword_1EF4348F0, &qword_1EF4348F8, (uint64_t)&protocol descriptor for AttachmentItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC504F60(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1BC377F18;
  return sub_1BC4FF574(a1, a2, v2);
}

unint64_t sub_1BC504FC4()
{
  unint64_t result;

  result = qword_1EF434950;
  if (!qword_1EF434950)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EF434950);
  }
  return result;
}

id sub_1BC505000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = (void *)sub_1BC62A628();
  type metadata accessor for DocumentReadingOptionKey(0);
  sub_1BC347F0C(&qword_1EF428FE8, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_1BC6394B4);
  v7 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v12[0] = 0;
  v8 = objc_msgSend(v4, sel_initWithData_options_documentAttributes_error_, v6, v7, a4, v12);

  if (v8)
  {
    v9 = v12[0];
  }
  else
  {
    v10 = v12[0];
    sub_1BC62A55C();

    swift_willThrow();
  }
  return v8;
}

unint64_t sub_1BC505128(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSMutableData *v17;
  unint64_t result;
  unint64_t v19;
  uint64_t v20;
  CGRect v21;
  CGRect PDFContextBounds;

  sub_1BC35D4EC(a1, a2);
  v8 = sub_1BC372824(a3);
  v9 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v10 = sub_1BC505000(a1, a2, v8, 0);
  sub_1BC35D530(a1, a2);
  if (v3)
    return v4;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D80C40]), sel_initWithAttributedText_, v10);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D80C30]), sel_init);
  objc_msgSend(v12, sel_addPrintFormatter_startingAtPageAtIndex_, v11, 0);
  if (qword_1EF4286E0 != -1)
    swift_once();
  v13 = (void *)sub_1BC62CDD0();
  v14 = (void *)sub_1BC62C650();
  objc_msgSend(v12, sel_setValue_forKey_, v13, v14);

  if (qword_1EF4286E8 != -1)
    swift_once();
  v15 = (void *)sub_1BC62CDD0();
  v16 = (void *)sub_1BC62C650();
  objc_msgSend(v12, sel_setValue_forKey_, v15, v16);

  if ((uint64_t)objc_msgSend(v12, sel_numberOfPages) > 20)
  {

    v4 = 0;
LABEL_13:

    return v4;
  }
  v17 = (NSMutableData *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DF0]), sel_init);
  v21.origin.x = 0.0;
  v21.origin.y = 0.0;
  v21.size.width = 0.0;
  v21.size.height = 0.0;
  UIGraphicsBeginPDFContextToData(v17, v21, 0);
  result = (unint64_t)objc_msgSend(v12, sel_numberOfPages);
  if ((result & 0x8000000000000000) == 0)
  {
    v19 = result;
    if (result)
    {
      v20 = 0;
      do
      {
        UIGraphicsBeginPDFPage();
        PDFContextBounds = UIGraphicsGetPDFContextBounds();
        objc_msgSend(v12, sel_drawPageAtIndex_inRect_, v20++, PDFContextBounds.origin.x, PDFContextBounds.origin.y, PDFContextBounds.size.width, PDFContextBounds.size.height);
      }
      while (v19 != v20);
    }
    UIGraphicsEndPDFContext();
    v4 = MEMORY[0x1BCCEF8EC](v17);

    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC5053F4(uint64_t a1, unint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  NSMutableData *v8;
  CGContext *v9;
  CGContext *v10;
  id v11;
  uint64_t v12;
  CGRect v14;

  v4 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  sub_1BC35D4EC(a1, a2);
  v5 = (void *)sub_1BC62A628();
  v6 = objc_msgSend(v4, sel_initWithData_, v5);
  sub_1BC35D530(a1, a2);

  if (!v6)
    return 0;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v6);
  v8 = (NSMutableData *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DF0]), sel_init);
  objc_msgSend(v7, sel_bounds);
  UIGraphicsBeginPDFContextToData(v8, v14, 0);
  UIGraphicsBeginPDFPage();
  v9 = UIGraphicsGetCurrentContext();
  if (!v9)
  {

    return 0;
  }
  v10 = v9;
  v11 = objc_msgSend(v7, sel_layer);
  objc_msgSend(v11, sel_renderInContext_, v10);

  UIGraphicsEndPDFContext();
  v12 = MEMORY[0x1BCCEF8EC](v8);

  return v12;
}

uint64_t sub_1BC505560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  v4 = sub_1BC62B99C();
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC5055D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void (*v5)(uint64_t, uint64_t);
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t inited;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v3 + 16))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 176), v2);
  sub_1BC62B954();
  sub_1BC347F0C(&qword_1EF434900, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0340], MEMORY[0x1E0DF0360]);
  v4 = sub_1BC62C644();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v1, v2);
  if ((v4 & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 160);
    v6 = *(_QWORD *)(v0 + 168);
    v5(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
    sub_1BC35D4EC(v7, v6);
    v8 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 168);
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v8, v9);
  }
  v11 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 184);
  sub_1BC62B96C();
  v13 = sub_1BC62C644();
  v5(v11, v12);
  v14 = *(_QWORD *)(v0 + 184);
  if ((v13 & 1) != 0)
  {
    v5(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
    sub_1BC357158(0, &qword_1EF434960, (uint64_t (*)(uint64_t))sub_1BC505E48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BC639590;
    v16 = (void *)*MEMORY[0x1E0DC1120];
    v17 = (void *)*MEMORY[0x1E0DC1148];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1120];
    *(_QWORD *)(inited + 40) = v17;
    v18 = v16;
    v19 = v17;
    *(_QWORD *)(v0 + 216) = sub_1BC35D148(inited);
    sub_1BC62C944();
    *(_QWORD *)(v0 + 224) = sub_1BC62C938();
    sub_1BC62C908();
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 200);
    sub_1BC62B990();
    v21 = sub_1BC62C644();
    v5(v20, v14);
    v22 = *(_QWORD *)(v0 + 184);
    if ((v21 & 1) != 0)
    {
      v5(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
      sub_1BC357158(0, &qword_1EF434960, (uint64_t (*)(uint64_t))sub_1BC505E48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v23 = swift_initStackObject();
      *(_OWORD *)(v23 + 16) = xmmword_1BC639590;
      v24 = (void *)*MEMORY[0x1E0DC1120];
      v25 = (void *)*MEMORY[0x1E0DC1180];
      *(_QWORD *)(v23 + 32) = *MEMORY[0x1E0DC1120];
      *(_QWORD *)(v23 + 40) = v25;
      v26 = v24;
      v27 = v25;
      *(_QWORD *)(v0 + 256) = sub_1BC35D148(v23);
      sub_1BC62C944();
      *(_QWORD *)(v0 + 264) = sub_1BC62C938();
      sub_1BC62C908();
    }
    else
    {
      v29 = *(_QWORD *)(v0 + 200);
      v28 = *(_QWORD *)(v0 + 208);
      sub_1BC62B960();
      v30 = sub_1BC62C644();
      v5(v29, v22);
      v5(v28, v22);
      if ((v30 & 1) != 0)
      {
        sub_1BC357158(0, &qword_1EF434960, (uint64_t (*)(uint64_t))sub_1BC505E48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v31 = swift_initStackObject();
        *(_OWORD *)(v31 + 16) = xmmword_1BC639590;
        v32 = (void *)*MEMORY[0x1E0DC1120];
        v33 = (void *)*MEMORY[0x1E0DC1190];
        *(_QWORD *)(v31 + 32) = *MEMORY[0x1E0DC1120];
        *(_QWORD *)(v31 + 40) = v33;
        v34 = v32;
        v35 = v33;
        *(_QWORD *)(v0 + 296) = sub_1BC35D148(v31);
        sub_1BC62C944();
        *(_QWORD *)(v0 + 304) = sub_1BC62C938();
        sub_1BC62C908();
      }
      else
      {
        v36 = *(_QWORD *)(v0 + 200);
        v37 = *(_QWORD *)(v0 + 184);
        sub_1BC62B978();
        v38 = sub_1BC62B984();
        v5(v36, v37);
        if ((v38 & 1) == 0)
        {
          v8 = 0;
          v9 = 0xF000000000000000;
          goto LABEL_3;
        }
        sub_1BC62C944();
        *(_QWORD *)(v0 + 336) = sub_1BC62C938();
        sub_1BC62C908();
      }
    }
  }
  return swift_task_switch();
}

uint64_t sub_1BC505A28()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[27];
  v3 = v0[20];
  v2 = v0[21];
  swift_release();
  v4 = sub_1BC505128(v3, v2, v1);
  v0[29] = 0;
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  v0[30] = v7;
  v0[31] = v5;
  return swift_task_switch();
}

uint64_t sub_1BC505AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1BC505AFC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC505B4C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[32];
  v3 = v0[20];
  v2 = v0[21];
  swift_release();
  v4 = sub_1BC505128(v3, v2, v1);
  v0[34] = 0;
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  v0[35] = v7;
  v0[36] = v5;
  return swift_task_switch();
}

uint64_t sub_1BC505BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1BC505C20()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC505C70()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[37];
  v3 = v0[20];
  v2 = v0[21];
  swift_release();
  v4 = sub_1BC505128(v3, v2, v1);
  v0[39] = 0;
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  v0[40] = v7;
  v0[41] = v5;
  return swift_task_switch();
}

uint64_t sub_1BC505CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1BC505D44()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC505D94()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = v0[20];
  v2 = v0[21];
  swift_release();
  v0[43] = sub_1BC5053F4(v1, v2);
  v0[44] = v3;
  return swift_task_switch();
}

uint64_t sub_1BC505DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_1BC505E34(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BC35D4EC(a1, a2);
  return a1;
}

void sub_1BC505E48()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF434968)
  {
    type metadata accessor for DocumentReadingOptionKey(255);
    type metadata accessor for DocumentType(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF434968);
  }
}

double UIEdgeInsetsInsetRect_0(double a1)
{
  return a1 + 36.0;
}

void sub_1BC505EEC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_dataSource];
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_pickerRange);
    v3 = sub_1BC610544(*(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear), v2);
    if ((v4 & 1) != 0)
    {
      swift_retain();
    }
    else
    {
      v5 = v3;
      v6 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView]
                    + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker);
      swift_retain();
      objc_msgSend(v6, sel_selectRow_inComponent_animated_, v5, 0, 1);
    }
    v7 = sub_1BC610544(*(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear), v2);
    if ((v8 & 1) == 0)
      objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView]+ OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker), sel_selectRow_inComponent_animated_, v7, 0, 1);
    v9 = objc_msgSend(v0, sel_contentView);
    v10 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView];
    objc_msgSend(v9, sel_addSubview_, v10);

    v11 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v10, sel_hk_alignVerticalConstraintsWithView_margin_, v11, 0.0);

    v12 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v10, sel_hk_alignHorizontalConstraintsWithView_margin_, v12, 40.0);
    swift_release();

  }
}

void sub_1BC5060B8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_baseAccessibilityIdentifier + 8];
  if (v1)
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_baseAccessibilityIdentifier];
    sub_1BC359F44();
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v3 + 32) = v2;
    *(_QWORD *)(v3 + 40) = v1;
    *(_QWORD *)(v3 + 48) = 0x654372656B636950;
    *(_QWORD *)(v3 + 56) = 0xEA00000000006C6CLL;
    swift_bridgeObjectRetain();
    v4 = (void *)sub_1BC62C86C();
    v5 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v0, sel_setAccessibilityIdentifier_, v5);
    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView];
    v7 = *(id *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker);
    swift_bridgeObjectRetain();
    v8 = (_QWORD *)v3;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1BC3B5060(0, *(_QWORD *)(v3 + 16) + 1, 1, (_QWORD *)v3);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_1BC3B5060((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = (char *)&v8[2 * v10];
    strcpy(v11 + 32, "MinYearPicker");
    *((_WORD *)v11 + 23) = -4864;
    v12 = (void *)sub_1BC62C86C();
    v13 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v13);
    swift_bridgeObjectRelease();

    v14 = *(id *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = (uint64_t)sub_1BC3B5060(0, *(_QWORD *)(v3 + 16) + 1, 1, (_QWORD *)v3);
    v16 = *(_QWORD *)(v3 + 16);
    v15 = *(_QWORD *)(v3 + 24);
    if (v16 >= v15 >> 1)
      v3 = (uint64_t)sub_1BC3B5060((_QWORD *)(v15 > 1), v16 + 1, 1, (_QWORD *)v3);
    *(_QWORD *)(v3 + 16) = v16 + 1;
    v17 = v3 + 16 * v16;
    strcpy((char *)(v17 + 32), "MaxYearPicker");
    *(_WORD *)(v17 + 46) = -4864;
    v18 = (void *)sub_1BC62C86C();
    v19 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v19);
    swift_bridgeObjectRelease();

  }
}

char *sub_1BC50637C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  void *v10;
  id v11;
  char *v12;
  char *v13;
  void *v14;
  void *v15;
  char *v16;
  objc_super v18;

  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_dataSource] = 0;
  v6 = &v3[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_baseAccessibilityIdentifier];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView;
  type metadata accessor for YearRangePickerView();
  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, sel_init);

  if (a3)
  {
    v10 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v18.receiver = v9;
  v18.super_class = (Class)type metadata accessor for YearRangePickerCell();
  v11 = objc_msgSendSuper2(&v18, sel_initWithStyle_reuseIdentifier_, a1, v10);

  v12 = (char *)v11;
  objc_msgSend(v12, sel_setSelectionStyle_, 0);
  v13 = *(char **)&v12[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView];
  v14 = *(void **)&v13[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker];
  objc_msgSend(v14, sel_setDataSource_, v12);
  objc_msgSend(v14, sel_setDelegate_, v12);
  v15 = *(void **)&v13[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker];
  objc_msgSend(v15, sel_setDataSource_, v12);
  objc_msgSend(v15, sel_setDelegate_, v12);
  v16 = v13;
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  return v12;
}

id sub_1BC506770()
{
  return sub_1BC405B94(type metadata accessor for YearRangePickerCell);
}

uint64_t type metadata accessor for YearRangePickerCell()
{
  return objc_opt_self();
}

char *sub_1BC5067E8(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  char *v17;
  void *v18;
  uint64_t v19;
  char *v20;
  id v21;
  objc_super v23;

  v9 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3AE0]);
  v11 = v4;
  v12 = objc_msgSend(v10, sel_init);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v4[v9] = v12;
  v13 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AE0]), sel_init);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v11[v13] = v14;
  v15 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_stackView;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  objc_msgSend(v16, sel_setAxis_, 0);
  objc_msgSend(v16, sel_setAlignment_, 3);
  objc_msgSend(v16, sel_setDistribution_, 1);
  objc_msgSend(v16, sel_setSpacing_, 10.0);
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v11[v15] = v16;

  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for YearRangePickerView();
  v17 = (char *)objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  v18 = *(void **)&v17[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_stackView];
  v19 = *(_QWORD *)&v17[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker];
  v20 = v17;
  objc_msgSend(v18, sel_addArrangedSubview_, v19);
  objc_msgSend(v18, sel_addArrangedSubview_, *(_QWORD *)&v20[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker]);
  objc_msgSend(v20, sel_addSubview_, v18);
  v21 = v18;
  objc_msgSend(v21, sel_hk_alignConstraintsWithView_, v20);

  return v20;
}

id sub_1BC506A1C()
{
  return sub_1BC405B94(type metadata accessor for YearRangePickerView);
}

uint64_t type metadata accessor for YearRangePickerView()
{
  return objc_opt_self();
}

void sub_1BC506A90(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_dataSource);
  if (v3)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v4 = OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_pickerRange;
      v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_pickerRange);
      if (*(_QWORD *)(v5 + 16) > a2)
      {
        v6 = *(_QWORD *)(v5 + 8 * a2 + 32);
        sub_1BC3996E4();
        v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView);
        v8 = (id *)(v7 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker);
        v9 = *(void **)(v7 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker);
        swift_retain();
        v10 = v9;
        LOBYTE(v9) = sub_1BC62CEB4();

        if ((v9 & 1) != 0)
        {
          v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear);
          if (v11 >= v6)
          {
            v13 = &OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear;
            goto LABEL_17;
          }
          v12 = sub_1BC610544(*(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear), *(_QWORD *)(v3 + v4));
          v13 = &OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear;
          if ((v14 & 1) != 0)
            goto LABEL_16;
          v15 = v12;
        }
        else
        {
          v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear);
          if (v6 >= v11)
          {
            v13 = &OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear;
            goto LABEL_17;
          }
          v16 = sub_1BC610544(*(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear), *(_QWORD *)(v3 + v4));
          if ((v17 & 1) != 0)
          {
            v13 = &OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear;
            goto LABEL_16;
          }
          v15 = v16;
          v8 = (id *)(v7 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker);
          v13 = &OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear;
        }
        objc_msgSend(*v8, sel_selectRow_inComponent_animated_, v15, 0, 1);
LABEL_16:
        v6 = v11;
LABEL_17:
        *(_QWORD *)(v3 + *v13) = v6;
        if (MEMORY[0x1BCCF37A4](v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_delegate))
        {
          sub_1BC511030();
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
        return;
      }
    }
    __break(1u);
  }
}

void sub_1BC506C88()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AE0]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v0[v1] = v2;
  v3 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AE0]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v0[v3] = v4;
  v5 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_stackView;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  objc_msgSend(v6, sel_setAxis_, 0);
  objc_msgSend(v6, sel_setAlignment_, 3);
  objc_msgSend(v6, sel_setDistribution_, 1);
  objc_msgSend(v6, sel_setSpacing_, 10.0);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v0[v5] = v6;

  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC506DE4(void *a1)
{
  return sub_1BC506E6C(a1, (SEL *)&selRef_manifestations);
}

uint64_t sub_1BC506DF0(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_severity);
}

uint64_t sub_1BC506DFC(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_clinicalStatus);
}

uint64_t sub_1BC506E08(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_verificationStatus);
}

uint64_t sub_1BC506E14(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_criticality);
}

uint64_t sub_1BC506E20(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_allergyType);
}

uint64_t sub_1BC506E2C(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_category);
}

uint64_t sub_1BC506E3C(void *a1)
{
  return sub_1BC506E6C(a1, (SEL *)&selRef_categories);
}

uint64_t sub_1BC506E48(void *a1)
{
  return sub_1BC5070B8(a1, (SEL *)&selRef_interpretation);
}

uint64_t sub_1BC506E54(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_bodySite);
}

uint64_t sub_1BC506E60(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_method);
}

uint64_t sub_1BC506E6C(void *a1, SEL *a2)
{
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;

  v2 = objc_msgSend(a1, *a2);
  sub_1BC5075EC();
  v3 = sub_1BC62C878();

  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_17:
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v4 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1BCCF24CC](v6, v3);
      else
        v8 = *(id *)(v3 + 8 * v6 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, sel_localizedPreferredName);
      if (v10)
      {
        v11 = v10;
        v12 = sub_1BC62C680();
        v14 = v13;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1BC3B5060(0, v7[2] + 1, 1, v7);
        v16 = v7[2];
        v15 = v7[3];
        if (v16 >= v15 >> 1)
          v7 = sub_1BC3B5060((_QWORD *)(v15 > 1), v16 + 1, 1, v7);
        v7[2] = v16 + 1;
        v17 = &v7[2 * v16];
        v17[4] = v12;
        v17[5] = v14;
      }
      else
      {

      }
      ++v6;
    }
    while (v4 != v6);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC50701C(void *a1)
{
  return sub_1BC5070B8(a1, (SEL *)&selRef_bodySites);
}

uint64_t sub_1BC507028(void *a1)
{
  return sub_1BC5070B8(a1, (SEL *)&selRef_reasonForUse);
}

uint64_t sub_1BC507034(void *a1)
{
  return sub_1BC5070B8(a1, (SEL *)&selRef_reasonsNotTaken);
}

uint64_t sub_1BC507040(void *a1)
{
  return sub_1BC5070B8(a1, (SEL *)&selRef_reason);
}

uint64_t sub_1BC50704C(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_reasonEnded);
}

uint64_t sub_1BC507058(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_status);
}

uint64_t sub_1BC507064(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_outcome);
}

uint64_t sub_1BC507070(void *a1)
{
  return sub_1BC5070B8(a1, (SEL *)&selRef_complications);
}

uint64_t sub_1BC50707C(void *a1)
{
  return sub_1BC5070B8(a1, (SEL *)&selRef_reasonsNotPerformed);
}

uint64_t sub_1BC507088(void *a1)
{
  return sub_1BC5070B8(a1, (SEL *)&selRef_followUps);
}

uint64_t sub_1BC507094(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_route);
}

uint64_t sub_1BC5070A0(void *a1)
{
  return sub_1BC5070B8(a1, (SEL *)&selRef_reasons);
}

uint64_t sub_1BC5070AC(void *a1)
{
  return sub_1BC5070B8(a1, (SEL *)&selRef_reasonsNotGiven);
}

uint64_t sub_1BC5070B8(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = v2;
  sub_1BC5075EC();
  v4 = sub_1BC62C878();

  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_4;
LABEL_19:
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_20:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v8;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v5 = result;
  if (!result)
    goto LABEL_19;
LABEL_4:
  if (v5 >= 1)
  {
    v7 = 0;
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1BCCF24CC](v7, v4);
      else
        v9 = *(id *)(v4 + 8 * v7 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, sel_localizedPreferredName);
      if (v11)
      {
        v12 = v11;
        v13 = sub_1BC62C680();
        v15 = v14;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = sub_1BC3B5060(0, v8[2] + 1, 1, v8);
        v17 = v8[2];
        v16 = v8[3];
        if (v17 >= v16 >> 1)
          v8 = sub_1BC3B5060((_QWORD *)(v16 > 1), v17 + 1, 1, v8);
        v8[2] = v17 + 1;
        v18 = &v8[2 * v17];
        v18[4] = v13;
        v18[5] = v15;
      }
      else
      {

      }
      ++v7;
    }
    while (v5 != v7);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC507278(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(a1, sel_status);
  v2 = objc_msgSend(v1, sel_localizedPreferredName);

  if (!v2)
    return 0;
  v3 = sub_1BC62C680();
  v5 = v4;

  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1BC507310(void *a1)
{
  return sub_1BC50731C(a1, (SEL *)&selRef_relationship);
}

uint64_t sub_1BC50731C(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_localizedPreferredName);

  if (!v4)
    return 0;
  v5 = sub_1BC62C680();
  v7 = v6;

  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

uint64_t _s15HealthRecordsUI21PreferredNameProviderPAAE14preferredNames3for5usingSaySSGSaySo9HKConceptCGSgyXK_So0K5StoreCtF_0(uint64_t (*a1)(void))
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;

  v1 = a1();
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = v1;
  if (!(v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_4;
LABEL_19:
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_20:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v3 = result;
  if (!result)
    goto LABEL_19;
LABEL_4:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1BCCF24CC](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_localizedPreferredName);
      if (v9)
      {
        v10 = v9;
        v11 = sub_1BC62C680();
        v13 = v12;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1BC3B5060(0, v6[2] + 1, 1, v6);
        v15 = v6[2];
        v14 = v6[3];
        if (v15 >= v14 >> 1)
          v6 = sub_1BC3B5060((_QWORD *)(v14 > 1), v15 + 1, 1, v6);
        v6[2] = v15 + 1;
        v16 = &v6[2 * v15];
        v16[4] = v11;
        v16[5] = v13;
      }
      else
      {

      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t _s15HealthRecordsUI21PreferredNameProviderPAAE09preferredE03for5usingSSSo9HKConceptCSgyXK_So0J5StoreCtF_0(uint64_t (*a1)(void))
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = (void *)a1();
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_localizedPreferredName);

  if (!v3)
    return 0;
  v4 = sub_1BC62C680();
  v6 = v5;

  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t dispatch thunk of PreferredNameProvider.preferredName(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of PreferredNameProvider.preferredNames(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

unint64_t sub_1BC5075EC()
{
  unint64_t result;

  result = qword_1EF4294F8;
  if (!qword_1EF4294F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF4294F8);
  }
  return result;
}

uint64_t MedicalRecordTimelineAccountDetailsItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC507654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  _QWORD v8[2];

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*(id *)(v0 + 16), sel_identifier, v3);
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v8[0] = 0x44746E756F636341;
  v8[1] = 0xEF2E736C69617465;
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t static MedicalRecordTimelineAccountDetailsItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  v6 = v4;
  v7 = v5;
  LOBYTE(v5) = sub_1BC62CEB4();

  return v5 & 1;
}

uint64_t MedicalRecordTimelineAccountDetailsItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineAccountDetailsItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC507810()
{
  return sub_1BC507654();
}

uint64_t sub_1BC507918(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC507988();
  return sub_1BC37AE60((uint64_t)v5);
}

uint64_t sub_1BC507988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void (*v9)(uint64_t *, _QWORD);
  id v10;
  void (*v11)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  _QWORD v13[2];
  uint64_t v14[3];
  uint64_t v15;
  uint64_t v16;

  v1 = sub_1BC62BD98();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v5, (uint64_t)v14);
  if (!v15)
    return sub_1BC37AE60((uint64_t)v14);
  sub_1BC37AE0C();
  type metadata accessor for MedicalRecordTimelineAccountDetailsItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v7 = v13[1];
    MEMORY[0x1BCCF201C]();
    if (objc_msgSend(*(id *)(v7 + 16), sel_isSourceType))
    {
      if (qword_1ED6A4888 != -1)
        swift_once();
    }
    else if (qword_1ED6A4888 != -1)
    {
      swift_once();
    }
    v8 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC62BD74();
    result = (uint64_t)objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B10], *MEMORY[0x1E0DC1440]);
    if (result)
    {
      v9 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
      sub_1BC62BCC0();
      v9(v14, 0);
      v10 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
      v11 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
      sub_1BC62BCCC();
      v11(v14, 0);
      v15 = v1;
      v16 = MEMORY[0x1E0DC2398];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
      (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(boxed_opaque_existential_1, v4, v1);
      MEMORY[0x1BCCF1FC8](v14);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1BC507CA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC507CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC507988();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC507D60(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC507DA8;
}

uint64_t sub_1BC507DA8(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC507988();
  return result;
}

void sub_1BC507DD8(uint64_t a1, void *a2)
{
  sub_1BC507E44(a2);
}

id MedicalRecordTimelineAccountDetailsItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC507E20(uint64_t a1, void *a2)
{
  sub_1BC507E44(a2);
}

void sub_1BC507E44(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  void *v7;
  id v8;
  void *v9;
  unsigned int v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  char *v18;
  uint64_t v19;
  _QWORD v20[5];

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v4, (uint64_t)v20);
  if (v20[3])
  {
    sub_1BC37AE0C();
    type metadata accessor for MedicalRecordTimelineAccountDetailsItem();
    v5 = swift_dynamicCast();
    if ((v5 & 1) != 0)
    {
      if (qword_1ED6A31B0 != -1)
        v5 = swift_once();
      if (qword_1ED6A4878 != -1)
        v5 = swift_once();
      MEMORY[0x1E0C80A78](v5);
      sub_1BC62AA6C();
      v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
      sub_1BC379B20((unint64_t *)&qword_1ED6A4B90, 255, v6, MEMORY[0x1E0D2D480]);
      swift_retain();
      sub_1BC62B888();
      swift_release();
      v7 = (void *)v20[0];
      v8 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, sel_isiPad);

        v11 = *(void **)(v19 + 16);
        LOBYTE(v20[0]) = 0;
        v12 = objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
        if (v10)
        {
          v13 = v11;
          v14 = v7;
          v15 = sub_1BC537354(v13, v14, (char *)v20, 0, 0);
          sub_1BC538B40();

          v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v15);
          objc_msgSend(a1, sel_presentViewController_animated_completion_, v16, 1, 0);
          swift_release();

        }
        else
        {
          v17 = v7;
          v18 = sub_1BC537354(v11, v17, (char *)v20, 0, 0);
          objc_msgSend(a1, sel_showViewController_sender_, v18, v2);
          swift_release();

        }
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v20);
  }
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC50817C(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF434AB8, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDetailsItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineAccountDetailsItem);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountDetailsItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC5081C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineAccountDetailsItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t method lookup function for MedicalRecordTimelineAccountDetailsItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItemCell.didSelectCell(_:in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItemCell.deselectionBehavior.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

id SignedClinicalDataRecordFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store);
}

uint64_t SignedClinicalDataRecordFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context);
}

id SignedClinicalDataRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id SignedClinicalDataRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for SignedClinicalDataRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for SignedClinicalDataRecordFormatter()
{
  return objc_opt_self();
}

uint64_t sub_1BC5083D4(void *a1)
{
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context) < 2uLL)
    return sub_1BC50A9A0(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC508424(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  _QWORD v34[8];
  uint64_t v35;

  v34[1] = swift_getObjectType();
  v2 = sub_1BC62BB34();
  v34[4] = *(_QWORD *)(v2 - 8);
  v34[5] = v2;
  MEMORY[0x1E0C80A78](v2);
  v34[6] = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC62BA08();
  v34[2] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B258, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v34 - v6;
  v8 = sub_1BC62A604();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62B9FC();
  swift_allocObject();
  v34[7] = sub_1BC62B9F0();
  v35 = MEMORY[0x1E0DEE9D8];
  v12 = objc_msgSend(a1, sel_mainRecord);
  if (!v12)
    goto LABEL_4;
  v13 = v12;
  sub_1BC62B9A8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {

    sub_1BC50AFC0((uint64_t)v7);
LABEL_4:
    v14 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v14, sel_setDisplayItemType_, 12);
    v15 = (void *)sub_1BC62C650();
    v16 = objc_msgSend((id)objc_opt_self(), sel__systemImageNamed_, v15);

    if (qword_1EF428588 != -1)
      swift_once();
    v17 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    v18 = sub_1BC62A4A8();
    v20 = v19;
    swift_bridgeObjectRelease();

    v21 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v18, v20, 0, v16, 0);
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setAttributedTitle_, v21);

    sub_1BC62B9B4();
    v32 = v14;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    swift_release();

    return v35;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  v22 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
  objc_msgSend(v22, sel_setDisplayItemType_, 12);
  v23 = (void *)sub_1BC62C650();
  v24 = objc_msgSend((id)objc_opt_self(), sel__systemImageNamed_, v23);

  if (qword_1EF428588 != -1)
    swift_once();
  v25 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v26 = sub_1BC62A4A8();
  v28 = v27;
  swift_bridgeObjectRelease();

  v29 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v26, v28, 0, v24, 0);
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setAttributedTitle_, v29);

  sub_1BC62A574();
  v30 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setContextString_, v30);

  v31 = v22;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();

  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v35;
}

id SignedClinicalDataRecordFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SignedClinicalDataRecordFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SignedClinicalDataRecordFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC508E44()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store);
}

uint64_t sub_1BC508E58()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context);
}

id sub_1BC508E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for SignedClinicalDataRecordFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1BC508EDC(void *a1)
{
  _QWORD *v1;
  uint64_t result;

  if (*(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context) < 2uLL)
    return sub_1BC50A9A0(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

id sub_1BC508F30(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  void *v10;

  v1 = objc_msgSend(a1, sel_subject);
  v2 = objc_msgSend(v1, sel_fullName);

  v3 = sub_1BC62C680();
  v5 = v4;

  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v7 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v7, sel_setDisplayItemType_, 15);
    if (qword_1EF428588 != -1)
      swift_once();
    v8 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setTitle_, v9, 0xE000000000000000);

    v10 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setSubtitle_, v10);

    objc_msgSend(v7, sel_setSeparatorStyle_, 0);
    objc_msgSend(v7, sel_setSeparatorHidden_, 0);
    objc_msgSend(v7, sel_setExtraTopPadding_, 0);

  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v7;
}

id sub_1BC509140(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  if (qword_1EF428588 != -1)
    swift_once();
  v2 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC39CBE4();
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_subject, 0xE000000000000000);
  v7 = objc_msgSend(v6, sel_birthDate);

  v8 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v9 = sub_1BC62C680();
  v11 = v10;

  v12 = sub_1BC4AB2F4(v3, v5, v7, v9, v11);
  swift_bridgeObjectRelease();
  return v12;
}

id sub_1BC5092B8(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;

  v1 = objc_msgSend(a1, sel_subject);
  v2 = objc_msgSend(v1, sel_gender);

  if (v2)
  {
    v3 = sub_1BC62C680();
    v5 = v4;

    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v3 & 0xFFFFFFFFFFFFLL;
    if (v6)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EF428588 != -1)
        swift_once();
      v7 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1BC5094CC(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v1 = objc_msgSend(a1, sel_subject);
  v2 = objc_msgSend(v1, sel_emailAddresses);

  if (v2)
  {
    v3 = sub_1BC62C878();

    v12 = v3;
    sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    sub_1BC3B4EE4();
    v4 = sub_1BC62C5D8();
    v6 = v5;
    swift_bridgeObjectRelease();
    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EF428588 != -1)
        swift_once();
      v8 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000, v12);

      v10 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1BC509730(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v1 = objc_msgSend(a1, sel_subject);
  v2 = objc_msgSend(v1, sel_phoneNumbers);

  if (v2)
  {
    v3 = sub_1BC62C878();

    v12 = v3;
    sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    sub_1BC3B4EE4();
    v4 = sub_1BC62C5D8();
    v6 = v5;
    swift_bridgeObjectRelease();
    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EF428588 != -1)
        swift_once();
      v8 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000, v12);

      v10 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1BC509994(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v1 = objc_msgSend(a1, sel_subject);
  v2 = objc_msgSend(v1, sel_addresses);

  if (v2)
  {
    v3 = sub_1BC62C878();

    v12 = v3;
    sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    sub_1BC3B4EE4();
    v4 = sub_1BC62C5D8();
    v6 = v5;
    swift_bridgeObjectRelease();
    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EF428588 != -1)
        swift_once();
      v8 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000, v12);

      v10 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1BC509BF8(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;

  v1 = objc_msgSend(a1, sel_subject);
  v2 = objc_msgSend(v1, sel_maritalStatus);

  if (v2)
  {
    v3 = sub_1BC62C680();
    v5 = v4;

    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v3 & 0xFFFFFFFFFFFFLL;
    if (v6)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EF428588 != -1)
        swift_once();
      v7 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1BC509E0C(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;

  v1 = objc_msgSend(a1, sel_subject);
  v2 = objc_msgSend(v1, sel_race);

  if (v2)
  {
    v3 = sub_1BC62C680();
    v5 = v4;

    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v3 & 0xFFFFFFFFFFFFLL;
    if (v6)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EF428588 != -1)
        swift_once();
      v7 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1BC50A020(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;

  v1 = objc_msgSend(a1, sel_subject);
  v2 = objc_msgSend(v1, sel_ethnicity);

  if (v2)
  {
    v3 = sub_1BC62C680();
    v5 = v4;

    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v3 & 0xFFFFFFFFFFFFLL;
    if (v6)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EF428588 != -1)
        swift_once();
      v7 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1BC50A234(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;

  v1 = objc_msgSend(a1, sel_subject);
  v2 = objc_msgSend(v1, sel_birthSex);

  if (v2)
  {
    v3 = sub_1BC62C680();
    v5 = v4;

    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v3 & 0xFFFFFFFFFFFFLL;
    if (v6)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EF428588 != -1)
        swift_once();
      v7 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1BC50A448(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  int64_t v40;
  uint64_t v41;

  v1 = objc_msgSend(a1, sel_subject);
  v2 = objc_msgSend(v1, sel_identifiers);

  if (!v2)
    return 0;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  v3 = sub_1BC62C878();

  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    v22 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v22)
      goto LABEL_24;
    goto LABEL_18;
  }
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1BC3BDA48(0, v4, 0);
  v6 = 0;
  v40 = v4;
  do
  {
    v7 = *(_QWORD **)(v3 + 8 * v6 + 32);
    v8 = v7[2];
    if (v8)
    {
      v10 = v7[4];
      v9 = v7[5];
      v11 = (uint64_t)&v7[2 * v8 + 4];
      v13 = *(_QWORD *)(v11 - 16);
      v12 = *(_QWORD *)(v11 - 8);
      v14 = HIBYTE(v9) & 0xF;
      if ((v9 & 0x2000000000000000) == 0)
        v14 = v10 & 0xFFFFFFFFFFFFLL;
      if (v14)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v15 = v3;
        v16 = qword_1EF428588;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16 != -1)
          swift_once();
        v17 = (id)qword_1EF42F740;
        swift_bridgeObjectRetain();
        v10 = sub_1BC62A4A8();
        v9 = v18;
        swift_bridgeObjectRelease();

        v3 = v15;
        v4 = v40;
      }
      sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A53C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1BC6395A0;
      *(_QWORD *)(v19 + 32) = v10;
      *(_QWORD *)(v19 + 40) = v9;
      *(_QWORD *)(v19 + 48) = v13;
      *(_QWORD *)(v19 + 56) = v12;
      swift_bridgeObjectRelease();
      v7 = (_QWORD *)v19;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v21 = *(_QWORD *)(v41 + 16);
    v20 = *(_QWORD *)(v41 + 24);
    if (v21 >= v20 >> 1)
      sub_1BC3BDA48(v20 > 1, v21 + 1, 1);
    ++v6;
    *(_QWORD *)(v41 + 16) = v21 + 1;
    *(_QWORD *)(v41 + 8 * v21 + 32) = v7;
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  v5 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(v41 + 16);
  if (v22)
  {
LABEL_18:
    sub_1BC3BD748(0, v22, 0);
    v23 = v5;
    sub_1BC3B4EE4();
    v24 = 0;
    do
    {
      swift_bridgeObjectRetain();
      v25 = sub_1BC62C5D8();
      v27 = v26;
      swift_bridgeObjectRelease();
      v29 = *(_QWORD *)(v23 + 16);
      v28 = *(_QWORD *)(v23 + 24);
      if (v29 >= v28 >> 1)
        sub_1BC3BD748(v28 > 1, v29 + 1, 1);
      ++v24;
      *(_QWORD *)(v23 + 16) = v29 + 1;
      v30 = v23 + 16 * v29;
      *(_QWORD *)(v30 + 32) = v25;
      *(_QWORD *)(v30 + 40) = v27;
    }
    while (v22 != v24);
  }
LABEL_24:
  swift_bridgeObjectRelease();
  sub_1BC3B4EE4();
  v31 = sub_1BC62C5D8();
  v33 = v32;
  swift_bridgeObjectRelease();
  v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0)
    v34 = v31 & 0xFFFFFFFFFFFFLL;
  if (!v34)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v35 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
  objc_msgSend(v35, sel_setDisplayItemType_, 15);
  if (qword_1EF428588 != -1)
    swift_once();
  v36 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v37 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setTitle_, v37, 0xE000000000000000);

  v38 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setSubtitle_, v38);

  objc_msgSend(v35, sel_setSeparatorStyle_, 0);
  objc_msgSend(v35, sel_setSeparatorHidden_, 0);
  objc_msgSend(v35, sel_setExtraTopPadding_, 0);

  return v35;
}

uint64_t sub_1BC50A9A0(void *a1)
{
  uint64_t inited;
  uint64_t i;
  void *v4;
  id v5;
  uint64_t v7;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B398, (uint64_t (*)(uint64_t))sub_1BC39CBC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC646210;
  *(_QWORD *)(inited + 32) = sub_1BC508F30(a1);
  *(_QWORD *)(inited + 40) = sub_1BC509140(a1);
  *(_QWORD *)(inited + 48) = sub_1BC5092B8(a1);
  *(_QWORD *)(inited + 56) = sub_1BC5094CC(a1);
  *(_QWORD *)(inited + 64) = sub_1BC509730(a1);
  *(_QWORD *)(inited + 72) = sub_1BC509994(a1);
  *(_QWORD *)(inited + 80) = sub_1BC509BF8(a1);
  *(_QWORD *)(inited + 88) = sub_1BC509E0C(a1);
  *(_QWORD *)(inited + 96) = sub_1BC50A020(a1);
  *(_QWORD *)(inited + 104) = sub_1BC50A234(a1);
  *(_QWORD *)(inited + 112) = sub_1BC50A448(a1);
  sub_1BC62C890();
  v7 = MEMORY[0x1E0DEE9D8];
  for (i = 32; i != 120; i += 8)
  {
    v4 = *(void **)(inited + i);
    if (v4)
    {
      v5 = v4;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }
  }
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1BC50AB30(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC50AB54();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC50AB54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF434C10;
  if (!qword_1EF434C10)
  {
    v1 = type metadata accessor for SignedClinicalDataRecordFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF434C10);
  }
  return result;
}

uint64_t method lookup function for SignedClinicalDataRecordFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SignedClinicalDataRecordFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SignedClinicalDataRecordFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t sub_1BC50ABC8(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v21;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_qrImage);
  if (v2)
  {
    v3 = objc_allocWithZone((Class)WDMedicalRecordDisplayItem);
    v4 = v2;
    v5 = objc_msgSend(v3, sel_init);
    objc_msgSend(v5, sel_setDisplayItemType_, 13);
    objc_msgSend(v5, sel_setRowHeight_, 198.0);
    objc_msgSend(v5, sel_setImage_, v4);
    objc_msgSend(v5, sel_setShowSelection_, 1);

  }
  else
  {
    v5 = 0;
  }
  v6 = *(void **)(a1 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group);
  if ((unint64_t)HKSignedClinicalDataGroup.multiRecordStatusText()().value._object)
  {
    v7 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v7, sel_setDisplayItemType_, 11);
    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setTitle_, v8);

    objc_msgSend(v7, sel_setShowDisclosureIndicator_, 1);
  }
  else
  {
    v7 = 0;
  }
  v9 = objc_msgSend(v6, sel_mainRecord);
  if (v9)
  {
    v10 = v9;
    v11 = objc_allocWithZone((Class)WDMedicalRecordDisplayItem);
    v12 = v10;
    v13 = objc_msgSend(v11, sel_init);
    objc_msgSend(v13, sel_setDisplayItemType_, 16);
    if (qword_1EF428588 != -1)
      swift_once();
    v14 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v15 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setTitle_, v15, 0xE000000000000000);

    v16 = sub_1BC5D9CCC();
    objc_msgSend(v13, sel_setAttributedSubtitle_, v16);

    objc_msgSend(v13, sel_setShowDisclosureIndicator_, 1);
  }
  else
  {
    v13 = 0;
  }
  v21 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v17 = v5;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v7)
  {
    v18 = v7;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v13)
  {
    v19 = v13;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  return v21;
}

uint64_t sub_1BC50AFC0(uint64_t a1)
{
  uint64_t v2;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B258, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ClinicalAccountsDisambiguator.__allocating_init(with:)(unint64_t a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_1BC50D430(a1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BC50B05C()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(_QWORD *)(v0 + 32);
  }
  else
  {
    v1 = sub_1BC50B0B8(v0);
    *(_QWORD *)(v0 + 32) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC50B0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  void (*v31)(_QWORD *);
  _QWORD *v32;
  uint64_t result;
  uint64_t v34;
  _QWORD v35[4];
  _QWORD *v36;

  v1 = *(_QWORD *)(a1 + 24);
  v36 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    v3 = (uint64_t *)(v1 + 56);
    while (1)
    {
      v4 = (void *)*(v3 - 3);
      v5 = *(v3 - 2);
      v7 = *(v3 - 1);
      v6 = *v3;
      swift_bridgeObjectRetain_n();
      v8 = v4;
      v9 = v36;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v35[0] = v9;
      v12 = sub_1BC558D94(v5, v7);
      v13 = v9[2];
      v14 = (v11 & 1) == 0;
      v15 = v13 + v14;
      if (__OFADD__(v13, v14))
        break;
      v16 = v11;
      if (v9[3] >= v15)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BC5A72AC();
          v9 = (_QWORD *)v35[0];
        }
      }
      else
      {
        sub_1BC3C6DEC(v15, isUniquelyReferenced_nonNull_native);
        v9 = (_QWORD *)v35[0];
        v17 = sub_1BC558D94(v5, v7);
        if ((v16 & 1) != (v18 & 1))
          goto LABEL_24;
        v12 = v17;
      }
      v36 = v9;
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        v9[(v12 >> 6) + 8] |= 1 << v12;
        v19 = (uint64_t *)(v9[6] + 16 * v12);
        *v19 = v5;
        v19[1] = v7;
        *(_QWORD *)(v9[7] + 8 * v12) = MEMORY[0x1E0DEE9D8];
        v20 = v9[2];
        v21 = __OFADD__(v20, 1);
        v22 = v20 + 1;
        if (v21)
          goto LABEL_23;
        v9[2] = v22;
        swift_bridgeObjectRetain();
      }
      v34 = v2;
      v23 = v9[7];
      v24 = *(_QWORD **)(v23 + 8 * v12);
      v25 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v23 + 8 * v12) = v24;
      v26 = v6;
      if ((v25 & 1) == 0)
      {
        v24 = sub_1BC3B6B34(0, v24[2] + 1, 1, v24);
        *(_QWORD *)(v23 + 8 * v12) = v24;
      }
      v28 = v24[2];
      v27 = v24[3];
      if (v28 >= v27 >> 1)
      {
        v24 = sub_1BC3B6B34((_QWORD *)(v27 > 1), v28 + 1, 1, v24);
        *(_QWORD *)(v23 + 8 * v12) = v24;
      }
      v24[2] = v28 + 1;
      v29 = &v24[4 * v28];
      v29[4] = v8;
      v29[5] = v5;
      v29[6] = v7;
      v29[7] = v26;
      swift_bridgeObjectRelease();
      v31 = sub_1BC50B384(v35, v5, v7);
      if (*v30)
        sub_1BC50B428(v30, (uint64_t (*)(uint64_t))sub_1BC4DE3B4, sub_1BC50C048);
      ((void (*)(_QWORD *, _QWORD))v31)(v35, 0);
      v3 += 4;

      swift_bridgeObjectRelease_n();
      v2 = v34 - 1;
      if (v34 == 1)
      {
        swift_bridgeObjectRelease();
        v32 = v36;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    result = sub_1BC62D5EC();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    v32 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_21:
    swift_bridgeObjectRelease();
    return (uint64_t)v32;
  }
  return result;
}

void (*sub_1BC50B384(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1BC50CD14(v6, a2, a3);
  return sub_1BC50B3F0;
}

void sub_1BC50B3F0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_1BC50B428(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t ClinicalAccountsDisambiguator.init(with:)(unint64_t a1)
{
  uint64_t v1;

  v1 = sub_1BC50D430(a1);
  swift_bridgeObjectRelease();
  return v1;
}

id sub_1BC50B4D0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = a1;
  v10 = sub_1BC50D250(v9);
  v12 = v11;
  v14 = v13;
  v30 = v15;
  swift_bridgeObjectRetain();
  v16 = sub_1BC50B05C();
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_1BC558D94(v12, v14), (v18 & 1) != 0))
  {
    v19 = *(_QWORD **)(*(_QWORD *)(v16 + 56) + 8 * v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19[2])
    {
      v20 = (void *)v19[4];
      v21 = v19[6];
      v28 = v19[7];
      v22 = v20;
      v29 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = objc_msgSend(v22, sel_identifier);
      sub_1BC62A79C();

      v24 = objc_msgSend(v9, sel_identifier);
      sub_1BC62A79C();

      sub_1BC347F0C((unint64_t *)&qword_1EF429288, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      LOBYTE(v24) = sub_1BC62C644();
      v25 = *(void (**)(char *, uint64_t))(v3 + 8);
      v25(v5, v2);
      v25(v8, v2);
      swift_bridgeObjectRelease();

      if ((v24 & 1) != 0)
      {
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_bridgeObjectRelease();
        if (v30 < v28)
          return v22;

      }
    }
    else
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

  }
  return 0;
}

void sub_1BC50B718()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v16 = MEMORY[0x1E0DEE9D8];
  v0 = sub_1BC50B05C();
  v1 = v0;
  v2 = 0;
  v3 = v0 + 64;
  v4 = 1 << *(_BYTE *)(v0 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v0 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v2 << 6);
LABEL_22:
    v13 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v9);
    if (*(_QWORD *)(v13 + 16))
    {
      v14 = *(id *)(v13 + 32);
      v15 = swift_bridgeObjectRetain();
      MEMORY[0x1BCCF1B30](v15);
      if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
      swift_bridgeObjectRelease();

    }
  }
  v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v10 >= v7)
    goto LABEL_26;
  v11 = *(_QWORD *)(v3 + 8 * v10);
  ++v2;
  if (v11)
    goto LABEL_21;
  v2 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_26;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
    goto LABEL_21;
  v2 = v10 + 2;
  if (v10 + 2 >= v7)
    goto LABEL_26;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
    goto LABEL_21;
  v2 = v10 + 3;
  if (v10 + 3 >= v7)
    goto LABEL_26;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
  {
LABEL_21:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
    goto LABEL_22;
  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_26:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_26;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
}

uint64_t ClinicalAccountsDisambiguator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ClinicalAccountsDisambiguator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC50B960(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1BC62D520();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1BC50C728(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1BC50C7F4((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1BC504414((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BC62C8CC();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1BC62D574();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1BC62D574()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BC503AB4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1BC503AB4((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1BC50C7F4((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1BC62D574() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC50C048(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t i;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *__dst;

  v3 = a1[1];
  result = sub_1BC62D520();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v91 = 0;
      v92 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v94 = *(_QWORD *)(v92 + 32 * i + 24);
        v95 = v91;
        do
        {
          v96 = v92 + v95;
          if (*(_QWORD *)(v92 + v95 + 24) >= v94)
            break;
          if (!v92)
            goto LABEL_140;
          v97 = *(_QWORD *)(v96 + 32);
          v98 = (_QWORD *)(v92 + v95);
          v99 = *(_QWORD *)(v92 + v95 + 40);
          v100 = *(_QWORD *)(v92 + v95 + 48);
          v101 = *(_OWORD *)(v96 + 16);
          *(_OWORD *)(v96 + 32) = *(_OWORD *)v96;
          *(_OWORD *)(v96 + 48) = v101;
          *v98 = v97;
          v98[1] = v99;
          v98[2] = v100;
          *(_QWORD *)(v96 + 24) = v94;
          v95 -= 32;
        }
        while (v95 != -32);
        v91 += 32;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v110 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v102 = v12;
      v112 = v9;
      if (v13 >= 2)
      {
        v103 = *v110;
        do
        {
          v104 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v103)
            goto LABEL_144;
          v105 = v102;
          v106 = *(_QWORD *)&v102[16 * v104 + 32];
          v107 = *(_QWORD *)&v102[16 * v13 + 24];
          sub_1BC50CA8C((char *)(v103 + 32 * v106), (char *)(v103 + 32 * *(_QWORD *)&v102[16 * v13 + 16]), v103 + 32 * v107, __dst);
          if (v1)
            break;
          if (v107 < v106)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v105 = sub_1BC504414((uint64_t)v105);
          if (v104 >= *((_QWORD *)v105 + 2))
            goto LABEL_133;
          v108 = &v105[16 * v104 + 32];
          *(_QWORD *)v108 = v106;
          *((_QWORD *)v108 + 1) = v107;
          v109 = *((_QWORD *)v105 + 2);
          if (v13 > v109)
            goto LABEL_134;
          memmove(&v105[16 * v13 + 16], &v105[16 * v13 + 32], 16 * (v109 - v13));
          v102 = v105;
          *((_QWORD *)v105 + 2) = v109 - 1;
          v13 = v109 - 1;
        }
        while (v109 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v112 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v112 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1BC62C8CC();
    *(_QWORD *)(v8 + 16) = v7;
    v112 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v111 = *a1 + 88;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v113 = v6;
  v114 = v3;
  v115 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 32 * v10 + 24);
      v16 = *(_QWORD *)(v11 + 32 * v14 + 24);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (uint64_t *)(v111 + 32 * v14);
        v18 = v15;
        while (1)
        {
          v20 = *v17;
          v17 += 4;
          v19 = v20;
          if (v16 < v15 == v18 >= v20)
            break;
          ++v10;
          v18 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v21 = 32 * v10;
          v22 = 32 * v14;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_143;
              v25 = (_OWORD *)(v11 + v22);
              v26 = v11 + v21;
              v27 = *(_OWORD *)(v11 + v22);
              v28 = *(_QWORD *)(v11 + v22 + 16);
              v29 = *(_QWORD *)(v11 + v22 + 24);
              v30 = *(_OWORD *)(v11 + v21 - 16);
              *v25 = *(_OWORD *)(v11 + v21 - 32);
              v25[1] = v30;
              *(_OWORD *)(v26 - 32) = v27;
              *(_QWORD *)(v26 - 16) = v28;
              *(_QWORD *)(v26 - 8) = v29;
            }
            ++v24;
            v21 -= 32;
            v22 += 32;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v31 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v31 >= v3)
      v31 = v3;
    if (v31 < v14)
      break;
    if (v10 != v31)
    {
      v32 = (_QWORD *)(v11 + 32 * v10);
      do
      {
        v33 = *(_QWORD *)(v11 + 32 * v10 + 24);
        v34 = v32;
        v35 = v14;
        do
        {
          if (*(v34 - 1) >= v33)
            break;
          if (!v11)
            goto LABEL_141;
          v36 = *v34;
          v37 = v34[1];
          v38 = v34[2];
          v39 = *((_OWORD *)v34 - 1);
          *(_OWORD *)v34 = *((_OWORD *)v34 - 2);
          *((_OWORD *)v34 + 1) = v39;
          *(v34 - 3) = v37;
          *(v34 - 2) = v38;
          *(v34 - 1) = v33;
          *(v34 - 4) = v36;
          v34 -= 4;
          ++v35;
        }
        while (v10 != v35);
        ++v10;
        v32 += 4;
      }
      while (v10 != v31);
      v10 = v31;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1BC503AB4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v41 = *((_QWORD *)v12 + 2);
    v40 = *((_QWORD *)v12 + 3);
    v13 = v41 + 1;
    v11 = v115;
    if (v41 >= v40 >> 1)
    {
      v90 = sub_1BC503AB4((char *)(v40 > 1), v41 + 1, 1, v12);
      v11 = v115;
      v12 = v90;
    }
    *((_QWORD *)v12 + 2) = v13;
    v42 = v12 + 32;
    v43 = &v12[16 * v41 + 32];
    *(_QWORD *)v43 = v14;
    *((_QWORD *)v43 + 1) = v10;
    if (v41)
    {
      while (1)
      {
        v44 = v13 - 1;
        if (v13 >= 4)
        {
          v49 = &v42[16 * v13];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_119;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_120;
          v56 = v13 - 2;
          v57 = &v42[16 * v13 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_122;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_125;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_129;
            v72 = v47 < v82;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v73 = *((_QWORD *)v12 + 4);
            v74 = *((_QWORD *)v12 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_77;
          }
          v46 = *((_QWORD *)v12 + 4);
          v45 = *((_QWORD *)v12 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_121;
        v56 = v13 - 2;
        v62 = &v42[16 * v13 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_124;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_127;
        if (__OFADD__(v66, v71))
          goto LABEL_128;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_83:
          if (v72)
            v44 = v56;
          goto LABEL_85;
        }
LABEL_77:
        if ((v67 & 1) != 0)
          goto LABEL_123;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_126;
        if (v78 < v66)
          goto LABEL_15;
LABEL_85:
        v83 = v44 - 1;
        if (v44 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v84 = v12;
        v85 = &v42[16 * v83];
        v86 = *(_QWORD *)v85;
        v87 = &v42[16 * v44];
        v88 = *((_QWORD *)v87 + 1);
        sub_1BC50CA8C((char *)(v11 + 32 * *(_QWORD *)v85), (char *)(v11 + 32 * *(_QWORD *)v87), v11 + 32 * v88, __dst);
        if (v1)
          goto LABEL_93;
        if (v88 < v86)
          goto LABEL_116;
        if (v44 > *((_QWORD *)v84 + 2))
          goto LABEL_117;
        *(_QWORD *)v85 = v86;
        *(_QWORD *)&v42[16 * v83 + 8] = v88;
        v89 = *((_QWORD *)v84 + 2);
        if (v44 >= v89)
          goto LABEL_118;
        v12 = v84;
        v13 = v89 - 1;
        memmove(&v42[16 * v44], v87 + 16, 16 * (v89 - 1 - v44));
        *((_QWORD *)v84 + 2) = v89 - 1;
        v11 = v115;
        if (v89 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v113;
    v3 = v114;
    if (v10 >= v114)
    {
      v9 = v112;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC50C728(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1BC62D574(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC50C7F4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1BC62D574() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1BC62D574() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1BC503D2C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC50CA8C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  uint64_t result;
  char *v26;
  const void *v27;
  char *v28;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v28 = __src;
  v27 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v19 = &v4[32 * v13];
      v26 = v19;
      v28 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        v20 = (char *)(a3 - 32);
        do
        {
          v21 = v20 + 32;
          if (*((_QWORD *)v6 - 1) >= *((_QWORD *)v19 - 1))
          {
            v26 = v19 - 32;
            if (v21 < v19 || v20 >= v19 || v21 != v19)
            {
              v24 = *((_OWORD *)v19 - 1);
              *(_OWORD *)v20 = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 1) = v24;
            }
            v22 = v6;
            v19 -= 32;
            if (v6 <= v7)
              break;
          }
          else
          {
            v22 = v6 - 32;
            if (v21 != v6 || v20 >= v6)
            {
              v23 = *((_OWORD *)v6 - 1);
              *(_OWORD *)v20 = *(_OWORD *)v22;
              *((_OWORD *)v20 + 1) = v23;
            }
            v28 = v6 - 32;
            if (v22 <= v7)
              break;
          }
          v20 -= 32;
          v6 = v22;
        }
        while (v19 > v4);
      }
LABEL_44:
      sub_1BC504254((void **)&v28, &v27, &v26);
      return 1;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst)
      memmove(__dst, __src, 32 * v10);
    v14 = &v4[32 * v10];
    v26 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      v15 = v4;
      while (1)
      {
        if (*((_QWORD *)v15 + 3) >= *((_QWORD *)v6 + 3))
        {
          v4 = v15 + 32;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 32;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 32;
          }
        }
        else
        {
          v16 = v6 + 32;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        v18 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v7 = *(_OWORD *)v17;
        *((_OWORD *)v7 + 1) = v18;
LABEL_22:
        v7 += 32;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v27 = v4;
        v28 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

void (*sub_1BC50CD14(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1BC50CF5C(v6);
  v6[10] = sub_1BC50CDF4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1BC50CDA4;
}

void sub_1BC50CDA4(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1BC50CDF4(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_1BC558D94(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_1BC50CF20;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1BC5A72AC();
      goto LABEL_7;
    }
    sub_1BC3C6DEC(v16, a4 & 1);
    v20 = sub_1BC558D94(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_1BC62D5EC();
  __break(1u);
  return result;
}

void sub_1BC50CF20(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_1BC50CF88(*a1, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_1BC50CF5C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1BC50CF7C;
}

uint64_t sub_1BC50CF7C(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_1BC50CF88(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_1BC5E0BFC(a4, a5, a6, v8, (_QWORD *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1BC5A4454(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC50D024(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v1 = objc_msgSend(a1, sel_gateway);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = v1;
  v21 = MEMORY[0x1E0DEE9E8];
  v3 = objc_msgSend(v1, sel_externalID);
  v4 = sub_1BC62C680();
  v6 = v5;

  sub_1BC490068((uint64_t *)&v20, v4, v6);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v2, sel_gatewayVersions);
  if (!v7)
    goto LABEL_14;
  v8 = v7;
  sub_1BC50D8C4();
  v9 = sub_1BC62C878();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_5;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_5:
      if (v10 < 1)
      {
        __break(1u);
        result = swift_release();
        __break(1u);
        return result;
      }
      v11 = 0;
      do
      {
        if ((v9 & 0xC000000000000001) != 0)
          v12 = (id)MEMORY[0x1BCCF24CC](v11, v9);
        else
          v12 = *(id *)(v9 + 8 * v11 + 32);
        v13 = v12;
        ++v11;
        v14 = objc_msgSend(v12, sel_gatewayID);
        v15 = sub_1BC62C680();
        v17 = v16;

        sub_1BC490068((uint64_t *)&v20, v15, v17);
        swift_bridgeObjectRelease();
      }
      while (v10 != v11);
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  v19 = sub_1BC3D73C4(v21);
  swift_bridgeObjectRelease();
  v20 = v19;
  swift_retain();
  sub_1BC50B428((uint64_t *)&v20, sub_1BC504A1C, sub_1BC50B960);
  swift_release();

  return (uint64_t)v20;
}

id sub_1BC50D250(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  id v15;
  void *v16;
  _QWORD v18[2];

  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1;
  v7 = (_QWORD *)sub_1BC50D024(v6);
  if (!v7[2])
  {
    v8 = objc_msgSend(v6, sel_identifier);
    sub_1BC62A79C();

    v9 = sub_1BC62A778();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_1BC3B5060(0, v7[2] + 1, 1, v7);
    v13 = v7[2];
    v12 = v7[3];
    if (v13 >= v12 >> 1)
      v7 = sub_1BC3B5060((_QWORD *)(v12 > 1), v13 + 1, 1, v7);
    v7[2] = v13 + 1;
    v14 = &v7[2 * v13];
    v14[4] = v9;
    v14[5] = v11;
  }
  v18[1] = v7;
  sub_1BC50D870();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A52C8, (uint64_t (*)(uint64_t))sub_1BC50D870, MEMORY[0x1E0DEAF20]);
  sub_1BC62C5D8();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v6, sel_gateway);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, sel_minCompatibleAPIVersion);

  }
  return v6;
}

uint64_t sub_1BC50D430(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD *v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v2 = v1;
  v4 = sub_1BC62A7B4();
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x1E0C80A78](v4);
  v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 16) = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BC62D3B8();
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
  {
LABEL_22:
    *(_QWORD *)(v2 + 24) = v7;
    return v2;
  }
  v37 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BDB2C(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v30 = v1;
    v9 = 0;
    v7 = v37;
    v34 = a1 & 0xC000000000000001;
    v35 = a1;
    do
    {
      if (v34)
        v10 = (id)MEMORY[0x1BCCF24CC](v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      v12 = (_QWORD *)sub_1BC50D024(v11);
      if (!v12[2])
      {
        v13 = objc_msgSend(v11, sel_identifier);
        v14 = v31;
        sub_1BC62A79C();

        v15 = sub_1BC62A778();
        v17 = v16;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1BC3B5060(0, v12[2] + 1, 1, v12);
        v19 = v12[2];
        v18 = v12[3];
        if (v19 >= v18 >> 1)
          v12 = sub_1BC3B5060((_QWORD *)(v18 > 1), v19 + 1, 1, v12);
        v12[2] = v19 + 1;
        v20 = &v12[2 * v19];
        v20[4] = v15;
        v20[5] = v17;
      }
      v36 = v12;
      sub_1BC50D870();
      sub_1BC347F0C((unint64_t *)&qword_1ED6A52C8, (uint64_t (*)(uint64_t))sub_1BC50D870, MEMORY[0x1E0DEAF20]);
      v21 = sub_1BC62C5D8();
      v23 = v22;
      swift_bridgeObjectRelease();
      v24 = objc_msgSend(v11, sel_gateway);
      if (v24)
      {
        v25 = v24;
        v26 = objc_msgSend(v24, sel_minCompatibleAPIVersion);

      }
      else
      {
        v26 = 0;
      }

      v37 = v7;
      v28 = *(_QWORD *)(v7 + 16);
      v27 = *(_QWORD *)(v7 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1BC3BDB2C(v27 > 1, v28 + 1, 1);
        v7 = v37;
      }
      ++v9;
      *(_QWORD *)(v7 + 16) = v28 + 1;
      v29 = (_QWORD *)(v7 + 32 * v28);
      v29[4] = v11;
      v29[5] = v21;
      v29[6] = v23;
      v29[7] = v26;
      a1 = v35;
    }
    while (v6 != v9);
    v2 = v30;
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ClinicalAccountsDisambiguator()
{
  return objc_opt_self();
}

uint64_t method lookup function for ClinicalAccountsDisambiguator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClinicalAccountsDisambiguator.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ClinicalAccountsDisambiguator.newestAccount(of:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ClinicalAccountsDisambiguator.nonStaleAccounts()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

_QWORD *initializeWithCopy for GatewayIdentifiedClinicalAccount(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GatewayIdentifiedClinicalAccount(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for GatewayIdentifiedClinicalAccount(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = a2[3];
  return a1;
}

ValueMetadata *type metadata accessor for GatewayIdentifiedClinicalAccount()
{
  return &type metadata for GatewayIdentifiedClinicalAccount;
}

void sub_1BC50D870()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A52C0)
  {
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A52C0);
  }
}

unint64_t sub_1BC50D8C4()
{
  unint64_t result;

  result = qword_1EF434C40;
  if (!qword_1EF434C40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF434C40);
  }
  return result;
}

uint64_t sub_1BC50D900@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  v6 = *(_BYTE *)(v3 + 32);
  *(_BYTE *)(a2 + 16) = v6;
  return sub_1BC50DB14(v4, v5, v6);
}

uint64_t sub_1BC50D950(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a2;
  v5 = *(_BYTE *)(a1 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  v8 = *(_BYTE *)(v4 + 32);
  *(_BYTE *)(v4 + 32) = v5;
  sub_1BC50DB14(v2, v3, v5);
  sub_1BC50DC38(v6, v7, v8);
  return sub_1BC50D9E0();
}

uint64_t sub_1BC50D9E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;
  unsigned __int8 v13;

  v1 = v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v1 + 32))
  {
    v3 = *(_QWORD *)(v1 + 24);
    if (*(_BYTE *)(v1 + 32) == 1)
    {
      v4 = swift_bridgeObjectRetain();
    }
    else
    {
      v7 = v2 | v3;
      v8 = v2 ^ 1 | v3;
      v9 = 0x80000001BC6608A0;
      v10 = v8 == 0;
      if (v8)
        v11 = 0xD000000000000017;
      else
        v11 = 0xD000000000000014;
      if (!v10)
        v9 = 0x80000001BC660880;
      if (v7)
        v2 = v11;
      else
        v2 = 25637;
      if (v7)
        v4 = v9;
      else
        v4 = 0xE200000000000000;
    }
  }
  else
  {
    v13 = v2;
    v5 = sub_1BC50E31C(&v13);
    if (v6)
      v2 = v5;
    else
      v2 = 25637;
    if (v6)
      v4 = v6;
    else
      v4 = 0xE200000000000000;
  }
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC50DAC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 16) = v5;
  return sub_1BC50DB14(v3, v4, v5);
}

uint64_t sub_1BC50DB14(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BC50DB2C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  unsigned __int8 v20;

  v2 = v1;
  v3 = *a1;
  v4 = a1[1];
  v5 = *((_BYTE *)a1 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = v4;
  v8 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v2 + 32) = v5;
  sub_1BC50DC38(v6, v7, v8);
  v9 = *(_QWORD *)(v2 + 16);
  if (*(_BYTE *)(v2 + 32))
  {
    v10 = *(_QWORD *)(v2 + 24);
    if (*(_BYTE *)(v2 + 32) == 1)
    {
      v11 = swift_bridgeObjectRetain();
    }
    else
    {
      v14 = v9 | v10;
      v15 = v9 ^ 1 | v10;
      v16 = 0x80000001BC6608A0;
      v17 = v15 == 0;
      if (v15)
        v18 = 0xD000000000000017;
      else
        v18 = 0xD000000000000014;
      if (!v17)
        v16 = 0x80000001BC660880;
      if (v14)
        v9 = v18;
      else
        v9 = 25637;
      if (v14)
        v11 = v16;
      else
        v11 = 0xE200000000000000;
    }
  }
  else
  {
    v20 = *(_QWORD *)(v2 + 16);
    v12 = sub_1BC50E31C(&v20);
    if (v13)
      v9 = v12;
    else
      v9 = 25637;
    if (v13)
      v11 = v13;
    else
      v11 = 0xE200000000000000;
  }
  *(_QWORD *)(v2 + 40) = v9;
  *(_QWORD *)(v2 + 48) = v11;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC50DC38(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t (*sub_1BC50DC50(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC50DC90;
}

uint64_t sub_1BC50DC90(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  unsigned __int8 v16;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 24);
    v6 = *(_QWORD *)(v5 + 16);
    if (*(_BYTE *)(v5 + 32))
    {
      v7 = *(_QWORD *)(v5 + 24);
      if (*(_BYTE *)(v5 + 32) == 1)
      {
        v8 = swift_bridgeObjectRetain();
      }
      else
      {
        v11 = v6 | v7;
        v12 = v6 ^ 1 | v7;
        v13 = 0x80000001BC6608A0;
        v14 = v12 == 0;
        if (v12)
          v15 = 0xD000000000000017;
        else
          v15 = 0xD000000000000014;
        if (!v14)
          v13 = 0x80000001BC660880;
        if (v11)
          v6 = v15;
        else
          v6 = 25637;
        if (v11)
          v8 = v13;
        else
          v8 = 0xE200000000000000;
      }
    }
    else
    {
      v16 = *(_QWORD *)(v5 + 16);
      v9 = sub_1BC50E31C(&v16);
      if (v10)
        v6 = v9;
      else
        v6 = 25637;
      if (v10)
        v8 = v10;
      else
        v8 = 0xE200000000000000;
      v5 = *(_QWORD *)(a1 + 24);
    }
    *(_QWORD *)(v5 + 40) = v6;
    *(_QWORD *)(v5 + 48) = v8;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t CountFormatter.__allocating_init(style:)(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  id v16;
  unsigned __int8 v18;

  v2 = swift_allocObject();
  v4 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (qword_1EF428550 != -1)
    swift_once();
  v7 = (void *)qword_1EF42F698;
  v6 = unk_1EF42F6A0;
  v8 = qword_1EF42F6A8;
  *(_QWORD *)(v2 + 56) = qword_1EF42F698;
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 72) = v8;
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)(v2 + 24) = v3;
  *(_BYTE *)(v2 + 32) = v5;
  if (v5)
  {
    if (v5 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = v4 | v3;
      v12 = v4 ^ 1 | v3;
      v13 = 0x80000001BC6608A0;
      v14 = v12 == 0;
      if (v12)
        v15 = 0xD000000000000017;
      else
        v15 = 0xD000000000000014;
      if (!v14)
        v13 = 0x80000001BC660880;
      if (v11)
        v4 = v15;
      else
        v4 = 25637;
      if (v11)
        v3 = v13;
      else
        v3 = 0xE200000000000000;
    }
  }
  else
  {
    v18 = v4;
    v9 = sub_1BC50E31C(&v18);
    if (v10)
      v4 = v9;
    else
      v4 = 25637;
    if (v10)
      v3 = v10;
    else
      v3 = 0xE200000000000000;
  }
  *(_QWORD *)(v2 + 40) = v4;
  *(_QWORD *)(v2 + 48) = v3;
  v16 = v7;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CountFormatter.init(style:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  id v16;
  unsigned __int8 v18;

  v2 = v1;
  v4 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (qword_1EF428550 != -1)
    swift_once();
  v7 = (void *)qword_1EF42F698;
  v6 = unk_1EF42F6A0;
  v8 = qword_1EF42F6A8;
  *(_QWORD *)(v2 + 56) = qword_1EF42F698;
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 72) = v8;
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)(v2 + 24) = v3;
  *(_BYTE *)(v2 + 32) = v5;
  if (v5)
  {
    if (v5 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = v4 | v3;
      v12 = v4 ^ 1 | v3;
      v13 = 0x80000001BC6608A0;
      v14 = v12 == 0;
      if (v12)
        v15 = 0xD000000000000017;
      else
        v15 = 0xD000000000000014;
      if (!v14)
        v13 = 0x80000001BC660880;
      if (v11)
        v4 = v15;
      else
        v4 = 25637;
      if (v11)
        v3 = v13;
      else
        v3 = 0xE200000000000000;
    }
  }
  else
  {
    v18 = v4;
    v9 = sub_1BC50E31C(&v18);
    if (v10)
      v4 = v9;
    else
      v4 = 25637;
    if (v10)
      v3 = v10;
    else
      v3 = 0xE200000000000000;
  }
  *(_QWORD *)(v2 + 40) = v4;
  *(_QWORD *)(v2 + 48) = v3;
  v16 = v7;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC50E004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - v4;
  v6 = *(void **)(v1 + 56);
  v7 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  v9 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v8 + 16) = xmmword_1BC639590;
  v10 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 32) = a1;
  v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v12 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v5);
  swift_bridgeObjectRelease();

  return v12;
}

uint64_t CountFormatter.deinit()
{
  uint64_t v0;
  void *v1;

  sub_1BC50DC38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 56);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t CountFormatter.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  sub_1BC50DC38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 56);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

Swift::String __swiftcall DisplayCategory.Kind.localizedCount(_:)(Swift::Int a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  Swift::String result;
  unsigned __int8 v19;

  v3 = *v1;
  type metadata accessor for CountFormatter();
  inited = swift_initStackObject();
  if (qword_1EF428550 != -1)
    swift_once();
  v6 = (void *)qword_1EF42F698;
  v5 = unk_1EF42F6A0;
  v7 = qword_1EF42F6A8;
  *(_QWORD *)(inited + 56) = qword_1EF42F698;
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v7;
  *(_QWORD *)(inited + 16) = v3;
  *(_QWORD *)(inited + 24) = 0;
  *(_BYTE *)(inited + 32) = 0;
  v19 = v3;
  v8 = sub_1BC50E31C(&v19);
  v10 = 25637;
  if (v9)
  {
    v10 = v8;
    v11 = v9;
  }
  else
  {
    v11 = 0xE200000000000000;
  }
  *(_QWORD *)(inited + 40) = v10;
  *(_QWORD *)(inited + 48) = v11;
  v12 = v6;
  swift_bridgeObjectRetain();
  v13 = sub_1BC50E004(a1);
  v15 = v14;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v16 = v13;
  v17 = v15;
  result._object = v17;
  result._countAndFlagsBits = v16;
  return result;
}

uint64_t sub_1BC50E31C(unsigned __int8 *a1)
{
  return ((uint64_t (*)(_QWORD))((char *)sub_1BC50E33C + 4 * a8[*a1]))(*a1);
}

unint64_t sub_1BC50E33C()
{
  return 0xD00000000000001BLL;
}

uint64_t type metadata accessor for CountFormatter()
{
  return objc_opt_self();
}

uint64_t method lookup function for CountFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CountFormatter.style.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of CountFormatter.style.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of CountFormatter.style.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CountFormatter.__allocating_init(style:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of CountFormatter.string(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t destroy for CountFormatter.Style(uint64_t a1)
{
  return sub_1BC50DC38(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s15HealthRecordsUI14CountFormatterC5StyleOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BC50DB14(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CountFormatter.Style(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BC50DB14(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BC50DC38(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CountFormatter.Style(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BC50DC38(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CountFormatter.Style(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CountFormatter.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC50E620(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BC50E638(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CountFormatter.Style()
{
  return &type metadata for CountFormatter.Style;
}

Swift::Void __swiftcall UIAccessibilityIdentification.hrui_setAccessibilityIdentifier(_:)(Swift::OpaquePointer a1)
{
  void *v1;
  void *v2;
  id v3;

  v2 = (void *)sub_1BC62C86C();
  v3 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v3);
}

uint64_t sub_1BC50E6BC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RecordItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC50E710()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC50E740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1Tm((_QWORD *)(*(_QWORD *)v0 + 16), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1BC50E7CC(uint64_t a1, void *a2)
{
  sub_1BC50E848(a2);
}

uint64_t sub_1BC50E7F0()
{
  type metadata accessor for RecordItem();
  return sub_1BC62B210();
}

void sub_1BC50E848(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  _BYTE v14[40];

  v2 = v1;
  v4 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BC34E674(v2 + 16, (uint64_t)v14);
  sub_1BC50E97C();
  sub_1BC50E9D0();
  if (swift_dynamicCast())
  {
    v7 = v13;
    v8 = *(void **)(v2 + 56);
    v9 = sub_1BC62A7B4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
    v10 = v7;
    v11 = v8;
    v12 = sub_1BC5BFBB8(v10, v11, (uint64_t)v6);

    objc_msgSend(a1, sel_showAdaptively_sender_, v12, v2);
  }
}

unint64_t sub_1BC50E97C()
{
  unint64_t result;

  result = qword_1EF42C970;
  if (!qword_1EF42C970)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42C970);
  }
  return result;
}

unint64_t sub_1BC50E9D0()
{
  unint64_t result;

  result = qword_1EF42CFA8;
  if (!qword_1EF42CFA8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF42CFA8);
  }
  return result;
}

id DiagnosticTestReportFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store);
}

uint64_t DiagnosticTestReportFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context);
}

id DiagnosticTestReportFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id DiagnosticTestReportFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for DiagnosticTestReportFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for DiagnosticTestReportFormatter()
{
  return objc_opt_self();
}

uint64_t sub_1BC50EAF8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context);
  if (v2 == 1)
    return sub_1BC50EEB4(a1);
  if (!v2)
    return sub_1BC50EB58(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC50EB58(void *a1)
{
  uint64_t inited;
  unint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v22;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B398, (uint64_t (*)(uint64_t))sub_1BC39CBC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC63DB50;
  *(_QWORD *)(inited + 32) = sub_1BC61F7C4(a1);
  *(_QWORD *)(inited + 40) = sub_1BC50F224(a1);
  v3 = sub_1BC39CBE4();
  v4 = a1;
  v5 = objc_msgSend(v4, sel_effectiveStartDate);
  v6 = objc_msgSend(v4, sel_effectiveEndDate);

  v7 = objc_msgSend(v4, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  *(_QWORD *)(inited + 48) = sub_1BC4AA4A0(v5, v6, sub_1BC5A0780, 0, sub_1BC5A0780, 0, v8, v10, v3);
  *(_QWORD *)(inited + 56) = sub_1BC50F438(v4);
  *(_QWORD *)(inited + 64) = sub_1BC546064(v4);
  sub_1BC62C890();
  v22 = MEMORY[0x1E0DEE9D8];
  v11 = *(void **)(inited + 32);
  if (v11)
  {
    v12 = v11;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v13 = *(void **)(inited + 40);
  if (v13)
  {
    v14 = v13;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v15 = *(void **)(inited + 48);
  if (v15)
  {
    v16 = v15;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v17 = *(void **)(inited + 56);
  if (v17)
  {
    v18 = v17;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v19 = *(void **)(inited + 64);
  if (v19)
  {
    v20 = v19;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1BC50EEB4(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v7;

  v2 = sub_1BC61F7C4(a1);
  v3 = (void *)sub_1BC546064(a1);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v4 = v2;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  if (v3)
  {
    v5 = v3;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }

  return v7;
}

id DiagnosticTestReportFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DiagnosticTestReportFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DiagnosticTestReportFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiagnosticTestReportFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC50F088()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store);
}

uint64_t sub_1BC50F09C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context);
}

id sub_1BC50F0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for DiagnosticTestReportFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1BC50F120(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context);
  if (v2 == 1)
    return sub_1BC50EEB4(a1);
  if (!v2)
    return sub_1BC50EB58(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

unint64_t sub_1BC50F18C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC50F1B0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC50F1B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF434E58;
  if (!qword_1EF434E58)
  {
    v1 = type metadata accessor for DiagnosticTestReportFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF434E58);
  }
  return result;
}

uint64_t method lookup function for DiagnosticTestReportFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DiagnosticTestReportFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DiagnosticTestReportFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

id sub_1BC50F224(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;

  v1 = objc_msgSend(a1, sel_primaryConcept);
  v2 = objc_msgSend(v1, sel_localizedPreferredName);

  if (v2)
  {
    v3 = sub_1BC62C680();
    v5 = v4;

    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v3 & 0xFFFFFFFFFFFFLL;
    if (v6)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v7 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1BC50F438(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC39CBE4();
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_issueDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id CoverageIdentifierFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  char *v7;
  objc_super v9;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0xE000000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context] = a2;
  v9.receiver = v5;
  v9.super_class = v2;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1BC50F61C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v29[5];
  uint64_t v30;

  v10 = &v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue];
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = &v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle];
  *(_QWORD *)v11 = a4;
  *((_QWORD *)v11 + 1) = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v26)
      goto LABEL_3;
LABEL_12:
    v27 = v5;
    swift_bridgeObjectRetain();
    v24 = sub_1BC50FF0C(a1, (uint64_t)v27);

    swift_bridgeObjectRelease();
    return v24;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_12;
LABEL_3:
  if (!a3)
    goto LABEL_12;
  v12 = *((_QWORD *)v10 + 1);
  if (v12)
  {
    v13 = *(_QWORD *)v10;
    swift_bridgeObjectRetain();
    v14 = sub_1BC3B5060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v16 = v14[2];
    v15 = v14[3];
    if (v16 >= v15 >> 1)
      v14 = sub_1BC3B5060((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
    v14[2] = v16 + 1;
    v17 = &v14[2 * v16];
    v17[4] = v13;
    v17[5] = v12;
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v18 = sub_1BC39CBE4();
  MEMORY[0x1E0C80A78](v18);
  v29[2] = v5;
  v19 = Array<A>.newlineJoined.getter((uint64_t)v14);
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = sub_1BC4AB44C(v19, v21, v18, sub_1BC51012C, v29);
  if (!v22)
    goto LABEL_12;
  v23 = v22;
  sub_1BC357158(0, &qword_1EF42C660, (uint64_t (*)(uint64_t))sub_1BC3B9A48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BC639590;
  sub_1BC34D844();
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(v25 + 32) = v23;
  v30 = v25;
  sub_1BC62C890();
  *(_QWORD *)(v24 + 32) = v30;
  return v24;
}

uint64_t sub_1BC50F894(unint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;

  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BC510130(a1, (uint64_t)v3);

  swift_bridgeObjectRelease();
  return v4;
}

id CoverageIdentifierFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store);
}

uint64_t CoverageIdentifierFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context);
}

id CoverageIdentifierFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v4;
  objc_super v6;

  v3 = &v2[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = &v2[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0xE000000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context] = a2;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for CoverageIdentifierFormatter();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_1BC50F984(void *a1)
{
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context) < 2uLL)
    return sub_1BC50FE68(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

id CoverageIdentifierFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CoverageIdentifierFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CoverageIdentifierFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoverageIdentifierFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC50FACC()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store);
}

uint64_t sub_1BC50FAE0()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context);
}

id sub_1BC50FAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  char *v8;
  char *v9;
  id result;
  objc_super v11;

  v6 = (objc_class *)type metadata accessor for CoverageIdentifierFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = &v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0xE000000000000000;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context] = a2;
  v11.receiver = v7;
  v11.super_class = v6;
  result = objc_msgSendSuper2(&v11, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1BC50FB88(void *a1)
{
  _QWORD *v1;
  uint64_t result;

  if (*(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context) < 2uLL)
    return sub_1BC50FE68(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC50FBE8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[6];

  v2 = v1;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue + 8);
  if (!v4)
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!a1)
      goto LABEL_23;
LABEL_7:
    v10 = objc_msgSend(a1, sel_type);
    if (!v10)
      goto LABEL_23;
    v11 = v10;
    v12 = objc_msgSend(a1, sel_value);
    if (!v12)
    {
LABEL_22:

      goto LABEL_23;
    }
    v13 = v12;
    sub_1BC62C680();

    v14 = v11;
    v15 = objc_msgSend(v14, sel_localizedPreferredName);
    if (v15)
    {
      v16 = v15;
      v17 = sub_1BC62C680();
      v19 = v18;

      if ((v19 & 0x2000000000000000) != 0)
        v20 = HIBYTE(v19) & 0xF;
      else
        v20 = v17 & 0xFFFFFFFFFFFFLL;

      if (v20)
        goto LABEL_17;
      swift_bridgeObjectRelease();
    }
    else
    {

    }
    v17 = 0;
    v19 = 0xE000000000000000;
LABEL_17:
    v30[4] = v17;
    v30[5] = v19;
    sub_1BC62C764();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    v21 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v6 = sub_1BC3B5060(0, v6[2] + 1, 1, v6);
    v23 = v6[2];
    v22 = v6[3];
    if (v23 >= v22 >> 1)
      v6 = sub_1BC3B5060((_QWORD *)(v22 > 1), v23 + 1, 1, v6);
    v6[2] = v23 + 1;
    v24 = &v6[2 * v23];
    v24[4] = v17;
    v24[5] = v21;
    goto LABEL_22;
  }
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue);
  swift_bridgeObjectRetain();
  v6 = sub_1BC3B5060(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v8 = v6[2];
  v7 = v6[3];
  if (v8 >= v7 >> 1)
    v6 = sub_1BC3B5060((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v6[2] = v8 + 1;
  v9 = &v6[2 * v8];
  v9[4] = v5;
  v9[5] = v4;
  if (a1)
    goto LABEL_7;
LABEL_23:
  v25 = sub_1BC39CBE4();
  MEMORY[0x1E0C80A78](v25);
  v30[2] = v2;
  v26 = Array<A>.newlineJoined.getter((uint64_t)v6);
  v28 = v27;
  swift_bridgeObjectRelease();
  return sub_1BC4AB44C(v26, v28, v25, sub_1BC51012C, v30);
}

uint64_t sub_1BC50FE68(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v6;

  v1 = (void *)sub_1BC50FBE8(a1);
  v2 = v1;
  v3 = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v4 = v1;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    v3 = v6;
  }

  return v3;
}

uint64_t sub_1BC50FF0C(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v4 = MEMORY[0x1E0DEE9D8];
    if (!v3)
      return v4;
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BDBBC(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v5 = 0;
    v4 = v20;
    v16 = v2 & 0xC000000000000001;
    v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context);
    v17 = v2;
    while (v3 != v5)
    {
      if (v16)
        v7 = (id)MEMORY[0x1BCCF24CC](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      if (v6 > 1)
        goto LABEL_22;
      v9 = (void *)sub_1BC50FBE8(v7);
      v10 = v9;
      v11 = MEMORY[0x1E0DEE9D8];
      v19 = MEMORY[0x1E0DEE9D8];
      if (v9)
      {
        v12 = v9;
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();
        v11 = v19;
      }

      v14 = *(_QWORD *)(v20 + 16);
      v13 = *(_QWORD *)(v20 + 24);
      if (v14 >= v13 >> 1)
        sub_1BC3BDBBC(v13 > 1, v14 + 1, 1);
      ++v5;
      *(_QWORD *)(v20 + 16) = v14 + 1;
      *(_QWORD *)(v20 + 8 * v14 + 32) = v11;
      v2 = v17;
      if (v3 == v5)
        return v4;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    v3 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_22:
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC510130(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t i;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v16;

  v3 = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_17:
  swift_bridgeObjectRetain();
  v4 = sub_1BC62D3B8();
  if (!v4)
    goto LABEL_18;
LABEL_3:
  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context);
  for (i = 4; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x1BCCF24CC](i - 4, a1);
    else
      v8 = *(id *)(a1 + 8 * i);
    v9 = v8;
    v10 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    if (v5 > 1)
      break;
    v11 = (void *)sub_1BC50FBE8(v8);
    v12 = v11;
    if (v11)
    {
      v13 = v11;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
      v7 = v3;
      v3 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v7 = v3;
    }

    sub_1BC3BB208(v7);
    if (v10 == v4)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CoverageIdentifierFormatter()
{
  return objc_opt_self();
}

unint64_t sub_1BC510340(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC510364();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC510364()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF434EE8;
  if (!qword_1EF434EE8)
  {
    v1 = type metadata accessor for CoverageIdentifierFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF434EE8);
  }
  return result;
}

uint64_t method lookup function for CoverageIdentifierFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoverageIdentifierFormatter.structuredItems(from:displayValue:identifierTitle:country:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CoverageIdentifierFormatter.displayItems(from:country:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CoverageIdentifierFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1BC510410()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *sub_1BC51044C@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_1BC510464(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E74D3038;
}

id sub_1BC510514()
{
  char *v0;
  id v1;
  void *v2;
  id result;
  void *v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for YearRangePickerViewController();
  objc_msgSendSuper2(&v10, sel_viewDidLoad);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v2, 0xE000000000000000);

  result = objc_msgSend(v0, sel_tableView);
  if (result)
  {
    v4 = result;
    sub_1BC5116F8();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v6 = (void *)sub_1BC62C650();
    objc_msgSend(v4, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v6);

    result = objc_msgSend(v0, sel_tableView);
    if (result)
    {
      v7 = result;
      type metadata accessor for YearRangePickerCell();
      v8 = swift_getObjCClassFromMetadata();
      v9 = (void *)sub_1BC62C650();
      objc_msgSend(v7, sel_registerClass_forCellReuseIdentifier_, v8, v9);

      *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_dataSource]
                + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_delegate
                + 8) = &off_1E74E1B68;
      return (id)swift_unknownObjectWeakAssign();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_1BC510784(void *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  int v7;
  void *v8;
  void *v9;
  id v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  _BYTE *v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  unint64_t v28;

  v3 = v1;
  v5 = sub_1BC62A94C();
  switch(v5)
  {
    case 2:
      v8 = (void *)sub_1BC62C650();
      v9 = (void *)sub_1BC62A928();
      v10 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v8, v9);

      type metadata accessor for YearRangePickerCell();
      v11 = (char *)swift_dynamicCastClassUnconditional();
      *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_dataSource] = *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_dataSource);
      swift_retain_n();
      swift_release();
      sub_1BC505EEC();
      swift_release();
      *(_OWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_baseAccessibilityIdentifier] = xmmword_1BC6398F0;
      swift_bridgeObjectRelease();
      sub_1BC5060B8();
      break;
    case 1:
      v7 = 0;
      v6 = 1;
LABEL_7:
      v12 = (void *)sub_1BC62C650();
      v13 = (void *)sub_1BC62A928();
      v11 = (char *)objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v12, v13);

      v14 = objc_msgSend(v11, sel_textLabel);
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
        objc_msgSend(v15, sel_setTextColor_, v16);

      }
      v17 = (_BYTE *)OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow;
      if (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow) == v6)
        v18 = 3;
      else
        v18 = 0;
      objc_msgSend(v11, sel_setAccessoryType_, v18);
      v19 = objc_msgSend(v11, sel_textLabel);
      v2 = v19;
      if (v7)
      {
        if (v19)
        {
          if (qword_1ED6A4888 != -1)
            swift_once();
          v20 = (id)qword_1ED6A5528;
          swift_bridgeObjectRetain();
          sub_1BC62A4A8();
          swift_bridgeObjectRelease();

          v21 = (void *)sub_1BC62C650();
          swift_bridgeObjectRelease();
          objc_msgSend(v2, sel_setText_, v21, 0xE000000000000000);

        }
        v22 = (void *)sub_1BC62C86C();
        v23 = (void *)HKUIJoinStringsForAutomationIdentifier();
LABEL_28:
        v26 = v23;

        objc_msgSend(v11, sel_setAccessibilityIdentifier_, v26);
        return v11;
      }
LABEL_20:
      if (v2)
      {
        if (v17[v3] == 1)
        {
          swift_retain();
          sub_1BC511218();
          swift_release();
        }
        else
        {
          if (qword_1ED6A4888 != -1)
            swift_once();
          v24 = (id)qword_1ED6A5528;
          swift_bridgeObjectRetain();
          v28 = 0xE000000000000000;
          sub_1BC62A4A8();
          swift_bridgeObjectRelease();

        }
        v25 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
        objc_msgSend(v2, sel_setText_, v25);

      }
      objc_msgSend(v11, sel_setSeparatorInset_, 0.0, 0.0, 0.0, 1.79769313e308, v28);
      v22 = (void *)sub_1BC62C86C();
      v23 = (void *)HKUIJoinStringsForAutomationIdentifier();
      goto LABEL_28;
    case 0:
      v6 = 0;
      v7 = 1;
      goto LABEL_7;
    default:
      v17 = (_BYTE *)sub_1BC62C650();
      v11 = (char *)(id)HKErrorTableViewCell();

      if (!v11)
      {
        __break(1u);
        goto LABEL_20;
      }
      break;
  }
  return v11;
}

id sub_1BC510D38(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  result = (id)sub_1BC62A94C();
  if (result == (id)1)
  {
    v8 = (void *)sub_1BC62A928();
    objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v8, 1);

    *(_BYTE *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow) = 1;
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_dataSource);
    v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear);
    v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear);
    if (MEMORY[0x1BCCF37A4](v2 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_delegate))
    {
      sub_1BC469D68(v10, v11, 0, 1);
      goto LABEL_7;
    }
  }
  else
  {
    if (result)
      return result;
    v5 = (void *)sub_1BC62A928();
    objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v5, 1);

    *(_BYTE *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow) = 0;
    v6 = MEMORY[0x1BCCF37A4](v2 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_delegate);
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource);
      *(_QWORD *)(v7 + 16) = 0;
      *(_QWORD *)(v7 + 24) = 0;
      *(_WORD *)(v7 + 32) = 1;
      sub_1BC467CF4();
LABEL_7:
      swift_unknownObjectRelease();
    }
  }
  return objc_msgSend(a1, sel_reloadData);
}

id sub_1BC511030()
{
  char *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(v0, sel_tableView);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, sel_reloadData);

    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_dataSource];
    v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear);
    v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear);
    result = (id)MEMORY[0x1BCCF37A4](&v0[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_delegate]);
    if (result)
    {
      sub_1BC469D68(v4, v5, 0, v0[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow]);
      return (id)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BC51117C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for YearRangePickerViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for YearRangePickerViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BC511218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v16 - v2;
  v4 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC6395A0;
  v6 = sub_1BC4B264C(*(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear));
  v8 = v7;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1BC3644C0();
  *(_QWORD *)(v5 + 64) = v10;
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  v11 = sub_1BC4B264C(*(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear));
  *(_QWORD *)(v5 + 96) = v9;
  *(_QWORD *)(v5 + 104) = v10;
  *(_QWORD *)(v5 + 72) = v11;
  *(_QWORD *)(v5 + 80) = v12;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v13 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v14 = sub_1BC62C6A4();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v3);
  return v14;
}

uint64_t sub_1BC51141C()
{
  uint64_t v0;

  sub_1BC36DCA4(v0 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_configuration);
  swift_bridgeObjectRelease();
  sub_1BC359FDC(v0 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC51146C()
{
  return type metadata accessor for YearRangePickerDataSource();
}

uint64_t type metadata accessor for YearRangePickerDataSource()
{
  uint64_t result;

  result = qword_1EF434F88;
  if (!qword_1EF434F88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC5114B0()
{
  uint64_t result;
  unint64_t v1;

  result = _s13ConfigurationVMa();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for YearRangeRow(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC511590 + 4 * byte_1BC6464D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC5115C4 + 4 * byte_1BC6464D0[v4]))();
}

uint64_t sub_1BC5115C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC5115CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC5115D4);
  return result;
}

uint64_t sub_1BC5115E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC5115E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC5115EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC5115F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YearRangeRow()
{
  return &type metadata for YearRangeRow;
}

unint64_t sub_1BC511614()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF435088;
  if (!qword_1EF435088)
  {
    sub_1BC51165C();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF435088);
  }
  return result;
}

void sub_1BC51165C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF435090)
  {
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF435090);
  }
}

unint64_t sub_1BC5116B4()
{
  unint64_t result;

  result = qword_1EF435098;
  if (!qword_1EF435098)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC646658, &type metadata for YearRangeRow);
    atomic_store(result, (unint64_t *)&qword_1EF435098);
  }
  return result;
}

unint64_t sub_1BC5116F8()
{
  unint64_t result;

  result = qword_1EF4312A8;
  if (!qword_1EF4312A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF4312A8);
  }
  return result;
}

uint64_t sub_1BC511734(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1BC511748(a1, a2, a3);
}

uint64_t sub_1BC511748(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = a3 + 24;
  swift_beginAccess();
  a1(v4);
  return swift_endAccess();
}

void sub_1BC5117B8(void *a1, double a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[16];
  unint64_t (*v13)(uint64_t *);
  char *v14;
  uint64_t v15;
  char v16;
  double *v17;
  id *v18;
  uint64_t v19;
  double v20;
  id v21;

  v5 = sub_1BC62C47C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = a1;
  v20 = a2;
  v10 = *v2;
  v17 = &v20;
  v18 = &v21;
  sub_1BC357158(0, &qword_1ED6A4818, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC639590;
  sub_1BC62C470();
  v19 = v11;
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, v6, MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  v13 = sub_1BC514C14;
  v14 = &v16;
  v15 = v10;
  sub_1BC62CC80();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v5);

}

void sub_1BC511964(void *a1, double a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[16];
  unint64_t (*v13)(uint64_t *);
  char *v14;
  uint64_t v15;
  char v16;
  double *v17;
  id *v18;
  uint64_t v19;
  double v20;
  id v21;

  v5 = sub_1BC62C47C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = a1;
  v20 = a2;
  v10 = *v2;
  v17 = &v20;
  v18 = &v21;
  sub_1BC357158(0, &qword_1ED6A4818, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC639590;
  sub_1BC62C470();
  v19 = v11;
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, v6, MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  v13 = sub_1BC514BDC;
  v14 = &v16;
  v15 = v10;
  sub_1BC62CC80();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v5);

}

uint64_t sub_1BC511B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t (*v16)(uint64_t);
  char *v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  v7 = sub_1BC62C47C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23[0] = a2;
  v23[1] = a3;
  v12 = *v3;
  v20 = v23;
  v21 = a1;
  sub_1BC357158(0, &qword_1ED6A4818, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC639590;
  sub_1BC62C470();
  v22 = v13;
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, v8, MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  v16 = sub_1BC514BD4;
  v17 = &v19;
  v18 = v12;
  sub_1BC62CC80();
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v7);
  swift_bridgeObjectRelease();
  return sub_1BC3801D0(a1, (uint64_t)&qword_1EF42A3B8, (uint64_t)sub_1BC380158, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BC357158);
}

void sub_1BC511CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  _BYTE v18[16];
  uint64_t (*v19)(uint64_t);
  char *v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  void **v24;
  uint64_t v25;
  _QWORD v26[3];
  char v27;
  void *v28[7];

  v11 = sub_1BC62C47C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC514A70(a1, (uint64_t)v28, (unint64_t *)&qword_1ED6A4158);
  v26[0] = a2;
  v26[1] = a3;
  v26[2] = a4;
  v27 = a5 & 1;
  v15 = *v5;
  v23 = v26;
  v24 = v28;
  sub_1BC357158(0, &qword_1ED6A4818, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC639590;
  sub_1BC62C470();
  v25 = v16;
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  v19 = sub_1BC5157FC;
  v20 = &v22;
  v21 = v15;
  sub_1BC62CC80();
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  sub_1BC378D5C(v28[0], v28[1], (uint64_t)v28[2], (uint64_t)v28[3], (uint64_t)v28[4], v28[5]);
}

uint64_t sub_1BC511ECC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t (*v14)(uint64_t);
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = sub_1BC62C47C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  v18 = a2;
  v19 = a1;
  sub_1BC357158(0, &qword_1ED6A4818, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC639590;
  sub_1BC62C470();
  v20 = v11;
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, v6, MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  v14 = sub_1BC5157F4;
  v15 = &v17;
  v16 = v10;
  sub_1BC62CC80();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v5);
  sub_1BC348D78(a2, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  return sub_1BC3801D0(a1, (uint64_t)&qword_1ED6A4288, (uint64_t)&qword_1ED6A4280, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
}

void sub_1BC512098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  _BYTE v18[16];
  uint64_t (*v19)(uint64_t);
  char *v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  _BYTE *v24;
  uint64_t v25;
  _QWORD v26[3];
  char v27;
  _BYTE v28[40];
  id v29;

  v11 = sub_1BC62C47C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC514A70(a1, (uint64_t)v28, &qword_1EF42A3B0);
  v26[0] = a2;
  v26[1] = a3;
  v26[2] = a4;
  v27 = a5 & 1;
  v15 = *v5;
  v23 = v26;
  v24 = v28;
  sub_1BC357158(0, &qword_1ED6A4818, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC639590;
  sub_1BC62C470();
  v25 = v16;
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  v19 = sub_1BC514ABC;
  v20 = &v22;
  v21 = v15;
  sub_1BC62CC80();
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);

}

uint64_t sub_1BC512278(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t (*v15)(uint64_t);
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = sub_1BC62C47C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  v19 = a2;
  v20 = a1;
  sub_1BC357158(0, &qword_1ED6A4818, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC639590;
  sub_1BC62C470();
  v21 = v11;
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, v6, MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  v15 = sub_1BC514A54;
  v16 = &v18;
  v17 = v10;
  sub_1BC62CC80();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v5);
  v12 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
  return sub_1BC3801D0(a1, (uint64_t)&unk_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
}

void *sub_1BC512454(uint64_t a1, double a2)
{
  unint64_t v3;
  char v4;
  void *v5;
  id v6;

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  v3 = sub_1BC558FE0(a2);
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v3);
  v6 = v5;
  return v5;
}

double sub_1BC512498@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;
  char v7;
  double result;

  if (*(_QWORD *)(a1 + 16) && (v6 = sub_1BC558D94(a2, a3), (v7 & 1) != 0))
  {
    sub_1BC35EBE0(*(_QWORD *)(a1 + 56) + 72 * v6, a4, (uint64_t (*)(_QWORD))sub_1BC380158);
  }
  else
  {
    *(_QWORD *)(a4 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

double sub_1BC512500@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  double result;

  if (*(_QWORD *)(a1 + 16) && (v8 = sub_1BC559284(a2, a3, a4, a5 & 1), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(a1 + 56) + 48 * v8;
    v11 = *(_QWORD *)(v10 + 24);
    v12 = *(_BYTE *)(v10 + 32);
    v13 = *(void **)(v10 + 40);
    *(_BYTE *)a6 = *(_BYTE *)v10;
    *(_OWORD *)(a6 + 8) = *(_OWORD *)(v10 + 8);
    *(_QWORD *)(a6 + 24) = v11;
    *(_BYTE *)(a6 + 32) = v12;
    *(_QWORD *)(a6 + 40) = v13;
    v14 = v13;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)(a6 + 16) = 0u;
    *(_OWORD *)(a6 + 32) = 0u;
    *(_OWORD *)a6 = 0u;
  }
  return result;
}

double sub_1BC512590@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BC5125AC(a1, a2, (uint64_t (*)(uint64_t))sub_1BC559478, (unint64_t *)&qword_1ED6A4280, (uint64_t)&type metadata for BrowseIcon, a3);
}

double sub_1BC5125AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  char v11;
  double result;

  if (*(_QWORD *)(a1 + 16) && (v10 = a3(a2), (v11 & 1) != 0))
  {
    sub_1BC5149BC(*(_QWORD *)(a1 + 56) + 72 * v10, a6, a4, a5);
  }
  else
  {
    *(_QWORD *)(a6 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a6 + 32) = 0u;
    *(_OWORD *)(a6 + 48) = 0u;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
  return result;
}

double sub_1BC512620@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _QWORD *a6@<X8>)
{
  unint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  double result;

  if (*(_QWORD *)(a1 + 16) && (v8 = sub_1BC559284(a2, a3, a4, a5 & 1), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(a1 + 56) + 48 * v8;
    v11 = *(void **)v10;
    v12 = *(void **)(v10 + 8);
    v13 = *(_QWORD *)(v10 + 16);
    v14 = *(_QWORD *)(v10 + 24);
    v15 = *(_QWORD *)(v10 + 32);
    v16 = *(void **)(v10 + 40);
    *a6 = *(_QWORD *)v10;
    a6[1] = v12;
    a6[2] = v13;
    a6[3] = v14;
    a6[4] = v15;
    a6[5] = v16;
    sub_1BC35EEF4(v11, v12, v13, v14, v15, v16);
  }
  else
  {
    *(_OWORD *)a6 = 0u;
    *((_OWORD *)a6 + 1) = 0u;
    *(_QWORD *)&result = 0x1FFFFFFFELL;
    *((_OWORD *)a6 + 2) = xmmword_1BC644770;
  }
  return result;
}

unint64_t sub_1BC5126A8(uint64_t *a1, void *a2, void (*a3)(id, uint64_t, double), void (*a4)(void), void (*a5)(unint64_t, uint64_t), double a6)
{
  id v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t result;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  if (a2)
  {
    v9 = a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *a1;
    *a1 = 0x8000000000000000;
    a3(v9, isUniquelyReferenced_nonNull_native, a6);
    *a1 = v19;
  }
  else
  {
    result = sub_1BC558FE0(a6);
    if ((v14 & 1) == 0)
      return result;
    v15 = result;
    v16 = swift_isUniquelyReferenced_nonNull_native();
    v17 = *a1;
    v20 = *a1;
    *a1 = 0x8000000000000000;
    if ((v16 & 1) == 0)
    {
      a4();
      v17 = v20;
    }
    v18 = *(void **)(*(_QWORD *)(v17 + 56) + 8 * v15);
    a5(v15, v17);
    *a1 = v17;

  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC5127A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t (*v8)(_QWORD);
  _BYTE v11[72];

  v5 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BC35EBE0(a2, (uint64_t)v7, v8);
  sub_1BC3A9BF4(a3, (uint64_t)v11, (uint64_t)&qword_1ED6A4288, (uint64_t)&qword_1ED6A4280, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC38020C);
  return sub_1BC37D880((uint64_t)v11, (uint64_t)v7);
}

uint64_t sub_1BC51285C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[72];

  v5 = sub_1BC62A7B4();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t))(v8 + 16))(v7, a2);
  sub_1BC3A9BF4(a3, (uint64_t)v11, (uint64_t)&unk_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC38020C);
  return sub_1BC37DB2C((uint64_t)v11, (uint64_t)v7);
}

uint64_t static AccountIconProvider.shared.getter()
{
  if (qword_1ED6A31F0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1BC512954(unsigned __int8 *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t (*v24)();
  _QWORD *v25;
  uint64_t v26;
  _QWORD v27[5];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[4];
  uint64_t v34;
  _QWORD v35[7];

  v5 = sub_1BC62A7B4();
  v19 = *(_QWORD *)(v5 - 8);
  v20 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v22 = v2;
  v23 = v8;
  v9 = *((_QWORD *)a1 + 1);
  v10 = *((_QWORD *)a1 + 2);
  v11 = *((_QWORD *)a1 + 3);
  v12 = a1[32];
  v13 = (void *)*((_QWORD *)a1 + 5);
  v14 = *v2;
  v21 = a2;
  v27[2] = a2;
  v24 = sub_1BC515950;
  v25 = v27;
  v26 = v14;
  sub_1BC38020C(0, &qword_1EF42A3A8, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
  sub_1BC62CC8C();
  if ((_QWORD)v28)
  {
    v33[2] = v30;
    v33[3] = v31;
    v34 = v32;
    v33[0] = v28;
    v33[1] = v29;
    *(_QWORD *)&v28 = v23;
    *((_QWORD *)&v28 + 1) = v9;
    *(_QWORD *)&v29 = v10;
    *((_QWORD *)&v29 + 1) = v11;
    *(_QWORD *)&v30 = v12;
    *((_QWORD *)&v30 + 1) = v13;
    v15 = v13;
    sub_1BC512098((uint64_t)&v28, v9, v10, v11, v12);
  }
  else
  {
    sub_1BC3801D0((uint64_t)&v28, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
    sub_1BC4D45A8((uint64_t *)v33);
    v35[0] = v23;
    v35[1] = v9;
    v35[2] = v10;
    v35[3] = v11;
    v35[4] = v12;
    v35[5] = v13;
    v16 = v13;
    sub_1BC512098((uint64_t)v35, v9, v10, v11, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v7, v21, v20);
    sub_1BC5149BC((uint64_t)v33, (uint64_t)&v28, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
    sub_1BC512278((uint64_t)&v28, (uint64_t)v7);
  }
  return sub_1BC514A08((uint64_t)v33);
}

uint64_t sub_1BC512B54()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  if (qword_1ED6A31F8 != -1)
    swift_once();
  v0 = qword_1ED6A31E0;
  v1 = (id)qword_1ED6A31B8;
  if (v0 != -1)
    swift_once();
  v2 = qword_1ED6A42A8;
  type metadata accessor for AccountIconProvider();
  v3 = (_QWORD *)swift_allocObject();
  swift_retain();
  result = sub_1BC4D3D10(v3 + 4);
  v3[2] = v2;
  v3[3] = v1;
  qword_1ED6A4498 = (uint64_t)v3;
  return result;
}

_QWORD *AccountIconProvider.__allocating_init(brandImageManager:monogramProvider:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  v4 = (_QWORD *)swift_allocObject();
  sub_1BC4D3D10(v4 + 4);
  v4[2] = a2;
  v4[3] = a1;
  return v4;
}

_QWORD *AccountIconProvider.init(brandImageManager:monogramProvider:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_1BC4D3D10(v2 + 4);
  v2[2] = a2;
  v2[3] = a1;
  return v2;
}

void sub_1BC512C94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double v7;
  int v8;
  uint64_t v9;
  double v10;
  double v11;
  BOOL v12;
  double v13;
  double v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  id v20;
  BOOL v21;
  __int128 v22;

  v7 = *(double *)a3;
  v8 = *(unsigned __int8 *)(a3 + 24);
  *(_QWORD *)&v22 = *(_QWORD *)(a3 + 16);
  *((_QWORD *)&v22 + 1) = *(_QWORD *)(a3 + 8);
  v9 = v22 | *((_QWORD *)&v22 + 1) | *(_QWORD *)a3;
  v10 = 36.0;
  v11 = 45.0;
  v12 = v22 == 0 && *(_QWORD *)&v7 == 2;
  v13 = 80.0;
  if (v12)
    v13 = 60.0;
  if (*(_QWORD *)&v7 != 1 || v22 != 0)
    v11 = v13;
  if (v9)
    v10 = v11;
  if (v8 == 1)
    v15 = v10;
  else
    v15 = *(double *)a3;
  swift_beginAccess();
  swift_beginAccess();
  swift_retain();
  v16 = sub_1BC618BBC(a1, a2, v15);
  swift_endAccess();
  swift_endAccess();
  swift_release();
  if (!v8)
  {
    v19 = v7;
LABEL_23:
    v17 = *((_QWORD *)&v22 + 1);
    v18 = v22;
    goto LABEL_24;
  }
  if (!v9)
  {
    v19 = 36.0;
    goto LABEL_23;
  }
  v17 = *((_QWORD *)&v22 + 1);
  v18 = v22;
  if (*(_QWORD *)&v7 == 1 && v22 == 0)
  {
    v19 = 45.0;
  }
  else
  {
    v21 = v22 == 0 && *(_QWORD *)&v7 == 2;
    v19 = 80.0;
    if (v21)
      v19 = 60.0;
  }
LABEL_24:
  v20 = objc_msgSend(v16, sel_scaledToTargetSize_, v19, v19, v22);

  *(_BYTE *)a4 = 1;
  *(double *)(a4 + 8) = v7;
  *(_QWORD *)(a4 + 16) = v17;
  *(_QWORD *)(a4 + 24) = v18;
  *(_BYTE *)(a4 + 32) = v8;
  *(_QWORD *)(a4 + 40) = v20;
}

void sub_1BC512E54(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(uint64_t, void *, void *);
  void *v24;
  char v25;
  void *v26;
  _QWORD v27[9];
  uint64_t aBlock;
  uint64_t v29;
  void (*v30)(uint64_t, void *, void *);
  void *v31;
  void (*v32)(void *, void *);
  uint64_t v33;
  char v34;

  v5 = v4;
  v8 = *a2;
  v9 = a2[1];
  v20 = a2[2];
  v19 = *((_BYTE *)a2 + 24);
  swift_beginAccess();
  sub_1BC35EBE0(v4 + 32, (uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  sub_1BC38020C(0, &qword_1EF42A3A8, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
  sub_1BC62CC8C();
  v10 = sub_1BC348D78((uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  if (v27[0])
  {
    MEMORY[0x1E0C80A78](v10);
    MEMORY[0x1E0C80A78](v11);
    sub_1BC403CE4(0, &qword_1EF42A3B0);
    sub_1BC62CC8C();
    sub_1BC3801D0((uint64_t)v27, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
    if (v26)
    {
      aBlock = v21 & 1;
      v29 = v22;
      v30 = v23;
      v31 = v24;
      v32 = (void (*)(void *, void *))(v25 & 1);
      v33 = (uint64_t)v26;
      v34 = 0;
      v12 = v26;
      a3(&aBlock);

      return;
    }
  }
  else
  {
    sub_1BC3801D0((uint64_t)v27, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
  }
  v13 = objc_msgSend(*(id *)(v4 + 24), sel_healthRecordsStore);
  v14 = objc_msgSend(v13, sel_healthStore);

  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EE98]), sel_initWithHealthStore_, v14);
  v16 = (void *)sub_1BC62A784();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  *(_QWORD *)(v17 + 32) = v5;
  *(_QWORD *)(v17 + 40) = v8;
  *(_QWORD *)(v17 + 48) = v9;
  *(_QWORD *)(v17 + 56) = v20;
  *(_BYTE *)(v17 + 64) = v19;
  v32 = sub_1BC514360;
  v33 = v17;
  aBlock = MEMORY[0x1E0C809B0];
  v29 = 1107296256;
  v30 = sub_1BC46FB0C;
  v31 = &block_descriptor_49;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_fetchAccountWithIdentifier_completion_, v16, v18);
  _Block_release(v18);

}

void sub_1BC5131C0(void *a1, void *a2, void (*a3)(double *), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;

  sub_1BC514B90();
  v16 = swift_allocError();
  v17 = (void *)v16;
  if (a2)
  {
    v18 = a2;

LABEL_3:
    v21 = a2;
    v22 = 0u;
    v23 = 0u;
    v24 = 0;
    v25 = 1;
    a3((double *)&v21);
    sub_1BC3CD7D8(a2);
    return;
  }
  if (!a1)
  {
    a2 = (void *)v16;
    goto LABEL_3;
  }
  v19 = a1;

  v21 = a6;
  *(_QWORD *)&v22 = a7;
  *((_QWORD *)&v22 + 1) = a8;
  LOBYTE(v23) = a9 & 1;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v20 = (void *)sub_1BC62CC74();
  sub_1BC513300(v19, (uint64_t)&v21, v20, a3, a4);

}

void sub_1BC513300(void *a1, uint64_t a2, void *a3, void (*a4)(double *), uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char v46;
  double v47;
  double v48;
  unint64_t v49;
  double v50;
  _QWORD *v51;
  double v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  char *v63;
  uint64_t (*v64)(uint64_t);
  char *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  BOOL v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  void (*v83)(double *);
  void *v84;
  _QWORD *v85;
  uint64_t v86;
  double v87;
  double v88;
  int v89;
  uint64_t (*v90)(uint64_t);
  uint64_t (*v91)();
  _QWORD *v92;
  uint64_t v93;
  _QWORD v94[4];
  _QWORD v95[3];
  char v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  void *v102;
  double v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t);
  void *v106;
  uint64_t (*v107)();
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  char v115;

  v79 = sub_1BC62C47C();
  v77 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v76 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_1BC62C4AC();
  v75 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v74 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62A7B4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(double *)(a2 + 8);
  v87 = *(double *)a2;
  v88 = v17;
  v90 = *(uint64_t (**)(uint64_t))(a2 + 16);
  v89 = *(unsigned __int8 *)(a2 + 24);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a3;
  v18[3] = a4;
  v83 = a4;
  v84 = a3;
  v85 = v18;
  v18[4] = a5;
  v81 = a3;
  swift_retain();
  v86 = a5;
  swift_retain();
  v80 = a1;
  v19 = objc_msgSend(a1, sel_identifier);
  sub_1BC62A79C();

  v82 = v5;
  swift_beginAccess();
  sub_1BC35EBE0(v5 + 32, (uint64_t)&v109, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  v94[2] = v16;
  v91 = sub_1BC515950;
  v92 = v94;
  v93 = v109;
  sub_1BC38020C(0, &qword_1EF42A3A8, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
  sub_1BC62CC8C();
  sub_1BC348D78((uint64_t)&v109, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (v103 == 0.0)
  {
    sub_1BC3801D0((uint64_t)&v103, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
    v21 = v90;
    goto LABEL_6;
  }
  *(double *)v95 = v87;
  *(double *)&v95[1] = v88;
  v21 = v90;
  v95[2] = v90;
  v96 = v89;
  v22 = MEMORY[0x1E0C80A78](v20);
  *(&v73 - 2) = (uint64_t)v95;
  MEMORY[0x1E0C80A78](v22);
  *(&v73 - 4) = (uint64_t)sub_1BC51437C;
  *(&v73 - 3) = v23;
  *(&v73 - 2) = v24;
  sub_1BC403CE4(0, &qword_1EF42A3B0);
  sub_1BC62CC8C();
  v26 = v97;
  v25 = v98;
  v27 = v99;
  v28 = v100;
  v30 = v101;
  v29 = v102;
  sub_1BC3801D0((uint64_t)&v103, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
  if (!v29)
  {
LABEL_6:
    v34 = v80;
    if (!objc_msgSend(v80, sel_hasLogo)
      || (v35 = objc_msgSend(v34, sel_brand)) == 0)
    {
      v53 = objc_msgSend(v34, sel_title);
      v54 = sub_1BC62C680();
      v56 = v55;

      v103 = v87;
      v104 = *(_QWORD *)&v88;
      v105 = v21;
      LOBYTE(v106) = v89;
      sub_1BC512C94(v54, v56, (uint64_t)&v103, (uint64_t)&v109);
      swift_bridgeObjectRelease();
      v29 = v114;
      v109 = v109;
      v113 = v113;
      v115 = 0;
      if (v84)
      {
        v57 = swift_allocObject();
        v58 = v86;
        *(_QWORD *)(v57 + 16) = v83;
        *(_QWORD *)(v57 + 24) = v58;
        sub_1BC514390((uint64_t)&v109, v57 + 32);
        v107 = sub_1BC51443C;
        v108 = v57;
        v103 = MEMORY[0x1E0C809B0];
        v104 = 1107296256;
        v33 = &block_descriptor_11_0;
        goto LABEL_15;
      }
LABEL_16:
      sub_1BC514390((uint64_t)&v109, (uint64_t)&v103);
      v67 = v29;
      v83(&v103);
      swift_release();
      swift_release();

      return;
    }
    v36 = v35;
    v37 = objc_msgSend(v36, sel_externalID);
    v38 = sub_1BC62C680();
    v40 = v39;

    v41 = objc_msgSend(v36, sel_batchID);
    v42 = sub_1BC62C680();
    v44 = v43;

    v45 = *(void **)(v82 + 24);
    v109 = v38;
    v110 = v40;
    v111 = v42;
    v112 = v44;
    v46 = v89;
    v84 = v40;
    if (v89)
    {
      v48 = v87;
      v47 = v88;
      v49 = (unint64_t)v90 | *(_QWORD *)&v88;
      if ((unint64_t)v90 | *(_QWORD *)&v88 | *(_QWORD *)&v87)
      {
        v50 = 3.0;
        v51 = v85;
        if (*(_QWORD *)&v87 != 1 || v49)
        {
          if (v49)
            v72 = 0;
          else
            v72 = *(_QWORD *)&v87 == 2;
          v52 = 80.0;
          if (v72)
            v52 = 60.0;
        }
        else
        {
          v52 = 45.0;
        }
        goto LABEL_20;
      }
      v50 = 2.0;
      v52 = 36.0;
    }
    else
    {
      v48 = v87;
      v47 = v88;
      v52 = v87;
      v50 = v88;
    }
    v51 = v85;
LABEL_20:
    *(double *)&v68 = v52 - v50;
    v69 = swift_allocObject();
    *(double *)(v69 + 16) = v48;
    *(double *)(v69 + 24) = v47;
    *(_QWORD *)(v69 + 32) = v90;
    *(_BYTE *)(v69 + 40) = v46;
    *(_QWORD *)(v69 + 48) = v82;
    *(_QWORD *)(v69 + 56) = v34;
    *(_QWORD *)(v69 + 64) = sub_1BC514384;
    *(_QWORD *)(v69 + 72) = v51;
    v70 = v45;
    swift_retain();
    v71 = v34;
    swift_retain();
    HRBrandImageManager.retrieveLogo(for:size:options:completion:)(&v109, v68, 0, 0, (uint64_t)sub_1BC514474, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    goto LABEL_21;
  }
  v109 = v26 & 1;
  v110 = v25;
  v111 = v27;
  v112 = v28;
  v113 = v30 & 1;
  v114 = v29;
  v115 = 0;
  if (!v84)
    goto LABEL_16;
  v31 = swift_allocObject();
  v32 = v86;
  *(_QWORD *)(v31 + 16) = v83;
  *(_QWORD *)(v31 + 24) = v32;
  sub_1BC514390((uint64_t)&v109, v31 + 32);
  v107 = sub_1BC51443C;
  v108 = v31;
  v103 = MEMORY[0x1E0C809B0];
  v104 = 1107296256;
  v33 = &block_descriptor_23_0;
LABEL_15:
  v105 = sub_1BC39BE70;
  v106 = v33;
  v59 = _Block_copy(&v103);
  v60 = v29;
  v61 = v81;
  swift_retain();
  v62 = v60;
  v63 = v74;
  sub_1BC62C494();
  v97 = MEMORY[0x1E0DEE9D8];
  v64 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  v65 = v76;
  v66 = v79;
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v63, v65, v59);
  _Block_release(v59);

  (*(void (**)(char *, uint64_t))(v77 + 8))(v65, v66);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v63, v78);
  swift_release();

  swift_release();
LABEL_21:
  swift_release();
}

uint64_t sub_1BC513B34(uint64_t a1, void *a2, uint64_t (*a3)(_QWORD *), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t (*v19)(uint64_t);
  _QWORD v21[2];
  _QWORD aBlock[7];
  _BYTE v23[56];

  v8 = sub_1BC62C47C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62C4AC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC514390(a1, (uint64_t)v23);
  if (a2)
  {
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a3;
    *(_QWORD *)(v16 + 24) = a4;
    sub_1BC514390((uint64_t)v23, v16 + 32);
    aBlock[4] = sub_1BC51443C;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39BE70;
    aBlock[3] = &block_descriptor_46;
    v17 = _Block_copy(aBlock);
    v18 = a2;
    swift_retain();
    sub_1BC514B58((uint64_t)v23);
    sub_1BC62C494();
    v21[1] = MEMORY[0x1E0DEE9D8];
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC35811C();
    sub_1BC62D0A0();
    MEMORY[0x1BCCF1F68](0, v15, v11, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return swift_release();
  }
  else
  {
    sub_1BC514390((uint64_t)v23, (uint64_t)aBlock);
    return a3(aBlock);
  }
}

void sub_1BC513D68(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, void *a8, void (*a9)(uint64_t *), uint64_t a10)
{
  void (*v12)(uint64_t *);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  void (*v45)(uint64_t *);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;

  v51 = a8;
  v52 = a7;
  LODWORD(v50) = a6;
  v48 = a4;
  v49 = a5;
  v47 = a3;
  v12 = a9;
  v13 = sub_1BC62BB34();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BC62A7B4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v53 = (uint64_t)a1;
    v27 = a1;
    sub_1BC35E44C();
    swift_willThrowTypedImpl();
    sub_1BC62BAE0();
    v28 = a1;
    v29 = a1;
    v30 = sub_1BC62BB28();
    v31 = sub_1BC62CAC4();
    if (os_log_type_enabled(v30, v31))
    {
      v45 = a9;
      v32 = swift_slowAlloc();
      v46 = a10;
      v33 = (uint8_t *)v32;
      v44 = swift_slowAlloc();
      v59 = v44;
      *(_DWORD *)v33 = 136446210;
      v43 = v33 + 4;
      v53 = (uint64_t)a1;
      v34 = a1;
      sub_1BC62D5D4();
      v35 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1BC62D088();
      swift_unknownObjectRelease();
      v36 = sub_1BC62C6F8();
      v53 = sub_1BC4991F0(v36, v37, &v59);
      sub_1BC62CFF8();
      v12 = v45;
      swift_bridgeObjectRelease();
      sub_1BC3CD7D8(a1);
      sub_1BC3CD7D8(a1);
      _os_log_impl(&dword_1BC30A000, v30, v31, "Unable to load image: %{public}s", v33, 0xCu);
      v38 = v44;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v38, -1, -1);
      MEMORY[0x1BCCF36A8](v33, -1, -1);

      sub_1BC3CD7D8(a1);
    }
    else
    {
      sub_1BC3CD7D8(a1);
      sub_1BC3CD7D8(a1);

    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_8;
  }
  if (!a1)
  {
LABEL_8:
    v39 = objc_msgSend(v51, sel_title);
    v40 = sub_1BC62C680();
    v42 = v41;

    v59 = v47;
    v60 = v48;
    v61 = v49;
    v62 = v50 & 1;
    sub_1BC512C94(v40, v42, (uint64_t)&v59, (uint64_t)&v53);
    swift_bridgeObjectRelease();
    v53 = v53;
    v56 = v56;
    v58 = 0;
    v26 = v57;
    v12(&v53);

    goto LABEL_9;
  }
  v59 = v47;
  v60 = v48;
  v61 = v49;
  v62 = v50 & 1;
  sub_1BC5149B0(a1);
  AccountIcon.init(logo:size:)(a1, (uint64_t)&v59, (uint64_t)&v53);
  v50 = v53;
  v45 = a9;
  v46 = a10;
  v21 = v54;
  v22 = v55;
  v23 = v56;
  v24 = v57;
  v25 = objc_msgSend(v51, sel_identifier);
  sub_1BC62A79C();

  swift_beginAccess();
  sub_1BC512954((unsigned __int8 *)&v53, (uint64_t)v20);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  swift_endAccess();
  v53 = v50;
  v54 = v21;
  v55 = v22;
  v56 = v23;
  v57 = v24;
  v58 = 0;
  v26 = v24;
  v45(&v53);

  sub_1BC3CD7D8(a1);
LABEL_9:

}

uint64_t AccountIconProvider.deinit()
{
  uint64_t v0;

  swift_release();

  sub_1BC348D78(v0 + 32, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  return v0;
}

uint64_t AccountIconProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  sub_1BC348D78(v0 + 32, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC514268(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v3 = *a2;
  v4 = a2[1];
  sub_1BC3A9BF4(a3, (uint64_t)v6, (uint64_t)&qword_1EF42A3B8, (uint64_t)sub_1BC380158, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BC357158);
  swift_bridgeObjectRetain();
  return sub_1BC37D61C((uint64_t)v6, v3, v4);
}

double sub_1BC5142E0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BC512500(*a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24), a3);
}

double sub_1BC5142F8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BC5125AC(*a1, a2, (uint64_t (*)(uint64_t))sub_1BC559014, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, a3);
}

double sub_1BC514328@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC5125AC(*a1, *(_QWORD *)(v2 + 16), (uint64_t (*)(uint64_t))sub_1BC559014, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, a2);
}

uint64_t block_copy_helper_47(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_47()
{
  return swift_release();
}

uint64_t sub_1BC514384(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC513B34(a1, *(void **)(v1 + 16), *(uint64_t (**)(_QWORD *))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BC514390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC5143D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC5143D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4350A0)
  {
    sub_1BC35E44C();
    v0 = sub_1BC62D6C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4350A0);
  }
}

uint64_t sub_1BC514440()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1BC514474(void *a1, char a2)
{
  uint64_t v2;

  sub_1BC513D68(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void **)(v2 + 56), *(void (**)(uint64_t *))(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_1BC5144B0()
{
  uint64_t v0;
  uint64_t (*v1)(_BYTE *);
  _BYTE v3[56];

  v1 = *(uint64_t (**)(_BYTE *))(v0 + 16);
  sub_1BC514390(v0 + 32, (uint64_t)v3);
  return v1(v3);
}

uint64_t type metadata accessor for AccountIconProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for AccountIconProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountIconProvider.__allocating_init(brandImageManager:monogramProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of AccountIconProvider.placeholder(forTitle:size:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of AccountIconProvider.fetchIcon(forAccount:size:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of AccountIconProvider.fetchIcon(for:size:queue:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_1BC51454C(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t *a4, uint64_t a5, void (*a6)(_BYTE *), uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[48];

  v9 = *a2;
  v10 = a2[1];
  v11 = a2[2];
  v12 = *((unsigned __int8 *)a2 + 24);
  sub_1BC514A70(a3, (uint64_t)v14, a4);
  a6(v14);
  return a7(v14, v9, v10, v11, v12);
}

void sub_1BC5145D4(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void (*v21)(uint64_t *);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *, void *);
  void *v28;
  void (*v29)(void *, void *);
  void *v30;
  _QWORD v31[9];
  uint64_t aBlock;
  uint64_t v33;
  void (*v34)(uint64_t, void *, void *);
  void *v35;
  void (*v36)(void *, void *);
  uint64_t v37;

  v9 = swift_allocObject();
  v21 = a4;
  *(_QWORD *)(v9 + 16) = a4;
  *(_QWORD *)(v9 + 24) = a5;
  v10 = *a2;
  v11 = a2[1];
  v24 = a2[2];
  v23 = *((_BYTE *)a2 + 24);
  swift_beginAccess();
  sub_1BC35EBE0(a3 + 32, (uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  sub_1BC38020C(0, &qword_1EF42A3A8, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
  swift_retain();
  sub_1BC62CC8C();
  v12 = sub_1BC348D78((uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  v22 = v11;
  if (v31[0])
  {
    v13 = MEMORY[0x1E0C80A78](v12);
    MEMORY[0x1E0C80A78](v13);
    sub_1BC403CE4(0, &qword_1EF42A3B0);
    sub_1BC62CC8C();
    sub_1BC3801D0((uint64_t)v31, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
    if (v30)
    {
      aBlock = v25;
      v33 = v26;
      v34 = v27;
      v35 = v28;
      v36 = v29;
      v37 = (uint64_t)v30;
      v14 = v30;
      v21(&aBlock);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1BC3801D0((uint64_t)v31, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
  }
  v15 = objc_msgSend(*(id *)(a3 + 24), sel_healthRecordsStore, a4);
  v16 = objc_msgSend(v15, sel_healthStore);

  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EE98]), sel_initWithHealthStore_, v16);
  v18 = (void *)sub_1BC62A784();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BC5149A4;
  *(_QWORD *)(v19 + 24) = v9;
  *(_QWORD *)(v19 + 32) = a3;
  *(_QWORD *)(v19 + 40) = v10;
  *(_QWORD *)(v19 + 48) = v22;
  *(_QWORD *)(v19 + 56) = v24;
  *(_BYTE *)(v19 + 64) = v23;
  v36 = sub_1BC514360;
  v37 = v19;
  aBlock = MEMORY[0x1E0C809B0];
  v33 = 1107296256;
  v34 = sub_1BC46FB0C;
  v35 = &block_descriptor_35;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_fetchAccountWithIdentifier_completion_, v18, v20);
  _Block_release(v20);
  swift_release();

}

uint64_t sub_1BC514980()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC5149A4(uint64_t a1)
{
  uint64_t v1;

  sub_1BC5B6ABC(a1, *(void (**)(_QWORD *))(v1 + 16));
}

id sub_1BC5149B0(id a1)
{
  return a1;
}

uint64_t sub_1BC5149BC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1BC380260(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BC514A08(uint64_t a1)
{
  uint64_t v2;

  sub_1BC380260(0, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC514A54(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC51285C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC514A5C()
{
  return sub_1BC515834();
}

uint64_t sub_1BC514A70(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1BC403CE4(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BC514ABC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC51454C(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), &qword_1EF42A3B0, (uint64_t)&type metadata for AccountIcon, (void (*)(_BYTE *))sub_1BC514AF4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC37DC60);
}

uint64_t sub_1BC514AF4(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 40);
  return a1;
}

uint64_t objectdestroy_7Tm()
{
  uint64_t v0;

  swift_release();
  sub_1BC407FDC(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(_BYTE *)(v0 + 80));
  return swift_deallocObject();
}

uint64_t sub_1BC514B58(uint64_t a1)
{
  sub_1BC4D8564(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(void **)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

unint64_t sub_1BC514B90()
{
  unint64_t result;

  result = qword_1ED6A4EB0;
  if (!qword_1ED6A4EB0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for ResultError, &type metadata for ResultError);
    atomic_store(result, (unint64_t *)&qword_1ED6A4EB0);
  }
  return result;
}

uint64_t sub_1BC514BD4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC514268(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BC514BDC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BC5126A8(a1, **(void ***)(v1 + 24), (void (*)(id, uint64_t, double))sub_1BC48C1F0, (void (*)(void))sub_1BC5A4D20, (void (*)(unint64_t, uint64_t))sub_1BC5A34DC, **(double **)(v1 + 16));
}

unint64_t sub_1BC514C14(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BC5126A8(a1, **(void ***)(v1 + 24), (void (*)(id, uint64_t, double))sub_1BC48C0AC, (void (*)(void))sub_1BC5A4B04, (void (*)(unint64_t, uint64_t))sub_1BC5A34DC, **(double **)(v1 + 16));
}

void sub_1BC514C4C(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *, void *);
  void *v28;
  char v29;
  void *v30;
  _QWORD v31[9];
  uint64_t aBlock;
  uint64_t v33;
  void (*v34)(uint64_t, void *, void *);
  void *v35;
  void (*v36)(void *, void *);
  uint64_t v37;
  char v38;

  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = a4;
  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v24 = *((_BYTE *)a2 + 24);
  swift_beginAccess();
  sub_1BC35EBE0(a3 + 32, (uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  sub_1BC38020C(0, &qword_1EF42A3A8, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
  v9 = a4;
  sub_1BC62CC8C();
  v10 = sub_1BC348D78((uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  v21 = v8;
  if (!v31[0])
  {
    sub_1BC3801D0((uint64_t)v31, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
    v12 = v6;
    v13 = v7;
    goto LABEL_5;
  }
  v20 = v9;
  v11 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  sub_1BC403CE4(0, &qword_1EF42A3B0);
  sub_1BC62CC8C();
  v12 = v6;
  v13 = v7;
  sub_1BC3801D0((uint64_t)v31, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
  if (!v30)
  {
LABEL_5:
    v15 = objc_msgSend(*(id *)(a3 + 24), sel_healthRecordsStore, v20);
    v16 = objc_msgSend(v15, sel_healthStore);

    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EE98]), sel_initWithHealthStore_, v16);
    v14 = (id)sub_1BC62A784();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_1BC515900;
    *(_QWORD *)(v18 + 24) = v23;
    *(_QWORD *)(v18 + 32) = a3;
    *(_QWORD *)(v18 + 40) = v13;
    *(_QWORD *)(v18 + 48) = v12;
    *(_QWORD *)(v18 + 56) = v21;
    *(_BYTE *)(v18 + 64) = v24;
    v36 = sub_1BC514360;
    v37 = v18;
    aBlock = MEMORY[0x1E0C809B0];
    v33 = 1107296256;
    v34 = sub_1BC46FB0C;
    v35 = &block_descriptor_90_0;
    v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v17, sel_fetchAccountWithIdentifier_completion_, v14, v19);
    _Block_release(v19);
    swift_release();

    goto LABEL_6;
  }
  aBlock = v25 & 1;
  v33 = v26;
  v34 = v27;
  v35 = v28;
  v36 = (void (*)(void *, void *))(v29 & 1);
  v37 = (uint64_t)v30;
  v38 = 0;
  v14 = v30;
  sub_1BC406038((uint64_t)&aBlock);
  swift_release();

LABEL_6:
}

void sub_1BC515000(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, void (*a5)(_QWORD *), uint64_t a6)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void (*v30)(uint64_t, void *, void *);
  void *v31;
  char v32;
  void *v33;
  _QWORD v34[9];
  uint64_t aBlock;
  uint64_t v36;
  void (*v37)(uint64_t, void *, void *);
  void *v38;
  void (*v39)(void *, void *);
  uint64_t v40;
  char v41;

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC4D6FF0;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = *a2;
  v24 = a3;
  v25 = a2[1];
  v27 = a2[2];
  v26 = *((_BYTE *)a2 + 24);
  swift_beginAccess();
  sub_1BC35EBE0(a3 + 32, (uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  sub_1BC38020C(0, &qword_1EF42A3A8, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
  v14 = a4;
  swift_retain();
  swift_retain();
  sub_1BC62CC8C();
  v15 = sub_1BC348D78((uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  if (v34[0])
  {
    MEMORY[0x1E0C80A78](v15);
    MEMORY[0x1E0C80A78](v16);
    sub_1BC403CE4(0, &qword_1EF42A3B0);
    sub_1BC62CC8C();
    sub_1BC3801D0((uint64_t)v34, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
    if (v33)
    {
      aBlock = v28 & 1;
      v36 = v29;
      v37 = v30;
      v38 = v31;
      v39 = (void (*)(void *, void *))(v32 & 1);
      v40 = (uint64_t)v33;
      v41 = 0;
      v17 = v14;
      swift_retain();
      sub_1BC4D70A0((uint64_t)&aBlock, a4, a5, a6);
      swift_release();
      swift_release();

      swift_release();
      return;
    }
  }
  else
  {
    sub_1BC3801D0((uint64_t)v34, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
  }
  v18 = objc_msgSend(*(id *)(a3 + 24), sel_healthRecordsStore);
  v19 = objc_msgSend(v18, sel_healthStore);

  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EE98]), sel_initWithHealthStore_, v19);
  v21 = (void *)sub_1BC62A784();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1BC515428;
  *(_QWORD *)(v22 + 24) = v12;
  *(_QWORD *)(v22 + 32) = v24;
  *(_QWORD *)(v22 + 40) = v13;
  *(_QWORD *)(v22 + 48) = v25;
  *(_QWORD *)(v22 + 56) = v27;
  *(_BYTE *)(v22 + 64) = v26;
  v39 = sub_1BC514360;
  v40 = v22;
  aBlock = MEMORY[0x1E0C809B0];
  v36 = 1107296256;
  v37 = sub_1BC46FB0C;
  v38 = &block_descriptor_61_0;
  v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_fetchAccountWithIdentifier_completion_, v21, v23);
  _Block_release(v23);
  swift_release();
  swift_release();

}

void sub_1BC515428(uint64_t a1)
{
  uint64_t v1;

  sub_1BC4D5ECC(a1, *(void (**)(_QWORD *))(v1 + 16));
}

void sub_1BC515434(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void (*v21)(uint64_t *);
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void (*v27)(uint64_t, void *, void *);
  void *v28;
  char v29;
  void *v30;
  _QWORD v31[9];
  uint64_t aBlock;
  uint64_t v33;
  void (*v34)(uint64_t, void *, void *);
  void *v35;
  unint64_t v36;
  uint64_t v37;
  char v38;

  v9 = swift_allocObject();
  v21 = a4;
  *(_QWORD *)(v9 + 16) = a4;
  *(_QWORD *)(v9 + 24) = a5;
  v10 = *a2;
  v11 = a2[1];
  v24 = a2[2];
  v23 = *((_BYTE *)a2 + 24);
  swift_beginAccess();
  sub_1BC35EBE0(a3 + 32, (uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  sub_1BC38020C(0, &qword_1EF42A3A8, (unint64_t *)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon);
  swift_retain();
  sub_1BC62CC8C();
  v12 = sub_1BC348D78((uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_1BC37FB24);
  v22 = v11;
  if (v31[0])
  {
    MEMORY[0x1E0C80A78](v12);
    MEMORY[0x1E0C80A78](v13);
    sub_1BC403CE4(0, &qword_1EF42A3B0);
    sub_1BC62CC8C();
    sub_1BC3801D0((uint64_t)v31, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
    if (v30)
    {
      aBlock = v25 & 1;
      v33 = v26;
      v34 = v27;
      v35 = v28;
      v36 = v29 & 1 | 0x8000000000000000;
      v37 = (uint64_t)v30;
      v38 = 0;
      v14 = v30;
      v21(&aBlock);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1BC3801D0((uint64_t)v31, (uint64_t)&qword_1EF42A3A8, (uint64_t)&qword_1ED6A4290, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(_QWORD))sub_1BC38020C);
  }
  v15 = objc_msgSend(*(id *)(a3 + 24), sel_healthRecordsStore, a4);
  v16 = objc_msgSend(v15, sel_healthStore);

  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EE98]), sel_initWithHealthStore_, v16);
  v18 = (void *)sub_1BC62A784();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BC5159A8;
  *(_QWORD *)(v19 + 24) = v9;
  *(_QWORD *)(v19 + 32) = a3;
  *(_QWORD *)(v19 + 40) = v10;
  *(_QWORD *)(v19 + 48) = v22;
  *(_QWORD *)(v19 + 56) = v24;
  *(_BYTE *)(v19 + 64) = v23;
  v36 = (unint64_t)sub_1BC514360;
  v37 = v19;
  aBlock = MEMORY[0x1E0C809B0];
  v33 = 1107296256;
  v34 = sub_1BC46FB0C;
  v35 = &block_descriptor_76_0;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_fetchAccountWithIdentifier_completion_, v18, v20);
  _Block_release(v20);
  swift_release();

}

uint64_t sub_1BC5157F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5127A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC5157FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC51454C(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), (unint64_t *)&qword_1ED6A4158, (uint64_t)&type metadata for BrowseIcon, (void (*)(_BYTE *))sub_1BC5158A8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC37D99C);
}

uint64_t sub_1BC515834()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32) + 24;
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t sub_1BC5158A8(uint64_t a1)
{
  sub_1BC4D708C(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(void **)(a1 + 40));
  return a1;
}

uint64_t sub_1BC5158DC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC515900(uint64_t a1)
{
  sub_1BC406038(a1);
}

uint64_t objectdestroyTm_9()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

double sub_1BC515938@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC512500(*a1, **(_QWORD **)(v2 + 16), *(_QWORD *)(*(_QWORD *)(v2 + 16) + 8), *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16), *(_BYTE *)(*(_QWORD *)(v2 + 16) + 24), a2);
}

uint64_t sub_1BC515994()
{
  return sub_1BC37FBD0();
}

uint64_t type metadata accessor for DownloadDetailsDataSource()
{
  uint64_t result;

  result = qword_1EF4350D0;
  if (!qword_1EF4350D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC5159E8()
{
  return swift_initClassMetadata2();
}

void sub_1BC515A5C(uint64_t a1)
{
  id v1;

  v1 = *(id *)(a1 + qword_1EF4350A8);
  sub_1BC515FB8(v1);

}

uint64_t sub_1BC515A9C(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  char *v9;
  uint64_t (**v10)(uint64_t);
  id v11;
  void *v12;
  uint64_t v13;
  objc_super v15;
  uint64_t v16;
  char v17;

  *(_QWORD *)(v2 + qword_1EF4350C0) = 0;
  *(_QWORD *)(v2 + qword_1EF4350C8) = 0;
  *(_QWORD *)(v2 + qword_1EF4350A8) = a1;
  *(_QWORD *)(v2 + qword_1EF4350B0) = a2;
  *(_QWORD *)(v2 + qword_1EF4350B8) = 0;
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v4 = a1;
  swift_retain();
  swift_retain();
  v5 = sub_1BC62B678();
  swift_retain();
  sub_1BC515FB8(v4);
  v6 = swift_allocObject();
  swift_weakInit();
  v7 = (objc_class *)type metadata accessor for IngestionStateChangeListener();
  v8 = objc_allocWithZone(v7);
  v16 = 0;
  v17 = 1;
  sub_1BC37D024();
  swift_allocObject();
  v9 = (char *)v8;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_changePublisher] = sub_1BC62BF24();
  v10 = (uint64_t (**)(uint64_t))&v9[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_handler];
  *v10 = sub_1BC516FC8;
  v10[1] = (uint64_t (*)(uint64_t))v6;
  swift_retain();

  v15.receiver = v9;
  v15.super_class = v7;
  v11 = objc_msgSendSuper2(&v15, sel_init);
  swift_release();
  v12 = *(void **)(v5 + qword_1EF4350C0);
  *(_QWORD *)(v5 + qword_1EF4350C0) = v11;

  v13 = sub_1BC5166E4();
  swift_release();
  swift_release();

  swift_release();
  *(_QWORD *)(v5 + qword_1EF4350C8) = v13;
  swift_release();
  return v5;
}

uint64_t sub_1BC515C9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_1BC62B3C0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v13 - v9;
  if (objc_msgSend(a3, sel_state) == (id)5)
  {
    sub_1BC62B330();
    sub_1BC62B324();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    sub_1BC62B330();
  }
  v11 = sub_1BC62B3B4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v11;
}

uint64_t sub_1BC515D8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t (*v14)(uint64_t);
  void *v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v2 = sub_1BC62C47C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62C4AC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    v12 = *(_QWORD *)(result + qword_1EF4350B8);
    *(_QWORD *)(result + qword_1EF4350B8) = a1;
    if (v12 != a1)
    {
      sub_1BC35A280();
      v16 = sub_1BC62CC74();
      aBlock[4] = sub_1BC516FD0;
      aBlock[5] = v11;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC39BE70;
      aBlock[3] = &block_descriptor_50;
      v13 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      sub_1BC62C494();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC35811C();
      sub_1BC62D0A0();
      v15 = (void *)v16;
      MEMORY[0x1BCCF1F68](0, v9, v5, v13);
      _Block_release(v13);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC515FB8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  char v63;
  uint64_t result;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[48];

  v3 = sub_1BC62C4D0();
  v71 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v70 = (uint64_t *)((char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v1 + qword_1EF4350A8);
  v73 = v1;
  *(_QWORD *)(v1 + qword_1EF4350A8) = a1;
  v6 = a1;

  v7 = sub_1BC62C680();
  v9 = v8;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v67 = v3;
  v10 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v11 = sub_1BC62A4A8();
  v13 = v12;
  swift_bridgeObjectRelease();

  v66 = v6;
  v14 = objc_msgSend(v6, sel_displayableLastDownloadDate);
  v15 = sub_1BC62C680();
  v17 = v16;

  sub_1BC359F44();
  v18 = swift_allocObject();
  v72 = xmmword_1BC6395A0;
  *(_OWORD *)(v18 + 16) = xmmword_1BC6395A0;
  v68 = v7;
  v69 = v9;
  *(_QWORD *)(v18 + 32) = v7;
  *(_QWORD *)(v18 + 40) = v9;
  strcpy((char *)(v18 + 48), "LastDownloaded");
  *(_BYTE *)(v18 + 63) = -18;
  swift_bridgeObjectRetain();
  v19 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v20 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v20)
  {
    v21 = sub_1BC62C680();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  v24 = type metadata accessor for TitleSubtitleDetailItem(0);
  v25 = (_QWORD *)swift_allocObject();
  sub_1BC62A7A8();
  v25[2] = v11;
  v25[3] = v13;
  v25[4] = v15;
  v25[5] = v17;
  v26 = MEMORY[0x1E0DEE9D8];
  v25[6] = 0;
  v25[7] = v26;
  v25[8] = v21;
  v25[9] = v23;
  if (*(_QWORD *)(v73 + qword_1EF4350B8) == 3)
  {
    v27 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v66 = (id)sub_1BC62A4A8();
    v29 = v28;
    swift_bridgeObjectRelease();

    v30 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v31 = sub_1BC62A4A8();
    v33 = v32;
    swift_bridgeObjectRelease();

    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v72;
    v35 = v69;
    *(_QWORD *)(v34 + 32) = v68;
    *(_QWORD *)(v34 + 40) = v35;
    *(_QWORD *)(v34 + 48) = 0x737574617453;
    *(_QWORD *)(v34 + 56) = 0xE600000000000000;
    v36 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v37 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v37)
    {
      v38 = sub_1BC62C680();
      v40 = v39;

    }
    else
    {
      v38 = 0;
      v40 = 0;
    }
    v56 = type metadata accessor for TitleSubtitleDetailItemWithSpinner(0);
    v57 = (_QWORD *)swift_allocObject();
    sub_1BC62A7A8();
    v57[2] = v66;
    v57[3] = v29;
    v57[4] = v31;
    v57[5] = v33;
    v57[6] = v38;
    v57[7] = v40;
    v75 = v56;
    v76 = sub_1BC347F0C(&qword_1EF42D200, type metadata accessor for TitleSubtitleDetailItemWithSpinner, (uint64_t)&unk_1BC63D9C0);
    *(_QWORD *)&v74 = v57;
    sub_1BC34E718(&v74, (uint64_t)v77);
    v58 = v67;
  }
  else
  {
    v41 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v42 = sub_1BC62A4A8();
    v44 = v43;
    swift_bridgeObjectRelease();

    v45 = objc_msgSend(v66, sel_displayableStatus);
    v46 = sub_1BC62C680();
    v48 = v47;

    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v72;
    v50 = v69;
    *(_QWORD *)(v49 + 32) = v68;
    *(_QWORD *)(v49 + 40) = v50;
    *(_QWORD *)(v49 + 48) = 0x737574617453;
    *(_QWORD *)(v49 + 56) = 0xE600000000000000;
    v51 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v52 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v52)
    {
      v53 = sub_1BC62C680();
      v55 = v54;

    }
    else
    {
      v53 = 0;
      v55 = 0;
    }
    v58 = v67;
    v59 = (_QWORD *)swift_allocObject();
    sub_1BC62A7A8();
    v59[2] = v42;
    v59[3] = v44;
    v59[4] = v46;
    v59[5] = v48;
    v59[6] = 0;
    v59[7] = MEMORY[0x1E0DEE9D8];
    v59[8] = v53;
    v59[9] = v55;
    v75 = v24;
    v76 = sub_1BC347F0C(&qword_1EF42B7C0, type metadata accessor for TitleSubtitleDetailItem, (uint64_t)&unk_1BC63DA50);
    *(_QWORD *)&v74 = v59;
    sub_1BC34E718(&v74, (uint64_t)v77);
  }
  sub_1BC35A280();
  v60 = sub_1BC62CC74();
  v62 = v70;
  v61 = v71;
  *v70 = v60;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v61 + 104))(v62, *MEMORY[0x1E0DEF740], v58);
  v63 = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v61 + 8))(v62, v58);
  if ((v63 & 1) != 0)
  {
    sub_1BC357158(0, &qword_1EF42C5F0, (uint64_t (*)(uint64_t))sub_1BC37AE0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = v72;
    *(_QWORD *)(v65 + 56) = v24;
    *(_QWORD *)(v65 + 64) = sub_1BC347F0C(&qword_1EF42B7C0, type metadata accessor for TitleSubtitleDetailItem, (uint64_t)&unk_1BC63DA50);
    *(_QWORD *)(v65 + 32) = v25;
    sub_1BC34E674((uint64_t)v77, v65 + 72);
    swift_retain();
    sub_1BC62B2E8();
    swift_release();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v77);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC5166E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t result;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *v0;
  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)((char *)v0 + qword_1EF4350C0);
  if (v6)
  {
    v7 = *(void **)(*(uint64_t *)((char *)v0 + qword_1EF4350B0) + 16);
    v8 = v6;
    v9 = objc_msgSend(v7, sel_healthStore);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EEB8]), sel_initWithHealthStore_, v9);

    objc_msgSend(v10, sel_addIngestionStateListener_, v8);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v8;
    type metadata accessor for CancellationToken();
    result = swift_allocObject();
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = sub_1BC516F68;
    *(_QWORD *)(result + 32) = v11;
  }
  else
  {
    sub_1BC62BAF8();
    v13 = sub_1BC62BB28();
    v14 = sub_1BC62CAB8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v19 = v16;
      v20 = v1;
      *(_DWORD *)v15 = 136446210;
      swift_getMetatypeMetadata();
      v17 = sub_1BC62C6E0();
      v20 = sub_1BC4991F0(v17, v18, &v19);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v13, v14, "[%{public}s]: ingestionStateChangeListener is nil", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v16, -1, -1);
      MEMORY[0x1BCCF36A8](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  return result;
}

uint64_t sub_1BC516940()
{
  uint64_t v0;

  swift_release();
  return swift_release();
}

uint64_t sub_1BC51698C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + qword_1EF4350C8);
  if (v1)
  {
    swift_beginAccess();
    if ((*(_BYTE *)(v1 + 16) & 1) == 0)
    {
      *(_BYTE *)(v1 + 16) = 1;
      swift_beginAccess();
      v2 = *(void (**)(uint64_t))(v1 + 24);
      swift_retain();
      v3 = swift_retain();
      v2(v3);
      swift_release();
      swift_release();
    }
  }
  v4 = sub_1BC62B69C();

  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1BC516A7C()
{
  sub_1BC51698C();
  return swift_deallocClassInstance();
}

void sub_1BC516A98()
{
  sub_1BC516AC8();
}

void sub_1BC516AB0()
{
  sub_1BC516AC8();
}

void sub_1BC516AC8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC516AF0()
{
  return type metadata accessor for DownloadDetailsDataSource();
}

uint64_t sub_1BC516AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t result;
  id v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  _QWORD v28[2];

  v7 = sub_1BC62A7B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v11);
  if (sub_1BC62C680() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v14 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_13:
    if (qword_1ED6A4888 != -1)
      swift_once();
    v18 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC62BD44();
    v19 = sub_1BC62AD3C();
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
    swift_allocObject();
    v21 = sub_1BC62AD24();
    a3[3] = v19;
    result = sub_1BC347F0C((unint64_t *)&qword_1ED6A4108, v20, MEMORY[0x1E0D2A8A0]);
    a3[4] = result;
    *a3 = v21;
    return result;
  }
  if (sub_1BC62C680() == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
      goto LABEL_21;
  }
  if (objc_msgSend(*(id *)(v3 + qword_1EF4350A8), sel_state) != (id)5)
  {
LABEL_21:
    v26 = sub_1BC62AE20();
    v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
    a3[3] = v26;
    a3[4] = sub_1BC347F0C(&qword_1EF42A050, v27, MEMORY[0x1E0D2AB20]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1BC62AE14();
  }
  if (qword_1ED6A4888 != -1)
    swift_once();
  v23 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v28[0] = 0x74497265746F6F46;
  v28[1] = 0xEB000000005F6D65;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v24 = sub_1BC62B624();
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
  a3[3] = v24;
  a3[4] = sub_1BC347F0C(&qword_1EF42A058, v25, MEMORY[0x1E0D2B6A8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC62B618();
}

uint64_t sub_1BC516F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BC516AF8(a1, a2, a3);
}

uint64_t sub_1BC516F3C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC516F68()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_removeIngestionStateListener_, *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC516F78()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC516F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC515C9C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1BC516FA4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC516FC8(uint64_t a1)
{
  return sub_1BC515D8C(a1);
}

void sub_1BC516FD0()
{
  uint64_t v0;

  sub_1BC515A5C(v0);
}

uint64_t block_copy_helper_48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_48()
{
  return swift_release();
}

Swift::String_optional __swiftcall HKSignedClinicalDataGroup.multiRecordStatusText()()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  Swift::String_optional result;

  v1 = objc_msgSend(v0, sel_medicalRecords);
  if (!v1)
  {
    v7 = 0;
    goto LABEL_10;
  }
  sub_1BC34B6A0(0, &qword_1ED6A52D8);
  v2 = sub_1BC62C878();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v3 >= 2)
      goto LABEL_4;
LABEL_9:
    swift_bridgeObjectRelease();
    v7 = 0;
    v1 = 0;
    goto LABEL_10;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3 < 2)
    goto LABEL_9;
LABEL_4:
  if (qword_1EF428578 != -1)
    swift_once();
  v4 = (id)qword_1EF42F710;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC3B30F0();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC639590;
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v5 + 64) = v6;
  *(_QWORD *)(v5 + 32) = v3;
  v7 = sub_1BC62C65C();
  v1 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  v9 = v7;
  v10 = v1;
  result.value._object = v10;
  result.value._countAndFlagsBits = v9;
  return result;
}

uint64_t HKSignedClinicalDataGroup.deletionConfirmationMessage(whenDeleting:)(void *a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v5 = objc_msgSend(v1, sel_medicalRecords);
  if (v5)
  {
    v6 = v5;
    sub_1BC34B6A0(0, &qword_1ED6A52D8);
    v7 = sub_1BC62C878();

    v8 = a1;
    v9 = sub_1BC517D90(v7);
    swift_bridgeObjectRelease();

    if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
    {
      v67 = swift_bridgeObjectRetain();
      v10 = (uint64_t)sub_1BC3D6838(v67);
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v72 = v10;
    sub_1BC363320(&v72);
    swift_bridgeObjectRelease();
    v11 = v72;
    if (v72 < 0 || (v72 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v12 = sub_1BC62D3B8();
      swift_release();
    }
    else
    {
      v12 = *(_QWORD *)(v72 + 16);
    }
    if (!v12)
    {
      swift_release();
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      goto LABEL_21;
    }
    v72 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD748(0, v12 & ~(v12 >> 63), 0);
    if ((v12 & 0x8000000000000000) == 0)
    {
      v13 = 0;
      v3 = (_QWORD *)v72;
      v68 = v11 & 0xC000000000000001;
      v69 = v12;
      v70 = v11;
      do
      {
        v71 = (uint64_t)v3;
        if (v68)
          v14 = (id)MEMORY[0x1BCCF24CC](v13, v11);
        else
          v14 = *(id *)(v11 + 8 * v13 + 32);
        v15 = v14;
        v16 = objc_msgSend(v14, sel_meaningfulDateDisplayStringWithPreferredForm_showTime_, 1, 0);
        v17 = sub_1BC62C680();
        v19 = v18;

        if (qword_1EF428588 != -1)
          swift_once();
        v20 = (id)qword_1EF42F740;
        swift_bridgeObjectRetain();
        sub_1BC62A4A8();
        swift_bridgeObjectRelease();

        sub_1BC3B30F0();
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1BC6395A0;
        v22 = objc_msgSend(v15, sel_preferredDisplayName, 0xE000000000000000);
        v23 = sub_1BC62C680();
        v25 = v24;

        v26 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
        v27 = sub_1BC3644C0();
        *(_QWORD *)(v21 + 32) = v23;
        *(_QWORD *)(v21 + 40) = v25;
        *(_QWORD *)(v21 + 96) = v26;
        *(_QWORD *)(v21 + 104) = v27;
        *(_QWORD *)(v21 + 64) = v27;
        *(_QWORD *)(v21 + 72) = v17;
        *(_QWORD *)(v21 + 80) = v19;
        v28 = sub_1BC62C65C();
        v30 = v29;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v3 = (_QWORD *)v71;
        v72 = v71;
        v32 = *(_QWORD *)(v71 + 16);
        v31 = *(_QWORD *)(v71 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_1BC3BD748(v31 > 1, v32 + 1, 1);
          v3 = (_QWORD *)v72;
        }
        ++v13;
        v3[2] = v32 + 1;
        v33 = &v3[2 * v32];
        v33[4] = v28;
        v33[5] = v30;
        v11 = v70;
      }
      while (v69 != v13);
      swift_release();
LABEL_21:
      v2 = v3[2];
      switch(v2)
      {
        case 0:
          swift_bridgeObjectRelease();
          return 0;
        case 1:
          if (qword_1EF428588 == -1)
            goto LABEL_34;
          goto LABEL_50;
        case 2:
          if (qword_1EF428588 == -1)
            goto LABEL_25;
          goto LABEL_46;
        case 3:
          if (qword_1EF428588 == -1)
            goto LABEL_29;
          goto LABEL_48;
        default:
          if (qword_1EF428588 == -1)
            goto LABEL_38;
          goto LABEL_52;
      }
    }
    __break(1u);
LABEL_46:
    swift_once();
LABEL_25:
    v35 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC3B30F0();
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BC6395A0;
    v37 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
    v38 = sub_1BC3644C0();
    *(_QWORD *)(v36 + 64) = v38;
    if (v3[2])
    {
      v39 = v38;
      v40 = v3[5];
      *(_QWORD *)(v36 + 32) = v3[4];
      *(_QWORD *)(v36 + 40) = v40;
      *(_QWORD *)(v36 + 96) = v37;
      *(_QWORD *)(v36 + 104) = v39;
      if (v3[2] >= 2uLL)
      {
        v42 = v3[6];
        v41 = v3[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v36 + 72) = v42;
        *(_QWORD *)(v36 + 80) = v41;
LABEL_36:
        v34 = sub_1BC62C65C();
        swift_bridgeObjectRelease();
LABEL_41:
        swift_bridgeObjectRelease();
        return v34;
      }
    }
    else
    {
      __break(1u);
LABEL_48:
      swift_once();
LABEL_29:
      v43 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      sub_1BC3B30F0();
      v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_1BC6398E0;
      v45 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v44 + 56) = MEMORY[0x1E0DEA968];
      v46 = sub_1BC3644C0();
      *(_QWORD *)(v44 + 64) = v46;
      if (v3[2])
      {
        v47 = v46;
        v48 = v3[5];
        *(_QWORD *)(v44 + 32) = v3[4];
        *(_QWORD *)(v44 + 40) = v48;
        *(_QWORD *)(v44 + 96) = v45;
        *(_QWORD *)(v44 + 104) = v47;
        if (v3[2] >= 2uLL)
        {
          v49 = v3[7];
          *(_QWORD *)(v44 + 72) = v3[6];
          *(_QWORD *)(v44 + 80) = v49;
          *(_QWORD *)(v44 + 136) = v45;
          *(_QWORD *)(v44 + 144) = v47;
          if (v3[2] >= 3uLL)
          {
            v51 = v3[8];
            v50 = v3[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v44 + 112) = v51;
            *(_QWORD *)(v44 + 120) = v50;
            goto LABEL_36;
          }
LABEL_57:
          __break(1u);
          swift_release();
          __break(1u);
          JUMPOUT(0x1BC517AB0);
        }
        goto LABEL_55;
      }
      __break(1u);
LABEL_50:
      swift_once();
LABEL_34:
      v52 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      sub_1BC3B30F0();
      v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_1BC639590;
      *(_QWORD *)(v53 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v53 + 64) = sub_1BC3644C0();
      if (v3[2])
      {
        v55 = v3[4];
        v54 = v3[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v53 + 32) = v55;
        *(_QWORD *)(v53 + 40) = v54;
        goto LABEL_36;
      }
      __break(1u);
LABEL_52:
      swift_once();
LABEL_38:
      v56 = (id)qword_1EF42F740;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v2 - 2, 0xE000000000000000);
      sub_1BC3B30F0();
      v58 = swift_allocObject();
      *(_OWORD *)(v58 + 16) = xmmword_1BC6398E0;
      v59 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v58 + 56) = MEMORY[0x1E0DEA968];
      v60 = sub_1BC3644C0();
      *(_QWORD *)(v58 + 64) = v60;
      if (v3[2])
      {
        v61 = v60;
        v62 = v3[5];
        *(_QWORD *)(v58 + 32) = v3[4];
        *(_QWORD *)(v58 + 40) = v62;
        *(_QWORD *)(v58 + 96) = v59;
        *(_QWORD *)(v58 + 104) = v61;
        if (v3[2] >= 2uLL)
        {
          v64 = v3[6];
          v63 = v3[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v58 + 72) = v64;
          *(_QWORD *)(v58 + 80) = v63;
          *(_QWORD *)(v58 + 136) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
          *(_QWORD *)(v58 + 144) = sub_1BC4B5264();
          *(_QWORD *)(v58 + 112) = v57;
          v65 = v57;
          v34 = sub_1BC62C65C();
          swift_bridgeObjectRelease();

          goto LABEL_41;
        }
        goto LABEL_56;
      }
      __break(1u);
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  return 0;
}

id sub_1BC517AC0(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = a3;
  v5 = a1;
  HKSignedClinicalDataGroup.deletionConfirmationMessage(whenDeleting:)(v4);
  v7 = v6;

  if (v7)
  {
    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  return v8;
}

Swift::Bool __swiftcall HKSignedClinicalDataGroup.passExistsInWallet()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = MEMORY[0x1E0C80A78](v2).n128_u64[0];
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, sel_mainRecord, v4);
  if (v7)
  {
    v8 = v7;
    sub_1BC62B9FC();
    swift_allocObject();
    sub_1BC62B9F0();
    sub_1BC62B9C0();
    v10 = v9;

    swift_release();
    if (v10)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
    sub_1BC62BAF8();
    v12 = v1;
    v13 = sub_1BC62BB28();
    v14 = sub_1BC62CAC4();
    v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v16 = swift_slowAlloc();
      v25 = v15;
      v17 = (uint8_t *)v16;
      v26 = swift_slowAlloc();
      v28 = v26;
      *(_DWORD *)v17 = 136446210;
      v24[1] = v17 + 4;
      v18 = v12;
      v19 = objc_msgSend(v18, sel_description);
      v20 = sub_1BC62C680();
      v22 = v21;

      v27 = sub_1BC4991F0(v20, v22, &v28);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v13, (os_log_type_t)v25, "%{public}s: no mainRecord on SCD group, cannot determine existing pass in Wallet", v17, 0xCu);
      v23 = v26;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v23, -1, -1);
      MEMORY[0x1BCCF36A8](v17, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return 0;
}

uint64_t sub_1BC517D90(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x1BCCF24CC](v3, a1);
LABEL_9:
        v6 = v5;
        v7 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_15;
        sub_1BC34B6A0(0, &qword_1ED6A52D8);
        if ((sub_1BC62CEB4() & 1) != 0)
        {

        }
        else
        {
          sub_1BC62D268();
          sub_1BC62D298();
          v4 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_1BC62D2A4();
          sub_1BC62D274();
        }
        ++v3;
        if (v7 == v2)
          return v9;
      }
      if (v3 < *(_QWORD *)(v4 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v2 = sub_1BC62D3B8();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC517F30()
{
  return sub_1BC518EDC();
}

uint64_t sub_1BC517F50(uint64_t a1)
{
  return sub_1BC518FB0(a1, &OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
}

uint64_t (*sub_1BC517F5C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id TableViewSectionConfiguration.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___HRUITableViewSectionConfiguration_sections] = MEMORY[0x1E0DEE9D8];
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TableViewSectionConfiguration();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for TableViewSectionConfiguration()
{
  return objc_opt_self();
}

uint64_t sub_1BC518054(void *a1)
{
  return sub_1BC519384(a1, &OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
}

id sub_1BC51806C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  id v9;

  if (a4)
  {
    sub_1BC359F44();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v8 + 32) = a3;
    *(_QWORD *)(v8 + 40) = a4;
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v9 = sub_1BC5181E0(a1, a2, v8);
  swift_bridgeObjectRelease();
  return v9;
}

id sub_1BC5181E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  id v21;
  id v22;
  _QWORD *v23;
  id v24;
  id v26;
  uint64_t v27;
  objc_super v28;
  objc_super v29;

  v6 = (objc_class *)type metadata accessor for TableViewSection();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = &v7[OBJC_IVAR___HRUITableViewSection_identifier];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v7[OBJC_IVAR___HRUITableViewSection_headerString];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v7[OBJC_IVAR___HRUITableViewSection_footerString];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v7[OBJC_IVAR___HRUITableViewSection_rows] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v7[OBJC_IVAR___HRUITableViewSection_estimatedNumRows] = 0;
  swift_beginAccess();
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29.receiver = v7;
  v29.super_class = v6;
  v11 = (char *)objc_msgSendSuper2(&v29, sel_init);
  v12 = v11;
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    v26 = v11;
    v14 = &v11[OBJC_IVAR___HRUITableViewSection_rows];
    v15 = (objc_class *)type metadata accessor for TableViewRow();
    swift_bridgeObjectRetain();
    v16 = (uint64_t *)(a3 + 40);
    do
    {
      v18 = *(v16 - 1);
      v17 = *v16;
      v19 = (char *)objc_allocWithZone(v15);
      v20 = &v19[OBJC_IVAR___HRUITableViewRow_reuseIdentifier];
      *(_QWORD *)v20 = v18;
      *((_QWORD *)v20 + 1) = v17;
      v28.receiver = v19;
      v28.super_class = v15;
      swift_bridgeObjectRetain_n();
      v21 = objc_msgSendSuper2(&v28, sel_init);
      swift_beginAccess();
      v22 = v21;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((*(_QWORD *)v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v14 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        sub_1BC62C8B4();
      v16 += 2;
      sub_1BC62C8D8();
      sub_1BC62C890();
      swift_endAccess();
      swift_bridgeObjectRelease();

      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v12 = v26;
  }
  v23 = (_QWORD *)(v27 + OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
  swift_beginAccess();
  v24 = v12;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  swift_endAccess();
  return v24;
}

id TableViewSection.__allocating_init(identifier:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  objc_super v10;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___HRUITableViewSection_identifier];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v5[OBJC_IVAR___HRUITableViewSection_headerString];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v5[OBJC_IVAR___HRUITableViewSection_footerString];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR___HRUITableViewSection_rows] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v5[OBJC_IVAR___HRUITableViewSection_estimatedNumRows] = 0;
  swift_beginAccess();
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  swift_bridgeObjectRelease();
  v10.receiver = v5;
  v10.super_class = v2;
  return objc_msgSendSuper2(&v10, sel_init);
}

id TableViewRow.__allocating_init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___HRUITableViewRow_reuseIdentifier];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t sub_1BC5185F4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
  swift_beginAccess();
  *v1 = MEMORY[0x1E0DEE9D8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC51869C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
  swift_beginAccess();
  if (!((unint64_t)*v3 >> 62))
  {
    if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
      goto LABEL_3;
    return 0;
  }
  swift_bridgeObjectRetain();
  v9 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (v9 <= a1)
    return 0;
LABEL_3:
  v4 = *v3;
  if ((*v3 & 0xC000000000000001) == 0)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
    {
      v5 = (char *)*(id *)(v4 + 8 * a1 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v5 = (char *)MEMORY[0x1BCCF24CC](a1, v4);
  swift_bridgeObjectRelease();
LABEL_7:
  v6 = &v5[OBJC_IVAR___HRUITableViewSection_rows];
  swift_beginAccess();
  v7 = *(_QWORD *)v6;
  swift_bridgeObjectRetain();

  if (v7 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    v8 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_9:
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1BC518848(void *a1)
{
  uint64_t v1;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t result;
  unint64_t v10;
  uint64_t v11;
  id v12;

  v3 = (unint64_t *)(v1 + OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
  swift_beginAccess();
  if (*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((uint64_t)objc_msgSend(a1, sel_section) >= v4)
    return 0;
  v5 = (unint64_t)objc_msgSend(a1, sel_section);
  v6 = v5;
  v7 = *v3;
  if ((*v3 & 0xC000000000000001) == 0)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v5 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v3 = (unint64_t *)*(id *)(v7 + 8 * v5 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  v3 = (unint64_t *)MEMORY[0x1BCCF24CC](v6, v7);
  swift_bridgeObjectRelease();
LABEL_8:
  v7 = (unint64_t)v3 + OBJC_IVAR___HRUITableViewSection_rows;
  swift_beginAccess();
  if (!(*(_QWORD *)v7 >> 62))
  {
    v8 = *(_QWORD *)((*(_QWORD *)v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_10;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  v8 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
LABEL_10:
  if ((uint64_t)objc_msgSend(a1, sel_row) >= v8)
  {

    return 0;
  }
  result = (unint64_t)objc_msgSend(a1, sel_row);
  v10 = result;
  v11 = *(_QWORD *)v7;
  if ((*(_QWORD *)v7 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v12 = (id)MEMORY[0x1BCCF24CC](v10, v11);

    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 8 * result + 32);

    return (unint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC518AFC()
{
  char *v0;
  char *v1;
  id v2;
  char *v3;
  objc_super v5;
  uint64_t v6;
  unint64_t v7;

  v1 = v0;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v6 = 60;
  v7 = 0xE100000000000000;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TableViewSectionConfiguration();
  v2 = objc_msgSendSuper2(&v5, sel_description);
  sub_1BC62C680();

  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v3 = &v1[OBJC_IVAR___HRUITableViewSectionConfiguration_sections];
  swift_beginAccess();
  if (*(_QWORD *)v3 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return v6;
}

id TableViewSectionConfiguration.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for TableViewSectionConfiguration);
}

uint64_t sub_1BC518C88()
{
  return sub_1BC38BBC4(&OBJC_IVAR___HRUITableViewSection_identifier);
}

uint64_t sub_1BC518CA0(uint64_t a1, uint64_t a2)
{
  return sub_1BC38B344(a1, a2, &OBJC_IVAR___HRUITableViewSection_identifier);
}

uint64_t (*sub_1BC518CAC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC518CFC()
{
  return sub_1BC38BBC4(&OBJC_IVAR___HRUITableViewSection_headerString);
}

uint64_t sub_1BC518D14(uint64_t a1, uint64_t a2)
{
  return sub_1BC38B344(a1, a2, &OBJC_IVAR___HRUITableViewSection_headerString);
}

uint64_t (*sub_1BC518D20())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC518D70()
{
  return sub_1BC38BBC4(&OBJC_IVAR___HRUITableViewSection_footerString);
}

uint64_t sub_1BC518D88(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  if (a3)
  {
    v6 = sub_1BC62C680();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC518E00(uint64_t a1, uint64_t a2)
{
  return sub_1BC38B344(a1, a2, &OBJC_IVAR___HRUITableViewSection_footerString);
}

uint64_t (*sub_1BC518E0C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1BC518E64(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;
  void *v6;

  v5 = swift_beginAccess();
  a4(v5);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BC518ED0()
{
  return sub_1BC518EDC();
}

uint64_t sub_1BC518EDC()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC518F34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), _QWORD *a5)
{
  uint64_t v7;
  uint64_t *v8;

  a4();
  v7 = sub_1BC62C878();
  v8 = (uint64_t *)(a1 + *a5);
  swift_beginAccess();
  *v8 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC518FA4(uint64_t a1)
{
  return sub_1BC518FB0(a1, &OBJC_IVAR___HRUITableViewSection_rows);
}

uint64_t sub_1BC518FB0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC518FFC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC519060())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void *sub_1BC5190EC()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___HRUITableViewSection_estimatedNumRows);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1BC519194(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___HRUITableViewSection_estimatedNumRows);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_1BC5191E4(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___HRUITableViewSection_estimatedNumRows);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_1BC519244())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id TableViewSection.init(identifier:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  char *v6;
  char *v7;
  objc_super v9;

  v5 = &v2[OBJC_IVAR___HRUITableViewSection_identifier];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v2[OBJC_IVAR___HRUITableViewSection_headerString];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v2[OBJC_IVAR___HRUITableViewSection_footerString];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR___HRUITableViewSection_rows] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v2[OBJC_IVAR___HRUITableViewSection_estimatedNumRows] = 0;
  swift_beginAccess();
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  swift_bridgeObjectRelease();
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for TableViewSection();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1BC519378(void *a1)
{
  return sub_1BC519384(a1, &OBJC_IVAR___HRUITableViewSection_rows);
}

uint64_t sub_1BC519384(void *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;
  id v5;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  v5 = a1;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  return swift_endAccess();
}

uint64_t type metadata accessor for TableViewSection()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TableViewRow()
{
  return objc_opt_self();
}

void sub_1BC519468(char *a1, uint64_t a2, void *a3, _QWORD *a4)
{
  char *v6;
  id v7;
  char *v8;

  v6 = &a1[*a4];
  swift_beginAccess();
  v7 = a3;
  v8 = a1;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  swift_endAccess();

}

uint64_t sub_1BC519518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  objc_class *v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  objc_super v11;

  v5 = (objc_class *)type metadata accessor for TableViewRow();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = &v6[OBJC_IVAR___HRUITableViewRow_reuseIdentifier];
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  v11.receiver = v6;
  v11.super_class = v5;
  swift_bridgeObjectRetain();
  objc_msgSendSuper2(&v11, sel_init);
  v8 = (_QWORD *)(v2 + OBJC_IVAR___HRUITableViewSection_rows);
  v9 = swift_beginAccess();
  MEMORY[0x1BCCF1B30](v9);
  if (*(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  return swift_endAccess();
}

void TableViewSection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TableViewSection.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for TableViewSection);
}

uint64_t TableViewRow.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___HRUITableViewRow_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id TableViewRow.init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_super v5;

  v3 = &v2[OBJC_IVAR___HRUITableViewRow_reuseIdentifier];
  *(_QWORD *)v3 = a1;
  *((_QWORD *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for TableViewRow();
  return objc_msgSendSuper2(&v5, sel_init);
}

id TableViewRow.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TableViewRow.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TableViewRow.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for TableViewRow);
}

uint64_t sub_1BC519964@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR___HRUITableViewSectionConfiguration_sections, a2);
}

uint64_t sub_1BC519970(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC518FFC(a1, a2, a3, a4, &OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
}

uint64_t sub_1BC51998C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___HRUITableViewSection_identifier, a2);
}

uint64_t sub_1BC519998(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC38B2C8(a1, a2, a3, a4, &OBJC_IVAR___HRUITableViewSection_identifier);
}

uint64_t sub_1BC5199B4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___HRUITableViewSection_headerString, a2);
}

uint64_t sub_1BC5199C0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC38B2C8(a1, a2, a3, a4, &OBJC_IVAR___HRUITableViewSection_headerString);
}

uint64_t sub_1BC5199DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___HRUITableViewSection_footerString, a2);
}

uint64_t sub_1BC5199E8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC38B2C8(a1, a2, a3, a4, &OBJC_IVAR___HRUITableViewSection_footerString);
}

uint64_t sub_1BC519A04@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR___HRUITableViewSection_rows, a2);
}

uint64_t keypath_getTm_0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC519A60(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC518FFC(a1, a2, a3, a4, &OBJC_IVAR___HRUITableViewSection_rows);
}

id sub_1BC519A7C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR___HRUITableViewSection_estimatedNumRows);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for TableViewSectionConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.sections.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.sections.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.sections.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.add(section:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.addSection(identifier:firstRowReuseIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.addSection(identifier:rowReuseIdentifiers:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.removeAllSections()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.numberOfRows(in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.row(at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t method lookup function for TableViewSection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TableViewSection.identifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TableViewSection.identifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TableViewSection.identifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TableViewSection.headerString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TableViewSection.headerString.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of TableViewSection.headerString.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TableViewSection.footerString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TableViewSection.footerString.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of TableViewSection.footerString.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TableViewSection.rows.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TableViewSection.rows.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TableViewSection.rows.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TableViewSection.estimatedNumRows.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of TableViewSection.estimatedNumRows.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of TableViewSection.estimatedNumRows.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of TableViewSection.__allocating_init(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of TableViewSection.add(row:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of TableViewSection.addRow(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t method lookup function for TableViewRow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TableViewRow.__allocating_init(reuseIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

id ContentStatusCell.spinner.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___HRContentStatusCell_spinner);
}

id ContentStatusCell.titleLabel.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___HRContentStatusCell_titleLabel);
}

id ContentStatusCell.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ContentStatusCell.init()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  v1 = OBJC_IVAR___HRContentStatusCell_spinner;
  v2 = objc_allocWithZone(MEMORY[0x1E0DC3438]);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_initWithActivityIndicatorStyle_, 100);
  v4 = OBJC_IVAR___HRContentStatusCell_titleLabel;
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_labelColor);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v7, sel_setFont_, 0);
  objc_msgSend(v7, sel_setNumberOfLines_, 1);
  objc_msgSend(v7, sel_setTextColor_, v6);

  *(_QWORD *)&v3[v4] = v7;
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for ContentStatusCell();
  v8 = objc_msgSendSuper2(&v13, sel_initWithStyle_reuseIdentifier_, 0, 0);
  v9 = objc_msgSend(v5, sel_systemGroupedBackgroundColor);
  objc_msgSend(v8, sel_setBackgroundColor_, v9);

  v10 = objc_msgSend(v8, sel_contentView);
  v11 = objc_msgSend(v5, sel_systemGroupedBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  sub_1BC51A078();
  return v8;
}

uint64_t type metadata accessor for ContentStatusCell()
{
  return objc_opt_self();
}

void sub_1BC51A078()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;

  v1 = *(void **)&v0[OBJC_IVAR___HRContentStatusCell_spinner];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v1, sel_setHidesWhenStopped_, 1);
  objc_msgSend(v1, sel_setAlpha_, 0.4);
  v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v2, sel_addSubview_, v1);

  v3 = *(void **)&v0[OBJC_IVAR___HRContentStatusCell_titleLabel];
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setAlpha_, 0.4);
  v4 = objc_msgSend(v0, (SEL)&selRef_invalidate);
  objc_msgSend(v4, sel_addSubview_, v3);

  v5 = objc_msgSend(v1, sel_topAnchor);
  v6 = objc_msgSend(v0, (SEL)&selRef_invalidate);
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v7, 16.0);
  objc_msgSend(v8, sel_setActive_, 1);

  v9 = objc_msgSend(v1, sel_centerXAnchor);
  v10 = objc_msgSend(v0, (SEL)&selRef_invalidate);
  v11 = objc_msgSend(v10, sel_centerXAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  objc_msgSend(v12, sel_setActive_, 1);

  v13 = objc_msgSend(v3, sel_topAnchor);
  v14 = objc_msgSend(v1, sel_bottomAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, 8.0);

  objc_msgSend(v15, sel_setActive_, 1);
  v16 = objc_msgSend(v3, sel_centerXAnchor);
  v17 = objc_msgSend(v0, sel_contentView);
  v18 = objc_msgSend(v17, sel_centerXAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  objc_msgSend(v19, sel_setActive_, 1);

  v20 = objc_msgSend(v3, sel_bottomAnchor);
  v21 = objc_msgSend(v0, sel_contentView);
  v22 = objc_msgSend(v21, sel_bottomAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, -16.0);
  objc_msgSend(v23, sel_setActive_, 1);

}

id ContentStatusCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

void ContentStatusCell.init(style:reuseIdentifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ContentStatusCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContentStatusCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ContentStatusCell()
{
  return swift_lookUpClassMethod();
}

void sub_1BC51A574()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;

  v1 = OBJC_IVAR___HRContentStatusCell_spinner;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  v2 = OBJC_IVAR___HRContentStatusCell_titleLabel;
  v3 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v4, sel_setFont_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, 1);
  objc_msgSend(v4, sel_setTextColor_, v3);

  *(_QWORD *)&v0[v2] = v4;
  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC51A69C()
{
  return sub_1BC38BBC4(&OBJC_IVAR___HRSideBySideLabelCell_title);
}

void sub_1BC51A6B4(uint64_t a1, uint64_t a2)
{
  sub_1BC51A764(a1, a2, &OBJC_IVAR___HRSideBySideLabelCell_title, &OBJC_IVAR___HRSideBySideLabelCell_titleLabel);
}

void (*sub_1BC51A6C8(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRSideBySideLabelCell_title;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC51A720;
}

void sub_1BC51A720(_QWORD **a1, char a2)
{
  sub_1BC51A880(a1, a2, &OBJC_IVAR___HRSideBySideLabelCell_titleLabel);
}

uint64_t sub_1BC51A738()
{
  return sub_1BC38BBC4(&OBJC_IVAR___HRSideBySideLabelCell_detail);
}

void sub_1BC51A750(uint64_t a1, uint64_t a2)
{
  sub_1BC51A764(a1, a2, &OBJC_IVAR___HRSideBySideLabelCell_detail, &OBJC_IVAR___HRSideBySideLabelCell_detailLabel);
}

void sub_1BC51A764(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v8;
  void *v9;
  void *v10;

  v8 = (_QWORD *)(v4 + *a3);
  swift_beginAccess();
  *v8 = a1;
  v8[1] = a2;
  swift_bridgeObjectRelease();
  v9 = *(void **)(v4 + *a4);
  if (v8[1])
  {
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v9, sel_setText_, v10);

}

void (*sub_1BC51A81C(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRSideBySideLabelCell_detail;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC51A874;
}

void sub_1BC51A874(_QWORD **a1, char a2)
{
  sub_1BC51A880(a1, a2, &OBJC_IVAR___HRSideBySideLabelCell_detailLabel);
}

void sub_1BC51A880(_QWORD **a1, char a2, _QWORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v5 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v6 = v5[3];
    v7 = *(void **)(v6 + *a3);
    if (*(_QWORD *)(v6 + v5[4] + 8))
    {
      swift_bridgeObjectRetain();
      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v7, sel_setText_, v8);

  }
  free(v5);
}

id SideBySideLabelCell.__allocating_init(reuseIdentifier:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_allocWithZone(v0);
  v2 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithStyle_reuseIdentifier_, 0, v2);

  v4 = v3;
  sub_1BC51AA74();

  return v4;
}

id SideBySideLabelCell.init(reuseIdentifier:)()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  v1 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithStyle_reuseIdentifier_, 0, v1);

  v3 = v2;
  sub_1BC51AA74();

  return v3;
}

id sub_1BC51AA74()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  double v29;
  double v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  double v36;
  double v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  double v45;
  double v46;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR___HRSideBySideLabelCell_titleLabel];
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v3 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v3, sel_addSubview_, v2);

  v4 = *(void **)&v1[OBJC_IVAR___HRSideBySideLabelCell_detailLabel];
  v5 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  objc_msgSend(v4, sel_setTextColor_, v5);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v6 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v6, sel_addSubview_, v4);

  v7 = *(void **)&v1[OBJC_IVAR___HRSideBySideLabelCell_chevronView];
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v8 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v8, sel_addSubview_, v7);

  v9 = objc_msgSend(v2, sel_leadingAnchor);
  v10 = objc_msgSend(v1, sel_pillBackgroundView);
  v11 = objc_msgSend(v10, sel_leadingAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, 16.0);
  objc_msgSend(v12, sel_setActive_, 1);

  v13 = objc_msgSend(v4, sel_leadingAnchor);
  v14 = objc_msgSend(v2, sel_trailingAnchor);
  v15 = objc_msgSend(v13, sel_constraintGreaterThanOrEqualToAnchor_constant_, v14, 8.0);

  objc_msgSend(v15, sel_setActive_, 1);
  v16 = objc_msgSend(v7, sel_leadingAnchor);
  v17 = objc_msgSend(v4, sel_trailingAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 8.0);

  objc_msgSend(v18, sel_setActive_, 1);
  v19 = objc_msgSend(v7, sel_trailingAnchor);
  v20 = objc_msgSend(v1, sel_pillBackgroundView);
  v21 = objc_msgSend(v20, sel_trailingAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, -16.0);
  objc_msgSend(v22, sel_setActive_, 1);

  v23 = objc_msgSend(v2, sel_firstBaselineAnchor);
  v24 = objc_msgSend(v1, sel_pillBackgroundView);
  v25 = objc_msgSend(v24, sel_topAnchor);

  v26 = (void *)objc_opt_self();
  v27 = *MEMORY[0x1E0DC4A88];
  v28 = objc_msgSend(v26, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v28, sel__scaledValueForValue_, 28.0);
  v30 = v29;

  v31 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, v30);
  objc_msgSend(v31, sel_setActive_, 1);

  v32 = objc_msgSend(v2, sel_lastBaselineAnchor);
  v33 = objc_msgSend(v1, sel_pillBackgroundView);
  v34 = objc_msgSend(v33, sel_bottomAnchor);

  v35 = objc_msgSend(v26, sel_preferredFontForTextStyle_, v27);
  objc_msgSend(v35, sel__scaledValueForValue_, 18.0);
  v37 = v36;

  v38 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, -v37);
  objc_msgSend(v38, sel_setActive_, 1);

  v39 = objc_msgSend(v4, sel_lastBaselineAnchor);
  v40 = objc_msgSend(v2, sel_lastBaselineAnchor);
  v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

  objc_msgSend(v41, sel_setActive_, 1);
  v42 = objc_msgSend(v7, sel_lastBaselineAnchor);
  v43 = objc_msgSend(v2, sel_lastBaselineAnchor);
  v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  objc_msgSend(v44, sel_setActive_, 1);
  LODWORD(v45) = 1148846080;
  objc_msgSend(v4, sel_setContentHuggingPriority_forAxis_, 0, v45);
  LODWORD(v46) = 1148846080;
  return objc_msgSend(v7, sel_setContentHuggingPriority_forAxis_, 0, v46);
}

id SideBySideLabelCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id SideBySideLabelCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  double v14;
  double v15;
  char *v16;
  char *v17;
  void *v18;
  id v19;
  objc_super v21;

  v6 = OBJC_IVAR___HRSideBySideLabelCell_titleLabel;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_init);
  v9 = OBJC_IVAR___HRSideBySideLabelCell_detailLabel;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v10 = OBJC_IVAR___HRSideBySideLabelCell_chevronView;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v11, sel_setContentMode_, 4);
  sub_1BC462CD0();
  v12 = (void *)sub_1BC62CE54();
  objc_msgSend(v11, sel_setImage_, v12);

  v13 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v11, sel_setTintColor_, v13);

  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v14) = 1148846080;
  objc_msgSend(v11, sel_setContentHuggingPriority_forAxis_, 0, v14);
  LODWORD(v15) = 1148846080;
  objc_msgSend(v11, sel_setContentCompressionResistancePriority_forAxis_, 0, v15);
  *(_QWORD *)&v8[v10] = v11;
  v16 = &v8[OBJC_IVAR___HRSideBySideLabelCell_title];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = &v8[OBJC_IVAR___HRSideBySideLabelCell_detail];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;

  if (a3)
  {
    v18 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  v21.receiver = v8;
  v21.super_class = (Class)type metadata accessor for SideBySideLabelCell();
  v19 = objc_msgSendSuper2(&v21, sel_initWithStyle_reuseIdentifier_, a1, v18);

  return v19;
}

uint64_t type metadata accessor for SideBySideLabelCell()
{
  return objc_opt_self();
}

id SideBySideLabelCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SideBySideLabelCell.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  char *v13;
  char *v14;
  id v15;
  objc_super v17;

  v3 = OBJC_IVAR___HRSideBySideLabelCell_titleLabel;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = OBJC_IVAR___HRSideBySideLabelCell_detailLabel;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v7 = OBJC_IVAR___HRSideBySideLabelCell_chevronView;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v8, sel_setContentMode_, 4);
  sub_1BC462CD0();
  v9 = (void *)sub_1BC62CE54();
  objc_msgSend(v8, sel_setImage_, v9);

  v10 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  objc_msgSend(v8, sel_setTintColor_, v10);

  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v8, sel_setContentHuggingPriority_forAxis_, 0, v11);
  LODWORD(v12) = 1148846080;
  objc_msgSend(v8, sel_setContentCompressionResistancePriority_forAxis_, 0, v12);
  *(_QWORD *)&v5[v7] = v8;
  v13 = &v5[OBJC_IVAR___HRSideBySideLabelCell_title];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = &v5[OBJC_IVAR___HRSideBySideLabelCell_detail];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;

  v17.receiver = v5;
  v17.super_class = (Class)type metadata accessor for SideBySideLabelCell();
  v15 = objc_msgSendSuper2(&v17, sel_initWithCoder_, a1);

  return v15;
}

id SideBySideLabelCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SideBySideLabelCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC51B65C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___HRSideBySideLabelCell_title, a2);
}

uint64_t sub_1BC51B668(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC51A6B4);
}

uint64_t sub_1BC51B674@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___HRSideBySideLabelCell_detail, a2);
}

uint64_t sub_1BC51B680(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC51A750);
}

uint64_t method lookup function for SideBySideLabelCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SideBySideLabelCell.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SideBySideLabelCell.title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SideBySideLabelCell.title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SideBySideLabelCell.detail.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SideBySideLabelCell.detail.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SideBySideLabelCell.detail.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t type metadata accessor for InternalDetailsDataSource(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF435258);
}

uint64_t sub_1BC51B7C4()
{
  return swift_initClassMetadata2();
}

void sub_1BC51B800()
{
  sub_1BC51B830();
}

void sub_1BC51B818()
{
  sub_1BC51B830();
}

void sub_1BC51B830()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC51B858()
{
  sub_1BC62AE08();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC51B874()
{
  return type metadata accessor for InternalDetailsDataSource(0);
}

uint64_t sub_1BC51B87C()
{
  MEMORY[0x1BCCF35C4](&unk_1BC646984);
  return sub_1BC62B834();
}

uint64_t sub_1BC51B8C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t result;

  v2 = sub_1BC62BD98();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC62BD44();
  v3 = sub_1BC62AD3C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v5 = sub_1BC62AD24();
  a1[3] = v3;
  result = sub_1BC347F0C((unint64_t *)&qword_1ED6A4108, v4, MEMORY[0x1E0D2A8A0]);
  a1[4] = result;
  *a1 = v5;
  return result;
}

void sub_1BC51B9C0()
{
  uint64_t v0;

  swift_release();

}

uint64_t sub_1BC51B9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailItem_uuid;
  v2 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return v0;
}

uint64_t sub_1BC51BA7C()
{
  sub_1BC51B9EC();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC51BAA0()
{
  return type metadata accessor for InternalGatewayVersionsDetailItem(0);
}

uint64_t type metadata accessor for InternalGatewayVersionsDetailItem(uint64_t a1)
{
  return sub_1BC3618E8(a1, qword_1EF4352E0);
}

uint64_t sub_1BC51BABC()
{
  return swift_updateClassMetadata2();
}

void sub_1BC51BB0C(uint64_t a1, void *a2)
{
  sub_1BC51BB5C(a2);
}

uint64_t sub_1BC51BB30()
{
  return sub_1BC347F0C(&qword_1EF4353C0, type metadata accessor for InternalDetailsDataSource, (uint64_t)&unk_1BC646954);
}

void sub_1BC51BB5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  Class v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC15HealthRecordsUI33InternalGatewayVersionsDetailItem_gateway);
  v5 = objc_msgSend(v4, sel_gatewayVersions);
  if (v5)
  {
    v6 = v5;
    sub_1BC50D8C4();
    v7 = sub_1BC62C878();

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v8)
    {
      v9 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI33InternalGatewayVersionsDetailItem_manager)
                    + 16);
      sub_1BC51D06C();
      objc_allocWithZone(v10);
      v11 = v9;
      v12 = v4;
      v13 = a1;
      v14 = v11;
      v15 = v12;
      v16 = v13;
      v17 = (void *)sub_1BC62C230();
      objc_msgSend(v16, sel_showViewController_sender_, v17, v2);

    }
  }
}

uint64_t sub_1BC51BCB4(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v3 = v2;
  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v55 - v7;
  v9 = sub_1BC62BBAC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC62BB64();
  v59 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  MEMORY[0x1E0C80A78](v13);
  v58 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC15HealthRecordsUI33InternalGatewayVersionsDetailItem_gateway) = a1;
  *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC15HealthRecordsUI33InternalGatewayVersionsDetailItem_manager) = a2;
  v15 = a1;
  swift_retain();
  v16 = objc_msgSend(v15, sel_gatewayVersions);
  if (v16)
  {
    v17 = v16;
    sub_1BC50D8C4();
    v18 = sub_1BC62C878();

    if (!(v18 >> 62))
    {
LABEL_3:
      v63 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    v18 = MEMORY[0x1E0DEE9D8];
    if (!(MEMORY[0x1E0DEE9D8] >> 62))
      goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v63 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
LABEL_4:
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v15, sel_gatewayVersions);
  v20 = MEMORY[0x1E0DEE9D8];
  if (v19)
  {
    v21 = v19;
    sub_1BC50D8C4();
    v22 = sub_1BC62C878();

    if (!(v22 >> 62))
      goto LABEL_6;
LABEL_19:
    swift_bridgeObjectRetain();
    v23 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    v61 = v12;
    v62 = v3;
    if (v23)
      goto LABEL_7;
LABEL_20:
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x1E0DEE9D8];
    goto LABEL_21;
  }
  v22 = MEMORY[0x1E0DEE9D8];
  if (MEMORY[0x1E0DEE9D8] >> 62)
    goto LABEL_19;
LABEL_6:
  v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  v61 = v12;
  v62 = v3;
  if (!v23)
    goto LABEL_20;
LABEL_7:
  v67 = v20;
  result = sub_1BC3BD748(0, v23 & ~(v23 >> 63), 0);
  if (v23 < 0)
  {
    __break(1u);
    return result;
  }
  v55 = v8;
  v56 = v10;
  v57 = v9;
  v25 = 0;
  v26 = v67;
  do
  {
    if ((v22 & 0xC000000000000001) != 0)
      v27 = (id)MEMORY[0x1BCCF24CC](v25, v22);
    else
      v27 = *(id *)(v22 + 8 * v25 + 32);
    v28 = v27;
    v29 = objc_msgSend(v27, sel_FHIRVersion, v55, v56, v57);
    v30 = objc_msgSend(v29, sel_FHIRRelease);

    v31 = sub_1BC62C680();
    v33 = v32;

    v67 = v26;
    v35 = *(_QWORD *)(v26 + 16);
    v34 = *(_QWORD *)(v26 + 24);
    if (v35 >= v34 >> 1)
    {
      sub_1BC3BD748(v34 > 1, v35 + 1, 1);
      v26 = v67;
    }
    ++v25;
    *(_QWORD *)(v26 + 16) = v35 + 1;
    v36 = v26 + 16 * v35;
    *(_QWORD *)(v36 + 32) = v31;
    *(_QWORD *)(v36 + 40) = v33;
  }
  while (v23 != v25);
  swift_bridgeObjectRelease();
  v10 = v56;
  v9 = v57;
  v8 = v55;
LABEL_21:
  v37 = v63;
  v65 = v63;
  v67 = sub_1BC62D52C();
  v68 = v38;
  sub_1BC62C764();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v26 + 16))
  {
    v65 = 10272;
    v66 = 0xE200000000000000;
    v64 = v26;
    sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A52C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    sub_1BC3B4EE4();
    sub_1BC62C5D8();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    sub_1BC62C764();
  }
  swift_bridgeObjectRelease();
  v39 = v62;
  if (v37 < 1)
  {
    v40 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC62BBC4();
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1BC639590;
    v42 = v58;
    v41 = v59;
    v43 = v60;
    (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v58, *MEMORY[0x1E0DC1C20], v60);
    v44 = sub_1BC62BB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v8, 1, 1, v44);
    v45 = v61;
    sub_1BC62BBA0();
    sub_1BC62BB7C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v45, v9);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  }
  v46 = v67;
  v47 = v68;
  sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A53C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v48 + 32) = sub_1BC62C680();
  *(_QWORD *)(v48 + 40) = v49;
  *(_QWORD *)(v48 + 48) = 0xD000000000000010;
  *(_QWORD *)(v48 + 56) = 0x80000001BC6614C0;
  v50 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v51 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v51)
  {
    v52 = sub_1BC62C680();
    v54 = v53;

  }
  else
  {
    v52 = 0;
    v54 = 0;
  }
  sub_1BC62A7A8();
  v39[2] = 0xD000000000000010;
  v39[3] = 0x80000001BC6614C0;
  v39[4] = v46;
  v39[5] = v47;
  v39[6] = 0;
  v39[7] = v40;
  v39[8] = v52;
  v39[9] = v54;
  return (uint64_t)v39;
}

uint64_t sub_1BC51C32C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  uint64_t (*v49)(void);
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  id v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  _QWORD v112[2];
  __int128 v113;
  uint64_t v114;
  char *v115;
  __int128 v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  _QWORD *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;

  v120 = a2;
  v3 = sub_1BC62A7B4();
  v4 = *(_QWORD *)(v3 - 8);
  v123 = v3;
  v124 = v4;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v121 = (_QWORD *)((char *)v112 - v8);
  v9 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)sub_1BC62A820();
  v14 = *(v13 - 1);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v122 = a1;
  v17 = objc_msgSend(a1, sel_provenance);
  v18 = objc_msgSend(v17, sel_type);

  if (!v18)
  {
    v115 = v12;
    *(_QWORD *)&v116 = v14;
    v117 = v10;
    v118 = (unint64_t)v13;
    v114 = v9;
    v119 = v6;
    v19 = objc_msgSend(v122, sel_gateway);
    if (v19)
    {
      v20 = v19;
      sub_1BC62A814();
      v21 = objc_msgSend(v20, sel_country);
      sub_1BC62C680();

      v22 = sub_1BC62A7D8();
      v24 = v23;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, unint64_t))(v116 + 8))(v16, v118);
      v25 = MEMORY[0x1E0DEA968];
      v118 = (unint64_t)v20;
      if (v24)
      {
        v26 = MEMORY[0x1E0DED1E8];
        sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v27 = swift_allocObject();
        v116 = xmmword_1BC6395A0;
        *(_OWORD *)(v27 + 16) = xmmword_1BC6395A0;
        *(_QWORD *)(v27 + 56) = v25;
        v28 = sub_1BC3644C0();
        *(_QWORD *)(v27 + 64) = v28;
        *(_QWORD *)(v27 + 32) = v22;
        *(_QWORD *)(v27 + 40) = v24;
        v29 = objc_msgSend(v20, (SEL)&selRef_closeButtonTapped);
        v30 = sub_1BC62C680();
        v32 = v31;

        *(_QWORD *)(v27 + 96) = v25;
        *(_QWORD *)(v27 + 104) = v28;
        *(_QWORD *)(v27 + 72) = v30;
        *(_QWORD *)(v27 + 80) = v32;
        v33 = sub_1BC62C6B0();
        v35 = v34;
        sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A53C0, (uint64_t (*)(_QWORD, _QWORD))v26);
        v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = v116;
        *(_QWORD *)(v36 + 32) = sub_1BC62C680();
        *(_QWORD *)(v36 + 40) = v37;
        *(_QWORD *)(v36 + 48) = 0x2079617765746147;
        *(_QWORD *)(v36 + 56) = 0xEF7972746E756F43;
        v38 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        v39 = (id)HKUIJoinStringsForAutomationIdentifier();

        if (v39)
        {
          v40 = sub_1BC62C680();
          v42 = v41;

        }
        else
        {
          v40 = 0;
          v42 = 0;
        }
        v43 = type metadata accessor for TitleSubtitleDetailItem(0);
        v44 = (_QWORD *)swift_allocObject();
        sub_1BC62A7A8();
        v44[2] = 0x2079617765746147;
        v44[3] = 0xEF7972746E756F43;
        v44[4] = v33;
        v44[5] = v35;
        v44[6] = 0;
        v44[7] = MEMORY[0x1E0DEE9D8];
        v44[8] = v40;
        v44[9] = v42;
        v45 = v128;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v45 = sub_1BC3B5CEC(0, v45[2] + 1, 1, v45);
        v47 = v45[2];
        v46 = v45[3];
        if (v47 >= v46 >> 1)
          v45 = sub_1BC3B5CEC((_QWORD *)(v46 > 1), v47 + 1, 1, v45);
        v126 = v43;
        v127 = sub_1BC347F0C(&qword_1EF42B7C0, type metadata accessor for TitleSubtitleDetailItem, (uint64_t)&unk_1BC63DA50);
        *(_QWORD *)&v125 = v44;
        v45[2] = v47 + 1;
        sub_1BC34E718(&v125, (uint64_t)&v45[5 * v47 + 4]);
        swift_release();
        v128 = v45;
        v20 = (id)v118;
      }
      v48 = objc_msgSend(v20, sel_FHIRVersion);
      v49 = MEMORY[0x1E0DED1E8];
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1BC6398E0;
      v51 = objc_msgSend(v48, sel_FHIRRelease);
      v52 = sub_1BC62C680();
      v54 = v53;

      *(_QWORD *)(v50 + 56) = v25;
      v55 = sub_1BC3644C0();
      *(_QWORD *)(v50 + 64) = v55;
      *(_QWORD *)(v50 + 32) = v52;
      *(_QWORD *)(v50 + 40) = v54;
      *(_QWORD *)&v116 = v48;
      v56 = objc_msgSend(v48, sel_stringRepresentation);
      v57 = sub_1BC62C680();
      v59 = v58;

      *(_QWORD *)(v50 + 96) = v25;
      *(_QWORD *)(v50 + 104) = v55;
      *(_QWORD *)(v50 + 72) = v57;
      *(_QWORD *)(v50 + 80) = v59;
      v60 = objc_msgSend(v20, sel_minCompatibleAPIVersion);
      v61 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v50 + 136) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v50 + 144) = v61;
      *(_QWORD *)(v50 + 112) = v60;
      v62 = sub_1BC62C6B0();
      v64 = v63;
      sub_1BC4047DC(0, (unint64_t *)&qword_1ED6A53C0, (uint64_t (*)(_QWORD, _QWORD))v49);
      v112[0] = v65;
      v66 = swift_allocObject();
      v113 = xmmword_1BC6395A0;
      *(_OWORD *)(v66 + 16) = xmmword_1BC6395A0;
      *(_QWORD *)(v66 + 32) = sub_1BC62C680();
      *(_QWORD *)(v66 + 40) = v67;
      *(_QWORD *)(v66 + 48) = 0xD000000000000013;
      *(_QWORD *)(v66 + 56) = 0x80000001BC661460;
      v68 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v69 = (id)HKUIJoinStringsForAutomationIdentifier();

      v112[1] = CFSTR("UIA.Health.HealthRecords");
      if (v69)
      {
        v70 = sub_1BC62C680();
        v72 = v71;

      }
      else
      {
        v70 = 0;
        v72 = 0;
      }
      v73 = type metadata accessor for TitleSubtitleDetailItem(0);
      v74 = (_QWORD *)swift_allocObject();
      sub_1BC62A7A8();
      v74[2] = 0xD000000000000013;
      v74[3] = 0x80000001BC661460;
      v74[4] = v62;
      v74[5] = v64;
      v74[6] = 0;
      v74[7] = MEMORY[0x1E0DEE9D8];
      v74[8] = v70;
      v74[9] = v72;
      v126 = v73;
      v75 = sub_1BC347F0C(&qword_1EF42B7C0, type metadata accessor for TitleSubtitleDetailItem, (uint64_t)&unk_1BC63DA50);
      v127 = v75;
      *(_QWORD *)&v125 = v74;
      v76 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v76 = sub_1BC3B5CEC(0, v76[2] + 1, 1, v76);
        v128 = v76;
      }
      v78 = v120;
      v77 = v121;
      v79 = v114;
      v81 = v76[2];
      v80 = v76[3];
      if (v81 >= v80 >> 1)
        v128 = sub_1BC3B5CEC((_QWORD *)(v80 > 1), v81 + 1, 1, v76);
      v82 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v125, v73);
      MEMORY[0x1E0C80A78](v82);
      v84 = (char *)v112 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v85 + 16))(v84);
      v120 = v75;
      sub_1BC5EE8E8(v81, (uint64_t)v84, (uint64_t *)&v128, v73, v75);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v125);
      v86 = v128;
      v87 = type metadata accessor for InternalGatewayVersionsDetailItem(0);
      swift_allocObject();
      v88 = (id)v118;
      swift_retain();
      v89 = sub_1BC51BCB4(v88, v78);

      swift_release();
      v91 = v86[2];
      v90 = v86[3];
      v121 = v86;
      if (v91 >= v90 >> 1)
        v121 = sub_1BC3B5CEC((_QWORD *)(v90 > 1), v91 + 1, 1, v121);
      v126 = v87;
      v127 = sub_1BC347F0C(&qword_1EF4353C8, type metadata accessor for InternalGatewayVersionsDetailItem, (uint64_t)&unk_1BC63DA50);
      *(_QWORD *)&v125 = v89;
      v92 = v121;
      v121[2] = v91 + 1;
      sub_1BC34E718(&v125, (uint64_t)&v92[5 * v91 + 4]);
      v128 = v92;
      sub_1BC3EEE9C(v122, 0, 0, 0, (uint64_t)v77);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v117 + 48))(v77, 1, v79) == 1)
      {

        sub_1BC51D018((uint64_t)v77);
        v6 = v119;
        goto LABEL_40;
      }
      v93 = (uint64_t)v115;
      sub_1BC378168((uint64_t)v77, (uint64_t)v115);
      v94 = MEMORY[0x1E0DEE9D8];
      v95 = v121;
      switch(*(_QWORD *)(v93 + *(int *)(v79 + 20)))
      {
        case 0:
          v122 = (id)0xE500000000000000;
          v118 = 0x6E69676F6CLL;
          goto LABEL_30;
        case 1:
          v122 = (id)0x80000001BC656930;
          v118 = 0xD000000000000013;
          goto LABEL_30;
        case 2:
          v122 = (id)0xED00006564617267;
          v118 = 0x70752065706F6373;
          goto LABEL_30;
        case 3:
          v118 = 0xD00000000000001FLL;
          v122 = (id)0x80000001BC656910;
LABEL_30:
          v96 = (void *)v116;
          break;
        default:
          v118 = 0x2079617765746167;
          v122 = (id)0xEF65646172677075;
          v94 = MEMORY[0x1E0DEE9D8];
          v96 = (void *)v116;
          v95 = v121;
          break;
      }
      v97 = swift_allocObject();
      *(_OWORD *)(v97 + 16) = v113;
      *(_QWORD *)(v97 + 32) = sub_1BC62C680();
      *(_QWORD *)(v97 + 40) = v98;
      *(_QWORD *)(v97 + 48) = 0xD000000000000016;
      *(_QWORD *)(v97 + 56) = 0x80000001BC6614A0;
      v99 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v100 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (v100)
      {
        v101 = sub_1BC62C680();
        v103 = v102;

      }
      else
      {
        v101 = 0;
        v103 = 0;
      }
      v104 = (_QWORD *)swift_allocObject();
      sub_1BC62A7A8();
      v104[2] = 0xD000000000000016;
      v104[3] = 0x80000001BC6614A0;
      v105 = v122;
      v104[4] = v118;
      v104[5] = v105;
      v104[6] = 0;
      v104[7] = v94;
      v104[8] = v101;
      v104[9] = v103;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v95 = sub_1BC3B5CEC(0, v95[2] + 1, 1, v95);
      v106 = (uint64_t)v115;
      v108 = v95[2];
      v107 = v95[3];
      if (v108 >= v107 >> 1)
        v95 = sub_1BC3B5CEC((_QWORD *)(v107 > 1), v108 + 1, 1, v95);
      v126 = v73;
      v127 = v120;
      *(_QWORD *)&v125 = v104;
      v95[2] = v108 + 1;
      sub_1BC34E718(&v125, (uint64_t)&v95[5 * v108 + 4]);

      v128 = v95;
      sub_1BC377D8C(v106);
    }
    v6 = v119;
  }
LABEL_40:
  sub_1BC357158(0, (unint64_t *)&unk_1EF42DDB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC62B288();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
  sub_1BC62A7A8();
  sub_1BC62A778();
  v109 = v123;
  v110 = *(void (**)(char *, uint64_t))(v124 + 8);
  v110(v6, v123);
  sub_1BC62B270();
  *(_QWORD *)&v125 = 0x3C53447961727241;
  *((_QWORD *)&v125 + 1) = 0xE800000000000000;
  sub_1BC62A7A8();
  sub_1BC62A778();
  v110(v6, v109);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return sub_1BC62ADF0();
}

uint64_t sub_1BC51D018(uint64_t a1)
{
  uint64_t v2;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC51D06C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4353D0)
  {
    sub_1BC51D0C4();
    v0 = sub_1BC62C23C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4353D0);
  }
}

unint64_t sub_1BC51D0C4()
{
  unint64_t result;

  result = qword_1EF4353D8;
  if (!qword_1EF4353D8)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64B5BC, &type metadata for InternalGatewayVersionsView);
    atomic_store(result, (unint64_t *)&qword_1EF4353D8);
  }
  return result;
}

id MedicalRecordChartSeries.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

__n128 HKGraphSeriesDataPointPathRangeMake@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v3;
  __n128 result;
  __int128 v5;

  v3 = a1[1];
  *a3 = *a1;
  a3[1] = v3;
  result = *(__n128 *)a2;
  v5 = *(_OWORD *)(a2 + 16);
  a3[2] = *(_OWORD *)a2;
  a3[3] = v5;
  return result;
}

double HKGraphSeriesDataBlockPathMake@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = NAN;
  *(_OWORD *)a1 = xmmword_1BC6469C0;
  *(_QWORD *)(a1 + 16) = 0;
  return result;
}

__n128 HKGraphSeriesDataPointPathMake@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  a2[1].n128_u64[1] = 0x7FFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t MedicalRecordChartCoordinate.__allocating_init(sortedPointValues:blockCoordinateInfo:)(uint64_t a1, uint64_t a2)
{
  return sub_1BC51DDDC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC51E9D4);
}

void sub_1BC51D2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, uint64_t a8, uint64_t a9, char *a10, CGContext *a11)
{
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t *v37;
  void *v38;
  double v39;
  double v40;
  id v41;
  CGColor *v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  double v49;
  double *v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;

  v56 = sub_1BC62A97C();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BC62BB34();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (type metadata accessor for MedicalRecordChartCoordinate(), (v25 = swift_dynamicCastClass()) != 0))
  {
    v54[1] = a1;
    v26 = *(_QWORD *)(v25 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
    if (*(_QWORD *)(v26 + 16))
    {
      v27 = *(double *)(v26 + 32);
      if (v27 < a6 || v27 > a7)
        return;
    }
    else if (a6 > 0.0 || a7 < 0.0)
    {
      return;
    }
    swift_unknownObjectRetain();
    objc_msgSend(a10, sel_selectedPathRange);
    v57 = a2;
    v58 = a3;
    v59 = a4;
    v60 = a5;
    v36 = HKGraphSeriesDataPointPathInRangeInclusive();
    v37 = &OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_selectedStrokeStyle;
    if (!v36)
      v37 = &OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_unselectedStrokeStyle;
    v38 = *(void **)&a10[*v37];
    if (v38)
    {
      objc_msgSend(v38, sel_lineWidth);
      v40 = v39 * 0.5;
    }
    else
    {
      v40 = 1.0;
    }
    CGContextSaveGState(a11);
    objc_msgSend(v38, sel_applyToContext_, a11);
    if (!v38 || (v41 = objc_msgSend(v38, sel_strokeColor)) == 0)
      v41 = objc_msgSend((id)objc_opt_self(), sel_yellowColor);
    v42 = (CGColor *)objc_msgSend(v41, sel_CGColor);

    CGContextSetFillColorWithColor(a11, v42);
    v43 = *(_QWORD *)(v26 + 16);
    if (v43)
    {
      v44 = *(double *)(v26 + 40);
      swift_bridgeObjectRetain();
      sub_1BC62CA70();
      v54[0] = 0xC00921FB54442D18;
      sub_1BC62CA7C();
      if (v43 != 1)
      {
        v45 = 1;
        while (1)
        {
          v46 = v26 + 32 + 16 * v45;
          v47 = *(double *)(v46 + 8);
          v48 = v45 + 1;
          if (v47 - v40 - (v40 + v44) <= 1.0)
            break;
          v49 = *(double *)(v46 + 8);
LABEL_31:
          sub_1BC62CA7C();
          CGContextClosePath(a11);
          sub_1BC62CA70();
          sub_1BC62CA7C();
          v45 = v48;
          v44 = v49;
          if (v48 == v43)
            goto LABEL_32;
        }
        v50 = (double *)(v26 + 56 + 16 * v45);
        while (1)
        {
          sub_1BC62CA88();
          if (v43 == v48)
            break;
          v49 = *v50;
          ++v48;
          v51 = *v50 - v40 - (v40 + v47);
          v50 += 2;
          v47 = v49;
          if (v51 > 1.0)
            goto LABEL_31;
        }
      }
LABEL_32:
      swift_bridgeObjectRelease();
      sub_1BC62CA7C();
      CGContextClosePath(a11);
    }
    v52 = v55;
    v53 = v56;
    (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v20, *MEMORY[0x1E0C9B8A0], v56);
    sub_1BC62CA94();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v20, v53);
    CGContextRestoreGState(a11);
    swift_unknownObjectRelease();

  }
  else
  {
    sub_1BC62BAE0();
    swift_unknownObjectRetain_n();
    v29 = sub_1BC62BB28();
    v30 = sub_1BC62CAC4();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = a1;
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      *(_QWORD *)&v61 = v33;
      *(_DWORD *)v32 = 136446210;
      v56 = (uint64_t)(v32 + 4);
      v57 = v31;
      sub_1BC51F774(0, &qword_1EF4354B8, &qword_1EF4354B0, (uint64_t)&protocolRef_HKGraphSeriesBlockCoordinate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_unknownObjectRetain();
      v34 = sub_1BC62C6E0();
      v57 = sub_1BC4991F0(v34, v35, (uint64_t *)&v61);
      sub_1BC62CFF8();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v33, -1, -1);
      MEMORY[0x1BCCF36A8](v32, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
}

uint64_t sub_1BC51D8D0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = *a3;
  v9 = a3[1];
  v10 = a3[2];
  v11 = a3[3];
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v12(a2, v8, v9, v10, v11, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

id MedicalRecordChartSeries.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_selectedStrokeStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_unselectedStrokeStyle] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordChartSeries();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MedicalRecordChartSeries.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for MedicalRecordChartSeries);
}

uint64_t MedicalRecordChartCoordinate.pointValuesAscending.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MedicalRecordChartCoordinate.blockCoordinateInfo.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t MedicalRecordChartCoordinate.init(sortedPointValues:blockCoordinateInfo:)(uint64_t a1, uint64_t a2)
{
  return sub_1BC51DDDC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC51E924);
}

uint64_t sub_1BC51DDDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v8;

  ObjectType = swift_getObjectType();
  v8 = a3(a1, a2, v3, ObjectType);
  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_1BC51DE34(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t i;
  unint64_t v6;
  __int128 v7;
  __int128 v8;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return (uint64_t)v1;
  v3 = 0;
  v4 = v2 >> 1;
  for (i = v2 + 1; ; --i)
  {
    if (v3 == i - 2)
      goto LABEL_5;
    v6 = v1[2];
    if (v3 >= v6)
      break;
    if (i - 2 >= v6)
      goto LABEL_12;
    v7 = *(_OWORD *)&v1[2 * i];
    v8 = *(_OWORD *)&v1[2 * v3 + 4];
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BC4DE3C8(v1);
      v1 = (_QWORD *)result;
    }
    *(_OWORD *)&v1[2 * v3 + 4] = v7;
    *(_OWORD *)&v1[2 * i] = v8;
LABEL_5:
    if (v4 == ++v3)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

double sub_1BC51DEF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  if (*(_QWORD *)(v1 + 16))
    return *(double *)(v1 + 32);
  else
    return 0.0;
}

double sub_1BC51DF1C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  if (*(_QWORD *)(v1 + 16))
    return *(double *)(v1 + 32);
  else
    return 0.0;
}

double sub_1BC51DF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
    return *(double *)(v1 + 16 * v2 + 16);
  else
    return 0.0;
}

double sub_1BC51DF70(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v8;
  double *v9;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
  {
    v5 = 0.0;
    v6 = 0.0;
    if (a2 >= 0.0 && a2 <= 0.0)
      return vabdd_f64(0.0, a1);
    return sqrt((a2 - v5) * (a2 - v5) + (a1 - v6) * (a1 - v6));
  }
  v5 = *(double *)(v3 + 40);
  if (v5 > a2)
  {
    v6 = *(double *)(v3 + 32);
    return sqrt((a2 - v5) * (a2 - v5) + (a1 - v6) * (a1 - v6));
  }
  v8 = v4 - 1;
  v9 = (double *)(v3 + 32);
  v5 = v9[2 * v8 + 1];
  if (v5 < a2)
  {
    v6 = v9[2 * v8];
    return sqrt((a2 - v5) * (a2 - v5) + (a1 - v6) * (a1 - v6));
  }
  return vabdd_f64(*v9, a1);
}

double CGPoint.distance(to:)(double a1, double a2, double a3, double a4)
{
  return sqrt((a1 - a3) * (a1 - a3) + (a2 - a4) * (a2 - a4));
}

double sub_1BC51E064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
    return *(double *)(v1 + 16 * v2 + 16);
  else
    return 0.0;
}

void MedicalRecordChartCoordinate.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicalRecordChartCoordinate.__deallocating_deinit()
{
  return sub_1BC405B94(type metadata accessor for MedicalRecordChartCoordinate);
}

double CGFloat.pow2()(double a1)
{
  return a1 * a1;
}

uint64_t sub_1BC51E1A0(uint64_t a1, void *a2, double a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BDE48(0, v3, 0);
    v4 = v16;
    v8 = a1 + 32;
    do
    {
      v9 = (void *)sub_1BC62C974();
      objc_msgSend(a2, sel_coordinateForValue_, v9);
      v11 = v10;

      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_1BC3BDE48(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(double *)(v14 + 32) = a3;
      *(_QWORD *)(v14 + 40) = v11;
      v8 += 8;
      --v3;
    }
    while (v3);
  }
  return v4;
}

void sub_1BC51E2A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9;
  id v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  objc_class *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  char *v41;
  id v42;
  id v43;
  id v44;
  NSObject *v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  objc_super v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v63 = a3;
  v64 = a4;
  v62 = a2;
  v9 = sub_1BC62BB34();
  v10 = *(id *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1BC62A760();
  v70 = *(_QWORD *)(v65 - 8);
  *(_QWORD *)&v13 = MEMORY[0x1E0C80A78](v65).n128_u64[0];
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a1, sel_chartPoints, v13);
  if (v16)
  {
    v17 = v16;
    sub_1BC51F7D4(0, (unint64_t *)&qword_1EF4354D0);
    v18 = sub_1BC62C878();

    v19 = sub_1BC34A004(v18);
    swift_bridgeObjectRelease();
    if (v19)
    {
      v10 = objc_msgSend(a5, sel_transform);
      v69 = objc_msgSend(a6, sel_transform);
      v72 = MEMORY[0x1E0DEE9D8];
      if (!(v19 >> 62))
      {
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v21 = v65;
        if (!v20)
          goto LABEL_27;
LABEL_5:
        if (v20 < 1)
        {
          __break(1u);
          goto LABEL_31;
        }
        v22 = 0;
        v66 = v19 & 0xC000000000000001;
        v67 = v20;
        v68 = v19;
        do
        {
          if (v66)
            v23 = (char *)MEMORY[0x1BCCF24CC](v22, v19);
          else
            v23 = (char *)*(id *)(v19 + 8 * v22 + 32);
          v24 = v23;
          v25 = objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet], sel_date, v62, v63, v64);
          sub_1BC62A724();

          v26 = (void *)sub_1BC62A700();
          (*(void (**)(char *, uint64_t))(v70 + 8))(v15, v21);
          objc_msgSend(v10, sel_coordinateForValue_, v26);
          v28 = v27;

          v29 = v69;
          v30 = swift_bridgeObjectRetain();
          v31 = sub_1BC51E1A0(v30, v29, v28);
          swift_bridgeObjectRelease();

          v32 = *(void **)&v24[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo];
          v33 = (objc_class *)type metadata accessor for MedicalRecordChartCoordinate();
          v34 = (char *)objc_allocWithZone(v33);
          v35 = v34;
          v36 = *(_QWORD *)(v31 + 16);
          if (v36 && *(double *)(v31 + 16 * v36 + 24) < *(double *)(v31 + 40))
          {
            v37 = v32;
            v38 = v10;
            v39 = v35;
            *(_QWORD *)&v39[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending] = sub_1BC51DE34(v31);
            v10 = v38;
            v21 = v65;
          }
          else
          {
            *(_QWORD *)&v34[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending] = v31;
            v40 = v32;
            v41 = v35;
          }
          *(_QWORD *)&v35[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_blockCoordinateInfo] = v32;
          swift_unknownObjectRetain();

          v71.receiver = v35;
          v71.super_class = v33;
          v42 = objc_msgSendSuper2(&v71, sel_init);

          v43 = v42;
          MEMORY[0x1BCCF1B30]();
          if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          ++v22;
          sub_1BC62C8D8();
          sub_1BC62C890();

          v19 = v68;
        }
        while (v67 != v22);
LABEL_27:
        swift_bridgeObjectRelease();
        sub_1BC51F7D4(0, &qword_1EF4354B0);
        swift_bridgeObjectRetain();
        v59 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        v60 = (void *)objc_opt_self();
        v73 = v62;
        v74 = v63;
        v75 = v64;
        v61 = objc_msgSend(v60, sel_coordinateListWithCoordinates_blockPath_, v59, &v73);

        if (v61)
        {

          swift_bridgeObjectRelease();
          return;
        }
LABEL_31:
        __break(1u);
        return;
      }
LABEL_26:
      swift_bridgeObjectRetain();
      v20 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      v21 = v65;
      if (!v20)
        goto LABEL_27;
      goto LABEL_5;
    }
  }
  sub_1BC62BAE0();
  v44 = a1;
  v45 = sub_1BC62BB28();
  v19 = sub_1BC62CAC4();
  if (os_log_type_enabled(v45, (os_log_type_t)v19))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v73 = v47;
    *(_DWORD *)v46 = 136446210;
    v48 = objc_msgSend(v44, sel_chartPoints);
    if (v48)
    {
      v49 = v48;
      sub_1BC51F7D4(0, (unint64_t *)&qword_1EF4354D0);
      v50 = sub_1BC62C878();

    }
    else
    {
      v50 = 0;
    }
    v72 = v50;
    sub_1BC51F700();
    v51 = sub_1BC62C6E0();
    v15 = (char *)v52;
    v72 = sub_1BC4991F0(v51, v52, &v73);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v47, -1, -1);
    MEMORY[0x1BCCF36A8](v46, -1, -1);

  }
  else
  {

  }
  (*((void (**)(char *, uint64_t))v10 + 1))(v12, v9);
  v54 = v63;
  v53 = v64;
  v55 = v62;
  sub_1BC51F7D4(0, &qword_1EF4354B0);
  v56 = (void *)sub_1BC62C86C();
  v57 = (void *)objc_opt_self();
  v73 = v55;
  v74 = v54;
  v75 = v53;
  v58 = objc_msgSend(v57, sel_coordinateListWithCoordinates_blockPath_, v56, &v73);

  if (!v58)
  {
    __break(1u);
    goto LABEL_26;
  }
}

id sub_1BC51E924(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  objc_super v10;

  v6 = *(_QWORD *)(a1 + 16);
  if (v6 && *(double *)(a1 + 16 * v6 + 24) < *(double *)(a1 + 40))
  {
    v7 = a3;
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending] = sub_1BC51DE34(a1);
  }
  else
  {
    *(_QWORD *)&a3[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending] = a1;
    v8 = a3;
  }
  *(_QWORD *)&a3[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_blockCoordinateInfo] = a2;
  swift_unknownObjectRetain();

  v10.receiver = a3;
  v10.super_class = (Class)type metadata accessor for MedicalRecordChartCoordinate();
  return objc_msgSendSuper2(&v10, sel_init);
}

id sub_1BC51E9D4(uint64_t a1, uint64_t a2)
{
  char *v4;

  v4 = (char *)objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartCoordinate());
  return sub_1BC51E924(a1, a2, v4);
}

uint64_t sub_1BC51EA18()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC51EA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_1BC51D2EC(a1, a2, a3, a4, a5, *(double *)(v7 + 16), *(double *)(v7 + 24), a6, a7, *(char **)(v7 + 32), *(CGContext **)(v7 + 40));
}

uint64_t block_copy_helper_49(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_49()
{
  return swift_release();
}

BOOL sub_1BC51EA84(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  CGFloat v17;
  CGFloat v18;
  _BOOL8 result;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  CGPoint v32;
  CGRect v33;
  CGRect v34;

  v10 = sub_1BC62BB34();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicalRecordChartCoordinate();
  v14 = swift_dynamicCastClass();
  if (!v14)
  {
    sub_1BC62BAE0();
    swift_unknownObjectRetain_n();
    v20 = sub_1BC62BB28();
    v21 = sub_1BC62CAC4();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v30 = a1;
      v31 = v23;
      *(_DWORD *)v22 = 136446210;
      v29[1] = v22 + 4;
      sub_1BC51F7D4(0, &qword_1EF4354B0);
      swift_unknownObjectRetain();
      v24 = sub_1BC62C6E0();
      v30 = sub_1BC4991F0(v24, v25, &v31);
      sub_1BC62CFF8();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v23, -1, -1);
      MEMORY[0x1BCCF36A8](v22, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  v15 = *(double **)(v14 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  v16 = *((_QWORD *)v15 + 2);
  if (!v16)
    return 0;
  v17 = v15[4];
  v18 = v15[5];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.width = a4;
  v33.size.height = a5;
  v32.x = v17;
  v32.y = v18;
  result = CGRectContainsPoint(v33, v32);
  if (result)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return 1;
  }
  if (v16 == 1)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return 0;
  }
  v26 = v15 + 7;
  v27 = 1;
  while (1)
  {
    v28 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    v34.origin.x = a2;
    v34.origin.y = a3;
    v34.size.width = a4;
    v34.size.height = a5;
    result = CGRectContainsPoint(v34, *(CGPoint *)(v26 - 1));
    if (result)
      goto LABEL_4;
    v26 += 2;
    ++v27;
    if (v28 == v16)
      goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC51ED60(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicalRecordChartCoordinate();
  if (swift_dynamicCastClass())
  {
    swift_unknownObjectRetain();
    sub_1BC51DF70(a2, a3);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1BC62BAE0();
    swift_unknownObjectRetain_n();
    v11 = sub_1BC62BB28();
    v12 = sub_1BC62CAC4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v18 = a1;
      v19 = v14;
      *(_DWORD *)v13 = 136446210;
      v17[1] = v13 + 4;
      sub_1BC51F7D4(0, &qword_1EF4354B0);
      swift_unknownObjectRetain();
      v15 = sub_1BC62C6E0();
      v18 = sub_1BC4991F0(v15, v16, &v19);
      sub_1BC62CFF8();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v14, -1, -1);
      MEMORY[0x1BCCF36A8](v13, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1BC51EF9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicalRecordChartCoordinate();
  result = swift_dynamicCastClass();
  if (!result)
  {
    sub_1BC62BAE0();
    swift_unknownObjectRetain_n();
    v7 = sub_1BC62BB28();
    v8 = sub_1BC62CAC4();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v14 = a1;
      v15 = v10;
      *(_DWORD *)v9 = 136446210;
      v13[1] = v9 + 4;
      sub_1BC51F7D4(0, &qword_1EF4354B0);
      swift_unknownObjectRetain();
      v11 = sub_1BC62C6E0();
      v14 = sub_1BC4991F0(v11, v12, &v15);
      sub_1BC62CFF8();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v10, -1, -1);
      MEMORY[0x1BCCF36A8](v9, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_1BC51F1CC(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicalRecordChartCoordinate();
  v8 = swift_dynamicCastClass();
  if (v8)
  {
    v9 = *(_QWORD *)(v8 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
    if (*(_QWORD *)(v9 + 16))
      v10 = *(double *)(v9 + 32);
    else
      v10 = 0.0;
    swift_unknownObjectRetain();
    sub_1BC51DF70(v10, a2);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1BC62BAE0();
    swift_unknownObjectRetain_n();
    v11 = sub_1BC62BB28();
    v12 = sub_1BC62CAC4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v19 = a1;
      v20 = v14;
      *(_DWORD *)v13 = 136446210;
      v18[1] = v13 + 4;
      sub_1BC51F7D4(0, &qword_1EF4354B0);
      swift_unknownObjectRetain();
      v15 = sub_1BC62C6E0();
      v19 = sub_1BC4991F0(v15, v16, &v20);
      sub_1BC62CFF8();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v14, -1, -1);
      MEMORY[0x1BCCF36A8](v13, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t type metadata accessor for MedicalRecordChartSeries()
{
  return objc_opt_self();
}

id sub_1BC51F444(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  CGPoint v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  CGAffineTransform v17;
  uint64_t v18;
  CGPoint v19;

  v2 = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v15 = a1[1];
    v16 = *a1;
    v14 = a1[2];
    v18 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BC3BDE48(0, v4, 0);
    v5 = v18;
    v6 = v3 + 40;
    do
    {
      v19 = *(CGPoint *)(v6 - 8);
      *(_OWORD *)&v17.a = v16;
      *(_OWORD *)&v17.c = v15;
      *(_OWORD *)&v17.tx = v14;
      v7 = CGPointApplyAffineTransform(v19, &v17);
      v18 = v5;
      v9 = *(_QWORD *)(v5 + 16);
      v8 = *(_QWORD *)(v5 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1BC3BDE48(v8 > 1, v9 + 1, 1);
        v5 = v18;
      }
      *(_QWORD *)(v5 + 16) = v9 + 1;
      *(CGPoint *)(v5 + 16 * v9 + 32) = v7;
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_blockCoordinateInfo);
  swift_getObjectType();
  v11 = (objc_class *)type metadata accessor for MedicalRecordChartCoordinate();
  swift_unknownObjectRetain();
  v12 = sub_1BC51E924(v5, v10, (char *)objc_allocWithZone(v11));
  swift_unknownObjectRelease();
  return v12;
}

uint64_t type metadata accessor for MedicalRecordChartCoordinate()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedicalRecordChartSeries()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for MedicalRecordChartCoordinate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.__allocating_init(sortedPointValues:blockCoordinateInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.xValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.minPoint.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.maxPoint.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.distance(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.startXValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.endXValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.userInfo.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.copy(with:roundToViewScale:)(_OWORD *a1)
{
  _QWORD *v1;
  uint64_t (*v2)(_OWORD *);
  __int128 v3;
  _OWORD v5[3];

  v2 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA0);
  v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  v5[2] = a1[2];
  return v2(v5);
}

void sub_1BC51F700()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4354C0)
  {
    sub_1BC51F774(255, &qword_1EF4354C8, (unint64_t *)&qword_1EF4354D0, (uint64_t)&protocolRef_HKChartPoint, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4354C0);
  }
}

void sub_1BC51F774(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC51F7D4(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC51F7D4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id ContentStatusView.__allocating_init(title:subtitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return ContentStatusView.init(title:subtitle:)(a1, a2, a3, a4);
}

uint64_t sub_1BC51F8A0()
{
  return sub_1BC38BBC4(&OBJC_IVAR___HRContentStatusView_title);
}

id sub_1BC51F8B8(uint64_t a1, uint64_t a2)
{
  return sub_1BC51F968(a1, a2, &OBJC_IVAR___HRContentStatusView_title, &OBJC_IVAR___HRContentStatusView_titleLabel);
}

void (*sub_1BC51F8CC(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRContentStatusView_title;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC51F924;
}

void sub_1BC51F924(_QWORD **a1, char a2)
{
  sub_1BC51FA94(a1, a2, &OBJC_IVAR___HRContentStatusView_titleLabel);
}

uint64_t sub_1BC51F93C()
{
  return sub_1BC38BBC4(&OBJC_IVAR___HRContentStatusView_subtitle);
}

id sub_1BC51F954(uint64_t a1, uint64_t a2)
{
  return sub_1BC51F968(a1, a2, &OBJC_IVAR___HRContentStatusView_subtitle, &OBJC_IVAR___HRContentStatusView_subtitleLabel);
}

id sub_1BC51F968(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  char *v4;
  char *v8;
  void *v9;
  void *v10;

  v8 = &v4[*a3];
  swift_beginAccess();
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  swift_bridgeObjectRelease();
  v9 = *(void **)&v4[*a4];
  if (*((_QWORD *)v8 + 1))
  {
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v9, sel_setText_, v10);

  return objc_msgSend(v4, sel_setNeedsLayout);
}

void (*sub_1BC51FA30(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HRContentStatusView_subtitle;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC51FA88;
}

void sub_1BC51FA88(_QWORD **a1, char a2)
{
  sub_1BC51FA94(a1, a2, &OBJC_IVAR___HRContentStatusView_subtitleLabel);
}

void sub_1BC51FA94(_QWORD **a1, char a2, _QWORD *a3)
{
  _QWORD *v5;
  char *v6;
  void *v7;
  void *v8;

  v5 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v6 = (char *)v5[3];
    v7 = *(void **)&v6[*a3];
    if (*(_QWORD *)&v6[v5[4] + 8])
    {
      swift_bridgeObjectRetain();
      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v6 = (char *)v5[3];
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v7, sel_setText_, v8);

    objc_msgSend(v6, sel_setNeedsLayout);
  }
  free(v5);
}

id ContentStatusView.init(title:subtitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  objc_super v22;

  v5 = OBJC_IVAR___HRContentStatusView_titleLabel;
  v6 = (void *)objc_opt_self();
  v7 = v4;
  v8 = objc_msgSend(v6, sel_labelColor);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v9, sel_setFont_, 0);
  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  objc_msgSend(v9, sel_setTextColor_, v8);

  *(_QWORD *)&v4[v5] = v9;
  v10 = OBJC_IVAR___HRContentStatusView_subtitleLabel;
  v11 = objc_msgSend(v6, sel_labelColor);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v12, sel_setFont_, 0);
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  objc_msgSend(v12, sel_setTextColor_, v11);

  *(_QWORD *)&v7[v10] = v12;
  v13 = OBJC_IVAR___HRContentStatusView_spinnerView;
  *(_QWORD *)&v7[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  v14 = &v7[OBJC_IVAR___HRContentStatusView_title];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v15 = &v7[OBJC_IVAR___HRContentStatusView_subtitle];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  swift_beginAccess();
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = a2;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)v15 = a3;
  *((_QWORD *)v15 + 1) = a4;

  swift_bridgeObjectRelease();
  v22.receiver = v7;
  v22.super_class = (Class)type metadata accessor for ContentStatusView();
  v16 = objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BC5202D4();

  return v16;
}

uint64_t type metadata accessor for ContentStatusView()
{
  return objc_opt_self();
}

id ContentStatusView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ContentStatusView.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  objc_super v18;

  v2 = OBJC_IVAR___HRContentStatusView_titleLabel;
  v3 = (void *)objc_opt_self();
  v4 = v1;
  v5 = objc_msgSend(v3, sel_labelColor);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v6, sel_setFont_, 0);
  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  objc_msgSend(v6, sel_setTextColor_, v5);

  *(_QWORD *)&v1[v2] = v6;
  v7 = OBJC_IVAR___HRContentStatusView_subtitleLabel;
  v8 = objc_msgSend(v3, sel_labelColor);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v9, sel_setFont_, 0);
  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  objc_msgSend(v9, sel_setTextColor_, v8);

  *(_QWORD *)&v4[v7] = v9;
  v10 = OBJC_IVAR___HRContentStatusView_spinnerView;
  *(_QWORD *)&v4[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  v11 = &v4[OBJC_IVAR___HRContentStatusView_title];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v12 = &v4[OBJC_IVAR___HRContentStatusView_subtitle];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;

  v18.receiver = v4;
  v18.super_class = (Class)type metadata accessor for ContentStatusView();
  v13 = objc_msgSendSuper2(&v18, sel_initWithCoder_, a1);
  v14 = v13;
  if (v13)
  {
    v15 = v13;
    sub_1BC5202D4();

  }
  return v14;
}

id ContentStatusView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id ContentStatusView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  objc_super v22;

  v9 = OBJC_IVAR___HRContentStatusView_titleLabel;
  v10 = (void *)objc_opt_self();
  v11 = v4;
  v12 = objc_msgSend(v10, sel_labelColor);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v13, sel_setFont_, 0);
  objc_msgSend(v13, sel_setNumberOfLines_, 0);
  objc_msgSend(v13, sel_setTextColor_, v12);

  *(_QWORD *)&v4[v9] = v13;
  v14 = OBJC_IVAR___HRContentStatusView_subtitleLabel;
  v15 = objc_msgSend(v10, sel_labelColor);
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v16, sel_setFont_, 0);
  objc_msgSend(v16, sel_setNumberOfLines_, 0);
  objc_msgSend(v16, sel_setTextColor_, v15);

  *(_QWORD *)&v11[v14] = v16;
  v17 = OBJC_IVAR___HRContentStatusView_spinnerView;
  *(_QWORD *)&v11[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  v18 = &v11[OBJC_IVAR___HRContentStatusView_title];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v19 = &v11[OBJC_IVAR___HRContentStatusView_subtitle];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;

  v22.receiver = v11;
  v22.super_class = (Class)type metadata accessor for ContentStatusView();
  v20 = objc_msgSendSuper2(&v22, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC5202D4();

  return v20;
}

uint64_t sub_1BC5202D4()
{
  char *v0;
  void *v1;
  char *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)&v0[OBJC_IVAR___HRContentStatusView_titleLabel];
  v2 = &v0[OBJC_IVAR___HRContentStatusView_title];
  swift_beginAccess();
  if (*((_QWORD *)v2 + 1))
  {
    swift_bridgeObjectRetain();
    v3 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(v1, sel_setText_, v3);

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_labelColor);
  objc_msgSend(v1, sel_setTextColor_, v5);

  objc_msgSend(v1, sel_setAlpha_, 0.4);
  objc_msgSend(v0, sel_addSubview_, v1);
  v6 = *(void **)&v0[OBJC_IVAR___HRContentStatusView_subtitleLabel];
  v7 = &v0[OBJC_IVAR___HRContentStatusView_subtitle];
  swift_beginAccess();
  if (*((_QWORD *)v7 + 1))
  {
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v6, sel_setText_, v8);

  v9 = objc_msgSend(v4, sel_labelColor);
  objc_msgSend(v6, sel_setTextColor_, v9);

  objc_msgSend(v6, sel_setAlpha_, 0.4);
  objc_msgSend(v0, sel_addSubview_, v6);
  v10 = *(void **)&v0[OBJC_IVAR___HRContentStatusView_spinnerView];
  objc_msgSend(v10, sel_setHidesWhenStopped_, 1);
  objc_msgSend(v0, sel_addSubview_, v10);
  sub_1BC520938();
  sub_1BC448304();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC639590;
  v12 = sub_1BC62BDD4();
  v13 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v13;
  MEMORY[0x1BCCF20E8](v11, sel_traitCollectionDidChangeWithTraitEnvironment_previousTraitCollection_);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1BC52054C()
{
  return sub_1BC520570((SEL *)&selRef_startAnimating);
}

id sub_1BC520564()
{
  return sub_1BC520570((SEL *)&selRef_stopAnimating);
}

id sub_1BC520570(SEL *a1)
{
  char *v1;

  objc_msgSend(*(id *)&v1[OBJC_IVAR___HRContentStatusView_spinnerView], *a1);
  return objc_msgSend(v1, sel_setNeedsLayout);
}

void sub_1BC5205B0(char *a1, uint64_t a2, SEL *a3)
{
  void *v4;
  char *v5;

  v4 = *(void **)&a1[OBJC_IVAR___HRContentStatusView_spinnerView];
  v5 = a1;
  objc_msgSend(v4, *a3);
  objc_msgSend(v5, sel_setNeedsLayout);

}

id sub_1BC520674()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  double v4;
  double Height;
  double v6;
  CGFloat x;
  double v8;
  double Width;
  double v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGFloat v18;
  CGFloat v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v27;
  double v28;
  double v29;
  CGFloat v30;
  objc_super v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  v1 = v0;
  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for ContentStatusView();
  objc_msgSendSuper2(&v31, sel_layoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR___HRContentStatusView_titleLabel];
  objc_msgSend(v2, sel_sizeToFit);
  v3 = *(void **)&v1[OBJC_IVAR___HRContentStatusView_spinnerView];
  objc_msgSend(v3, sel_sizeToFit);
  objc_msgSend(v1, sel_bounds);
  v4 = CGRectGetWidth(v32) + -32.0;
  objc_msgSend(v1, sel_bounds);
  Height = CGRectGetHeight(v33);
  objc_msgSend(v2, sel_frame);
  v6 = (Height - CGRectGetHeight(v34)) * 0.5;
  objc_msgSend(v2, sel_frame);
  x = v35.origin.x;
  v8 = v35.size.height;
  Width = CGRectGetWidth(v35);
  if (v4 >= Width)
    v10 = Width;
  else
    v10 = v4;
  objc_msgSend(v1, sel_bounds);
  v11 = CGRectGetWidth(v36);
  v37.origin.x = x;
  v37.origin.y = v6;
  v37.size.width = v10;
  v37.size.height = v8;
  v30 = (v11 - CGRectGetWidth(v37)) * 0.5;
  v12 = *(void **)&v1[OBJC_IVAR___HRContentStatusView_subtitleLabel];
  objc_msgSend(v12, sel_sizeThatFits_, v4, 1.79769313e308);
  v14 = v13;
  v16 = v15;
  objc_msgSend(v12, sel_frame);
  v18 = v17;
  v38.origin.x = v30;
  v38.origin.y = v6;
  v38.size.width = v10;
  v38.size.height = v8;
  v19 = CGRectGetMaxY(v38) + 8.0;
  objc_msgSend(v1, sel_bounds);
  v20 = CGRectGetWidth(v39);
  v40.origin.x = v18;
  v40.origin.y = v19;
  v40.size.width = v14;
  v40.size.height = v16;
  v27 = (v20 - CGRectGetWidth(v40)) * 0.5;
  objc_msgSend(v3, sel_frame);
  v28 = v22;
  v29 = v21;
  objc_msgSend(v3, sel_frame);
  v23 = v6 + -8.0 - CGRectGetHeight(v41);
  objc_msgSend(v1, sel_bounds);
  v24 = CGRectGetWidth(v42);
  objc_msgSend(v3, sel_frame);
  v25 = (v24 - CGRectGetWidth(v43)) * 0.5;
  objc_msgSend(v2, sel_setFrame_, v30, v6, v10, v8);
  objc_msgSend(v12, sel_setFrame_, v27, v19, v14, v16);
  return objc_msgSend(v3, sel_setFrame_, v25, v23, v29, v28);
}

void sub_1BC520938()
{
  uint64_t v0;
  id v1;
  double v2;
  double v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, *MEMORY[0x1E0DC4B50]);
  objc_msgSend(v1, sel_scaledValueForValue_, 27.0);
  v3 = v2;

  v4 = *(void **)(v0 + OBJC_IVAR___HRContentStatusView_titleLabel);
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_systemFontOfSize_, v3);
  objc_msgSend(v4, sel_setFont_, v6);

  v7 = *(void **)(v0 + OBJC_IVAR___HRContentStatusView_subtitleLabel);
  v8 = objc_msgSend(v5, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v7, sel_setFont_, v8);

}

id ContentStatusView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContentStatusView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC520A7C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___HRContentStatusView_title, a2);
}

uint64_t sub_1BC520A88(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC51F8B8);
}

uint64_t sub_1BC520A94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___HRContentStatusView_subtitle, a2);
}

uint64_t sub_1BC520AA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC51F954);
}

uint64_t method lookup function for ContentStatusView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContentStatusView.title.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ContentStatusView.title.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ContentStatusView.title.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ContentStatusView.subtitle.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ContentStatusView.subtitle.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ContentStatusView.subtitle.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ContentStatusView.__allocating_init(title:subtitle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of ContentStatusView.startAnimating()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ContentStatusView.stopAnimating()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

id sub_1BC520C10(void *a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  id result;

  if (a1)
    v2 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  else
    v2 = 0;
  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!v2)
  {

    goto LABEL_12;
  }
  v5 = sub_1BC62C680();
  v7 = v6;
  if (v5 == sub_1BC62C680() && v7 == v8)
  {

    return (id)swift_bridgeObjectRelease_n();
  }
  v10 = sub_1BC62D574();

  swift_bridgeObjectRelease();
  result = (id)swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
LABEL_12:
    sub_1BC520938();
    return objc_msgSend(v1, sel_setNeedsLayout);
  }
  return result;
}

id sub_1BC520D34(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  objc_super v23;
  uint64_t v24;
  unint64_t v25;

  v2 = v1;
  v25 = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  sub_1BC52184C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC6395A0;
  sub_1BC62AC10();
  v5 = sub_1BC62ABF8();
  v7 = v6;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BC3644C0();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  *(_QWORD *)(v4 + 96) = v8;
  *(_QWORD *)(v4 + 104) = v9;
  *(_QWORD *)(v4 + 64) = v9;
  *(_QWORD *)(v4 + 72) = 0xD000000000000024;
  *(_QWORD *)(v4 + 80) = 0x80000001BC658530;
  v10 = (void *)sub_1BC62CA64();
  sub_1BC34D844();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(v11 + 32) = v10;
  v24 = v11;
  sub_1BC62C890();
  v12 = v10;
  v13 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v13);

  *(_QWORD *)&v2[qword_1EF42C0D8] = v14;
  *(_QWORD *)&v2[qword_1EF42C0E0] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v2[qword_1EF42C0D0] = a1;
  v15 = objc_allocWithZone(MEMORY[0x1E0DC3610]);
  v16 = v14;
  v17 = a1;
  v18 = objc_msgSend(v15, sel_init);
  v23.receiver = v2;
  v23.super_class = (Class)type metadata accessor for FeedItemListViewController();
  v19 = objc_msgSendSuper2(&v23, sel_initWithCollectionViewLayout_, v18);

  v20 = v19;
  v21 = (void *)sub_1BC62C650();
  objc_msgSend(v20, sel_setTitle_, v21);

  return v20;
}

void sub_1BC520FC8(void *a1)
{
  id v1;
  id v2;
  void *v3;
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)type metadata accessor for InternalSharedItemsViewController();
  v1 = v4.receiver;
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  v2 = objc_msgSend(v1, sel_collectionView, v4.receiver, v4.super_class);
  if (v2)
  {
    v3 = v2;
    sub_1BC62B714();
    sub_1BC62CB60();

  }
  else
  {
    __break(1u);
  }
}

id sub_1BC521058(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for InternalSharedItemsViewController();
  return objc_msgSendSuper2(&v5, sel_viewDidAppear_, a3);
}

uint64_t sub_1BC5210A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t result;
  __int128 v12;

  v3 = *(void **)(v1 + qword_1EF42C0D0);
  v4 = *(id *)(v1 + qword_1EF42C0D8);
  v5 = objc_msgSend(v3, sel_healthStore);
  v6 = objc_msgSend(v5, sel_profileIdentifier);

  sub_1BC62CB90();
  v7 = objc_msgSend(v3, sel_healthStore);
  v8 = type metadata accessor for InternalSharedItemsDataSourceProvider();
  v9 = (_QWORD *)swift_allocObject();
  v9[10] = MEMORY[0x1E0DEE9E8];
  v9[2] = v4;
  sub_1BC34E718(&v12, (uint64_t)(v9 + 3));
  v9[8] = v6;
  v9[9] = v7;
  a1[3] = v8;
  result = sub_1BC379B20(&qword_1EF435678, v10, (uint64_t (*)(uint64_t))type metadata accessor for InternalSharedItemsDataSourceProvider, (uint64_t)&protocol conformance descriptor for InternalSharedItemsDataSourceProvider);
  a1[4] = result;
  *a1 = v9;
  return result;
}

_QWORD *InternalSharedItemsDataSourceProvider.__allocating_init(predicate:sourceProfile:store:healthStore:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[10] = MEMORY[0x1E0DEE9E8];
  v8[2] = a1;
  sub_1BC34E718(a3, (uint64_t)(v8 + 3));
  v8[8] = a2;
  v8[9] = a4;
  return v8;
}

id sub_1BC521230()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalSharedItemsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id InternalSharedItemsDataSourceProvider.predicate.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

_QWORD *InternalSharedItemsDataSourceProvider.init(predicate:sourceProfile:store:healthStore:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[10] = MEMORY[0x1E0DEE9E8];
  sub_1BC34E718(a3, (uint64_t)(v4 + 3));
  v4[8] = a2;
  v4[9] = a4;
  return v4;
}

uint64_t sub_1BC5212B8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC52184C(0, (unint64_t *)&qword_1EF42A0F0, (unint64_t *)&qword_1EF42A0F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v0 + 32) = sub_1BC52131C();
  *(_QWORD *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1BC52131C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  _QWORD v18[4];

  v1 = v0;
  v2 = sub_1BC62B12C();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC62AC10();
  v3 = (void *)MEMORY[0x1BCCEFEBC]();
  sub_1BC34D844();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC6396B0;
  v5 = *(void **)(v0 + 16);
  *(_QWORD *)(v4 + 32) = v5;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  v6 = v5;
  v7 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v7);

  objc_msgSend(v3, sel_setPredicate_, v8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC6396B0;
  v10 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v11 = (void *)sub_1BC62C650();
  v12 = objc_msgSend(v10, sel_initWithKey_ascending_selector_, v11, 1, sel_localizedStandardCompare_);

  *(_QWORD *)(v9 + 32) = v12;
  v18[0] = v9;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A53B0);
  v13 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSortDescriptors_, v13);

  swift_beginAccess();
  sub_1BC34E674(v1 + 24, (uint64_t)v18);
  __swift_project_boxed_opaque_existential_1Tm(v18, v18[3]);
  v14 = v3;
  v15 = (void *)sub_1BC62A9D0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v14, v15, 0, 0);

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  sub_1BC379AA4();
  sub_1BC62B0FC();
  v16 = sub_1BC62AF34();

  sub_1BC379B20((unint64_t *)&qword_1EF42A240, 255, (uint64_t (*)(uint64_t))sub_1BC379AA4, MEMORY[0x1E0D2B7F8]);
  return v16;
}

id *InternalSharedItemsDataSourceProvider.deinit()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InternalSharedItemsDataSourceProvider.__deallocating_deinit()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC5216B0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC52184C(0, (unint64_t *)&qword_1EF42A0F0, (unint64_t *)&qword_1EF42A0F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v0 + 32) = sub_1BC52131C();
  *(_QWORD *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1BC521718@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 24;
  swift_beginAccess();
  return sub_1BC34E674(v3, a2);
}

uint64_t type metadata accessor for InternalSharedItemsViewController()
{
  uint64_t result;

  result = qword_1EF435528;
  if (!qword_1EF435528)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC5217A4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC5217E0()
{
  return type metadata accessor for InternalSharedItemsViewController();
}

uint64_t type metadata accessor for InternalSharedItemsDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for InternalSharedItemsDataSourceProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InternalSharedItemsDataSourceProvider.store.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of InternalSharedItemsDataSourceProvider.store.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of InternalSharedItemsDataSourceProvider.store.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of InternalSharedItemsDataSourceProvider.__allocating_init(predicate:sourceProfile:store:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of InternalSharedItemsDataSourceProvider.selectedDataSources(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

void sub_1BC52184C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC3B9914(255, a3);
    v4 = sub_1BC62D538();
    if (!v5)
      atomic_store(v4, a2);
  }
}

id HealthRecordsNotifications.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

unint64_t static HealthRecordsNotifications.Domains.notificationContentState.getter()
{
  return 0xD00000000000002CLL;
}

unint64_t static HealthRecordsNotifications.Domains.notificationGeneration(profileIdentifier:)()
{
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  return 0xD000000000000022;
}

id HealthRecordsNotifications.init()()
{
  void *v0;
  char *v1;
  unint64_t v2;
  objc_super v4;

  v1 = v0;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1BC62D3B8())
    v2 = sub_1BC523A5C(MEMORY[0x1E0DEE9D8]);
  else
    v2 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI26HealthRecordsNotifications_cancellables] = v2;
  sub_1BC62AA0C();
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI26HealthRecordsNotifications_notificationManager] = sub_1BC62AA00();

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for HealthRecordsNotifications();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for HealthRecordsNotifications()
{
  return objc_opt_self();
}

uint64_t sub_1BC521AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v17 = a1;
  v18 = a2;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - v3;
  sub_1BC523D0C();
  v6 = v5;
  v16 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC62A9E8();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v20 = (id)sub_1BC62CC74();
  v9 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  sub_1BC523DE8();
  sub_1BC347F0C(&qword_1EF4356A8, (uint64_t (*)(uint64_t))sub_1BC523DE8, MEMORY[0x1E0C96108]);
  sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  sub_1BC62C080();
  sub_1BC3A4334((uint64_t)v4);

  swift_release();
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = (_QWORD *)swift_allocObject();
  v12 = v17;
  v13 = v18;
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v13;
  sub_1BC347F0C(&qword_1EF4356B0, (uint64_t (*)(uint64_t))sub_1BC523D0C, MEMORY[0x1E0C95CB8]);
  swift_retain();
  sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
  swift_beginAccess();
  sub_1BC62BEA0();
  swift_endAccess();
  return swift_release();
}

void sub_1BC521D64(id *a1, uint64_t a2, void (*a3)(id), uint64_t a4)
{
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;

  v7 = a2 + 16;
  v8 = objc_msgSend(*a1, sel_authorizationStatus);
  if (v8 == (id)1)
  {
    swift_beginAccess();
    v12 = MEMORY[0x1BCCF37A4](v7);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = sub_1BC523F14();

    }
    else
    {
      v14 = 0;
    }
    a3(v14);

  }
  else if (v8)
  {
    a3(0);
  }
  else
  {
    swift_beginAccess();
    v9 = MEMORY[0x1BCCF37A4](v7);
    if (v9)
    {
      v10 = (void *)v9;
      swift_retain();

      v11 = (_QWORD *)swift_allocObject();
      v11[2] = a3;
      v11[3] = a4;
      v11[4] = a2;
      swift_retain();
      swift_retain();
      sub_1BC62A9F4();
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_1BC521EA8(int a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t (*v33)(uint64_t);
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t aBlock[6];

  v43 = a3;
  v44 = a1;
  v8 = sub_1BC62C47C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62C4AC();
  v45 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC62BB34();
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v40 = v16;
    v41 = a5;
    v42 = v12;
    v19 = a2;
    sub_1BC62BAF8();
    v20 = a2;
    v21 = a2;
    v22 = sub_1BC62BB28();
    v23 = sub_1BC62CAC4();
    if (os_log_type_enabled(v22, v23))
    {
      v39 = v9;
      v24 = swift_slowAlloc();
      v37 = v15;
      v25 = (uint8_t *)v24;
      v36 = swift_slowAlloc();
      v46 = (uint64_t)a2;
      aBlock[0] = v36;
      v38 = a4;
      *(_DWORD *)v25 = 136446210;
      v35 = v25 + 4;
      v26 = a2;
      sub_1BC35E44C();
      v27 = sub_1BC62C6E0();
      v46 = sub_1BC4991F0(v27, v28, aBlock);
      a4 = v38;
      sub_1BC62CFF8();
      v9 = v39;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v22, v23, "Failed to request notification authorization for new health records alert: %{public}s", v25, 0xCu);
      v29 = v36;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v29, -1, -1);
      MEMORY[0x1BCCF36A8](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v18, v37);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v40 + 8))(v18, v15);
    }
    a5 = v41;
    v12 = v42;
  }
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v30 = (void *)sub_1BC62CC74();
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v43;
  *(_QWORD *)(v31 + 24) = a4;
  *(_BYTE *)(v31 + 32) = v44 & 1;
  *(_QWORD *)(v31 + 40) = a5;
  aBlock[4] = (uint64_t)sub_1BC5243D4;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC39BE70;
  aBlock[3] = (uint64_t)&block_descriptor_51;
  v32 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v33, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC35811C();
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v14, v11, v32);
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v14, v12);
}

void sub_1BC5222D0(void (*a1)(id), uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  if ((a3 & 1) != 0 || (v5 = a4 + 16, swift_beginAccess(), (v6 = MEMORY[0x1BCCF37A4](v5)) == 0))
  {
    v8 = 0;
  }
  else
  {
    v7 = (void *)v6;
    v8 = sub_1BC523F14();

  }
  a1(v8);

}

void sub_1BC5223B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD v18[2];

  v18[1] = a3;
  v3 = sub_1BC62B780();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62B78C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62B7A4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A3198 != -1)
    swift_once();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0D2B950], v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0D2B940], v3);
  sub_1BC62B798();
  sub_1BC347F0C(&qword_1EF433B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B968], MEMORY[0x1E0D2B920]);
  sub_1BC62AC34();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A36D8);
  v15 = (void *)sub_1BC62CB00();
  v16 = (void *)sub_1BC62C8FC();
  v17 = (void *)sub_1BC62C650();
  objc_msgSend(v15, sel_setValue_forKey_, v16, v17);

}

uint64_t sub_1BC5225DC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v0 = sub_1BC62AC28();
  v18 = *(_QWORD *)(v0 - 8);
  v19 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC62B780();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62B78C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC62B7A4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A3198 != -1)
    swift_once();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0D2B950], v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0D2B928], v3);
  sub_1BC62B798();
  sub_1BC347F0C(&qword_1EF433B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B968], MEMORY[0x1E0D2B920]);
  sub_1BC62AC34();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v16 = v18;
  v15 = v19;
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v2, *MEMORY[0x1E0D29C00], v19);
  sub_1BC62AC1C();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v2, v15);
}

id HealthRecordsNotifications.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthRecordsNotifications();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC52286C(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_1BC3CBF60();
      v3 = sub_1BC62D1B4();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x1BCCF24CC](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_1BC62CEA8();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_1BC62CEB4();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_1BC62CEB4();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_1BC62CEA8();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_1BC62CEB4();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_1BC62CEB4();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_1BC522BC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t j;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  id v49;
  BOOL v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  void *v57;
  char v58;
  void *v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  char v68;
  void *v69;
  char v70;
  char v71;
  id v72;
  id v73;
  void *v74;
  char v75;
  void *v76;
  char v77;
  uint64_t v78;
  id v79;
  void *v80;
  char v81;
  void *v82;
  char v83;
  unint64_t v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  char v90;
  void *v91;
  char v92;
  uint64_t v93;
  id v94;
  void *v95;
  char v96;
  void *v97;
  char v98;
  unint64_t v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  void *v129;
  int v130;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return;
  sub_1BC524428();
  v3 = sub_1BC62D1B4();
  v4 = 0;
  v5 = v3 + 56;
  v111 = v1;
  v112 = a1 + 32;
  v125 = v3 + 56;
  v126 = v3;
  while (1)
  {
    v6 = (unsigned __int8 *)(v112 + 72 * v4);
    v7 = *v6;
    v8 = (void *)*((_QWORD *)v6 + 1);
    v9 = *((_QWORD *)v6 + 2);
    v10 = *((_QWORD *)v6 + 3);
    v123 = *((_QWORD *)v6 + 4);
    v120 = *(_OWORD *)(v6 + 56);
    v121 = *(_OWORD *)(v6 + 40);
    sub_1BC62D670();
    v130 = v7;
    sub_1BC62D67C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = *((id *)&v120 + 1);
    v12 = v8;
    sub_1BC62CEC0();
    v129 = v12;

    v127 = v11;
    sub_1BC62D688();
    if (v10)
    {
      swift_bridgeObjectRetain();
      sub_1BC62C740();
      swift_bridgeObjectRelease();
    }
    v124 = v10;
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v121 + 1) >> 62)
    {
      swift_bridgeObjectRetain_n();
      v25 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      v119 = v25;
      sub_1BC62D67C();
      swift_bridgeObjectRetain();
      v14 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      v117 = *((_QWORD *)&v121 + 1);
      if (!v14)
        goto LABEL_14;
    }
    else
    {
      v13 = *(_QWORD *)((*((_QWORD *)&v121 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v119 = v13;
      sub_1BC62D67C();
      v14 = *(_QWORD *)((*((_QWORD *)&v121 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10);
      v117 = *((_QWORD *)&v121 + 1);
      if (!v14)
        goto LABEL_14;
    }
    if (v14 < 1)
      goto LABEL_144;
    if ((*((_QWORD *)&v121 + 1) & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v14; ++i)
      {
        MEMORY[0x1BCCF24CC](i, *((_QWORD *)&v121 + 1));
        sub_1BC62CEC0();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v16 = 0;
      do
      {
        v17 = *(void **)(*((_QWORD *)&v121 + 1) + 8 * v16++ + 32);
        v18 = v17;
        sub_1BC62CEC0();

      }
      while (v14 != v16);
    }
LABEL_14:
    swift_bridgeObjectRelease();
    v115 = v4;
    v122 = v9;
    if ((unint64_t)v120 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v26 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      v116 = v26;
      sub_1BC62D67C();
      swift_bridgeObjectRetain();
      v20 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (!v20)
        goto LABEL_27;
    }
    else
    {
      v19 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v116 = v19;
      sub_1BC62D67C();
      v20 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v20)
        goto LABEL_27;
    }
    if (v20 < 1)
      goto LABEL_145;
    if ((v120 & 0xC000000000000001) != 0)
    {
      for (j = 0; j != v20; ++j)
      {
        MEMORY[0x1BCCF24CC](j, v120);
        sub_1BC62CEC0();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v22 = 0;
      do
      {
        v23 = *(void **)(v120 + 8 * v22++ + 32);
        v24 = v23;
        sub_1BC62CEC0();

      }
      while (v20 != v22);
    }
LABEL_27:
    swift_bridgeObjectRelease();
    v27 = v127;
    sub_1BC62CEC0();

    v28 = sub_1BC62D6AC();
    v29 = -1 << *(_BYTE *)(v3 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    v32 = *(_QWORD *)(v5 + 8 * (v30 >> 6));
    v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      v34 = ~v29;
      v35 = v117 & 0xFFFFFFFFFFFFFF8;
      v36 = (v117 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v117 < 0)
        v35 = v117;
      if (*((_QWORD *)&v121 + 1) >> 62)
        v36 = v35;
      v113 = v36;
      v114 = v117 & 0xC000000000000001;
      v37 = v120 & 0xFFFFFFFFFFFFFF8;
      v38 = (v120 & 0xFFFFFFFFFFFFFF8) + 32;
      v107 = v27;
      if ((uint64_t)v120 < 0)
        v37 = v120;
      if ((unint64_t)v120 >> 62)
        v38 = v37;
      v106 = v38;
      v108 = v120 & 0xC000000000000001;
      v128 = v34;
      do
      {
        v39 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 72 * v30);
        if (*(unsigned __int8 *)v39 != v130)
          goto LABEL_40;
        v41 = (void *)v39[1];
        v40 = v39[2];
        v43 = v39[3];
        v42 = v39[4];
        v44 = v39[5];
        v45 = v39[6];
        v47 = v39[7];
        v46 = (void *)v39[8];
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v48 = v46;
        v49 = v41;
        if ((sub_1BC62CEB4() & 1) == 0)
        {
LABEL_38:

LABEL_39:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v5 = v125;
          v3 = v126;
          v34 = v128;
          goto LABEL_40;
        }
        if (v43)
        {
          if (!v124)
            goto LABEL_38;
          v50 = v40 == v122 && v43 == v124;
          if (!v50 && (sub_1BC62D574() & 1) == 0)
            goto LABEL_38;
        }
        else if (v124)
        {
          goto LABEL_38;
        }
        v51 = v42 == v123 && v44 == (_QWORD)v121;
        if (!v51 && (sub_1BC62D574() & 1) == 0)
          goto LABEL_38;
        v118 = v48;
        if ((unint64_t)v45 >> 62)
        {
          swift_bridgeObjectRetain();
          v52 = sub_1BC62D3B8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v52 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v52 != v119)
        {
LABEL_131:

          goto LABEL_39;
        }
        if (!v119)
          goto LABEL_72;
        v53 = v45 & 0xFFFFFFFFFFFFFF8;
        v54 = (v45 & 0xFFFFFFFFFFFFFF8) + 32;
        if (v45 < 0)
          v53 = v45;
        if ((unint64_t)v45 >> 62)
          v54 = v53;
        if (v54 == v113)
          goto LABEL_72;
        if (v119 < 0)
          goto LABEL_146;
        v109 = v45 & 0xC000000000000001;
        if ((v45 & 0xC000000000000001) != 0)
        {
          v55 = (id)MEMORY[0x1BCCF24CC](0, v45);
          if (v114)
            goto LABEL_135;
        }
        else
        {
          if (!*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_147;
          v55 = *(id *)(v45 + 32);
          if (v114)
          {
LABEL_135:
            v56 = (id)MEMORY[0x1BCCF24CC](0, v117);
            goto LABEL_70;
          }
        }
        if (!*(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_148;
        v56 = *(id *)(v117 + 32);
LABEL_70:
        v57 = v56;
        sub_1BC34B6A0(0, &qword_1ED6A48A0);
        v58 = sub_1BC62CEB4();
        v59 = v55;
        v60 = v58;

        if ((v60 & 1) == 0)
          goto LABEL_38;
        if (v119 != 1)
        {
          if (v109)
          {
            v72 = (id)MEMORY[0x1BCCF24CC](1, v45);
            if (v114)
              goto LABEL_94;
LABEL_97:
            if (*(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
              goto LABEL_157;
            v73 = *(id *)(v117 + 40);
          }
          else
          {
            if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
              goto LABEL_156;
            v72 = *(id *)(v45 + 40);
            if (!v114)
              goto LABEL_97;
LABEL_94:
            v73 = (id)MEMORY[0x1BCCF24CC](1, v117);
          }
          v74 = v73;
          v75 = sub_1BC62CEB4();
          v76 = v72;
          v77 = v75;

          if ((v77 & 1) == 0)
            goto LABEL_38;
          v78 = 6;
          while (2 - v119 + v78 != 6)
          {
            v84 = v78 - 4;
            if (v109)
            {
              v85 = (id)MEMORY[0x1BCCF24CC](v78 - 4, v45);
            }
            else
            {
              if (v84 >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_149;
              v85 = *(id *)(v45 + 8 * v78);
            }
            v86 = v85;
            if (v114)
            {
              v79 = (id)MEMORY[0x1BCCF24CC](v78 - 4, v117);
            }
            else
            {
              if (v84 >= *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_150;
              v79 = *(id *)(v117 + 8 * v78);
            }
            v80 = v79;
            v81 = sub_1BC62CEB4();
            v82 = v86;
            v83 = v81;

            ++v78;
            if ((v83 & 1) == 0)
              goto LABEL_131;
          }
        }
LABEL_72:
        if ((unint64_t)v47 >> 62)
        {
          swift_bridgeObjectRetain();
          v61 = sub_1BC62D3B8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v61 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v61 != v116)
          goto LABEL_131;
        if (v116)
        {
          v62 = v47 & 0xFFFFFFFFFFFFFF8;
          v63 = (v47 & 0xFFFFFFFFFFFFFF8) + 32;
          if (v47 < 0)
            v62 = v47;
          if ((unint64_t)v47 >> 62)
            v63 = v62;
          if (v63 != v106)
          {
            if (v116 < 0)
              goto LABEL_151;
            v110 = v47 & 0xC000000000000001;
            if ((v47 & 0xC000000000000001) != 0)
            {
              v64 = (id)MEMORY[0x1BCCF24CC](0, v47);
            }
            else
            {
              if (!*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_152;
              v64 = *(id *)(v47 + 32);
            }
            v65 = v64;
            v48 = v118;
            if (v108)
            {
              v66 = (id)MEMORY[0x1BCCF24CC](0, v120);
            }
            else
            {
              if (!*(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_153;
              v66 = *(id *)(v120 + 32);
            }
            v67 = v66;
            sub_1BC34B6A0(0, &qword_1ED6A48A0);
            v68 = sub_1BC62CEB4();
            v69 = v65;
            v70 = v68;

            if ((v70 & 1) == 0)
              goto LABEL_38;
            if (v116 != 1)
            {
              if (v110)
              {
                v87 = (id)MEMORY[0x1BCCF24CC](1, v47);
              }
              else
              {
                if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
                  goto LABEL_158;
                v87 = *(id *)(v47 + 40);
              }
              v88 = v87;
              if (v108)
              {
                v89 = (id)MEMORY[0x1BCCF24CC](1, v120);
                v48 = v118;
              }
              else
              {
                v48 = v118;
                if (*(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
                  goto LABEL_159;
                v89 = *(id *)(v120 + 40);
              }
              v90 = sub_1BC62CEB4();
              v91 = v88;
              v92 = v90;

              if ((v92 & 1) == 0)
                goto LABEL_38;
              v93 = 6;
              while (2 - v116 + v93 != 6)
              {
                v99 = v93 - 4;
                if (v110)
                {
                  v100 = (id)MEMORY[0x1BCCF24CC](v93 - 4, v47);
                }
                else
                {
                  if (v99 >= *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_154;
                  v100 = *(id *)(v47 + 8 * v93);
                }
                v101 = v100;
                if (v108)
                {
                  v94 = (id)MEMORY[0x1BCCF24CC](v93 - 4, v120);
                }
                else
                {
                  if (v99 >= *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_155;
                  v94 = *(id *)(v120 + 8 * v93);
                }
                v95 = v94;
                v96 = sub_1BC62CEB4();
                v97 = v101;
                v98 = v96;

                ++v93;
                if ((v98 & 1) == 0)
                  goto LABEL_131;
              }
            }
          }
        }
        v71 = sub_1BC62CEB4();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v5 = v125;
        v3 = v126;
        v34 = v128;
        if ((v71 & 1) != 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          goto LABEL_140;
        }
LABEL_40:
        v30 = (v30 + 1) & v34;
        v31 = v30 >> 6;
        v32 = *(_QWORD *)(v5 + 8 * (v30 >> 6));
        v33 = 1 << v30;
      }
      while ((v32 & (1 << v30)) != 0);
    }
    *(_QWORD *)(v5 + 8 * v31) = v33 | v32;
    v102 = *(_QWORD *)(v3 + 48) + 72 * v30;
    *(_BYTE *)v102 = v130;
    *(_QWORD *)(v102 + 8) = v129;
    *(_QWORD *)(v102 + 16) = v122;
    *(_QWORD *)(v102 + 24) = v124;
    *(_QWORD *)(v102 + 32) = v123;
    *(_OWORD *)(v102 + 40) = v121;
    *(_OWORD *)(v102 + 56) = v120;
    v103 = *(_QWORD *)(v3 + 16);
    v104 = __OFADD__(v103, 1);
    v105 = v103 + 1;
    if (v104)
      break;
    *(_QWORD *)(v3 + 16) = v105;
LABEL_140:
    v4 = v115 + 1;
    if (v115 + 1 == v111)
      return;
  }
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
}

uint64_t sub_1BC5237DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_1BC62A8C8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1BC3CD7E4(0, &qword_1EF42CB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], &qword_1EF42CB08, MEMORY[0x1E0CB11D0]);
    v9 = sub_1BC62D1B4();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_1BC347F0C(&qword_1EF42CB08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1BC62C5C0();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v6, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1BC347F0C((unint64_t *)&unk_1EF4320E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1BC62C644();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

unint64_t sub_1BC523A5C(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_1BC3CD7E4(0, &qword_1EF4356E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], &qword_1EF432E38, MEMORY[0x1E0C95E18]);
      result = sub_1BC62D1B4();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1BC62D3B8();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x1BCCF24CC](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_1BC62BEB8();
    sub_1BC347F0C(&qword_1EF432E38, v8, MEMORY[0x1E0C95E18]);
    result = sub_1BC62C5C0();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_1BC347F0C(&qword_1EF4356E8, v8, MEMORY[0x1E0C95E20]);
      do
      {
        result = sub_1BC62C644();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void sub_1BC523D0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF435690)
  {
    sub_1BC523DE8();
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC347F0C(&qword_1EF4356A8, (uint64_t (*)(uint64_t))sub_1BC523DE8, MEMORY[0x1E0C96108]);
    sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC62BE70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF435690);
  }
}

void sub_1BC523DE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF435698)
  {
    sub_1BC34B6A0(255, &qword_1EF4356A0);
    v0 = sub_1BC62BF54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF435698);
  }
}

uint64_t sub_1BC523E5C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC523E80()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC523EAC(id *a1)
{
  uint64_t v1;

  sub_1BC521D64(a1, *(_QWORD *)(v1 + 16), *(void (**)(id))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t method lookup function for HealthRecordsNotifications()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthRecordsNotifications.notificationAlertIfNecessary(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

ValueMetadata *type metadata accessor for HealthRecordsNotifications.Domains()
{
  return &type metadata for HealthRecordsNotifications.Domains;
}

uint64_t sub_1BC523EF0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

id sub_1BC523F14()
{
  void *v0;
  void *v1;
  unsigned __int8 v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t aBlock;
  uint64_t v20;
  void (*v21)(uint64_t, void *);
  void *v22;
  void *v23;
  uint64_t v24;

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A36D8);
  v0 = (void *)sub_1BC62CB00();
  v1 = (void *)sub_1BC62C650();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  v3 = 0;
  if ((v2 & 1) == 0)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v4 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v5 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v7 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v3 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v6, v7, 1, 0xE000000000000000);

    v8 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = 0xD000000000000018;
    *(_QWORD *)(v9 + 24) = 0x80000001BC661AA0;
    v10 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v23 = sub_1BC524420;
    v24 = v9;
    aBlock = MEMORY[0x1E0C809B0];
    v20 = 1107296256;
    v21 = sub_1BC39B5A0;
    v22 = &block_descriptor_18_0;
    v11 = _Block_copy(&aBlock);
    swift_release();
    v12 = (void *)objc_opt_self();
    v13 = objc_msgSend(v12, sel_actionWithTitle_style_handler_, v10, 1, v11, 0xE000000000000000);
    _Block_release(v11);

    objc_msgSend(v3, sel_addAction_, v13);
    v14 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v15 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v23 = sub_1BC5225DC;
    v24 = 0;
    aBlock = MEMORY[0x1E0C809B0];
    v20 = 1107296256;
    v21 = sub_1BC39B5A0;
    v22 = &block_descriptor_21_2;
    v16 = _Block_copy(&aBlock);
    swift_release();
    v17 = objc_msgSend(v12, sel_actionWithTitle_style_handler_, v15, 0, v16, 0xE000000000000000);
    _Block_release(v16);

    objc_msgSend(v3, sel_addAction_, v17);
  }
  return v3;
}

uint64_t sub_1BC524370()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC52439C(int a1, void *a2)
{
  uint64_t *v2;

  return sub_1BC521EA8(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BC5243A8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC5243D4()
{
  uint64_t v0;

  sub_1BC5222D0(*(void (**)(id))(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t block_copy_helper_50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_50()
{
  return swift_release();
}

uint64_t sub_1BC5243FC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC524420(uint64_t a1)
{
  uint64_t v1;

  sub_1BC5223B8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BC524428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C9A8)
  {
    sub_1BC35E728();
    v0 = sub_1BC62D1C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C9A8);
  }
}

int64_t sub_1BC524490(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

BOOL sub_1BC5244DC()
{
  char *v0;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (objc_msgSend(v0, sel_controllerMode) == (id)3)
    return 0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartabilityResult];
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v4 > 1)
      return 1;
  }
  else if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    return 1;
  }
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource))
    return 0;
  return *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource) != 0;
}

uint64_t sub_1BC524770()
{
  char *v0;
  char *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjCClassFromMetadata;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *boxed_opaque_existential_1;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t result;
  uint64_t v42;
  char *v43;
  id v44;
  int v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;

  v1 = v0;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF435770, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v43 - v4;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v9).n128_u64[0];
  v12 = (char *)&v43 - v11;
  objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartabilityResult]+ OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_configuration), sel_chartControllerClass, v10);
  swift_getObjCClassMetadata();
  sub_1BC34B6A0(0, &qword_1EF435778);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_isSubclassOfClass_, ObjCClassFromMetadata)
    && (v14 = swift_dynamicCastMetatype()) != 0)
  {
    v15 = v14;
    v16 = v1[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartType];
    sub_1BC357158(0, &qword_1EF435780, (uint64_t (*)(uint64_t))sub_1BC526244, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BC639590;
    v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_displayTypes];
    v46 = v15;
    v45 = v16;
    v43 = v5;
    if (v18 >> 62)
    {
      sub_1BC34B6A0(0, (unint64_t *)&unk_1EF435790);
      swift_bridgeObjectRetain();
      v42 = sub_1BC62D3AC();
      swift_bridgeObjectRelease();
      v18 = v42;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BC62D598();
      sub_1BC34B6A0(0, (unint64_t *)&unk_1EF435790);
    }
    *(_QWORD *)(v17 + 32) = v18;
    v19 = objc_msgSend(v1, sel_applicationItems, v43);
    v44 = objc_msgSend(v19, sel_healthStore);

    v20 = objc_msgSend(v1, sel_applicationItems);
    v21 = objc_msgSend(v20, sel_unitController);

    v22 = objc_msgSend(v1, sel_applicationItems);
    v23 = objc_msgSend(v22, sel_dateCache);

    v24 = objc_msgSend(v1, sel_applicationItems);
    v25 = objc_msgSend(v24, sel_chartDataCacheController);

    v26 = objc_msgSend(v1, sel_applicationItems);
    v27 = objc_msgSend(v26, sel_timeScopeController);

    v28 = objc_msgSend(v1, sel_applicationItems);
    v29 = objc_msgSend(v28, sel_sampleDateRangeController);

    v30 = objc_msgSend(v1, sel_displayDate);
    if (v30)
    {
      v31 = v30;
      sub_1BC62A724();

      v32 = sub_1BC62A760();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v8, 0, 1, v32);
    }
    else
    {
      v32 = sub_1BC62A760();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v8, 1, 1, v32);
    }
    sub_1BC3EFC38((uint64_t)v8, (uint64_t)v12);
    sub_1BC62A760();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v12, 1, v32) == 1)
    {
      sub_1BC377E3C((uint64_t)v12, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v47 = 0u;
      v48 = 0u;
    }
    else
    {
      *((_QWORD *)&v48 + 1) = v32;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v47);
      (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 32))(boxed_opaque_existential_1, v12, v32);
    }
    v35 = v44;
    if (v45)
      v36 = 173312;
    else
      v36 = 1280;
    v37 = sub_1BC62A8D4();
    v38 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v43, 1, 1, v37);
    v39 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v40 = sub_1BC525158(v17, 0, 0, v35, v21, v23, v25, v27, v29, &v47, v38, v36, 0);
    objc_msgSend(v40, sel_addChartViewObserver_, v40);
    return (uint64_t)v40;
  }
  else
  {
    result = sub_1BC62D394();
    __break(1u);
  }
  return result;
}

id sub_1BC524DB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v17;
  _BYTE v18[40];

  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v18[-v9 - 8];
  sub_1BC34E674(v3 + OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining, (uint64_t)v18);
  v11 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartabilityResult);
  HIBYTE(v17) = *(_BYTE *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartType);
  sub_1BC378004(a2, (uint64_t)v10, (unint64_t *)&qword_1ED6A4EA0, v7);
  v12 = objc_allocWithZone((Class)type metadata accessor for ChartOverlayViewController());
  v13 = v11;
  v14 = a3;
  v15 = sub_1BC5257AC((uint64_t)v18, v13, (_BYTE *)&v17 + 7, a1, (uint64_t)v14, (uint64_t)v10);

  return v15;
}

id sub_1BC5250C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChartOverlayViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ChartOverlayViewController()
{
  return objc_opt_self();
}

id sub_1BC525158(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;

  v39 = a6;
  v40 = a7;
  v41 = a8;
  v42 = a5;
  sub_1BC526244();
  v36 = sub_1BC62C86C();
  swift_bridgeObjectRelease();
  if (a3)
  {
    sub_1BC34B6A0(0, (unint64_t *)&unk_1EF4357B0);
    v37 = sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v16 = a10[3];
    if (v16)
    {
LABEL_3:
      v17 = __swift_project_boxed_opaque_existential_1Tm(a10, v16);
      v18 = *(_QWORD *)(v16 - 8);
      v19 = MEMORY[0x1E0C80A78](v17);
      v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
      v22 = sub_1BC62D568();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a10);
      goto LABEL_6;
    }
  }
  else
  {
    v37 = 0;
    v16 = a10[3];
    if (v16)
      goto LABEL_3;
  }
  v22 = 0;
LABEL_6:
  v23 = sub_1BC62A8D4();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(a11, 1, v23) != 1)
  {
    v25 = (void *)sub_1BC62A868();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a11, v23);
  }
  if (a13)
  {
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    sub_1BC34B6A0(0, (unint64_t *)&unk_1EF4357A0);
    sub_1BC475BC8();
    v26 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = 0;
  }
  v34 = v22;
  v27 = v41;
  v28 = v40;
  v30 = (void *)v37;
  v29 = v38;
  v31 = (void *)v36;
  v38 = a9;
  v32 = v39;
  v35 = objc_msgSend(v29, sel_initWithStackedDisplayTypes_primaryDisplayTypeStackIndex_stackedDisplayTypeHeights_healthStore_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_timeScopeRanges_, v36, a2, v37, a4, v42, v39, v40, v41, a9, v34, v25, a12, v26);

  swift_unknownObjectRelease();
  return v35;
}

uint64_t sub_1BC525404(uint64_t result, uint64_t a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  void **v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  objc_class *v18;
  char *v19;
  char *v20;
  void **v21;
  void *v22;
  uint64_t v23;
  int64_t v25;
  uint64_t v27;
  objc_super v28;
  uint64_t v29;

  v25 = a3 >> 1;
  v5 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
    goto LABEL_16;
  v6 = result;
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if (v5 < 0)
    {
LABEL_17:
      __break(1u);
      return result;
    }
    v23 = v5;
    v8 = 0;
    v9 = (void **)(v6 + 24 * a2 + 16);
    while (!__OFADD__(v8, 1))
    {
      if (a2 + v8 >= v25 || v8 >= v5)
        goto LABEL_15;
      v27 = v8 + 1;
      v16 = (uint64_t)*(v9 - 2);
      v15 = (uint64_t)*(v9 - 1);
      v17 = (char *)*v9;
      v18 = (objc_class *)type metadata accessor for MedicalRecordChartOverlayContext();
      v19 = (char *)objc_allocWithZone(v18);
      *(_QWORD *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem] = 0;
      *(_QWORD *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedOverlayDisplayType] = 0;
      *(_QWORD *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedDataSource] = 0;
      v20 = &v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_title];
      *(_QWORD *)v20 = v16;
      *((_QWORD *)v20 + 1) = v15;
      *(_QWORD *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_dataSource] = v17;
      *(_QWORD *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_defaultColors] = a4;
      v21 = (void **)&v17[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors];
      swift_beginAccess();
      v22 = *v21;
      if (v22)
        v10 = v22;
      else
        v10 = a4;
      *(_QWORD *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_selectedColors] = v10;
      *(_QWORD *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_verticalAxis] = a5;
      v28.receiver = v19;
      v28.super_class = v18;
      swift_bridgeObjectRetain();
      v11 = v17;
      v12 = a4;
      v13 = a5;
      v14 = v22;
      objc_msgSendSuper2(&v28, sel_init);
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      result = sub_1BC62D274();
      ++v8;
      v9 += 3;
      v5 = v23;
      if (v27 == v23)
        return v29;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_1BC525614(uint64_t result, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = result;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BC62D3B8();
  result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3)
    v6 = v3;
  else
    v6 = v5;
  if (v5 < 0)
    v6 = v3;
  if (v3)
    v7 = v6;
  else
    v7 = 0;
  if (v4)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    v8 = sub_1BC62D3B8();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    _s11SizedRecordCMa();
    v10 = 0;
    do
    {
      v11 = v10 + 1;
      sub_1BC62D1F0();
      v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BC62D3C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

id sub_1BC5257AC(uint64_t a1, char *a2, _BYTE *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char *v18;
  char *v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  objc_class *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;
  uint64_t v33;

  v30 = a5;
  v31 = a4;
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - v13;
  LOBYTE(a3) = *a3;
  sub_1BC34E674(a1, (uint64_t)&v6[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining]);
  v6[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartType] = (_BYTE)a3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartabilityResult] = a2;
  sub_1BC34D844();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC6396B0;
  v16 = *(void **)&a2[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_masterDataSource];
  v17 = (void *)objc_opt_self();
  v18 = v6;
  v19 = a2;
  v20 = v16;
  v21 = objc_msgSend(v17, sel_standardNumericYAxisWithConfigurationOverrides_, 0);
  v22 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v20) + 0x160))();

  *(_QWORD *)(v15 + 32) = v22;
  v33 = v15;
  sub_1BC62C890();
  *(_QWORD *)&v18[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_displayTypes] = v33;

  sub_1BC378004(a6, (uint64_t)v14, (unint64_t *)&qword_1ED6A4EA0, v11);
  v23 = sub_1BC62A760();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23) != 1)
  {
    v25 = (void *)sub_1BC62A700();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v23);
  }
  v26 = (objc_class *)type metadata accessor for ChartOverlayViewController();
  v32.receiver = v18;
  v32.super_class = v26;
  v27 = objc_msgSendSuper2(&v32, sel_initWithDisplayDate_applicationItems_factorDisplayTypes_mode_, v25, v30, 0, v31);

  sub_1BC377E3C(a6, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v27;
}

uint64_t sub_1BC5259F4()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining + 24];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining + 32];
  __swift_project_boxed_opaque_existential_1Tm(&v0[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining], v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v7 = v6;
  swift_bridgeObjectRelease();
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    v9 = *((_QWORD *)v2 + 3);
    v10 = *((_QWORD *)v2 + 4);
    __swift_project_boxed_opaque_existential_1Tm(v2, v9);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  }
  else
  {
    v12 = objc_msgSend(v1, sel_title);
    if (v12)
    {
      v13 = v12;
      v11 = sub_1BC62C680();

    }
    else
    {
      return 0;
    }
  }
  return v11;
}

uint64_t sub_1BC525AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void **v38;
  _QWORD *v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  id v54;
  unint64_t v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  int64_t v65;
  id v66;
  id v67;
  unint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v2 = MEMORY[0x1E0DEE9D8];
  if (!a1)
    return v2;
  v67 = objc_msgSend((id)objc_opt_self(), sel_standardNumericYAxisWithConfigurationOverrides_, 0);
  sub_1BC34B6A0(0, (unint64_t *)&unk_1EF435740);
  if (a1 == 1)
  {
    v66 = static HKUIMetricColors.chartFilterDefaultForSingle()();
    v4 = 1;
  }
  else
  {
    v66 = static HKUIMetricColors.chartFilterDefaultForMultiple()();
    v4 = 0x7FFFFFFFFFFFFFFFLL;
  }
  v65 = v4;
  sub_1BC357158(0, &qword_1EF42C508, (uint64_t (*)(uint64_t))sub_1BC3B8D3C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  if (qword_1EF428568 != -1)
    swift_once();
  v6 = (id)qword_1EF42F6E0;
  swift_bridgeObjectRetain();
  v7 = sub_1BC62A4A8();
  v9 = v8;
  swift_bridgeObjectRelease();

  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v9;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartabilityResult);
  v11 = *(void **)(v10 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource);
  *(_QWORD *)(inited + 48) = v11;
  v12 = (void *)qword_1EF42F6E0;
  v13 = v11;
  v14 = v12;
  swift_bridgeObjectRetain();
  v15 = sub_1BC62A4A8();
  v17 = v16;
  swift_bridgeObjectRelease();

  *(_QWORD *)(inited + 56) = v15;
  *(_QWORD *)(inited + 64) = v17;
  v18 = *(void **)(v10 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource);
  *(_QWORD *)(inited + 72) = v18;
  v19 = *(_QWORD *)(v10 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources);
  if (!(v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    v21 = v18;
    swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_9;
LABEL_24:
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x1E0DEE9D8];
LABEL_25:
    v69[0] = inited;
    sub_1BC3BB8E4(v31);
    v36 = v69[0];
    v37 = *(_QWORD *)(v69[0] + 16);
    if (v37)
    {
      swift_bridgeObjectRetain();
      v38 = (void **)(v36 + 48);
      v39 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v41 = *v38;
        if (*v38)
        {
          v43 = (uint64_t)*(v38 - 2);
          v42 = (uint64_t)*(v38 - 1);
          swift_bridgeObjectRetain();
          v44 = v41;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v39 = sub_1BC3B6D74(0, v39[2] + 1, 1, v39);
          v46 = v39[2];
          v45 = v39[3];
          if (v46 >= v45 >> 1)
            v39 = sub_1BC3B6D74((_QWORD *)(v45 > 1), v46 + 1, 1, v39);
          v39[2] = v46 + 1;
          v40 = &v39[3 * v46];
          v40[4] = v43;
          v40[5] = v42;
          v40[6] = v44;
        }
        v38 += 3;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
    }
    else
    {
      v39 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    sub_1BC524490(v65, (uint64_t)v39);
    v48 = v47;
    v50 = v49;
    v52 = v51;
    v53 = v66;
    v54 = v67;
    v55 = sub_1BC525404(v48, v50, v52, v53, v54);

    if (v55 >> 62)
    {
      sub_1BC5261F0();
      sub_1BC62D3AC();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BC62D598();
      sub_1BC5261F0();
    }
    swift_bridgeObjectRelease();
    v56 = objc_allocWithZone(MEMORY[0x1E0D2F7F8]);
    sub_1BC5261F0();
    v57 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v58 = objc_msgSend(v56, sel_initWithSectionTitle_overlayContextItems_, 0, v57, 0xE000000000000000);

    sub_1BC34D844();
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_1BC6396B0;
    v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_1BC6396B0;
    *(_QWORD *)(v60 + 32) = v58;
    v69[0] = v60;
    sub_1BC62C890();
    v61 = objc_allocWithZone(MEMORY[0x1E0D2F800]);
    sub_1BC34B6A0(0, &qword_1EF435768);
    v62 = v58;
    v63 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v64 = objc_msgSend(v61, sel_initWithContainerTitle_overlayContextSections_, 0, v63);

    *(_QWORD *)(v59 + 32) = v64;
    v69[0] = v59;
    sub_1BC62C890();
    v2 = v69[0];

    swift_unknownObjectRelease();
    return v2;
  }
  v35 = v18;
  swift_bridgeObjectRetain();
  v20 = sub_1BC62D3B8();
  if (!v20)
    goto LABEL_24;
LABEL_9:
  v72 = v2;
  result = sub_1BC3BDE74(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    v23 = 0;
    v68 = v19 & 0xC000000000000001;
    v24 = v19;
    do
    {
      if (v68)
        v25 = (id)MEMORY[0x1BCCF24CC](v23, v19);
      else
        v25 = *(id *)(v19 + 8 * v23 + 32);
      v26 = v25;
      sub_1BC378004((uint64_t)v25 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining, (uint64_t)v69, (unint64_t *)&qword_1EF4329E0, (uint64_t (*)(uint64_t))sub_1BC4B82F4);
      v27 = v70;
      if (v70)
      {
        v28 = v71;
        __swift_project_boxed_opaque_existential_1Tm(v69, v70);
        v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
        v30 = v29;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v69);
      }
      else
      {
        sub_1BC377E3C((uint64_t)v69, (unint64_t *)&qword_1EF4329E0, (uint64_t (*)(uint64_t))sub_1BC4B82F4);
        v30 = 0xE000000000000000;
      }
      v31 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC3BDE74(0, *(_QWORD *)(v31 + 16) + 1, 1);
        v31 = v72;
      }
      v33 = *(_QWORD *)(v31 + 16);
      v32 = *(_QWORD *)(v31 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1BC3BDE74(v32 > 1, v33 + 1, 1);
        v31 = v72;
      }
      ++v23;
      *(_QWORD *)(v31 + 16) = v33 + 1;
      v34 = (_QWORD *)(v31 + 24 * v33);
      v34[4] = v27;
      v34[5] = v30;
      v34[6] = v26;
      v19 = v24;
    }
    while (v20 != v23);
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BC5261F0()
{
  unint64_t result;

  result = qword_1EF435760;
  if (!qword_1EF435760)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF435760);
  }
  return result;
}

void sub_1BC526244()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF435788)
  {
    sub_1BC34B6A0(255, (unint64_t *)&unk_1EF435790);
    v0 = sub_1BC62C8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF435788);
  }
}

_QWORD *sub_1BC5262A8(uint64_t a1)
{
  _QWORD *result;
  int v3;
  char v4;
  uint64_t v5;

  result = (_QWORD *)sub_1BC5B1500();
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_QWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_1BC528AB8(&v5, (uint64_t)result, v3, 0, a1);
}

uint64_t sub_1BC526334(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_1BC62D0D0();
    v5 = v4;
    v6 = sub_1BC62D154();
    v8 = MEMORY[0x1BCCF23C4](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_1BC3583DC(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_1BC5823C0(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_1BC3583DC(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_1BC582634(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1BC526440(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t inited;
  id v16;
  id v17;
  void *v18;
  id v19;
  _BYTE v20[32];
  _QWORD v21[3];
  uint64_t v22;

  v3 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) == 1)
  {
    v6 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_providedHealthStore);
    if (v6)
    {
      v7 = v6;
LABEL_6:
      type metadata accessor for OnboardingTileAppearanceManager();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = v7;
      v16 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
      v17 = v7;
      v18 = (void *)sub_1BC62C650();
      v19 = objc_msgSend(v16, sel_initWithCategory_domainName_healthStore_, 0, v18, v17);

      *(_QWORD *)(inited + 24) = v19;
      swift_storeEnumTagMultiPayload();
      sub_1BC370C18(a1 & 1, (uint64_t)v5);
      swift_release();
      swift_release();
      sub_1BC42418C((uint64_t)v5);
      return;
    }
    __break(1u);
  }
  else
  {
    v8 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
    swift_beginAccess();
    sub_1BC526708(v8, (uint64_t)v21);
    v9 = v22;
    if (v22)
    {
      v10 = __swift_project_boxed_opaque_existential_1Tm(v21, v22);
      v11 = *(_QWORD *)(v9 - 8);
      v12 = MEMORY[0x1E0C80A78](v10);
      v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(_BYTE *, __n128))(v11 + 16))(v14, v12);
      v7 = (id)sub_1BC62B588();
      (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v9);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_1BC526654(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC526708(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
  swift_beginAccess();
  sub_1BC526810((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC5266B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
  swift_beginAccess();
  return sub_1BC526708(v3, a1);
}

uint64_t sub_1BC526708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC357158(0, &qword_1ED6A3320, (uint64_t (*)(uint64_t))sub_1BC526764, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC526764()
{
  unint64_t result;

  result = qword_1ED6A32D0;
  if (!qword_1ED6A32D0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A32D0);
  }
  return result;
}

uint64_t sub_1BC5267B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
  swift_beginAccess();
  sub_1BC526810(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1BC526810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC357158(0, &qword_1ED6A3320, (uint64_t (*)(uint64_t))sub_1BC526764, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1BC52686C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1BC526920(char a1, void *a2)
{
  char *v2;
  char *v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  objc_super v22;

  v5 = &v2[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v6 = v2;
  v7 = (void *)sub_1BC62C86C();
  v8 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v8)
  {
    v9 = sub_1BC62C680();
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  v12 = (uint64_t *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier];
  *v12 = v9;
  v12[1] = v11;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissWidth] = 0x4042000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissHeight] = 0x4042000000000000;
  v13 = &v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_headerType];
  v14 = *MEMORY[0x1E0D2AAB0];
  v15 = sub_1BC62ADE4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___tipsView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___accessoryLabel] = 0;
  v16 = OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_accessoryColor;
  *(_QWORD *)&v6[v16] = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover] = a1 & 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_providedHealthStore] = a2;
  v17 = a2;

  v22.receiver = v6;
  v22.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
  v18 = objc_msgSendSuper2(&v22, sel_initWithNibName_bundle_, 0, 0);
  v19 = v18;
  if ((a1 & 1) != 0)
  {
    v20 = v18;
    objc_msgSend(v20, sel_setModalPresentationStyle_, 7);

  }
  return v19;
}

id LabsOnboardingViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t LabsOnboardingViewController.isPresentingInPopover.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover);
}

void *LabsOnboardingViewController.providedHealthStore.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_providedHealthStore);
  v2 = v1;
  return v1;
}

uint64_t sub_1BC526B94(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC526BFC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC526C50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC526CAC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t LabsOnboardingViewController.headerType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_headerType;
  v4 = sub_1BC62ADE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id sub_1BC526D34()
{
  return sub_1BC4079A0(&OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___tipsView, (uint64_t (*)(uint64_t))sub_1BC526D48);
}

char *sub_1BC526D48(uint64_t a1)
{
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t inited;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  char *v35;
  id v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;

  v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TipsView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v3 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v4 = sub_1BC62A4A8();
  v6 = v5;
  swift_bridgeObjectRelease();

  v7 = (uint64_t *)&v2[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText];
  swift_beginAccess();
  *v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease();
  v8 = sub_1BC3E8624();
  if (v7[1])
  {
    swift_bridgeObjectRetain();
    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v8, sel_setText_, v9, 0xE000000000000000);

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v10, sel_setParagraphSpacing_, 11.0);
  v11 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC357158(0, (unint64_t *)&qword_1EF4383B0, (uint64_t (*)(uint64_t))sub_1BC34B5A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6395A0;
  v13 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v14 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  v15 = v13;
  *(_QWORD *)(inited + 40) = sub_1BC62CDDC();
  v16 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 72) = v16;
  *(_QWORD *)(inited + 104) = sub_1BC34B6A0(0, &qword_1EF42F490);
  *(_QWORD *)(inited + 80) = v10;
  v17 = v16;
  v18 = v10;
  sub_1BC35B6B4(inited);
  v19 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v20 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC347F0C((unint64_t *)&qword_1EF4383C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC639360);
  v21 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21, 0xE000000000000000);

  v23 = (id *)&v2[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText];
  swift_beginAccess();
  v24 = *v23;
  *v23 = v22;
  v25 = v22;

  v26 = sub_1BC3E878C();
  v27 = *v23;
  objc_msgSend(v26, sel_setAttributedText_, v27);

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
  v28 = (void *)sub_1BC62CE54();
  v29 = (id *)&v2[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image];
  swift_beginAccess();
  v30 = *v29;
  *v29 = v28;
  v31 = v28;

  v32 = sub_1BC3E88EC();
  v33 = *v29;
  objc_msgSend(v32, sel_setImage_, v33);

  v34 = (void *)objc_opt_self();
  v35 = v2;
  v36 = objc_msgSend(v34, sel_systemYellowColor);
  objc_msgSend(v35, sel_setTintColor_, v36);

  v37 = (uint64_t *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  v39 = *v37;
  v38 = v37[1];
  swift_bridgeObjectRetain();
  sub_1BC3E9298(v39, v38);

  swift_bridgeObjectRelease();
  return v35;
}

id sub_1BC5272D8()
{
  return sub_1BC4079A0(&OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___accessoryLabel, (uint64_t (*)(uint64_t))sub_1BC5272EC);
}

id sub_1BC5272EC(char *a1)
{
  id v2;
  id v3;
  double v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  double v18;
  double v19;
  id v20;
  id v21;

  sub_1BC62AE44();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v3 = (id)*MEMORY[0x1E0DC4AB8];
  sub_1BC62AE38();
  sub_1BC62AE2C();
  objc_msgSend(v2, sel_setTextColor_, *(_QWORD *)&a1[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_accessoryColor]);
  objc_msgSend(v2, sel_setTextAlignment_, 1);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setAdjustsFontSizeToFitWidth_, 1);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);
  LODWORD(v5) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 1, v5);
  LODWORD(v6) = 1148846080;
  objc_msgSend(v2, sel_setContentHuggingPriority_forAxis_, 0, v6);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  v7 = v2;
  v8 = (void *)sub_1BC62CDDC();
  objc_msgSend(v7, sel_setFont_, v8);

  v9 = v7;
  v10 = (void *)sub_1BC62C86C();
  v11 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v11);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
  v12 = (void *)sub_1BC62CDDC();
  v13 = (void *)MEMORY[0x1BCCF213C]();

  if (v13)
  {
    v14 = v9;
    v15 = v13;
    v16 = (void *)sub_1BC62CDDC();
    v17 = objc_msgSend(a1, sel_traitCollection);
    objc_msgSend(v17, sel_displayScale);
    v19 = v18;

    v20 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3498]), sel_initWithImage_font_displayScale_tintColor_adjustsImageSizeForAccessibilityContentSizeCategory_, v15, v16, v20, 1, v19);

    objc_msgSend(v14, sel_setAttributedText_, v21);
  }
  return v9;
}

void sub_1BC527608()
{
  unsigned __int8 *v0;
  int v1;
  double v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  sub_1BC527778();
  v1 = v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover];
  v2 = -22.0;
  if (v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover])
    v2 = 24.0;
  sub_1BC5278A4(v0, v2);
  v3 = (void *)objc_opt_self();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v4 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v4);

  if (v1)
  {
    v5 = objc_msgSend(v0, sel_view);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_systemLayoutSizeFittingSize_, *MEMORY[0x1E0DC4FF8], *(double *)(MEMORY[0x1E0DC4FF8] + 8));
      v8 = v7;
      v10 = v9;

      objc_msgSend(v0, sel_setPreferredContentSize_, v8, v10);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1BC527778()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  v2 = v1;
  v3 = sub_1BC526D34();
  objc_msgSend(v2, sel_addSubview_, v3);

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) == 1)
  {
    v4 = objc_msgSend(v0, sel_view);
    if (v4)
    {
      v5 = v4;
      v6 = sub_1BC5272D8();
      objc_msgSend(v5, sel_addSubview_, v6);

      return;
    }
    goto LABEL_7;
  }
}

void sub_1BC52785C()
{
  void *v0;

  sub_1BC526440(1);
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) == 1)
    objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id sub_1BC5278A4(void *a1, double a2)
{
  id v4;
  id v5;
  id result;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;

  v38 = MEMORY[0x1E0DEE9D8];
  v4 = sub_1BC526D34();
  v5 = objc_msgSend(v4, sel_leadingAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v7 = result;
  v8 = objc_msgSend(result, sel_leadingAnchor);

  v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v8);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v10 = sub_1BC526D34();
  v11 = objc_msgSend(v10, sel_trailingAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
    goto LABEL_25;
  v12 = result;
  v13 = objc_msgSend(result, sel_trailingAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v15 = sub_1BC526D34();
  v16 = objc_msgSend(v15, sel_topAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
    goto LABEL_26;
  v17 = result;
  v18 = objc_msgSend(result, sel_topAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v18, a2);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v20 = sub_1BC526D34();
  v21 = objc_msgSend(v20, sel_bottomAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
    goto LABEL_27;
  v22 = result;
  v23 = objc_msgSend(result, sel_bottomAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  if (*((_BYTE *)a1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) != 1)
    return (id)v38;
  result = objc_msgSend(a1, sel_view);
  if (!result)
    goto LABEL_28;
  v25 = result;
  v26 = objc_msgSend(result, sel_widthAnchor);

  v27 = objc_msgSend(v26, sel_constraintEqualToConstant_, 375.0);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v28 = sub_1BC5272D8();
  v29 = objc_msgSend(v28, sel_topAnchor);

  v30 = sub_1BC526D34();
  v31 = objc_msgSend(v30, sel_topAnchor);

  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, 4.0);
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();
  v33 = sub_1BC5272D8();
  v34 = objc_msgSend(v33, sel_trailingAnchor);

  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v35 = result;
    v36 = objc_msgSend(result, sel_trailingAnchor);

    v37 = objc_msgSend(v34, sel_constraintEqualToAnchor_constant_, v36, -13.0);
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    return (id)v38;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1BC527EC4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  char v10;
  id v11;
  void *v12;
  id v13;
  objc_super v14;
  objc_super v15;

  v3 = v2;
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) != 1)
  {
    sub_1BC34B6A0(0, &qword_1EF4357E0);
    sub_1BC528E9C();
    v12 = (void *)sub_1BC62C9D4();
    v15.receiver = v3;
    v15.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
    objc_msgSendSuper2(&v15, sel_touchesBegan_withEvent_, v12, a2);
LABEL_9:

    return;
  }
  v5 = swift_bridgeObjectRetain();
  v6 = (void *)sub_1BC526334(v5);
  swift_bridgeObjectRelease();
  if (!v6)
  {
LABEL_8:
    sub_1BC34B6A0(0, &qword_1EF4357E0);
    sub_1BC528E9C();
    v12 = (void *)sub_1BC62C9D4();
    v14.receiver = v3;
    v14.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
    objc_msgSendSuper2(&v14, sel_touchesBegan_withEvent_, v12, a2);
    goto LABEL_9;
  }
  v7 = objc_msgSend(v2, sel_view);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1BC5272D8();
    v10 = MEMORY[0x1BCCF20DC](v6, v9, 36.0, 36.0);

    if ((v10 & 1) != 0)
    {
      v11 = sub_1BC5272D8();
      v13 = objc_msgSend((id)objc_opt_self(), sel_quaternaryLabelColor);
      objc_msgSend(v11, sel_setTextColor_, v13);

      return;
    }

    goto LABEL_8;
  }
  __break(1u);
}

void sub_1BC5280BC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  objc_super v13;

  v3 = v2;
  sub_1BC34B6A0(0, &qword_1EF4357E0);
  sub_1BC528E9C();
  v5 = (void *)sub_1BC62C9D4();
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
  objc_msgSendSuper2(&v13, sel_touchesEnded_withEvent_, v5, a2);

  if (v3[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover] == 1)
  {
    v6 = sub_1BC5272D8();
    objc_msgSend(v6, sel_setTextColor_, *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_accessoryColor]);

    v7 = swift_bridgeObjectRetain();
    v8 = (void *)sub_1BC526334(v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v9 = objc_msgSend(v3, sel_view);
      if (v9)
      {
        v10 = v9;
        v11 = sub_1BC5272D8();
        v12 = MEMORY[0x1BCCF20DC](v8, v11, 36.0, 36.0);

        if ((v12 & 1) != 0)
        {
          sub_1BC526440(1);
          objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);
        }

      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_1BC52823C(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  uint64_t v8;
  id v9;
  id v10;

  sub_1BC34B6A0(0, &qword_1EF4357E0);
  sub_1BC528E9C();
  v8 = sub_1BC62C9E0();
  v9 = a4;
  v10 = a1;
  a5(v8, a4);

  return swift_bridgeObjectRelease();
}

id LabsOnboardingViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*sub_1BC5284C4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC528518()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC528570(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC5285D0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC528628@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_headerType;
  v4 = sub_1BC62ADE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC528678()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BC62C680();

  return v3;
}

uint64_t LabsOnboardingViewController.identifier.getter()
{
  type metadata accessor for OnboardingViewIdentifier();
  return swift_storeEnumTagMultiPayload();
}

id LabsOnboardingViewController.healthStore.getter()
{
  uint64_t v0;
  id result;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v10[24];
  _QWORD v11[3];
  uint64_t v12;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) == 1)
  {
    result = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_providedHealthStore);
    if (result)
      return result;
    __break(1u);
  }
  else
  {
    v2 = v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
    swift_beginAccess();
    result = (id)sub_1BC526708(v2, (uint64_t)v11);
    v3 = v12;
    if (v12)
    {
      v4 = __swift_project_boxed_opaque_existential_1Tm(v11, v12);
      v5 = *(_QWORD *)(v3 - 8);
      v6 = MEMORY[0x1E0C80A78](v4);
      v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(_BYTE *, __n128))(v5 + 16))(v8, v6);
      v9 = sub_1BC62B588();
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      return (id)v9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC52883C()
{
  type metadata accessor for OnboardingViewIdentifier();
  return swift_storeEnumTagMultiPayload();
}

id sub_1BC52886C()
{
  return LabsOnboardingViewController.healthStore.getter();
}

void sub_1BC52888C(_QWORD *a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
  unint64_t v6;
  char v8;
  char v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;

  v6 = a2;
  if ((a5 & 0xC000000000000001) != 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_1BC62D34C();
      sub_1BC34B6A0(0, &qword_1ED6A58D8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v13;
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_18;
  }
  if ((a4 & 1) != 0)
  {
LABEL_10:
    if (sub_1BC62D31C() == *(_DWORD *)(a5 + 36))
    {
      sub_1BC62D328();
      sub_1BC34B6A0(0, &qword_1ED6A58D8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      v6 = sub_1BC558F8C((uint64_t)v13);
      v9 = v8;

      if ((v9 & 1) != 0)
        goto LABEL_12;
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  v10 = *(void **)(*(_QWORD *)(a5 + 48) + 8 * v6);
  v11 = *(void **)(*(_QWORD *)(a5 + 56) + 8 * v6);
  *a1 = v11;
  v10;
  v12 = v11;
}

_QWORD *sub_1BC528AB8(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v6 = (_QWORD *)(*(_QWORD *)(a5 + 56) + 16 * a2);
    v7 = v6[1];
    *result = *v6;
    result[1] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (_QWORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

id sub_1BC528B54(char a1, void *a2)
{
  char *v2;
  char *v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  v5 = &v2[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v6 = v2;
  v7 = (void *)sub_1BC62C86C();
  v8 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v8)
  {
    v9 = sub_1BC62C680();
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  v12 = (uint64_t *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier];
  *v12 = v9;
  v12[1] = v11;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissWidth] = 0x4042000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissHeight] = 0x4042000000000000;
  v13 = &v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_headerType];
  v14 = *MEMORY[0x1E0D2AAB0];
  v15 = sub_1BC62ADE4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___tipsView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___accessoryLabel] = 0;
  v16 = OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_accessoryColor;
  *(_QWORD *)&v6[v16] = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover] = a1 & 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_providedHealthStore] = a2;
  v17 = a2;

  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
  return objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
}

void _s15HealthRecordsUI28LabsOnboardingViewControllerC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v2 = (void *)sub_1BC62C86C();
  v3 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v3)
  {
    v4 = sub_1BC62C680();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier];
  *v7 = v4;
  v7[1] = v6;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissWidth] = 0x4042000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissHeight] = 0x4042000000000000;
  v8 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_headerType];
  v9 = *MEMORY[0x1E0D2AAB0];
  v10 = sub_1BC62ADE4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___tipsView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___accessoryLabel] = 0;
  v11 = OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_accessoryColor;
  *(_QWORD *)&v0[v11] = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);

  sub_1BC62D394();
  __break(1u);
}

uint64_t type metadata accessor for LabsOnboardingViewController()
{
  uint64_t result;

  result = qword_1EF435850;
  if (!qword_1EF435850)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BC528E9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4357E8;
  if (!qword_1EF4357E8)
  {
    v1 = sub_1BC34B6A0(255, &qword_1EF4357E0);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF4357E8);
  }
  return result;
}

uint64_t sub_1BC528EF4()
{
  return sub_1BC347F0C(&qword_1EF4357F8, (uint64_t (*)(uint64_t))type metadata accessor for LabsOnboardingViewController, (uint64_t)&protocol conformance descriptor for LabsOnboardingViewController);
}

uint64_t sub_1BC528F20()
{
  return sub_1BC347F0C(&qword_1EF435800, (uint64_t (*)(uint64_t))type metadata accessor for LabsOnboardingViewController, (uint64_t)&protocol conformance descriptor for LabsOnboardingViewController);
}

uint64_t sub_1BC528F4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
  swift_beginAccess();
  return sub_1BC526708(v3, a2);
}

uint64_t sub_1BC528FA4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC528FFC()
{
  return type metadata accessor for LabsOnboardingViewController();
}

uint64_t sub_1BC529004()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC62ADE4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for LabsOnboardingViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LabsOnboardingViewController.context.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.context.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.context.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.baseIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.baseIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.baseIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.showsSeparator.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.hidesAccessory.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.didTapDismiss()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t sub_1BC5291C0(uint64_t a1)
{
  uint64_t v2;

  sub_1BC357158(0, &qword_1ED6A3320, (uint64_t (*)(uint64_t))sub_1BC526764, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC529214(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62BB34();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1BC529288()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;

  sub_1BC62BAF8();
  v4 = sub_1BC62BB28();
  v5 = sub_1BC62CAD0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1BC30A000, v4, v5, "SignedClinicalDataRecordAddedViewController is being shown despite nothing having been added to Health and Wallet", v6, 2u);
    MEMORY[0x1BCCF36A8](v6, -1, -1);
  }

  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  *v0 = 0xD000000000000018;
  v0[1] = 0x80000001BC65AF30;
  v0[2] = 0xD00000000000001BLL;
  v0[3] = 0x80000001BC661F70;
  v0[4] = 0;
  return result;
}

void sub_1BC5295B0()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  id v3;

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_1BC62C650();
  v3 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v2, v1);

  JUMPOUT(0x1BC529580);
}

void sub_1BC52966C()
{
  id v0;
  void *v1;
  id v2;

  v0 = (id)HKHealthUIFrameworkBundle();
  v1 = (void *)sub_1BC62C650();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v1, v0);

  JUMPOUT(0x1BC529580);
}

void sub_1BC5296F8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  id v3;

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_1BC62C650();
  v3 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v2, v1);

  JUMPOUT(0x1BC529580);
}

void sub_1BC5297B4()
{
  id v0;
  void *v1;
  id v2;

  v0 = (id)HKHealthUIFrameworkBundle();
  v1 = (void *)sub_1BC62C650();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v1, v0);

  JUMPOUT(0x1BC529580);
}

void sub_1BC52983C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  id v3;

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_1BC62C650();
  v3 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v2, v1);

  JUMPOUT(0x1BC529580);
}

void sub_1BC5298F8()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  id v3;

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_1BC62C650();
  v3 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v2, v1);

  JUMPOUT(0x1BC529580);
}

void sub_1BC5299B0()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  id v3;

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_1BC62C650();
  v3 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v2, v1);

  JUMPOUT(0x1BC529580);
}

id sub_1BC529AB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  char *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v15;
  objc_super v16;
  void *v17;

  v4 = v3;
  swift_getObjectType();
  v8 = &v4[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataRecordAddedViewController_appLaunchURL];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  swift_bridgeObjectRelease();
  sub_1BC529214(a1);
  v15 = v17;
  if (qword_1EF428588 != -1)
    swift_once();
  v9 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v10 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v11 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for SignedClinicalDataRecordAddedViewController();
  v13 = objc_msgSendSuper2(&v16, sel_initWithTitle_detailText_icon_contentLayout_, v11, v12, v17, 2, 0xE000000000000000);
  sub_1BC4F165C(a1);

  return v13;
}

void sub_1BC529CAC()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for SignedClinicalDataRecordAddedViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_headerView);
  objc_msgSend(v1, sel_setAllowFullWidthIcon_, 1);

  v2 = objc_msgSend(v0, sel_headerView);
  LODWORD(v3) = 1036831949;
  objc_msgSend(v2, sel_setTitleHyphenationFactor_, v3);

  v4 = objc_msgSend((id)objc_opt_self(), sel_boldButton);
  if (qword_1EF428588 != -1)
    swift_once();
  v5 = (id)qword_1EF42F740;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setTitle_forState_, v6, 0, 0xE000000000000000);

  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_doneButtonTapped, 64);
  v7 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v7, sel_addButton_, v4);

}

void sub_1BC529ED0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v1 = v0;
  sub_1BC4DA814();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC62A604();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62C4D0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC35A280();
  *v12 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v13 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v14 = objc_msgSend(v1, sel_presentingViewController);
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataRecordAddedViewController_appLaunchURL + 8])
  {
    swift_bridgeObjectRetain();
    sub_1BC62A5F8();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1BC50AFC0((uint64_t)v4);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v16 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
    if (v16)
    {
      v17 = v16;
      v18 = (void *)sub_1BC62A598();
      objc_msgSend(v17, sel_openURL_configuration_completionHandler_, v18, 0, 0);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
LABEL_11:
    __break(1u);
  }
}

id sub_1BC52A1B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataRecordAddedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SignedClinicalDataRecordAddedViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DeleteRecordDataSource()
{
  uint64_t result;

  result = qword_1EF4358B0;
  if (!qword_1EF4358B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC52A250()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC52A2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_1BC62B3C0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62B36C();
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_absoluteDimension_, 15.0);
  sub_1BC62B360();
  v6 = objc_msgSend(v4, sel_absoluteDimension_, 0.0);
  sub_1BC62B348();
  v7 = sub_1BC62B3B4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

uint64_t sub_1BC52A388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = sub_1BC62C4D0();
  v2 = *(_QWORD *)(v1 - 8);
  result = MEMORY[0x1E0C80A78](v1);
  v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(_BYTE *)(v0 + qword_1EF4358A8) == 1)
  {
    v6 = *(void **)(v0 + qword_1EF4358A0);
    if (v6)
    {
      v7 = *(void **)(v0 + qword_1EF435890);
      v8 = *(void **)(v0 + qword_1EF435898);
      v9 = type metadata accessor for DeleteRecordItem();
      v10 = (_QWORD *)swift_allocObject();
      v10[6] = 0;
      swift_unknownObjectWeakInit();
      v10[2] = v7;
      v10[3] = v6;
      v10[4] = v8;
      sub_1BC35A280();
      v11 = v6;
      v12 = v7;
      v13 = v8;
      *v5 = sub_1BC62CC74();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E0DEF740], v1);
      v14 = sub_1BC62C4F4();
      result = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v5, v1);
      if ((v14 & 1) != 0)
      {
        sub_1BC41EB3C(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_1BC639590;
        *(_QWORD *)(v15 + 56) = v9;
        *(_QWORD *)(v15 + 64) = sub_1BC379B20(&qword_1EF435A18, v16, (uint64_t (*)(uint64_t))type metadata accessor for DeleteRecordItem, (uint64_t)&unk_1BC647000);
        *(_QWORD *)(v15 + 32) = v10;
        swift_retain();
        sub_1BC62B2E8();

        swift_release();
        return swift_bridgeObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

void sub_1BC52A570()
{
  sub_1BC52A5A0();
}

void sub_1BC52A588()
{
  sub_1BC52A5A0();
}

void sub_1BC52A5A0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC52A5C8()
{
  uint64_t v0;

}

uint64_t sub_1BC52A604()
{
  uint64_t v0;

  v0 = sub_1BC62B69C();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC52A660()
{
  return type metadata accessor for DeleteRecordDataSource();
}

uint64_t sub_1BC52A668()
{
  return sub_1BC62D718();
}

uint64_t sub_1BC52A674()
{
  id *v0;

  sub_1BC359FDC((uint64_t)(v0 + 5));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeleteRecordItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC52A6D0()
{
  uint64_t v0;

  type metadata accessor for DeleteRecordCell();
  sub_1BC379B20(&qword_1EF435A10, v0, (uint64_t (*)(uint64_t))type metadata accessor for DeleteRecordCell, (uint64_t)&unk_1BC646F58);
  return sub_1BC62ADA8();
}

uint64_t sub_1BC52A718()
{
  return sub_1BC52A668();
}

void sub_1BC52A738(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  unsigned int v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  unsigned int v26;
  _QWORD aBlock[6];

  swift_getObjectType();
  v3 = swift_conformsToProtocol2();
  if (v3)
    v4 = v3;
  else
    v4 = 0;
  if (v3)
    v5 = a1;
  else
    v5 = 0;
  if (v5)
    v6 = a1;
  else
    v4 = 0;
  *(_QWORD *)(v1 + 48) = v4;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_isiPad);

    if (qword_1EF428588 != -1)
      swift_once();
    v10 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC52AB4C();
    v12 = v11;
    v13 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v26 = v9;
    if (v12)
    {
      v14 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = 0;
    }
    v15 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v13, v14, 0, 0xE000000000000000);

    v16 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v17 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v1;
    *(_QWORD *)(v18 + 24) = a1;
    v19 = a1;
    swift_retain();
    v20 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1BC52BC00;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC39B5A0;
    aBlock[3] = &block_descriptor_52;
    v21 = _Block_copy(aBlock);
    swift_release();
    v22 = (void *)objc_opt_self();
    v23 = objc_msgSend(v22, sel_actionWithTitle_style_handler_, v20, 2, v21, 0xE000000000000000);
    _Block_release(v21);

    objc_msgSend(v15, sel_addAction_, v23);
    v24 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v25 = objc_msgSend(v22, sel_actionWithTitle_style_handler_, v24, v26 ^ 1, 0);

    objc_msgSend(v15, sel_addAction_, v25);
    objc_msgSend(v19, sel_presentViewController_animated_completion_, v15, 1, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC52AB4C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_deletionConfirmationMessageWhenDeletingRecord_, *(_QWORD *)(v0 + 16));
  if (v1)
  {
    v2 = v1;
    sub_1BC62C680();
    v4 = v3;

  }
  else
  {
    v4 = 0;
  }
  if (HKSignedClinicalDataGroup.passExistsInWallet()())
  {
    if (qword_1EF428588 != -1)
      swift_once();
    v5 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    v7 = v6;
    swift_bridgeObjectRelease();

    if (!v4)
      goto LABEL_14;
  }
  else
  {
    v7 = 0;
    if (!v4)
      goto LABEL_14;
  }
  v8 = sub_1BC62C710();
  v10 = v9;
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:
    if (!v7)
      return 0;
    v17 = sub_1BC62C710();
    v19 = v18;
    swift_bridgeObjectRelease();
    if (v19)
      return v17;
    else
      return 0;
  }
  if (v7)
  {
    v11 = sub_1BC62C710();
    v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1BC6395A0;
      v15 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
      v16 = sub_1BC3644C0();
      *(_QWORD *)(v14 + 32) = v8;
      *(_QWORD *)(v14 + 40) = v10;
      *(_QWORD *)(v14 + 96) = v15;
      *(_QWORD *)(v14 + 104) = v16;
      *(_QWORD *)(v14 + 64) = v16;
      *(_QWORD *)(v14 + 72) = v11;
      *(_QWORD *)(v14 + 80) = v13;
      return sub_1BC62C6B0();
    }
  }
  return v8;
}

uint64_t sub_1BC52AD84(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  if (MEMORY[0x1BCCF37A4](a2 + 40))
  {
    if (qword_1EF428588 != -1)
      swift_once();
    v5 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    v6 = sub_1BC62A4A8();
    v8 = v7;
    swift_bridgeObjectRelease();

    sub_1BC5BEED8(v6, v8);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  swift_retain();
  v10 = a3;
  sub_1BC52B424((uint64_t)sub_1BC52BC50, v9);
  return swift_release();
}

uint64_t sub_1BC52AEC8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v6 = sub_1BC62C47C();
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BC62C4AC();
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC35A280();
  v12 = (void *)sub_1BC62CC74();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a1;
  v13[4] = a3;
  aBlock[4] = sub_1BC52BCD8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39BE70;
  aBlock[3] = &block_descriptor_15_3;
  v14 = _Block_copy(aBlock);
  swift_retain();
  v15 = a1;
  v16 = a3;
  swift_release();
  sub_1BC62C494();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC379B20((unint64_t *)&qword_1ED6A5870, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC370738();
  sub_1BC379B20((unint64_t *)&qword_1ED6A58A0, 255, (uint64_t (*)(uint64_t))sub_1BC370738, MEMORY[0x1E0DEAF38]);
  sub_1BC62D0A0();
  MEMORY[0x1BCCF1F68](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

uint64_t sub_1BC52B0E8(uint64_t a1, void *a2, void *a3)
{
  uint64_t result;
  char *v7;
  id v8;

  result = MEMORY[0x1BCCF37A4](a1 + 40);
  if (result)
  {
    v7 = (char *)result;
    v8 = a3;
    swift_retain();
    sub_1BC5BFCEC(a2, v7, v8, a1);
    swift_release();

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1BC52B168(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v14;

  if (a1)
  {
    v5 = a1;
    if (qword_1EF428588 != -1)
      swift_once();
    v6 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v7 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v8 = (void *)objc_opt_self();
    v9 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
    v11 = (void *)sub_1BC62A550();
    v12 = objc_msgSend(v8, sel_basicAlertControllerWithTitle_message_internalError_, v9, v10, v11, 0xE000000000000000);

    objc_msgSend(a2, sel_presentViewController_animated_completion_, v12, 1, 0);
  }
  else
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (qword_1EF428688 != -1)
      swift_once();
    objc_msgSend(v14, sel_postNotificationName_object_, qword_1EF4335F8, a3);

    if (MEMORY[0x1BCCF37A4](a3 + 40))
    {
      sub_1BC5BED74();
      swift_unknownObjectRelease();
    }
  }
}

void sub_1BC52B424(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[6];
  uint64_t v24;

  v5 = *v2;
  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = MEMORY[0x1E0C80A78](v6).n128_u64[0];
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)v2[3], sel_mainRecord, v8);
  if (v11)
  {
    v12 = v11;
    v13 = (void *)v2[4];
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a1;
    *(_QWORD *)(v14 + 24) = a2;
    aBlock[4] = sub_1BC52BC7C;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC3EFECC;
    aBlock[3] = &block_descriptor_9_10;
    v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_deleteSignedClinicalDataRecord_completion_, v12, v15);
    _Block_release(v15);

  }
  else
  {
    sub_1BC62BAF8();
    v16 = sub_1BC62BB28();
    v17 = sub_1BC62CAC4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24 = v19;
      *(_DWORD *)v18 = 136315138;
      aBlock[0] = v5;
      swift_getMetatypeMetadata();
      v20 = sub_1BC62C6E0();
      aBlock[0] = sub_1BC4991F0(v20, v21, &v24);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v16, v17, "%s: No main record on SCD group, cannot delete record", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v19, -1, -1);
      MEMORY[0x1BCCF36A8](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

void sub_1BC52B684(uint64_t a1, void *a2)
{
  sub_1BC52A738(a2);
}

uint64_t sub_1BC52B6A8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  id v10;
  void (*v11)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18[3];
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = sub_1BC62BD98();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  v6 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI16DeleteRecordCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v6, (uint64_t)v18);
  if (!v19)
    return sub_1BC37AE60((uint64_t)v18);
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for DeleteRecordItem();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v8 = swift_release();
    MEMORY[0x1BCCF201C](v8);
    if (qword_1EF428588 != -1)
      swift_once();
    v9 = (id)qword_1EF42F740;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC62BD74();
    v10 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
    v11 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCCC();
    v11(v18, 0);
    v19 = v2;
    v20 = MEMORY[0x1E0DC2398];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
    (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(boxed_opaque_existential_1, v5, v2);
    MEMORY[0x1BCCF1FC8](v18);
    sub_1BC359F44();
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v13 + 32) = sub_1BC62C680();
    *(_QWORD *)(v13 + 40) = v14;
    strcpy((char *)(v13 + 48), "DeleteButton");
    *(_BYTE *)(v13 + 61) = 0;
    *(_WORD *)(v13 + 62) = -5120;
    v15 = (void *)sub_1BC62C86C();
    v16 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v1, sel_setAccessibilityIdentifier_, v16);
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

id sub_1BC52BA68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeleteRecordCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DeleteRecordCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC52BAC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI16DeleteRecordCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC52BB18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI16DeleteRecordCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC52B6A8();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC52BB84(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC52BBCC;
}

uint64_t sub_1BC52BBCC(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC52B6A8();
  return result;
}

uint64_t sub_1BC52BC00(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC52AD84(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t block_copy_helper_51(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_51()
{
  return swift_release();
}

uint64_t objectdestroyTm_10()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC52BC50(void *a1)
{
  uint64_t v1;

  return sub_1BC52AEC8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1BC52BC58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC52BC7C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if ((a1 & 1) != 0)
    v3 = 0;
  else
    v3 = a2;
  return (*(uint64_t (**)(uint64_t))(v2 + 16))(v3);
}

uint64_t sub_1BC52BCA4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC52BCD8()
{
  uint64_t v0;

  return sub_1BC52B0E8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1BC52BCF4()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_configurationWithPointSize_weight_scale_, 7, 2, 18.0);
  v2 = objc_msgSend(v0, sel_configurationPreferringMulticolor);
  v3 = objc_msgSend(v1, sel_configurationByApplyingConfiguration_, v2);

  qword_1EF459FA8 = (uint64_t)v3;
}

id sub_1BC52BD94()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_scale_, 6, -1, 10.0);
  qword_1EF459FB0 = (uint64_t)result;
  return result;
}

uint64_t sub_1BC52BDD8(void *a1)
{
  return sub_1BC52BDEC(a1, &OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store, &OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
}

uint64_t sub_1BC52BDEC(void *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v21;
  unint64_t v22;
  objc_super v23;

  v7 = objc_msgSend(a1, sel_dosages);
  if (!v7)
    return MEMORY[0x1E0DEE9D8];
  v8 = v7;
  sub_1BC34B6A0(0, &qword_1EF42D040);
  v9 = sub_1BC62C878();

  v10 = *(void **)(v3 + *a2);
  v11 = *(_QWORD *)(v3 + *a3);
  v12 = (objc_class *)type metadata accessor for MedicationDosageFormatter();
  v13 = (char *)objc_allocWithZone(v12);
  *(_QWORD *)&v13[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = v10;
  *(_QWORD *)&v13[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = v11;
  v23.receiver = v13;
  v23.super_class = v12;
  v14 = v10;
  v15 = objc_msgSendSuper2(&v23, sel_init);

  if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    v21 = swift_bridgeObjectRetain();
    v16 = (uint64_t)sub_1BC3D6978(v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v22 = v16;
  sub_1BC44A7EC((uint64_t *)&v22);
  v17 = v22;
  v18 = v15;
  v19 = sub_1BC46E170(v17);
  swift_bridgeObjectRelease();
  swift_release();

  return v19;
}

id sub_1BC52BF7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  objc_super v13;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter);
  }
  else
  {
    v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
    v6 = (objc_class *)type metadata accessor for MedicationDosageFormatter();
    v7 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = v4;
    *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = v5;
    v13.receiver = v7;
    v13.super_class = v6;
    v8 = v4;
    v9 = objc_msgSendSuper2(&v13, sel_init);
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

uint64_t sub_1BC52C048(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;

  v2 = objc_msgSend(a1, sel_dosages);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = v2;
  sub_1BC34B6A0(0, &qword_1EF42D040);
  v4 = sub_1BC62C878();

  v5 = sub_1BC52BF7C();
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    v11 = swift_bridgeObjectRetain();
    v6 = (uint64_t)sub_1BC3D6978(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v12 = v6;
  sub_1BC44A7EC((uint64_t *)&v12);
  v7 = v12;
  v8 = v5;
  v9 = sub_1BC44BBBC(v7);
  swift_bridgeObjectRelease();
  swift_release();

  return v9;
}

id MedicationRecordFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store);
}

uint64_t MedicationRecordFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
}

id MedicationRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id MedicationRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MedicationRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

unint64_t sub_1BC52C260(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC52C84C(a1);
  if (!v2)
    return sub_1BC52C2C0(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC52C2C0(void *a1)
{
  uint64_t inited;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v42;

  sub_1BC42567C();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC63AF10;
  *(_QWORD *)(inited + 32) = sub_1BC52CE78(a1);
  *(_QWORD *)(inited + 40) = sub_1BC61F7EC(a1);
  v3 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  v4 = a1;
  v5 = objc_msgSend(v4, sel_effectiveStartDate);
  v6 = objc_msgSend(v4, sel_effectiveEndDate);

  v7 = objc_msgSend(v4, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  *(_QWORD *)(inited + 48) = sub_1BC4AA920(v5, v6, sub_1BC5A0784, 0, sub_1BC5A084C, 0, (void (*)(id))sub_1BC5A0914, 0, v8, v10);
  *(_QWORD *)(inited + 56) = sub_1BC5F7EB0(v4);
  *(_QWORD *)(inited + 64) = sub_1BC52D0B8(v4);
  *(_QWORD *)(inited + 72) = sub_1BC52D224(v4);
  v11 = v4;
  v12 = sub_1BC507028(v11);

  v13 = Array<A>.newlineJoined.getter(v12);
  v15 = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 80) = sub_1BC4A9250(v13, v15, v3);
  v16 = objc_msgSend(v11, sel_notTaken);
  v17 = 0;
  if (v16)
  {
    v18 = v11;
    v19 = sub_1BC507034(v18);

    v20 = Array<A>.newlineJoined.getter(v19);
    v22 = v21;
    swift_bridgeObjectRelease();
    v17 = sub_1BC4A9254(v20, v22);
  }
  *(_QWORD *)(inited + 88) = v17;
  *(_QWORD *)(inited + 96) = sub_1BC546064(v11);
  sub_1BC62C890();
  v42 = MEMORY[0x1E0DEE9D8];
  v23 = *(void **)(inited + 32);
  if (v23)
  {
    v24 = v23;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v25 = *(void **)(inited + 40);
  if (v25)
  {
    v26 = v25;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v27 = *(void **)(inited + 48);
  if (v27)
  {
    v28 = v27;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v29 = *(void **)(inited + 56);
  if (v29)
  {
    v30 = v29;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v31 = *(void **)(inited + 64);
  if (v31)
  {
    v32 = v31;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v33 = *(void **)(inited + 72);
  if (v33)
  {
    v34 = v33;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v35 = *(void **)(inited + 80);
  if (v35)
  {
    v36 = v35;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v37 = *(void **)(inited + 88);
  if (v37)
  {
    v38 = v37;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v39 = *(void **)(inited + 96);
  if (v39)
  {
    v40 = v39;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  swift_bridgeObjectRelease();
  return v42;
}

unint64_t sub_1BC52C84C(void *a1)
{
  unint64_t v2;
  uint64_t v3;
  _BOOL8 v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  unint64_t v27;

  v27 = MEMORY[0x1E0DEE9D8];
  v2 = sub_1BC52BDEC(a1, &OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store, &OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
  sub_1BC3BB208(v2);
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = v3 != 0;
  v5 = sub_1BC52D224(a1);
  if (v5)
  {
    v6 = v5;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();

    if (v3)
      return v27;
    v4 = 1;
  }
  v7 = sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  v8 = a1;
  v9 = sub_1BC507028(v8);

  v10 = Array<A>.newlineJoined.getter(v9);
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = (void *)sub_1BC4A9250(v10, v12, v7);
  if (!v13)
  {
LABEL_13:
    v15 = sub_1BC52CE78(v8);
    if (!v15)
      goto LABEL_22;
    v16 = v15;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
    if (objc_msgSend(v8, sel_notTaken))
    {
      v17 = v8;
      v18 = sub_1BC507034(v17);

      v19 = Array<A>.newlineJoined.getter(v18);
      v21 = v20;
      swift_bridgeObjectRelease();
      v22 = sub_1BC4A9254(v19, v21);
      if (v22)
      {
        v23 = v22;
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();

      }
    }

    if (!v4)
    {
LABEL_22:
      v24 = (void *)sub_1BC546064(v8);
      if (v24)
      {
        v25 = v24;
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();

      }
    }
    return v27;
  }
  v14 = v13;
  MEMORY[0x1BCCF1B30]();
  if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC62C8B4();
  sub_1BC62C8D8();
  sub_1BC62C890();

  if (!v4)
  {
    v4 = 1;
    goto LABEL_13;
  }
  return v27;
}

id MedicationRecordFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicationRecordFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationRecordFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC52CC90()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store);
}

uint64_t sub_1BC52CCA4()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
}

id sub_1BC52CCB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for MedicationRecordFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

unint64_t sub_1BC52CD34(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t result;

  v2 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
  if (v2 == 1)
    return sub_1BC52C84C(a1);
  if (!v2)
    return sub_1BC52C2C0(a1);
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MedicationRecordFormatter()
{
  return objc_opt_self();
}

unint64_t sub_1BC52CDC0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC52CDE4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC52CDE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF435A78;
  if (!qword_1EF435A78)
  {
    v1 = type metadata accessor for MedicationRecordFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF435A78);
  }
  return result;
}

uint64_t method lookup function for MedicationRecordFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationRecordFormatter.structuredItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationRecordFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MedicationRecordFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

id sub_1BC52CE78(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  if (!objc_msgSend(a1, sel_notTaken))
    return 0;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  v4 = v3;
  swift_bridgeObjectRelease();

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init, 0xE000000000000000);
  objc_msgSend(v6, sel_setDisplayItemType_, 15);
  v7 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSubtitle_, v9);

  objc_msgSend(v6, sel_setSeparatorStyle_, 0);
  objc_msgSend(v6, sel_setSeparatorHidden_, 0);
  objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  return v6;
}

id sub_1BC52D0B8(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v2 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v3 = sub_1BC62A4A8();
  v5 = v4;
  swift_bridgeObjectRelease();

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4299F0);
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(a1, sel_assertionDate, 0xE000000000000000);
  v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  v8 = sub_1BC62C680();
  v10 = v9;

  v11 = sub_1BC4AB2F4(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1BC52D224(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;

  v1 = objc_msgSend(a1, sel_asserter);
  if (v1)
  {
    v2 = sub_1BC62C680();
    v4 = v3;

    v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v5 = v2 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v6 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v7 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      v8 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

id RecordRangeView.__allocating_init(style:)(char *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return RecordRangeView.init(style:)(a1);
}

void sub_1BC52D44C()
{
  qword_1EF459FB8 = 0x4059000000000000;
}

void sub_1BC52D45C()
{
  qword_1EF459FC0 = 0x4020000000000000;
}

void sub_1BC52D46C()
{
  qword_1EF459FC8 = 0x4018000000000000;
}

uint64_t static RecordRangeView.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

uint64_t sub_1BC52D4B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

double sub_1BC52D4EC()
{
  return sub_1BC52D524(&qword_1EF428708, (double *)&qword_1EF459FB8);
}

double sub_1BC52D508()
{
  return sub_1BC52D524(&qword_1EF428710, (double *)&qword_1EF459FC0);
}

double sub_1BC52D524(_QWORD *a1, double *a2)
{
  void *v2;
  id v5;
  id v6;
  double v7;

  v5 = objc_msgSend(v2, sel_traitCollection);
  v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  v7 = sub_1BC53F250();
  if (*a1 != -1)
    swift_once();
  return v7 * *a2;
}

void sub_1BC52D5CC()
{
  uint64_t v0;
  int v1;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  objc_class *v10;
  _BYTE *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  id v15;
  _BYTE *v16;
  _QWORD *v17;
  id v18;
  id v19;
  objc_class *v20;
  _BYTE *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  _BYTE *v25;
  _QWORD *v26;
  id v27;
  id v28;
  objc_class *v29;
  _BYTE *v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;
  id v34;
  _BYTE *v35;
  _QWORD *v36;
  id v37;
  _BYTE *v38;
  _QWORD *v39;
  objc_super v40;
  objc_super v41;
  objc_super v42;
  objc_super v43;
  objc_super v44;
  objc_super v45;
  objc_super v46;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext);
  if (v1 != 3)
  {
    v2 = sub_1BC52E76C();
    v3 = objc_msgSend(v2, sel_arrangedSubviews);

    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
    v4 = sub_1BC62C878();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1BC62D3B8();
      if (!v5)
        goto LABEL_11;
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v5)
        goto LABEL_11;
    }
    if (v5 < 1)
    {
      __break(1u);
      return;
    }
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1BCCF24CC](i, v4);
      else
        v7 = *(id *)(v4 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(v7, sel_removeFromSuperview);

    }
LABEL_11:
    swift_bridgeObjectRelease_n();
    if (v1)
    {
      if (v1 != 1)
      {
        v28 = sub_1BC52E76C();
        v29 = (objc_class *)type metadata accessor for RangePillView();
        v30 = objc_allocWithZone(v29);
        v31 = &v30[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
        *v31 = 0;
        v31[1] = 0;
        v32 = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)&v30[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)&v30[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
        *(_QWORD *)&v30[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
        v30[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 1;
        v46.receiver = v30;
        v46.super_class = v29;
        v33 = objc_msgSendSuper2(&v46, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
        sub_1BC496B4C();
        objc_msgSend(v28, sel_addArrangedSubview_, v33);

        v34 = sub_1BC52E76C();
        v35 = objc_allocWithZone(v29);
        v36 = &v35[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
        *v36 = 0;
        v36[1] = 0;
        *(_QWORD *)&v35[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = v32;
        *(_QWORD *)&v35[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
        *(_QWORD *)&v35[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
        v35[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 0;
        v45.receiver = v35;
        v45.super_class = v29;
        v37 = objc_msgSendSuper2(&v45, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
        sub_1BC496B4C();
        objc_msgSend(v34, sel_addArrangedSubview_, v37);

        v15 = sub_1BC52E76C();
        v38 = objc_allocWithZone(v29);
        v39 = &v38[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
        *v39 = 0;
        v39[1] = 0;
        *(_QWORD *)&v38[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = v32;
        *(_QWORD *)&v38[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
        *(_QWORD *)&v38[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
        v38[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 1;
        v44.receiver = v38;
        v44.super_class = v29;
        v27 = objc_msgSendSuper2(&v44, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
        sub_1BC496B4C();
        objc_msgSend(v15, sel_addArrangedSubview_, v27);
        goto LABEL_17;
      }
      v9 = sub_1BC52E76C();
      v10 = (objc_class *)type metadata accessor for RangePillView();
      v11 = objc_allocWithZone(v10);
      v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
      *v12 = 0;
      v12[1] = 0;
      v13 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
      *(_QWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
      v11[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 1;
      v43.receiver = v11;
      v43.super_class = v10;
      v14 = objc_msgSendSuper2(&v43, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      sub_1BC496B4C();
      objc_msgSend(v9, sel_addArrangedSubview_, v14);

      v15 = sub_1BC52E76C();
      v16 = objc_allocWithZone(v10);
      v17 = &v16[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
      *v17 = 0;
      v17[1] = 0;
      *(_QWORD *)&v16[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = v13;
      *(_QWORD *)&v16[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
      *(_QWORD *)&v16[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
      v16[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 2;
      v42.receiver = v16;
      v42.super_class = v10;
      v18 = objc_msgSendSuper2(&v42, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, v40.receiver, v40.super_class);
    }
    else
    {
      v19 = sub_1BC52E76C();
      v20 = (objc_class *)type metadata accessor for RangePillView();
      v21 = objc_allocWithZone(v20);
      v22 = &v21[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
      *v22 = 0;
      v22[1] = 0;
      v23 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)&v21[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)&v21[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
      *(_QWORD *)&v21[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
      v21[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 2;
      v41.receiver = v21;
      v41.super_class = v20;
      v24 = objc_msgSendSuper2(&v41, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      sub_1BC496B4C();
      objc_msgSend(v19, sel_addArrangedSubview_, v24);

      v15 = sub_1BC52E76C();
      v25 = objc_allocWithZone(v20);
      v26 = &v25[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
      *v26 = 0;
      v26[1] = 0;
      *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = v23;
      *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
      *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
      v25[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 1;
      v18 = objc_msgSendSuper2(&v40, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, v25, v20);
    }
    v27 = v18;
    sub_1BC496B4C();
    objc_msgSend(v15, sel_addArrangedSubview_, v27);
LABEL_17:

    sub_1BC52F73C();
  }
}

id sub_1BC52DB48()
{
  id v0;
  id v1;

  v0 = sub_1BC52E76C();
  v1 = objc_msgSend(v0, sel_topAnchor);

  return v1;
}

void sub_1BC52DB88()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state);
  if ((_DWORD)v1 != 4 && sub_1BC52E23C())
  {
    v19 = v1;
    v2 = sub_1BC52E76C();
    v3 = objc_msgSend(v2, sel_arrangedSubviews);

    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
    v4 = sub_1BC62C878();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1BC62D3B8();
      if (!v5)
        goto LABEL_12;
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v5)
        goto LABEL_12;
    }
    v6 = objc_opt_self();
    if (v5 < 1)
    {
      __break(1u);
      JUMPOUT(0x1BC52E1E4);
    }
    v7 = (void *)v6;
    v8 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1BCCF24CC](v8, v4);
      else
        v9 = *(id *)(v4 + 8 * v8 + 32);
      v10 = v9;
      ++v8;
      v11 = objc_msgSend(v7, sel_systemGray5Color);
      v12 = objc_msgSend(v7, sel_systemGray4Color);
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v12;
      *(_QWORD *)(v13 + 24) = v11;
      v14 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
      aBlock[4] = sub_1BC370948;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC4CB70C;
      aBlock[3] = &block_descriptor_53;
      v15 = _Block_copy(aBlock);
      v16 = v12;
      v17 = v11;
      v18 = objc_msgSend(v14, sel_initWithDynamicProvider_, v15);
      _Block_release(v15);

      swift_release();
      objc_msgSend(v10, sel_setBackgroundColor_, v18);

    }
    while (v5 != v8);
LABEL_12:
    swift_bridgeObjectRelease_n();
    __asm { BR              X9 }
  }
}

uint64_t sub_1BC52E23C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state);
  if ((_DWORD)v1 != 4 && *(_BYTE *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext) != 3)
    __asm { BR              X11 }
  return 0;
}

void sub_1BC52E2A8(int a1@<W8>)
{
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;

  if (!a1)
LABEL_14:
    JUMPOUT(0x1BC52E278);
  if (a1 == 1)
  {
    v1 = sub_1BC52E76C();
    v2 = objc_msgSend(v1, sel_arrangedSubviews);

    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
    v3 = sub_1BC62C878();

    if ((v3 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        JUMPOUT(0x1BC52E320);
      }
LABEL_9:
      v6 = *(id *)(v3 + 32);
LABEL_10:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
  }
  else
  {
    v4 = sub_1BC52E76C();
    v5 = objc_msgSend(v4, sel_arrangedSubviews);

    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
    v3 = sub_1BC62C878();

    if ((v3 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        JUMPOUT(0x1BC52E47CLL);
      }
      goto LABEL_9;
    }
  }
  MEMORY[0x1BCCF24CC](0, v3);
  goto LABEL_10;
}

void sub_1BC52E610()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;

  if (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext) - 1 >= 2)
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext))
      return;
    v5 = sub_1BC52E76C();
    v6 = objc_msgSend(v5, sel_arrangedSubviews);

    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
    v3 = sub_1BC62C878();

    if ((v3 & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v4 = *(void **)(v3 + 32);
      goto LABEL_9;
    }
    goto LABEL_15;
  }
  v1 = sub_1BC52E76C();
  v2 = objc_msgSend(v1, sel_arrangedSubviews);

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  v3 = sub_1BC62C878();

  if ((v3 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      v4 = *(void **)(v3 + 40);
LABEL_9:
      v7 = v4;
      goto LABEL_10;
    }
    __break(1u);
LABEL_15:
    v9 = 0;
    goto LABEL_16;
  }
  v9 = 1;
LABEL_16:
  v7 = (id)MEMORY[0x1BCCF24CC](v9, v3);
LABEL_10:
  v8 = v7;
  swift_bridgeObjectRelease();
  type metadata accessor for RangePillView();
  if (!swift_dynamicCastClass())

}

id sub_1BC52E76C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___pillsStackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___pillsStackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___pillsStackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setAxis_, 0);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setSpacing_, 2.0);
    LODWORD(v5) = 1148846080;
    objc_msgSend(v4, sel_setContentHuggingPriority_forAxis_, 0, v5);
    objc_msgSend(v4, sel_setSemanticContentAttribute_, 3);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC52E85C()
{
  return sub_1BC49C4B8(&OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___rangeLabel, (uint64_t (*)(void))sub_1BC52E870);
}

id sub_1BC52E870()
{
  id v0;
  double v1;
  void *v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setLineBreakMode_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  LODWORD(v1) = 1045220557;
  objc_msgSend(v0, sel__setHyphenationFactor_, v1);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  v2 = (void *)sub_1BC62CDDC();
  objc_msgSend(v0, sel_setFont_, v2);

  return v0;
}

id sub_1BC52E978()
{
  return sub_1BC49C4B8(&OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___lowBookend, (uint64_t (*)(void))sub_1BC530584);
}

id sub_1BC52E98C()
{
  return sub_1BC49C4B8(&OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___highBookend, (uint64_t (*)(void))sub_1BC530584);
}

void RecordRangeView.style.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_style);
}

id RecordRangeView.init(style:)(char *a1)
{
  _BYTE *v1;
  char v2;
  char *v3;
  id v4;
  objc_super v6;

  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext] = 3;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_activeConstraints] = MEMORY[0x1E0DEE9D8];
  v2 = *a1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint] = 0;
  v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] = 4;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___pillsStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___rangeLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___lowBookend] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___highBookend] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_style] = v2;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for RecordRangeView();
  v4 = objc_msgSendSuper2(&v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BC52EF60();

  return v4;
}

uint64_t type metadata accessor for RecordRangeView()
{
  return objc_opt_self();
}

id sub_1BC52EAC8(void *a1)
{
  _BYTE *v1;
  char *v3;
  id v4;
  id v5;
  id v6;
  objc_super v8;

  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext] = 3;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_activeConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint] = 0;
  v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] = 4;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___pillsStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___rangeLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___lowBookend] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___highBookend] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_style] = 1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for RecordRangeView();
  v4 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);
  v5 = v4;
  if (v4)
  {
    v6 = v4;
    sub_1BC52EF60();

  }
  return v5;
}

void sub_1BC52EBE8(void *a1)
{
  char *v1;
  __int16 v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (**v26)();
  uint64_t v27;
  id v28;

  if (!a1)
  {
    objc_msgSend(v1, sel_setHidden_, 1);
    v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext] = 2;
    sub_1BC52D5CC();
    v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] = 3;
    sub_1BC52DB88();
    v17 = &v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier];
    *(_QWORD *)v17 = 0;
    v17[8] = 1;
    v18 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint] = 0;
    goto LABEL_14;
  }
  v28 = a1;
  v3 = sub_1BC530698(a1);
  objc_msgSend(v1, sel_setHidden_, v3 == 3);
  if (HIBYTE(v3) == 2)
  {
    v4 = objc_msgSend(v28, sel_value);
    if (!v4)
      goto LABEL_11;
    v5 = v4;
    objc_msgSend(v4, sel_doubleValue);
    v7 = v6;

    v8 = objc_msgSend(v28, sel_rangeLow);
    if (!v8)
      goto LABEL_11;
    v9 = v8;
    objc_msgSend(v8, sel_doubleValue);
    v11 = v10;

    v12 = objc_msgSend(v28, sel_rangeHigh);
    if (!v12)
      goto LABEL_11;
    v13 = v12;
    objc_msgSend(v12, sel_doubleValue);
    v15 = v14;

    if (v11 >= v15)
      goto LABEL_11;
    v16 = OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier;
    *(double *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier] = (v7 - v11) / (v15 - v11);
  }
  else
  {
    v16 = OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier;
    *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier] = 0x3FE0000000000000;
  }
  v1[v16 + 8] = 0;
LABEL_11:
  v19 = sub_1BC52E978();
  v20 = objc_msgSend(v28, sel_rangeLowString);
  objc_msgSend(v19, sel_setText_, v20);

  v21 = sub_1BC52E98C();
  v22 = objc_msgSend(v28, sel_rangeHighString);
  objc_msgSend(v21, sel_setText_, v22);

  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext] = HIBYTE(v3);
  sub_1BC52D5CC();
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] = v3;
  sub_1BC52DB88();
  sub_1BC52E610();
  if (v23)
  {
    v24 = v23;
    v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v26 = (void (**)())&v24[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
    v27 = *(_QWORD *)&v24[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
    *v26 = sub_1BC5308AC;
    v26[1] = (void (*)())v25;
    swift_retain();
    sub_1BC36D770(v27);

    swift_release();
  }
  v18 = v28;
LABEL_14:

}

void sub_1BC52EEB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCF37A4](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_1BC52F1AC();

  }
}

void sub_1BC52EF08(id a1)
{
  id v1;

  if (a1)
    a1 = objc_msgSend((id)objc_opt_self(), sel_referenceRangeViewDataFromInspectableValueInRange_, a1);
  v1 = a1;
  sub_1BC52EBE8(a1);

}

uint64_t sub_1BC52EF60()
{
  unsigned __int8 *v0;
  id v1;
  id v2;
  int v3;
  id v4;
  id v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  objc_msgSend(v0, sel_setSemanticContentAttribute_, 3);
  v1 = sub_1BC52E85C();
  objc_msgSend(v0, sel_addSubview_, v1);

  v2 = sub_1BC52E76C();
  objc_msgSend(v0, sel_addSubview_, v2);

  v3 = v0[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_style];
  if (v3 == 2)
  {
    v4 = sub_1BC52E978();
    objc_msgSend(v0, sel_addSubview_, v4);

    v5 = sub_1BC52E98C();
    objc_msgSend(v0, sel_addSubview_, v5);
  }
  else
  {
    v6 = (v3 & 1) == 0;
    v5 = sub_1BC52E85C();
    objc_msgSend(v5, sel_setHidden_, v6);
  }

  sub_1BC448304();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC639590;
  v8 = sub_1BC62BDD4();
  v9 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v9;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC4978B4();
  sub_1BC62CE24();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BC52F0CC(void *a1, id a2, uint64_t a3)
{
  id v5;
  double v6;
  id v7;
  id v8;
  double v9;
  uint64_t v10;
  void *v11;

  v5 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  v6 = sub_1BC53F250();

  v7 = objc_msgSend(a1, sel_traitCollection);
  v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  v9 = sub_1BC53F250();
  if (v6 != v9)
  {
    swift_beginAccess();
    v10 = MEMORY[0x1BCCF37A4](a3 + 16);
    if (v10)
    {
      v11 = (void *)v10;
      sub_1BC52F73C();

    }
  }
}

void sub_1BC52F1AC()
{
  _BYTE *v0;
  id v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  _BYTE *v19;
  id v20;
  unint64_t v21;

  v1 = sub_1BC52E76C();
  v2 = objc_msgSend(v1, sel_arrangedSubviews);

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  v3 = sub_1BC62C878();

  v21 = MEMORY[0x1E0DEE9D8];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    v19 = v0;
    if (v4)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
    goto LABEL_17;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v19 = v0;
  if (!v4)
    goto LABEL_16;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_33;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x1BCCF24CC](i, v3);
    else
      v6 = *(id *)(v3 + 8 * i + 32);
    v7 = v6;
    type metadata accessor for RangePillView();
    if (swift_dynamicCastClass())
    {
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v8 = v21;
LABEL_17:
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BC62D3B8();
    if (!v9)
      goto LABEL_26;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v9)
      goto LABEL_26;
  }
  v10 = objc_opt_self();
  if (v9 < 1)
  {
LABEL_33:
    __break(1u);
    return;
  }
  v11 = (void *)v10;
  v12 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
      v13 = (id)MEMORY[0x1BCCF24CC](v12, v8);
    else
      v13 = *(id *)(v8 + 8 * v12 + 32);
    v14 = v13;
    ++v12;
    v15 = sub_1BC496900();
    v16 = sub_1BC4967A0();
    objc_msgSend(v15, sel_setHidden_, 1);
    objc_msgSend(v16, sel_setHidden_, 1);

    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
    swift_bridgeObjectRetain();
    v17 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_deactivateConstraints_, v17);

  }
  while (v9 != v12);
LABEL_26:
  swift_bridgeObjectRelease_n();
  sub_1BC52E610();
  if (v18)
  {
    if ((v19[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier + 8] & 1) == 0
      && v19[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] == 1)
    {
      v20 = v18;
      sub_1BC496FD4();
      v18 = v20;
    }

  }
}

uint64_t sub_1BC52F520()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  id v8;
  void *v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;

  v1 = v0;
  v2 = sub_1BC52E76C();
  v3 = objc_msgSend(v2, sel_arrangedSubviews);

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  v4 = sub_1BC62C878();

  v15 = MEMORY[0x1E0DEE9D8];
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    swift_bridgeObjectRelease();
    v11 = v1;
    v12 = sub_1BC530D48(v10, v11);

    v13 = v11;
    v14 = sub_1BC530EF8(v10, v13);
    swift_bridgeObjectRelease();

    sub_1BC3BB0AC(v14);
    return v12;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v5 = result;
  if (!result)
    goto LABEL_16;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1BCCF24CC](i, v4);
      else
        v8 = *(id *)(v4 + 8 * i + 32);
      v9 = v8;
      type metadata accessor for RangePillView();
      if (swift_dynamicCastClass())
      {
        MEMORY[0x1BCCF1B30]();
        if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC62C8B4();
        sub_1BC62C8D8();
        sub_1BC62C890();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v10 = v15;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_1BC52F73C()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  unint64_t v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  char **v55;
  id v56;
  char **v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  char **v70;
  id v71;
  id v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  unint64_t v105;
  uint64_t v106;
  id v107;
  id v108;
  id v109;
  char **v110;
  id v111;
  void *v112;
  id v113;
  uint64_t v114;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_activeConstraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  if (v0[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_style] != 2)
  {
    v112 = v2;
    sub_1BC34D844();
    v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_1BC63B440;
    v74 = sub_1BC52E85C();
    v75 = objc_msgSend(v74, sel_topAnchor);

    v76 = objc_msgSend(v1, sel_topAnchor);
    v77 = objc_msgSend(v75, sel_constraintEqualToAnchor_, v76);

    *(_QWORD *)(v73 + 32) = v77;
    v78 = sub_1BC52E85C();
    v79 = objc_msgSend(v78, sel_leadingAnchor);

    v80 = sub_1BC52E76C();
    v81 = objc_msgSend(v80, sel_leadingAnchor);

    v82 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v81);
    *(_QWORD *)(v73 + 40) = v82;
    v83 = sub_1BC52E85C();
    v84 = objc_msgSend(v83, sel_trailingAnchor);

    v85 = sub_1BC52E76C();
    v86 = objc_msgSend(v85, sel_trailingAnchor);

    v87 = objc_msgSend(v84, sel_constraintEqualToAnchor_, v86);
    *(_QWORD *)(v73 + 48) = v87;
    v88 = sub_1BC52E76C();
    v89 = objc_msgSend(v88, sel_topAnchor);

    v90 = sub_1BC52E85C();
    v91 = objc_msgSend(v90, sel_bottomAnchor);

    v92 = objc_msgSend(v89, sel_constraintEqualToAnchor_constant_, v91, 1.0);
    *(_QWORD *)(v73 + 56) = v92;
    v93 = sub_1BC52E76C();
    v94 = objc_msgSend(v93, sel_bottomAnchor);

    v95 = objc_msgSend(v1, sel_bottomAnchor);
    v96 = objc_msgSend(v94, sel_constraintEqualToAnchor_, v95);

    *(_QWORD *)(v73 + 64) = v96;
    v97 = sub_1BC52E76C();
    v98 = objc_msgSend(v97, sel_leadingAnchor);

    v99 = objc_msgSend(v1, sel_leadingAnchor);
    v100 = objc_msgSend(v98, sel_constraintEqualToAnchor_, v99);

    *(_QWORD *)(v73 + 72) = v100;
    v101 = sub_1BC52E76C();
    v102 = objc_msgSend(v101, sel_trailingAnchor);

    v103 = objc_msgSend(v1, sel_trailingAnchor);
    v104 = objc_msgSend(v102, sel_constraintLessThanOrEqualToAnchor_, v103);

    *(_QWORD *)(v73 + 80) = v104;
    v114 = v73;
    sub_1BC62C890();
LABEL_21:
    v37 = v114;
    goto LABEL_22;
  }
  v5 = sub_1BC52E76C();
  v6 = objc_msgSend(v5, sel_arrangedSubviews);

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
  v7 = sub_1BC62C878();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v8)
  {
    v112 = v2;
    sub_1BC34D844();
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BC640FA0;
    v10 = sub_1BC52E85C();
    v11 = objc_msgSend(v10, sel_topAnchor);

    v12 = objc_msgSend(v1, sel_topAnchor);
    v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

    *(_QWORD *)(v9 + 32) = v13;
    v14 = sub_1BC52E85C();
    v15 = objc_msgSend(v14, sel_leadingAnchor);

    v16 = sub_1BC52E76C();
    v17 = objc_msgSend(v16, sel_leadingAnchor);

    v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
    *(_QWORD *)(v9 + 40) = v18;
    v19 = sub_1BC52E85C();
    v20 = objc_msgSend(v19, sel_trailingAnchor);

    v21 = sub_1BC52E76C();
    v22 = objc_msgSend(v21, sel_trailingAnchor);

    v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
    *(_QWORD *)(v9 + 48) = v23;
    v24 = sub_1BC52E76C();
    v25 = objc_msgSend(v24, sel_topAnchor);

    v26 = sub_1BC52E85C();
    v27 = objc_msgSend(v26, sel_bottomAnchor);

    v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, 1.0);
    *(_QWORD *)(v9 + 56) = v28;
    v29 = sub_1BC52E76C();
    v30 = objc_msgSend(v29, sel_leadingAnchor);

    v31 = objc_msgSend(v1, sel_leadingAnchor);
    v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

    *(_QWORD *)(v9 + 64) = v32;
    v33 = sub_1BC52E76C();
    v34 = objc_msgSend(v33, sel_trailingAnchor);

    v35 = objc_msgSend(v1, sel_trailingAnchor);
    v36 = objc_msgSend(v34, sel_constraintLessThanOrEqualToAnchor_, v35);

    *(_QWORD *)(v9 + 72) = v36;
    v114 = v9;
    sub_1BC62C890();
    v37 = v9;
    sub_1BC52E610();
    if (!v38)
    {
LABEL_22:
      v105 = sub_1BC52F520();
      sub_1BC3BB0AC(v105);
      *(_QWORD *)&v1[v3] = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v113 = (id)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      objc_msgSend(v112, sel_activateConstraints_, v113);

      return;
    }
    v39 = v38;
    v40 = sub_1BC52E978();
    v41 = objc_msgSend(v40, sel_topAnchor);

    v42 = sub_1BC52E76C();
    v43 = objc_msgSend(v42, sel_bottomAnchor);

    v109 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 1.0);
    v44 = sub_1BC52E978();
    v45 = objc_msgSend(v44, sel_leadingAnchor);

    v46 = objc_msgSend(v39, sel_leadingAnchor);
    v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

    v48 = sub_1BC52E978();
    v49 = objc_msgSend(v48, sel_bottomAnchor);

    v50 = objc_msgSend(v1, sel_bottomAnchor);
    v108 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v50);

    v51 = sub_1BC52E98C();
    v111 = v39;
    v52 = objc_msgSend(v51, sel_firstBaselineAnchor);

    v53 = sub_1BC52E978();
    v54 = objc_msgSend(v53, sel_firstBaselineAnchor);

    v55 = (char **)objc_msgSend(v52, sel_constraintEqualToAnchor_, v54);
    v56 = sub_1BC52E98C();
    v57 = &selRef_titleLabel;
    v58 = objc_msgSend(v56, sel_trailingAnchor);

    v59 = objc_msgSend(v111, sel_trailingAnchor);
    v107 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

    v60 = sub_1BC52E98C();
    v61 = objc_msgSend(v60, sel_bottomAnchor);

    v62 = objc_msgSend(v1, sel_bottomAnchor);
    v63 = objc_msgSend(v61, sel_constraintEqualToAnchor_, v62);

    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      v106 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      v65 = v106 + 6;
      if (!__OFADD__(v106, 6))
      {
LABEL_8:
        v57 = v55;
        sub_1BC5EC1E8(v65, 1);
        sub_1BC62C890();
        v55 = (char **)v109;
        MEMORY[0x1BCCF1B30](v55, v66);
        if (*(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_9:
          v110 = v55;
          sub_1BC62C8D8();
          sub_1BC62C890();
          v67 = v47;
          MEMORY[0x1BCCF1B30]();
          if (*(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          v68 = v63;
          sub_1BC62C8D8();
          sub_1BC62C890();
          v69 = v108;
          MEMORY[0x1BCCF1B30]();
          if (*(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          sub_1BC62C8D8();
          sub_1BC62C890();
          v70 = v57;
          MEMORY[0x1BCCF1B30]();
          if (*(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          sub_1BC62C8D8();
          sub_1BC62C890();
          v71 = v107;
          MEMORY[0x1BCCF1B30]();
          if (*(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          sub_1BC62C8D8();
          sub_1BC62C890();
          v72 = v68;
          MEMORY[0x1BCCF1B30]();
          if (*(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC62C8B4();
          sub_1BC62C8D8();
          sub_1BC62C890();

          goto LABEL_21;
        }
LABEL_28:
        sub_1BC62C8B4();
        goto LABEL_9;
      }
    }
    else
    {
      v64 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
      v65 = v64 + 6;
      if (!__OFADD__(v64, 6))
        goto LABEL_8;
    }
    __break(1u);
    goto LABEL_28;
  }
}

id RecordRangeView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void RecordRangeView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RecordRangeView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordRangeView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC530584()
{
  id v0;
  id v1;
  void *v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  v1 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF435B40);
  v2 = (void *)sub_1BC62CDDC();
  objc_msgSend(v0, sel_setFont_, v2);

  return v0;
}

uint64_t sub_1BC530698(void *a1)
{
  id v2;
  id v3;
  BOOL v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  id v17;
  id v18;
  int v19;
  int v20;

  v2 = objc_msgSend(a1, sel_rangeLow);

  if (v2)
  {
    if (!a1)
      goto LABEL_24;
  }
  else
  {
    v3 = objc_msgSend(a1, sel_rangeHigh);

    if (v3)
      v4 = a1 == 0;
    else
      v4 = 1;
    if (v4)
      goto LABEL_24;
  }
  v5 = objc_msgSend(a1, sel_rangeLow);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_doubleValue);
    v8 = v7;

  }
  else
  {
    v8 = -1.79769313e308;
  }
  v9 = objc_msgSend(a1, sel_rangeHigh);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_doubleValue);
    v12 = v11;

    if (v8 > v12)
      goto LABEL_24;
  }
  else
  {
    v12 = 1.79769313e308;
    if (v8 > 1.79769313e308)
    {
LABEL_24:
      v19 = 2;
      v20 = 3;
      return v20 | (v19 << 8);
    }
  }
  v13 = objc_msgSend(a1, sel_value);
  if (!v13)
    goto LABEL_24;
  v14 = v13;
  objc_msgSend(v13, sel_doubleValue);
  v16 = v15;

  v17 = objc_msgSend(a1, sel_rangeLow);
  if (v17)
  {
    v18 = objc_msgSend(a1, sel_rangeHigh);

    if (v18)
      v19 = 2;
    else
      v19 = 1;
    if (v8 <= v12)
      goto LABEL_21;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v19 = 0;
  if (v8 > v12)
    goto LABEL_29;
LABEL_21:
  if (v8 <= v16 && v16 <= v12)
  {
    v20 = 1;
    return v20 | (v19 << 8);
  }
  if (v16 < v8)
  {
    v20 = 0;
    return v20 | (v19 << 8);
  }
LABEL_30:
  if (v12 >= v16)
    v20 = 3;
  else
    v20 = 2;
  return v20 | (v19 << 8);
}

uint64_t sub_1BC530888()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC5308AC()
{
  uint64_t v0;

  sub_1BC52EEB8(v0);
}

uint64_t method lookup function for RecordRangeView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecordRangeView.widthForContentSizeCategory.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of RecordRangeView.heightForContentSizeCategory.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of RecordRangeView.topPillsAnchor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of RecordRangeView.__allocating_init(style:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t dispatch thunk of RecordRangeView.update(data:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of RecordRangeView.update(valueInRange:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

ValueMetadata *type metadata accessor for RecordRangeView.Constants()
{
  return &type metadata for RecordRangeView.Constants;
}

uint64_t getEnumTagSinglePayload for RecordRangeView.Style(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BC5309B4 + 4 * byte_1BC647090[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for RecordRangeView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC530A6C + 4 * byte_1BC64709A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC530AA0 + 4 * byte_1BC647095[v5]))();
}

uint64_t sub_1BC530AA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC530AA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC530AB0);
  return result;
}

uint64_t sub_1BC530ABC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC530AC4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC530AC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC530AD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC530ADC(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_1BC530AF8(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for RecordRangeView.Style()
{
  return &type metadata for RecordRangeView.Style;
}

uint64_t storeEnumTagSinglePayload for RecordRangeView.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC530B6C + 4 * byte_1BC6470A4[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC530BA0 + 4 * byte_1BC64709F[v4]))();
}

uint64_t sub_1BC530BA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC530BA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC530BB0);
  return result;
}

uint64_t sub_1BC530BBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC530BC4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC530BC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC530BD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecordRangeView.State()
{
  return &type metadata for RecordRangeView.State;
}

uint64_t storeEnumTagSinglePayload for RecordRangeView.InRangeContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC530C38 + 4 * byte_1BC6470AE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC530C6C + 4 * byte_1BC6470A9[v4]))();
}

uint64_t sub_1BC530C6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC530C74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC530C7CLL);
  return result;
}

uint64_t sub_1BC530C88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC530C90);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC530C94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC530C9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecordRangeView.InRangeContext()
{
  return &type metadata for RecordRangeView.InRangeContext;
}

unint64_t sub_1BC530CBC()
{
  unint64_t result;

  result = qword_1EF435B28;
  if (!qword_1EF435B28)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC647130, &type metadata for RecordRangeView.InRangeContext);
    atomic_store(result, (unint64_t *)&qword_1EF435B28);
  }
  return result;
}

unint64_t sub_1BC530D04()
{
  unint64_t result;

  result = qword_1EF435B30;
  if (!qword_1EF435B30)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC647198, &type metadata for RecordRangeView.State);
    atomic_store(result, (unint64_t *)&qword_1EF435B30);
  }
  return result;
}

uint64_t sub_1BC530D48(unint64_t a1, void *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  unint64_t v13;
  uint64_t v15;

  v3 = v2;
  if (a1 >> 62)
    goto LABEL_14;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v5)
      break;
    v15 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    v13 = v3;
    v7 = 0;
    v3 = a1 & 0xC000000000000001;
    while (v5 != v7)
    {
      if (v3)
        v8 = (char *)MEMORY[0x1BCCF24CC](v7, a1);
      else
        v8 = (char *)*(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      v10 = objc_msgSend(v8, sel_widthAnchor, v13);
      v11 = objc_msgSend(a2, sel_widthAnchor);
      v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_multiplier_constant_, v11, dbl_1BC647200[v9[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style]], -2.0);

      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      if (v5 == v7)
        return v15;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v5 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC530EF8(unint64_t a1, void *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  double v14;
  id v15;
  unint64_t v16;
  uint64_t v17;

  v3 = v2;
  if (a1 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v6)
      break;
    v17 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v16 = v3;
    v8 = 0;
    v3 = a1 & 0xC000000000000001;
    while (v6 != v8)
    {
      if (v3)
        v9 = (id)MEMORY[0x1BCCF24CC](v8, a1);
      else
        v9 = *(id *)(a1 + 8 * v8 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, sel_heightAnchor, v16);
      v12 = objc_msgSend(a2, sel_traitCollection);
      v13 = objc_msgSend(v12, sel_preferredContentSizeCategory);

      v14 = sub_1BC53F250();
      if (qword_1EF428710 != -1)
        swift_once();
      ++v8;
      v15 = objc_msgSend(v11, sel_constraintEqualToConstant_, v14 * *(double *)&qword_1EF459FC0);

      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      if (v6 == v8)
        return v17;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v6 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC5310EC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t block_copy_helper_52(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_52()
{
  return swift_release();
}

void sub_1BC531130(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC52F0CC(a1, a2, v2);
}

void sub_1BC531138(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  id v15;
  id v16;
  void *v17;
  char v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  unint64_t v42;
  id v43;
  void *v44;
  unint64_t v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char v61;

  v15 = objc_msgSend(a1, sel_displayItemType);
  v16 = objc_msgSend(a1, sel_medicalRecord);
  if (!v16)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_37;
  }
  v17 = v16;
  HKMedicalRecord.categoryKind.getter(&v61);

  v18 = v61;
  v19 = objc_msgSend(a1, sel_medicalRecord);
  if (!v19)
  {
LABEL_37:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_38;
  }
  v20 = v19;
  if (!a3)
  {
    v30 = v19;
    v31 = objc_msgSend(a1, sel_title);
    if (v31)
    {
      v32 = v31;
      a2 = sub_1BC62C680();
      a3 = v33;

      v20 = v30;
      if ((a6 & 1) != 0)
        goto LABEL_5;
      goto LABEL_8;
    }
LABEL_38:
    swift_release();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_39;
  }
  if ((a6 & 1) != 0)
  {
LABEL_5:
    v21 = v15;
    v22 = a8;
    swift_bridgeObjectRelease();

    v23 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    a5 = 0;
LABEL_35:
    *(_QWORD *)a9 = v21;
    *(_BYTE *)(a9 + 8) = v18;
    *(_QWORD *)(a9 + 16) = v20;
    *(_QWORD *)(a9 + 24) = a2;
    *(_QWORD *)(a9 + 32) = a3;
    *(_QWORD *)(a9 + 40) = v24;
    *(_QWORD *)(a9 + 48) = v23;
    *(_QWORD *)(a9 + 56) = v25;
    *(_QWORD *)(a9 + 64) = v29;
    *(_QWORD *)(a9 + 72) = a5;
    *(_QWORD *)(a9 + 80) = v27;
    *(_QWORD *)(a9 + 88) = v28;
    *(_QWORD *)(a9 + 96) = v26;
    *(_BYTE *)(a9 + 104) = 0;
    *(_QWORD *)(a9 + 112) = v22;
    return;
  }
LABEL_8:
  v34 = objc_msgSend(a1, sel_subtitle);
  if (v34)
  {
    v35 = v34;
    v55 = sub_1BC62C680();
    v56 = v36;

  }
  else
  {
    v55 = 0;
    v56 = 0;
  }
  v57 = objc_msgSend(a1, sel_attributedSubtitle);
  if ((a7 & 1) == 0)
  {
    v39 = a8;
    if (!a5)
    {
      v40 = objc_msgSend(a1, sel_valueString);
      if (v40)
      {
        v41 = v40;
        a4 = sub_1BC62C680();
        a5 = v42;

      }
      else
      {
        a4 = 0;
        a5 = 0xE000000000000000;
      }
    }
    v46 = v20;
    v21 = v15;
    v22 = v39;
    v47 = objc_msgSend(a1, sel_unitString);
    if (v47)
    {
      v48 = v47;
      v27 = sub_1BC62C680();
      v28 = v49;

    }
    else
    {
      v27 = 0;
      v28 = 0;
    }
    v20 = v46;
    goto LABEL_34;
  }
  v37 = objc_msgSend(a1, sel_chartValueWithRange);
  if (v37)
  {
    v38 = v37;
    v28 = objc_msgSend((id)objc_opt_self(), sel_referenceRangeViewDataFromInspectableValueInRange_, v37);

    if (a5)
    {
      v21 = v15;
      if (v28)
      {
        v54 = v20;
        v22 = a8;
        goto LABEL_30;
      }
      v22 = a8;
      v27 = 0;
    }
    else
    {
      if (v28)
      {
        v54 = v20;
        v21 = v15;
        v43 = objc_msgSend(v28, sel_valueString);
        if (v43)
        {
          v44 = v43;
          v22 = a8;
          a4 = sub_1BC62C680();
          a5 = v45;

        }
        else
        {
          v22 = a8;
          a4 = 0;
          a5 = 0;
        }
LABEL_30:
        v50 = v28;
        v51 = objc_msgSend(v50, sel_unitString);
        if (v51)
        {
          v52 = v51;
          v27 = sub_1BC62C680();
          v28 = v53;

        }
        else
        {

          v27 = 0;
          v28 = 0;
        }
        v20 = v54;
        goto LABEL_34;
      }
      v21 = v15;
      v22 = a8;
      v27 = 0;
      a4 = 0;
      a5 = 0;
    }
LABEL_34:
    v26 = objc_msgSend(a1, sel_chartValueWithRange, v54);

    v25 = v57;
    v29 = a4;
    v24 = v55;
    v23 = v56;
    goto LABEL_35;
  }
LABEL_39:
  swift_release();
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_1BC53153C()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  sub_1BC62D67C();
  sub_1BC62CEC0();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5315A8()
{
  sub_1BC62D67C();
  sub_1BC62D67C();
  return sub_1BC62CEC0();
}

uint64_t sub_1BC5315F4()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  sub_1BC62D67C();
  sub_1BC62CEC0();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC531660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD v12[2];
  uint64_t v13;
  unint64_t v14;

  v1 = v0;
  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = MEMORY[0x1E0C80A78](v2).n128_u64[0];
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  v7 = objc_msgSend(*(id *)(v1 + 32), sel_UUID, v4);
  sub_1BC62A79C();

  v8 = sub_1BC62A778();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease();
  v13 = v8;
  v14 = v10;
  sub_1BC62C764();
  v12[1] = *(_QWORD *)(v1 + 16);
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1BC5317D4()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = (void *)v0[4];
  v2 = (void *)v0[9];
  v3 = (void *)v0[14];
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicalRecordTimelineItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC531880()
{
  return sub_1BC531660();
}

id sub_1BC5318A0()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  v2 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4B10], 1024);
  objc_msgSend(v0, sel_setFont_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

char *sub_1BC531988(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  objc_class *v24;
  char *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  objc_super v33;

  sub_1BC384E68(0, &qword_1EF42C0C8, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  v12 = sub_1BC62BC18();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView;
  v17 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  v18 = v4;
  *(_QWORD *)&v4[v16] = objc_msgSend(v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView;
  *(_QWORD *)&v18[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v20 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel;
  *(_QWORD *)&v18[v20] = sub_1BC5318A0();
  v21 = &v18[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item];
  *((_QWORD *)v21 + 4) = 0;
  *(_OWORD *)v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  v22 = &v18[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_sectionContext];
  v23 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);

  v24 = (objc_class *)type metadata accessor for MedicalRecordTimelineItemCell();
  v33.receiver = v18;
  v33.super_class = v24;
  v25 = (char *)objc_msgSendSuper2(&v33, sel_initWithFrame_, a1, a2, a3, a4);
  v26 = objc_msgSend(v25, sel_contentView);
  objc_msgSend(v26, sel_addSubview_, *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView]);

  v27 = objc_msgSend(v25, sel_contentView);
  objc_msgSend(v27, sel_addSubview_, *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView]);

  v28 = objc_msgSend(v25, sel_contentView);
  objc_msgSend(v28, sel_addSubview_, *(_QWORD *)&v25[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel]);

  sub_1BC62A988();
  v29 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC62CDF4();

  v30 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  sub_1BC62BBF4();
  sub_1BC62BC48();
  sub_1BC5E5A5C((uint64_t)v15);
  sub_1BC62BC3C();
  v31 = sub_1BC62BC78();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v11, 0, 1, v31);
  MEMORY[0x1BCCF1FE0](v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1BC532070();

  return v25;
}

id sub_1BC531CC4(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v3 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView;
  v4 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel;
  *(_QWORD *)&v5[v7] = sub_1BC5318A0();
  v8 = &v5[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item];
  *((_QWORD *)v8 + 4) = 0;
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v9 = &v5[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_sectionContext];
  v10 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for MedicalRecordTimelineItemCell();
  v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

void sub_1BC531E18()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  objc_super v16;

  v1 = v0;
  sub_1BC384E68(0, &qword_1EF42C0C8, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - v3;
  v5 = sub_1BC62BC18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for MedicalRecordTimelineItemCell();
  v16.receiver = v0;
  v16.super_class = v9;
  objc_msgSendSuper2(&v16, sel_awakeFromNib);
  v10 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v10, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView]);

  v11 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v11, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView]);

  v12 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v12, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel]);

  sub_1BC62A988();
  v13 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC62CDF4();

  v14 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  sub_1BC62BBF4();
  sub_1BC62BC48();
  sub_1BC5E5A5C((uint64_t)v8);
  sub_1BC62BC3C();
  v15 = sub_1BC62BC78();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 0, 1, v15);
  MEMORY[0x1BCCF1FE0](v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BC532070();
}

void sub_1BC532070()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  double v41;
  id v42;
  id v43;
  id v44;
  double v45;
  id v46;
  id v47;
  id v48;
  double v49;
  id v50;
  id v51;
  id v52;
  double v53;
  void *v54;
  id v55;

  v1 = v0;
  sub_1BC34D844();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC641AB0;
  v3 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView];
  v4 = objc_msgSend(v3, sel_leadingAnchor);
  v5 = objc_msgSend(v1, sel_contentView);
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = objc_msgSend(v3, sel_trailingAnchor);
  v9 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v10 = objc_msgSend(v9, sel_trailingAnchor);

  v11 = objc_msgSend(v8, (SEL)&selRef_componentsJoinedByString_ + 6, v10);
  *(_QWORD *)(v2 + 40) = v11;
  v12 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView];
  v13 = objc_msgSend(v12, sel_leadingAnchor);
  v14 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v15 = objc_msgSend(v14, sel_leadingAnchor);

  v16 = objc_msgSend(v13, (SEL)&selRef_componentsJoinedByString_ + 6, v15);
  *(_QWORD *)(v2 + 48) = v16;
  v17 = objc_msgSend(v12, sel_trailingAnchor);
  v18 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v19 = objc_msgSend(v18, sel_trailingAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, -16.0);
  *(_QWORD *)(v2 + 56) = v20;
  v21 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel];
  v22 = objc_msgSend(v21, sel_leadingAnchor);
  v23 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v24 = objc_msgSend(v23, sel_leadingAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, 16.0);
  *(_QWORD *)(v2 + 64) = v25;
  v26 = objc_msgSend(v21, sel_trailingAnchor);
  v27 = objc_msgSend(v1, (SEL)&selRef_invalidate);
  v28 = objc_msgSend(v27, sel_trailingAnchor);

  v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, -16.0);
  *(_QWORD *)(v2 + 72) = v29;
  v30 = objc_msgSend(v21, sel_topAnchor);
  v31 = objc_msgSend(v12, sel_bottomAnchor);
  v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, -8.0);

  *(_QWORD *)(v2 + 80) = v32;
  v33 = objc_msgSend(v21, sel_bottomAnchor);
  v34 = objc_msgSend(v1, sel_contentView);
  v35 = objc_msgSend(v34, sel_bottomAnchor);

  v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v35, -8.0);
  *(_QWORD *)(v2 + 88) = v36;
  sub_1BC62C890();
  v37 = objc_msgSend(v3, sel_topAnchor);
  v38 = objc_msgSend(v1, sel_contentView);
  v39 = objc_msgSend(v38, sel_topAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  LODWORD(v41) = 1148846080;
  objc_msgSend(v40, sel_setPriority_, v41);
  objc_msgSend(v40, sel_setActive_, 1);
  v42 = objc_msgSend(v12, sel_topAnchor);
  v43 = objc_msgSend(v3, sel_bottomAnchor);
  v44 = objc_msgSend(v42, sel_constraintGreaterThanOrEqualToAnchor_constant_, v43, 7.0);

  LODWORD(v45) = 1140129792;
  objc_msgSend(v44, sel_setPriority_, v45);
  objc_msgSend(v44, sel_setActive_, 1);
  v46 = objc_msgSend(v1, sel_contentView);
  v47 = objc_msgSend(v46, sel_heightAnchor);

  v48 = objc_msgSend(v47, sel_constraintGreaterThanOrEqualToConstant_, 115.0);
  LODWORD(v49) = 1148846080;
  objc_msgSend(v48, sel_setPriority_, v49);
  objc_msgSend(v48, sel_setActive_, 1);
  v50 = objc_msgSend(v1, sel_contentView);
  v51 = objc_msgSend(v50, sel_heightAnchor);

  v52 = objc_msgSend(v51, sel_constraintEqualToConstant_, 115.0);
  LODWORD(v53) = 1132068864;
  objc_msgSend(v52, sel_setPriority_, v53);
  objc_msgSend(v52, sel_setActive_, 1);
  v54 = (void *)objc_opt_self();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v55 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v54, sel_activateConstraints_, v55);

}

uint64_t sub_1BC53274C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  _QWORD *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  unint64_t v77;
  void *v78;
  uint64_t v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  id v93;
  id v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  id v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  ValueMetadata *v126;
  _UNKNOWN **v127;
  void *v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  uint64_t v137;

  v1 = v0;
  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1;
  v10 = (uint64_t)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item];
  swift_beginAccess();
  sub_1BC37ADB0(v10, (uint64_t)&v123);
  if (!v126)
  {
    sub_1BC3DF8C4((uint64_t)&v123, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
LABEL_7:
    sub_1BC62BAF8();
    v20 = v9;
    v21 = sub_1BC62BB28();
    v22 = sub_1BC62CAC4();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v122 = v2;
      v24 = (uint8_t *)v23;
      v25 = v3;
      v26 = swift_slowAlloc();
      v137 = v26;
      *(_DWORD *)v24 = 136446210;
      sub_1BC37ADB0(v10, (uint64_t)&v123);
      sub_1BC3A9C44(0, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
      v27 = sub_1BC62C6F8();
      v123 = sub_1BC4991F0(v27, v28, &v137);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v21, v22, "Incorrect view model for MedicalRecordTimelineItem: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v26, -1, -1);
      MEMORY[0x1BCCF36A8](v24, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v5, v122);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  type metadata accessor for MedicalRecordTimelineItem();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_7;
  v11 = v137;
  *v8 = *(_BYTE *)(v137 + 24);
  swift_storeEnumTagMultiPayload();
  v12 = BrowseCategory.tintColorForTemplateImage.getter();
  v13 = *(_QWORD *)(v11 + 40);
  v14 = *(_QWORD *)(v11 + 48);
  v118 = v12;
  v15 = v12;
  swift_bridgeObjectRetain();
  BrowseCategory.systemImageName.getter();
  if (v16
    && (v17 = (void *)sub_1BC62C650(),
        swift_bridgeObjectRelease(),
        v18 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v17),
        v17,
        v18))
  {
    v19 = objc_msgSend(v18, sel_imageWithRenderingMode_, 1);

  }
  else
  {
    v19 = 0;
  }
  v30 = *(void **)(v11 + 112);
  v96 = v8;
  v121 = v13;
  if (v30)
  {
    v31 = v30;
    if (objc_msgSend(v31, sel_hasRenderableContent))
    {
      v32 = objc_msgSend((id)objc_opt_self(), sel_referenceRangeViewDataFromInspectableValueInRange_, v31);

      v30 = v32;
    }
    else
    {

      v30 = 0;
    }
  }
  v33 = *(_QWORD *)(v11 + 88);
  v120 = *(_QWORD *)(v11 + 80);
  v35 = *(_QWORD *)(v11 + 96);
  v34 = *(_QWORD *)(v11 + 104);
  LODWORD(v122) = *(unsigned __int8 *)(v11 + 120);
  v111 = (_QWORD *)v11;
  v119 = v30;
  v117 = v19;
  v36 = v30;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v37 = v15;
  if (v34)
  {
    swift_bridgeObjectRetain();
    v38 = v19;
    v35 = sub_1BC62C710();
    v40 = v39;
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = v19;
    v40 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41 = v38;
  v42 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  v43 = v36;
  v44 = v9;
  v110 = v9;
  v45 = *(_QWORD *)&v9[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView];
  v126 = &type metadata for UserDomainConceptFeedItemViewData;
  v127 = &protocol witness table for UserDomainConceptFeedItemViewData;
  v46 = swift_allocObject();
  v123 = v46;
  *(_QWORD *)(v46 + 16) = v121;
  *(_QWORD *)(v46 + 24) = v14;
  *(_QWORD *)(v46 + 32) = 0;
  *(_QWORD *)(v46 + 40) = 0;
  v47 = v118;
  *(_QWORD *)(v46 + 48) = v117;
  *(_QWORD *)(v46 + 56) = v47;
  v48 = v120;
  *(_QWORD *)(v46 + 64) = v119;
  *(_QWORD *)(v46 + 72) = v48;
  *(_QWORD *)(v46 + 80) = v33;
  *(_QWORD *)(v46 + 88) = v35;
  v108 = v35;
  *(_QWORD *)(v46 + 96) = v40;
  *(_QWORD *)(v46 + 104) = 0;
  *(_BYTE *)(v46 + 112) = 1;
  *(_WORD *)(v46 + 113) = 0;
  *(_BYTE *)(v46 + 115) = 0;
  v49 = v122;
  *(_BYTE *)(v46 + 116) = v122;
  v112 = v40;
  v50 = v14;
  v51 = v45 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v105 = v41;
  v106 = v42;
  v107 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC3AA078((uint64_t)&v123, v51, (unint64_t *)&qword_1EF42AF38, &qword_1EF42AF40);
  swift_endAccess();
  sub_1BC38BF54();
  sub_1BC3DF8C4((uint64_t)&v123, (unint64_t *)&qword_1EF42AF38, &qword_1EF42AF40);
  v52 = *(_QWORD *)&v44[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView];
  v109 = v52;
  if (v49)
    v53 = 0x100000001;
  else
    v53 = 1;
  v54 = v52 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  swift_beginAccess();
  v116 = *(_QWORD *)v54;
  v115 = *(_QWORD *)(v54 + 8);
  v102 = *(_QWORD *)(v54 + 16);
  v101 = *(_QWORD *)(v54 + 24);
  v55 = *(void **)(v54 + 40);
  v99 = *(void **)(v54 + 32);
  v100 = *(void **)(v54 + 48);
  v56 = *(_QWORD *)(v54 + 64);
  v122 = *(_QWORD *)(v54 + 56);
  v57 = *(_QWORD *)(v54 + 80);
  v113 = *(_QWORD *)(v54 + 72);
  v104 = *(unsigned int *)(v54 + 96);
  v58 = *(_QWORD *)(v54 + 88);
  v103 = *(unsigned __int8 *)(v54 + 100);
  v114 = v104 | (v103 << 32);
  *(_QWORD *)v54 = v121;
  *(_QWORD *)(v54 + 8) = v50;
  *(_QWORD *)(v54 + 16) = 0;
  *(_QWORD *)(v54 + 24) = 0;
  v59 = v118;
  *(_QWORD *)(v54 + 32) = v117;
  *(_QWORD *)(v54 + 40) = v59;
  v60 = v120;
  *(_QWORD *)(v54 + 48) = v119;
  *(_QWORD *)(v54 + 56) = v60;
  v61 = v108;
  *(_QWORD *)(v54 + 64) = v33;
  *(_QWORD *)(v54 + 72) = v61;
  *(_QWORD *)(v54 + 80) = v112;
  *(_QWORD *)(v54 + 88) = 0;
  *(_DWORD *)(v54 + 96) = v53;
  *(_BYTE *)(v54 + 100) = BYTE4(v53);
  v121 = v50;
  swift_bridgeObjectRetain();
  v119 = v105;
  v118 = v106;
  v117 = v107;
  v120 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v98 = v58;
  v97 = v57;
  v62 = v116;
  v63 = v115;
  v64 = v102;
  v65 = v101;
  v66 = v99;
  v67 = v100;
  sub_1BC3EE064(v116, v115, v102, v101, v99, v55, v100);
  v68 = v122;
  sub_1BC3EDFF4(v62, v63, v64, v65, v66, v55, v67);
  v123 = v62;
  v124 = v63;
  v125 = v64;
  v126 = (ValueMetadata *)v65;
  v127 = (_UNKNOWN **)v66;
  v128 = v55;
  v129 = v67;
  v130 = v68;
  v131 = v56;
  v132 = v113;
  v133 = v97;
  v134 = v98;
  v136 = v103;
  v135 = v104;
  sub_1BC446F3C((uint64_t)&v123);
  sub_1BC3EDFF4(v116, v115, v64, v65, v66, v55, v67);
  v69 = v111;
  v70 = *(void **)&v110[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel];
  if (v111[9])
  {
    objc_msgSend(*(id *)&v110[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel], sel_setAttributedText_);
    if (!v69[8])
      goto LABEL_30;
  }
  else
  {
    if (v111[8])
    {
      swift_bridgeObjectRetain();
      v71 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v71 = 0;
    }
    objc_msgSend(v70, sel_setText_, v71);

    if (!v69[8])
      goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  sub_1BC62C710();
  v73 = v72;
  swift_bridgeObjectRelease();
  if (v73)
  {
    swift_bridgeObjectRelease();
    v74 = 0;
    goto LABEL_31;
  }
LABEL_30:
  v74 = 1;
LABEL_31:
  objc_msgSend(v70, sel_setHidden_, v74);
  v75 = (void *)v69[4];
  objc_opt_self();
  v76 = swift_dynamicCastObjCClass();
  if (v76 && (v77 = v69[8]) != 0)
  {
    v78 = (void *)v76;
    v79 = v69[7];
    v80 = v75;
    swift_bridgeObjectRetain();
    v81 = objc_msgSend(v78, sel_authors);
    if (v81)
    {
      v82 = v81;
      sub_1BC62C878();

    }
    v84 = (void *)objc_opt_self();
    v85 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v86 = objc_msgSend(v84, sel_localizedStringByJoiningStrings_, v85);

    v87 = sub_1BC62C680();
    v89 = v88;

    v90 = HIBYTE(v77) & 0xF;
    if ((v77 & 0x2000000000000000) == 0)
      v90 = v79 & 0xFFFFFFFFFFFFLL;
    if (!v90)
      goto LABEL_43;
    v91 = HIBYTE(v89) & 0xF;
    if ((v89 & 0x2000000000000000) == 0)
      v91 = v87 & 0xFFFFFFFFFFFFLL;
    if (v91)
    {
      v123 = v79;
      v124 = v77;
      sub_1BC62C764();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v92 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v70, sel_setText_, v92);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v93 = v118;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

    }
    else
    {
LABEL_43:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v94 = v118;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v83 = v118;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return sub_1BC348D78((uint64_t)v96, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
}

uint64_t sub_1BC5334C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = sub_1BC62A970();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - v9;
  v11 = sub_1BC62ADD8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v2 + OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_sectionContext;
  swift_beginAccess();
  sub_1BC3AA114(a1, v15);
  swift_endAccess();
  sub_1BC43EFFC(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1BC3AA0C8((uint64_t)v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1BC62ADCC();
    sub_1BC53384C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return sub_1BC3AA0C8(a1);
}

void (*sub_1BC533678(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_1BC62A970();
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v3[6] = malloc(*(_QWORD *)(v5 + 64));
  sub_1BC384E68(0, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  v7 = sub_1BC62ADD8();
  v3[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[9] = v8;
  v9 = malloc(*(_QWORD *)(v8 + 64));
  v10 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_sectionContext;
  v3[10] = v9;
  v3[11] = v10;
  swift_beginAccess();
  return sub_1BC533744;
}

void sub_1BC533744(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = *(_QWORD *)(v3 + 64);
    v5 = *(_QWORD *)(v3 + 72);
    v6 = *(_QWORD *)(v3 + 56);
    sub_1BC43EFFC(*(_QWORD *)(v3 + 24) + *(_QWORD *)(v3 + 88), v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      sub_1BC3AA0C8(*(_QWORD *)(v3 + 56));
    }
    else
    {
      v8 = *(_QWORD *)(v3 + 72);
      v7 = *(_QWORD *)(v3 + 80);
      v9 = *(_QWORD *)(v3 + 64);
      v11 = *(_QWORD *)(v3 + 40);
      v10 = *(_QWORD *)(v3 + 48);
      v12 = *(_QWORD *)(v3 + 32);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v7, *(_QWORD *)(v3 + 56), v9);
      sub_1BC62ADCC();
      sub_1BC53384C();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
  }
  v14 = *(void **)(v3 + 48);
  v13 = *(void **)(v3 + 56);
  free(*(void **)(v3 + 80));
  free(v13);
  free(v14);
  free((void *)v3);
}

void sub_1BC53384C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = v0;
  sub_1BC62D1D8();
  v2 = sub_1BC62C680();
  v4 = v3;
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  sub_1BC62A964();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  sub_1BC62A958();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC62C650();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v5);

  swift_bridgeObjectRetain();
  sub_1BC38BC14(v2, v4);
  swift_bridgeObjectRetain();
  sub_1BC447C6C(v2, v4);
  v6 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel];
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7);

}

id sub_1BC533A40()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC533AF4()
{
  return type metadata accessor for MedicalRecordTimelineItemCell();
}

uint64_t type metadata accessor for MedicalRecordTimelineItemCell()
{
  uint64_t result;

  result = qword_1EF435C60;
  if (!qword_1EF435C60)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC533B38()
{
  unint64_t v0;

  sub_1BC384E68(319, &qword_1EF42BC08, (void (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t destroy for MedicalRecordTimelineViewData(id *a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for MedicalRecordTimelineViewData(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v9;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v10 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = v9;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MedicalRecordTimelineViewData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 56);
  v8 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(void **)(a1 + 96);
  v11 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for MedicalRecordTimelineViewData(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicalRecordTimelineViewData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicalRecordTimelineViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordTimelineViewData()
{
  return &type metadata for MedicalRecordTimelineViewData;
}

unint64_t sub_1BC533F9C()
{
  unint64_t result;

  result = qword_1EF435C70;
  if (!qword_1EF435C70)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6472B0, &type metadata for MedicalRecordTimelineViewData);
    atomic_store(result, (unint64_t *)&qword_1EF435C70);
  }
  return result;
}

uint64_t sub_1BC533FE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC534030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item;
  swift_beginAccess();
  sub_1BC3AA078(a1, v3, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
  swift_endAccess();
  sub_1BC53274C();
  return sub_1BC3DF8C4(a1, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
}

uint64_t (*sub_1BC5340D4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC53411C;
}

uint64_t sub_1BC53411C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC53274C();
  return result;
}

void sub_1BC53414C(uint64_t a1, void *a2)
{
  sub_1BC53431C(a2);
}

uint64_t sub_1BC534170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_sectionContext;
  swift_beginAccess();
  return sub_1BC43EFFC(v3, a1);
}

void (*sub_1BC5341C4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC533678(v2);
  return sub_1BC383B18;
}

uint64_t sub_1BC534208(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF435C78, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItem, (uint64_t)&unk_1BC6473F8);
}

uint64_t sub_1BC534234()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC534288(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8))
    return 0;
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  v6 = v5;
  v7 = v4;
  v8 = sub_1BC62CEB4();

  return v8 & 1;
}

void sub_1BC53431C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  int v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  NSObject *v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  id v28;
  void *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  NSObject *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  int v58;
  NSObject *v59;
  void *v60;
  void *v61;
  void *v62;
  unsigned __int8 v63;
  id v64;
  void *v65;
  uint64_t v66;

  v2 = v1;
  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v48 - v12;
  v14 = v1 + OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v14, (uint64_t)&v59);
  if (v62)
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    type metadata accessor for MedicalRecordTimelineItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v15 = v66;
      v16 = sub_1BC62BF0C();
      v58 = 0;
      LODWORD(v54) = v59;
      v53 = v60;
      v17 = v62;
      v56 = v61;
      if (!v61 && v62)
      {
        v18 = v63;
        v16 = sub_1BC3B11F0((uint64_t)objc_msgSend(*(id *)(v15 + 32), sel_recordCategoryType), (uint64_t)&unk_1E74D25E8);
        v58 = v16 & (v18 ^ 1);
      }
      if (qword_1ED6A31B0 != -1)
        v16 = swift_once();
      v51 = a1;
      v55 = v15;
      v50 = v5;
      v49 = v4;
      v57 = v17;
      if (qword_1ED6A4878 != -1)
        v16 = swift_once();
      v66 = *(_QWORD *)(qword_1ED6A54F0 + OBJC_IVAR___HRProfileManager_lock);
      MEMORY[0x1E0C80A78](v16);
      *(&v48 - 2) = v19;
      sub_1BC62AA6C();
      v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
      sub_1BC379B20((unint64_t *)&qword_1ED6A4B90, 255, v20, MEMORY[0x1E0D2D480]);
      swift_retain();
      sub_1BC62B888();
      swift_release();
      v21 = v59;
      v22 = *(void **)(v55 + 32);
      v52 = v59;
      if (v58)
      {
        v23 = sub_1BC554F84(v22, v59);
      }
      else
      {
        v24 = sub_1BC62A7B4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v13, 1, 1, v24);
        sub_1BC5349AC((uint64_t)v13, (uint64_t)v10);
        v25 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
        v26 = v22;
        v27 = v21;
        v23 = sub_1BC5BFBB8(v26, v27, (uint64_t)v10);

        v28 = objc_msgSend(v23, sel_navigationItem);
        objc_msgSend(v28, sel_setLargeTitleDisplayMode_, 2);

        sub_1BC348D78((uint64_t)v13, type metadata accessor for PresentationContext);
      }

      v29 = v57;
      v30 = 11;
      if (v56)
        v30 = 19;
      if (v57)
        v30 = 12;
      if ((_DWORD)v54)
        v30 = 10;
      v54 = v30;
      if (qword_1ED6A3198 != -1)
        swift_once();
      if (v29)
      {
        sub_1BC4FC8D8(v29, (uint64_t)&v59);
        v31 = (char)v59;
        v32 = v2;
        v33 = v7;
        v34 = v23;
        v35 = v60;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v23 = v34;
        v7 = v33;
        v2 = v32;
        swift_bridgeObjectRelease();
      }
      else
      {
        v31 = 11;
      }
      LOBYTE(v59) = v31;
      sub_1BC4E4100(1, v54, 0, (char *)&v59, 0);
      if (v58)
      {
        v36 = objc_msgSend(v51, sel_navigationController);
        v37 = v57;
        if (v36)
        {
          v38 = v36;
          objc_msgSend(v36, sel_pushViewController_animated_, v23, 1);

        }
        swift_release();

      }
      else
      {
        v65 = &unk_1EF4D0058;
        v39 = swift_dynamicCastObjCProtocolConditional();
        v40 = v57;
        if (v39)
        {
          v41 = v39;
          v42 = v23;
          objc_msgSend(v51, sel_showAdaptively_sender_animated_, v41, v2, 1);

          swift_release();
        }
        else
        {
          sub_1BC62BAF8();
          v43 = sub_1BC62BB28();
          v44 = sub_1BC62CAD0();
          if (os_log_type_enabled(v43, v44))
          {
            v45 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v45 = 0;
            _os_log_impl(&dword_1BC30A000, v43, v44, "Could not make AdaptiveModalPresentedViewController from factor makeDetailViewController(for:using:)", v45, 2u);
            MEMORY[0x1BCCF36A8](v45, -1, -1);

            swift_release();
            v23 = v52;
          }
          else
          {
            swift_release();

            v43 = v52;
          }
          v46 = v49;
          v47 = v53;

          (*(void (**)(char *, uint64_t))(v50 + 8))(v7, v46);
        }
      }
    }
  }
  else
  {
    sub_1BC3DF8C4((uint64_t)&v59, (unint64_t *)&qword_1EF43AE70, (unint64_t *)&qword_1EF42ADC0);
  }
}

uint64_t sub_1BC5349AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t UDCAlphabeticalItem.__allocating_init(viewData:healthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v4 = swift_allocObject();
  v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  type metadata accessor for AlphabeticalUDCCell();
  sub_1BC347F0C(&qword_1EF42F1C0, (uint64_t (*)(uint64_t))type metadata accessor for AlphabeticalUDCCell, (uint64_t)&unk_1BC63B5F8);
  *v5 = sub_1BC62ADA8();
  v5[1] = v6;
  sub_1BC4220A8(a1, v4 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore) = a2;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration) = 1;
  return v4;
}

uint64_t UDCAlphabeticalItem.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC3AA02C(v1 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, a1);
}

id UDCAlphabeticalItem.healthStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore);
}

uint64_t UDCAlphabeticalItem.init(viewData:healthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  type metadata accessor for AlphabeticalUDCCell();
  sub_1BC347F0C(&qword_1EF42F1C0, (uint64_t (*)(uint64_t))type metadata accessor for AlphabeticalUDCCell, (uint64_t)&unk_1BC63B5F8);
  *v5 = sub_1BC62ADA8();
  v5[1] = v6;
  sub_1BC4220A8(a1, v2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore) = a2;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration) = 1;
  return v2;
}

uint64_t UDCAlphabeticalItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC534BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v10[2];

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier + 8);
  v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID, v3));
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v10[0] = v7;
  v10[1] = v6;
  swift_bridgeObjectRetain();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v10[0];
}

id sub_1BC534CB0()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData + 8);
}

uint64_t UDCAlphabeticalItem.deinit()
{
  uint64_t v0;

  sub_1BC421F94(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UDCAlphabeticalItem.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BC421F94(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC534D60()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC534D9C()
{
  return sub_1BC534BB4();
}

uint64_t sub_1BC534DBC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1BC3AA02C(*v1 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, a1);
}

id sub_1BC534DD4()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore);
}

uint64_t sub_1BC534DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  type metadata accessor for UDCAlphabeticalItem();
  v6 = swift_allocObject();
  v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  type metadata accessor for AlphabeticalUDCCell();
  sub_1BC347F0C(&qword_1EF42F1C0, (uint64_t (*)(uint64_t))type metadata accessor for AlphabeticalUDCCell, (uint64_t)&unk_1BC63B5F8);
  *v7 = sub_1BC62ADA8();
  v7[1] = v8;
  result = sub_1BC4220A8(a1, v6 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore) = a2;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration) = 1;
  *a3 = v6;
  return result;
}

uint64_t static UDCAlphabeticalItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0((_QWORD *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData), (_QWORD *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData));
}

uint64_t UDCAlphabeticalItem.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v9;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v4 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID, v4));
  sub_1BC62A79C();

  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v1);
}

uint64_t UDCAlphabeticalItem.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62D670();
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID));
  sub_1BC62A79C();

  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_1BC62D6AC();
}

uint64_t sub_1BC535094()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_1BC62D670();
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v6
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID));
  sub_1BC62A79C();

  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_1BC62D6AC();
}

uint64_t sub_1BC53518C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v9;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v4 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID, v4));
  sub_1BC62A79C();

  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v1);
}

uint64_t sub_1BC535270()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v1 = sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62D670();
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID));
  sub_1BC62A79C();

  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, v2, MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_1BC62D6AC();
}

uint64_t sub_1BC53536C(_QWORD *a1, _QWORD *a2)
{
  return static UserDomainConceptViewData.== infix(_:_:)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, *a2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
}

uint64_t sub_1BC535388(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BC347F0C(&qword_1EF42CFC0, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem, (uint64_t)&protocol conformance descriptor for UDCAlphabeticalItem);
  result = sub_1BC347F0C(&qword_1EF435D18, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem, (uint64_t)&protocol conformance descriptor for UDCAlphabeticalItem);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for UDCAlphabeticalItem()
{
  uint64_t result;

  result = qword_1EF435D50;
  if (!qword_1EF435D50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC535420()
{
  return sub_1BC347F0C(&qword_1EF435D20, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem, (uint64_t)&protocol conformance descriptor for UDCAlphabeticalItem);
}

uint64_t sub_1BC53544C()
{
  return type metadata accessor for UDCAlphabeticalItem();
}

uint64_t sub_1BC535454()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UserDomainConceptViewData();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for UDCAlphabeticalItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UDCAlphabeticalItem.__allocating_init(viewData:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of UDCAlphabeticalItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of UDCAlphabeticalItem.concept.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

unint64_t static HeaderWithRightAlignedButton.defaultReuseIdentifier.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1BC53552C()
{
  return sub_1BC38BBC4(&OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText);
}

void sub_1BC535538(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  void *v6;
  void *v7;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  v6 = *(void **)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel);
  if (v5[1])
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v6, sel_setText_, v7);

}

void (*sub_1BC5355EC(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC535644;
}

void sub_1BC535644(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel);
    if (*(_QWORD *)(v4 + v3[4] + 8))
    {
      swift_bridgeObjectRetain();
      v6 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v5, sel_setText_, v6);

  }
  free(v3);
}

uint64_t sub_1BC5356DC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62CEF0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC53577C()
{
  return sub_1BC38BBC4(&OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText);
}

uint64_t sub_1BC535788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62CEF0();
  return swift_bridgeObjectRelease();
}

void (*sub_1BC535814(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1BC53586C;
}

void sub_1BC53586C(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC62CEF0();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_1BC5358DC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC535950();
}

void sub_1BC535950()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;

  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier];
  swift_beginAccess();
  v2 = *((_QWORD *)v1 + 1);
  if (v2)
  {
    v3 = *(_QWORD *)v1;
    sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v4 + 32) = v3;
    *(_QWORD *)(v4 + 40) = v2;
    *(_QWORD *)(v4 + 48) = 0x6956726564616548;
    *(_QWORD *)(v4 + 56) = 0xEA00000000007765;
    swift_bridgeObjectRetain();
    v5 = (void *)sub_1BC62C86C();
    v6 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v0, sel_setAccessibilityIdentifier_, v6);
    v7 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel];
    swift_bridgeObjectRetain();
    v8 = (_QWORD *)v4;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1BC3B5060(0, *(_QWORD *)(v4 + 16) + 1, 1, (_QWORD *)v4);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_1BC3B5060((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = &v8[2 * v10];
    v11[4] = 0x6554636974617453;
    v11[5] = 0xEA00000000007478;
    v12 = (void *)sub_1BC62C86C();
    v13 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v13);
    swift_bridgeObjectRelease();

    v14 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = (uint64_t)sub_1BC3B5060(0, *(_QWORD *)(v4 + 16) + 1, 1, (_QWORD *)v4);
    v16 = *(_QWORD *)(v4 + 16);
    v15 = *(_QWORD *)(v4 + 24);
    if (v16 >= v15 >> 1)
      v4 = (uint64_t)sub_1BC3B5060((_QWORD *)(v15 > 1), v16 + 1, 1, (_QWORD *)v4);
    *(_QWORD *)(v4 + 16) = v16 + 1;
    v17 = v4 + 16 * v16;
    *(_QWORD *)(v17 + 32) = 0x6E6F74747542;
    *(_QWORD *)(v17 + 40) = 0xE600000000000000;
    v18 = (void *)sub_1BC62C86C();
    v19 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v19);
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1BC535BEC()
{
  return sub_1BC38BBC4(&OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier);
}

void sub_1BC535BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  sub_1BC535950();
}

void (*sub_1BC535C58(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC535CA0;
}

void sub_1BC535CA0(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC535950();
}

uint64_t sub_1BC535CD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
  swift_beginAccess();
  return MEMORY[0x1BCCF37A4](v1);
}

uint64_t sub_1BC535D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1BC535D84(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCF37A4](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BC535DF8;
}

void sub_1BC535DF8(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id HeaderWithRightAlignedButton.__allocating_init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(objc_allocWithZone(v2), sel_initWithReuseIdentifier_, v3);

  return v4;
}

char *HeaderWithRightAlignedButton.init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  char *v15;
  void *v16;
  char *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  objc_super v24;

  v4 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel;
  v5 = (void *)objc_opt_self();
  v6 = v2;
  v7 = objc_msgSend(v5, sel_labelColor);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v8, sel_setFont_, 0);
  objc_msgSend(v8, sel_setNumberOfLines_, 0);
  objc_msgSend(v8, sel_setTextColor_, v7);

  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v2[v4] = v8;
  v9 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button;
  v10 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v6[v9] = v10;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_customConstraints] = MEMORY[0x1E0DEE9D8];
  v11 = &v6[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v12 = &v6[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v6[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  if (a2)
  {
    v14 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v24.receiver = v6;
  v24.super_class = (Class)type metadata accessor for HeaderWithRightAlignedButton();
  v15 = (char *)objc_msgSendSuper2(&v24, sel_initWithReuseIdentifier_, v14);

  v16 = *(void **)&v15[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button];
  v17 = v15;
  objc_msgSend(v16, sel_addTarget_action_forControlEvents_, v17, sel_buttonTapped_, 64);
  LODWORD(v18) = 1148846080;
  objc_msgSend(v16, sel_setContentHuggingPriority_forAxis_, 0, v18);
  objc_msgSend(v17, sel_addSubview_, *(_QWORD *)&v17[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel]);
  objc_msgSend(v17, sel_addSubview_, v16);
  sub_1BC536288();
  sub_1BC536424();
  sub_1BC448304();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BC639590;
  v20 = sub_1BC62BDD4();
  v21 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 40) = v21;
  v22 = v17;
  MEMORY[0x1BCCF20E8](v19, sel_traitCollectionDidChangeWithTraitEnvironment_previousTraitCollection_);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v22;
}

uint64_t type metadata accessor for HeaderWithRightAlignedButton()
{
  return objc_opt_self();
}

uint64_t sub_1BC536288()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v16;

  v1 = v0;
  v2 = sub_1BC62BCD8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62BD98();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62BD38();
  v10 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel];
  sub_1BC62BCF0();
  v11 = (void *)sub_1BC62BCB4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v10, sel_setFont_, v11);

  v12 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button], sel_titleLabel);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    objc_msgSend(v13, sel_setFont_, v14);

  }
  sub_1BC62BD2C();
  objc_msgSend(v1, sel_setDirectionalLayoutMargins_);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_1BC536424()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;

  v1 = (void *)objc_opt_self();
  v2 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_customConstraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  v4 = objc_msgSend(v0, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  LOBYTE(v4) = sub_1BC62CD1C();
  if ((v4 & 1) != 0)
    v6 = sub_1BC536564();
  else
    v6 = sub_1BC5368FC();
  *(_QWORD *)&v0[v2] = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v7);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1BC536564()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;

  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC63B440;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel];
  v3 = objc_msgSend(v2, sel_topAnchor);
  v4 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v5 = objc_msgSend(v4, sel_topAnchor);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);
  *(_QWORD *)(v1 + 32) = v6;
  v7 = objc_msgSend(v2, sel_leadingAnchor);
  v8 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v9 = objc_msgSend(v8, (SEL)&selRef_dateCache + 6);

  v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(_QWORD *)(v1 + 40) = v10;
  v11 = objc_msgSend(v2, sel_trailingAnchor);
  v12 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v13 = objc_msgSend(v12, sel_trailingAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(_QWORD *)(v1 + 48) = v14;
  v15 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button];
  v16 = objc_msgSend(v15, sel_topAnchor);
  v17 = objc_msgSend(v2, sel_bottomAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 8.0);

  *(_QWORD *)(v1 + 56) = v18;
  v19 = objc_msgSend(v15, sel_leadingAnchor);
  v20 = objc_msgSend(v2, sel_leadingAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(v1 + 64) = v21;
  v22 = objc_msgSend(v15, sel_trailingAnchor);
  v23 = objc_msgSend(v2, sel_trailingAnchor);
  v24 = objc_msgSend(v22, sel_constraintLessThanOrEqualToAnchor_, v23);

  *(_QWORD *)(v1 + 72) = v24;
  v25 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v26 = objc_msgSend(v25, sel_bottomAnchor);

  v27 = objc_msgSend(v15, sel_bottomAnchor);
  v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  *(_QWORD *)(v1 + 80) = v28;
  sub_1BC62C890();
  return v1;
}

uint64_t sub_1BC5368FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  v1 = v0;
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC640FA0;
  v3 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel];
  v4 = objc_msgSend(v3, sel_topAnchor);
  v5 = objc_msgSend(v1, sel_layoutMarginsGuide);
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = objc_msgSend(v3, sel_leadingAnchor);
  v9 = objc_msgSend(v1, sel_layoutMarginsGuide);
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v10);
  *(_QWORD *)(v2 + 40) = v11;
  v12 = objc_msgSend(v1, sel_layoutMarginsGuide);
  v13 = objc_msgSend(v12, sel_bottomAnchor);

  v14 = objc_msgSend(v3, sel_bottomAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(_QWORD *)(v2 + 48) = v15;
  v16 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button];
  v17 = objc_msgSend(v16, sel_leadingAnchor);
  v18 = objc_msgSend(v3, sel_trailingAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 8.0);

  *(_QWORD *)(v2 + 56) = v19;
  v20 = objc_msgSend(v16, sel_trailingAnchor);
  v21 = objc_msgSend(v1, sel_layoutMarginsGuide);
  v22 = objc_msgSend(v21, sel_trailingAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v2 + 64) = v23;
  v24 = objc_msgSend(v16, sel_lastBaselineAnchor);
  v25 = objc_msgSend(v3, sel_lastBaselineAnchor);
  v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(_QWORD *)(v2 + 72) = v26;
  sub_1BC62C890();
  return v2;
}

id HeaderWithRightAlignedButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeaderWithRightAlignedButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC536D08@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText, a2);
}

void sub_1BC536D14(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1BC535538(v1, v2);
}

uint64_t sub_1BC536D50@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText, a2);
}

uint64_t sub_1BC536D60@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier, a2);
}

uint64_t sub_1BC536D70@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
  swift_beginAccess();
  result = MEMORY[0x1BCCF37A4](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1BC536DC8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for HeaderWithRightAlignedButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.headerText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.headerText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.headerText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.buttonText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.buttonText.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.buttonText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.baseAccessibilityIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.baseAccessibilityIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.baseAccessibilityIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButtonDelegate.didTapHeaderButton()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1BC537020()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  char *v6;
  char *v7;
  char *v8;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel;
  v2 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v3, sel_setFont_, 0);
  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  objc_msgSend(v3, sel_setTextColor_, v2);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v0[v1] = v3;
  v4 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button;
  v5 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v0[v4] = v5;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_customConstraints] = MEMORY[0x1E0DEE9D8];
  v6 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  sub_1BC62D394();
  __break(1u);
}

void sub_1BC5371C8(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  char v7;

  v2 = v1;
  v4 = objc_msgSend(v2, sel_traitCollection);
  v5 = v4;
  if (!a1)
  {
    if (!v4)
      return;

    goto LABEL_7;
  }
  if (!v4
    || (sub_1BC34B6A0(0, &qword_1ED6A58F8),
        v6 = a1,
        v7 = sub_1BC62CEB4(),
        v6,
        v6,
        v5,
        (v7 & 1) == 0))
  {
LABEL_7:
    sub_1BC536288();
    sub_1BC536424();
  }
}

uint64_t type metadata accessor for ClinicalAccountDetailsViewController()
{
  uint64_t result;

  result = qword_1EF435ED8;
  if (!qword_1EF435ED8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC5372C8()
{
  return swift_initClassMetadata2();
}

char *sub_1BC537354(void *a1, void *a2, char *a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE *v24;
  id v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  objc_class *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  objc_super v64;
  id v65;
  uint64_t v66;

  v51 = a4;
  v52 = a5;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF435F98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB22E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v57 = (char *)&v50 - v11;
  v12 = sub_1BC62CFD4();
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  MEMORY[0x1E0C80A78](v12);
  v54 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], v9);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v50 - v15;
  sub_1BC35891C(0, &qword_1EF435FA0, (void (*)(uint64_t))sub_1BC53BD3C, (void (*)(void))sub_1BC53BE1C);
  v56 = v17;
  v58 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v50 - v18;
  sub_1BC53BE38();
  v21 = *(_QWORD *)(v20 - 8);
  v59 = v20;
  v60 = v21;
  MEMORY[0x1E0C80A78](v20);
  v55 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a3;
  *(_QWORD *)&v5[qword_1EF435E60] = 0;
  *(_QWORD *)&v5[qword_1EF435E68] = 0;
  *(_QWORD *)&v5[qword_1EF435EA8] = 0;
  *(_QWORD *)&v5[qword_1EF435EB0] = 0;
  *(_QWORD *)&v5[qword_1EF435EB8] = 0;
  *(_QWORD *)&v5[qword_1EF435EC0] = 0;
  v5[qword_1EF435EC8] = 0;
  *(_QWORD *)&v5[qword_1EF435ED0] = 0;
  v65 = a1;
  v66 = 0;
  sub_1BC53BD3C();
  swift_allocObject();
  v24 = v5;
  v25 = a1;
  *(_QWORD *)&v24[qword_1EF435E70] = sub_1BC62BF24();
  *(_QWORD *)&v24[qword_1EF435E78] = a2;
  v26 = a2;
  v27 = objc_msgSend(v26, sel_clinicalAccountStore);
  *(_QWORD *)&v24[qword_1EF435E80] = v27;
  type metadata accessor for ClinicalAccountManager();
  v28 = (_QWORD *)swift_allocObject();
  v29 = MEMORY[0x1E0DEE9E8];
  v28[5] = 0;
  v28[6] = 0;
  v28[4] = v29;
  v28[2] = v26;
  v53 = v26;
  v28[3] = objc_msgSend(v53, sel_clinicalAccountStore);
  *(_QWORD *)&v24[qword_1EF435E88] = v28;
  type metadata accessor for ClinicalAccountDetailsDataSourceProvider();
  swift_allocObject();
  v30 = v25;
  swift_retain();
  v31 = sub_1BC459058(v30, (uint64_t)v28);

  swift_release();
  *(_QWORD *)&v24[qword_1EF435E90] = v31;
  v24[qword_1EF435E98] = v23;
  v32 = &v24[qword_1EF435EA0];
  v33 = v52;
  *v32 = v51;
  v32[1] = v33;

  v34 = (objc_class *)type metadata accessor for ClinicalAccountDetailsViewController();
  v64.receiver = v24;
  v64.super_class = v34;
  v35 = (char *)objc_msgSendSuper2(&v64, sel_initWithCollectionViewLayout_, 0);
  v36 = *(_QWORD *)&v35[qword_1EF435E90];
  v37 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v38 = *(_QWORD *)(v36 + 88);
  *(_QWORD *)(v36 + 88) = sub_1BC53BF38;
  *(_QWORD *)(v36 + 96) = v37;
  v39 = v35;
  sub_1BC36D770(v38);
  v65 = *(id *)&v39[qword_1EF435E70];
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  swift_retain();
  v63 = (id)sub_1BC62CC74();
  v40 = sub_1BC62CC38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v16, 1, 1, v40);
  sub_1BC53BE1C();
  sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  sub_1BC62C080();
  sub_1BC358494((uint64_t)v16, (uint64_t)&qword_1ED6A4DF0, (uint64_t)MEMORY[0x1E0DEF868], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);

  swift_release();
  v41 = v54;
  sub_1BC62CFC8();
  v65 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v42 = sub_1BC62CFBC();
  v43 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v57, 1, 1, v42);
  sub_1BC34B6A0(0, &qword_1EF435FC8);
  sub_1BC358A68(&qword_1EF435FD0, &qword_1EF435FA0, (void (*)(uint64_t))sub_1BC53BD3C, (void (*)(void))sub_1BC53BE1C);
  sub_1BC35839C(&qword_1EF435FD8, &qword_1EF435FC8, 0x1E0C99E58, MEMORY[0x1E0CB2358]);
  v44 = v55;
  v45 = v41;
  v46 = v56;
  sub_1BC62C08C();
  sub_1BC358494(v43, (uint64_t)&qword_1EF435F98, (uint64_t)MEMORY[0x1E0CB22E8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v45, v62);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v19, v46);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC347F0C(&qword_1EF435FE0, (uint64_t (*)(uint64_t))sub_1BC53BE38, MEMORY[0x1E0C95BB0]);
  v47 = v59;
  v48 = sub_1BC62C0BC();

  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v47);
  *(_QWORD *)&v39[qword_1EF435EB0] = v48;
  swift_release();
  return v39;
}

uint64_t sub_1BC5379EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - v5;
  sub_1BC34B508(0, &qword_1EF435FE8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v22 - v10;
  sub_1BC53BF48();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCF37A4](a2 + 16);
  if (result)
  {
    v19 = (char *)result;
    if (a1)
    {
      swift_retain();
      sub_1BC62AF4C();
      v23 = v14;
      swift_release();
      swift_beginAccess();
      sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4968, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96198]);
      sub_1BC62BF9C();
      swift_endAccess();
      swift_release();
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
      v24 = (id)sub_1BC62CC74();
      v20 = sub_1BC62CC38();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
      sub_1BC53C020();
      sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
      sub_1BC62C080();
      sub_1BC358494((uint64_t)v6, (uint64_t)&qword_1ED6A4DF0, (uint64_t)MEMORY[0x1E0DEF868], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      swift_allocObject();
      swift_beginAccess();
      v21 = (void *)MEMORY[0x1BCCF37A4](v17);
      swift_unknownObjectWeakInit();

      sub_1BC347F0C(&qword_1EF436000, (uint64_t (*)(uint64_t))sub_1BC53BF48, MEMORY[0x1E0C95CB8]);
      a1 = sub_1BC62C0BC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v13);
    }
    *(_QWORD *)&v19[qword_1EF435EA8] = a1;

    return swift_release();
  }
  return result;
}

void sub_1BC537D40(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCF37A4](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1BC538CC8(v2);

  }
}

void sub_1BC537D98(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (char *)MEMORY[0x1BCCF37A4](v3);
  if (v4)
  {
    v5 = v4;
    if (*(_QWORD *)&v4[qword_1EF435E60])
    {

    }
    else
    {
      v6 = *(void **)&v4[qword_1EF435EB8];
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v7, sel_setHidden_, objc_msgSend(v2, sel_isSharingToProvider) ^ 1);

      }
      swift_retain();
      sub_1BC4580B4(v2);

      swift_release();
    }
  }
}

void sub_1BC537E6C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BC53B438();
}

id sub_1BC537E90()
{
  char *v0;
  uint64_t v1;
  id result;
  void *v3;
  int v4;
  void *v5;
  char **v6;
  id v7;
  objc_super v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)&v0[qword_1EF435E90];
  v10 = type metadata accessor for ClinicalAccountDetailsDataSourceProvider();
  v11 = sub_1BC347F0C(&qword_1EF435F70, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsDataSourceProvider, (uint64_t)&unk_1BC64123C);
  v9 = v1;
  swift_retain();
  sub_1BC62B7E0();
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ClinicalAccountDetailsViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    v3 = result;
    v4 = v0[qword_1EF435E98];
    v5 = (void *)objc_opt_self();
    v6 = &selRef_systemBackgroundColor;
    if (!v4)
      v6 = &selRef_systemGroupedBackgroundColor;
    v7 = objc_msgSend(v5, *v6);
    objc_msgSend(v3, sel_setBackgroundColor_, v7);

    return (id)sub_1BC537FA8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC537FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  id v26;
  uint64_t v27;

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  sub_1BC35891C(0, (unint64_t *)&qword_1EF429540, (void (*)(uint64_t))sub_1BC3583FC, (void (*)(void))sub_1BC358478);
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  if (qword_1ED6A4878 != -1)
    swift_once();
  v8 = qword_1ED6A54F0;
  v9 = objc_msgSend(*(id *)(v0 + qword_1EF435E78), sel_healthStore);
  v10 = objc_msgSend(v9, sel_profileIdentifier);

  v26 = *(id *)(v8 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v11);
  *(&v22 - 2) = v8;
  *(&v22 - 1) = (uint64_t)v10;
  sub_1BC62AA6C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  type metadata accessor for AccountStateProvider();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4B90, v12, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();

  swift_release();
  v13 = *(_QWORD *)(v27 + 24);
  swift_retain();
  swift_release();
  v27 = v13;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  v26 = (id)sub_1BC62CC74();
  v14 = sub_1BC62CC38();
  v15 = MEMORY[0x1E0DEF868];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_1BC3583FC();
  sub_1BC358478();
  sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  sub_1BC62C080();
  sub_1BC358494((uint64_t)v4, (uint64_t)&qword_1ED6A4DF0, (uint64_t)v15, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);

  swift_release();
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17 = swift_allocObject();
  v18 = ObjectType;
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v18;
  sub_1BC358A68((unint64_t *)&unk_1EF429558, (unint64_t *)&qword_1EF429540, (void (*)(uint64_t))sub_1BC3583FC, (void (*)(void))sub_1BC358478);
  v19 = v24;
  v20 = sub_1BC62C0BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v19);
  *(_QWORD *)(v1 + qword_1EF435ED0) = v20;
  return swift_release();
}

void sub_1BC538360(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC537E90();

}

id sub_1BC538394(char a1)
{
  char *v1;
  id result;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ClinicalAccountDetailsViewController();
  result = objc_msgSendSuper2(&v4, sel_viewDidAppear_, a1 & 1);
  if (*(_QWORD *)(*(_QWORD *)&v1[qword_1EF435E90] + 80))
  {
    swift_retain();
    sub_1BC62AF4C();
    swift_release();
    sub_1BC3F5D0C(1);
    return (id)swift_release();
  }
  return result;
}

void sub_1BC538428(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1BC538394(a3);

}

void sub_1BC538468(char a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  unsigned int v8;
  objc_super v9;

  v2 = v1;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for ClinicalAccountDetailsViewController();
  objc_msgSendSuper2(&v9, sel_viewWillDisappear_, a1 & 1);
  v4 = *(_QWORD *)&v1[qword_1EF435EA0 + 8];
  if (v4)
  {
    v5 = *(_QWORD *)&v1[qword_1EF435EA0];
    if ((objc_msgSend(v2, sel_isMovingFromParentViewController) & 1) != 0
      || (objc_msgSend(v2, sel_isBeingDismissed) & 1) != 0
      || (v6 = objc_msgSend(v2, sel_navigationController)) != 0
      && (v7 = v6, v8 = objc_msgSend(v6, sel_isBeingDismissed), v7, v8))
    {
      type metadata accessor for HealthRecordsViewRouter();
      static HealthRecordsViewRouter.navigateBack(to:)(v5, v4);
    }
  }
}

void sub_1BC538548(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1BC538468(a3);

}

void sub_1BC538588()
{
  void *v0;
  void *v1;
  void (*v2)(void);
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;

  v1 = v0;
  sub_1BC62B7EC();
  v2 = (void (*)(void))sub_1BC62B7F8();
  v2();
  v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = v3;
  type metadata accessor for TextItemCell();
  sub_1BC347F0C(&qword_1EF429AF8, (uint64_t (*)(uint64_t))type metadata accessor for TextItemCell, (uint64_t)&protocol conformance descriptor for TextItemCell);
  sub_1BC62CB48();

  v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = v5;
  type metadata accessor for AccountActionCell();
  sub_1BC347F0C(&qword_1EF435F78, (uint64_t (*)(uint64_t))type metadata accessor for AccountActionCell, (uint64_t)&unk_1BC64C568);
  sub_1BC62CB48();

  v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = v7;
  type metadata accessor for AccountUpgradeCell();
  sub_1BC347F0C(&qword_1EF42A078, (uint64_t (*)(uint64_t))type metadata accessor for AccountUpgradeCell, (uint64_t)&unk_1BC641D54);
  sub_1BC62CB48();

  v9 = objc_msgSend(v1, sel_collectionView);
  if (!v9)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v10 = v9;
  type metadata accessor for TitleSubtitleDetailCell();
  sub_1BC347F0C(&qword_1EF42E2B0, (uint64_t (*)(uint64_t))type metadata accessor for TitleSubtitleDetailCell, (uint64_t)&unk_1BC63D9F0);
  sub_1BC62CB48();

  v11 = objc_msgSend(v1, sel_collectionView);
  if (!v11)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = v11;
  type metadata accessor for TitleSubtitleDetailSpinnerCell();
  sub_1BC347F0C(&qword_1EF42E2B8, (uint64_t (*)(uint64_t))type metadata accessor for TitleSubtitleDetailSpinnerCell, (uint64_t)&unk_1BC63D960);
  sub_1BC62CB48();

  v13 = objc_msgSend(v1, sel_collectionView);
  if (!v13)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v14 = v13;
  type metadata accessor for AccountSourceCell();
  sub_1BC347F0C(&qword_1EF435F80, (uint64_t (*)(uint64_t))type metadata accessor for AccountSourceCell, (uint64_t)&unk_1BC64AE50);
  sub_1BC62CB48();

  v15 = objc_msgSend(v1, sel_collectionView);
  if (!v15)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v16 = v15;
  type metadata accessor for TopAlignedIconListCell();
  sub_1BC347F0C((unint64_t *)&qword_1EF435F88, (uint64_t (*)(uint64_t))type metadata accessor for TopAlignedIconListCell, (uint64_t)&unk_1BC648B58);
  sub_1BC62CB48();

  v17 = objc_msgSend(v1, sel_collectionView);
  if (!v17)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v18 = v17;
  type metadata accessor for UploadNewDataCell();
  sub_1BC347F0C(&qword_1EF435F90, (uint64_t (*)(uint64_t))type metadata accessor for UploadNewDataCell, (uint64_t)&unk_1BC649C7C);
  sub_1BC62CB48();

  v19 = objc_msgSend(v1, sel_collectionView);
  if (!v19)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v20 = v19;
  sub_1BC62B60C();
  sub_1BC62CB54();

  v21 = objc_msgSend(v1, sel_collectionView);
  if (!v21)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v22 = v21;
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  sub_1BC347F0C((unint64_t *)&qword_1EF4299A8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell, (uint64_t)&protocol conformance descriptor for ClinicalSharingSelectableAuthorizationCategoryCell);
  sub_1BC62CB48();

  v23 = objc_msgSend(v1, sel_collectionView);
  if (!v23)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v24 = v23;
  sub_1BC62B408();
  sub_1BC62CB60();

  v25 = objc_msgSend(v1, sel_collectionView);
  if (!v25)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v26 = v25;
  sub_1BC62B714();
  sub_1BC62CB60();

  v27 = objc_msgSend(v1, sel_collectionView);
  if (v27)
  {
    sub_1BC62AF10();
    sub_1BC62CB48();

    return;
  }
LABEL_27:
  __break(1u);
}

id sub_1BC538A00()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_didTapDone_);
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A53C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v2 + 32) = sub_1BC62C680();
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = 0x746E756F636341;
  *(_QWORD *)(v2 + 56) = 0xE700000000000000;
  *(_QWORD *)(v2 + 64) = 1701736260;
  *(_QWORD *)(v2 + 72) = 0xE400000000000000;
  v4 = v1;
  v5 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v6 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v6);
  v7 = *(void **)(v0 + qword_1EF435EC0);
  *(_QWORD *)(v0 + qword_1EF435EC0) = v4;
  v8 = v4;

  return v8;
}

void sub_1BC538B40()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  unsigned int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v1 = v0;
  v0[qword_1EF435EC8] = 1;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_didTapCancel_);
  v3 = qword_1EF435EB8;
  v4 = *(void **)&v0[qword_1EF435EB8];
  *(_QWORD *)&v0[qword_1EF435EB8] = v2;

  v5 = *(void **)&v0[v3];
  if (v5)
  {
    objc_msgSend(v5, sel_setEnabled_, 0);
    v6 = *(void **)&v0[v3];
    if (v6)
    {
      v7 = v6;
      swift_retain();
      sub_1BC62BF0C();
      swift_release();
      v8 = objc_msgSend(v13, sel_isSharingToProvider);

      objc_msgSend(v7, sel_setHidden_, v8 ^ 1);
    }
  }
  v9 = objc_msgSend(v0, sel_navigationItem);
  v10 = *(id *)&v1[v3];
  objc_msgSend(v9, sel_setLeftBarButtonItem_, v10);

  v11 = objc_msgSend(v1, sel_navigationItem);
  v12 = sub_1BC538A00();
  objc_msgSend(v11, sel_setRightBarButtonItem_, v12);

}

void sub_1BC538CC8(char a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  unsigned int v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;

  if (v1[qword_1EF435EC8] == 1)
  {
    v3 = qword_1EF435EB8;
    objc_msgSend(*(id *)&v1[qword_1EF435EB8], sel_setEnabled_, a1 & 1);
    v4 = *(void **)&v1[v3];
    if (v4)
    {
      v5 = v4;
      swift_retain();
      sub_1BC62BF0C();
      swift_release();
      v6 = objc_msgSend(v15, sel_isSharingToProvider);

      objc_msgSend(v5, sel_setHidden_, v6 ^ 1);
    }
  }
  else
  {
    v7 = objc_msgSend(v1, sel_navigationItem);
    v8 = v7;
    if ((a1 & 1) != 0)
    {
      if (qword_1ED6A4888 != -1)
        swift_once();
      v9 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v10 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setBackButtonTitle_, v10, 0xE000000000000000);

      v14 = objc_msgSend(v1, sel_navigationItem);
      v11 = *(void **)&v1[qword_1EF435EC0];
      if (v11)
      {
        v12 = *(id *)&v1[qword_1EF435EC0];
      }
      else
      {
        v12 = sub_1BC538A00();
        v11 = 0;
      }
      v13 = v11;
      objc_msgSend(v14, sel_setRightBarButtonItem_, v12);

    }
    else
    {
      objc_msgSend(v7, sel_setBackButtonTitle_, 0);

      v14 = objc_msgSend(v1, sel_navigationItem);
      objc_msgSend(v14, sel_setRightBarButtonItem_, 0);
    }

  }
}

uint64_t sub_1BC538F3C(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  uint64_t v6;
  _OWORD v8[2];
  _OWORD v9[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_1BC62D088();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    v5 = a1;
  }
  memset(v8, 0, sizeof(v8));
  sub_1BC5390AC();
  v6 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BC358494((uint64_t)v8, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);

  return sub_1BC358494((uint64_t)v9, (uint64_t)&qword_1ED6A4840, v6, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
}

uint64_t sub_1BC538FF0()
{
  uint64_t v0;
  _OWORD v2[2];

  if (*(_QWORD *)(*(_QWORD *)(v0 + qword_1EF435E90) + 80))
  {
    swift_retain();
    sub_1BC62AF4C();
    swift_release();
    sub_1BC3F7DD0();
    swift_release();
  }
  memset(v2, 0, sizeof(v2));
  sub_1BC5390AC();
  return sub_1BC358494((uint64_t)v2, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
}

uint64_t sub_1BC5390A0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC539318(a1, a2, a3, (void (*)(id))sub_1BC538FF0);
}

void sub_1BC5390AC()
{
  void *v0;
  id v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  char v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  id v22;

  v1 = objc_msgSend(v0, sel_navigationController);
  if (v1)
  {
    v22 = v1;
    v2 = objc_msgSend(v1, sel_viewControllers);
    sub_1BC34B6A0(0, &qword_1EF429570);
    v3 = sub_1BC62C878();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v4 == 1
      && (v5 = objc_msgSend(v22, sel_topViewController)) != 0
      && (v6 = v5,
          v7 = v0,
          v8 = sub_1BC62CEB4(),
          v7,
          v7,
          v6,
          (v8 & 1) != 0))
    {
      objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
    else
    {
      v9 = objc_msgSend(v22, sel_topViewController);
      if (v9)
      {
        v10 = v9;
        v11 = v0;
        v12 = sub_1BC62CEB4();

        if ((v12 & 1) != 0)
        {
          v13 = objc_msgSend(v22, sel_popViewControllerAnimated_, 1);

          v14 = v13;
LABEL_18:

          return;
        }
      }
      v15 = objc_msgSend(v0, sel_presentingViewController);
      if (v15)
      {
        v16 = v15;
        v17 = objc_msgSend(v15, sel_presentedViewController);
        if (v17)
        {
          v18 = v17;
          v19 = v0;
          v20 = v18;
          v21 = sub_1BC62CEB4();

          if ((v21 & 1) != 0)
            objc_msgSend(v19, sel_dismissViewControllerAnimated_completion_, 1, 0);
        }

      }
    }
    v14 = v22;
    goto LABEL_18;
  }
}

uint64_t sub_1BC53930C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC539318(a1, a2, a3, (void (*)(id))sub_1BC5390AC);
}

uint64_t sub_1BC539318(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  id v6;
  id v7;
  _OWORD v9[2];

  if (a3)
  {
    v6 = a1;
    swift_unknownObjectRetain();
    sub_1BC62D088();
    v7 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    v7 = a1;
  }
  a4(v7);

  return sub_1BC358494((uint64_t)v9, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
}

id sub_1BC5393A8(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  void (*v21)(char *, char *, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  char v25;
  id v26;
  id v27;
  uint64_t v28;

  sub_1BC357158(0, &qword_1EF42FD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2020], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - v6;
  v8 = sub_1BC62BC18();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  swift_beginAccess();
  v18 = (void *)MEMORY[0x1BCCF37A4](a2 + 16);
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_6;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, sel__bridgedConfigurationState);

  sub_1BC62BC0C();
  v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v21(v7, v14, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_6:
    sub_1BC358494((uint64_t)v7, (uint64_t)&qword_1EF42FD80, (uint64_t)MEMORY[0x1E0DC2020], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC357158);
    return objc_msgSend((id)objc_opt_self(), sel_clearColor);
  }
  v21(v17, v7, v8);
  v22 = sub_1BC62BBDC();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v17, v8);
  if ((v22 & 1) != 0)
  {
    v23 = *(void (**)(char *, uint64_t))(v9 + 8);
    v23(v11, v8);
  }
  else
  {
    v25 = sub_1BC62BBE8();
    v23 = *(void (**)(char *, uint64_t))(v9 + 8);
    v23(v11, v8);
    if ((v25 & 1) == 0)
    {
      v26 = objc_msgSend((id)objc_opt_self(), *a3);
      goto LABEL_10;
    }
  }
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
  v26 = (id)sub_1BC62CE3C();
LABEL_10:
  v27 = v26;
  v23(v17, v8);
  return v27;
}

uint64_t sub_1BC539674(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v7 = sub_1BC62A970();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v11 = a3;
  v12 = a4;
  v13 = a1;
  sub_1BC53B4F4();

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1BC53973C(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  __int128 *v5;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[40];

  v2 = (void *)sub_1BC62A928();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_1BC62A928();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1BC62B7C8();
    sub_1BC62B4EC();
    sub_1BC62B060();
    swift_release();
    sub_1BC34E674((uint64_t)v11, (uint64_t)v8);
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    sub_1BC35817C(0, &qword_1EF429AE0);
    if (swift_dynamicCast())
    {
      v5 = v6;
LABEL_6:
      sub_1BC34E718(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
      sub_1BC62B1BC();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      return;
    }
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1BC365820((uint64_t)v6);
    *(_QWORD *)&v6[0] = v4;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429AF0);
    v4 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v8;
      goto LABEL_6;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_1BC365820((uint64_t)v8);
  }
}

uint64_t sub_1BC539934(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC62A970();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v9 = a3;
  v10 = a1;
  sub_1BC53973C(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC5399E4(void *a1)
{
  void *v2;
  id v3;
  _BOOL8 v4;
  uint64_t v5;
  id v7[5];
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;

  sub_1BC62B7C8();
  sub_1BC62B4EC();
  sub_1BC62B060();
  swift_release();
  v2 = (void *)sub_1BC62A928();
  v3 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v2);

  sub_1BC34E718(&v11, (uint64_t)&v8);
  sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
  sub_1BC35817C(0, &qword_1EF429AE0);
  if (swift_dynamicCast())
  {

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
    return 1;
  }
  else
  {
    if (v3 && (v7[0] = v3, sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429AF0), swift_dynamicCast()))
    {
      v5 = *((_QWORD *)&v9 + 1);
    }
    else
    {
      v5 = 0;
      v10 = 0;
      v8 = 0u;
      v9 = 0u;
    }
    v4 = v5 != 0;
    sub_1BC365820((uint64_t)&v8);
  }
  return v4;
}

uint64_t sub_1BC539B50(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC62A970();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v9 = a3;
  v10 = a1;
  LOBYTE(a1) = sub_1BC5399E4(v9);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a1 & 1;
}

void sub_1BC539C08()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC539C34(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC539C64()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

id sub_1BC539D44()
{
  return sub_1BC3D6614(0, type metadata accessor for ClinicalAccountDetailsViewController);
}

uint64_t sub_1BC539D54(uint64_t a1)
{

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1BC539E40()
{
  return type metadata accessor for ClinicalAccountDetailsViewController();
}

void sub_1BC539E48(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  NSObject *v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  void (*v50)(_BYTE *, uint64_t);
  char *v51;
  id v52;
  id v53;
  _BYTE v54[12];
  int v55;
  _BYTE *v56;
  os_log_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;

  v6 = sub_1BC62A7B4();
  v64 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = &v54[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v54[-v10];
  v12 = sub_1BC62BB34();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v54[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = *(void **)a1;
  v16 = *(void **)(a1 + 8);
  v63 = *(void **)(a1 + 16);
  swift_beginAccess();
  v18 = (void *)MEMORY[0x1BCCF37A4](a2 + 16);
  if (v18)
  {
    if (v17)
    {
      v62 = v18;
      v19 = v17;
      v60 = v16;
      v20 = v16;
      v21 = v17;
      v22 = v20;
      sub_1BC62BAF8();
      v23 = v19;
      v24 = v22;
      v25 = v23;
      v26 = v24;
      v27 = sub_1BC62BB28();
      v28 = sub_1BC62CADC();
      v29 = v28;
      v30 = os_log_type_enabled(v27, v28);
      v61 = v21;
      if (v30)
      {
        v31 = swift_slowAlloc();
        v57 = v27;
        v32 = v31;
        v58 = swift_slowAlloc();
        v66 = v58;
        v67 = a3;
        *(_DWORD *)v32 = 136446466;
        v56 = (_BYTE *)(v32 + 4);
        swift_getMetatypeMetadata();
        v59 = v26;
        v33 = sub_1BC62C6E0();
        v67 = (id)sub_1BC4991F0(v33, v34, &v66);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2050;
        v56 = v8;
        v35 = v60;
        v55 = v29;
        v36 = v63;
        sub_1BC3584E4(v21, v60);
        v67 = v36;
        v26 = v59;
        sub_1BC62CFF8();
        sub_1BC3584E4(v21, v35);
        v37 = v57;
        _os_log_impl(&dword_1BC30A000, v57, (os_log_type_t)v55, "[%{public}s]: account state did change (changeType: %{public}ld)", (uint8_t *)v32, 0x16u);
        v38 = v58;
        swift_arrayDestroy();
        v39 = v38;
        v40 = v36;
        MEMORY[0x1BCCF36A8](v39, -1, -1);
        MEMORY[0x1BCCF36A8](v32, -1, -1);

        (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
        v41 = v35;
        v8 = v56;
      }
      else
      {
        v42 = v27;
        v43 = v60;
        v40 = v63;
        sub_1BC3584E4(v21, v60);
        sub_1BC3584E4(v21, v43);

        (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
        v41 = v43;
      }
      v44 = v26;
      v45 = objc_msgSend(v26, sel_identifier);
      sub_1BC62A79C();

      v46 = v62;
      swift_retain();
      sub_1BC62BF0C();
      swift_release();
      v47 = v67;
      v48 = objc_msgSend(v67, sel_identifier);

      sub_1BC62A79C();
      LOBYTE(v47) = sub_1BC62A790();
      v49 = v65;
      v50 = *(void (**)(_BYTE *, uint64_t))(v64 + 8);
      v50(v8, v65);
      v50(v11, v49);
      if ((v47 & 1) != 0)
      {
        if (v40 == (void *)3)
        {
          v51 = (char *)v62;
          sub_1BC53B878(0, v51, v51);

          sub_1BC3584E4(v61, v41);
        }
        else
        {
          v52 = v62;
          v67 = v44;
          v68 = v40;
          swift_retain();
          v53 = v44;
          sub_1BC62BF00();
          swift_release();
          sub_1BC3584E4(v61, v41);

        }
      }
      else
      {

        sub_1BC3584E4(v61, v41);
      }
    }
    else
    {

    }
  }
}

void sub_1BC53A2BC()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *ObjCClassFromMetadata;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  char **v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  unsigned __int8 v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  _OWORD v41[2];

  v1 = (unint64_t)v0;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v2).n128_u64[0];
  ObjCClassFromMetadata = (char *)&v39 - v4;
  v6 = objc_msgSend(v0, sel_navigationController, v3);
  if (!v6)
    return;
  v40 = v6;
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (!v8)
  {
    sub_1BC62C680();
    goto LABEL_11;
  }
  v9 = sub_1BC62C680();
  v11 = v10;

  v12 = sub_1BC62C680();
  if (!v11)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v9 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  v15 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_12:
    memset(v41, 0, sizeof(v41));
    sub_1BC5390AC();

    sub_1BC358494((uint64_t)v41, (uint64_t)&qword_1ED6A4840, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC34B508);
    return;
  }
LABEL_15:
  v16 = &selRef_viewIsAppearing_;
  v17 = objc_msgSend(v40, sel_viewControllers);
  sub_1BC34B6A0(0, &qword_1EF429570);
  v18 = sub_1BC62C878();

  if (v18 >> 62)
    goto LABEL_38;
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    if (v19 == 1)
      break;
    v26 = objc_msgSend(v40, sel_topViewController);
    if (!v26
      || (v27 = v26,
          v28 = (id)v1,
          v29 = sub_1BC62CEB4(),
          v28,
          v28,
          v27,
          (v29 & 1) == 0))
    {
      v38 = objc_msgSend((id)v1, sel_presentingViewController);

      if (v38)
        objc_msgSend((id)v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
      goto LABEL_36;
    }
    v30 = objc_msgSend(v40, v16[18]);
    v1 = sub_1BC62C878();

    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      v31 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (!v31)
      {
LABEL_31:
        swift_bridgeObjectRelease();
        v37 = objc_msgSend(v40, sel_popViewControllerAnimated_, 1);
LABEL_35:

        goto LABEL_36;
      }
    }
    else
    {
      v31 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v31)
        goto LABEL_31;
    }
    type metadata accessor for MedicalRecordTimelineViewController();
    ObjCClassFromMetadata = (char *)swift_getObjCClassFromMetadata();
    v16 = (char **)(v1 & 0xC000000000000001);
    v32 = 4;
    while (1)
    {
      v33 = v16 ? (id)MEMORY[0x1BCCF24CC](v32 - 4, v1) : *(id *)(v1 + 8 * v32);
      v34 = v33;
      v35 = v32 - 3;
      if (__OFADD__(v32 - 4, 1))
        break;
      v36 = objc_msgSend(v33, sel_isKindOfClass_, ObjCClassFromMetadata);

      if ((v36 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v37 = objc_msgSend(v40, sel_popToRootViewControllerAnimated_, 1);
        goto LABEL_35;
      }
      ++v32;
      if (v35 == v31)
        goto LABEL_31;
    }
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    v19 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v40, sel_dismissViewControllerAnimated_completion_, 1, 0);
  v20 = objc_msgSend((id)v1, sel_traitCollection);
  v21 = objc_msgSend(v20, sel_horizontalSizeClass);

  if (v21 == (id)2)
  {
    v22 = sub_1BC62C95C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(ObjCClassFromMetadata, 1, 1, v22);
    sub_1BC62C944();
    v23 = sub_1BC62C938();
    v24 = swift_allocObject();
    v25 = MEMORY[0x1E0DF06E8];
    *(_QWORD *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 24) = v25;
    sub_1BC5C2784((uint64_t)ObjCClassFromMetadata, (uint64_t)&unk_1EF435F60, v24);

    swift_release();
    return;
  }
LABEL_36:

}

void sub_1BC53A7C0(void *a1, void (*a2)(_QWORD), uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  uint64_t v21;
  void *v22;
  double v23;
  double v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(_QWORD);
  void *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  id v33;
  uint64_t (*v34)(uint64_t);
  char *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  void (*v40)(void *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD);
  void *v49;
  uint64_t v50;
  _QWORD aBlock[6];

  v4 = (uint64_t)v3;
  v49 = a1;
  v50 = a3;
  v48 = a2;
  v5 = sub_1BC62C47C();
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  MEMORY[0x1E0C80A78](v5);
  v45 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62C4AC();
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1BC62C4C4();
  v10 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v41 - v14;
  v16 = sub_1BC62C4D0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v19 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DEF740], v16);
  v20 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    v21 = qword_1EF435E60;
    v22 = *(void **)&v3[qword_1EF435E60];
    if (v22)
    {
      if (!*(_QWORD *)&v3[qword_1EF435E68])
        goto LABEL_8;
      objc_msgSend(*(id *)&v3[qword_1EF435E68], sel_timeIntervalSinceNow);
      v24 = v23;
      if (v23 > 0.01)
      {
        v41 = sub_1BC62CC74();
        sub_1BC62C4B8();
        MEMORY[0x1BCCF17B8](v12, fmin(v24, 1.0));
        v25 = *(void (**)(char *, uint64_t))(v10 + 8);
        v26 = v42;
        v25(v12, v42);
        v27 = (_QWORD *)swift_allocObject();
        v28 = v48;
        v29 = v49;
        v27[2] = v3;
        v27[3] = v29;
        v30 = v50;
        v27[4] = v28;
        v27[5] = v30;
        aBlock[4] = sub_1BC53B394;
        aBlock[5] = v27;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BC39BE70;
        aBlock[3] = &block_descriptor_54;
        v31 = _Block_copy(aBlock);
        v32 = v3;
        v33 = v29;
        swift_retain();
        swift_release();
        sub_1BC62C494();
        aBlock[0] = MEMORY[0x1E0DEE9D8];
        v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
        sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC35811C();
        v35 = v45;
        v36 = v47;
        sub_1BC62D0A0();
        v37 = (void *)v41;
        MEMORY[0x1BCCF1EFC](v15, v9, v35, v31);
        _Block_release(v31);

        (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v36);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v44);
        v25(v15, v26);
LABEL_10:
        sub_1BC53AF8C(v4);
        return;
      }
      v22 = *(void **)&v3[v21];
      if (!v22)
      {
        v38 = 0;
      }
      else
      {
LABEL_8:
        objc_msgSend(v22, sel_removeFromSuperview);
        v38 = *(void **)&v3[v21];
      }
      v39 = v49;
      v40 = (void (*)(void *))v48;
      *(_QWORD *)&v3[v21] = 0;

      v40(v39);
      goto LABEL_10;
    }
    v48(v49);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1BC53ABA8()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_1BC62C944();
  v0[3] = sub_1BC62C938();
  type metadata accessor for HealthRecordsViewRouter();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_1BC3917E8;
  return sub_1BC5B9C78(0xD000000000000018, 0x80000001BC662B60);
}

void sub_1BC53AC28()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(*(_QWORD *)(v0 + qword_1EF435E90) + 80))
  {
    swift_retain();
    v1 = sub_1BC62AF4C();
    swift_release();
    v2 = (_QWORD *)(v1 + qword_1EF42DB10);
    swift_beginAccess();
    v3 = MEMORY[0x1E0DEE9D8];
    *v2 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v1 + qword_1EF42DB20);
    swift_beginAccess();
    v5 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(v4 + 16) = v3;
    swift_retain();
    sub_1BC5DCB08(v5);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_1BC53AD18(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  char *v16;
  void *v17;
  void *v18;
  char *v19;
  id v20;
  void *v21;
  char *v22;
  void *v23;
  void *v24;
  uint64_t v25;

  v3 = v2;
  v6 = sub_1BC62C4D0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v9 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = sub_1BC62C4F4();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D68]), sel_initWithTimeIntervalSinceNow_, 1.0);
  v12 = *(void **)&v3[qword_1EF435E68];
  *(_QWORD *)&v3[qword_1EF435E68] = v11;

  v13 = qword_1EF435E60;
  v14 = *(void **)&v3[qword_1EF435E60];
  if (v14)
    objc_msgSend(v14, sel_removeFromSuperview);
  v15 = objc_allocWithZone((Class)type metadata accessor for HRProgressHUD());
  swift_unknownObjectWeakInit();
  v16 = sub_1BC3CD9A0(0, 0);
  v17 = *(void **)&v3[v13];
  *(_QWORD *)&v3[v13] = v16;

  v18 = *(void **)&v3[v13];
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v3, sel_view);
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v19, sel_setAutoresizingMask_, 45);
      v22 = &v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_text];
      *(_QWORD *)v22 = a1;
      *((_QWORD *)v22 + 1) = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(void **)&v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel];
      if (*((_QWORD *)v22 + 1))
      {
        swift_bridgeObjectRetain();
        v24 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
      }
      else
      {
        v24 = 0;
      }
      objc_msgSend(v23, sel_setText_, v24);

      objc_msgSend(v19, sel_setNeedsLayout);
      objc_msgSend(v21, sel_addSubview_, v19);
      objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator], sel_startAnimating);

      return;
    }
LABEL_12:
    __break(1u);
  }
}

void sub_1BC53AF8C(uint64_t a1)
{
  void *v1;
  id v2;
  unsigned int v3;
  id v4;

  v1 = *(void **)(a1 + qword_1EF435EB8);
  if (v1)
  {
    v2 = v1;
    swift_retain();
    sub_1BC62BF0C();
    swift_release();
    v3 = objc_msgSend(v4, sel_isSharingToProvider);

    objc_msgSend(v2, sel_setHidden_, v3 ^ 1);
  }
  swift_retain();
  sub_1BC62BF0C();
  swift_release();
  sub_1BC4580B4(v4);

}

void sub_1BC53B080(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  id v6;
  char v7;
  void *v8;
  void *v9;
  objc_super v10;

  v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for HRProgressHUD();
  objc_msgSendSuper2(&v10, sel_willMoveToSuperview_, a1);
  v4 = objc_msgSend(v2, sel_superview);
  v5 = v4;
  if (a1)
  {
    if (v4)
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
      v6 = a1;
      v7 = sub_1BC62CEB4();

      if ((v7 & 1) != 0)
        return;
    }
  }
  else
  {
    if (!v4)
      return;

  }
  v8 = (void *)MEMORY[0x1BCCF37A4](&v2[OBJC_IVAR____TtC15HealthRecordsUI13HRProgressHUD_interactionDisabledWindow]);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_setUserInteractionEnabled_, 1);

  }
  swift_unknownObjectWeakAssign();
}

id sub_1BC53B1E0()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  char *v4;
  void *v5;
  void *v6;
  objc_super v8;

  v1 = objc_msgSend(v0, sel_superview);

  if (v1)
  {
    v2 = objc_msgSend(v0, sel_superview);
    v3 = objc_msgSend(v2, sel_window);

    v4 = &v0[OBJC_IVAR____TtC15HealthRecordsUI13HRProgressHUD_interactionDisabledWindow];
    swift_unknownObjectWeakAssign();

    v5 = (void *)MEMORY[0x1BCCF37A4](v4);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_setUserInteractionEnabled_, 0);

    }
  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for HRProgressHUD();
  return objc_msgSendSuper2(&v8, sel_didMoveToSuperview);
}

uint64_t sub_1BC53B344()
{
  return swift_unknownObjectWeakDestroy();
}

id sub_1BC53B354(uint64_t a1)
{
  return sub_1BC3D6614(a1, type metadata accessor for HRProgressHUD);
}

uint64_t type metadata accessor for HRProgressHUD()
{
  return objc_opt_self();
}

uint64_t block_copy_helper_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_53()
{
  return swift_release();
}

uint64_t sub_1BC53B3B0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC53B3D4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BC377F18;
  return sub_1BC53ABA8();
}

void sub_1BC53B438()
{
  _BYTE *v0;

  *(_QWORD *)&v0[qword_1EF435E60] = 0;
  *(_QWORD *)&v0[qword_1EF435E68] = 0;
  *(_QWORD *)&v0[qword_1EF435EA8] = 0;
  *(_QWORD *)&v0[qword_1EF435EB0] = 0;
  *(_QWORD *)&v0[qword_1EF435EB8] = 0;
  *(_QWORD *)&v0[qword_1EF435EC0] = 0;
  v0[qword_1EF435EC8] = 0;
  *(_QWORD *)&v0[qword_1EF435ED0] = 0;

  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC53B4F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - v4;
  sub_1BC357158(0, &qword_1EF435F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2628], v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - v7;
  v9 = sub_1BC62BC78();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  if (swift_dynamicCastClass() || (sub_1BC62AEEC(), (result = swift_dynamicCastClass()) != 0))
  {
    sub_1BC62BC6C();
    v14 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
    sub_1BC62BC3C();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1BC62BDC8();
    v15 = sub_1BC62BDBC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
    sub_1BC62BC54();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v12, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    MEMORY[0x1BCCF1FE0](v5);
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  if (*(_BYTE *)(v1 + qword_1EF435E98) == 1)
  {
    type metadata accessor for AccountSourceCell();
    result = swift_dynamicCastClass();
    if (!result)
    {
      sub_1BC62BC6C();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1BC62BDC8();
      v16 = sub_1BC62BDBC();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
      sub_1BC62BC54();
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v12, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
      MEMORY[0x1BCCF1FE0](v5);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  return result;
}

id sub_1BC53B7E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5393A8(a1, v1, (SEL *)&selRef_systemGroupedBackgroundColor);
}

id sub_1BC53B808(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5393A8(a1, v1, (SEL *)&selRef_secondarySystemGroupedBackgroundColor);
}

uint64_t sub_1BC53B828()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC53B84C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC53B870(uint64_t a1)
{
  uint64_t v1;

  sub_1BC539E48(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1BC53B878(void *a1, char *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  void *v29;
  char *v30;
  id v31;
  char *v32;
  uint64_t (*v33)(uint64_t);
  char *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  void *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[7];

  v40 = a1;
  v5 = sub_1BC62C47C();
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  MEMORY[0x1E0C80A78](v5);
  v46 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC62C4AC();
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1BC62C4C4();
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v41 = (char *)&v38 - v13;
  v14 = sub_1BC62C4D0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a3;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  a3;
  *v17 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  LOBYTE(a3) = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((a3 & 1) != 0)
  {
    v20 = qword_1EF435E60;
    v21 = *(void **)&a2[qword_1EF435E60];
    if (v21)
    {
      if (!*(_QWORD *)&a2[qword_1EF435E68])
        goto LABEL_7;
      objc_msgSend(*(id *)&a2[qword_1EF435E68], sel_timeIntervalSinceNow);
      v23 = v22;
      if (v22 > 0.01)
      {
        v38 = sub_1BC62CC74();
        sub_1BC62C4B8();
        v24 = v41;
        MEMORY[0x1BCCF17B8](v11, fmin(v23, 1.0));
        v39 = *(void (**)(char *, uint64_t))(v9 + 8);
        v25 = v11;
        v26 = v42;
        v39(v25, v42);
        v27 = (_QWORD *)swift_allocObject();
        v28 = v40;
        v27[2] = a2;
        v27[3] = v28;
        v27[4] = sub_1BC53BCBC;
        v27[5] = v18;
        aBlock[4] = sub_1BC53B394;
        aBlock[5] = v27;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BC39BE70;
        aBlock[3] = &block_descriptor_25;
        v29 = _Block_copy(aBlock);
        v30 = a2;
        v31 = v28;
        swift_retain();
        swift_release();
        v32 = v43;
        sub_1BC62C494();
        aBlock[0] = MEMORY[0x1E0DEE9D8];
        v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
        sub_1BC347F0C((unint64_t *)&qword_1ED6A5870, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1BC357158(0, (unint64_t *)&qword_1ED6A5890, v33, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC35811C();
        v34 = v46;
        v35 = v48;
        sub_1BC62D0A0();
        v36 = (void *)v38;
        MEMORY[0x1BCCF1EFC](v24, v32, v34, v29);
        _Block_release(v29);

        (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v35);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v45);
        v39(v24, v26);
LABEL_10:
        sub_1BC53AF8C((uint64_t)a2);
        return swift_release();
      }
      v21 = *(void **)&a2[v20];
      if (!v21)
      {
        v37 = 0;
      }
      else
      {
LABEL_7:
        objc_msgSend(v21, sel_removeFromSuperview);
        v37 = *(void **)&a2[v20];
      }
      *(_QWORD *)&a2[v20] = 0;

    }
    sub_1BC53A2BC();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC53BC98()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC53BCBC()
{
  sub_1BC53A2BC();
}

uint64_t objectdestroyTm_11()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC53BD14()
{
  uint64_t v0;

  sub_1BC53A7C0(*(void **)(v0 + 24), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1BC53BD3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF435FA8)
  {
    sub_1BC53BDA0();
    v0 = sub_1BC62BF18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF435FA8);
  }
}

void sub_1BC53BDA0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF435FB0)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1EF431480);
    type metadata accessor for HKClinicalAccountStateChangeType(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF435FB0);
  }
}

uint64_t sub_1BC53BE1C()
{
  return sub_1BC347F0C(&qword_1EF435FB8, (uint64_t (*)(uint64_t))sub_1BC53BD3C, MEMORY[0x1E0C95FB8]);
}

void sub_1BC53BE38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF435FC0)
  {
    sub_1BC35891C(255, &qword_1EF435FA0, (void (*)(uint64_t))sub_1BC53BD3C, (void (*)(void))sub_1BC53BE1C);
    sub_1BC34B6A0(255, &qword_1EF435FC8);
    sub_1BC358A68(&qword_1EF435FD0, &qword_1EF435FA0, (void (*)(uint64_t))sub_1BC53BD3C, (void (*)(void))sub_1BC53BE1C);
    sub_1BC35839C(&qword_1EF435FD8, &qword_1EF435FC8, 0x1E0C99E58, MEMORY[0x1E0CB2358]);
    v0 = sub_1BC62BE34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF435FC0);
  }
}

uint64_t sub_1BC53BF38(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC5379EC(a1, v1);
}

void sub_1BC53BF40(void **a1)
{
  uint64_t v1;

  sub_1BC537D98(a1, v1);
}

void sub_1BC53BF48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF435FF0)
  {
    sub_1BC34B508(255, &qword_1EF435FE8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC53C020();
    sub_1BC35839C((unint64_t *)&qword_1ED6A4E00, (unint64_t *)&qword_1ED6A58F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC62BE70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF435FF0);
  }
}

unint64_t sub_1BC53C020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF435FF8;
  if (!qword_1EF435FF8)
  {
    sub_1BC34B508(255, &qword_1EF435FE8, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&qword_1EF435FF8);
  }
  return result;
}

void sub_1BC53C080(char *a1)
{
  uint64_t v1;

  sub_1BC537D40(a1, v1);
}

id WeakNotificationObserver.__allocating_init(forName:object:scheduler:center:block:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v13 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(a3 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a3, v13);
  v16 = sub_1BC53C77C(a1, a2, v15, a4, a5, a6, v6, v13, v14);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return v16;
}

id WeakNotificationObserver.init(forName:object:scheduler:center:block:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v22;

  v13 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(a3 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a3, v13);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v19 + 16))(v18, v16);
  v20 = sub_1BC53C598(a1, a2, (uint64_t)v18, a4, a5, a6, v6, v13, v14);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return v20;
}

id WeakNotificationObserver.__deallocating_deinit()
{
  char *v0;
  void *v1;
  void *v2;
  objc_super v4;

  v1 = (void *)MEMORY[0x1BCCF37A4](&v0[OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_center]);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_removeObserver_, v0);

  }
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for WeakNotificationObserver();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1BC53C358()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = (void *)MEMORY[0x1BCCF37A4](v0 + OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_center);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_removeObserver_, v0);

  }
}

id WeakNotificationObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void WeakNotificationObserver.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC53C598(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8, uint64_t a9)
{
  uint64_t *boxed_opaque_existential_1;
  char *v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  _QWORD v33[3];
  uint64_t v34;
  objc_super v35;
  uint64_t v36[5];

  v36[3] = a8;
  v36[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1, a3, a8);
  swift_unknownObjectWeakInit();
  sub_1BC34E674((uint64_t)v36, (uint64_t)&a7[OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_scheduler]);
  v18 = &a7[OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_block];
  *(_QWORD *)v18 = a5;
  *((_QWORD *)v18 + 1) = a6;
  swift_unknownObjectWeakAssign();
  v35.receiver = a7;
  v35.super_class = (Class)type metadata accessor for WeakNotificationObserver();
  swift_retain();
  v19 = objc_msgSendSuper2(&v35, sel_init);
  sub_1BC39BE10(a2, (uint64_t)v33);
  v20 = v34;
  if (v34)
  {
    v21 = __swift_project_boxed_opaque_existential_1Tm(v33, v34);
    v22 = *(_QWORD *)(v20 - 8);
    v23 = MEMORY[0x1E0C80A78](v21);
    v25 = (char *)&v33[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v22 + 16))(v25, v23);
    v26 = v19;
    v27 = a1;
    v28 = sub_1BC62D568();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v20);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  }
  else
  {
    v29 = v19;
    v30 = a1;
    v28 = 0;
  }
  objc_msgSend(a4, sel_addObserver_selector_name_object_, v19, sel_didReceiveWithNotification_, a1, v28);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  sub_1BC39BD2C(a2);
  return v19;
}

id sub_1BC53C77C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a6;
  v15 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (char *)objc_allocWithZone((Class)type metadata accessor for WeakNotificationObserver());
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a3, a8);
  return sub_1BC53C598(a1, a2, (uint64_t)v17, a4, a5, v21, v18, a8, a9);
}

uint64_t type metadata accessor for WeakNotificationObserver()
{
  return objc_opt_self();
}

uint64_t method lookup function for WeakNotificationObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WeakNotificationObserver.__allocating_init(forName:object:scheduler:center:block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of WeakNotificationObserver.invalidate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t sub_1BC53C8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC62A364();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC53C918()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC62A364() - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + ((v1 + 32) & ~v1));
}

id static UIAlertController.basicAlertController(title:message:)()
{
  void *ObjCClassFromMetadata;
  void *v1;
  void *v2;
  id v3;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v1 = (void *)sub_1BC62C650();
  v2 = (void *)sub_1BC62C650();
  v3 = objc_msgSend(ObjCClassFromMetadata, sel_basicAlertControllerWithTitle_message_internalError_, v1, v2, 0);

  return v3;
}

id sub_1BC53C9F0(void *a1)
{
  void *v2;
  void *v3;
  id v4;

  sub_1BC62C680();
  sub_1BC62C680();
  v2 = (void *)sub_1BC62C650();
  v3 = (void *)sub_1BC62C650();
  v4 = objc_msgSend(a1, sel_basicAlertControllerWithTitle_message_internalError_, v2, v3, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v4;
}

id sub_1BC53CAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  if (a3)
  {
    v6 = sub_1BC62C680();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = sub_1BC62C680();
  v11 = v10;
  v12 = a5;
  v13 = _sSo17UIAlertControllerC15HealthRecordsUIE010basicAlertB05title7message13internalErrorABSSSg_SSs0K0_pSgtFZ_0(v6, v8, v9, v11, a5);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v13;
}

id _sSo17UIAlertControllerC15HealthRecordsUIE010basicAlertB05title7message13internalErrorABSSSg_SSs0K0_pSgtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v7;
  id v8;
  id result;
  void *v10;
  unsigned int v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;

  if (!a5)
  {
    swift_bridgeObjectRetain();
    if (a2)
      goto LABEL_7;
LABEL_9:
    v12 = 0;
    goto LABEL_10;
  }
  v7 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v8 = a5;
  result = objc_msgSend(v7, sel_sharedBehavior);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v10 = result;
  v11 = objc_msgSend(result, sel_isAppleInternalInstall);

  if (!v11)
  {

    if (a2)
      goto LABEL_7;
    goto LABEL_9;
  }
  sub_1BC62C764();
  swift_getErrorValue();
  sub_1BC62D610();
  sub_1BC62C764();
  swift_bridgeObjectRelease();

  if (!a2)
    goto LABEL_9;
LABEL_7:
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
LABEL_10:
  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v12, v13, 1);

  if (qword_1ED6A4888 != -1)
    swift_once();
  v15 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v16 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v16, 0, 0, 0xE000000000000000);

  objc_msgSend(v14, sel_addAction_, v17);
  return v14;
}

Swift::Int __swiftcall SettingsViewController.numberOfSections(in:)(UITableView *in)
{
  unint64_t v1;
  _QWORD *v2;
  Swift::Int v3;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_1BC41F2A8(v1);
  swift_bridgeObjectRelease();
  v3 = v2[2];
  swift_bridgeObjectRelease();
  return v3;
}

Swift::Int __swiftcall SettingsViewController.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  return sub_1BC53EB10(numberOfRowsInSection);
}

Swift::String_optional __swiftcall SettingsViewController.tableView(_:titleForHeaderInSection:)(UITableView *_, Swift::Int titleForHeaderInSection)
{
  char *v2;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  int v8;
  id v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  Swift::String_optional result;

  v5 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BC41F2A8(v6);
  swift_bridgeObjectRelease();
  if (titleForHeaderInSection < 0 || v7[2] <= titleForHeaderInSection)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    v9 = 0;
    goto LABEL_10;
  }
  v8 = *((unsigned __int8 *)v7 + titleForHeaderInSection + 32);
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v2, sel_tableView_numberOfRowsInSection_, _, titleForHeaderInSection);
  if (!v9)
  {
LABEL_10:
    v11 = 0;
    goto LABEL_13;
  }
  if (!v8)
  {
    v10 = *(_QWORD *)&v2[v5];
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      v12 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v12)
        goto LABEL_7;
    }
    else if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_7;
    }
    goto LABEL_9;
  }
LABEL_7:
  v9 = (id)sub_1BC41EECC(v8);
LABEL_13:
  result.value._object = v11;
  result.value._countAndFlagsBits = (uint64_t)v9;
  return result;
}

Swift::String_optional __swiftcall SettingsViewController.tableView(_:titleForFooterInSection:)(UITableView *_, Swift::Int titleForFooterInSection)
{
  uint64_t v2;
  void *v3;
  Swift::String_optional result;

  v2 = sub_1BC53EDC4(titleForFooterInSection);
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

id SettingsViewController.tableView(_:cellForRowAt:)()
{
  unint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BC41F2A8(v0);
  swift_bridgeObjectRelease();
  v2 = sub_1BC62A964();
  if ((v2 & 0x8000000000000000) == 0 && v2 < v1[2])
  {
    v3 = *((unsigned __int8 *)v1 + v2 + 32);
    swift_bridgeObjectRelease();
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BC62C650();
  v5 = (id)HKErrorTableViewCell();

  if (!v5)
  {
    __break(1u);
    JUMPOUT(0x1BC53D9CCLL);
  }
  return v5;
}

void sub_1BC53D9EC()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  objc_class *v34;
  char *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  objc_super v62;
  uint64_t v63;
  _QWORD v64[2];

  v1 = v0;
  if (v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] == 1)
  {
    v2 = objc_msgSend(v0, sel_tableView);
    if (v2)
    {
      v3 = v2;
      v4 = (void *)sub_1BC62C650();
      v5 = (void *)sub_1BC62A928();
      objc_msgSend(v3, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v4, v5);

      return;
    }
    __break(1u);
    goto LABEL_47;
  }
  v6 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts];
  if (!(v7 >> 62))
  {
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
LABEL_22:
    v29 = objc_msgSend(v1, sel_tableView);
    if (!v29)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v30 = v29;
    v31 = (void *)sub_1BC62C650();
    v32 = objc_msgSend(v30, sel_dequeueReusableCellWithIdentifier_, v31);

    if (v32)
    {
      type metadata accessor for OnboardingTableViewCell(0);
      if (swift_dynamicCastClass())
        return;

    }
    v33 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
    v34 = (objc_class *)type metadata accessor for OnboardingTableViewCell(0);
    v35 = (char *)objc_allocWithZone(v34);
    *(_QWORD *)&v35[qword_1EF43A140] = v33;
    v36 = v33;
    v37 = (void *)sub_1BC62C650();
    v62.receiver = v35;
    v62.super_class = v34;
    v38 = objc_msgSendSuper2(&v62, sel_initWithStyle_reuseIdentifier_, 0, v37);

    v39 = v38;
    sub_1BC60047C();

    return;
  }
  swift_bridgeObjectRetain();
  v28 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v28)
    goto LABEL_22;
LABEL_6:
  v8 = sub_1BC62A94C();
  v9 = v8;
  v10 = *(_QWORD *)&v1[v6];
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v40 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v9 != v40)
    {
LABEL_28:
      v41 = objc_msgSend(v1, sel_tableView);
      if (!v41)
      {
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      v42 = v41;
      v43 = (id)sub_1BC62C650();
      v44 = (void *)sub_1BC62A928();
      v45 = objc_msgSend(v42, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v43, v44);

      type metadata accessor for AccountTableViewCell();
      v46 = swift_dynamicCastClass();
      if (!v46)
      {

        v50 = (void *)sub_1BC62C650();
        v51 = (id)HKErrorTableViewCell();

        if (v51)
          return;
        __break(1u);
        goto LABEL_38;
      }
      v15 = (id)v46;
      v47 = sub_1BC62A94C();
      v48 = v47;
      v17 = *(_QWORD *)&v1[v6];
      if ((v17 & 0xC000000000000001) == 0)
      {
        if ((v47 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v47 < *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v43 = *(id *)(v17 + 8 * v47 + 32);
          goto LABEL_34;
        }
        __break(1u);
        goto LABEL_45;
      }
      swift_bridgeObjectRetain();
      v43 = (id)MEMORY[0x1BCCF24CC](v48, v17);
      swift_bridgeObjectRelease();
LABEL_34:
      if (*(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator])
      {
        swift_retain();
        v49 = sub_1BC50B4D0(v43);
        swift_release();
LABEL_39:
        v52 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile], sel_clinicalSourcesDataProvider);
        strcpy((char *)v64, "AccountCell.");
        BYTE5(v64[1]) = 0;
        HIWORD(v64[1]) = -5120;
        v63 = sub_1BC62A94C();
        sub_1BC62D52C();
        sub_1BC62C764();
        swift_bridgeObjectRelease();
        v54 = v64[0];
        v53 = v64[1];
        sub_1BC359F44();
        v55 = swift_allocObject();
        *(_OWORD *)(v55 + 16) = xmmword_1BC6395A0;
        *(_QWORD *)(v55 + 32) = 0xD000000000000015;
        *(_QWORD *)(v55 + 40) = 0x80000001BC650CE0;
        *(_QWORD *)(v55 + 48) = v54;
        *(_QWORD *)(v55 + 56) = v53;
        swift_bridgeObjectRetain();
        v56 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        v57 = (id)HKUIJoinStringsForAutomationIdentifier();

        if (!v57)
        {
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        v58 = sub_1BC62C680();
        v60 = v59;
        swift_bridgeObjectRelease();

        sub_1BC4F1B68(v43, v49, (uint64_t)v52, v58, v60, 0);
        swift_bridgeObjectRelease();

        return;
      }
LABEL_38:
      v49 = 0;
      goto LABEL_39;
    }
  }
  else if (v8 != *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_28;
  }
  if ((sub_1BC3EFF2C() & 1) == 0)
    goto LABEL_28;
  v11 = objc_msgSend(v1, sel_tableView);
  if (!v11)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = (void *)sub_1BC62C650();
  v14 = (void *)sub_1BC62A928();
  v15 = objc_msgSend(v12, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v13, v14);

  type metadata accessor for AddAccountTableViewCell();
  v16 = swift_dynamicCastClass();
  if (v16)
  {
    v17 = v16;
    v18 = *(_QWORD *)&v1[v6];
    if (!(v18 >> 62))
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      v20 = v15;
      goto LABEL_13;
    }
LABEL_45:
    v61 = v15;
    swift_bridgeObjectRetain();
    v19 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
LABEL_13:
    *(_BYTE *)(v17 + OBJC_IVAR____TtC15HealthRecordsUI23AddAccountTableViewCell_alignWithAccountTitle) = v19 != 0;
    v21 = objc_msgSend((id)v17, sel_imageView);
    v22 = v21;
    if (v19)
    {
      if (!v21)
        goto LABEL_19;
      v23 = objc_msgSend((id)objc_opt_self(), sel_hk_transparentInterfaceImageWithSize_, 36.0, 36.0);
      objc_msgSend(v22, sel_setImage_, v23);

      v22 = v23;
    }
    else
    {
      if (!v21)
        goto LABEL_19;
      objc_msgSend(v21, sel_setImage_, 0);
    }

LABEL_19:
    v24 = v15;
    v25 = (void *)sub_1BC62C86C();
    v26 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v26)
    {
      sub_1BC62C680();

      v27 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend((id)v17, sel_setAccessibilityIdentifier_, v27);

      return;
    }
    goto LABEL_51;
  }
}

void sub_1BC53E19C(uint64_t a1, unint64_t a2, char a3)
{
  char *v3;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;

  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    if (*(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken])
    {
      v6 = objc_msgSend(v3, sel_tableView);
      if (v6)
      {
        v7 = v6;
        v8 = (void *)sub_1BC62C650();
        v9 = (void *)sub_1BC62A928();
        objc_msgSend(v7, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v8, v9);

        return;
      }
      goto LABEL_29;
    }
    if (!(a2 >> 62))
    {
      v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  v10 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
LABEL_7:
  v11 = objc_msgSend(v3, sel_tableView);
  v12 = v11;
  if (v10)
  {
    if (!v11)
    {
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v13 = (void *)sub_1BC62C650();
    v14 = (void *)sub_1BC62A928();
    v15 = objc_msgSend(v12, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v13, v14);

    type metadata accessor for SourceTableViewCell();
    v16 = swift_dynamicCastClass();
    if (v16)
    {
      v17 = (char *)v16;
      v18 = sub_1BC62A94C();
      if ((a2 & 0xC000000000000001) == 0)
      {
        if ((v18 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v18 < *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v19 = *(id *)(a2 + 8 * v18 + 32);
          goto LABEL_14;
        }
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      v19 = (id)MEMORY[0x1BCCF24CC](v18, a2);
LABEL_14:
      v20 = *(void **)&v17[OBJC_IVAR___HRSourceTableViewCell_sourceModel];
      *(_QWORD *)&v17[OBJC_IVAR___HRSourceTableViewCell_sourceModel] = v19;
      v21 = v19;
      sub_1BC59FB84(v20);

      v22 = v15;
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      sub_1BC62C764();
      sub_1BC62A94C();
      sub_1BC62D52C();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      sub_1BC359F44();
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1BC6395A0;
      *(_QWORD *)(v23 + 32) = 0xD000000000000015;
      *(_QWORD *)(v23 + 40) = 0x80000001BC650CE0;
      *(_QWORD *)(v23 + 48) = 0;
      *(_QWORD *)(v23 + 56) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v24 = (void *)sub_1BC62C86C();
      swift_bridgeObjectRelease();
      v25 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (v25)
      {
        sub_1BC62C680();
        swift_bridgeObjectRelease();

        v26 = (void *)sub_1BC62C650();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_setAccessibilityIdentifier_, v26);

        return;
      }
      goto LABEL_31;
    }

    v36 = (void *)sub_1BC62C650();
    v37 = (id)HKErrorTableViewCell();

    if (!v37)
LABEL_33:
      __break(1u);
  }
  else
  {
    if (!v11)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v27 = (void *)sub_1BC62C650();
    v28 = (void *)sub_1BC62A928();
    v29 = objc_msgSend(v12, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v27, v28);

    v30 = objc_msgSend(v29, sel_textLabel);
    if (v30)
    {
      v31 = v30;
      sub_1BC42F438(0x5F535050415F4F4ELL, 0xEF574F48535F4F54, a3 & 1, MEMORY[0x1E0DEE9D8]);
      v32 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v31, sel_setText_, v32);

    }
    v33 = objc_msgSend(v29, sel_textLabel);
    if (v33)
    {
      v34 = v33;
      v35 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
      objc_msgSend(v34, sel_setTextColor_, v35);

    }
    objc_msgSend(v29, sel_setAccessoryType_, 0);
  }
}

char *SettingsViewController.tableView(_:willDisplay:forRowAt:)(uint64_t a1, void *a2)
{
  void *v2;
  id v4;
  id v5;
  char *result;

  sub_1BC62AEE0();
  if (swift_dynamicCastClass())
  {
    v4 = a2;
    v5 = v2;
    sub_1BC62AEC8();

  }
  type metadata accessor for LoadingTableViewCell();
  result = (char *)swift_dynamicCastClass();
  if (result)
    return (char *)objc_msgSend(*(id *)&result[OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner], sel_startAnimating);
  return result;
}

char *SettingsViewController.tableView(_:didEndDisplaying:forRowAt:)(uint64_t a1, void *a2)
{
  id v3;
  char *result;

  sub_1BC62AEE0();
  if (swift_dynamicCastClass())
  {
    v3 = a2;
    sub_1BC62AEC8();

  }
  type metadata accessor for LoadingTableViewCell();
  result = (char *)swift_dynamicCastClass();
  if (result)
    return (char *)objc_msgSend(*(id *)&result[OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner], sel_stopAnimating);
  return result;
}

uint64_t sub_1BC53EB10(uint64_t a1)
{
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC41F2A8(v2);
  swift_bridgeObjectRelease();
  if ((a1 & 0x8000000000000000) == 0 && v3[2] > a1)
  {
    v4 = *((unsigned __int8 *)v3 + a1 + 32);
    swift_bridgeObjectRelease();
    sub_1BC3EFF2C();
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1BC53EBD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  if (!objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    __break(1u);
    JUMPOUT(0x1BC53ECD8);
  }
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken))
  {
    v1 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels;
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels);
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      v3 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (!v3)
        goto LABEL_12;
    }
    else if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_12;
    }
    if (*(_QWORD *)(v0 + v1) >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1BC62D3B8();
      swift_bridgeObjectRelease();
    }
  }
LABEL_12:
  JUMPOUT(0x1BC53EBBCLL);
}

void sub_1BC53EC70()
{
  objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall);
  JUMPOUT(0x1BC53EBBCLL);
}

uint64_t sub_1BC53EDC4(uint64_t a1)
{
  unint64_t v2;
  _BYTE *v3;
  char v4;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC41F2A8(v2);
  swift_bridgeObjectRelease();
  if (a1 < 0 || *((_QWORD *)v3 + 2) <= a1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v4 = v3[a1 + 32];
    swift_bridgeObjectRelease();
    return sub_1BC41F0E0(v4);
  }
}

id sub_1BC53EE4C(id a1)
{
  unint64_t v2;
  char v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;

  v2 = sub_1BC62A94C();
  v3 = sub_1BC41F558(v2);
  if (v3 != 4)
  {
LABEL_4:
    v5 = v3;
    v6 = (void *)sub_1BC62C650();
    v7 = (void *)sub_1BC62A928();
    v8 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v6, v7);

    v9 = objc_msgSend(v8, sel_textLabel);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      objc_msgSend(v10, sel_setTextColor_, v11);

    }
    v12 = objc_msgSend(v8, sel_textLabel);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, sel_setTextAlignment_, 4);

    }
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, 0);
    __asm { BR              X10 }
  }
  v4 = (void *)sub_1BC62C650();
  a1 = (id)HKErrorTableViewCell();

  if (!a1)
  {
    __break(1u);
    goto LABEL_4;
  }
  return a1;
}

double sub_1BC53F250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  double v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v0 = sub_1BC62C680();
  v2 = v1;
  if (v0 == sub_1BC62C680() && v2 == v3)
  {
    v6 = 0.82;
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v6;
  }
  v5 = sub_1BC62D574();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    v8 = sub_1BC62C680();
    v10 = v9;
    if (v8 == sub_1BC62C680() && v10 == v11)
    {
      v6 = 0.88;
    }
    else
    {
      v13 = sub_1BC62D574();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        return 0.88;
      v14 = sub_1BC62C680();
      v16 = v15;
      if (v14 == sub_1BC62C680() && v16 == v17)
      {
        v6 = 0.94;
      }
      else
      {
        v18 = sub_1BC62D574();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          return 0.94;
        v19 = sub_1BC62C680();
        v21 = v20;
        if (v19 != sub_1BC62C680() || (v6 = 1.0, v21 != v22))
        {
          v23 = sub_1BC62D574();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = 1.0;
          if ((v23 & 1) != 0)
            return v6;
          v24 = sub_1BC62C680();
          v26 = v25;
          if (v24 == sub_1BC62C680() && v26 == v27)
          {
            v6 = 1.12;
          }
          else
          {
            v28 = sub_1BC62D574();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v28 & 1) != 0)
              return 1.12;
            v29 = sub_1BC62C680();
            v31 = v30;
            if (v29 == sub_1BC62C680() && v31 == v32)
            {
              v6 = 1.24;
            }
            else
            {
              v33 = sub_1BC62D574();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v33 & 1) != 0)
                return 1.24;
              v34 = sub_1BC62C680();
              v36 = v35;
              if (v34 == sub_1BC62C680() && v36 == v37)
              {
                v6 = 1.35;
              }
              else
              {
                v38 = sub_1BC62D574();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v38 & 1) != 0)
                  return 1.35;
                v39 = sub_1BC62C680();
                v41 = v40;
                if (v39 == sub_1BC62C680() && v41 == v42)
                {
                  v6 = 1.62;
                }
                else
                {
                  v43 = sub_1BC62D574();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v43 & 1) != 0)
                    return 1.62;
                  v44 = sub_1BC62C680();
                  v46 = v45;
                  if (v44 == sub_1BC62C680() && v46 == v47)
                  {
                    v6 = 1.95;
                  }
                  else
                  {
                    v48 = sub_1BC62D574();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v48 & 1) != 0)
                      return 1.95;
                    v49 = sub_1BC62C680();
                    v51 = v50;
                    if (v49 == sub_1BC62C680() && v51 == v52)
                    {
                      v6 = 2.34;
                    }
                    else
                    {
                      v53 = sub_1BC62D574();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v53 & 1) != 0)
                        return 2.34;
                      v54 = sub_1BC62C680();
                      v56 = v55;
                      if (v54 == sub_1BC62C680() && v56 == v57)
                      {
                        v6 = 2.74;
                      }
                      else
                      {
                        v58 = sub_1BC62D574();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if ((v58 & 1) != 0)
                          return 2.74;
                        v59 = sub_1BC62C680();
                        v61 = v60;
                        if (v59 != sub_1BC62C680() || v61 != v62)
                          sub_1BC62D574();
                        v6 = 3.15;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    goto LABEL_8;
  }
  return 0.82;
}

uint64_t destroy for DisplayItemSectionState(uint64_t a1)
{
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DisplayItemSectionState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(void **)(a2 + 40);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_retain();
  v7 = v4;
  v8 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DisplayItemSectionState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(void **)(a1 + 40);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 48);
  v8 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DisplayItemSectionState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);

  v5 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DisplayItemSectionState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisplayItemSectionState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayItemSectionState()
{
  return &type metadata for DisplayItemSectionState;
}

uint64_t sub_1BC53FAA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a1;
  v9 = sub_1BC62A7B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a3, sel_titleForGroupAtIndex_, a2);
  v37 = v10;
  if (v13)
  {
    v14 = v13;
    v34 = sub_1BC62C680();
    v16 = v15;
  }
  else
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v14 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v34 = sub_1BC62A4A8();
    v16 = v17;
    swift_bridgeObjectRelease();
    v10 = v37;
  }

  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a5, 1, v9);
  v35 = v9;
  if (v18 == 1 && (v19 = objc_msgSend(a3, sel_subtitleForGroupAtIndex_, a2)) != 0)
  {
    v20 = v19;
    v21 = sub_1BC62C680();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0xE000000000000000;
  }
  v24 = objc_msgSend(a3, sel_sourceForGroupAtIndex_, a2);
  v25 = type metadata accessor for MedicalRecordTimelineHeaderItem(0);
  v26 = swift_allocObject();
  swift_bridgeObjectRetain_n();
  v33 = v24;
  sub_1BC62A7A8();
  v27 = (uint64_t *)(v26 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
  type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  sub_1BC347F0C(&qword_1EF42F498, type metadata accessor for MedicalRecordTimelineHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItemCell);
  *v27 = sub_1BC62ADA8();
  v27[1] = v28;
  v29 = v34;
  *(_QWORD *)(v26 + 16) = v34;
  *(_QWORD *)(v26 + 24) = v16;
  *(_QWORD *)(v26 + 32) = v21;
  *(_QWORD *)(v26 + 40) = v23;
  *(_BYTE *)(v26 + 48) = a4 == 0;
  *(_QWORD *)(v26 + 56) = v24;
  *(_BYTE *)(v26 + 64) = 0;
  *(_QWORD *)(v26 + 72) = v29;
  *(_QWORD *)(v26 + 80) = v16;
  *(_QWORD *)(v26 + 88) = 0x6C74695465746144;
  *(_QWORD *)(v26 + 96) = 0xE900000000000065;
  *(_OWORD *)(v26 + 104) = xmmword_1BC647720;
  sub_1BC542598(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v30 + 56) = v25;
  *(_QWORD *)(v30 + 64) = sub_1BC347F0C(&qword_1EF42F638, type metadata accessor for MedicalRecordTimelineHeaderItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItem);
  *(_QWORD *)(v30 + 32) = v26;
  swift_retain();
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v35);
  sub_1BC62B270();

  swift_release();
  return v29;
}

uint64_t sub_1BC53FE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;

  v1 = v0;
  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC62B288();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v18 - v12;
  if (*(_QWORD *)(*(_QWORD *)(v0 + 64) + 16))
  {
    sub_1BC541E9C();
    v19 = v10;
    swift_bridgeObjectRetain();
    sub_1BC62A7A8();
    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v14 = v19;
    sub_1BC62B270();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v13, v6);
    v15 = *(_QWORD *)(v0 + 56);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_1BC3B5F84(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
    v17 = *(_QWORD *)(v15 + 16);
    v16 = *(_QWORD *)(v15 + 24);
    if (v17 >= v16 >> 1)
      v15 = sub_1BC3B5F84(v16 > 1, v17 + 1, 1, v15);
    *(_QWORD *)(v15 + 16) = v17 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v17, v14, v6);
    *(_QWORD *)(v1 + 56) = v15;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 64) = MEMORY[0x1E0DEE9D8];
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  return result;
}

id sub_1BC540034@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id result;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a4;
  v27 = a6;
  v26 = sub_1BC62A7B4();
  v10 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a3, sel_sourceForGroupAtIndex_, a1);
  result = objc_msgSend(a2, sel_title);
  if (result)
  {
    v15 = result;
    v16 = sub_1BC62C680();
    v18 = v17;

    v19 = type metadata accessor for MedicalRecordTimelineHeaderItem(0);
    v20 = swift_allocObject();
    v24 = v13;
    swift_bridgeObjectRetain();
    sub_1BC62A7A8();
    v21 = (uint64_t *)(v20 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
    type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
    sub_1BC347F0C(&qword_1EF42F498, type metadata accessor for MedicalRecordTimelineHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItemCell);
    *v21 = sub_1BC62ADA8();
    v21[1] = v22;
    *(_QWORD *)(v20 + 16) = v16;
    *(_QWORD *)(v20 + 24) = v18;
    *(_BYTE *)(v20 + 48) = 0;
    *(_QWORD *)(v20 + 32) = 0;
    *(_QWORD *)(v20 + 40) = 0;
    *(_QWORD *)(v20 + 56) = v13;
    *(_BYTE *)(v20 + 64) = 1;
    *(_QWORD *)(v20 + 72) = v25;
    *(_QWORD *)(v20 + 80) = a5;
    strcpy((char *)(v20 + 88), "CategoryTitle");
    *(_WORD *)(v20 + 102) = -4864;
    sub_1BC542598(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0);
    *(_QWORD *)(v20 + 104) = 0;
    *(_QWORD *)(v20 + 112) = 0;
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v23 + 56) = v19;
    *(_QWORD *)(v23 + 64) = sub_1BC347F0C(&qword_1EF42F638, type metadata accessor for MedicalRecordTimelineHeaderItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineHeaderItem);
    *(_QWORD *)(v23 + 32) = v20;
    swift_retain();
    sub_1BC62A7A8();
    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
    sub_1BC62B270();

    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC5402AC(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t *v48;
  unint64_t *v49;
  void *v50;
  uint64_t (*v51)();
  uint64_t v52;
  id v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  uint64_t *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  uint64_t v91;
  id v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t *v104;
  void *v105;
  unsigned __int8 v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  void *v117;
  unsigned __int8 v118;
  uint64_t v119;

  v4 = v3;
  v8 = sub_1BC62A970();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v4 + 32) != 1)
  {
    v16 = *(void **)(v4 + 40);
    if (v16 && (v17 = objc_msgSend(v16, sel_title)) != 0)
    {
      v18 = v17;
      v19 = sub_1BC62C680();
      v21 = v20;

    }
    else
    {
      v19 = 0;
      v21 = 0xE000000000000000;
    }
    v22 = objc_msgSend(a1, sel_title);
    v104 = (uint64_t *)a3;
    if (v22)
    {
      v23 = v22;
      v24 = sub_1BC62C680();
      v26 = v25;

    }
    else
    {
      v24 = 0;
      v26 = 0xE000000000000000;
    }
    v32 = *(_QWORD *)(v4 + 24);
    v33 = a1;
    swift_retain();
    sub_1BC531138(v33, v19, v21, v24, v26, 0, 0, v32, (uint64_t)&v105);
    v103 = v105;
    LODWORD(v102) = v106;
    v34 = v107;
    v35 = v109;
    v100 = v110;
    v101 = (uint64_t)v108;
    v36 = v112;
    v91 = v111;
    v37 = v114;
    v99 = v113;
    v38 = v116;
    v98 = v115;
    v94 = v117;
    LODWORD(v97) = v118;
    v39 = v119;
    v96 = type metadata accessor for MedicalRecordTimelineItem();
    v40 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineItemCell();
    sub_1BC347F0C(&qword_1EF42FCE0, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItemCell, (uint64_t)&unk_1BC647398);
    v92 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v95 = v36;
    v41 = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = v94;
    v93 = v94;
    swift_retain();
    v43 = sub_1BC62ADA8();
    *(_QWORD *)(v40 + 144) = v44;
    *(_QWORD *)(v40 + 16) = v103;
    *(_BYTE *)(v40 + 24) = v102;
    v45 = v92;
    v46 = v101;
    *(_QWORD *)(v40 + 32) = v92;
    *(_QWORD *)(v40 + 40) = v46;
    v47 = v100;
    *(_QWORD *)(v40 + 48) = v35;
    *(_QWORD *)(v40 + 56) = v47;
    *(_QWORD *)(v40 + 64) = v91;
    *(_QWORD *)(v40 + 72) = v36;
    *(_QWORD *)(v40 + 80) = v99;
    *(_QWORD *)(v40 + 88) = v41;
    *(_QWORD *)(v40 + 96) = v98;
    *(_QWORD *)(v40 + 104) = v38;
    *(_QWORD *)(v40 + 112) = v42;
    *(_BYTE *)(v40 + 120) = v97;
    *(_QWORD *)(v40 + 128) = v39;
    *(_QWORD *)(v40 + 136) = v43;
    v48 = v104;
    v104[3] = v96;
    v49 = (unint64_t *)&unk_1EF42FD30;
    v50 = &unk_1BC647460;
    v51 = type metadata accessor for MedicalRecordTimelineItem;
    goto LABEL_21;
  }
  v12 = *(void **)(v4 + 48);
  v13 = a1;

  *(_QWORD *)(v4 + 48) = a1;
  if (__OFADD__(*(_QWORD *)v4, 1))
  {
    __break(1u);
    return;
  }
  if (*(_QWORD *)v4 + 1 >= *(_QWORD *)(v4 + 8))
  {
    v27 = objc_msgSend(v13, sel_title);
    v104 = (uint64_t *)a3;
    if (v27)
    {
      v28 = v27;
      v29 = sub_1BC62C680();
      v31 = v30;

    }
    else
    {
      v29 = 0;
      v31 = 0xE000000000000000;
    }
    v52 = *(_QWORD *)(v4 + 24);
    v53 = v13;
    swift_retain();
    sub_1BC531138(v53, 0, 0, v29, v31, 0, 0, v52, (uint64_t)&v105);
    v103 = v105;
    LODWORD(v102) = v106;
    v54 = v107;
    v55 = v109;
    v100 = v110;
    v101 = (uint64_t)v108;
    v56 = v112;
    v91 = v111;
    v57 = v114;
    v99 = v113;
    v58 = v116;
    v98 = v115;
    v94 = v117;
    LODWORD(v97) = v118;
    v59 = v119;
    v96 = type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
    v40 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
    sub_1BC347F0C(&qword_1EF42FCE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineTitleWithSubtitleItemCell);
    v92 = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v95 = v56;
    v60 = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61 = v94;
    v93 = v94;
    swift_retain();
    v62 = sub_1BC62ADA8();
    *(_QWORD *)(v40 + 144) = v63;
    *(_QWORD *)(v40 + 16) = v103;
    *(_BYTE *)(v40 + 24) = v102;
    v45 = v92;
    v64 = v101;
    *(_QWORD *)(v40 + 32) = v92;
    *(_QWORD *)(v40 + 40) = v64;
    v65 = v100;
    *(_QWORD *)(v40 + 48) = v55;
    *(_QWORD *)(v40 + 56) = v65;
    *(_QWORD *)(v40 + 64) = v91;
    *(_QWORD *)(v40 + 72) = v56;
    *(_QWORD *)(v40 + 80) = v99;
    *(_QWORD *)(v40 + 88) = v60;
    *(_QWORD *)(v40 + 96) = v98;
    *(_QWORD *)(v40 + 104) = v58;
    *(_QWORD *)(v40 + 112) = v61;
    *(_BYTE *)(v40 + 120) = v97;
    *(_QWORD *)(v40 + 128) = v59;
    *(_QWORD *)(v40 + 136) = v62;
    v48 = v104;
    v104[3] = v96;
    v49 = &qword_1EF436020;
    v50 = &protocol conformance descriptor for MedicalRecordTimelineTitleWithSubtitleItem;
    v51 = type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem;
LABEL_21:
    v48[4] = sub_1BC347F0C(v49, (uint64_t (*)(uint64_t))v51, (uint64_t)v50);
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    *v48 = v40;
    return;
  }
  MEMORY[0x1BCCEFC10]();
  v14 = (void *)sub_1BC62A928();
  v15 = objc_msgSend(a2, sel_displayItemForIndexPath_, v14);

  if (!v15)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return;
  }
  if (objc_msgSend(v15, sel_displayItemType) == (id)15 || objc_msgSend(v15, sel_displayItemType) == (id)6)
  {

    goto LABEL_8;
  }
  v66 = objc_msgSend(v13, sel_title);
  v104 = (uint64_t *)a3;
  if (v66)
  {
    v67 = v66;
    v68 = sub_1BC62C680();
    v70 = v69;

  }
  else
  {
    v68 = 0;
    v70 = 0xE000000000000000;
  }
  v71 = *(_QWORD *)(v4 + 24);
  v72 = v13;
  swift_retain();
  sub_1BC531138(v72, 0, 0, v68, v70, 0, 0, v71, (uint64_t)&v105);
  v100 = v105;
  LODWORD(v99) = v106;
  v103 = v107;
  v98 = v108;
  v101 = (uint64_t)v109;
  v97 = (uint64_t)v110;
  v88 = v111;
  v73 = v112;
  v86 = v112;
  v96 = v113;
  v102 = v114;
  v74 = v116;
  v95 = v115;
  v90 = v117;
  LODWORD(v94) = v118;
  v91 = v119;
  v93 = (id)type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
  v75 = swift_allocObject();
  type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
  v87 = sub_1BC347F0C(&qword_1EF42FCE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineTitleWithSubtitleItemCell);
  v103 = v103;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v92 = v73;
  v76 = v102;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v77 = v90;
  v89 = v90;
  v78 = v91;
  swift_retain();
  v79 = sub_1BC62ADA8();
  *(_QWORD *)(v75 + 144) = v80;
  *(_QWORD *)(v75 + 16) = v100;
  *(_BYTE *)(v75 + 24) = v99;
  v81 = v98;
  *(_QWORD *)(v75 + 32) = v103;
  *(_QWORD *)(v75 + 40) = v81;
  v82 = v97;
  *(_QWORD *)(v75 + 48) = v101;
  *(_QWORD *)(v75 + 56) = v82;
  v83 = v86;
  *(_QWORD *)(v75 + 64) = v88;
  *(_QWORD *)(v75 + 72) = v83;
  *(_QWORD *)(v75 + 80) = v96;
  *(_QWORD *)(v75 + 88) = v76;
  *(_QWORD *)(v75 + 96) = v95;
  *(_QWORD *)(v75 + 104) = v74;
  *(_QWORD *)(v75 + 112) = v77;
  *(_BYTE *)(v75 + 120) = (_BYTE)v94;
  *(_QWORD *)(v75 + 128) = v78;
  *(_QWORD *)(v75 + 136) = v79;
  v84 = v104;
  v104[3] = (uint64_t)v93;
  v84[4] = sub_1BC347F0C(&qword_1EF436020, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineTitleWithSubtitleItem);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *v84 = v75;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1BC540B88(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  char **v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *v57;
  id v58;
  id v59;
  void *v60;
  unint64_t v61;
  id v62;
  void *v63;
  id v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  void *v72;
  unint64_t v73;
  id v74;
  id v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t *v99;
  uint64_t v100;
  unsigned __int8 v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  unsigned __int8 v113;
  uint64_t v114;

  v99 = a2;
  sub_1BC40BE10();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(unsigned __int8 *)(v2 + 32);
  v9 = *(void **)(v2 + 40);
  v10 = *(void **)(v2 + 48);
  v11 = objc_msgSend(a1, sel_chartValueWithRange);
  if (!v11)
  {
    __break(1u);
    goto LABEL_37;
  }
  v12 = v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_referenceRangeViewDataFromInspectableValueInRange_, v11);

  v98 = v13;
  if (!v8)
  {
    if (v9)
    {
      v37 = objc_msgSend(v9, sel_title);
      if (v37)
      {
        v38 = v37;
        v9 = (void *)sub_1BC62C680();
        v40 = v39;

LABEL_19:
        swift_retain();
        sub_1BC531138(a1, (uint64_t)v9, v40, 0, 0, 0, 1, v7, (uint64_t)&v100);
        v97 = v100;
        LODWORD(v96) = v101;
        v43 = v102;
        v44 = v104;
        v94 = v105;
        v95 = v103;
        v45 = v107;
        v85 = v106;
        v46 = v109;
        v93 = v108;
        v47 = v111;
        v92 = v110;
        v88 = v112;
        LODWORD(v91) = v113;
        v48 = v114;
        v90 = type metadata accessor for MedicalRecordTimelineItem();
        v49 = swift_allocObject();
        type metadata accessor for MedicalRecordTimelineItemCell();
        sub_1BC347F0C(&qword_1EF42FCE0, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItemCell, (uint64_t)&unk_1BC647398);
        v86 = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v89 = v45;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v50 = v88;
        v87 = v88;
        swift_retain();
        v51 = sub_1BC62ADA8();
        *(_QWORD *)(v49 + 144) = v52;
        *(_QWORD *)(v49 + 16) = v97;
        *(_BYTE *)(v49 + 24) = v96;
        v53 = v86;
        v54 = v95;
        *(_QWORD *)(v49 + 32) = v86;
        *(_QWORD *)(v49 + 40) = v54;
        v55 = v94;
        *(_QWORD *)(v49 + 48) = v44;
        *(_QWORD *)(v49 + 56) = v55;
        *(_QWORD *)(v49 + 64) = v85;
        *(_QWORD *)(v49 + 72) = v45;
        *(_QWORD *)(v49 + 80) = v93;
        *(_QWORD *)(v49 + 88) = v46;
        *(_QWORD *)(v49 + 96) = v92;
        *(_QWORD *)(v49 + 104) = v47;
        *(_QWORD *)(v49 + 112) = v50;
        *(_BYTE *)(v49 + 120) = v91;
        *(_QWORD *)(v49 + 128) = v48;
        *(_QWORD *)(v49 + 136) = v51;
        v56 = v99;
        v99[3] = v90;
        v57 = v56;
        v56[4] = sub_1BC347F0C(&qword_1EF42FD30, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItem, (uint64_t)&unk_1BC647460);

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_35:
        *v57 = v49;
        return;
      }
      v9 = 0;
    }
    v40 = 0xE000000000000000;
    goto LABEL_19;
  }
  v14 = &selRef_predicateWithFormat_;
  v15 = objc_msgSend(a1, sel_title);
  if (v15)
  {
    v16 = v15;
    v96 = sub_1BC62C680();
    v97 = v17;

    if (v13)
      goto LABEL_5;
LABEL_16:
    v95 = 0;
    v36 = 0xE000000000000000;
    goto LABEL_25;
  }
  if (qword_1ED6A4888 != -1)
    swift_once();
  v41 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v96 = sub_1BC62A4A8();
  v97 = v42;
  swift_bridgeObjectRelease();

  if (!v13)
    goto LABEL_16;
LABEL_5:
  v94 = v7;
  v18 = v13;
  v19 = objc_msgSend(v18, sel_valueString);
  if (!v19)
  {
LABEL_21:

    v58 = v18;
    v59 = objc_msgSend(v58, sel_valueString);
    if (v59)
    {
      v60 = v59;
      v95 = sub_1BC62C680();
      v36 = v61;

    }
    else
    {

      v95 = 0;
      v36 = 0xE000000000000000;
    }
    v7 = v94;
    goto LABEL_25;
  }
  v20 = v19;
  v95 = sub_1BC62C680();
  v22 = v21;

  v23 = v18;
  v24 = objc_msgSend(v23, sel_unitString);
  if (!v24)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v25 = v24;
  v93 = (id)sub_1BC62C680();
  v27 = v26;

  v28 = sub_1BC62A820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v6, 1, 1, v28);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v29 = (void *)qword_1ED6A5528;
  sub_1BC542598(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BC6395A0;
  v31 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
  v32 = sub_1BC3644C0();
  *(_QWORD *)(v30 + 32) = v95;
  *(_QWORD *)(v30 + 40) = v22;
  *(_QWORD *)(v30 + 96) = v31;
  *(_QWORD *)(v30 + 104) = v32;
  v33 = v93;
  *(_QWORD *)(v30 + 64) = v32;
  *(_QWORD *)(v30 + 72) = v33;
  *(_QWORD *)(v30 + 80) = v27;
  v34 = v29;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  v95 = sub_1BC62C6A4();
  v36 = v35;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3B3154((uint64_t)v6);
  v7 = v94;
  v14 = &selRef_predicateWithFormat_;
LABEL_25:
  v62 = objc_msgSend(a1, sel_medicalRecord);
  if (v62)
  {
    v63 = v62;
    if (v10)
    {
      v64 = objc_msgSend(v10, v14[505]);
      if (v64)
      {
        v65 = v64;
        v66 = sub_1BC62C680();
        v68 = v67;

      }
      else
      {
        v66 = 0;
        v68 = 0xE000000000000000;
      }
      v71 = objc_msgSend(v10, sel_subtitle);
      v91 = v66;
      if (v71)
      {
        v72 = v71;
        v69 = v36;
        v92 = sub_1BC62C680();
        v70 = v73;

      }
      else
      {
        v69 = v36;
        v92 = 0;
        v70 = 0xE000000000000000;
      }
    }
    else
    {
      v69 = v36;
      v92 = 0;
      v91 = 0;
      v70 = 0xE000000000000000;
      v68 = 0xE000000000000000;
    }
    v74 = objc_msgSend(v10, sel_attributedSubtitle);
    v94 = type metadata accessor for MedicalRecordTimelineChartValueItem();
    v49 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineChartValueItemCell();
    sub_1BC347F0C(&qword_1EF42FCF8, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItemCell, (uint64_t)&unk_1BC642BD0);
    swift_retain_n();
    v75 = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v93 = v74;
    v76 = v68;
    v77 = v97;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(_QWORD *)(v49 + 104) = sub_1BC62ADA8();
    *(_QWORD *)(v49 + 112) = v78;
    v79 = v75;
    v80 = v91;
    *(_QWORD *)(v49 + 16) = v75;
    *(_QWORD *)(v49 + 24) = v80;
    v81 = v92;
    *(_QWORD *)(v49 + 32) = v76;
    *(_QWORD *)(v49 + 40) = v81;
    *(_QWORD *)(v49 + 48) = v70;
    *(_QWORD *)(v49 + 56) = v74;
    *(_QWORD *)(v49 + 64) = v96;
    *(_QWORD *)(v49 + 72) = v77;
    v82 = v94;
    *(_QWORD *)(v49 + 80) = v95;
    *(_QWORD *)(v49 + 88) = v69;
    *(_QWORD *)(v49 + 96) = v7;
    v83 = v99;
    v99[3] = v82;
    v57 = v83;
    v83[4] = sub_1BC347F0C(&qword_1EF436028, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItem, (uint64_t)&unk_1BC642C98);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_35;
  }
LABEL_37:
  __break(1u);
}

id sub_1BC541408@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_1BC62A7B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(a1, sel_title);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v9 = result;
  v23 = v4;
  v10 = sub_1BC62C680();
  v12 = v11;

  result = objc_msgSend(a1, sel_subtitle);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = result;
  v22 = a2;
  v14 = sub_1BC62C680();
  v16 = v15;

  result = objc_msgSend(a1, sel_medicalRecord);
  if (result)
  {
    v17 = result;
    v18 = type metadata accessor for MedicalRecordTimelinePanelHeaderItem();
    v19 = (_QWORD *)swift_allocObject();
    type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell();
    sub_1BC347F0C(&qword_1EF42FCD8, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelinePanelHeaderItemCell);
    v19[7] = sub_1BC62ADA8();
    v19[8] = v20;
    v19[2] = v10;
    v19[3] = v12;
    v19[4] = v14;
    v19[5] = v16;
    v19[6] = v17;
    sub_1BC542598(0, &qword_1EF42C5F0, (unint64_t *)&qword_1EF42ADC0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v21 + 56) = v18;
    *(_QWORD *)(v21 + 64) = sub_1BC347F0C(&qword_1EF436030, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelHeaderItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelinePanelHeaderItem);
    *(_QWORD *)(v21 + 32) = v19;
    swift_retain();
    sub_1BC62A7A8();
    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
    sub_1BC62B270();
    return (id)swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1BC541634(id a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  id v33;
  void *v34;
  unint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  uint64_t v63;
  char v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char v76;
  uint64_t v77;

  v4 = *(_QWORD *)(v2 + 24);
  if (*(_BYTE *)(v2 + 32) != 1)
  {
    v14 = objc_msgSend(a1, sel_title);
    if (v14)
    {
      v15 = v14;
      v16 = sub_1BC62C680();
      v18 = v17;

    }
    else
    {
      v16 = 0;
      v18 = 0xE000000000000000;
    }
    swift_retain();
    sub_1BC531138(a1, 0, 0, v16, v18, 0, 0, v4, (uint64_t)&v63);
    v59 = v63;
    v57 = v64;
    v19 = v65;
    v20 = v67;
    v55 = v68;
    v56 = v66;
    v22 = v69;
    v21 = v70;
    v23 = v72;
    v51 = v73;
    v53 = v71;
    v24 = v75;
    v47 = v74;
    v49 = v76;
    v25 = v77;
    v48 = type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
    v26 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
    sub_1BC347F0C(&qword_1EF42FCE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineTitleWithSubtitleItemCell);
    v27 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46 = v24;
    swift_retain();
    v28 = sub_1BC62ADA8();
    v29 = v27;
    *(_QWORD *)(v26 + 144) = v30;
    *(_QWORD *)(v26 + 16) = v59;
    *(_BYTE *)(v26 + 24) = v57;
    *(_QWORD *)(v26 + 32) = v27;
    *(_QWORD *)(v26 + 40) = v56;
    *(_QWORD *)(v26 + 48) = v20;
    *(_QWORD *)(v26 + 56) = v55;
    *(_QWORD *)(v26 + 64) = v22;
    *(_QWORD *)(v26 + 72) = v21;
    *(_QWORD *)(v26 + 80) = v53;
    *(_QWORD *)(v26 + 88) = v23;
    *(_QWORD *)(v26 + 96) = v51;
    *(_QWORD *)(v26 + 104) = v47;
    *(_QWORD *)(v26 + 112) = v24;
    *(_BYTE *)(v26 + 120) = v49;
    *(_QWORD *)(v26 + 128) = v25;
    *(_QWORD *)(v26 + 136) = v28;
    v31 = a2;
    a2[3] = v48;
    a2[4] = sub_1BC347F0C(&qword_1EF436020, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineTitleWithSubtitleItem);
    swift_release();

    goto LABEL_21;
  }
  v5 = *(void **)(v2 + 48);
  v6 = objc_msgSend(a1, sel_medicalRecord);
  if (v6)
  {
    v7 = v6;
    if (v5)
    {
      v8 = objc_msgSend(v5, sel_title);
      if (v8)
      {
        v9 = v8;
        v10 = v4;
        v11 = sub_1BC62C680();
        v13 = v12;

      }
      else
      {
        v10 = v4;
        v11 = 0;
        v13 = 0xE000000000000000;
      }
      v33 = objc_msgSend(v5, sel_subtitle);
      if (v33)
      {
        v34 = v33;
        v32 = sub_1BC62C680();
        v60 = v35;

      }
      else
      {
        v32 = 0;
        v60 = 0xE000000000000000;
      }
      v4 = v10;
    }
    else
    {
      v32 = 0;
      v11 = 0;
      v60 = 0xE000000000000000;
      v13 = 0xE000000000000000;
    }
    v36 = objc_msgSend(v5, sel_attributedSubtitle);
    v37 = objc_msgSend(a1, sel_title);
    if (v37)
    {
      v38 = v37;
      v54 = sub_1BC62C680();
      v58 = v39;

      v40 = objc_msgSend(a1, sel_subtitle);
      if (v40)
      {
        v41 = v40;
        v42 = v36;
        v50 = sub_1BC62C680();
        v44 = v43;

      }
      else
      {
        v42 = v36;
        v50 = 0;
        v44 = 0;
      }
      v52 = type metadata accessor for MedicalRecordTimelineChartValueItem();
      v26 = swift_allocObject();
      type metadata accessor for MedicalRecordTimelineChartValueItemCell();
      sub_1BC347F0C(&qword_1EF42FCF8, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItemCell, (uint64_t)&unk_1BC642BD0);
      swift_retain_n();
      v29 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61 = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *(_QWORD *)(v26 + 104) = sub_1BC62ADA8();
      *(_QWORD *)(v26 + 112) = v45;
      *(_QWORD *)(v26 + 16) = v29;
      *(_QWORD *)(v26 + 24) = v11;
      *(_QWORD *)(v26 + 32) = v13;
      *(_QWORD *)(v26 + 40) = v32;
      *(_QWORD *)(v26 + 48) = v60;
      *(_QWORD *)(v26 + 56) = v42;
      *(_QWORD *)(v26 + 64) = v54;
      *(_QWORD *)(v26 + 72) = v58;
      *(_QWORD *)(v26 + 80) = v50;
      *(_QWORD *)(v26 + 88) = v44;
      *(_QWORD *)(v26 + 96) = v4;
      v31 = a2;
      a2[3] = v52;
      a2[4] = sub_1BC347F0C(&qword_1EF436028, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItem, (uint64_t)&unk_1BC642C98);
      swift_release();
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *v31 = v26;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC541B04(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unsigned __int8 v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  unsigned __int8 v58;
  uint64_t v59;

  v7 = sub_1BC62A970();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__OFADD__(*v3, 1))
  {
    __break(1u);
  }
  else
  {
    v11 = v3[3];
    if (*v3 + 1 < v3[1])
    {
      MEMORY[0x1BCCEFC10]();
      v12 = (void *)sub_1BC62A928();
      v13 = objc_msgSend(a2, sel_displayItemForIndexPath_, v12);

      if (v13)
      {
        if (objc_msgSend(v13, sel_displayItemType) == (id)4 || objc_msgSend(v13, sel_displayItemType) == (id)5)
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

LABEL_7:
          *(_QWORD *)(a3 + 32) = 0;
          *(_OWORD *)a3 = 0u;
          *(_OWORD *)(a3 + 16) = 0u;
          return;
        }
        v30 = objc_msgSend(v13, sel_displayItemType);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        if (v30 == (id)6)
          goto LABEL_7;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    v14 = a1;
    swift_retain();
    sub_1BC531138(v14, 0, 0, 0, 0, 1, 0, v11, (uint64_t)&v45);
    v43 = v45;
    v42 = v46;
    v15 = v47;
    v16 = v49;
    v40 = v50;
    v41 = v48;
    v17 = v52;
    v31 = v51;
    v18 = v54;
    v39 = v53;
    v19 = v56;
    v38 = v55;
    v34 = v57;
    v37 = v58;
    v44 = (uint64_t *)a3;
    v20 = v59;
    v36 = type metadata accessor for MedicalRecordTimelineItem();
    v21 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineItemCell();
    sub_1BC347F0C(&qword_1EF42FCE0, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItemCell, (uint64_t)&unk_1BC647398);
    v32 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = v17;
    v22 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = v34;
    v33 = v34;
    swift_retain();
    v24 = sub_1BC62ADA8();
    *(_QWORD *)(v21 + 144) = v25;
    *(_QWORD *)(v21 + 16) = v43;
    *(_BYTE *)(v21 + 24) = v42;
    v26 = v32;
    v27 = v41;
    *(_QWORD *)(v21 + 32) = v32;
    *(_QWORD *)(v21 + 40) = v27;
    v28 = v40;
    *(_QWORD *)(v21 + 48) = v16;
    *(_QWORD *)(v21 + 56) = v28;
    *(_QWORD *)(v21 + 64) = v31;
    *(_QWORD *)(v21 + 72) = v17;
    *(_QWORD *)(v21 + 80) = v39;
    *(_QWORD *)(v21 + 88) = v22;
    *(_QWORD *)(v21 + 96) = v38;
    *(_QWORD *)(v21 + 104) = v19;
    *(_QWORD *)(v21 + 112) = v23;
    *(_BYTE *)(v21 + 120) = v37;
    *(_QWORD *)(v21 + 128) = v20;
    *(_QWORD *)(v21 + 136) = v24;
    v29 = v44;
    v44[3] = v36;
    v29[4] = sub_1BC347F0C(&qword_1EF42FD30, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItem, (uint64_t)&unk_1BC647460);
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    *v29 = v21;
  }
}

uint64_t sub_1BC541E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  char v23;
  _QWORD v24[5];
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[40];
  uint64_t v29;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9D8];
  v29 = MEMORY[0x1E0DEE9D8];
  result = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(result + 16);
  if (!v4)
    goto LABEL_34;
  v5 = *(_QWORD *)(v1 + 64);
  if (v4 > *(_QWORD *)(v5 + 16))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  v23 = 0;
  v6 = 40 * v4 - 8;
  v7 = (unint64_t *)&qword_1EF42ADC0;
  while (1)
  {
    sub_1BC34E674(v5 + v6, (uint64_t)v28);
    sub_1BC34E674((uint64_t)v28, (uint64_t)&v25);
    sub_1BC35817C(0, v7);
    v8 = type metadata accessor for MedicalRecordTimelineChartValueItem();
    result = swift_dynamicCast();
    v9 = (_DWORD)result ? v24[0] : 0;
    v10 = v4 - 1;
    if (v4 == 1)
      break;
    v11 = *(_QWORD *)(v1 + 64);
    if ((int64_t)(v4 - 2) >= *(_QWORD *)(v11 + 16))
      goto LABEL_36;
    sub_1BC34E674(v11 + v6 - 40, (uint64_t)&v25);
    if (swift_dynamicCast())
      v12 = v24[0];
    else
      v12 = 0;
    if (v9)
    {
      if (!v12)
      {
        if ((v23 & 1) != 0)
        {
          v20 = swift_retain();
          sub_1BC542304(v20, v1, (uint64_t *)&v25);
          sub_1BC34E674((uint64_t)&v25, (uint64_t)v24);
          sub_1BC5DD980(0, 0, (uint64_t)v24);
          swift_release_n();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
        }
        else
        {
          sub_1BC34E674((uint64_t)v28, (uint64_t)&v25);
          sub_1BC5DD980(0, 0, (uint64_t)&v25);
          swift_release();
        }
        result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
        v23 = 0;
        goto LABEL_5;
      }
      v13 = v1;
      v14 = v7;
      sub_1BC3996E4();
      v15 = *(void **)(v9 + 16);
      v16 = *(void **)(v12 + 16);
      swift_retain();
      swift_retain();
      v17 = v15;
      v18 = v16;
      v19 = sub_1BC62CEB4();

      if ((v19 & 1) != 0)
      {
        swift_release_n();
        swift_release_n();
        result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
        v23 = 1;
        v7 = v14;
LABEL_25:
        v1 = v13;
        goto LABEL_5;
      }
      v7 = v14;
      if ((v23 & 1) == 0)
      {
        v26 = v8;
        v27 = sub_1BC347F0C(&qword_1EF436028, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItem, (uint64_t)&unk_1BC642C98);
        *(_QWORD *)&v25 = v9;
        sub_1BC34E718(&v25, (uint64_t)v24);
        swift_retain();
        sub_1BC5DD980(0, 0, (uint64_t)v24);
        swift_release_n();
        swift_release_n();
        result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
        v23 = 0;
        goto LABEL_25;
      }
      v1 = v13;
      sub_1BC542304(v9, v13, (uint64_t *)&v25);
      sub_1BC34E674((uint64_t)&v25, (uint64_t)v24);
      sub_1BC5DD980(0, 0, (uint64_t)v24);
      swift_release_n();
      swift_release_n();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
      v23 = 0;
    }
    else
    {
      sub_1BC34E674((uint64_t)v28, (uint64_t)&v25);
      sub_1BC5DD980(0, 0, (uint64_t)&v25);
      swift_release();
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
    }
LABEL_5:
    v5 = *(_QWORD *)(v1 + 64);
    v6 -= 40;
    v4 = v10;
    if (v10 > *(_QWORD *)(v5 + 16))
      goto LABEL_35;
  }
  if (v9)
  {
    if ((v23 & 1) != 0)
    {
      v21 = swift_retain();
      sub_1BC542304(v21, v1, (uint64_t *)&v25);
      sub_1BC34E674((uint64_t)&v25, (uint64_t)v24);
      sub_1BC5DD980(0, 0, (uint64_t)v24);
      swift_release_n();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
      goto LABEL_33;
    }
    v26 = v8;
    v27 = sub_1BC347F0C(&qword_1EF436028, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItem, (uint64_t)&unk_1BC642C98);
    *(_QWORD *)&v25 = v9;
    sub_1BC34E718(&v25, (uint64_t)v24);
    v22 = (__int128 *)v24;
  }
  else
  {
    sub_1BC34E674((uint64_t)v28, (uint64_t)&v25);
    v22 = &v25;
  }
  sub_1BC5DD980(0, 0, (uint64_t)v22);
LABEL_33:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  v2 = v29;
LABEL_34:
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = v2;
  return result;
}

void sub_1BC542304(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  id v32;
  uint64_t v34;
  char v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char v47;
  uint64_t v48;

  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1BC62C650();
  v7 = (void *)sub_1BC62C650();
  v8 = objc_msgSend(v5, sel_detailSubtitleItemWithTitle_subtitle_, v6, v7);

  if (v8)
  {
    objc_msgSend(v8, sel_setMedicalRecord_, *(_QWORD *)(a1 + 16));
    v9 = *(_QWORD *)(a2 + 24);
    v32 = v8;
    swift_retain();
    sub_1BC531138(v32, 0, 0, 0, 0, 0, 0, v9, (uint64_t)&v34);
    v31 = v34;
    v30 = v35;
    v10 = v36;
    v11 = v38;
    v28 = v39;
    v29 = v37;
    v12 = v40;
    v13 = v41;
    v14 = v43;
    v15 = v45;
    v26 = v44;
    v27 = v42;
    v22 = v46;
    v25 = v47;
    v16 = v48;
    v24 = type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
    v17 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
    sub_1BC347F0C(&qword_1EF42FCE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineTitleWithSubtitleItemCell);
    v18 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = v22;
    swift_retain();
    v19 = sub_1BC62ADA8();
    *(_QWORD *)(v17 + 144) = v20;
    *(_QWORD *)(v17 + 16) = v31;
    *(_BYTE *)(v17 + 24) = v30;
    *(_QWORD *)(v17 + 32) = v18;
    *(_QWORD *)(v17 + 40) = v29;
    *(_QWORD *)(v17 + 48) = v11;
    *(_QWORD *)(v17 + 56) = v28;
    *(_QWORD *)(v17 + 64) = v12;
    *(_QWORD *)(v17 + 72) = v13;
    *(_QWORD *)(v17 + 80) = v27;
    *(_QWORD *)(v17 + 88) = v14;
    *(_QWORD *)(v17 + 96) = v26;
    *(_QWORD *)(v17 + 104) = v15;
    *(_QWORD *)(v17 + 112) = v22;
    *(_BYTE *)(v17 + 120) = v25;
    *(_QWORD *)(v17 + 128) = v16;
    *(_QWORD *)(v17 + 136) = v19;
    a3[3] = v24;
    a3[4] = sub_1BC347F0C(&qword_1EF436020, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelineTitleWithSubtitleItem);

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    *a3 = v17;
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC542598(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC35817C(255, a3);
    v4 = sub_1BC62D538();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t HKMedicalUserDomainConcept.localizedOntologyPreferredName.getter()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t countAndFlagsBits;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_preferredLocalizations);

  v2 = sub_1BC62C878();
  countAndFlagsBits = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v2)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

Swift::String __swiftcall HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)(Swift::OpaquePointer given)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  Swift::String result;

  v2 = objc_msgSend(v1, sel_ontologyPreferredName);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1BC62C680();
    v6 = v5;
  }
  else
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v3 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    v4 = sub_1BC62A4A8();
    v6 = v7;
    swift_bridgeObjectRelease();
  }

  v8 = objc_msgSend(v1, sel_preferredNameByLocaleIdentifier);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1BC62C548();

    v11 = swift_bridgeObjectRetain();
    sub_1BC3D6C54(v11);
    swift_bridgeObjectRelease();
    v12 = (void *)objc_opt_self();
    v13 = (void *)sub_1BC62C86C();
    swift_release();
    v14 = (void *)sub_1BC62C86C();
    v15 = objc_msgSend(v12, sel_preferredLocalizationsFromArray_forPreferences_, v13, v14);

    v16 = (_QWORD *)sub_1BC62C878();
    if (v16[2])
    {
      v18 = v16[4];
      v17 = v16[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v10 + 16))
      {
        v19 = sub_1BC558D94(v18, v17);
        if ((v20 & 1) != 0)
        {
          v21 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 16 * v19);
          v4 = *v21;
          v22 = (void *)v21[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v6 = v22;
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v23 = v4;
  v24 = v6;
  result._object = v24;
  result._countAndFlagsBits = v23;
  return result;
}

uint64_t MedicalRecordTimelinePanelItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC542904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  _QWORD v8[2];

  v1 = sub_1BC62A7B4();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*(id *)(v0 + 16), sel_UUID, v3);
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v8[0] = 0x2E6C656E6150;
  v8[1] = 0xE600000000000000;
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t static MedicalRecordTimelinePanelItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  v6 = v4;
  v7 = v5;
  LOBYTE(v5) = sub_1BC62CEB4();

  return v5 & 1;
}

uint64_t MedicalRecordTimelinePanelItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelinePanelItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC542AB0()
{
  return sub_1BC542904();
}

id sub_1BC542AD0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  objc_super v27;

  sub_1BC357158(0, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_1BC62BC18();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v4[OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v17 = &v4[OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext];
  v18 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (objc_class *)type metadata accessor for MedicalRecordTimelinePanelItemCell();
  v27.receiver = v4;
  v27.super_class = v19;
  v20 = objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC62A988();
  v21 = (id)*MEMORY[0x1E0CD2A68];
  sub_1BC62CDF4();

  v22 = (void *)objc_opt_self();
  v23 = v20;
  v24 = objc_msgSend(v22, sel_currentTraitCollection);
  sub_1BC62BBF4();
  sub_1BC62BC48();
  sub_1BC5E5A5C((uint64_t)v15);
  sub_1BC62BC3C();
  v25 = sub_1BC62BC78();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v11, 0, 1, v25);
  MEMORY[0x1BCCF1FE0](v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

  return v23;
}

id sub_1BC542D0C(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  objc_class *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  objc_super v23;

  sub_1BC357158(0, &qword_1EF42C0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - v4;
  v6 = sub_1BC62BC18();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v1[OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v11 = &v1[OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext];
  v12 = sub_1BC62ADD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (objc_class *)type metadata accessor for MedicalRecordTimelinePanelItemCell();
  v23.receiver = v1;
  v23.super_class = v13;
  v14 = objc_msgSendSuper2(&v23, sel_initWithCoder_, a1);
  v15 = v14;
  if (v14)
  {
    v16 = v14;
    sub_1BC62A988();
    v17 = (id)*MEMORY[0x1E0CD2A68];
    sub_1BC62CDF4();

    v18 = (void *)objc_opt_self();
    v19 = v16;
    v20 = objc_msgSend(v18, sel_currentTraitCollection);
    sub_1BC62BBF4();
    sub_1BC62BC48();
    sub_1BC5E5A5C((uint64_t)v9);
    sub_1BC62BC3C();
    v21 = sub_1BC62BC78();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 0, 1, v21);
    MEMORY[0x1BCCF1FE0](v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  }
  return v15;
}

uint64_t sub_1BC542F48(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC542FB8();
  return sub_1BC37AE60((uint64_t)v5);
}

id sub_1BC542FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  id v14;
  id result;
  void (*v16)(uint64_t *, _QWORD);
  id v17;
  void (*v18)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[5];

  sub_1BC357158(0, &qword_1EF42A0A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v29 = (char *)&v26 - v2;
  v3 = sub_1BC62BBAC();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1BC62BB64();
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62BD98();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v0;
  MEMORY[0x1BCCF201C](v11);
  if (qword_1ED6A4888 != -1)
    swift_once();
  v14 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC62BD74();
  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4A88], *MEMORY[0x1E0DC1440]);
  if (result)
  {
    v16 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCC0();
    v16(v33, 0);
    v17 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v18 = (void (*)(uint64_t *, _QWORD))sub_1BC62BCE4();
    sub_1BC62BCCC();
    v18(v33, 0);
    v33[3] = v9;
    v33[4] = MEMORY[0x1E0DC2398];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v13, v9);
    MEMORY[0x1BCCF1FC8](v33);
    sub_1BC357158(0, &qword_1EF42A090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC62BBC4();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC639590;
    v20 = *MEMORY[0x1E0DC1C20];
    v27 = v9;
    v21 = v10;
    v22 = v6;
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
    v24 = v28;
    v23(v8, v20, v28);
    v25 = sub_1BC62BB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v29, 1, 1, v25);
    sub_1BC62BBA0();
    sub_1BC62BB7C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v31);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v24);
    sub_1BC62CD40();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC5433AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC5433FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC542FB8();
  return sub_1BC37AE60(a1);
}

uint64_t (*sub_1BC543468(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5434B0;
}

uint64_t sub_1BC5434B0(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC542FB8);
}

void sub_1BC54355C(uint64_t a1, void *a2)
{
  sub_1BC543A88(a2);
}

uint64_t sub_1BC543564(uint64_t a1, _QWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0];
  sub_1BC357158(0, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  sub_1BC43EFFC(a1, (uint64_t)&v10 - v6);
  v8 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext;
  swift_beginAccess();
  sub_1BC3AA114((uint64_t)v7, v8);
  swift_endAccess();
  sub_1BC543644();
  return sub_1BC377E3C((uint64_t)v7, &qword_1EF42BC08, v4);
}

uint64_t sub_1BC543644()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v1 = v0;
  v2 = sub_1BC62A970();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - v7;
  v9 = sub_1BC62ADD8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext;
  swift_beginAccess();
  sub_1BC43EFFC(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1BC377E3C((uint64_t)v8, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1BC62ADCC();
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_1BC62D1D8();
  v15 = sub_1BC62C680();
  v17 = v16;
  swift_bridgeObjectRelease();
  v20 = v15;
  v21 = v17;
  sub_1BC62C764();
  v19 = sub_1BC62A964();
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  v18 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v18);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BC5438C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext;
  swift_beginAccess();
  return sub_1BC43EFFC(v3, a1);
}

uint64_t sub_1BC543914(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext;
  swift_beginAccess();
  sub_1BC3AA114(a1, v3);
  swift_endAccess();
  sub_1BC543644();
  return sub_1BC377E3C(a1, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0]);
}

uint64_t (*sub_1BC543990(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC5439D8;
}

uint64_t sub_1BC5439D8(uint64_t a1, char a2)
{
  return sub_1BC38C3D4(a1, a2, (uint64_t (*)(uint64_t))sub_1BC543644);
}

id MedicalRecordTimelinePanelItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelinePanelItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC543A64(uint64_t a1, void *a2)
{
  sub_1BC543A88(a2);
}

void sub_1BC543A88(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  void *v6;
  id v7;
  uint64_t v8;
  _QWORD v9[5];

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v3, (uint64_t)v9);
  if (v9[3])
  {
    sub_1BC35817C(0, (unint64_t *)&qword_1EF42ADC0);
    type metadata accessor for MedicalRecordTimelinePanelItem();
    v4 = swift_dynamicCast();
    if ((v4 & 1) != 0)
    {
      if (qword_1ED6A4878 != -1)
        v4 = swift_once();
      MEMORY[0x1E0C80A78](v4);
      sub_1BC62AA6C();
      v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5998);
      sub_1BC379B20((unint64_t *)&qword_1ED6A4B90, 255, v5, MEMORY[0x1E0D2D480]);
      swift_retain();
      sub_1BC62B888();
      swift_release();
      v6 = (void *)v9[0];
      if (qword_1ED6A31B0 != -1)
        swift_once();
      v7 = *(id *)(v8 + 16);
      sub_1BC555498(v7, a1, v6);
      swift_release();

    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v9);
  }
}

uint64_t type metadata accessor for MedicalRecordTimelinePanelItemCell()
{
  uint64_t result;

  result = qword_1EF436148;
  if (!qword_1EF436148)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC543CC0(uint64_t a1, uint64_t a2)
{
  return sub_1BC379B20(&qword_1EF436040, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelItem, (uint64_t)&protocol conformance descriptor for MedicalRecordTimelinePanelItem);
}

uint64_t type metadata accessor for MedicalRecordTimelinePanelItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC543D0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t sub_1BC543D64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext;
  swift_beginAccess();
  return sub_1BC43EFFC(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelinePanelItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t sub_1BC543DEC()
{
  return type metadata accessor for MedicalRecordTimelinePanelItemCell();
}

void sub_1BC543DF4()
{
  unint64_t v0;

  sub_1BC357158(319, &qword_1EF42BC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AAA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MedicalRecordTimelinePanelItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.didSelectCell(_:in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.deselectionBehavior.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.sectionContext.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.sectionContext.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.sectionContext.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

id MedicalRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___HRMedicalRecordFormatter_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___HRMedicalRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1BC543FD4(void *a1)
{
  char *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  objc_class *v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  char *v31;
  id v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  int v48;
  uint64_t v49;
  objc_super v50;
  uint64_t v51;
  uint64_t v52;

  ObjectType = swift_getObjectType();
  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    v9 = (void *)v8;
    v10 = a1;
    v11 = sub_1BC544464(v9);
LABEL_3:
    v12 = v11;

    return v12;
  }
  objc_opt_self();
  v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    v15 = (void *)v14;
    v16 = *(void **)&v1[OBJC_IVAR___HRMedicalRecordFormatter_store];
    v17 = *(_QWORD *)&v1[OBJC_IVAR___HRMedicalRecordFormatter_context];
    v18 = (objc_class *)type metadata accessor for CoverageRecordFormatter();
    v19 = (char *)objc_allocWithZone(v18);
    *(_QWORD *)&v19[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = v16;
    *(_QWORD *)&v19[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = v17;
    v50.receiver = v19;
    v50.super_class = v18;
    v20 = a1;
    v21 = v16;
    v22 = objc_msgSendSuper2(&v50, sel_init);
    v23 = sub_1BC4243F8(v15);

  }
  else
  {
    objc_opt_self();
    v24 = swift_dynamicCastObjCClass();
    if (v24)
    {
      v25 = (void *)v24;
      v10 = a1;
      v11 = sub_1BC544684(v25);
      goto LABEL_3;
    }
    objc_opt_self();
    v26 = swift_dynamicCastObjCClass();
    if (v26)
    {
      v27 = (void *)v26;
      v10 = a1;
      v11 = sub_1BC544838(v27);
      goto LABEL_3;
    }
    objc_opt_self();
    v28 = swift_dynamicCastObjCClass();
    if (v28)
    {
      v29 = (void *)v28;
      v10 = a1;
      v11 = sub_1BC5449EC(v29);
      goto LABEL_3;
    }
    sub_1BC62BAF8();
    v30 = a1;
    v31 = v1;
    v32 = v30;
    v33 = v31;
    v34 = sub_1BC62BB28();
    v35 = sub_1BC62CADC();
    v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      v37 = swift_slowAlloc();
      v48 = v36;
      v38 = v37;
      v49 = swift_slowAlloc();
      v51 = ObjectType;
      v52 = v49;
      *(_DWORD *)v38 = 136315394;
      swift_getMetatypeMetadata();
      v39 = sub_1BC62C6E0();
      v51 = sub_1BC4991F0(v39, v40, &v52);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      v47[1] = v38 + 14;
      v41 = objc_msgSend(v32, sel_sampleType);
      v42 = objc_msgSend(v41, sel_identifier);

      v43 = sub_1BC62C680();
      v45 = v44;

      v51 = sub_1BC4991F0(v43, v45, &v52);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v34, (os_log_type_t)v48, "%s: not generating structured items for sampleType %s", (uint8_t *)v38, 0x16u);
      v46 = v49;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v46, -1, -1);
      MEMORY[0x1BCCF36A8](v38, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return MEMORY[0x1E0DEE9D8];
  }
  return v23;
}

uint64_t sub_1BC544464(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  unint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  objc_super v16;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for AllergyRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context] = v4;
  v16.receiver = v6;
  v16.super_class = v5;
  v7 = v3;
  v8 = objc_msgSendSuper2(&v16, sel_init);
  v9 = objc_msgSend(a1, sel_reactions);
  if (v9)
  {
    v10 = v9;
    sub_1BC34B6A0(0, &qword_1EF430000);
    v11 = sub_1BC62C878();

    v12 = sub_1BC441B64();
    v13 = v12;
    v14 = sub_1BC442B94(v11, (uint64_t)v13);

    swift_bridgeObjectRelease();
    v8 = v13;
  }
  else
  {
    v14 = MEMORY[0x1E0DEE9D8];
  }

  return v14;
}

uint64_t sub_1BC5445C4(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  objc_super v11;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for CoverageRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = v4;
  v11.receiver = v6;
  v11.super_class = v5;
  v7 = v3;
  v8 = objc_msgSendSuper2(&v11, sel_init);
  v9 = sub_1BC4243F8(a1);

  return v9;
}

uint64_t sub_1BC544684(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;
  objc_super v20;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for MedicationRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context] = v4;
  v20.receiver = v6;
  v20.super_class = v5;
  v7 = v3;
  v8 = objc_msgSendSuper2(&v20, sel_init);
  v9 = objc_msgSend(a1, sel_dosages);
  if (v9)
  {
    v10 = v9;
    sub_1BC34B6A0(0, &qword_1EF42D040);
    v11 = sub_1BC62C878();

    v12 = sub_1BC52BF7C();
    if (v11 < 0 || (v11 & 0x4000000000000000) != 0)
    {
      v18 = swift_bridgeObjectRetain();
      v13 = (uint64_t)sub_1BC3D6978(v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v19 = v13;
    sub_1BC44A7EC((uint64_t *)&v19);
    v14 = v19;
    v15 = v12;
    v16 = sub_1BC44BBBC(v14);

    swift_bridgeObjectRelease();
    swift_release();

    v8 = v15;
  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
  }

  return v16;
}

uint64_t sub_1BC544838(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;
  objc_super v20;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for MedicationOrderFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context] = v4;
  v20.receiver = v6;
  v20.super_class = v5;
  v7 = v3;
  v8 = objc_msgSendSuper2(&v20, sel_init);
  v9 = objc_msgSend(a1, sel_dosages);
  if (v9)
  {
    v10 = v9;
    sub_1BC34B6A0(0, &qword_1EF42D040);
    v11 = sub_1BC62C878();

    v12 = sub_1BC449BD8();
    if (v11 < 0 || (v11 & 0x4000000000000000) != 0)
    {
      v18 = swift_bridgeObjectRetain();
      v13 = (uint64_t)sub_1BC3D6978(v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v19 = v13;
    sub_1BC44A7EC((uint64_t *)&v19);
    v14 = v19;
    v15 = v12;
    v16 = sub_1BC44BBBC(v14);

    swift_bridgeObjectRelease();
    swift_release();

    v8 = v15;
  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
  }

  return v16;
}

uint64_t sub_1BC5449EC(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;
  objc_super v20;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for MedicationDispenseFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter_context] = v4;
  v20.receiver = v6;
  v20.super_class = v5;
  v7 = v3;
  v8 = objc_msgSendSuper2(&v20, sel_init);
  v9 = objc_msgSend(a1, sel_dosages);
  if (v9)
  {
    v10 = v9;
    sub_1BC34B6A0(0, &qword_1EF42D040);
    v11 = sub_1BC62C878();

    v12 = sub_1BC5F7658();
    if (v11 < 0 || (v11 & 0x4000000000000000) != 0)
    {
      v18 = swift_bridgeObjectRetain();
      v13 = (uint64_t)sub_1BC3D6978(v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v19 = v13;
    sub_1BC44A7EC((uint64_t *)&v19);
    v14 = v19;
    v15 = v12;
    v16 = sub_1BC44BBBC(v14);

    swift_bridgeObjectRelease();
    swift_release();

    v8 = v15;
  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
  }

  return v16;
}

uint64_t sub_1BC544BA0(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  objc_super v13;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for AllergyRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context];
  if (v9 == 1)
  {
    v10 = sub_1BC441FD8(a1);
LABEL_5:
    v11 = v10;

    return v11;
  }
  if (!v9)
  {
    v10 = sub_1BC441E4C(a1);
    goto LABEL_5;
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC544CA0(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  objc_super v13;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for ClinicalNoteRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context];
  if (v9 == 1)
  {
    v10 = sub_1BC5C116C(a1);
LABEL_5:
    v11 = v10;

    return v11;
  }
  if (!v9)
  {
    v10 = sub_1BC5C0898(a1);
    goto LABEL_5;
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC544D94(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  objc_super v13;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for ConditionRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context];
  if (v9 == 1)
  {
    v10 = sub_1BC3CE6C4(a1);
LABEL_5:
    v11 = v10;

    return v11;
  }
  if (!v9)
  {
    v10 = sub_1BC3CE4A8(a1);
    goto LABEL_5;
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC544E88(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  objc_super v13;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for CoverageRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context];
  if (v9 == 1)
  {
    v10 = sub_1BC425524((uint64_t)a1);
LABEL_5:
    v11 = v10;

    return v11;
  }
  if (!v9)
  {
    v10 = sub_1BC4249A8(a1);
    goto LABEL_5;
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC544F94(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  objc_super v13;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for DiagnosticTestReportFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context];
  if (v9 == 1)
  {
    v10 = sub_1BC50EEB4(a1);
LABEL_5:
    v11 = v10;

    return v11;
  }
  if (!v9)
  {
    v10 = sub_1BC50EB58(a1);
    goto LABEL_5;
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC545088(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t result;
  objc_super v12;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for DiagnosticTestResultFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context] = v4;
  v12.receiver = v6;
  v12.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v12, sel_init);
  if (*(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context] >= 2uLL)
  {
    result = sub_1BC62D5C8();
    __break(1u);
  }
  else
  {
    v9 = v8;
    v10 = sub_1BC39C3D8(a1);

    return v10;
  }
  return result;
}

uint64_t sub_1BC54516C(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  objc_super v13;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for MedicationRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context];
  if (v9 == 1)
  {
    v10 = sub_1BC52C84C(a1);
LABEL_5:
    v11 = v10;

    return v11;
  }
  if (!v9)
  {
    v10 = sub_1BC52C2C0(a1);
    goto LABEL_5;
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC54526C(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  objc_super v13;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for MedicationOrderFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context];
  if (v9 == 1)
  {
    v10 = sub_1BC44A3D0(a1);
LABEL_5:
    v11 = v10;

    return v11;
  }
  if (!v9)
  {
    v10 = sub_1BC449F1C(a1);
    goto LABEL_5;
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC54536C(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  objc_super v13;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for MedicationDispenseFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter] = 0;
  *(_QWORD *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v9 = *(_QWORD *)&v8[OBJC_IVAR___HRMedicationDispenseFormatter_context];
  if (v9 == 1)
  {
    v10 = sub_1BC5F8728(a1);
LABEL_5:
    v11 = v10;

    return v11;
  }
  if (!v9)
  {
    v10 = sub_1BC5F792C(a1);
    goto LABEL_5;
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC54546C(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  objc_super v13;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for ProcedureRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_context];
  if (v9 == 1)
  {
    v10 = sub_1BC61FEF0(a1);
LABEL_5:
    v11 = v10;

    return v11;
  }
  if (!v9)
  {
    v10 = sub_1BC61FB98(a1);
    goto LABEL_5;
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC545560(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  objc_super v13;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for VaccinationRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context];
  if (v9 == 1)
  {
    v10 = sub_1BC4BF07C(a1);
LABEL_5:
    v11 = v10;

    return v11;
  }
  if (!v9)
  {
    v10 = sub_1BC4BEE34(a1);
    goto LABEL_5;
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

id MedicalRecordFormatter.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___HRMedicalRecordFormatter_store);
}

uint64_t MedicalRecordFormatter.context.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___HRMedicalRecordFormatter_context);
}

id MedicalRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR___HRMedicalRecordFormatter_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___HRMedicalRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MedicalRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1BC54571C(void *a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  _QWORD v50[2];
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;

  ObjectType = swift_getObjectType();
  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    v9 = (void *)v8;
    v10 = a1;
    v11 = sub_1BC544BA0(v9);
  }
  else
  {
    objc_opt_self();
    v12 = swift_dynamicCastObjCClass();
    if (v12)
    {
      v13 = (void *)v12;
      v10 = a1;
      v11 = sub_1BC544CA0(v13);
    }
    else
    {
      objc_opt_self();
      v14 = swift_dynamicCastObjCClass();
      if (v14)
      {
        v15 = (void *)v14;
        v10 = a1;
        v11 = sub_1BC544F94(v15);
      }
      else
      {
        objc_opt_self();
        v16 = swift_dynamicCastObjCClass();
        if (v16)
        {
          v17 = (void *)v16;
          v10 = a1;
          v11 = sub_1BC545088(v17);
        }
        else
        {
          objc_opt_self();
          v18 = swift_dynamicCastObjCClass();
          if (v18)
          {
            v19 = (void *)v18;
            v10 = a1;
            v11 = sub_1BC544D94(v19);
          }
          else
          {
            objc_opt_self();
            v20 = swift_dynamicCastObjCClass();
            if (v20)
            {
              v21 = (void *)v20;
              v10 = a1;
              v11 = sub_1BC54516C(v21);
            }
            else
            {
              objc_opt_self();
              v22 = swift_dynamicCastObjCClass();
              if (v22)
              {
                v23 = (void *)v22;
                v10 = a1;
                v11 = sub_1BC54526C(v23);
              }
              else
              {
                objc_opt_self();
                v24 = swift_dynamicCastObjCClass();
                if (v24)
                {
                  v25 = (void *)v24;
                  v10 = a1;
                  v11 = sub_1BC54536C(v25);
                }
                else
                {
                  objc_opt_self();
                  v26 = swift_dynamicCastObjCClass();
                  if (v26)
                  {
                    v27 = (void *)v26;
                    v10 = a1;
                    v11 = sub_1BC54546C(v27);
                  }
                  else
                  {
                    objc_opt_self();
                    v28 = swift_dynamicCastObjCClass();
                    if (v28)
                    {
                      v29 = (void *)v28;
                      v10 = a1;
                      v11 = sub_1BC545560(v29);
                    }
                    else
                    {
                      objc_opt_self();
                      v30 = swift_dynamicCastObjCClass();
                      if (v30)
                      {
                        v31 = (void *)v30;
                        v10 = a1;
                        v11 = sub_1BC544E88(v31);
                      }
                      else
                      {
                        sub_1BC62BAF8();
                        v32 = a1;
                        v33 = v1;
                        v34 = v32;
                        v35 = v33;
                        v36 = sub_1BC62BB28();
                        v37 = sub_1BC62CAC4();
                        v52 = v37;
                        if (os_log_type_enabled(v36, v37))
                        {
                          v38 = swift_slowAlloc();
                          v51 = swift_slowAlloc();
                          v53 = ObjectType;
                          v54 = v51;
                          *(_DWORD *)v38 = 136315394;
                          swift_getMetatypeMetadata();
                          v39 = sub_1BC62C6E0();
                          v53 = sub_1BC4991F0(v39, v40, &v54);
                          sub_1BC62CFF8();

                          swift_bridgeObjectRelease();
                          *(_WORD *)(v38 + 12) = 2080;
                          v50[1] = v38 + 14;
                          v41 = objc_msgSend(v34, sel_sampleType);
                          v42 = objc_msgSend(v41, sel_identifier);

                          v43 = sub_1BC62C680();
                          v45 = v44;

                          v53 = sub_1BC4991F0(v43, v45, &v54);
                          sub_1BC62CFF8();

                          swift_bridgeObjectRelease();
                          _os_log_impl(&dword_1BC30A000, v36, (os_log_type_t)v52, "%s: missing display item formatter for sampleType identifier:%s", (uint8_t *)v38, 0x16u);
                          v46 = v51;
                          swift_arrayDestroy();
                          MEMORY[0x1BCCF36A8](v46, -1, -1);
                          MEMORY[0x1BCCF36A8](v38, -1, -1);

                        }
                        else
                        {

                        }
                        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
                        v47 = sub_1BC546088(v34);
                        v10 = v47;
                        v11 = MEMORY[0x1E0DEE9D8];
                        v54 = MEMORY[0x1E0DEE9D8];
                        if (v47)
                        {
                          v48 = v47;
                          MEMORY[0x1BCCF1B30]();
                          if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
                            sub_1BC62C8B4();
                          sub_1BC62C8D8();
                          sub_1BC62C890();
                          v11 = v54;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  return v11;
}

uint64_t sub_1BC545D1C(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  id v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  objc_super v15;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for SignedClinicalDataRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] = v4;
  v15.receiver = v6;
  v15.super_class = v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v15, sel_init);
  v14 = MEMORY[0x1E0DEE9D8];
  v9 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group), sel_mainRecord);
  if (!v9)
    goto LABEL_4;
  if (*(_QWORD *)&v8[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] < 2uLL)
  {
    v10 = v9;
    v11 = sub_1BC50A9A0(v9);
    sub_1BC3BB208(v11);

LABEL_4:
    v12 = sub_1BC50ABC8(a1);
    sub_1BC3BB208(v12);

    return v14;
  }
  result = sub_1BC62D5C8();
  __break(1u);
  return result;
}

uint64_t sub_1BC545E4C(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  objc_super v11;

  v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  v5 = (objc_class *)type metadata accessor for SignedClinicalDataRecordFormatter();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] = v4;
  v11.receiver = v6;
  v11.super_class = v5;
  v7 = v3;
  v8 = objc_msgSendSuper2(&v11, sel_init);
  v9 = sub_1BC508424(a1);

  return v9;
}

id MedicalRecordFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicalRecordFormatter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicalRecordFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC545FAC()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR___HRMedicalRecordFormatter_store);
}

uint64_t sub_1BC545FC0()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR___HRMedicalRecordFormatter_context);
}

id sub_1BC545FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v6;
  char *v7;
  id result;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for MedicalRecordFormatter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR___HRMedicalRecordFormatter_store] = a1;
  *(_QWORD *)&v7[OBJC_IVAR___HRMedicalRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1BC546044(void *a1)
{
  return sub_1BC54571C(a1);
}

uint64_t type metadata accessor for MedicalRecordFormatter()
{
  return objc_opt_self();
}

id sub_1BC546088(void *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;

  v1 = objc_msgSend(a1, sel_note);
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_stripRTFOrHTML);

    v4 = sub_1BC62C680();
    v6 = v5;

    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1ED6A4888 != -1)
        swift_once();
      v8 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v9 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000);

      v10 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

unint64_t sub_1BC5462A0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BC5462C4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC5462C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4361A8;
  if (!qword_1EF4361A8)
  {
    v1 = type metadata accessor for MedicalRecordFormatter();
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF4361A8);
  }
  return result;
}

uint64_t method lookup function for MedicalRecordFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordFormatter.structuredItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordFormatter.displayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of MedicalRecordFormatter.__allocating_init(store:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of MedicalRecordFormatter.attachmentItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicalRecordFormatter.attachmentItemsTitle(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of MedicalRecordFormatter.signedClinicalDataWalletIntegrationDisplayItems(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

_QWORD *ConceptsDataSource.init(arrangedSections:isHidden:)(uint64_t a1, int a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unsigned int *v12;
  uint64_t v14;
  int v15;
  _QWORD v16[2];

  v15 = a2;
  v14 = a1;
  sub_1BC546764(0, &qword_1EF4361D8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x1E0D2AD08]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14 - v6;
  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[3] = 0;
  v2[4] = 0;
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "MutableArray<");
  HIWORD(v16[1]) = -4864;
  sub_1BC62A7A8();
  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  sub_1BC62B2F4();
  swift_allocObject();
  sub_1BC62B2B8();
  v12 = (unsigned int *)MEMORY[0x1E0D2ACF8];
  if ((v15 & 1) == 0)
    v12 = (unsigned int *)MEMORY[0x1E0D2AD00];
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *v12, v4);
  sub_1BC546764(0, (unint64_t *)&qword_1EF42FD48, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x1E0D2AD40]);
  swift_allocObject();
  v2[2] = sub_1BC62AFA0();
  return v2;
}

void sub_1BC546764(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC62B2F4();
    v7 = a3(a1, v6, MEMORY[0x1E0D2B148]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t ConceptsDataSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC5467E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];
  uint64_t v10;
  unint64_t v11;

  v1 = v0;
  v2 = sub_1BC62A7B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + 32))
  {
    v6 = *(_QWORD *)(v1 + 24);
  }
  else
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    sub_1BC62A7A8();
    sub_1BC62A778();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    sub_1BC62C764();
    v9[1] = v1;
    sub_1BC62D2D4();
    v6 = v10;
    v7 = v11;
    *(_QWORD *)(v1 + 24) = v10;
    *(_QWORD *)(v1 + 32) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_1BC54690C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC54691C(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_1BC5467E8();
  a1[1] = v3;
  return sub_1BC546950;
}

uint64_t sub_1BC546950(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1[1];
  v1 = a1[2];
  *(_QWORD *)(v1 + 24) = *a1;
  *(_QWORD *)(v1 + 32) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC546964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  void (*v9)(char *, uint64_t);
  uint64_t v11;

  sub_1BC546764(0, &qword_1EF4361D8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x1E0D2AD08]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - v6;
  sub_1BC62AF7C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0D2ACF8], v1);
  sub_1BC62B2F4();
  v8 = sub_1BC62AF64();
  v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v4, v1);
  v9(v7, v1);
  return v8 & 1;
}

uint64_t sub_1BC546A60(char a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unsigned int *v19;
  char v20;
  void (*v21)(char *, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  os_log_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = v1;
  v42 = *v2;
  v4 = sub_1BC62BB34();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0D2AD08];
  sub_1BC546764(0, &qword_1EF4361D8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x1E0D2AD08]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v38 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v38 - v17;
  v19 = (unsigned int *)MEMORY[0x1E0D2ACF8];
  if ((a1 & 1) == 0)
    v19 = (unsigned int *)MEMORY[0x1E0D2AD00];
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))((char *)&v38 - v17, *v19, v9);
  v45 = v2[2];
  sub_1BC62AF7C();
  sub_1BC547478(&qword_1EF4361E0, &qword_1EF4361D8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))v7, MEMORY[0x1E0D2AD10]);
  v20 = sub_1BC62C644();
  v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21(v16, v9);
  if ((v20 & 1) == 0)
  {
    sub_1BC62BAF8();
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v22(v13, v18, v9);
    swift_retain_n();
    v23 = sub_1BC62BB28();
    v24 = sub_1BC62CAAC();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v41 = v22;
      v27 = v26;
      v40 = swift_slowAlloc();
      v47 = v40;
      *(_DWORD *)v27 = 136446722;
      v39 = v23;
      v28 = sub_1BC62D718();
      LODWORD(v42) = v25;
      v46 = sub_1BC4991F0(v28, v29, &v47);
      v38 = v6;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      sub_1BC62AF7C();
      v30 = sub_1BC62C6E0();
      v46 = sub_1BC4991F0(v30, v31, &v47);
      sub_1BC62CFF8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2082;
      v41(v16, v13, v9);
      v32 = sub_1BC62C6E0();
      v46 = sub_1BC4991F0(v32, v33, &v47);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      v21(v13, v9);
      v34 = v39;
      _os_log_impl(&dword_1BC30A000, v39, (os_log_type_t)v42, "[%{public}s] Changing visibility %{public}s -> %{public}s", (uint8_t *)v27, 0x20u);
      v35 = v40;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v35, -1, -1);
      v36 = v27;
      v22 = v41;
      MEMORY[0x1BCCF36A8](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v44);
    }
    else
    {
      swift_release_n();
      v21(v13, v9);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);
    }
    v22(v16, v18, v9);
    sub_1BC62AF88();
  }
  return ((uint64_t (*)(char *, uint64_t))v21)(v18, v9);
}

void (*sub_1BC546E60(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  void *v8;
  char v9;
  void (*v10)(void *, uint64_t);

  *(_QWORD *)a1 = v1;
  sub_1BC546764(0, &qword_1EF4361D8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x1E0D2AD08]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = malloc(v6);
  *(_QWORD *)(a1 + 8) = v7;
  v8 = malloc(v6);
  *(_QWORD *)(a1 + 16) = v8;
  sub_1BC62AF7C();
  (*(void (**)(void *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0D2ACF8], v4);
  sub_1BC62B2F4();
  v9 = sub_1BC62AF64();
  v10 = *(void (**)(void *, uint64_t))(v5 + 8);
  v10(v7, v4);
  v10(v8, v4);
  *(_BYTE *)(a1 + 24) = v9 & 1;
  return sub_1BC546F50;
}

void sub_1BC546F50(uint64_t a1)
{
  void *v1;
  void *v2;

  v2 = *(void **)(a1 + 8);
  v1 = *(void **)(a1 + 16);
  sub_1BC546A60(*(_BYTE *)(a1 + 24));
  free(v1);
  free(v2);
}

uint64_t ConceptsDataSource.dataSource.getter()
{
  return swift_retain();
}

uint64_t sub_1BC546F94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t result;
  uint64_t v13;

  sub_1BC546764(0, &qword_1EF4361D8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x1E0D2AD08]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - v8;
  sub_1BC62AF7C();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0D2ACF8], v3);
  sub_1BC62B2F4();
  v10 = sub_1BC62AF64();
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  result = ((uint64_t (*)(char *, uint64_t))v11)(v9, v3);
  *a1 = v10 & 1;
  return result;
}

uint64_t ConceptsDataSource.__allocating_init(arrangedSections:isHidden:)(uint64_t a1, int a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  ConceptsDataSource.init(arrangedSections:isHidden:)(a1, a2);
  return v4;
}

uint64_t ConceptsDataSource.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ConceptsDataSource.snapshot.getter()
{
  return sub_1BC62AFAC();
}

uint64_t ConceptsDataSource.changeObservers.getter()
{
  return sub_1BC62AF94();
}

Swift::String_optional __swiftcall ConceptsDataSource.reuseIdentifierForItem(with:)(Swift::String with)
{
  uint64_t (*v1)(void);
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String_optional result;

  v1 = MEMORY[0x1E0D2AD40];
  sub_1BC546764(0, (unint64_t *)&qword_1EF42FD48, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x1E0D2AD40]);
  sub_1BC547478(&qword_1EF4361E8, (unint64_t *)&qword_1EF42FD48, (uint64_t (*)(uint64_t, uint64_t, _QWORD))v1, MEMORY[0x1E0D2AD58]);
  sub_1BC62B138();
  swift_getObjectType();
  v2 = sub_1BC62AFE8();
  v4 = v3;
  swift_unknownObjectRelease();
  v5 = v2;
  v6 = v4;
  result.value._object = v6;
  result.value._countAndFlagsBits = v5;
  return result;
}

uint64_t ConceptsDataSource.item(for:)()
{
  uint64_t (*v0)(void);

  v0 = MEMORY[0x1E0D2AD40];
  sub_1BC546764(0, (unint64_t *)&qword_1EF42FD48, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x1E0D2AD40]);
  sub_1BC547478(&qword_1EF4361E8, (unint64_t *)&qword_1EF42FD48, (uint64_t (*)(uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0D2AD58]);
  sub_1BC62B138();
  swift_getObjectType();
  sub_1BC62AFF4();
  return swift_unknownObjectRelease();
}

uint64_t sub_1BC5472C8()
{
  return sub_1BC62AFAC();
}

uint64_t sub_1BC5472E8()
{
  uint64_t (*v0)(void);

  v0 = MEMORY[0x1E0D2AD40];
  sub_1BC546764(0, (unint64_t *)&qword_1EF42FD48, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x1E0D2AD40]);
  sub_1BC547478(&qword_1EF4361E8, (unint64_t *)&qword_1EF42FD48, (uint64_t (*)(uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0D2AD58]);
  sub_1BC62B138();
  swift_getObjectType();
  sub_1BC62AFF4();
  return swift_unknownObjectRelease();
}

uint64_t sub_1BC54739C()
{
  uint64_t (*v0)(void);
  uint64_t v1;

  v0 = MEMORY[0x1E0D2AD40];
  sub_1BC546764(0, (unint64_t *)&qword_1EF42FD48, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x1E0D2AD40]);
  sub_1BC547478(&qword_1EF4361E8, (unint64_t *)&qword_1EF42FD48, (uint64_t (*)(uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0D2AD58]);
  sub_1BC62B138();
  swift_getObjectType();
  v1 = sub_1BC62AFE8();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1BC547458()
{
  return sub_1BC62AF94();
}

uint64_t sub_1BC547478(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC546764(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC5474B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BC5467E8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC5474E0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  *(_QWORD *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC547514(char *a1)
{
  return sub_1BC546A60(*a1);
}

uint64_t type metadata accessor for ConceptsDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConceptsDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConceptsDataSource.identifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ConceptsDataSource.identifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ConceptsDataSource.identifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ConceptsDataSource.isHidden.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ConceptsDataSource.isHidden.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ConceptsDataSource.isHidden.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ConceptsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

id sub_1BC5475B4(void *a1)
{
  char *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  objc_super v17;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI64ClinicalSharingOnboardingNecessaryScopesNotPresentViewController_account] = a1;
  v2 = a1;
  v3 = objc_msgSend(v2, sel_gateway);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_title);

    v6 = sub_1BC62C680();
    v8 = v7;

    if (qword_1ED6A3308 != -1)
      swift_once();
    v9 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC3B30F0();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BC639590;
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 64) = sub_1BC3644C0();
    *(_QWORD *)(v10 + 32) = v6;
    *(_QWORD *)(v10 + 40) = v8;
    sub_1BC62C6B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED6A3308 != -1)
      swift_once();
    v11 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

  }
  if (qword_1ED6A3308 != -1)
    swift_once();
  v12 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v17.receiver = v1;
  v17.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingNecessaryScopesNotPresentViewController();
  v15 = objc_msgSendSuper2(&v17, sel_initWithTitle_detailText_icon_contentLayout_, v13, v14, 0, 3, 0xE000000000000000);

  return v15;
}

void sub_1BC5478F4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingNecessaryScopesNotPresentViewController();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  objc_msgSend(v0, sel_setModalInPresentation_, 1);
  if (qword_1ED6A3308 != -1)
    swift_once();
  v1 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v2 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v3 = objc_msgSend((id)objc_opt_self(), sel_boldButton, 0xE000000000000000);
  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_forState_, v4, 0);

  objc_msgSend(v3, sel_addTarget_action_forControlEvents_, v0, sel_logInAgain_, 64);
  v5 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v5, sel_addButton_, v3);

  v6 = objc_msgSend((id)objc_opt_self(), sel_linkButton);
  v7 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setTitle_forState_, v7, 0);

  objc_msgSend(v6, sel_addTarget_action_forControlEvents_, v0, sel_abort_, 64);
  v8 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v8, sel_addButton_, v6);

}

void sub_1BC547BDC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7 = MEMORY[0x1E0C80A78](v6).n128_u64[0];
  v9 = (char *)v36 - v8;
  v10 = objc_msgSend(v1, sel_navigationController, v7);
  if (v10)
  {
    v40 = v10;
    v11 = objc_msgSend(v10, sel_popViewControllerAnimated_, 1);
    if (v11)
    {

    }
    else
    {
      sub_1BC62BAF8();
      v23 = v1;
      v24 = sub_1BC62BB28();
      v25 = sub_1BC62CAC4();
      if (os_log_type_enabled(v24, v25))
      {
        v39 = v2;
        v26 = swift_slowAlloc();
        v38 = v3;
        v27 = (uint8_t *)v26;
        v37 = swift_slowAlloc();
        v42 = v37;
        *(_DWORD *)v27 = 136315138;
        v36[1] = v27 + 4;
        v28 = v23;
        v29 = objc_msgSend(v28, sel_description);
        v30 = v23;
        v31 = sub_1BC62C680();
        v33 = v32;

        v34 = v31;
        v23 = v30;
        v41 = sub_1BC4991F0(v34, v33, &v42);
        sub_1BC62CFF8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC30A000, v24, v25, "%s: I was the first vc on a navigation controller, can't pop, attempting to abort", v27, 0xCu);
        v35 = v37;
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v35, -1, -1);
        MEMORY[0x1BCCF36A8](v27, -1, -1);

        (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      }
      objc_msgSend(v23, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
  }
  else
  {
    sub_1BC62BAF8();
    v12 = v1;
    v13 = sub_1BC62BB28();
    v14 = sub_1BC62CAC4();
    if (os_log_type_enabled(v13, v14))
    {
      v39 = v2;
      v15 = swift_slowAlloc();
      v38 = v3;
      v16 = (uint8_t *)v15;
      v40 = (id)swift_slowAlloc();
      v42 = (uint64_t)v40;
      *(_DWORD *)v16 = 136315138;
      v37 = (uint64_t)(v16 + 4);
      v17 = v12;
      v18 = objc_msgSend(v17, sel_description);
      v19 = sub_1BC62C680();
      v21 = v20;

      v41 = sub_1BC4991F0(v19, v21, &v42);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v13, v14, "%s: not on a navigation controller, can't pop, attempting to abort", v16, 0xCu);
      v22 = v40;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v22, -1, -1);
      MEMORY[0x1BCCF36A8](v16, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v39);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    objc_msgSend(v12, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

id sub_1BC548158()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingNecessaryScopesNotPresentViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalSharingOnboardingNecessaryScopesNotPresentViewController()
{
  return objc_opt_self();
}

double static Double.approximateDays(_:)(double a1)
{
  return a1 * 24.0 * 60.0 * 60.0;
}

Swift::Double __swiftcall Double.init(approximateDays:)(Swift::Double approximateDays)
{
  return approximateDays * 24.0 * 60.0 * 60.0;
}

double static Double.hours(_:)(double a1)
{
  return a1 * 60.0 * 60.0;
}

Swift::Double __swiftcall Double.init(hours:)(Swift::Double hours)
{
  return hours * 60.0 * 60.0;
}

double static Double.minutes(_:)(double a1)
{
  return a1 * 60.0;
}

Swift::Double __swiftcall Double.init(minutes:)(Swift::Double minutes)
{
  return minutes * 60.0;
}

void sub_1BC548238()
{
  __int128 *v0;
  uint64_t v1;
  _BYTE v2[40];

  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v1);
  sub_1BC396C10(v0, (uint64_t)v2);
  __asm { BR              X10 }
}

void sub_1BC5482BC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = *(void **)(v0 - 96);
  v2 = *(id *)(v0 - 104);
  v3 = v1;
  v4 = objc_msgSend(v2, sel_presentedViewController);
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v3;
    *(_QWORD *)(v0 - 120) = sub_1BC54FF38;
    *(_QWORD *)(v0 - 112) = v6;
    *(_QWORD *)(v0 - 152) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 - 144) = 1107296256;
    *(_QWORD *)(v0 - 136) = sub_1BC39BE70;
    *(_QWORD *)(v0 - 128) = &block_descriptor_31;
    v7 = _Block_copy((const void *)(v0 - 152));
    v8 = v2;
    v2 = v3;
    swift_release();
    objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 0, v7);
    _Block_release(v7);

    v3 = v5;
  }
  else
  {
    objc_msgSend(v2, sel_presentViewController_animated_completion_, v3, 1, 0);
  }

}

uint64_t sub_1BC548574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v5[2] = a4;
  v5[3] = a5;
  v5[4] = sub_1BC62C944();
  v5[5] = sub_1BC62C938();
  type metadata accessor for HealthRecordsViewRouter();
  v6 = (_QWORD *)swift_task_alloc();
  v5[6] = v6;
  *v6 = v5;
  v6[1] = sub_1BC5485F8;
  return sub_1BC5B9C78(0xD000000000000018, 0x80000001BC662B60);
}

uint64_t sub_1BC5485F8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v4;
  v2[1] = sub_1BC548664;
  return sub_1BC62C968();
}

uint64_t sub_1BC548664()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC548710()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v2, 1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BC548760(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  void *v14;
  uint64_t v15;
  char v16;
  id v17;
  id v18;
  char v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  id v26;
  id v27;
  unint64_t v28;
  void *v29;
  void *v30;
  char v31;
  char v32;
  id v33;
  id v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  id v45;
  id v46;
  id v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  id v53;
  id v54;
  id v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 8);
  if (!v4)
    goto LABEL_27;
  v5 = *(id *)(v1 + 16);
  if (!v5)
    goto LABEL_6;
  v6 = v5;
  v7 = (id)v4;
  v8 = objc_msgSend(v7, sel_viewControllers);
  sub_1BC34B6A0(0, &qword_1EF429570);
  v9 = sub_1BC62C878();

  sub_1BC6101DC((uint64_t)v6, v9);
  v11 = v10;
  v13 = v12;

  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0 || v11)
  {
LABEL_6:
    v14 = *(void **)(v2 + 24);
    if (v14)
    {
      sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
      v17 = (id)v4;
      v18 = v14;
      v19 = sub_1BC62CEB4();

      if ((v19 & 1) != 0)
      {
        if (!v5)
        {

          goto LABEL_27;
        }
        v5 = v5;
        v62 = v17;
        v20 = objc_msgSend(v62, sel_viewControllers);
        sub_1BC34B6A0(0, &qword_1EF429570);
        v21 = sub_1BC62C878();

        sub_1BC6101DC((uint64_t)v5, v21);
        v11 = v22;
        v24 = v23;

        swift_bridgeObjectRelease();
        if ((v24 & 1) != 0)
        {

        }
        else
        {
          sub_1BC550850(v2 + 32, (uint64_t)&v65, &qword_1EF436450, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
          sub_1BC550850((uint64_t)&v65, (uint64_t)&v66, &qword_1EF436450, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
          v25 = v66;
          if (v66)
          {
            v26 = v18;
            sub_1BC3582B4(&v65);
            v27 = objc_msgSend(v26, sel_viewControllers);
            v28 = sub_1BC62C878();

            sub_1BC6101DC(v25, v28);
            v30 = v29;
            v32 = v31;
            swift_bridgeObjectRelease();

            sub_1BC5507A4(&v65);
            if ((v32 & 1) == 0)
            {
              v15 = 0;
              v16 = 0;
              v14 = v30;
              goto LABEL_33;
            }
          }

        }
LABEL_19:
        v33 = v5;
        v34 = (id)v4;
        v35 = objc_msgSend(v34, sel_viewControllers);
        sub_1BC34B6A0(0, &qword_1EF429570);
        v36 = sub_1BC62C878();

        sub_1BC6101DC((uint64_t)v33, v36);
        v11 = v37;
        v39 = v38;

        swift_bridgeObjectRelease();
        if (v14)
        {
          if ((v39 & 1) == 0)
          {
            sub_1BC550850(v2 + 32, (uint64_t)&v64, &qword_1EF436450, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
            sub_1BC550850((uint64_t)&v64, (uint64_t)&v67, &qword_1EF436450, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
            v40 = v67;
            if (v67)
            {
              v60 = v34;
              v61 = v14;
              sub_1BC3582B4(&v64);
              v41 = objc_msgSend(v61, sel_viewControllers);
              v42 = sub_1BC62C878();

              sub_1BC6101DC(v40, v42);
              v15 = v43;
              LOBYTE(v41) = v44;
              swift_bridgeObjectRelease();

              sub_1BC5507A4(&v64);
              if ((v41 & 1) == 0)
              {
                v45 = v61;
                v16 = 1;
                goto LABEL_33;
              }

            }
          }
        }
        v46 = v33;
        v47 = v34;
        v48 = objc_msgSend(v47, sel_viewControllers);
        v49 = sub_1BC62C878();

        sub_1BC6101DC((uint64_t)v46, v49);
        v11 = v50;
        v52 = v51;

        swift_bridgeObjectRelease();
        if ((v52 & 1) == 0)
        {
          v53 = v47;
          v14 = 0;
          v15 = 0;
          v16 = 2;
          goto LABEL_33;
        }
LABEL_27:
        v4 = *(_QWORD *)(v2 + 24);
        if (v4)
        {
          sub_1BC550850(v2 + 32, (uint64_t)&v63, &qword_1EF436450, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
          sub_1BC550850((uint64_t)&v63, (uint64_t)&v68, &qword_1EF436450, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
          v11 = v68;
          if (!v68)
          {
LABEL_32:
            v14 = 0;
            v15 = 0;
            v16 = 4;
            v4 = 1;
            goto LABEL_33;
          }
          sub_1BC3582B4(&v63);
          v54 = (id)v4;
          v55 = objc_msgSend(v54, sel_viewControllers);
          sub_1BC34B6A0(0, &qword_1EF429570);
          v56 = sub_1BC62C878();

          sub_1BC6101DC(v11, v56);
          v11 = v57;
          LOBYTE(v55) = v58;
          swift_bridgeObjectRelease();

          sub_1BC5507A4(&v63);
          if ((v55 & 1) == 0)
          {
            v59 = v54;
            v14 = 0;
            v15 = 0;
            v16 = 3;
            goto LABEL_33;
          }
        }
        v11 = 0;
        goto LABEL_32;
      }

    }
    if (!v5)
      goto LABEL_27;
    goto LABEL_19;
  }
  v4 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 4;
LABEL_33:
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v11;
  *(_QWORD *)(a1 + 16) = v14;
  *(_QWORD *)(a1 + 24) = v15;
  *(_BYTE *)(a1 + 32) = v16;
}

void sub_1BC548CB8(uint64_t a1)
{
  void *v1;
  char **v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;

  v3 = a1 - 1;
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    if (v3 < 0)
      return;
    v2 = &selRef_viewIsAppearing_;
    v4 = objc_msgSend(v1, sel_viewControllers);
    sub_1BC34B6A0(0, &qword_1EF429570);
    v5 = sub_1BC62C878();

    if (!(v5 >> 62))
    {
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRetain();
  v6 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
LABEL_5:
  swift_bridgeObjectRelease();
  if (v3 < v6)
  {
    v7 = objc_msgSend(v1, v2[18]);
    v8 = sub_1BC62C878();

    if ((v8 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1BCCF24CC](v3, v8);
      goto LABEL_9;
    }
    if ((unint64_t)v3 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v9 = *(id *)(v8 + 8 * v3 + 32);
LABEL_9:
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
  }
}

uint64_t sub_1BC548E00()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_1BC384EB4(v0+ OBJC_IVAR____TtCC15HealthRecordsUI29ClinicalAccountUpgradeManagerP33_C1E9680787D6FC085CDD3D854B2FD8D912SessionState_loginSessionState, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1BC548E44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[7] = v0;
  v2 = sub_1BC62A7B4();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v3 = sub_1BC62BB34();
  v1[11] = v3;
  v1[12] = *(_QWORD *)(v3 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC548EDC()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t type;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BC62BAF8();
  swift_retain_n();
  v1 = sub_1BC62BB28();
  v2 = sub_1BC62CADC();
  if (os_log_type_enabled(v1, v2))
  {
    v23 = v0[12];
    v24 = v0[11];
    v25 = v0[14];
    type = v2;
    v3 = v0[10];
    v20 = v0[9];
    v5 = v0[7];
    v4 = v0[8];
    v6 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v26 = v21;
    *(_DWORD *)v6 = 136315394;
    v7 = *(_QWORD *)(v5 + 48);
    v8 = *(_QWORD *)(v5 + 56);
    swift_bridgeObjectRetain();
    v0[5] = sub_1BC4991F0(v7, v8, &v26);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v9 = objc_msgSend(*(id *)(v5 + 16), sel_identifier);
    sub_1BC62A79C();

    sub_1BC54FD84((unint64_t *)&qword_1EF429280, MEMORY[0x1E0CB09F0]);
    v10 = v4;
    v11 = sub_1BC62D52C();
    v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v3, v10);
    v0[6] = sub_1BC4991F0(v11, v13, &v26);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BC30A000, v1, type, "%s beginning upgrade of account %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v21, -1, -1);
    MEMORY[0x1BCCF36A8](v6, -1, -1);

    v14 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v14(v25, v24);
  }
  else
  {
    v15 = v0[14];
    v16 = v0[11];
    v17 = v0[12];
    swift_release_n();

    v14 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v14(v15, v16);
  }
  v0[15] = v14;
  v18 = (_QWORD *)swift_task_alloc();
  v0[16] = v18;
  *v18 = v0;
  v18[1] = sub_1BC549188;
  v18[16] = v0[7];
  return swift_task_switch();
}

uint64_t sub_1BC549188(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;

  v4 = (_QWORD *)*v2;
  v4[17] = a1;
  v4[18] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v6 = (_QWORD *)swift_task_alloc();
  v4[19] = v6;
  *v6 = v4;
  v6[1] = sub_1BC549228;
  return sub_1BC549CB4(a1);
}

uint64_t sub_1BC549228()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC54928C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC5492D8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 168);
  swift_release();
  sub_1BC54A40C(v1);

  return swift_task_switch();
}

uint64_t sub_1BC549328()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC549374()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;

  v1 = (void *)v0[18];
  v0[21] = v1;
  sub_1BC62BAF8();
  swift_retain();
  v2 = v1;
  swift_retain();
  v3 = v1;
  v4 = sub_1BC62BB28();
  v5 = sub_1BC62CAC4();
  if (os_log_type_enabled(v4, v5))
  {
    v20 = v0[13];
    v21 = (void (*)(uint64_t, uint64_t))v0[15];
    v19 = v0[11];
    v6 = v0[7];
    v7 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v22 = v18;
    *(_DWORD *)v7 = 136315394;
    v8 = *(_QWORD *)(v6 + 48);
    v9 = *(_QWORD *)(v6 + 56);
    swift_bridgeObjectRetain();
    v0[2] = sub_1BC4991F0(v8, v9, &v22);
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[3] = v1;
    v10 = v1;
    sub_1BC35E44C();
    v11 = sub_1BC62C6E0();
    v0[4] = sub_1BC4991F0(v11, v12, &v22);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v4, v5, "%s failed to initiate upgrading account: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v18, -1, -1);
    MEMORY[0x1BCCF36A8](v7, -1, -1);

    v21(v20, v19);
  }
  else
  {
    v13 = (void (*)(uint64_t, uint64_t))v0[15];
    v14 = v0[13];
    v15 = v0[11];
    swift_release_n();

    v13(v14, v15);
  }
  sub_1BC62C944();
  v16 = v1;
  v0[22] = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC549610()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;

  v1 = *(void **)(v0 + 160);
  *(_QWORD *)(v0 + 168) = v1;
  sub_1BC62BAF8();
  swift_retain();
  v2 = v1;
  swift_retain();
  v3 = v1;
  v4 = sub_1BC62BB28();
  v5 = sub_1BC62CAC4();
  if (os_log_type_enabled(v4, v5))
  {
    v20 = *(_QWORD *)(v0 + 104);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
    v19 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 56);
    v7 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v22 = v18;
    *(_DWORD *)v7 = 136315394;
    v8 = *(_QWORD *)(v6 + 48);
    v9 = *(_QWORD *)(v6 + 56);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_1BC4991F0(v8, v9, &v22);
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v1;
    v10 = v1;
    sub_1BC35E44C();
    v11 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 32) = sub_1BC4991F0(v11, v12, &v22);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v4, v5, "%s failed to initiate upgrading account: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v18, -1, -1);
    MEMORY[0x1BCCF36A8](v7, -1, -1);

    v21(v20, v19);
  }
  else
  {
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
    v14 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 88);
    swift_release_n();

    v13(v14, v15);
  }
  sub_1BC62C944();
  v16 = v1;
  *(_QWORD *)(v0 + 176) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC5498B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch();
}

uint64_t sub_1BC5498CC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE *v12;
  _BYTE *v13;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 128) + 16), sel_gateway);
  *(_QWORD *)(v0 + 136) = v1;
  if (!v1)
  {
    sub_1BC55089C();
    swift_allocError();
    *v12 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = v1;
  v3 = objc_msgSend(v1, sel_newerSupportedGatewayVersion);
  *(_QWORD *)(v0 + 144) = v3;
  if (!v3)
  {
    sub_1BC55089C();
    swift_allocError();
    *v13 = 2;
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = v3;
  v5 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 128) + 24) + 24), sel_healthStore);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EEE8]), sel_initWithHealthStore_, v5);
  *(_QWORD *)(v0 + 152) = v6;

  v7 = objc_msgSend(v4, sel_gatewayID);
  if (!v7)
  {
    sub_1BC62C680();
    v7 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 160) = v7;
  v8 = objc_msgSend(v4, sel_gatewayBatchID);
  if (!v8)
  {
    sub_1BC62C680();
    v8 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 168) = v8;
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1BC549B04;
  v9 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v10 = (_QWORD *)(v0 + 80);
  v10[1] = 0x40000000;
  v10[2] = sub_1BC38FC10;
  v10[3] = &block_descriptor_40;
  v10[4] = v9;
  objc_msgSend(v6, sel_fetchRemoteGatewayWithExternalID_batchID_completion_, v7, v8, v10);
  return swift_continuation_await();
}

uint64_t sub_1BC549B04()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 176) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC549B64()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  _BYTE *v8;

  v1 = *(void **)(v0 + 160);
  v2 = *(void **)(v0 + 120);

  v3 = objc_msgSend(v2, sel_status);
  v4 = *(void **)(v0 + 144);
  v5 = *(void **)(v0 + 152);
  v6 = *(void **)(v0 + 136);
  if (v3 == (id)1)
  {

    return (*(uint64_t (**)(void *))(v0 + 8))(v2);
  }
  else
  {
    sub_1BC55089C();
    swift_allocError();
    *v8 = 3;
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BC549C4C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = *(void **)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 160);
  v5 = *(void **)(v0 + 136);
  v4 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC549CB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[16] = a1;
  v2[17] = v1;
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v2[18] = swift_task_alloc();
  sub_1BC62C944();
  v2[19] = sub_1BC62C938();
  v2[20] = sub_1BC62C908();
  v2[21] = v3;
  return swift_task_switch();
}

uint64_t sub_1BC549D50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[18];
  v0[22] = *(_QWORD *)(v0[17] + 40);
  v2 = sub_1BC62A7B4();
  v0[23] = v2;
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v0[24] = v3;
  v3(v1, 1, 1, v2);
  return swift_task_switch();
}

uint64_t sub_1BC549DBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[22];
  v2 = v0[18];
  v3 = OBJC_IVAR____TtCC15HealthRecordsUI29ClinicalAccountUpgradeManagerP33_C1E9680787D6FC085CDD3D854B2FD8D912SessionState_loginSessionState;
  v0[25] = OBJC_IVAR____TtCC15HealthRecordsUI29ClinicalAccountUpgradeManagerP33_C1E9680787D6FC085CDD3D854B2FD8D912SessionState_loginSessionState;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_1BC54F8E0(v2, v4);
  swift_endAccess();
  sub_1BC384EB4(v2, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  return swift_task_switch();
}

uint64_t sub_1BC549E50()
{
  objc_super *v0;
  Class super_class;
  void *v2;
  id v3;
  id v4;
  objc_class *v5;
  char *v6;
  objc_class *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;

  super_class = v0[8].super_class;
  v2 = (void *)*((_QWORD *)super_class + 4);
  v3 = *(id *)(*((_QWORD *)super_class + 3) + 24);
  v4 = objc_msgSend(v2, sel_hk_window);
  if (!v4)
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F98]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = (objc_class *)type metadata accessor for ClinicalAccountLoginSession();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession] = 0;
  *(_QWORD *)&v6[OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore] = v3;
  *(_QWORD *)&v6[OBJC_IVAR___HRUIClinicalAccountLoginSession_presentationAnchor] = v4;
  *(_QWORD *)&v6[OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext] = 8;
  v0[7].receiver = v6;
  v0[7].super_class = v5;
  v0[13].receiver = objc_msgSendSuper2(v0 + 7, sel_init);
  v7 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v0[13].super_class = v7;
  if (qword_1EF428670 != -1)
    swift_once();
  v8 = qword_1EF4335E0;
  v9 = objc_msgSend((id)objc_opt_self(), sel_mainQueue);
  v10 = swift_allocObject();
  swift_weakInit();
  v0[3].receiver = sub_1BC54F958;
  v0[3].super_class = (Class)v10;
  v0[1].receiver = (id)MEMORY[0x1E0C809B0];
  v0[1].super_class = (Class)1107296256;
  v0[2].receiver = sub_1BC54AD2C;
  v0[2].super_class = (Class)&block_descriptor_55;
  v11 = _Block_copy(&v0[1]);
  swift_release();
  v0[14].receiver = -[objc_class addObserverForName:object:queue:usingBlock:](v7, sel_addObserverForName_object_queue_usingBlock_, v8, 0, v9, v11);
  _Block_release(v11);

  swift_unknownObjectRetain();
  return swift_task_switch();
}

uint64_t sub_1BC54A098()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  if (*(_QWORD *)(v1 + 112))
    objc_msgSend(*(id *)(v0 + 216), sel_removeObserver_);
  *(_QWORD *)(v1 + 112) = *(_QWORD *)(v0 + 224);
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BC54A0FC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;

  v2 = (void *)v0[16];
  v1 = v0[17];
  v3 = swift_allocObject();
  v0[29] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  v4 = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[30] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_1BC54A19C;
  return sub_1BC38F138(v0[16], 0, 0, (uint64_t)sub_1BC54F9A4, v3);
}

uint64_t sub_1BC54A19C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 248) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 256) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1BC54A218()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 192);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = objc_msgSend(*(id *)(v0 + 256), sel_state);
  sub_1BC62A79C();

  v2(v3, 0, 1, v1);
  return swift_task_switch();
}

uint64_t sub_1BC54A2A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[18];
  v2 = v0[22] + v0[25];
  swift_beginAccess();
  sub_1BC54F8E0(v1, v2);
  swift_endAccess();
  sub_1BC384EB4(v1, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  return swift_task_switch();
}

uint64_t sub_1BC54A330()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 208);

  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC54A3A0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 208);
  v1 = *(void **)(v0 + 216);
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BC54A40C(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v3 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v5 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v6 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  if (a1)
    a1 = (void *)sub_1BC62A550();
  v7 = objc_msgSend((id)objc_opt_self(), sel_basicAlertControllerWithTitle_message_internalError_, v4, v6, a1, 0xE000000000000000);

  objc_msgSend(*(id *)(v1 + 32), sel_presentViewController_animated_completion_, v7, 1, 0);
}

uint64_t sub_1BC54A5EC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC54A648();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC54A648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  char *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70[5];
  __int128 v71;
  __int128 v72;

  v1 = v0;
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v67 = (char *)&v57 - v3;
  v4 = sub_1BC62BB34();
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v63 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v57 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v57 - v15;
  v17 = sub_1BC62A358();
  if (!v17)
  {
    v71 = 0u;
    v72 = 0u;
LABEL_11:
    sub_1BC39BD2C((uint64_t)&v71);
    v64 = 0;
    goto LABEL_12;
  }
  v18 = v17;
  *(_QWORD *)&v71 = 0xD00000000000002DLL;
  *((_QWORD *)&v71 + 1) = 0x80000001BC653D50;
  sub_1BC62D184();
  if (*(_QWORD *)(v18 + 16) && (v19 = sub_1BC559254((uint64_t)v70), (v20 & 1) != 0))
  {
    sub_1BC375540(*(_QWORD *)(v18 + 56) + 32 * v19, (uint64_t)&v71);
  }
  else
  {
    v71 = 0u;
    v72 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1BC3DDAC0((uint64_t)v70);
  if (!*((_QWORD *)&v72 + 1))
    goto LABEL_11;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
  v21 = swift_dynamicCast();
  v22 = v70[0];
  if (!v21)
    v22 = 0;
  v64 = v22;
LABEL_12:
  v23 = sub_1BC62A358();
  if (v23)
  {
    v24 = v23;
    v68 = 0xD00000000000002BLL;
    v69 = 0x80000001BC653D80;
    sub_1BC62D184();
    if (*(_QWORD *)(v24 + 16) && (v25 = sub_1BC559254((uint64_t)v70), (v26 & 1) != 0))
    {
      sub_1BC375540(*(_QWORD *)(v24 + 56) + 32 * v25, (uint64_t)&v71);
    }
    else
    {
      v71 = 0u;
      v72 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1BC3DDAC0((uint64_t)v70);
    if (*((_QWORD *)&v72 + 1))
    {
      v27 = sub_1BC62A7B4();
      v28 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v16, v28 ^ 1u, 1, v27);
      goto LABEL_21;
    }
  }
  else
  {
    v71 = 0u;
    v72 = 0u;
  }
  sub_1BC39BD2C((uint64_t)&v71);
  v29 = sub_1BC62A7B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v16, 1, 1, v29);
LABEL_21:
  v30 = sub_1BC62A358();
  if (v30)
  {
    v31 = v30;
    *(_QWORD *)&v71 = 0xD00000000000002BLL;
    *((_QWORD *)&v71 + 1) = 0x80000001BC653DB0;
    sub_1BC62D184();
    if (*(_QWORD *)(v31 + 16) && (v32 = sub_1BC559254((uint64_t)v70), (v33 & 1) != 0))
    {
      sub_1BC375540(*(_QWORD *)(v31 + 56) + 32 * v32, (uint64_t)&v71);
    }
    else
    {
      v71 = 0u;
      v72 = 0u;
    }
    v34 = (uint64_t)v14;
    swift_bridgeObjectRelease();
    sub_1BC3DDAC0((uint64_t)v70);
    if (*((_QWORD *)&v72 + 1))
    {
      sub_1BC35E44C();
      if (swift_dynamicCast())
        v35 = v70[0];
      else
        v35 = 0;
      goto LABEL_32;
    }
  }
  else
  {
    v71 = 0u;
    v72 = 0u;
    v34 = (uint64_t)v14;
  }
  sub_1BC39BD2C((uint64_t)&v71);
  v35 = 0;
LABEL_32:
  sub_1BC62BAF8();
  sub_1BC34EA24((uint64_t)v16, v34);
  swift_retain();
  v36 = sub_1BC62BB28();
  v37 = v6;
  v38 = sub_1BC62CADC();
  if (os_log_type_enabled(v36, v38))
  {
    v39 = swift_slowAlloc();
    v59 = v35;
    v40 = v39;
    v41 = swift_slowAlloc();
    v62 = v9;
    v58 = v37;
    v42 = v41;
    v70[0] = v41;
    *(_DWORD *)v40 = 136315394;
    v60 = v16;
    v61 = v8;
    v43 = v34;
    v45 = *(_QWORD *)(v1 + 48);
    v44 = *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v71 = sub_1BC4991F0(v45, v44, v70);
    sub_1BC62CFF8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    sub_1BC34EA24(v43, (uint64_t)v11);
    v46 = sub_1BC62C6E0();
    *(_QWORD *)&v71 = sub_1BC4991F0(v46, v47, v70);
    v16 = v60;
    sub_1BC62CFF8();
    v8 = v61;
    swift_bridgeObjectRelease();
    sub_1BC384EB4(v43, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    _os_log_impl(&dword_1BC30A000, v36, v38, "%s received oauth completion notification for login state %s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    v9 = v62;
    MEMORY[0x1BCCF36A8](v42, -1, -1);
    v48 = v40;
    v35 = v59;
    MEMORY[0x1BCCF36A8](v48, -1, -1);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v58, v66);
  }
  else
  {
    swift_release();
    sub_1BC384EB4(v34, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v37, v66);
  }
  v49 = sub_1BC62C95C();
  v50 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v67, 1, 1, v49);
  sub_1BC34EA24((uint64_t)v16, (uint64_t)v11);
  v51 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v52 = (v9 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  v53 = (_QWORD *)swift_allocObject();
  v53[2] = 0;
  v53[3] = 0;
  v54 = v64;
  v53[4] = v1;
  v53[5] = v54;
  v55 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1BC550850((uint64_t)v11, (uint64_t)v53 + v51, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  *(_QWORD *)((char *)v53 + v52) = v35;
  swift_retain();
  sub_1BC5C2784(v50, (uint64_t)&unk_1EF436418, (uint64_t)v53);
  swift_release();
  return sub_1BC384EB4((uint64_t)v16, (unint64_t *)&qword_1EF42B210, v55);
}

uint64_t sub_1BC54AD2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_1BC62A364();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_1BC62A334();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BC54ADD0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  uint64_t v14;

  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a2;
  v10[5] = a3;
  v10[6] = a1;
  swift_retain();
  v11 = a3;
  v12 = a1;
  sub_1BC5C2784((uint64_t)v8, (uint64_t)&unk_1EF436408, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1BC54AEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1BC54AED8()
{
  uint64_t v0;

  sub_1BC62C944();
  *(_QWORD *)(v0 + 40) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC54AF40()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  swift_release();
  if (qword_1ED6A31B0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_1BC5556FC(*(void **)(v0 + 24), *(void **)(v0 + 32));
  objc_msgSend(*(id *)(v1 + 32), sel_presentViewController_animated_completion_, v2, 1, 0);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC54AFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v11;
  *v11 = v7;
  v11[1] = sub_1BC3781C0;
  return sub_1BC54B034(a5, a6, a7);
}

uint64_t sub_1BC54B034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_1BC62BB34();
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v6 = sub_1BC62A7B4();
  v4[20] = v6;
  v4[21] = *(_QWORD *)(v6 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC54B12C()
{
  _QWORD *v0;

  v0[25] = *(_QWORD *)(v0[13] + 40);
  v0[26] = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  return swift_task_switch();
}

uint64_t sub_1BC54B190()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 200);
  if (*(_QWORD *)(v1 + 112))
    objc_msgSend(*(id *)(v0 + 208), sel_removeObserver_);
  v2 = *(void **)(v0 + 208);
  *(_QWORD *)(v1 + 112) = 0;
  swift_unknownObjectRelease();

  return swift_task_switch();
}

uint64_t sub_1BC54B1FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t type;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = v0[20];
  v2 = v0[21];
  v3 = v0[19];
  sub_1BC34EA24(v0[11], v3);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[27] = v4;
  if (v4(v3, 1, v1) == 1)
  {
    sub_1BC384EB4(v0[19], (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v5 = (void *)v0[10];
    if (v5)
    {
      v6 = v5;
      v7 = (_QWORD *)swift_task_alloc();
      v0[29] = v7;
      *v7 = v0;
      v7[1] = sub_1BC54BDF4;
      return sub_1BC54BFB8((uint64_t)v6);
    }
    v13 = (void *)v0[12];
    sub_1BC62BAF8();
    swift_retain_n();
    v14 = v13;
    swift_retain();
    v15 = v13;
    v16 = sub_1BC62BB28();
    v17 = sub_1BC62CAC4();
    if (os_log_type_enabled(v16, v17))
    {
      type = v17;
      v18 = v0[22];
      v36 = v0[21];
      v35 = v0[20];
      v40 = v0[15];
      v19 = v0[13];
      v41 = v0[14];
      v42 = v0[16];
      v37 = v0[12];
      v20 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v43 = v38;
      *(_DWORD *)v20 = 136315650;
      v22 = *(_QWORD *)(v19 + 48);
      v21 = *(_QWORD *)(v19 + 56);
      swift_bridgeObjectRetain();
      v0[5] = sub_1BC4991F0(v22, v21, &v43);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v20 + 12) = 2080;
      v23 = objc_msgSend(*(id *)(v19 + 16), sel_identifier);
      sub_1BC62A79C();

      sub_1BC54FD84((unint64_t *)&qword_1EF429280, MEMORY[0x1E0CB09F0]);
      v24 = sub_1BC62D52C();
      v26 = v25;
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v18, v35);
      v0[6] = sub_1BC4991F0(v24, v26, &v43);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v20 + 22) = 2080;
      v0[7] = v37;
      v27 = v13;
      sub_1BC384E68(0, (unint64_t *)&unk_1ED6A4E80, (void (*)(uint64_t))sub_1BC35E44C);
      v28 = sub_1BC62C6E0();
      v0[8] = sub_1BC4991F0(v28, v29, &v43);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v16, type, "%s error logging in during upgrade of account %s: %s", (uint8_t *)v20, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v38, -1, -1);
      MEMORY[0x1BCCF36A8](v20, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
    }
    else
    {
      v31 = v0[15];
      v30 = v0[16];
      v32 = v0[14];
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    }
    v33 = v13;
    if (!v0[12])
      v33 = objc_msgSend((id)objc_opt_self(), sel_hk_error_userInfo_, 0, 0);
    v0[30] = v33;
    sub_1BC62C944();
    v34 = v13;
    v0[31] = sub_1BC62C938();
    sub_1BC62C908();
  }
  else
  {
    v9 = v0[24];
    v10 = v0[20];
    v11 = v0[19];
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[21] + 32);
    v0[28] = v12;
    v12(v9, v11, v10);
  }
  return swift_task_switch();
}

uint64_t sub_1BC54B68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 200)
     + OBJC_IVAR____TtCC15HealthRecordsUI29ClinicalAccountUpgradeManagerP33_C1E9680787D6FC085CDD3D854B2FD8D912SessionState_loginSessionState;
  swift_beginAccess();
  sub_1BC34EA24(v2, v1);
  return swift_task_switch();
}

uint64_t sub_1BC54B6F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 216))(v2, 1, v1) == 1)
  {
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 192), v1);
    sub_1BC384EB4(v2, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v3 = *(void **)(v0 + 80);
    if (v3)
    {
LABEL_3:
      v4 = v3;
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 232) = v5;
      *v5 = v0;
      v5[1] = sub_1BC54BDF4;
      return sub_1BC54BFB8((uint64_t)v4);
    }
    goto LABEL_6;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 224))(*(_QWORD *)(v0 + 184), v2, v1);
  sub_1BC54FD84((unint64_t *)&qword_1EF429288, MEMORY[0x1E0CB09D0]);
  if ((sub_1BC62C644() & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 160);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 8);
    v9(*(_QWORD *)(v0 + 184), v8);
    v9(v7, v8);
    v3 = *(void **)(v0 + 80);
    if (v3)
      goto LABEL_3;
LABEL_6:
    v10 = *(void **)(v0 + 96);
    sub_1BC62BAF8();
    swift_retain_n();
    v11 = v10;
    swift_retain();
    v12 = v10;
    v13 = sub_1BC62BB28();
    v14 = sub_1BC62CAC4();
    if (os_log_type_enabled(v13, v14))
    {
      type = v14;
      v15 = *(_QWORD *)(v0 + 176);
      v49 = *(_QWORD *)(v0 + 168);
      v48 = *(_QWORD *)(v0 + 160);
      v60 = *(_QWORD *)(v0 + 128);
      v56 = *(_QWORD *)(v0 + 120);
      v58 = *(_QWORD *)(v0 + 112);
      v16 = *(_QWORD *)(v0 + 104);
      v50 = *(_QWORD *)(v0 + 96);
      v17 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      v62 = v52;
      *(_DWORD *)v17 = 136315650;
      v18 = *(_QWORD *)(v16 + 48);
      v19 = *(_QWORD *)(v16 + 56);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 40) = sub_1BC4991F0(v18, v19, &v62);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v17 + 12) = 2080;
      v20 = objc_msgSend(*(id *)(v16 + 16), sel_identifier);
      sub_1BC62A79C();

      sub_1BC54FD84((unint64_t *)&qword_1EF429280, MEMORY[0x1E0CB09F0]);
      v21 = sub_1BC62D52C();
      v23 = v22;
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v15, v48);
      *(_QWORD *)(v0 + 48) = sub_1BC4991F0(v21, v23, &v62);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v17 + 22) = 2080;
      *(_QWORD *)(v0 + 56) = v50;
      v24 = v10;
      sub_1BC384E68(0, (unint64_t *)&unk_1ED6A4E80, (void (*)(uint64_t))sub_1BC35E44C);
      v25 = sub_1BC62C6E0();
      *(_QWORD *)(v0 + 64) = sub_1BC4991F0(v25, v26, &v62);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v13, type, "%s error logging in during upgrade of account %s: %s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v52, -1, -1);
      MEMORY[0x1BCCF36A8](v17, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v60, v58);
    }
    else
    {
      v44 = *(_QWORD *)(v0 + 120);
      v43 = *(_QWORD *)(v0 + 128);
      v45 = *(_QWORD *)(v0 + 112);
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
    }
    v46 = v10;
    if (!*(_QWORD *)(v0 + 96))
      v46 = objc_msgSend((id)objc_opt_self(), sel_hk_error_userInfo_, 0, 0);
    *(_QWORD *)(v0 + 240) = v46;
    sub_1BC62C944();
    v47 = v10;
    *(_QWORD *)(v0 + 248) = sub_1BC62C938();
    sub_1BC62C908();
    return swift_task_switch();
  }
  sub_1BC62BAF8();
  swift_retain_n();
  v27 = sub_1BC62BB28();
  v28 = sub_1BC62CADC();
  v29 = os_log_type_enabled(v27, v28);
  v31 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 192);
  v32 = *(_QWORD *)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 168);
  v34 = *(_QWORD *)(v0 + 136);
  v59 = *(_QWORD *)(v0 + 120);
  v35 = *(_QWORD *)(v0 + 104);
  v61 = *(_QWORD *)(v0 + 112);
  if (v29)
  {
    v57 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)typea = *(_QWORD *)(v0 + 184);
    v36 = (uint8_t *)swift_slowAlloc();
    v53 = v30;
    v37 = swift_slowAlloc();
    v62 = v37;
    v51 = v33;
    *(_DWORD *)v36 = 136315138;
    v39 = *(_QWORD *)(v35 + 48);
    v38 = *(_QWORD *)(v35 + 56);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 72) = sub_1BC4991F0(v39, v38, &v62);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BC30A000, v27, v28, "%s received the oauth completion notification but for a different login session state, will ignore and not attempt to replace the account", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v37, -1, -1);
    MEMORY[0x1BCCF36A8](v36, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v34, v61);
    v40 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v40(*(_QWORD *)typea, v57);
    v41 = v53;
    v42 = v57;
  }
  else
  {

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v34, v61);
    v40 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v40(v31, v32);
    v41 = v30;
    v42 = v32;
  }
  v40(v41, v42);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC54BDF4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC54BE48()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC54BECC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  swift_release();
  if (qword_1ED6A31B0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = sub_1BC5556FC(0, v1);
  objc_msgSend(*(id *)(v2 + 32), sel_presentViewController_animated_completion_, v3, 1, 0);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC54BFB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[16] = a1;
  v2[17] = v1;
  v3 = sub_1BC62A7B4();
  v2[18] = v3;
  v2[19] = *(_QWORD *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v4 = sub_1BC62BB34();
  v2[21] = v4;
  v2[22] = *(_QWORD *)(v4 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  sub_1BC62C944();
  v2[26] = sub_1BC62C938();
  v2[27] = sub_1BC62C908();
  v2[28] = v5;
  return swift_task_switch();
}

uint64_t sub_1BC54C090()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  id v28;
  NSObject *log;
  uint64_t v30;
  os_log_type_t type;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = (void *)v0[16];
  sub_1BC62BAF8();
  swift_retain_n();
  v2 = v1;
  v3 = sub_1BC62BB28();
  v4 = sub_1BC62CADC();
  if (os_log_type_enabled(v3, v4))
  {
    v32 = v0[22];
    v33 = v0[21];
    v34 = v0[25];
    type = v4;
    v5 = v0[20];
    v7 = v0[17];
    v6 = v0[18];
    v26 = v0[19];
    v28 = (id)v0[16];
    v8 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v35 = v30;
    *(_DWORD *)v8 = 136315650;
    log = v3;
    v9 = *(_QWORD *)(v7 + 48);
    v10 = *(_QWORD *)(v7 + 56);
    swift_bridgeObjectRetain();
    v0[13] = sub_1BC4991F0(v9, v10, &v35);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v11 = objc_msgSend(*(id *)(v7 + 16), sel_identifier);
    sub_1BC62A79C();

    sub_1BC54FD84((unint64_t *)&qword_1EF429280, MEMORY[0x1E0CB09F0]);
    v12 = sub_1BC62D52C();
    v14 = v13;
    v27 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v27(v5, v6);
    v0[14] = sub_1BC4991F0(v12, v14, &v35);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 22) = 2080;
    v15 = objc_msgSend(v28, sel_identifier);
    sub_1BC62A79C();

    v16 = sub_1BC62D52C();
    v18 = v17;
    v27(v5, v6);
    v0[15] = sub_1BC4991F0(v16, v18, &v35);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, log, type, "%s beginning to replace account %s with new account %s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v30, -1, -1);
    MEMORY[0x1BCCF36A8](v8, -1, -1);

    v19 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v19(v34, v33);
  }
  else
  {
    v20 = v0[25];
    v21 = v0[21];
    v22 = v0[22];
    v23 = (void *)v0[16];
    swift_release_n();

    v19 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v19(v20, v21);
  }
  v0[29] = v19;
  v24 = (_QWORD *)swift_task_alloc();
  v0[30] = v24;
  *v24 = v0;
  v24[1] = sub_1BC54C3E8;
  return sub_1BC54CEFC(v0[16]);
}

uint64_t sub_1BC54C3E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 248) = a1;
  *(_QWORD *)(v3 + 256) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC54C450()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;

  v1 = *(void **)(v0 + 248);
  if (v1)
  {
    *(_QWORD *)(v0 + 264) = *(_QWORD *)(*(_QWORD *)(v0 + 136) + 24);
    v2 = v1;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v3;
    *v3 = v0;
    v3[1] = sub_1BC54C508;
    return sub_1BC5C5060((uint64_t)v2);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BC54C508(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;

  v3 = *v1;
  v4 = *v1 + 16;
  v5 = *(void **)(*v1 + 248);
  v6 = *v1;
  *(_QWORD *)(*v1 + 280) = a1;
  swift_task_dealloc();

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 288) = v7;
  *v7 = v6;
  v7[1] = sub_1BC54C598;
  return sub_1BC54DE5C(v4, a1);
}

uint64_t sub_1BC54C598()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC54C5E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[17];
  sub_1BC548238();
  v2 = *(_QWORD *)(v1 + 16);
  v0[37] = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[38] = v3;
  *v3 = v0;
  v3[1] = sub_1BC54C644;
  return sub_1BC583570(v2);
}

uint64_t sub_1BC54C644()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC54C6A4()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;

  swift_release();
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1EF428680 != -1)
    swift_once();
  v2 = *(void **)(v0 + 280);
  v3 = *(void **)(v0 + 248);
  objc_msgSend(v1, sel_postNotificationName_object_, qword_1EF4335F0, *(_QWORD *)(v0 + 136));

  sub_1BC397854(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC54FDC4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC54C794()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;

  v1 = *(void **)(v0 + 256);
  swift_release();
  sub_1BC62BAF8();
  v2 = v1;
  v3 = v1;
  v4 = sub_1BC62BB28();
  v5 = sub_1BC62CAD0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 256);
    v18 = *(_QWORD *)(v0 + 192);
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v7 = *(_QWORD *)(v0 + 168);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v20 = v9;
    *(_QWORD *)(v0 + 56) = v6;
    v10 = v6;
    sub_1BC35E44C();
    v11 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 64) = sub_1BC4991F0(v11, v12, &v20);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v4, v5, "Failed to persist and migrate upgraded account: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v9, -1, -1);
    MEMORY[0x1BCCF36A8](v8, -1, -1);

    v19(v18, v7);
  }
  else
  {
    v13 = *(void **)(v0 + 256);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v15 = *(_QWORD *)(v0 + 192);
    v16 = *(_QWORD *)(v0 + 168);

    v14(v15, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC54C9B4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  void *v42;
  uint64_t v43;

  v1 = *(void **)(v0 + 312);
  swift_release();
  sub_1BC62BAF8();
  swift_retain_n();
  v2 = v1;
  swift_retain();
  v3 = v1;
  v4 = sub_1BC62BB28();
  v5 = sub_1BC62CAC4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 312);
    v32 = *(id *)(v0 + 296);
    v40 = *(_QWORD *)(v0 + 184);
    v41 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v38 = *(_QWORD *)(v0 + 168);
    type = v5;
    v7 = *(_QWORD *)(v0 + 160);
    v34 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 136);
    v33 = *(_QWORD *)(v0 + 144);
    v9 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v43 = v35;
    *(_DWORD *)v9 = 136315650;
    v11 = *(_QWORD *)(v8 + 48);
    v10 = *(_QWORD *)(v8 + 56);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 72) = sub_1BC4991F0(v11, v10, &v43);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    v12 = objc_msgSend(v32, sel_identifier);
    sub_1BC62A79C();

    sub_1BC54FD84((unint64_t *)&qword_1EF429280, MEMORY[0x1E0CB09F0]);
    v13 = sub_1BC62D52C();
    v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v7, v33);
    *(_QWORD *)(v0 + 80) = sub_1BC4991F0(v13, v15, &v43);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 22) = 2080;
    *(_QWORD *)(v0 + 88) = v6;
    v16 = v6;
    sub_1BC35E44C();
    v17 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 96) = sub_1BC4991F0(v17, v18, &v43);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v4, type, "%s failed to delete old account during upgrade of account %s: %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v35, -1, -1);
    MEMORY[0x1BCCF36A8](v9, -1, -1);

    v41(v40, v38);
  }
  else
  {
    v19 = *(void **)(v0 + 312);
    v20 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v21 = *(_QWORD *)(v0 + 184);
    v22 = *(_QWORD *)(v0 + 168);
    swift_release_n();

    v20(v21, v22);
  }
  v23 = (void *)objc_opt_self();
  if (qword_1ED6A4888 != -1)
    swift_once();
  v24 = *(void **)(v0 + 312);
  v42 = *(void **)(v0 + 280);
  *(_QWORD *)typea = *(_QWORD *)(v0 + 136);
  v39 = *(void **)(v0 + 248);
  v25 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();

  swift_bridgeObjectRelease();
  v26 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v27 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();

  swift_bridgeObjectRelease();
  v28 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v29 = (void *)sub_1BC62A550();
  v30 = objc_msgSend(v23, sel_basicAlertControllerWithTitle_message_internalError_, v26, v28, v29, 0xE000000000000000);

  objc_msgSend(*(id *)(*(_QWORD *)typea + 32), sel_presentViewController_animated_completion_, v30, 1, 0);
  sub_1BC397854(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC54FDC4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC54CEFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[25] = a1;
  v2[26] = v1;
  v3 = sub_1BC62A7B4();
  v2[27] = v3;
  v2[28] = *(_QWORD *)(v3 - 8);
  v2[29] = swift_task_alloc();
  v4 = sub_1BC62BB34();
  v2[30] = v4;
  v2[31] = *(_QWORD *)(v4 - 8);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC54CFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  *(_QWORD *)(v0 + 296) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = *(void **)(v0 + 200);
    v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0 + 208) + 24) + 24);
    *(_QWORD *)(v0 + 304) = v4;
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1BC54D1B4;
    v5 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    v6 = (_QWORD *)(v0 + 80);
    v6[1] = 0x40000000;
    v6[2] = sub_1BC38FC10;
    v6[3] = &block_descriptor_34_1;
    v6[4] = v5;
    v7 = v3;
    objc_msgSend(v4, sel_persistEphemeralAccount_triggerIngestion_completion_, v2, 1, v6);
    return swift_continuation_await();
  }
  else
  {
    sub_1BC62BAF8();
    v9 = sub_1BC62BB28();
    v10 = sub_1BC62CAD0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1BC30A000, v9, v10, "ClinicalAccountUpgradeManager got a real account instead of an ephemeral account during account upgrade, won't attempt to persist", v11, 2u);
      MEMORY[0x1BCCF36A8](v11, -1, -1);
    }
    v12 = *(_QWORD *)(v0 + 272);
    v13 = *(_QWORD *)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 248);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1BC54D1B4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 312) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC54D214()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = (void *)v0[38];
  v2 = (void *)v0[15];
  v0[40] = v2;
  v3 = v2;

  if (qword_1ED6A3198 != -1)
    swift_once();
  v4 = *(void **)(v0[26] + 16);
  v0[41] = v4;
  v5 = objc_msgSend(v4, sel_gateway);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_baseURL);

    v8 = v0[35];
    if (v7)
    {
      sub_1BC62A5BC();

      v9 = sub_1BC62A604();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
    }
    else
    {
      v9 = sub_1BC62A604();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    }
    v12 = v0[36];
    sub_1BC550850(v0[35], v12, (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BC62A604();
    v13 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v12, 1, v9) != 1)
    {
      v15 = v0[36];
      v14 = (void *)sub_1BC62A598();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v9);
      goto LABEL_11;
    }
  }
  else
  {
    v10 = v0[36];
    v11 = sub_1BC62A604();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  }
  sub_1BC384EB4(v0[36], (unint64_t *)&qword_1EF42B258, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v14 = 0;
LABEL_11:
  sub_1BC4E371C(12, 8, v14);

  v16 = (_QWORD *)swift_task_alloc();
  v0[42] = v16;
  *v16 = v0;
  v16[1] = sub_1BC54D41C;
  return sub_1BC54E81C((uint64_t)v3);
}

uint64_t sub_1BC54D41C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 344) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    *(_QWORD *)(v4 + 352) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1BC54D498()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 200);

  v2 = *(_QWORD *)(v0 + 352);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1BC54D528()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t type;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[2];

  v2 = *(void **)(v0 + 304);
  v1 = *(void **)(v0 + 312);
  swift_willThrow();

  sub_1BC62BAF8();
  swift_retain_n();
  v3 = v1;
  swift_retain();
  v4 = v1;
  v5 = sub_1BC62BB28();
  v6 = sub_1BC62CAC4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 312);
    v29 = *(_QWORD *)(v0 + 248);
    v30 = *(_QWORD *)(v0 + 240);
    v31 = *(_QWORD *)(v0 + 264);
    type = v6;
    v8 = *(_QWORD *)(v0 + 232);
    v26 = *(_QWORD *)(v0 + 224);
    v9 = *(_QWORD *)(v0 + 208);
    v25 = *(_QWORD *)(v0 + 216);
    v10 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v32[0] = v27;
    *(_DWORD *)v10 = 136315650;
    v11 = *(_QWORD *)(v9 + 48);
    v12 = *(_QWORD *)(v9 + 56);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 128) = sub_1BC4991F0(v11, v12, v32);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    v13 = objc_msgSend(*(id *)(v9 + 16), sel_identifier);
    sub_1BC62A79C();

    sub_1BC54FD84((unint64_t *)&qword_1EF429280, MEMORY[0x1E0CB09F0]);
    v14 = sub_1BC62D52C();
    v16 = v15;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v8, v25);
    *(_QWORD *)(v0 + 136) = sub_1BC4991F0(v14, v16, v32);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 22) = 2080;
    *(_QWORD *)(v0 + 144) = v7;
    v17 = v7;
    sub_1BC35E44C();
    v18 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 152) = sub_1BC4991F0(v18, v19, v32);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v5, type, "%s failed to persist new account during upgrade of account %s: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v27, -1, -1);
    MEMORY[0x1BCCF36A8](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    v20 = *(void **)(v0 + 312);
    v21 = *(_QWORD *)(v0 + 264);
    v22 = *(_QWORD *)(v0 + 240);
    v23 = *(_QWORD *)(v0 + 248);
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  *(_QWORD *)(v0 + 360) = objc_msgSend(*(id *)(v0 + 296), sel_gateway);
  sub_1BC62C944();
  *(_QWORD *)(v0 + 368) = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC54D8B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  swift_release();
  if (qword_1ED6A31B0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = sub_1BC5556FC(v1, *(void **)(v0 + 312));
  objc_msgSend(*(id *)(v2 + 32), sel_presentViewController_animated_completion_, v3, 1, 0);

  return swift_task_switch();
}

uint64_t sub_1BC54D960()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 312);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1BC54D9F0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  NSObject *log;
  uint64_t v39;
  os_log_type_t type;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(void **)(v0 + 344);
  v2 = *(void **)(v0 + 320);
  sub_1BC62BAF8();
  swift_retain_n();
  v3 = v1;
  v4 = v2;
  swift_retain();
  v5 = v1;
  v6 = sub_1BC62BB28();
  v7 = sub_1BC62CAC4();
  if (os_log_type_enabled(v6, v7))
  {
    v37 = *(id *)(v0 + 344);
    v8 = *(void **)(v0 + 320);
    v36 = *(id *)(v0 + 328);
    v34 = v8;
    v44 = *(_QWORD *)(v0 + 256);
    v42 = *(_QWORD *)(v0 + 248);
    v43 = *(_QWORD *)(v0 + 240);
    type = v7;
    v9 = *(_QWORD *)(v0 + 232);
    v35 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 216);
    v41 = *(void **)(v0 + 200);
    log = v6;
    v12 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v45 = v39;
    *(_DWORD *)v12 = 136315906;
    v13 = *(_QWORD *)(v11 + 48);
    v14 = *(_QWORD *)(v11 + 56);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 160) = sub_1BC4991F0(v13, v14, &v45);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v12 + 12) = 2080;
    v15 = objc_msgSend(v8, sel_identifier);
    sub_1BC62A79C();

    sub_1BC54FD84((unint64_t *)&qword_1EF429280, MEMORY[0x1E0CB09F0]);
    v16 = sub_1BC62D52C();
    v18 = v17;
    v19 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v19(v9, v10);
    *(_QWORD *)(v0 + 168) = sub_1BC4991F0(v16, v18, &v45);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 22) = 2080;
    v20 = objc_msgSend(v36, sel_identifier);
    sub_1BC62A79C();

    v21 = sub_1BC62D52C();
    v23 = v22;
    v19(v9, v10);
    *(_QWORD *)(v0 + 176) = sub_1BC4991F0(v21, v23, &v45);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v12 + 32) = 2080;
    *(_QWORD *)(v0 + 184) = v37;
    v24 = v37;
    sub_1BC35E44C();
    v25 = sub_1BC62C6E0();
    *(_QWORD *)(v0 + 192) = sub_1BC4991F0(v25, v26, &v45);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, log, type, "%s failed to apply existing Oslo properties to new account %s during upgrade of account %s: %s", (uint8_t *)v12, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v39, -1, -1);
    MEMORY[0x1BCCF36A8](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v43);
  }
  else
  {
    v27 = *(void **)(v0 + 344);
    v28 = *(void **)(v0 + 320);
    v30 = *(_QWORD *)(v0 + 248);
    v29 = *(_QWORD *)(v0 + 256);
    v31 = *(_QWORD *)(v0 + 240);

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  }
  v32 = *(_QWORD *)(v0 + 320);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v32);
}

uint64_t sub_1BC54DE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[38] = a2;
  v3[39] = v2;
  v3[37] = a1;
  sub_1BC62C944();
  v3[40] = sub_1BC62C938();
  sub_1BC62C908();
  return swift_task_switch();
}

void sub_1BC54DECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  __int128 *v5;
  id *v6;

  v5 = (__int128 *)(v0 + 56);
  v6 = (id *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 312);
  swift_release();
  sub_1BC550590(*(void **)(v1 + 16), *(void **)(v1 + 32), (_QWORD *)(v0 + 16));
  sub_1BC550850(v0 + 48, v0 + 272, &qword_1EF436450, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
  sub_1BC550850(v0 + 272, v0 + 280, &qword_1EF436450, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
  v2 = *(_QWORD *)(v0 + 280);
  if (v2 && *(_QWORD *)(v2 + qword_1EF435ED0))
  {
    sub_1BC3582B4((id *)(v0 + 272));
    swift_retain();
    sub_1BC62BEAC();
    swift_release();
    sub_1BC5507A4((id *)(v0 + 272));
  }
  sub_1BC550850(v0 + 32, (uint64_t)v6, &qword_1EF436458, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineViewController);
  sub_1BC550850((uint64_t)v6, v0 + 200, &qword_1EF436458, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineViewController);
  v3 = *(_QWORD *)(v0 + 200);
  if (v3)
  {
    if (*(_QWORD *)(v3 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountStateCancellable))
    {
      sub_1BC3582B4(v6);
      swift_retain();
      sub_1BC62BEAC();
      swift_release();
      sub_1BC5507A4(v6);
    }
  }
  v4 = *(void **)(v0 + 304);
  sub_1BC548760((uint64_t)v5);
  sub_1BC54F3EC(v4);
  sub_1BC396C10(v5, v0 + 96);
  __asm { BR              X10 }
}

uint64_t sub_1BC54E0D0()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id *v13;
  void *v14;
  id *v15;

  if (*(_QWORD *)(v1 + 112) >= *(_QWORD *)(v1 + 104))
    v6 = *(_QWORD *)(v1 + 104);
  else
    v6 = *(_QWORD *)(v1 + 112);
  v7 = v3;
  sub_1BC548CB8(v6);
  v9 = v8;
  sub_1BC397854(*(_QWORD *)(v5 - 104), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC5507CC);

  sub_1BC5506FC(v1 + 24, (uint64_t)v2);
  sub_1BC5507A4(v2);
  sub_1BC5507A4(*(id **)(v5 - 96));
  sub_1BC5506FC(v1 + 40, (uint64_t)v13);
  sub_1BC5507A4(v13);
  sub_1BC5507A4(v15);
  v10 = v14;
  v11 = *(_QWORD *)(v1 + 296);
  *(_QWORD *)v11 = v10;
  *(_QWORD *)(v11 + 8) = v0;
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = v9;
  *(_BYTE *)(v11 + 32) = 1;
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1BC54E81C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_1BC62A7B4();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  sub_1BC384E68(0, (unint64_t *)&qword_1ED6A4EA0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC54E8D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  _QWORD *v24;

  v1 = *(void **)(*(_QWORD *)(v0 + 24) + 16);
  *(_QWORD *)(v0 + 88) = v1;
  if (objc_msgSend(v1, sel_isSharingToProvider))
  {
    v2 = objc_msgSend(v1, sel_clinicalSharingStatus);
    *(_QWORD *)(v0 + 96) = v2;
    v3 = objc_msgSend(v2, sel_firstSharedDate);
    v4 = *(_QWORD *)(v0 + 80);
    if (v3)
    {
      v5 = v3;
      sub_1BC62A724();

      v6 = sub_1BC62A760();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 0, 1, v6);
    }
    else
    {
      v6 = sub_1BC62A760();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
    }
    v9 = *(_QWORD *)(v0 + 72);
    sub_1BC62A760();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v9, 1, 1, v6);
    v10 = objc_msgSend(v2, sel_featureStatus);
    v11 = objc_msgSend(v2, sel_userStatus);
    v12 = objc_msgSend(v2, sel_primaryDeviceName);
    if (v12)
    {
      v13 = v12;
      v14 = sub_1BC62C680();
      v16 = v15;

    }
    else
    {
      v14 = 0;
      v16 = 0;
    }
    v18 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 80);
    v19 = *(void **)(v0 + 16);
    v20 = *(_QWORD *)(v0 + 24);
    v21 = objc_allocWithZone(MEMORY[0x1E0D2EF00]);
    v22 = sub_1BC54F798(v17, v18, (uint64_t)v10, (uint64_t)v11, 3, v14, v16);
    *(_QWORD *)(v0 + 104) = v22;
    *(_QWORD *)(v0 + 112) = *(_QWORD *)(v20 + 24);
    v23 = objc_msgSend(v19, sel_identifier);
    sub_1BC62A79C();

    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v24;
    *v24 = v0;
    v24[1] = sub_1BC54EB60;
    return sub_1BC5C55C4(*(_QWORD *)(v0 + 64), (uint64_t)v22);
  }
  else
  {
    v7 = *(id *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_1BC54EB60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  v4 = *(_QWORD *)(*v1 + 32);
  v5 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(_QWORD *)(v2 + 136) = v6;
  v6(v3, v4);
  return swift_task_switch();
}

uint64_t sub_1BC54EBF0()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 88), sel_identifier);
  sub_1BC62A79C();

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v2;
  *v2 = v0;
  v2[1] = sub_1BC54EC6C;
  return sub_1BC5C5B30(*(_QWORD *)(v0 + 56));
}

uint64_t sub_1BC54EC6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = *v2;
  v5 = *(void (**)(uint64_t, uint64_t))(*v2 + 136);
  v6 = *(_QWORD *)(*v2 + 56);
  v7 = *(_QWORD *)(*v2 + 32);
  *(_QWORD *)(*v2 + 152) = v1;
  swift_task_dealloc();
  v5(v6, v7);
  if (!v1)
    *(_QWORD *)(v4 + 160) = a1;
  return swift_task_switch();
}

uint64_t sub_1BC54ECFC()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  sub_1BC62A79C();

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v2;
  *v2 = v0;
  v2[1] = sub_1BC54ED7C;
  return sub_1BC5C5D24(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1BC54ED7C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BC54EE10()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 96);
  v2 = *(void **)(v0 + 104);
  v3 = *(id *)(v0 + 16);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC54EE88()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC54EF0C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC54EF90()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_1BC54F014(void *a1, void *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  id v28;
  id v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  void (*v32)(uint64_t);
  uint64_t v33;
  void (*v34)(uint64_t);
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(uint64_t);
  char *v40;
  char *v41;

  v4 = sub_1BC62A7B4();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357210();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, v5);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v40 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v40 - v20;
  type metadata accessor for MedicalRecordTimelineViewController();
  v22 = swift_dynamicCastClass();
  if (!v22)
    return 0;
  v40 = v8;
  v41 = v15;
  v23 = a2;
  v24 = *(void **)(v22 + OBJC_IVAR___HRMedicalRecordTimelineViewController_account);
  if (v24)
  {
    v25 = a1;
    v26 = objc_msgSend(v24, sel_identifier);
    sub_1BC62A79C();

    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v27(v21, 0, 1, v4);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v27(v21, 1, 1, v4);
    v28 = a1;
  }
  v29 = objc_msgSend(v23, sel_identifier, v40);
  sub_1BC62A79C();

  v27(v18, 0, 1, v4);
  v30 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1BC34EA24((uint64_t)v21, (uint64_t)v12);
  sub_1BC34EA24((uint64_t)v18, v30);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v31((uint64_t)v12, 1, v4) == 1)
  {

    v32 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC384EB4((uint64_t)v18, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    sub_1BC384EB4((uint64_t)v21, (unint64_t *)&qword_1EF42B210, v32);
    if (v31(v30, 1, v4) == 1)
    {
      sub_1BC384EB4((uint64_t)v12, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      return 1;
    }
    goto LABEL_10;
  }
  v33 = (uint64_t)v41;
  sub_1BC34EA24((uint64_t)v12, (uint64_t)v41);
  if (v31(v30, 1, v4) == 1)
  {

    v34 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC384EB4((uint64_t)v18, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    sub_1BC384EB4((uint64_t)v21, (unint64_t *)&qword_1EF42B210, v34);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v33, v4);
LABEL_10:
    sub_1BC550814((uint64_t)v12);
    return 0;
  }
  v35 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v40, v30, v4);
  sub_1BC54FD84((unint64_t *)&qword_1EF429288, MEMORY[0x1E0CB09D0]);
  v36 = sub_1BC62C644();

  v37 = *(void (**)(char *, uint64_t))(v6 + 8);
  v37(v35, v4);
  v38 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1BC384EB4((uint64_t)v18, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  sub_1BC384EB4((uint64_t)v21, (unint64_t *)&qword_1EF42B210, v38);
  v37((char *)v33, v4);
  sub_1BC384EB4((uint64_t)v12, (unint64_t *)&qword_1EF42B210, v38);
  return (v36 & 1) != 0;
}

id sub_1BC54F3EC(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  char *v5;
  id v6;
  char v8;

  if (qword_1ED6A31B0 != -1)
    swift_once();
  v3 = *(void **)(*(_QWORD *)(v1 + 24) + 16);
  v8 = 0;
  v4 = objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
  v5 = sub_1BC537354(a1, v3, &v8, 0, 0);
  if (swift_dynamicCastClass())
    sub_1BC538B40();
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v5);
  objc_msgSend(v6, sel_setModalPresentationStyle_, 2);

  return v6;
}

uint64_t sub_1BC54F4D0(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1BC4DE3DC(v3);
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10) = v7;
      sub_1BC62C890();
      return v10;
    }
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC54F5B8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalAccountUpgradeManager()
{
  return objc_opt_self();
}

uint64_t sub_1BC54F61C()
{
  return type metadata accessor for ClinicalAccountUpgradeManager.SessionState();
}

uint64_t type metadata accessor for ClinicalAccountUpgradeManager.SessionState()
{
  uint64_t result;

  result = qword_1EF436310;
  if (!qword_1EF436310)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC54F660()
{
  unint64_t v0;

  sub_1BC384E68(319, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BC54F6F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC54F730 + 4 * byte_1BC647AB0[a1]))(0x206E776F6E6B6E75, 0xED0000726F727265);
}

unint64_t sub_1BC54F730()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1BC54F74C()
{
  return 0xD000000000000025;
}

uint64_t sub_1BC54F784()
{
  unsigned __int8 *v0;

  return sub_1BC54F6F0(*v0);
}

id sub_1BC54F798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;

  v8 = v7;
  v14 = sub_1BC62A760();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  v17 = 0;
  if (v16(a1, 1, v14) != 1)
  {
    v17 = (void *)sub_1BC62A700();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  }
  if (v16(a2, 1, v14) != 1)
  {
    v18 = (void *)sub_1BC62A700();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a2, v14);
    v19 = a3;
    if (a7)
      goto LABEL_5;
LABEL_7:
    v20 = 0;
    goto LABEL_8;
  }
  v18 = 0;
  v19 = a3;
  if (!a7)
    goto LABEL_7;
LABEL_5:
  v20 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
LABEL_8:
  v21 = objc_msgSend(v8, sel_initWithFirstSharedDate_lastSharedDate_featureStatus_userStatus_multiDeviceStatus_primaryDeviceName_, v17, v18, v19, a4, a5, v20, a6);

  return v21;
}

uint64_t sub_1BC54F8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC54F934()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC54F958()
{
  return sub_1BC54A5EC();
}

uint64_t block_copy_helper_54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_54()
{
  return swift_release();
}

uint64_t sub_1BC54F978()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC54F9A4(void *a1)
{
  uint64_t v1;

  return sub_1BC54ADD0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1BC54F9AC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC54F9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1BC377F18;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

uint64_t *sub_1BC54FA50(void *a1, uint64_t a2, void *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  unint64_t v20;

  v4 = v3;
  v8 = *v4;
  v9 = sub_1BC62A7B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClinicalAccountUpgradeManager.SessionState();
  v13 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v13 + 112) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v13+ OBJC_IVAR____TtCC15HealthRecordsUI29ClinicalAccountUpgradeManagerP33_C1E9680787D6FC085CDD3D854B2FD8D912SessionState_loginSessionState, 1, 1, v9);
  v4[2] = (uint64_t)a1;
  v4[3] = a2;
  v4[4] = (uint64_t)a3;
  v4[5] = v13;
  v19 = 91;
  v20 = 0xE100000000000000;
  v18[1] = v8;
  swift_getMetatypeMetadata();
  v14 = a1;
  swift_retain();
  v15 = a3;
  sub_1BC62C6E0();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62C764();
  sub_1BC62A7A8();
  sub_1BC54FD84((unint64_t *)&qword_1EF429280, MEMORY[0x1E0CB09F0]);
  sub_1BC62D52C();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1BC62C764();
  v16 = v20;
  v4[6] = v19;
  v4[7] = v16;
  return v4;
}

uint64_t sub_1BC54FBE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease();
  swift_release();

  v5 = sub_1BC62A7B4();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);

  return swift_deallocObject();
}

uint64_t sub_1BC54FCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  sub_1BC384E68(0, (unint64_t *)&qword_1EF42B210, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = v0 + v4;
  v7 = *(_QWORD *)(v0 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_1BC3781C0;
  v9 = (_QWORD *)swift_task_alloc();
  v8[2] = v9;
  *v9 = v8;
  v9[1] = sub_1BC3781C0;
  return sub_1BC54B034(v5, v6, v7);
}

uint64_t sub_1BC54FD84(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BC62A7B4();
    result = MEMORY[0x1BCCF35C4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC54FDC4(void *a1, void *a2, void *a3, void *a4, char a5)
{
  void *v5;

  switch(a5)
  {
    case 0:
    case 3:

      v5 = a2;
      goto LABEL_4;
    case 1:

      v5 = a4;
LABEL_4:

      break;
    case 2:

      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_1BC54FE60()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC54FE94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC3781C0;
  return sub_1BC548574(a1, v4, v5, v7, v6);
}

uint64_t sub_1BC54FF0C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC54FF38()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_presentViewController_animated_completion_, *(_QWORD *)(v0 + 24), 1, 0);
}

uint64_t sub_1BC54FF50(void *a1, void *a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  unint64_t v19;
  unint64_t v20;

  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(v4 + 32) = a1;
  v20 = v4;
  sub_1BC62C890();
  v5 = v20;
  v6 = a1;
  while (1)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = (void *)sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (!v7)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        return (uint64_t)v7;
      }
    }
    else
    {
      v7 = *(void **)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v7)
        goto LABEL_18;
    }
    result = swift_isUniquelyReferenced_nonNull_bridgeObject();
    if ((result & 1) == 0 || (v5 & 0x8000000000000000) != 0 || (v5 & 0x4000000000000000) != 0)
      sub_1BC4DE3DC(v5);
    v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9)
      break;
    v10 = v9 - 1;
    v7 = *(void **)((v5 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20);
    *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v10;
    sub_1BC62C890();
    if (sub_1BC54F014(v7, a2))
      goto LABEL_18;
    v11 = objc_msgSend(v7, sel_childViewControllers);
    sub_1BC34B6A0(0, &qword_1EF429570);
    v12 = sub_1BC62C878();

    sub_1BC3BBA54(v12);
    v13 = objc_msgSend(v7, sel_presentedViewController);
    if (v13)
    {
      v14 = v13;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();

    }
    objc_opt_self();
    v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      v16 = (void *)v15;
      v17 = v7;
      v18 = objc_msgSend(v16, sel_viewControllers);
      v19 = sub_1BC62C878();

      sub_1BC3BBA54(v19);
    }

    v5 = v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC5501EC(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void (*v21)(char *, uint64_t);
  id v22;
  unint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  unint64_t v34;

  v32 = a2;
  v3 = sub_1BC62A7B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - v8;
  sub_1BC34B508(0, (unint64_t *)&qword_1ED6A4E30, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(v10 + 32) = a1;
  v33 = (id)v10;
  sub_1BC62C890();
  v11 = (unint64_t)v33;
  v34 = (unint64_t)v33;
  v12 = a1;
  while (1)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v31 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (!v31)
      {
LABEL_19:
        v17 = 0;
LABEL_20:
        swift_bridgeObjectRelease();
        return (uint64_t)v17;
      }
    }
    else if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_19;
    }
    result = swift_isUniquelyReferenced_nonNull_bridgeObject();
    if ((result & 1) == 0 || (v11 & 0x8000000000000000) != 0 || (v11 & 0x4000000000000000) != 0)
      sub_1BC4DE3DC(v11);
    v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v14)
      break;
    v15 = v14 - 1;
    v16 = *(void **)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * v15 + 0x20);
    *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v15;
    sub_1BC62C890();
    type metadata accessor for ClinicalAccountDetailsViewController();
    if (swift_dynamicCastClass())
    {
      v17 = v16;
      swift_retain();
      sub_1BC62BF0C();
      swift_release();
      v18 = v33;
      v19 = objc_msgSend(v33, sel_identifier);

      sub_1BC62A79C();
      v20 = objc_msgSend(v32, sel_identifier);
      sub_1BC62A79C();

      LOBYTE(v20) = sub_1BC62A790();
      v21 = *(void (**)(char *, uint64_t))(v4 + 8);
      v21(v6, v3);
      v21(v9, v3);
      if ((v20 & 1) != 0)
        goto LABEL_20;
    }
    v22 = objc_msgSend(v16, sel_childViewControllers, v32);
    sub_1BC34B6A0(0, &qword_1EF429570);
    v23 = sub_1BC62C878();

    sub_1BC3BBA54(v23);
    v24 = objc_msgSend(v16, sel_presentedViewController);
    if (v24)
    {
      v25 = v24;
      MEMORY[0x1BCCF1B30]();
      if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC62C8B4();
      sub_1BC62C8D8();
      sub_1BC62C890();

    }
    objc_opt_self();
    v26 = swift_dynamicCastObjCClass();
    if (v26)
    {
      v27 = (void *)v26;
      v28 = v16;
      v29 = objc_msgSend(v27, sel_viewControllers);
      v30 = sub_1BC62C878();

      sub_1BC3BBA54(v30);
    }

    v11 = v34;
  }
  __break(1u);
  return result;
}

id sub_1BC550590@<X0>(void *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  id i;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  char **v13;
  id v14;
  id result;

  for (i = a2; ; i = v6)
  {
    v6 = objc_msgSend(i, sel_parentViewController);
    if (!v6)
    {
      v6 = objc_msgSend(i, sel_presentingViewController);
      if (!v6)
        break;
    }

  }
  v7 = a1;
  v8 = (void *)sub_1BC54FF50(i, v7);

  if (v8)
  {
    type metadata accessor for MedicalRecordTimelineViewController();
    v9 = (void *)swift_dynamicCastClass();
    if (!v9)

  }
  else
  {
    v9 = 0;
  }
  v10 = v7;
  v11 = (void *)sub_1BC5501EC(i, v10);

  if (!v11)
  {
    v12 = 0;
    v13 = &selRef_constraintGreaterThanOrEqualToConstant_;
    if (v9)
      goto LABEL_13;
LABEL_16:
    v14 = 0;
    if (v12)
      goto LABEL_14;
LABEL_17:
    result = 0;
    goto LABEL_18;
  }
  type metadata accessor for ClinicalAccountDetailsViewController();
  v12 = (void *)swift_dynamicCastClass();
  if (!v12)

  v13 = &selRef_constraintGreaterThanOrEqualToConstant_;
  if (!v9)
    goto LABEL_16;
LABEL_13:
  v14 = objc_msgSend(v9, v13[448]);
  if (!v12)
    goto LABEL_17;
LABEL_14:
  result = objc_msgSend(v12, v13[448]);
LABEL_18:
  *a3 = i;
  a3[1] = v14;
  a3[2] = v9;
  a3[3] = result;
  a3[4] = v12;
  return result;
}

uint64_t sub_1BC5506FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC550740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC550740()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF436460)
  {
    sub_1BC34B6A0(255, &qword_1EF436468);
    v0 = sub_1BC62CFE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF436460);
  }
}

id *sub_1BC5507A4(id *a1)
{

  return a1;
}

void sub_1BC5507CC(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 < 2 || a5 == 0)
  {

  }
  else if (a5 == 1)
  {

  }
}

uint64_t sub_1BC550814(uint64_t a1)
{
  uint64_t v2;

  sub_1BC357210();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC550850(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC384E68(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1BC55089C()
{
  unint64_t result;

  result = qword_1EF436478;
  if (!qword_1EF436478)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC647CCC, &type metadata for ClinicalAccountUpgradeManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF436478);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ClinicalAccountUpgradeManagerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC55092C + 4 * byte_1BC647ABD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC550960 + 4 * byte_1BC647AB8[v4]))();
}

uint64_t sub_1BC550960(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC550968(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC550970);
  return result;
}

uint64_t sub_1BC55097C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC550984);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC550988(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC550990(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountUpgradeManagerError()
{
  return &type metadata for ClinicalAccountUpgradeManagerError;
}

id sub_1BC5509AC(id result, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 a5)
{
  id v6;

  if (a5 - 2 < 2 || a5 == 0)
    return result;
  if (a5 == 1)
  {
    v6 = result;
    return a3;
  }
  return result;
}

uint64_t destroy for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t a1, uint64_t a2)
{
  return sub_1BC550BA8(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC5507CC);
}

uint64_t initializeWithCopy for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1BC550BCC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC5509AC);
}

uint64_t *assignWithCopy for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1BC550C44(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC5509AC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC5507CC);
}

uint64_t *assignWithTake for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC550CD0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC5507CC);
}

uint64_t getEnumTagSinglePayload for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC550ABC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 3u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1BC550AD4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UpgradeFlowViewEnvironment.ViewEnvironmentType()
{
  return &type metadata for UpgradeFlowViewEnvironment.ViewEnvironmentType;
}

id sub_1BC550B00(id result, void *a2, void *a3, void *a4, char a5)
{
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v5 = result;
  switch(a5)
  {
    case 0:
    case 3:
      v6 = result;
      v7 = a2;
      goto LABEL_4;
    case 1:
      v8 = a4;
      v9 = v5;
      v10 = a2;
      v7 = a3;
LABEL_4:
      result = v7;
      break;
    case 2:
      v11 = result;
      result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for PostUpgradePresentationOption(uint64_t a1, uint64_t a2)
{
  return sub_1BC550BA8(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC54FDC4);
}

uint64_t sub_1BC550BA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a3(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t initializeWithCopy for PostUpgradePresentationOption(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1BC550BCC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC550B00);
}

uint64_t sub_1BC550BCC(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v6, v7, v8, v9);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  return a1;
}

uint64_t *assignWithCopy for PostUpgradePresentationOption(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1BC550C44(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC550B00, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC54FDC4);
}

uint64_t *sub_1BC550C44(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v8, v9, v10, v11);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  v16 = *((unsigned __int8 *)a1 + 32);
  *((_BYTE *)a1 + 32) = v11;
  a5(v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *assignWithTake for PostUpgradePresentationOption(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC550CD0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC54FDC4);
}

uint64_t *sub_1BC550CD0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v6 = *(_BYTE *)(a2 + 32);
  v7 = *a1;
  v9 = a1[1];
  v8 = a1[2];
  v10 = a1[3];
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  v12 = *((unsigned __int8 *)a1 + 32);
  *((_BYTE *)a1 + 32) = v6;
  a4(v7, v9, v8, v10, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PostUpgradePresentationOption(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PostUpgradePresentationOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC550DAC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PostUpgradePresentationOption()
{
  return &type metadata for PostUpgradePresentationOption;
}

unint64_t sub_1BC550DCC()
{
  unint64_t result;

  result = qword_1EF436480;
  if (!qword_1EF436480)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC647CA4, &type metadata for ClinicalAccountUpgradeManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF436480);
  }
  return result;
}

_QWORD *sub_1BC550E1C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  __int128 v9;

  v1 = qword_1EF4364C8;
  if (*(_QWORD *)(v0 + qword_1EF4364C8))
  {
    v2 = *(_QWORD **)(v0 + qword_1EF4364C8);
  }
  else
  {
    sub_1BC62CB90();
    v3 = *(void **)(v0 + qword_1EF4364A0);
    v4 = objc_msgSend(v3, sel_healthStore);
    v5 = sub_1BC5516A8();
    v6 = objc_msgSend(v3, sel_healthStore);
    v7 = objc_msgSend(v6, sel_profileIdentifier);

    type metadata accessor for CategorySearchDataSourceProvider();
    v2 = (_QWORD *)swift_allocObject();
    v2[2] = 0;
    v2[11] = 0;
    sub_1BC34E718(&v9, (uint64_t)(v2 + 3));
    v2[9] = v7;
    v2[10] = v5;
    v2[8] = v4;
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1BC550F24(char *a1, void *a2)
{
  char *v2;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  id v41;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  objc_super v48;
  uint64_t v49;
  uint64_t v50;

  v4 = *a1;
  v6 = (void *)*((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  v7 = *((_QWORD *)a1 + 5);
  v8 = *((_QWORD *)a1 + 6);
  v9 = *((_QWORD *)a1 + 7);
  v10 = (void *)*((_QWORD *)a1 + 8);
  v11 = &v2[qword_1EF4364C0];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v2[qword_1EF4364C8] = 0;
  v12 = &v2[qword_1EF436498];
  *v12 = v4;
  *((_QWORD *)v12 + 1) = v6;
  *((_QWORD *)v12 + 2) = v5;
  *(_OWORD *)(v12 + 24) = *(_OWORD *)(a1 + 24);
  *((_QWORD *)v12 + 5) = v7;
  *((_QWORD *)v12 + 6) = v8;
  *((_QWORD *)v12 + 7) = v9;
  *((_QWORD *)v12 + 8) = v10;
  *(_QWORD *)&v2[qword_1EF4364A0] = a2;
  v43 = sub_1BC62AC10();
  LOBYTE(v50) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v10;
  v14 = a2;
  v15 = v2;
  v16 = v6;
  v17 = objc_msgSend(v14, sel_healthStore, v43);
  v18 = objc_msgSend(v17, sel_profileIdentifier);

  v19 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE029predicateForUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0N0OSg_AA06SourceP0OtFZ_0((unsigned __int8 *)&v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BC639570;
  *(_QWORD *)(v20 + 32) = v19;
  v46 = v19;
  v47 = v14;
  v21 = objc_msgSend(v14, sel_healthStore);
  v22 = objc_msgSend(v21, sel_profileIdentifier);

  v23 = _s15HealthRecordsUI35AddAccountFeedItemIdentifierFactoryV011makeGeneralab10OnboardingH03forSSSo09HKProfileH0CSg_tFZ_0(v22);
  v25 = v24;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  sub_1BC52184C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1BC6395A0;
  v27 = sub_1BC62ABF8();
  v29 = v28;
  v30 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
  v31 = sub_1BC3644C0();
  *(_QWORD *)(v26 + 32) = v27;
  *(_QWORD *)(v26 + 40) = v29;
  *(_QWORD *)(v26 + 96) = v30;
  *(_QWORD *)(v26 + 104) = v31;
  *(_QWORD *)(v26 + 64) = v31;
  *(_QWORD *)(v26 + 72) = v23;
  *(_QWORD *)(v26 + 80) = v25;
  swift_bridgeObjectRetain();
  v32 = sub_1BC62CA64();

  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 40) = v32;
  v50 = v20;
  sub_1BC62C890();
  v33 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v33);

  *(_QWORD *)&v15[qword_1EF4364A8] = v34;
  v35 = qword_1ED6A4878;
  v44 = v34;
  if (v35 != -1)
    swift_once();
  v36 = qword_1ED6A54F0;
  v37 = objc_msgSend(v47, sel_healthStore, v44);
  v38 = objc_msgSend(v37, sel_profileIdentifier);

  v49 = *(_QWORD *)(v36 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1E0C80A78](v39);
  sub_1BC62AA6C();
  v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8];
  sub_1BC62BA74();
  sub_1BC379B20((unint64_t *)&qword_1ED6A4B90, 255, v40, MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC62B888();

  swift_release();
  *(_QWORD *)&v15[qword_1EF4364B0] = v50;
  *(_QWORD *)&v15[qword_1EF4364B8] = 4;

  v48.receiver = v15;
  v48.super_class = (Class)type metadata accessor for CategorySearchViewController();
  v41 = objc_msgSendSuper2(&v48, sel_initWithCollectionViewLayout_, 0);

  return v41;
}

void sub_1BC5513D0(char *a1, uint64_t a2, void *a3)
{
  char *v4;
  id v5;

  v4 = &a1[qword_1EF4364C0];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&a1[qword_1EF4364C8] = 0;
  v5 = a3;

  sub_1BC62D394();
  __break(1u);
}

void sub_1BC551454()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  objc_super v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_1BC550E1C();
  v10 = type metadata accessor for CategorySearchDataSourceProvider();
  v11 = sub_1BC379B20(&qword_1EF436628, v2, (uint64_t (*)(uint64_t))type metadata accessor for CategorySearchDataSourceProvider, (uint64_t)&protocol conformance descriptor for CategorySearchDataSourceProvider);
  v9 = v1;
  sub_1BC62B7E0();
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CategorySearchViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  v3 = objc_msgSend(v0, sel_collectionView);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    v6 = objc_msgSend(v0, sel_collectionView);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, sel_setKeyboardDismissMode_, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC55156C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC551454();

}

id sub_1BC5515A0(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for CategorySearchViewController();
  return objc_msgSendSuper2(&v5, sel_viewDidAppear_, a3);
}

void sub_1BC5515E8()
{
  void *v0;
  void *v1;
  void (*v2)(void);
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = v0;
  sub_1BC62B7EC();
  v2 = (void (*)(void))sub_1BC62B7F8();
  v2();
  v3 = objc_msgSend(v0, sel_collectionView);
  if (v3)
  {
    v4 = v3;
    sub_1BC62B714();
    sub_1BC62CB60();

    sub_1BC62B7C8();
    v5 = objc_msgSend(v1, sel_collectionView);
    if (v5)
    {
      v6 = v5;
      sub_1BC62B4C8();
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1BC5516A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t inited;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  _QWORD *v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  __int128 v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_1BC357158(0, &qword_1EF42D368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v47 - v2;
  sub_1BC552894();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC63DB50;
  v49 = v0;
  v5 = (uint64_t *)(v0 + qword_1EF4364C0);
  swift_beginAccess();
  v6 = v5[1];
  v7 = MEMORY[0x1E0DEA968];
  v48 = v5;
  if (v6)
  {
    sub_1BC52184C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BC6395A0;
    *(_QWORD *)(v8 + 56) = v7;
    v9 = sub_1BC3644C0();
    strcpy((char *)(v8 + 32), "localizedTitle");
    *(_BYTE *)(v8 + 47) = -18;
    v10 = *v5;
    *(_QWORD *)(v8 + 96) = v7;
    *(_QWORD *)(v8 + 104) = v9;
    *(_QWORD *)(v8 + 64) = v9;
    *(_QWORD *)(v8 + 72) = v10;
    *(_QWORD *)(v8 + 80) = v6;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
    swift_bridgeObjectRetain();
    v11 = sub_1BC62CA64();
  }
  else
  {
    v11 = 0;
  }
  *(_QWORD *)(inited + 32) = v11;
  v12 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  sub_1BC52184C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v13 + 56) = v7;
  v14 = sub_1BC3644C0();
  strcpy((char *)(v13 + 32), "pluginPackage");
  *(_WORD *)(v13 + 46) = -4864;
  *(_QWORD *)(v13 + 96) = v7;
  *(_QWORD *)(v13 + 104) = v14;
  *(_QWORD *)(v13 + 64) = v14;
  *(_QWORD *)(v13 + 72) = 0xD000000000000025;
  *(_QWORD *)(v13 + 80) = 0x80000001BC654E10;
  v50 = v12;
  *(_QWORD *)(inited + 40) = sub_1BC62CA64();
  sub_1BC62AC10();
  sub_1BC357158(0, &qword_1EF42BCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = sub_1BC62AA78();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  v47 = xmmword_1BC639590;
  *(_OWORD *)(v18 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E0D2D510], v15);
  v19 = sub_1BC62AB2C();
  v21 = v20;
  v22 = sub_1BC62A31C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v3, 1, 1, v22);
  sub_1BC379A60(0, (unint64_t *)&qword_1EF42A228);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v47;
  v24 = v49;
  v25 = objc_msgSend(*(id *)(v49 + qword_1EF4364A0), sel_healthStore);
  v26 = objc_msgSend(v25, sel_profileIdentifier);

  *(_QWORD *)(v23 + 32) = v26;
  v27 = MEMORY[0x1BCCEFEA4](v18, v19, v21, v3, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC3E23B8((uint64_t)v3);
  *(_QWORD *)(inited + 48) = v27;
  v28 = *(void **)(v24 + qword_1EF4364A8);
  *(_QWORD *)(inited + 56) = v28;
  v29 = *v48;
  v30 = v48[1];
  swift_bridgeObjectRetain();
  v31 = v28;
  v32 = sub_1BC552900(v29, v30);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 64) = v32;
  v51 = inited;
  sub_1BC62C890();
  v33 = (_QWORD *)v51;
  v51 = MEMORY[0x1E0DEE9D8];
  v34 = (void *)v33[4];
  if (v34)
  {
    v35 = v34;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v36 = (void *)v33[5];
  if (v36)
  {
    v37 = v36;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v38 = (void *)v33[6];
  if (v38)
  {
    v39 = v38;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v40 = (void *)v33[7];
  if (v40)
  {
    v41 = v40;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  v42 = (void *)v33[8];
  if (v42)
  {
    v43 = v42;
    MEMORY[0x1BCCF1B30]();
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC62C8B4();
    sub_1BC62C8D8();
    sub_1BC62C890();
  }
  swift_bridgeObjectRelease();
  v44 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v45 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v44);

  return v45;
}

id sub_1BC551CE4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  objc_class *v12;
  id result;
  void *v14;
  void *v15;
  objc_super v16;

  v5 = sub_1BC62A970();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC62A934();
  v9 = a3;
  v10 = a1;
  v11 = (void *)sub_1BC62A928();
  v12 = (objc_class *)type metadata accessor for CategorySearchViewController();
  v16.receiver = v10;
  v16.super_class = v12;
  objc_msgSendSuper2(&v16, sel_collectionView_didSelectItemAtIndexPath_, v9, v11);

  result = objc_msgSend(v10, sel_collectionView);
  if (result)
  {
    v14 = result;
    v15 = (void *)sub_1BC62A928();
    objc_msgSend(v14, sel_deselectItemAtIndexPath_animated_, v15, 1);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC551E10()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC551E3C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC551E6C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + qword_1EF436498 + 8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

id sub_1BC551F28()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CategorySearchViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC551F5C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + qword_1EF436498 + 8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BC55201C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + qword_1EF4364C0);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1BC552070(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  void *v7;

  v3 = v2;
  v6 = (_QWORD *)(v3 + qword_1EF4364C0);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease();
  sub_1BC550E1C();
  sub_1BC55221C();
  swift_release();
  v7 = (void *)sub_1BC62AF4C();
  swift_release();
  sub_1BC5516A8();
  sub_1BC62B6D8();

}

void (*sub_1BC552114(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC55215C;
}

void sub_1BC55215C(uint64_t a1, char a2)
{
  id v3;

  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1BC550E1C();
    sub_1BC55221C();
    swift_release();
    v3 = (id)sub_1BC62AF4C();
    swift_release();
    sub_1BC5516A8();
    sub_1BC62B6D8();

  }
}

uint64_t sub_1BC5521F0()
{
  return swift_retain();
}

void sub_1BC552204(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_QWORD *)(*v1 + qword_1EF4364B8);
}

uint64_t sub_1BC55221C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Class v15;
  id v16;
  uint64_t v18;

  v1 = v0;
  sub_1BC3EA7C0(0, (unint64_t *)&unk_1EF436630, (uint64_t (*)(uint64_t))sub_1BC379AA4, (uint64_t (*)(void))sub_1BC423F28, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD08]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v18 - v5;
  sub_1BC357158(0, &qword_1EF42EDF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B1B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - v8;
  if (*(_QWORD *)(v0 + 16))
  {
    v10 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    sub_1BC552444();
    sub_1BC62B36C();
    sub_1BC62B378();
    sub_1BC4179B8();
    *(_QWORD *)&v9[*(int *)(v11 + 48)] = 0;
    v12 = *MEMORY[0x1E0D2B1A0];
    v13 = sub_1BC62B318();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v9, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
    sub_1BC379AA4();
    v16 = objc_allocWithZone(v15);
    sub_1BC62AF28();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0D2AD00], v3);
    sub_1BC3EA7C0(0, &qword_1EF436490, (uint64_t (*)(uint64_t))sub_1BC379AA4, (uint64_t (*)(void))sub_1BC423F28, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD40]);
    swift_allocObject();
    v10 = sub_1BC62AFA0();
    *(_QWORD *)(v1 + 16) = v10;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v10;
}

id sub_1BC552444()
{
  _QWORD *v0;
  void *v1;
  id v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  v1 = (void *)v0[11];
  if (v1)
  {
    v2 = (id)v0[11];
  }
  else
  {
    v3 = v0;
    __swift_project_boxed_opaque_existential_1Tm(v0 + 3, v0[6]);
    v4 = (void *)sub_1BC62A9D0();
    sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BC6396B0;
    v6 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
    v7 = (void *)sub_1BC62C650();
    v8 = objc_msgSend(v6, sel_initWithKey_ascending_selector_, v7, 1, sel_localizedStandardCompare_);

    *(_QWORD *)(v5 + 32) = v8;
    sub_1BC62C890();
    v9 = (void *)sub_1BC62CD28();

    swift_bridgeObjectRelease();
    v10 = (void *)v3[11];
    v3[11] = v9;
    v2 = v9;

    v1 = 0;
  }
  v11 = v1;
  return v2;
}

uint64_t sub_1BC5525A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_1BC52184C(0, (unint64_t *)&qword_1EF42A0F0, (unint64_t *)&qword_1EF42A0F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  v1 = sub_1BC55221C();
  v2 = sub_1BC552610();
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v2;
  return v0;
}

unint64_t sub_1BC552610()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF436488;
  if (!qword_1EF436488)
  {
    sub_1BC3EA7C0(255, &qword_1EF436490, (uint64_t (*)(uint64_t))sub_1BC379AA4, (uint64_t (*)(void))sub_1BC423F28, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2AD40]);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0D2AD60], v1);
    atomic_store(result, (unint64_t *)&qword_1EF436488);
  }
  return result;
}

id *CategorySearchDataSourceProvider.deinit()
{
  id *v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));

  return v0;
}

uint64_t CategorySearchDataSourceProvider.__deallocating_deinit()
{
  id *v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));

  return swift_deallocClassInstance();
}

uint64_t sub_1BC552708()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_1BC52184C(0, (unint64_t *)&qword_1EF42A0F0, (unint64_t *)&qword_1EF42A0F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC639590;
  v1 = sub_1BC55221C();
  v2 = sub_1BC552610();
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v2;
  return v0;
}

uint64_t dispatch thunk of FeedItemSearchable.searchTerm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedItemSearchable.searchTerm.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FeedItemSearchable.searchTerm.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for CategorySearchViewController()
{
  uint64_t result;

  result = qword_1EF4364D0;
  if (!qword_1EF4364D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC5527CC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC552854()
{
  return type metadata accessor for CategorySearchViewController();
}

uint64_t type metadata accessor for CategorySearchDataSourceProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for CategorySearchDataSourceProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CategorySearchDataSourceProvider.selectedDataSources(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

void sub_1BC552894()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A59B8)
  {
    sub_1BC358210(255, (unint64_t *)&qword_1ED6A58C8, (unint64_t *)&qword_1ED6A58C0);
    v0 = sub_1BC62D538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A59B8);
  }
}

id sub_1BC552900(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;

  if (!a2)
    return 0;
  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58C0);
  sub_1BC52184C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC6395A0;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1BC3644C0();
  strcpy((char *)(v5 + 32), "localizedTitle");
  *(_BYTE *)(v5 + 47) = -18;
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = v7;
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 72) = a1;
  *(_QWORD *)(v5 + 80) = a2;
  swift_bridgeObjectRetain_n();
  v8 = (void *)sub_1BC62CA64();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC6395A0;
  *(_QWORD *)(v9 + 56) = v6;
  *(_QWORD *)(v9 + 64) = v7;
  *(_QWORD *)(v9 + 32) = 0xD000000000000014;
  *(_QWORD *)(v9 + 40) = 0x80000001BC663780;
  *(_QWORD *)(v9 + 96) = v6;
  *(_QWORD *)(v9 + 104) = v7;
  *(_QWORD *)(v9 + 72) = a1;
  *(_QWORD *)(v9 + 80) = a2;
  v10 = (void *)sub_1BC62CA64();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC639570;
  *(_QWORD *)(v11 + 32) = v8;
  *(_QWORD *)(v11 + 40) = v10;
  sub_1BC62C890();
  v12 = v8;
  v13 = v10;
  v14 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_orPredicateWithSubpredicates_, v14);

  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BC639590;
  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 64) = v7;
  strcpy((char *)(v17 + 32), "indexForSearch");
  *(_BYTE *)(v17 + 47) = -18;
  v18 = (void *)sub_1BC62CA64();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BC639570;
  *(_QWORD *)(v19 + 32) = v16;
  *(_QWORD *)(v19 + 40) = v18;
  sub_1BC62C890();
  v20 = v16;
  v21 = v18;
  v22 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v15, sel_andPredicateWithSubpredicates_, v22);

  return v23;
}

id ViewControllerFactory.makeUserDomainConceptDetailViewController(for:using:)(void *a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  id v7;

  v4 = objc_allocWithZone((Class)type metadata accessor for UserDomainConceptDetailViewController());
  v5 = a1;
  v6 = a2;
  v7 = sub_1BC4E89A4(v5, v6);

  return v7;
}

void __swiftcall ViewControllerFactory.makeRemovedLabsViewController(using:)(UIViewController *__return_ptr retstr, HRProfile *using)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  HRProfile *v26;
  uint64_t v27;
  uint64_t v28;
  HRProfile *v29;
  _BYTE v30[8];
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = sub_1BC55B770();
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = sub_1BC558FD8(2);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(v9 + 56) + 72 * v10;
      v29 = using;
      v13 = *(_BYTE *)v12;
      v15 = *(void **)(v12 + 8);
      v14 = *(_QWORD *)(v12 + 16);
      v16 = *(_QWORD *)(v12 + 24);
      v27 = *(_QWORD *)(v12 + 32);
      v28 = v14;
      v17 = *(_QWORD *)(v12 + 40);
      v18 = *(_QWORD *)(v12 + 48);
      v20 = *(_QWORD *)(v12 + 56);
      v19 = *(void **)(v12 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = v19;
      v22 = v15;
      swift_bridgeObjectRelease();
      v30[0] = v13;
      using = v29;
      v31 = v22;
      v32 = v28;
      v33 = v16;
      v34 = v27;
      v35 = v17;
      v36 = v18;
      v37 = v20;
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v24 = sub_1BC62A7B4();
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
      v25(v8, 1, 1, v24);
      v25(v5, 1, 1, v24);
      objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
      v26 = using;
      sub_1BC356878(v26, v21, (uint64_t)v8, 0, 0, (uint64_t)v5, 0, 0, 0);

      return;
    }
  }
  swift_bridgeObjectRelease();
  v23 = objc_msgSend((id)objc_opt_self(), sel_unknownRecordCategory);
  if (v23)
  {
    sub_1BC4FC8D8(v23, (uint64_t)v30);
    v22 = v31;
    v21 = v38;
    goto LABEL_6;
  }
  __break(1u);
}

void __swiftcall ViewControllerFactory.makeTimelineViewController(for:showsInitialSearchBar:using:queryPredicateByType:)(UIViewController *__return_ptr retstr, WDMedicalRecordCategory *a2, Swift::Bool showsInitialSearchBar, HRProfile *using, Swift::OpaquePointer queryPredicateByType)
{
  sub_1BC554E10(a2, using, queryPredicateByType._rawValue);
}

id ViewControllerFactory.makeUserDomainConceptListViewController(for:listType:using:)(unsigned __int8 *a1, uint64_t a2, void *a3)
{
  unsigned __int8 v6;

  v6 = *a1;
  objc_allocWithZone((Class)type metadata accessor for UserDomainConceptListViewController());
  return sub_1BC61A5F8(&v6, a2, a3);
}

void ViewControllerFactory.makeHealthRecordsPrivacyPresenter()()
{
  sub_1BC5548BC();
}

id sub_1BC552F80()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ViewControllerFactory()), sel_init);
  qword_1ED6A4670 = (uint64_t)result;
  return result;
}

id ViewControllerFactory.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static ViewControllerFactory.shared.getter()
{
  if (qword_1ED6A31B0 != -1)
    swift_once();
  return (id)qword_1ED6A4670;
}

void sub_1BC553054(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[6];

  if (!a1)
  {
    v9 = a2;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v12 = a1;
    v10 = 0;
    goto LABEL_6;
  }
  v9 = a1;
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1BC39BE70;
  v13[3] = &block_descriptor_39;
  v10 = _Block_copy(v13);
  v11 = a1;
  sub_1BC38F084(a4);
  swift_release();
LABEL_6:
  objc_msgSend(v9, sel_presentViewController_animated_completion_, a3, 1, v10);
  _Block_release(v10);

}

void sub_1BC553140(void *a1, void *a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7)
{
  sub_1BC556588(a1, a2, a5, a6, a7);
}

char *sub_1BC553150(int a1, void *a2, char *a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_1BC556708(a1, a2, a3, a4, a5, a6);
}

char *sub_1BC553164(void *a1, void *a2, char *a3, uint64_t a4, uint64_t a5, char a6)
{
  char *v11;
  char v13;

  v13 = *a3;
  objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
  swift_bridgeObjectRetain();
  v11 = sub_1BC537354(a1, a2, &v13, a4, a5);
  if ((a6 & 1) != 0)
    sub_1BC538B40();
  return v11;
}

char *sub_1BC553200(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  char v9;

  v9 = 0;
  objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
  swift_bridgeObjectRetain();
  return sub_1BC537354(a1, a2, &v9, a3, a4);
}

BOOL sub_1BC553318()
{
  type metadata accessor for ClinicalAccountDetailsViewController();
  return swift_dynamicCastClass() != 0;
}

void sub_1BC553408(void *a1, void *a2, void *a3)
{
  id v4;

  v4 = sub_1BC5556FC(a1, a3);
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v4, 1, 0);

}

uint64_t sub_1BC553458(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v4[2] = sub_1BC62C944();
  v4[3] = sub_1BC62C938();
  v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_1BC5534D4;
  return v8();
}

uint64_t sub_1BC5534D4()
{
  swift_task_dealloc();
  sub_1BC62C908();
  return swift_task_switch();
}

uint64_t sub_1BC553544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - v9;
  v11 = sub_1BC62C95C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1BC62C944();
  swift_retain();
  v12 = sub_1BC62C938();
  v13 = (_QWORD *)swift_allocObject();
  v14 = MEMORY[0x1E0DF06E8];
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = a2;
  v13[5] = a3;
  sub_1BC5C2784((uint64_t)v10, a5, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1BC55363C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v4[2] = sub_1BC62C944();
  v4[3] = sub_1BC62C938();
  v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_1BC3917E8;
  return v8();
}

id sub_1BC5536B8(void *a1)
{
  id v2;
  id v3;
  id v4;

  v2 = objc_allocWithZone((Class)type metadata accessor for SettingsViewController());
  v3 = a1;
  v4 = sub_1BC3F40BC(v3);

  return v4;
}

void sub_1BC5536FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v2 = sub_1BC62A7B4();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  sub_1BC35EBE0(a1, (uint64_t)&v9 - v6, v7);
  v8 = (char *)&loc_1BC553800 + dword_1BC553C3C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

id sub_1BC553810()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;

  v2 = objc_msgSend(objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController), sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, 2, 0, 0, v0, 0);
  v3 = objc_msgSend(v0, sel_onboardingManager);
  objc_msgSend(v3, sel_registerInflightOnboardingViewController_completion_, v2, 0);
  swift_storeEnumTagMultiPayload();
  BrowseCategory.rawValue.getter();
  v5 = v4;
  v7 = v6;
  BrowseCategory.rawValue.getter();
  if (v5 == v9 && v7 == v8)
  {
    v12 = 2;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
      v12 = 2;
    else
      v12 = 1;
  }
  sub_1BC348D78(v1, (uint64_t (*)(_QWORD))type metadata accessor for BrowseCategory);
  if (qword_1ED6A3198 != -1)
    swift_once();
  sub_1BC4E371C(v12, 2, 0);

  return v2;
}

id sub_1BC553CC8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v16;

  v4 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  v10 = sub_1BC62A7B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_1BC35EBE0((uint64_t)v9, (uint64_t)v6, type metadata accessor for PresentationContext);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
  v11 = a1;
  v12 = a2;
  v13 = sub_1BC5BFBB8(v11, v12, (uint64_t)v6);

  v14 = objc_msgSend(v13, sel_navigationItem);
  objc_msgSend(v14, sel_setLargeTitleDisplayMode_, 2);

  sub_1BC348D78((uint64_t)v9, type metadata accessor for PresentationContext);
  return v13;
}

id ViewControllerFactory.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ViewControllerFactory();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ViewControllerFactory.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ViewControllerFactory();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC554008(uint64_t a1)
{
  sub_1BC5536FC(a1);
}

void __swiftcall ViewControllerFactory.makeViewController(for:using:)(UIViewController *__return_ptr retstr, WDMedicalRecordCategory *a2, HRProfile *using)
{
  void *v3;
  id v6;
  uint64_t v7;
  HKHealthStore *v8;
  id v9;
  uint64_t v10;
  HRProfile *v11;
  uint64_t v12;
  uint64_t v13;
  HKHealthStore *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void *v19;
  _OWORD v20[4];
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[4];
  uint64_t v24;

  if ((sub_1BC3B11F0(-[WDMedicalRecordCategory categoryType](a2, sel_categoryType), (uint64_t)&unk_1E74D3290) & 1) != 0)
  {
    v6 = objc_msgSend(v3, sel_makeTimelineViewControllerForCategory_showsInitialSearchBar_usingProfile_filterPredicatesByType_, a2, 0, using, 0);
  }
  else
  {
    v19 = v3;
    sub_1BC4FC8D8(a2, (uint64_t)v23);
    if (qword_1ED6A4878 != -1)
      swift_once();
    v7 = qword_1ED6A54F0;
    v8 = -[HRProfile healthStore](using, sel_healthStore);
    v9 = -[HKHealthStore profileIdentifier](v8, sel_profileIdentifier);

    v22 = *(_QWORD *)(v7 + OBJC_IVAR___HRProfileManager_lock);
    MEMORY[0x1E0C80A78](v10);
    sub_1BC62AA6C();
    type metadata accessor for CountProviderCollection();
    sub_1BC3A9E00();
    swift_retain();
    sub_1BC62B888();

    swift_release();
    v20[2] = v23[2];
    v20[3] = v23[3];
    v21 = v24;
    v20[0] = v23[0];
    v20[1] = v23[1];
    sub_1BC359A94((uint64_t)v23);
    v11 = using;
    v12 = sub_1BC590F28((uint64_t)v20);
    v13 = qword_1ED6A54F0;
    v14 = -[HRProfile healthStore](v11, sel_healthStore);
    v15 = -[HKHealthStore profileIdentifier](v14, sel_profileIdentifier);

    v22 = *(_QWORD *)(v13 + OBJC_IVAR___HRProfileManager_lock);
    MEMORY[0x1E0C80A78](v16);
    type metadata accessor for AccountStateProvider();
    swift_retain();
    sub_1BC62B888();

    swift_release();
    v17 = *(_QWORD *)&v20[0];
    v18 = objc_allocWithZone((Class)type metadata accessor for RecordCategoryViewController());
    sub_1BC554998((uint64_t)v23, v11, v12, v17, v19, v18);
    sub_1BC359AF8((uint64_t)v23);
    swift_release();
  }
}

void __swiftcall ViewControllerFactory.makeTimelineViewController(for:showsInitialSearchBar:using:filterPredicatesByType:)(UIViewController *__return_ptr retstr, WDMedicalRecordCategory *a2, Swift::Bool showsInitialSearchBar, HRProfile *using, Swift::OpaquePointer_optional filterPredicatesByType)
{
  void *rawValue;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  HRProfile *v16;
  WDMedicalRecordCategory *v17;
  uint64_t v18;

  rawValue = filterPredicatesByType.value._rawValue;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - v12;
  v14 = sub_1BC62A7B4();
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v15(v10, 1, 1, v14);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
  swift_bridgeObjectRetain();
  v16 = using;
  v17 = a2;
  sub_1BC356878(v16, a2, (uint64_t)v13, 0, 0, (uint64_t)v10, 0, rawValue, 0);

}

void __swiftcall ViewControllerFactory.makeAlphabeticalViewController(for:using:)(UIViewController *__return_ptr retstr, WDMedicalRecordCategory *a2, HRProfile *using)
{
  id v4;
  uint64_t v5[2];
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[8];
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  sub_1BC4FC8D8(a2, (uint64_t)v10);
  v5[0] = v10[0];
  v5[1] = v11;
  v6 = v12;
  v7 = v13;
  v8 = v14;
  v9 = v15;
  v4 = objc_allocWithZone((Class)type metadata accessor for ConceptListViewController());
  sub_1BC5E480C(v5, using);
}

id ViewControllerFactory.makeUserDomainConceptListViewController(for:listType:using:)(void *a1, uint64_t a2, void *a3)
{
  unsigned __int8 v5;
  void *v6;
  unsigned __int8 v8;
  unsigned __int8 v9[8];
  void *v10;
  id v11;

  sub_1BC4FC8D8(a1, (uint64_t)v9);
  v5 = v9[0];
  v6 = v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v8 = v5;
  objc_allocWithZone((Class)type metadata accessor for UserDomainConceptListViewController());
  return sub_1BC61A5F8(&v8, a2, a3);
}

void ViewControllerFactory.makeImproveHealthRecordsPrivacyPresenter()()
{
  sub_1BC5548BC();
}

void sub_1BC5548BC()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BC62C650();
  v1 = objc_msgSend((id)objc_opt_self(), sel_presenterForPrivacySplashWithIdentifier_, v0);

  if (!v1)
    __break(1u);
}

id sub_1BC554998(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, _BYTE *a6)
{
  char *v12;
  _QWORD *v13;
  id v14;
  _BYTE *v15;
  id v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;
  id v25;
  void *v26;
  id v27;
  char v28;
  id v29;
  id v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  objc_super v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  *(_QWORD *)&a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCanceller] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_aToZCanceller] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsCanceller] = 0;
  a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_shouldShowPinnedLabsTip] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_cancellable] = 0;
  a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding] = 0;
  v12 = &a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  *(_QWORD *)&a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController] = 0;
  a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching] = 0;
  v13 = &a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView];
  sub_1BC62B144();
  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v15 = a6;
  v16 = objc_msgSend(v14, sel_init);
  v17 = MEMORY[0x1E0D2AF30];
  *v13 = v16;
  v13[1] = v17;
  v18 = a5;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientSubscriber] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer] = 0;
  *(_WORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_modePickerState] = 2;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentPalette] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___scrollView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___modePicker] = 0;
  v19 = &v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController];
  *v19 = 0;
  v19[1] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___changeProvider] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___listManager] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___viewDataPublisher] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___udcListViewController] = 1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___latestViewContoller] = 1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___lastUpdatedViewController] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___alphabeticalViewController] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___labsOnboardingTileDisplayEvaluator] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile] = a2;
  v20 = &v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  *(_OWORD *)v20 = *(_OWORD *)a1;
  v21 = *(_OWORD *)(a1 + 16);
  v22 = *(_OWORD *)(a1 + 32);
  v23 = *(_OWORD *)(a1 + 48);
  *((_QWORD *)v20 + 8) = *(_QWORD *)(a1 + 64);
  *((_OWORD *)v20 + 2) = v22;
  *((_OWORD *)v20 + 3) = v23;
  *((_OWORD *)v20 + 1) = v21;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_countProvider] = a3;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_accountStateProvider] = a4;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_factory] = a5;
  v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_displayMode] = 0x80;
  v24 = *(_BYTE *)a1;
  if ((*(_BYTE *)a1 & 0xFC) == 4)
  {
    v25 = a2;
    sub_1BC359A94(a1);
    swift_retain();
    swift_retain();
    v26 = v18;
    v27 = v18;
    v28 = 2;
  }
  else
  {
    LOBYTE(v42) = *(_BYTE *)a1;
    v29 = a2;
    sub_1BC359A94(a1);
    swift_retain();
    swift_retain();
    v26 = v18;
    v30 = v18;
    v31 = sub_1BC463080(&v42);
    if (*((_QWORD *)v31 + 2))
    {
      v28 = v31[32];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v28 = 1;
    }
  }
  v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment] = v28;
  v32 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  v33 = sub_1BC62B564();
  v34 = MEMORY[0x1E0D2B5A0];
  v43 = v33;
  v44 = MEMORY[0x1E0D2B5A0];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
  sub_1BC62B558();
  v35 = (uint64_t)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider];
  sub_1BC34E718(&v42, (uint64_t)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider]);
  LOBYTE(v42) = v24;
  DisplayCategory.Kind.hkDisplayCategory.getter();
  if (v36)
  {
    v37 = v36;
    if (objc_msgSend(v36, sel_color))
    {
      v43 = v33;
      v44 = v34;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      sub_1BC62B558();

      swift_beginAccess();
      __swift_destroy_boxed_opaque_existential_1Tm(v35);
      sub_1BC34E718(&v42, v35);
      swift_endAccess();
    }
    else
    {

    }
  }

  v41.receiver = v15;
  v41.super_class = (Class)type metadata accessor for RecordCategoryViewController();
  v38 = objc_msgSendSuper2(&v41, sel_initWithNibName_bundle_, 0, 0);
  v39 = (void *)sub_1BC62C650();
  sub_1BC359AF8(a1);
  objc_msgSend(v38, sel_setTitle_, v39);

  swift_release();
  swift_release();

  return v38;
}

char *sub_1BC554E10(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  id v14;
  id v15;
  char *v16;
  id v17;
  uint64_t v19;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - v10;
  v12 = sub_1BC62A7B4();
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  v13(v8, 1, 1, v12);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
  v14 = a2;
  v15 = a1;
  swift_bridgeObjectRetain();
  v16 = sub_1BC356878(v14, a1, (uint64_t)v11, 0, 0, (uint64_t)v8, 0, a3, 0);

  v17 = objc_msgSend(v16, sel_navigationItem);
  objc_msgSend(v17, sel_setLargeTitleDisplayMode_, 2);

  return v16;
}

id sub_1BC554F84(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id result;
  id v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  uint64_t (*v56)(uint64_t);
  id v57;
  _QWORD v58[3];
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  char *v63;
  char *v64;
  id v65;
  id v66;
  unsigned __int8 v67;
  _BYTE v68[8];
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;

  v65 = a2;
  v3 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v58 - v7;
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v58 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v58 - v16;
  *(_QWORD *)&v19 = MEMORY[0x1E0C80A78](v18).n128_u64[0];
  v21 = (char *)v58 - v20;
  v22 = objc_msgSend(a1, sel_primaryConcept, v19);
  v23 = objc_msgSend(v22, sel_groupByConcept);

  v66 = v23;
  if (!objc_msgSend(v23, sel_isQualifiedForConceptRoom))
  {
    v39 = sub_1BC62A7B4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v8, 1, 1, v39);
    sub_1BC35EBE0((uint64_t)v8, (uint64_t)v5, type metadata accessor for PresentationContext);
    v40 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
    v41 = v65;
    v42 = a1;
    v43 = sub_1BC5BFBB8(v42, v41, (uint64_t)v5);

    v44 = objc_msgSend(v43, sel_navigationItem);
    objc_msgSend(v44, sel_setLargeTitleDisplayMode_, 2);

    sub_1BC348D78((uint64_t)v8, type metadata accessor for PresentationContext);
    v45 = v66;
LABEL_9:

    return v43;
  }
  v63 = v17;
  v64 = v21;
  HKMedicalRecord.categoryKind.getter(&v67);
  v24 = v67;
  v25 = sub_1BC55B770();
  if (*(_QWORD *)(v25 + 16))
  {
    v26 = sub_1BC558FD8(v24);
    if ((v27 & 1) != 0)
    {
      v28 = (_QWORD *)(*(_QWORD *)(v25 + 56) + 72 * v26);
      LODWORD(v61) = *(unsigned __int8 *)v28;
      v29 = (void *)v28[1];
      v60 = (id)v28[2];
      v30 = v28[3];
      v31 = v28[4];
      v33 = v28[5];
      v32 = v28[6];
      v34 = v11;
      v35 = v28[7];
      v36 = (void *)v28[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37 = v36;
      v11 = v34;
      v62 = v37;
      v38 = v29;
      swift_bridgeObjectRelease();
      v68[0] = v61;
      v69 = v38;
      v70 = v60;
      v71 = v30;
      v72 = v31;
      v73 = v33;
      v74 = v32;
      v61 = v35;
      v75 = v35;
LABEL_8:
      v58[1] = v30;
      v47 = objc_msgSend(v66, sel_identifier);
      v48 = sub_1BC62A7B4();
      v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
      v50 = (uint64_t)v64;
      v49(v64, 1, 1, v48);
      v51 = v50;
      v52 = (uint64_t)v63;
      sub_1BC34EA24(v51, (uint64_t)v63);
      v49(v14, 1, 1, v48);
      sub_1BC34EA24(v52, (uint64_t)v11);
      v58[2] = objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
      v60 = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v53 = v62;
      v54 = v62;
      v59 = v47;
      v55 = v65;
      v43 = sub_1BC356878(v55, v53, (uint64_t)v14, v47, 0, (uint64_t)v11, 0, 0, 0);

      v56 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
      sub_1BC377E3C(v52, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v57 = v60;

      sub_1BC377E3C((uint64_t)v64, (unint64_t *)&qword_1EF42B210, v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = v57;
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  result = objc_msgSend((id)objc_opt_self(), sel_unknownRecordCategory);
  if (result)
  {
    sub_1BC4FC8D8(result, (uint64_t)v68);
    v38 = v69;
    v30 = v71;
    v61 = v75;
    v62 = v76;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_1BC555498(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD v26[2];

  v6 = sub_1BC62BB34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PresentationContext(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v26 - v14;
  v16 = sub_1BC62A7B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_1BC35EBE0((uint64_t)v15, (uint64_t)v13, type metadata accessor for PresentationContext);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
  v17 = a1;
  v18 = a3;
  v19 = sub_1BC5BFBB8(v17, v18, (uint64_t)v13);

  v20 = objc_msgSend(v19, sel_navigationItem);
  objc_msgSend(v20, sel_setLargeTitleDisplayMode_, 2);

  sub_1BC348D78((uint64_t)v15, type metadata accessor for PresentationContext);
  v26[1] = &unk_1EF4D0058;
  v21 = swift_dynamicCastObjCProtocolConditional();
  if (v21)
  {
    objc_msgSend(a2, sel_showAdaptively_sender_animated_, v21, a2, 1);

  }
  else
  {
    v22 = v7;

    sub_1BC62BAF8();
    v23 = sub_1BC62BB28();
    v24 = sub_1BC62CAD0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1BC30A000, v23, v24, "Could not make AdaptiveModalPresentedViewController from factory makeDetailViewController(for:using:)", v25, 2u);
      MEMORY[0x1BCCF36A8](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v6);
  }
}

id sub_1BC5556FC(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  _QWORD v24[2];

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v24 - v5;
  if (a1)
  {
    v7 = a1;
    if ((sub_1BC396E6C(a2) & 1) != 0)
    {
      v24[1] = a2;
      if (qword_1ED6A4888 != -1)
        swift_once();
      v8 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      v9 = sub_1BC62A820();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
      sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1BC639590;
      v11 = objc_msgSend(v7, sel_title);
      v12 = sub_1BC62C680();
      v14 = v13;

      *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v10 + 64) = sub_1BC3644C0();
      *(_QWORD *)(v10 + 32) = v12;
      *(_QWORD *)(v10 + 40) = v14;
      v15 = (id)qword_1ED6A5528;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      sub_1BC62C6A4();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC377E3C((uint64_t)v6, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
      goto LABEL_10;
    }

  }
  if (qword_1ED6A4888 != -1)
    swift_once();
  v16 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v17 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

LABEL_10:
  v18 = (void *)objc_opt_self();
  v19 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v20 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v21 = (void *)sub_1BC62A550();
  v22 = objc_msgSend(v18, sel_basicAlertControllerWithTitle_message_internalError_, v19, v20, v21);

  return v22;
}

void sub_1BC555B28(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t aBlock;
  uint64_t v34;
  void (*v35)(uint64_t, void *);
  void *v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;

  if (qword_1ED6A4888 != -1)
    swift_once();
  v7 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v8 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4E70, (uint64_t (*)(uint64_t))sub_1BC36446C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC639590;
  v10 = objc_msgSend(a1, sel_title, 0xE000000000000000);
  v11 = sub_1BC62C680();
  v13 = v12;

  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1BC3644C0();
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  sub_1BC62C65C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v14, v15, 1);

  v17 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a3;
  *(_QWORD *)(v18 + 24) = a4;
  swift_retain();
  v19 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v37 = sub_1BC55759C;
  v38 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v34 = 1107296256;
  v35 = sub_1BC39B5A0;
  v36 = &block_descriptor_56;
  v20 = _Block_copy(&aBlock);
  swift_release();
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(v21, sel_actionWithTitle_style_handler_, v19, 0, v20, 0xE000000000000000);
  _Block_release(v20);

  objc_msgSend(v16, sel_addAction_, v22);
  v23 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a5;
  *(_QWORD *)(v24 + 24) = a6;
  swift_retain();
  v25 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v37 = sub_1BC5575DC;
  v38 = v24;
  aBlock = MEMORY[0x1E0C809B0];
  v34 = 1107296256;
  v35 = sub_1BC39B5A0;
  v36 = &block_descriptor_6_5;
  v26 = _Block_copy(&aBlock);
  swift_release();
  v27 = objc_msgSend(v21, sel_actionWithTitle_style_handler_, v25, 2, v26, 0xE000000000000000);
  _Block_release(v26);

  objc_msgSend(v16, sel_addAction_, v27);
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v16, 1, 0);

}

char *sub_1BC556034(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  id v21;
  id v22;
  char *v23;
  uint64_t v25;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - v15;
  if (*(_QWORD *)(a2 + 8))
  {
    v17 = *(void **)(a2 + 64);
    v18 = v17;
  }
  else
  {
    v17 = 0;
  }
  sub_1BC34EA24(a3, (uint64_t)v16);
  v19 = sub_1BC62A7B4();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 1, 1, v19);
  sub_1BC34EA24((uint64_t)v16, (uint64_t)v10);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
  v21 = a1;
  v22 = a4;
  v23 = sub_1BC356878(v22, v17, (uint64_t)v13, a1, 0, (uint64_t)v10, 0, 0, 0);

  sub_1BC377E3C((uint64_t)v16, (unint64_t *)&qword_1EF42B210, v20);
  return v23;
}

uint64_t sub_1BC5561C8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t, __n128);
  id v16;
  uint64_t ObjectType;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - v8;
  v10 = sub_1BC62A7B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  v15(v14, a1, v10, v12);
  v16 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
  ObjectType = swift_getObjectType();
  ((void (*)(char *, char *, uint64_t))v15)(v9, v14, v10);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v18(v6, 1, 1, v10);
  v19 = (*(uint64_t (**)(void *, _QWORD, char *, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD, char))(ObjectType + 960))(a2, 0, v9, 0, 0, v6, 0, 0, 0, 1);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  swift_deallocPartialClassInstance();
  return v19;
}

void sub_1BC556394(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  _QWORD *v21;
  void *v22;
  id v23;
  id v24;
  _QWORD v25[6];

  if (a6)
  {
    v14 = a1;
    swift_bridgeObjectRetain();
    v15 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = a1;
    v15 = 0;
  }
  v17 = objc_msgSend(objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController), sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, a3, 0, v15, a1, 0);

  if (a4)
  {
    objc_msgSend(v17, sel_setGatewayProxyToTry_, a4);
  }
  else
  {
    v18 = objc_msgSend(a1, sel_onboardingManager);
    v19 = objc_msgSend(v18, sel_getPendingOnboardingGatewayAndClear);

    objc_msgSend(v17, sel_setGatewayProxyToTry_, v19);
  }
  v20 = objc_msgSend(a1, sel_onboardingManager);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a2;
  v21[3] = v17;
  v21[4] = a7;
  v21[5] = a8;
  v25[4] = sub_1BC4A7A7C;
  v25[5] = v21;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 1107296256;
  v25[2] = sub_1BC42A188;
  v25[3] = &block_descriptor_36_0;
  v22 = _Block_copy(v25);
  v23 = a2;
  v24 = v17;
  sub_1BC38F084(a7);
  swift_release();
  objc_msgSend(v20, sel_registerInflightOnboardingViewController_completion_, v24, v22);
  _Block_release(v22);

}

void sub_1BC556588(void *a1, void *a2, char a3, void *a4, uint64_t a5)
{
  id v10;
  id v11;
  objc_class *v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  _QWORD v17[6];
  objc_super v18;

  v10 = objc_msgSend(a1, sel_healthRecordsStore);
  v11 = objc_msgSend(v10, sel_healthStore);

  LODWORD(v10) = objc_msgSend(v11, sel_supportsHealthRecords);
  if ((_DWORD)v10)
  {
    v12 = (objc_class *)type metadata accessor for OnboardingTileViewController();
    v13 = (char *)objc_allocWithZone(v12);
    *(_QWORD *)&v13[OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_profile] = a1;
    v18.receiver = v13;
    v18.super_class = v12;
    v14 = a1;
    v15 = objc_msgSendSuper2(&v18, sel_initWithStyle_, 1);
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v15);
    if (a4)
    {
      v17[4] = a4;
      v17[5] = a5;
      v17[0] = MEMORY[0x1E0C809B0];
      v17[1] = 1107296256;
      v17[2] = sub_1BC39BE70;
      v17[3] = &block_descriptor_30_1;
      a4 = _Block_copy(v17);
      swift_retain();
      swift_release();
    }
    objc_msgSend(a2, sel_presentViewController_animated_completion_, v16, a3 & 1, a4);
    _Block_release(a4);

  }
}

char *sub_1BC556708(int a1, id a2, char *a3, uint64_t a4, uint64_t a5, char a6)
{
  char v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  id v20[2];

  v20[1] = *(id *)MEMORY[0x1E0C80C00];
  v10 = *a3;
  v11 = objc_msgSend(a2, sel_healthStore);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2EE98]), sel_initWithHealthStore_, v11);

  v13 = (void *)sub_1BC62A784();
  v20[0] = 0;
  v14 = objc_msgSend(v12, sel_accountWithIdentifier_error_, v13, v20);

  v15 = (char *)v20[0];
  if (v14)
  {
    LOBYTE(v20[0]) = v10;
    objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
    swift_bridgeObjectRetain();
    v16 = v14;
    v17 = v15;
    v15 = sub_1BC537354(v16, a2, (char *)v20, a4, a5);
    if ((a6 & 1) != 0)
      sub_1BC538B40();

  }
  else
  {
    v18 = v20[0];
    sub_1BC62A55C();

    swift_willThrow();
  }
  return v15;
}

id sub_1BC5568A0(void *a1)
{
  id v2;
  id v3;
  id result;
  objc_class *v5;
  char *v6;
  id v7;
  objc_super v8;

  v2 = objc_msgSend(a1, sel_healthRecordsStore);
  v3 = objc_msgSend(v2, sel_healthStore);

  LODWORD(v2) = objc_msgSend(v3, sel_supportsHealthRecords);
  result = 0;
  if ((_DWORD)v2)
  {
    v5 = (objc_class *)type metadata accessor for OnboardingTileViewController();
    v6 = (char *)objc_allocWithZone(v5);
    *(_QWORD *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_profile] = a1;
    v8.receiver = v6;
    v8.super_class = v5;
    v7 = a1;
    return objc_msgSendSuper2(&v8, sel_initWithStyle_, 1);
  }
  return result;
}

uint64_t type metadata accessor for ViewControllerFactory()
{
  return objc_opt_self();
}

void sub_1BC55697C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  _QWORD aBlock[6];

  if (qword_1ED6A4888 != -1)
    swift_once();
  v6 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v7 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, 1, 0xE000000000000000);

  v11 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a3;
  *(_QWORD *)(v12 + 24) = a4;
  swift_retain();
  v13 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1BC5576FC;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC39B5A0;
  aBlock[3] = &block_descriptor_22_1;
  v14 = _Block_copy(aBlock);
  swift_release();
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v13, 0, v14, 0xE000000000000000);
  _Block_release(v14);

  objc_msgSend(v10, sel_addAction_, v16);
  v17 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v18 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v18, 2, 0, 0xE000000000000000);

  objc_msgSend(v10, sel_addAction_, v19);
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v10, 1, 0);

}

void _s15HealthRecordsUI21ViewControllerFactoryC018makeOutOfRangeLabsdE05usingSo06UIViewE0CSo9HRProfileC_tF_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char **v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t inited;
  void *v28;
  void *v29;
  unint64_t v30;
  id v31;
  void *v32;
  id v33;
  unsigned int v34;
  id v35;
  void *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  id v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  __int128 v69;
  char *v70;
  char *v71;
  _BYTE v72[8];
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;

  sub_1BC357158(0, (unint64_t *)&qword_1EF42B210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v65 - v6;
  v8 = sub_1BC55B770();
  v9 = &selRef_viewIsAppearing_;
  if (*(_QWORD *)(v8 + 16) && (v10 = sub_1BC558FD8(2), (v11 & 1) != 0))
  {
    v12 = *(_QWORD *)(v8 + 56) + 72 * v10;
    v13 = *(_BYTE *)v12;
    v71 = v4;
    v14 = *(void **)(v12 + 8);
    *(_QWORD *)&v69 = *(_QWORD *)(v12 + 16);
    v70 = v7;
    v15 = *(_QWORD *)(v12 + 24);
    v16 = *(_QWORD *)(v12 + 32);
    v17 = *(_QWORD *)(v12 + 40);
    v18 = *(_QWORD *)(v12 + 48);
    v19 = a1;
    v21 = *(_QWORD *)(v12 + 56);
    v20 = *(void **)(v12 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = v20;
    a1 = v19;
    v23 = v22;
    v24 = v14;
    v25 = v23;
    swift_bridgeObjectRelease();
    v72[0] = v13;
    v9 = &selRef_viewIsAppearing_;
    v73 = v24;
    v74 = v69;
    v4 = v71;
    v75 = v15;
    v76 = v16;
    v7 = v70;
    v77 = v17;
    v78 = v18;
    v79 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    v26 = objc_msgSend((id)objc_opt_self(), sel_unknownRecordCategory);
    if (!v26)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    sub_1BC4FC8D8(v26, (uint64_t)v72);
    v24 = v73;
    v25 = v80;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1BC5577A0(0, &qword_1EF436680, &qword_1EF436688, (unint64_t *)&qword_1EF436690);
  inited = swift_initStackObject();
  v69 = xmmword_1BC639590;
  *(_OWORD *)(inited + 16) = xmmword_1BC639590;
  v28 = (void *)objc_opt_self();
  *(_QWORD *)(inited + 32) = objc_msgSend(v28, sel_diagnosticTestResultType);
  v29 = (void *)objc_opt_self();
  *(_QWORD *)(inited + 40) = objc_msgSend(v29, sel_predicateForDiagnosticTestResultWithReferenceRangeStatus_, 2);
  v30 = sub_1BC35D3C8(inited);
  v31 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v31)
  {
    __break(1u);
    goto LABEL_18;
  }
  v32 = v31;
  v33 = objc_msgSend(v31, sel_features);

  if (!v33)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v34 = objc_msgSend(v33, sel_stanley);

  if (v34)
  {
    v35 = a1;
    v36 = (void *)sub_1BC372BE0(v30);
    swift_bridgeObjectRelease();
    v37 = sub_1BC62A7B4();
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
    v38(v7, 1, 1, v37);
    v38(v4, 1, 1, v37);
    v39 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
    sub_1BC356878(v35, v25, (uint64_t)v7, 0, 0, (uint64_t)v4, 0, v36, 0);
LABEL_16:

    return;
  }
  swift_bridgeObjectRelease();
  v40 = sub_1BC55B770();
  v41 = *(_QWORD *)(v40 + 16);
  v71 = v4;
  v70 = v7;
  v68 = a1;
  v67 = v25;
  if (v41)
  {
    v42 = sub_1BC558FD8(2);
    if ((v43 & 1) != 0)
    {
      v44 = *(_QWORD *)(v40 + 56) + 72 * v42;
      v45 = *(_BYTE *)v44;
      v46 = *(void **)(v44 + 8);
      v66 = *(_QWORD *)(v44 + 16);
      v47 = *(_QWORD *)(v44 + 24);
      v65 = *(_QWORD *)(v44 + 32);
      v48 = *(_QWORD *)(v44 + 40);
      v49 = *(_QWORD *)(v44 + 48);
      v51 = *(_QWORD *)(v44 + 56);
      v50 = *(void **)(v44 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v52 = v50;
      v53 = v46;
      swift_bridgeObjectRelease();
      v72[0] = v45;
      v73 = v53;
      v74 = v66;
      v75 = v47;
      v76 = v65;
      v77 = v48;
      v78 = v49;
      v79 = v51;
      v80 = v52;
LABEL_15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1BC5577A0(0, &qword_1EF42D8E0, (unint64_t *)&qword_1EF4366A0, &qword_1ED6A58D8);
      v55 = swift_initStackObject();
      *(_OWORD *)(v55 + 16) = v69;
      *(_QWORD *)(v55 + 32) = objc_msgSend(v28, sel_diagnosticTestResultType);
      *(_QWORD *)(v55 + 40) = objc_msgSend(v29, sel_predicateForDiagnosticTestResultWithReferenceRangeStatus_, 2);
      v56 = (void *)sub_1BC35C4C8(v55);
      v57 = sub_1BC62A7B4();
      v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56);
      v59 = (uint64_t)v70;
      v58(v70, 1, 1, v57);
      v60 = (uint64_t)v71;
      v58(v71, 1, 1, v57);
      v61 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
      v62 = v68;
      v63 = v52;
      swift_bridgeObjectRetain();
      v64 = sub_1BC356878(v62, v52, v59, 0, 0, v60, 0, v56, 0);

      v35 = objc_msgSend(v64, sel_navigationItem);
      objc_msgSend(v35, sel_setLargeTitleDisplayMode_, 2);

      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  v54 = objc_msgSend((id)objc_opt_self(), v9[105]);
  if (v54)
  {
    sub_1BC4FC8D8(v54, (uint64_t)v72);
    v53 = v73;
    v52 = v80;
    goto LABEL_15;
  }
LABEL_20:
  __break(1u);
}

uint64_t method lookup function for ViewControllerFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ViewControllerFactory.makeViewController(forAccount:using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAndPresentAddAccountViewController(for:from:onboardingContext:gatewayProxyToTry:sourceIdentifier:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAndPresentOnboardingTileViewController(for:from:sourceIdentifier:animated:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAccountDetailViewController(forAccountID:using:style:sourceIdentifier:standalone:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAccountDetailViewController(for:using:style:sourceIdentifier:standalone:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ViewControllerFactory.objC_makeAccountDetailViewController(for:using:sourceIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ViewControllerFactory.viewControllerIsAccountDetailViewController(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeOnboadingTileViewController(using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeFailedToOnboardAccountAlertController(to:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAndPresentFailedToOnboardAccountAlertController(to:from:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeSettingsViewControllerAssumingHealthRecordsAreAvailable(using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeViewController(for:using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeViewController(forConcept:fromDisplayCategory:highlightedRecord:using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeDetailViewController(for:using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAndShowRecordDetailViewController(for:on:using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t sub_1BC557578()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC55759C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC553544(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1E74E3618, (uint64_t)&unk_1EF436668);
}

uint64_t block_copy_helper_55(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_55()
{
  return swift_release();
}

uint64_t sub_1BC5575DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC553544(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1E74E35F0, (uint64_t)&unk_1EF436658);
}

uint64_t sub_1BC557608(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC377F18;
  return sub_1BC55363C(a1, v4, v5, v6);
}

uint64_t sub_1BC557684(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC3781C0;
  return sub_1BC553458(a1, v4, v5, v6);
}

uint64_t sub_1BC5576FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC553544(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1E74E3690, (uint64_t)&unk_1EF436678);
}

uint64_t sub_1BC557728(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC3781C0;
  return sub_1BC553458(a1, v4, v5, v6);
}

void sub_1BC5577A0(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC5577F8(255, a3, a4);
    v5 = sub_1BC62D538();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC5577F8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC34B6A0(255, a3);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58C0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BC55787C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

id _s15HealthRecordsUI33MedicalRecordChartDataTransformerPAAE27defaultUnselectedSeriesMainSo7UIColorCyF_0()
{
  return objc_msgSend((id)objc_opt_self(), sel_hk_chartInactiveSeriesColor);
}

void sub_1BC557920()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup);
  v2 = objc_msgSend(v1, sel_superview);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_intrinsicContentSize);

  }
  else
  {
    objc_msgSend(v1, sel_intrinsicContentSize);
  }
}

void *sub_1BC557998(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = (void *)sub_1BC5585A8(a1);
  v2 = v1;
  return v1;
}

void sub_1BC5579C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  sub_1BC558338(a1, v2, ObjectType, a2);
}

id sub_1BC5579FC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  id v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  char **v29;
  id v30;
  void *v31;
  unsigned int v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;

  v46 = a2;
  v4 = sub_1BC62A31C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC34631C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - v11;
  v13 = sub_1BC62A760();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v45 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v48 = (char *)&v43 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v43 - v19;
  *(_QWORD *)&v22 = MEMORY[0x1E0C80A78](v21).n128_u64[0];
  v50 = (char *)&v43 - v23;
  v24 = objc_msgSend(a1, sel_startDate, v22);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    v9 = v12;
    goto LABEL_5;
  }
  v25 = v24;
  v43 = v5;
  v44 = v4;
  v49 = v2;
  sub_1BC62A724();

  v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v26(v12, v20, v13);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v27(v12, 0, 1, v13);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v28(v12, 1, v13) == 1)
  {
    v9 = v12;
    v2 = v49;
LABEL_5:
    v29 = &selRef_predicateWithFormat_;
LABEL_12:
    sub_1BC36D71C((uint64_t)v9);
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_monthYearLabel), v29[349], 0);
    return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel), v29[349], 0);
  }
  v26(v50, v12, v13);
  v30 = objc_msgSend(a1, sel_endDate);
  if (!v30)
  {
    v27(v9, 1, 1, v13);
    v29 = &selRef_predicateWithFormat_;
    goto LABEL_11;
  }
  v31 = v30;
  sub_1BC62A724();

  v26(v9, v20, v13);
  v27(v9, 0, 1, v13);
  v32 = v28(v9, 1, v13);
  v29 = &selRef_predicateWithFormat_;
  if (v32 == 1)
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v50, v13);
    v2 = v49;
    goto LABEL_12;
  }
  v33 = v48;
  v26(v48, v9, v13);
  v34 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v34(v20, v50, v13);
  v34(v45, v33, v13);
  v35 = (uint64_t)v47;
  sub_1BC62A2F8();
  v2 = v49;
  v36 = *(void **)(v49 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_monthYearLabel);
  HKTimeScope.bucketDateRangeString(from:)(v35, v46);
  if (v37)
  {
    v38 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = 0;
  }
  v41 = v43;
  v40 = v44;
  objc_msgSend(v36, sel_setText_, v38);

  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v35, v40);
  v42 = *(void (**)(char *, uint64_t))(v14 + 8);
  v42(v48, v13);
  v42(v50, v13);
  return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel), v29[349], 0);
}

id MedicalRecordAnnotationViewDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *MedicalRecordAnnotationViewDataSource.init()()
{
  void *v0;
  void *v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  double v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  char *v25;
  void *v26;
  char *v27;
  id v28;
  objc_super v30;
  uint64_t v31;

  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = objc_msgSend(v1, sel_hk_chartLollipopLabelColor);
  v4 = objc_msgSend((id)objc_opt_self(), sel_hk_chartCurrentValueDateFont);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_setFont_, v4);
  objc_msgSend(v5, sel_setTextColor_, v3);
  LODWORD(v6) = 1144750080;
  objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v6);
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_monthYearLabel] = v5;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v8 = v5;
  v9 = objc_msgSend(v7, sel_init);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v9, sel_setFont_, v4);
  objc_msgSend(v9, sel_setTextColor_, v3);
  if (qword_1EF428568 != -1)
    swift_once();
  v10 = (id)qword_1EF42F6E0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v11 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setText_, v11, 0xE000000000000000);

  objc_msgSend(v9, sel_setHidden_, 1);
  LODWORD(v12) = 1144750080;
  objc_msgSend(v9, sel_setContentHuggingPriority_forAxis_, 0, v12);
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dividerLabel] = v9;
  v13 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v14 = v9;
  v15 = objc_msgSend(v13, sel_init);
  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v15, sel_setFont_, v4);
  objc_msgSend(v15, sel_setTextColor_, v3);
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel] = v15;
  sub_1BC34D844();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC639580;
  *(_QWORD *)(v16 + 32) = v8;
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  v31 = v16;
  sub_1BC62C890();
  v17 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC5586AC();
  v18 = v15;
  v19 = v8;
  v20 = v14;
  v21 = v18;
  v22 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v17, sel_initWithArrangedSubviews_, v22);

  objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup] = v23;
  v24 = v23;

  v30.receiver = v2;
  v30.super_class = (Class)type metadata accessor for MedicalRecordAnnotationViewDataSource();
  v25 = (char *)objc_msgSendSuper2(&v30, sel_init);
  v26 = *(void **)&v25[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup];
  v27 = v25;
  v28 = v26;
  objc_msgSend(v28, sel_setAxis_, 1);
  objc_msgSend(*(id *)&v27[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dividerLabel], sel_setHidden_, 1);

  return v27;
}

id sub_1BC558244()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup);
}

id MedicalRecordAnnotationViewDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordAnnotationViewDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC558338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  id v15;
  void *v16;
  id v17;
  uint64_t ObjectType;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  id v25;

  v7 = sub_1BC62A760();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(id *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_monthYearLabel);
  (*(void (**)(uint64_t, uint64_t, __n128))(a4 + 16))(a3, a4, v9);
  v12 = (id)HKDateFormatterFromTemplate();
  if (!v12)
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v23 = *(void (**)(uint64_t, uint64_t))(a4 + 8);
  v23(a3, a4);
  v13 = (void *)sub_1BC62A700();
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24 = v7;
  v14(v11, v7);
  v15 = objc_msgSend(v12, sel_stringFromDate_, v13);

  if (!v15)
  {
    sub_1BC62C680();
    v15 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v25, sel_setText_, v15);

  v16 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4) & 1) != 0)
  {
    v17 = (id)HKDateFormatterFromTemplate();
    if (!v17)
      v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    ObjectType = swift_getObjectType();
    v23(ObjectType, a4);
    v19 = (void *)sub_1BC62A700();
    v14(v11, v24);
    v20 = objc_msgSend(v17, sel_stringFromDate_, v19);

    sub_1BC62C680();
    v21 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
  }
  objc_msgSend(v16, sel_setText_, v21);

}

uint64_t sub_1BC5585A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup);
  if (a1 == 1)
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup), sel_setAxis_, 0);
    v3 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dividerLabel);
    v4 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel), sel_text);
    if (v4)
    {
      v5 = v4;
      v6 = sub_1BC62C680();
      v8 = v7;

      swift_bridgeObjectRelease();
      v9 = HIBYTE(v8) & 0xF;
      if ((v8 & 0x2000000000000000) == 0)
        v9 = v6 & 0xFFFFFFFFFFFFLL;
      v10 = v9 == 0;
    }
    else
    {
      v10 = 1;
    }
    objc_msgSend(v3, sel_setHidden_, v10);
  }
  else if (!a1)
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup), sel_setAxis_, 1);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dividerLabel), sel_setHidden_, 1);
  }
  return v2;
}

unint64_t sub_1BC5586AC()
{
  unint64_t result;

  result = qword_1EF429090;
  if (!qword_1EF429090)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF429090);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordAnnotationViewDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedicalRecordAnnotationViewDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.dateGroupWidth.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.numberOfValues(forAnnotationView:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.valueViewForColumn(at:orientation:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.showSeparators()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.dateView(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.leftMarginView(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.updateDateGroup(using:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.updateDateGroup(using:timeScope:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

double static DisplayItemProvider.supportedCategory(for:)@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  double result;

  v3 = *a1;
  v4 = sub_1BC55B770();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1BC559388(v3), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(v4 + 56) + 72 * v5;
    v9 = *(void **)(v7 + 8);
    v8 = *(_QWORD *)(v7 + 16);
    v10 = *(_QWORD *)(v7 + 40);
    v11 = *(_QWORD *)(v7 + 48);
    v12 = *(_QWORD *)(v7 + 56);
    v13 = *(void **)(v7 + 64);
    *(_BYTE *)a2 = *(_BYTE *)v7;
    *(_QWORD *)(a2 + 8) = v9;
    *(_QWORD *)(a2 + 16) = v8;
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(v7 + 24);
    *(_QWORD *)(a2 + 40) = v10;
    *(_QWORD *)(a2 + 48) = v11;
    *(_QWORD *)(a2 + 56) = v12;
    *(_QWORD *)(a2 + 64) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v13;
    v15 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void static DisplayItemProvider.displayCategory(for:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;

  v3 = *a1;
  v4 = sub_1BC55B770();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1BC559388(v3), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(v4 + 56) + 72 * v5;
    v8 = *(_BYTE *)v7;
    v9 = *(void **)(v7 + 8);
    v10 = *(_QWORD *)(v7 + 16);
    v11 = *(_QWORD *)(v7 + 24);
    v19 = *(_QWORD *)(v7 + 32);
    v12 = *(_QWORD *)(v7 + 40);
    v13 = *(_QWORD *)(v7 + 48);
    v14 = *(_QWORD *)(v7 + 56);
    v15 = *(void **)(v7 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v15;
    v17 = v9;
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v8;
    *(_QWORD *)(a2 + 8) = v17;
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v11;
    *(_QWORD *)(a2 + 32) = v19;
    *(_QWORD *)(a2 + 40) = v12;
    *(_QWORD *)(a2 + 48) = v13;
    *(_QWORD *)(a2 + 56) = v14;
    *(_QWORD *)(a2 + 64) = v16;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = objc_msgSend((id)objc_opt_self(), sel_unknownRecordCategory);
    if (v18)
      sub_1BC4FC8D8(v18, a2);
    else
      __break(1u);
  }
}

uint64_t static DisplayItemProvider.supportedSampleTypes.getter()
{
  id v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_allSupportedSampleTypes);
  if (!v0)
    return MEMORY[0x1E0DEE9E8];
  v1 = v0;
  sub_1BC34B6A0(0, &qword_1ED6A58D8);
  v2 = sub_1BC62C878();

  v3 = sub_1BC58C1DC(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static DisplayItemProvider.orderedSupportedCategories.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v3;

  _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BC3D6B50(v0);
  swift_bridgeObjectRelease();
  v3 = v1;
  sub_1BC558B08((uint64_t *)&v3);
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

uint64_t sub_1BC558B08(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC5048B4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BC55AB34(v5);
  *a1 = v2;
  return result;
}

uint64_t static DisplayItemProvider.supportedCategoryTypes.getter()
{
  id v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v0 = (id)HKMedicalRecordAllSupportedCategoryTypes();
  if (!v0)
    return MEMORY[0x1E0DEE9E8];
  v1 = v0;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  v2 = sub_1BC62C878();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_4;
LABEL_18:
    v6 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_19:
    swift_bridgeObjectRelease_n();
    v12 = sub_1BC58C664((uint64_t)v6);
    swift_bridgeObjectRelease();
    return v12;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v3 = result;
  if (!result)
    goto LABEL_18;
LABEL_4:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1BCCF24CC](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_integerValue);

      if ((unint64_t)v9 <= 0xA)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1BC3B6FE4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
        v11 = *((_QWORD *)v6 + 2);
        v10 = *((_QWORD *)v6 + 3);
        if (v11 >= v10 >> 1)
          v6 = sub_1BC3B6FE4((char *)(v10 > 1), v11 + 1, 1, v6);
        *((_QWORD *)v6 + 2) = v11 + 1;
        v6[v11 + 32] = (char)v9;
      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void static DisplayItemProvider.unknownCategory.getter(uint64_t a1@<X8>)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_unknownRecordCategory);
  if (v2)
    sub_1BC4FC8D8(v2, a1);
  else
    __break(1u);
}

uint64_t DisplayItemProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DisplayItemProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1BC558D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC62D670();
  sub_1BC62C740();
  v4 = sub_1BC62D6AC();
  return sub_1BC559798(a1, a2, v4);
}

unint64_t sub_1BC558DF8(uint64_t *a1)
{
  uint64_t v2;
  _BYTE v4[32];
  uint64_t v5;
  char v6;

  sub_1BC62D670();
  sub_1BC3CC3CC((uint64_t)a1, (uint64_t)v4);
  sub_1BC3CC3CC((uint64_t)v4, (uint64_t)&v5);
  if ((v6 & 1) == 0)
  {
    sub_1BC62D688();
    sub_1BC62D67C();
    sub_1BC62D67C();
    sub_1BC62D67C();
    if (a1[5])
      goto LABEL_3;
LABEL_5:
    sub_1BC62D688();
    goto LABEL_6;
  }
  sub_1BC62D688();
  if (!a1[5])
    goto LABEL_5;
LABEL_3:
  sub_1BC62D688();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  sub_1BC3CC428((uint64_t)a1);
LABEL_6:
  v2 = sub_1BC62D6AC();
  return sub_1BC559878(a1, v2);
}

unint64_t sub_1BC558F0C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC62C680();
  sub_1BC62D670();
  sub_1BC62C740();
  v2 = sub_1BC62D6AC();
  swift_bridgeObjectRelease();
  return sub_1BC559984(a1, v2);
}

unint64_t sub_1BC558F8C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62CEA8();
  return sub_1BC559DBC(a1, v2, &qword_1ED6A58D8);
}

unint64_t sub_1BC558FE0(double a1)
{
  uint64_t v2;

  v2 = sub_1BC62D664();
  return sub_1BC559AF8(v2, a1);
}

unint64_t sub_1BC559014(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1BC62A7B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v3 = sub_1BC62C5C0();
  return sub_1BC55A948(a1, v3, v2, (unint64_t *)&qword_1EF429288, MEMORY[0x1E0CB09D0]);
}

unint64_t sub_1BC5590AC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v8;
  id v9;
  uint64_t v10;

  sub_1BC62D670();
  if (a2)
  {
    sub_1BC62D688();
    swift_bridgeObjectRetain();
    sub_1BC62C740();
    swift_bridgeObjectRelease();
    if (a3)
      goto LABEL_3;
LABEL_6:
    sub_1BC62D688();
    if (a4)
      goto LABEL_4;
LABEL_7:
    sub_1BC62D688();
    goto LABEL_8;
  }
  sub_1BC62D688();
  if (!a3)
    goto LABEL_6;
LABEL_3:
  sub_1BC62D688();
  v8 = a3;
  sub_1BC62CEC0();

  if (!a4)
    goto LABEL_7;
LABEL_4:
  sub_1BC62D688();
  v9 = a4;
  sub_1BC62CEC0();

LABEL_8:
  v10 = sub_1BC62D6AC();
  return sub_1BC559B90(a1, a2, a3, a4, v10);
}

unint64_t sub_1BC5591BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62CEA8();
  return sub_1BC559DBC(a1, v2, &qword_1EF429748);
}

unint64_t sub_1BC559208(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62CEA8();
  return sub_1BC559DBC(a1, v2, (unint64_t *)&qword_1ED6A5990);
}

unint64_t sub_1BC559254(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62D16C();
  return sub_1BC559ECC(a1, v2);
}

unint64_t sub_1BC559284(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7;
  uint64_t v8;

  v7 = a4 & 1;
  sub_1BC62D670();
  AccountIcon.Size.hash(into:)();
  v8 = sub_1BC62D6AC();
  return sub_1BC559F90(a1, a2, a3, v7, v8);
}

unint64_t sub_1BC559308(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62D664();
  return sub_1BC55A0C8(a1, v2);
}

unint64_t sub_1BC55933C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62CEA8();
  return sub_1BC559DBC(a1, v2, &qword_1EF429110);
}

unint64_t sub_1BC559388(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1BC62D670();
  sub_1BC62D67C();
  v2 = sub_1BC62D6AC();
  return sub_1BC55A164(a1, v2);
}

unint64_t sub_1BC5593EC(uint64_t a1)
{
  uint64_t v2;

  sub_1BC62C680();
  sub_1BC62D670();
  sub_1BC62C740();
  v2 = sub_1BC62D6AC();
  swift_bridgeObjectRelease();
  return sub_1BC559984(a1, v2);
}

unint64_t sub_1BC559478(uint64_t a1)
{
  uint64_t v2;

  sub_1BC62D670();
  BrowseCategory.rawValue.getter();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  v2 = sub_1BC62D6AC();
  return sub_1BC55A204(a1, v2);
}

void sub_1BC5594EC(__int128 *a1)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  _BYTE v5[72];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v2 = a1[3];
  v8 = a1[2];
  v9 = v2;
  v10 = *((_QWORD *)a1 + 8);
  v3 = a1[1];
  v6 = *a1;
  v7 = v3;
  sub_1BC62D670();
  DisplayCategory.hash(into:)((uint64_t)v5);
  v4 = sub_1BC62D6AC();
  sub_1BC55A370(a1, v4);
}

unint64_t sub_1BC55955C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC62D670();
  sub_1BC62D67C();
  v2 = sub_1BC62D6AC();
  return sub_1BC55A0C8(a1, v2);
}

unint64_t sub_1BC5595C0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1BC62A760();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC347F0C(&qword_1EF4288B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  v3 = sub_1BC62C5C0();
  return sub_1BC55A948(a1, v3, v2, &qword_1EF428D80, MEMORY[0x1E0CB08B8]);
}

unint64_t sub_1BC559658(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_1BC62D670();
  sub_1BC62D67C();
  v2 = sub_1BC62D6AC();
  return sub_1BC55AA78(v1, v2);
}

unint64_t sub_1BC5596B4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62CEA8();
  return sub_1BC559DBC(a1, v2, (unint64_t *)&qword_1EF436690);
}

unint64_t sub_1BC559700(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62CEA8();
  return sub_1BC559DBC(a1, v2, &qword_1ED6A48A0);
}

unint64_t sub_1BC55974C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC62CEA8();
  return sub_1BC559DBC(a1, v2, &qword_1ED6A5900);
}

unint64_t sub_1BC559798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1BC62D574() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1BC62D574() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1BC559878(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v21;
  BOOL v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = ~v4;
    v8 = *(_QWORD *)(v2 + 48);
    v9 = *a1;
    v10 = a1[1];
    v11 = a1[2];
    v12 = *((_BYTE *)a1 + 24);
    do
    {
      v13 = (uint64_t *)(v8 + 48 * v5);
      v14 = v13[4];
      v15 = v13[5];
      if ((v13[3] & 1) != 0)
      {
        if ((v12 & 1) == 0)
          goto LABEL_4;
      }
      else
      {
        if ((v12 & 1) != 0)
          goto LABEL_4;
        v16 = *v13;
        v17 = v13[1];
        v18 = v13[2];
        v19 = v16 == v9 && v17 == v10;
        if (!v19 || v18 != v11)
          goto LABEL_4;
      }
      v21 = a1[5];
      if (v15)
      {
        if (v21)
        {
          v22 = v14 == a1[4] && v15 == v21;
          if (v22 || (sub_1BC62D574() & 1) != 0)
            return v5;
        }
      }
      else if (!v21)
      {
        return v5;
      }
LABEL_4:
      v5 = (v5 + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_1BC559984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1BC62C680();
    v8 = v7;
    if (v6 == sub_1BC62C680() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1BC62C680();
          v15 = v14;
          if (v13 == sub_1BC62C680() && v15 == v16)
            break;
          v18 = sub_1BC62D574();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1BC559AF8(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      v7 = ~v4;
      for (result = (result + 1) & v7;
            ((*(_QWORD *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1BC559B90(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char v19;
  id v20;
  id v21;
  char v22;
  id v23;
  id v24;
  id v25;
  char v26;
  id v29;
  uint64_t v32;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = v5;
    v10 = a3;
    v12 = a1;
    v13 = ~v7;
    v32 = ~v7;
    do
    {
      v14 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 32 * v8);
      v15 = v14[1];
      v16 = (void *)v14[2];
      v17 = (void *)v14[3];
      if (v15)
      {
        if (!a2)
          goto LABEL_4;
        if (*v14 != v12 || v15 != a2)
        {
          v19 = sub_1BC62D574();
          v13 = v32;
          if ((v19 & 1) == 0)
            goto LABEL_4;
        }
      }
      else if (a2)
      {
        goto LABEL_4;
      }
      if (v16)
      {
        if (!v10)
          goto LABEL_4;
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A47F8);
        v29 = v17;
        v20 = v10;
        swift_bridgeObjectRetain();
        v21 = v16;
        v22 = sub_1BC62CEB4();

        if ((v22 & 1) == 0)
        {

          swift_bridgeObjectRelease();
LABEL_25:
          v12 = a1;
          v10 = a3;
          v13 = v32;
          goto LABEL_4;
        }
      }
      else
      {
        if (v10)
          goto LABEL_4;
        v23 = v17;
        swift_bridgeObjectRetain();
      }
      if (v17)
      {
        if (!a4)
        {
          swift_bridgeObjectRelease();

          goto LABEL_25;
        }
        sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
        v24 = v17;
        v25 = a4;
        v26 = sub_1BC62CEB4();

        swift_bridgeObjectRelease();
        v12 = a1;
        v10 = a3;
        v13 = v32;
        if ((v26 & 1) != 0)
          return v8;
      }
      else
      {
        swift_bridgeObjectRelease();

        v12 = a1;
        v10 = a3;
        v13 = v32;
        if (!a4)
          return v8;
      }
LABEL_4:
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_1BC559DBC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1BC34B6A0(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1BC62CEB4();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1BC62CEB4();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1BC559ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1BC3CD62C(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1BCCF2448](v9, a1);
      sub_1BC3DDAC0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1BC559F90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  uint64_t v14;
  double v15;
  BOOL v18;
  char v19;
  char v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  BOOL v28;

  v7 = -1 << *(_BYTE *)(v5 + 32);
  result = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v9 = ~v7;
    v10 = a3 | a2;
    if (a3 | a2)
      v11 = 0;
    else
      v11 = (unint64_t)(a1 - 1) < 2;
    if (v10)
      v12 = 0;
    else
      v12 = a1 == 1;
    if (v10)
      v13 = 0;
    else
      v13 = a1 == 2;
    v14 = v10 | a1;
    v15 = *(double *)&a1;
    v18 = (a4 & 1) == 0 || v14 == 0;
    v19 = v18;
    if (v18)
      v11 = 1;
    v20 = v18 || v12;
    do
    {
      v21 = *(_QWORD *)(v5 + 48) + 32 * result;
      v23 = *(double *)v21;
      v22 = *(double *)(v21 + 8);
      v24 = *(double *)(v21 + 16);
      if (*(_BYTE *)(v21 + 24) == 1)
      {
        v25 = *(_QWORD *)&v24 | *(_QWORD *)&v22;
        if (v25 | *(_QWORD *)&v23)
        {
          if (*(_QWORD *)&v23 == 1 && v25 == 0)
          {
            if ((v19 & 1) == 0 && v12)
              return result;
          }
          else if (*(_QWORD *)&v23 == 2 && v25 == 0)
          {
            if ((v20 & 1) == 0 && v13)
              return result;
          }
          else if (!v11)
          {
            return result;
          }
        }
        else if ((a4 & 1) != 0 && !v14)
        {
          return result;
        }
      }
      else if ((a4 & 1) == 0)
      {
        v28 = v23 == v15 && v22 == *(double *)&a2;
        if (v28 && v24 == *(double *)&a3)
          return result;
      }
      result = (result + 1) & v9;
    }
    while (((*(_QWORD *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1BC55A0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1BC55A164(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1BC55A204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[2];

  v3 = v2;
  v22[1] = a1;
  v5 = type metadata accessor for BrowseCategory();
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2 + 64;
  v10 = -1 << *(_BYTE *)(v2 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v2 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_1BC3B226C(*(_QWORD *)(v3 + 48) + v13 * v11, (uint64_t)v8);
      BrowseCategory.rawValue.getter();
      v15 = v14;
      v17 = v16;
      BrowseCategory.rawValue.getter();
      if (v15 == v19 && v17 == v18)
        break;
      v20 = sub_1BC62D574();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC3B22E8((uint64_t)v8);
      if ((v20 & 1) == 0)
      {
        v11 = (v11 + 1) & v12;
        if (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
          continue;
      }
      return v11;
    }
    swift_bridgeObjectRelease_n();
    sub_1BC3B22E8((uint64_t)v8);
  }
  return v11;
}

void sub_1BC55A370(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  char v33;
  void *v34;
  char v35;
  char v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  char v41;
  uint64_t v42;
  id v43;
  void *v44;
  char v45;
  unint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  unint64_t v67;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
    return;
  v6 = ~v4;
  v7 = *(unsigned __int8 *)a1;
  v59 = a1[4];
  v60 = a1[3];
  v57 = a1[2];
  v58 = a1[5];
  v67 = a1[6];
  v56 = a1[7];
  v62 = ~v4;
  v65 = v7;
  while (1)
  {
    v8 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 72 * v5);
    if (*(unsigned __int8 *)v8 != v7)
      goto LABEL_4;
    v10 = (void *)v8[1];
    v9 = v8[2];
    v11 = v8[3];
    v66 = v8[4];
    v13 = v8[5];
    v12 = v8[6];
    v15 = v8[7];
    v14 = (void *)v8[8];
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A4E60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v14;
    v17 = v10;
    if ((sub_1BC62CEB4() & 1) == 0)
    {
LABEL_3:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = v63;
      v2 = v64;
      v6 = v62;

      v7 = v65;
      goto LABEL_4;
    }
    v61 = v15;
    if (v11)
    {
      v18 = v13;
      v19 = v12;
      if (!v60)
        goto LABEL_3;
      v20 = v9 == v57 && v11 == v60;
      if (!v20 && (sub_1BC62D574() & 1) == 0)
        goto LABEL_3;
    }
    else
    {
      v18 = v13;
      v19 = v12;
      if (v60)
        goto LABEL_3;
    }
    v21 = v66 == v59 && v18 == v58;
    if (!v21 && (sub_1BC62D574() & 1) == 0)
      goto LABEL_3;
    if ((unint64_t)v19 >> 62)
    {
      swift_bridgeObjectRetain();
      v49 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      v22 = v49;
    }
    else
    {
      v22 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v23 = v67;
    v24 = v67 >> 62;
    if (v67 >> 62)
    {
      v53 = v22;
      swift_bridgeObjectRetain();
      v50 = sub_1BC62D3B8();
      sub_1BC3FE9FC((uint64_t)&v67);
      v22 = v53;
      if (v53 != v50)
        goto LABEL_3;
    }
    else if (v22 != *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_3;
    }
    if (v22)
    {
      v25 = v19 & 0xFFFFFFFFFFFFFF8;
      v26 = (v19 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v19 < 0)
        v25 = v19;
      if ((unint64_t)v19 >> 62)
        v26 = v25;
      v27 = v23 & 0xFFFFFFFFFFFFFF8;
      v28 = (v23 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v23 < 0)
        v27 = v23;
      if (v24)
        v28 = v27;
      if (v26 != v28)
        break;
    }
LABEL_44:
    if ((sub_1BC3ED4CC(v61, v56) & 1) == 0)
      goto LABEL_3;
    v36 = sub_1BC62CEB4();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v3 = v63;
    v2 = v64;
    v6 = v62;
    v7 = v65;
    if ((v36 & 1) != 0)
      return;
LABEL_4:
    v5 = (v5 + 1) & v6;
    if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      return;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    v55 = v19 & 0xC000000000000001;
    v51 = v22;
    if ((v19 & 0xC000000000000001) != 0)
    {
      v29 = (id)MEMORY[0x1BCCF24CC](0, v19);
    }
    else
    {
      if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_77;
      v29 = *(id *)(v19 + 32);
    }
    v30 = v29;
    v54 = v23 & 0xC000000000000001;
    if ((v23 & 0xC000000000000001) != 0)
    {
      v31 = (id)MEMORY[0x1BCCF24CC](0, v23);
    }
    else
    {
      if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_78;
      v31 = *(id *)(v23 + 32);
    }
    v32 = v31;
    sub_1BC34B6A0(0, &qword_1ED6A48A0);
    v33 = sub_1BC62CEB4();
    v34 = v30;
    v35 = v33;

    if ((v35 & 1) == 0)
      goto LABEL_3;
    if (v51 != 1)
    {
      if (v55)
      {
        v37 = (id)MEMORY[0x1BCCF24CC](1, v19);
      }
      else
      {
        if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
          goto LABEL_81;
        v37 = *(id *)(v19 + 40);
      }
      v38 = v37;
      if (v54)
      {
        v39 = (id)MEMORY[0x1BCCF24CC](1, v23);
      }
      else
      {
        if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
          goto LABEL_82;
        v39 = *(id *)(v23 + 40);
      }
      v40 = v39;
      v41 = sub_1BC62CEB4();

      if ((v41 & 1) == 0)
        goto LABEL_3;
      v52 = 2 - v51;
      v42 = 6;
      while (v52 + v42 != 6)
      {
        v46 = v42 - 4;
        if (v55)
        {
          v47 = (id)MEMORY[0x1BCCF24CC](v42 - 4, v19);
        }
        else
        {
          if (v46 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_79;
          v47 = *(id *)(v19 + 8 * v42);
        }
        v48 = v47;
        if (v54)
        {
          v43 = (id)MEMORY[0x1BCCF24CC](v42 - 4, v23);
        }
        else
        {
          if (v46 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_80;
          v43 = *(id *)(v23 + 8 * v42);
        }
        v44 = v43;
        v45 = sub_1BC62CEB4();

        ++v42;
        if ((v45 & 1) == 0)
          goto LABEL_3;
      }
    }
    goto LABEL_44;
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
}

unint64_t sub_1BC55A948(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1BC347F0C(v21, v20, v22);
      v17 = sub_1BC62C644();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1BC55AA78(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1BC55AB34(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;

  v3 = a1[1];
  result = sub_1BC62D520();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_134;
    if (v3)
      return sub_1BC55B310(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_142;
  v102 = result;
  v99 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v109 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v101 = MEMORY[0x1E0DEE9D8];
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_100:
      if (v11 >= 2)
      {
        v92 = *v99;
        do
        {
          v93 = v11 - 2;
          if (v11 < 2)
            goto LABEL_129;
          if (!v92)
            goto LABEL_141;
          v94 = *(_QWORD *)&v8[16 * v93 + 32];
          v95 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_1BC55B44C((char *)(v92 + 72 * v94), (char *)(v92 + 72 * *(_QWORD *)&v8[16 * v11 + 16]), v92 + 72 * v95, v109);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_130;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1BC504414((uint64_t)v8);
          if (v93 >= *((_QWORD *)v8 + 2))
            goto LABEL_131;
          v96 = &v8[16 * v93 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v8 + 2);
          if (v11 > v97)
            goto LABEL_132;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v97 - v11));
          *((_QWORD *)v8 + 2) = v97 - 1;
          v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BC62C8CC();
    *(_QWORD *)(v7 + 16) = v6;
    v101 = v7;
    v109 = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v100 = *a1 + 184;
  v98 = *a1 + 56;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v107 = v3;
  v110 = *a1;
  while (1)
  {
    v12 = v9++;
    if (v9 >= v3)
      goto LABEL_34;
    sub_1BC36E2AC();
    v13 = sub_1BC62D04C();
    v14 = v12;
    v15 = v13;
    v9 = v14 + 2;
    v108 = v14;
    if (v14 + 2 >= v3)
      goto LABEL_21;
    v16 = v100 + 72 * v14;
    do
    {
      if ((v15 == -1) == (sub_1BC62D04C() != -1))
      {
        v3 = v107;
        if (v15 == -1)
          goto LABEL_24;
LABEL_33:
        v12 = v108;
        goto LABEL_34;
      }
      v16 += 72;
      ++v9;
      v3 = v107;
    }
    while (v107 != v9);
    v9 = v107;
LABEL_21:
    if (v15 != -1)
      goto LABEL_33;
LABEL_24:
    v12 = v108;
    if (v9 < v108)
      goto LABEL_137;
    if (v108 < v9)
    {
      v17 = 72 * v9;
      v18 = 72 * v108;
      v19 = v108;
      v20 = v9;
      do
      {
        if (v19 != --v20)
        {
          if (!v10)
            goto LABEL_140;
          v21 = v8;
          v22 = (char *)(v10 + v18);
          v23 = v110 + v17;
          v24 = *v22;
          v25 = *((_QWORD *)v22 + 1);
          v106 = *((_QWORD *)v22 + 4);
          v105 = *(_OWORD *)(v22 + 40);
          v103 = *((_OWORD *)v22 + 1);
          v104 = *(_OWORD *)(v22 + 56);
          memmove(v22, (const void *)(v110 + v17 - 72), 0x48uLL);
          *(_BYTE *)(v23 - 72) = v24;
          *(_QWORD *)(v23 - 64) = v25;
          *(_OWORD *)(v23 - 56) = v103;
          *(_QWORD *)(v23 - 40) = v106;
          *(_OWORD *)(v23 - 32) = v105;
          *(_OWORD *)(v23 - 16) = v104;
          v10 = v110;
          v8 = v21;
        }
        ++v19;
        v17 -= 72;
        v18 += 72;
      }
      while (v19 < v20);
      v3 = v107;
      goto LABEL_33;
    }
LABEL_34:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12))
        goto LABEL_133;
      if (v9 - v12 < v102)
        break;
    }
LABEL_51:
    if (v9 < v12)
      goto LABEL_128;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1BC503AB4(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v42 = *((_QWORD *)v8 + 2);
    v41 = *((_QWORD *)v8 + 3);
    v11 = v42 + 1;
    if (v42 >= v41 >> 1)
      v8 = sub_1BC503AB4((char *)(v41 > 1), v42 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11;
    v43 = v8 + 32;
    v44 = &v8[16 * v42 + 32];
    *(_QWORD *)v44 = v12;
    *((_QWORD *)v44 + 1) = v9;
    if (v42)
    {
      while (1)
      {
        v45 = v11 - 1;
        if (v11 >= 4)
        {
          v50 = &v43[16 * v11];
          v51 = *((_QWORD *)v50 - 8);
          v52 = *((_QWORD *)v50 - 7);
          v56 = __OFSUB__(v52, v51);
          v53 = v52 - v51;
          if (v56)
            goto LABEL_117;
          v55 = *((_QWORD *)v50 - 6);
          v54 = *((_QWORD *)v50 - 5);
          v56 = __OFSUB__(v54, v55);
          v48 = v54 - v55;
          v49 = v56;
          if (v56)
            goto LABEL_118;
          v57 = v11 - 2;
          v58 = &v43[16 * v11 - 32];
          v60 = *(_QWORD *)v58;
          v59 = *((_QWORD *)v58 + 1);
          v56 = __OFSUB__(v59, v60);
          v61 = v59 - v60;
          if (v56)
            goto LABEL_120;
          v56 = __OFADD__(v48, v61);
          v62 = v48 + v61;
          if (v56)
            goto LABEL_123;
          if (v62 >= v53)
          {
            v80 = &v43[16 * v45];
            v82 = *(_QWORD *)v80;
            v81 = *((_QWORD *)v80 + 1);
            v56 = __OFSUB__(v81, v82);
            v83 = v81 - v82;
            if (v56)
              goto LABEL_127;
            v73 = v48 < v83;
            goto LABEL_88;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v74 = *((_QWORD *)v8 + 4);
            v75 = *((_QWORD *)v8 + 5);
            v56 = __OFSUB__(v75, v74);
            v67 = v75 - v74;
            v68 = v56;
            goto LABEL_82;
          }
          v47 = *((_QWORD *)v8 + 4);
          v46 = *((_QWORD *)v8 + 5);
          v56 = __OFSUB__(v46, v47);
          v48 = v46 - v47;
          v49 = v56;
        }
        if ((v49 & 1) != 0)
          goto LABEL_119;
        v57 = v11 - 2;
        v63 = &v43[16 * v11 - 32];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v66 = __OFSUB__(v64, v65);
        v67 = v64 - v65;
        v68 = v66;
        if (v66)
          goto LABEL_122;
        v69 = &v43[16 * v45];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v56 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v56)
          goto LABEL_125;
        if (__OFADD__(v67, v72))
          goto LABEL_126;
        if (v67 + v72 >= v48)
        {
          v73 = v48 < v72;
LABEL_88:
          if (v73)
            v45 = v57;
          goto LABEL_90;
        }
LABEL_82:
        if ((v68 & 1) != 0)
          goto LABEL_121;
        v76 = &v43[16 * v45];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v56 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v56)
          goto LABEL_124;
        if (v79 < v67)
          goto LABEL_14;
LABEL_90:
        v84 = v45 - 1;
        if (v45 - 1 >= v11)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v10)
          goto LABEL_139;
        v85 = v8;
        v86 = v10;
        v87 = &v43[16 * v84];
        v88 = *(_QWORD *)v87;
        v89 = &v43[16 * v45];
        v90 = *((_QWORD *)v89 + 1);
        sub_1BC55B44C((char *)(v86 + 72 * *(_QWORD *)v87), (char *)(v86 + 72 * *(_QWORD *)v89), v86 + 72 * v90, v109);
        if (v1)
          goto LABEL_111;
        if (v90 < v88)
          goto LABEL_114;
        if (v45 > *((_QWORD *)v85 + 2))
          goto LABEL_115;
        *(_QWORD *)v87 = v88;
        *(_QWORD *)&v43[16 * v84 + 8] = v90;
        v91 = *((_QWORD *)v85 + 2);
        if (v45 >= v91)
          goto LABEL_116;
        v8 = v85;
        v11 = v91 - 1;
        memmove(&v43[16 * v45], v89 + 16, 16 * (v91 - 1 - v45));
        *((_QWORD *)v85 + 2) = v91 - 1;
        v10 = v110;
        if (v91 <= 2)
          goto LABEL_14;
      }
    }
    v11 = 1;
LABEL_14:
    v3 = v107;
    if (v9 >= v107)
      goto LABEL_100;
  }
  if (__OFADD__(v12, v102))
    goto LABEL_135;
  if (v12 + v102 >= v3)
    v26 = v3;
  else
    v26 = v12 + v102;
  if (v26 >= v12)
  {
    if (v9 != v26)
    {
      sub_1BC36E2AC();
      v27 = v98 + 72 * v9;
      do
      {
        v28 = v12;
        v29 = v27;
        do
        {
          if (sub_1BC62D04C() != -1)
            break;
          if (!v10)
            goto LABEL_138;
          v30 = v29 - 56;
          v31 = (_OWORD *)(v29 - 128);
          v32 = *(_QWORD *)(v29 - 64);
          v34 = *(_OWORD *)(v29 - 96);
          v33 = *(_OWORD *)(v29 - 80);
          *(_OWORD *)(v29 - 72) = *(_OWORD *)v29;
          v29 -= 72;
          v35 = *(_BYTE *)(v29 + 16);
          v36 = *(_QWORD *)(v29 + 24);
          v37 = *(_QWORD *)(v29 + 48);
          v38 = *(_OWORD *)(v29 + 32);
          v39 = *(_OWORD *)(v29 + 56);
          *(_OWORD *)(v30 + 32) = v34;
          *(_OWORD *)(v30 + 48) = v33;
          *(_QWORD *)(v30 + 64) = v32;
          v40 = v31[1];
          *(_OWORD *)v30 = *v31;
          *(_OWORD *)(v30 + 16) = v40;
          *(_BYTE *)(v29 - 56) = v35;
          *(_QWORD *)(v29 - 48) = v36;
          *(_OWORD *)(v29 - 40) = v38;
          *(_OWORD *)(v29 - 16) = v39;
          ++v28;
          *(_QWORD *)(v29 - 24) = v37;
        }
        while (v9 != v28);
        ++v9;
        v27 += 72;
      }
      while (v9 != v26);
      v9 = v26;
    }
    goto LABEL_51;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC55B310(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v21 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    sub_1BC36E2AC();
    v7 = v6 + 72 * v4 + 56;
LABEL_5:
    v8 = v21;
    v9 = v7;
    while (1)
    {
      result = sub_1BC62D04C();
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v7 += 72;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v10 = v9 - 56;
      v11 = (_OWORD *)(v9 - 128);
      v12 = *(_QWORD *)(v9 - 64);
      v14 = *(_OWORD *)(v9 - 96);
      v13 = *(_OWORD *)(v9 - 80);
      *(_OWORD *)(v9 - 72) = *(_OWORD *)v9;
      v9 -= 72;
      v15 = *(_BYTE *)(v9 + 16);
      v16 = *(_QWORD *)(v9 + 24);
      v17 = *(_QWORD *)(v9 + 48);
      v18 = *(_OWORD *)(v9 + 32);
      v19 = *(_OWORD *)(v9 + 56);
      *(_OWORD *)(v10 + 32) = v14;
      *(_OWORD *)(v10 + 48) = v13;
      *(_QWORD *)(v10 + 64) = v12;
      v20 = v11[1];
      *(_OWORD *)v10 = *v11;
      *(_OWORD *)(v10 + 16) = v20;
      *(_BYTE *)(v9 - 56) = v15;
      *(_QWORD *)(v9 - 48) = v16;
      *(_OWORD *)(v9 - 40) = v18;
      *(_OWORD *)(v9 - 16) = v19;
      ++v8;
      *(_QWORD *)(v9 - 24) = v17;
      if (v4 == v8)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC55B44C(char *__src, char *a2, unint64_t a3, char *a4)
{
  char *v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  const void *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t result;
  char *v21;
  const void *v22;
  char *v23;

  v5 = a2;
  v6 = __src;
  v7 = a2 - __src;
  v8 = (a2 - __src) / 72;
  v9 = a3 - (_QWORD)a2;
  v10 = (uint64_t)(a3 - (_QWORD)a2) / 72;
  v23 = __src;
  v22 = a4;
  if (v8 >= v10)
  {
    if (v9 >= -71)
    {
      if (a4 != a2 || &a2[72 * v10] <= a4)
        memmove(a4, a2, 72 * v10);
      v15 = &a4[72 * v10];
      v21 = v15;
      v23 = v5;
      if (v6 < v5 && v9 >= 72)
      {
        sub_1BC36E2AC();
        v16 = (char *)(a3 - 72);
        do
        {
          v17 = v16 + 72;
          if (sub_1BC62D04C() == -1)
          {
            v18 = v5 - 72;
            if (v17 != v5 || v16 >= v5)
              memmove(v16, v5 - 72, 0x48uLL);
            v23 = v5 - 72;
          }
          else
          {
            v21 = v15 - 72;
            if (v17 < v15 || v16 >= v15 || v17 != v15)
              memmove(v16, v15 - 72, 0x48uLL);
            v18 = v5;
            v15 -= 72;
          }
          if (v18 <= v6)
            break;
          v16 -= 72;
          v5 = v18;
        }
        while (v15 > a4);
      }
LABEL_40:
      sub_1BC503BC0((void **)&v23, &v22, &v21);
      return 1;
    }
  }
  else if (v7 >= -71)
  {
    v11 = a4;
    if (a4 != __src || &__src[72 * v8] <= a4)
      memmove(a4, __src, 72 * v8);
    v21 = &a4[72 * v8];
    if ((unint64_t)v5 < a3 && v7 >= 72)
    {
      sub_1BC36E2AC();
      v12 = (unint64_t)a4;
      while (1)
      {
        if (sub_1BC62D04C() == -1)
        {
          v14 = v5 + 72;
          v13 = v5;
          if (v6 == v5 && v6 < v14)
            goto LABEL_18;
        }
        else
        {
          v11 = (char *)(v12 + 72);
          v13 = (const void *)v12;
          v14 = v5;
          if (v6 == (char *)v12)
          {
            v12 += 72;
            if (v6 < v11)
              goto LABEL_18;
          }
          else
          {
            v12 += 72;
          }
        }
        memmove(v6, v13, 0x48uLL);
LABEL_18:
        v6 += 72;
        if (v12 < (unint64_t)&a4[72 * v8])
        {
          v5 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v22 = v11;
        v23 = v6;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

unint64_t sub_1BC55B770()
{
  id v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v0 = objc_msgSend((id)objc_opt_self(), sel_supportedRecordCategoriesByCategoryType);
  if (!v0)
    return sub_1BC35D7BC(MEMORY[0x1E0DEE9D8]);
  v1 = v0;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5920);
  sub_1BC475BC8();
  v2 = sub_1BC62C548();

  sub_1BC3BACCC(v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + 16))
  {
    sub_1BC35F4F0();
    v5 = sub_1BC62D400();
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9E0];
  }
  v8 = v5;
  v7 = swift_bridgeObjectRetain();
  sub_1BC60BC80(v7, 1, &v8);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0()
{
  id v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[8];
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v0 = objc_msgSend((id)objc_opt_self(), sel_allSupportedRecordCategories);
  if (!v0)
    return MEMORY[0x1E0DEE9E8];
  v1 = v0;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5920);
  v2 = sub_1BC62C878();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    v17 = sub_1BC58B89C(v6);
    swift_bridgeObjectRelease();
    return v17;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_15;
LABEL_4:
  v27 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC3BD764(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v27;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1BCCF24CC](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      sub_1BC4FC8D8(v7, (uint64_t)v21);
      v8 = v21[0];
      v9 = v22;
      v10 = v23;
      v11 = v24;
      v12 = v25;
      v13 = v26;
      v27 = v6;
      v15 = *(_QWORD *)(v6 + 16);
      v14 = *(_QWORD *)(v6 + 24);
      if (v15 >= v14 >> 1)
      {
        v19 = v25;
        v20 = v23;
        v18 = v26;
        sub_1BC3BD764(v14 > 1, v15 + 1, 1);
        v13 = v18;
        v12 = v19;
        v10 = v20;
        v6 = v27;
      }
      *(_QWORD *)(v6 + 16) = v15 + 1;
      v16 = v6 + 72 * v15;
      *(_BYTE *)(v16 + 32) = v8;
      ++v5;
      *(_QWORD *)(v16 + 40) = v9;
      *(_OWORD *)(v16 + 48) = v10;
      *(_QWORD *)(v16 + 64) = v11;
      *(_OWORD *)(v16 + 72) = v12;
      *(_OWORD *)(v16 + 88) = v13;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DisplayItemProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for DisplayItemProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BC55BC3C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v16;

  v1 = v0;
  sub_1BC384E68(0, &qword_1EF42C0C8, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - v3;
  v5 = sub_1BC62BC78();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v9);

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v1, sel_setBackgroundView_, v10);

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v1, sel_setSelectedBackgroundView_, v11);

  v12 = objc_msgSend(v1, sel_selectedBackgroundView);
  if (v12)
  {
    v13 = v12;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
    v14 = (void *)sub_1BC62CE48();
    objc_msgSend(v13, sel_setBackgroundColor_, v14);

  }
  sub_1BC62BC6C();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  MEMORY[0x1BCCF1FE0](v4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BC55BE3C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];

  v1 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI9ChartCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v5, (uint64_t)v17);
  if (v17[3])
  {
    sub_1BC37AE0C();
    type metadata accessor for ChartItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_release();
      v6 = objc_msgSend(v0, sel_superview);

      if (v6)
        sub_1BC55C3AC();
      return;
    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v17);
  }
  sub_1BC62BAF8();
  v7 = v0;
  v8 = sub_1BC62BB28();
  v9 = sub_1BC62CAC4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v15 = v1;
    v16 = v11;
    v12 = v11;
    *(_DWORD *)v10 = 136446210;
    sub_1BC37ADB0(v5, (uint64_t)v17);
    sub_1BC384E68(0, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    v13 = sub_1BC62C6F8();
    v17[0] = sub_1BC4991F0(v13, v14, &v16);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v8, v9, "Incorrect view model for ChartCell: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v12, -1, -1);
    MEMORY[0x1BCCF36A8](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1BC55C150()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];

  v1 = sub_1BC62BB34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI9ChartCell_item;
  swift_beginAccess();
  sub_1BC37ADB0(v5, (uint64_t)v17);
  if (v17[3])
  {
    sub_1BC37AE0C();
    type metadata accessor for ChartItem();
    if ((swift_dynamicCast() & 1) != 0)
      return v16;
  }
  else
  {
    sub_1BC37AE60((uint64_t)v17);
  }
  sub_1BC62BAF8();
  v7 = v0;
  v8 = sub_1BC62BB28();
  v9 = sub_1BC62CAC4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v15 = v1;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v16 = v12;
    *(_DWORD *)v11 = 136446210;
    sub_1BC37ADB0(v5, (uint64_t)v17);
    sub_1BC384E68(0, (unint64_t *)&qword_1EF43AE70, (void (*)(uint64_t))sub_1BC37AE0C);
    v13 = sub_1BC62C6F8();
    v17[0] = sub_1BC4991F0(v13, v14, &v16);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v8, v9, "Incorrect view model for ChartCell: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v12, -1, -1);
    MEMORY[0x1BCCF36A8](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return 0;
}

void sub_1BC55C3AC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;

  v1 = v0;
  v2 = sub_1BC55C150();
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v0, sel_viewController);
    if (v4)
    {
      v27 = v4;
      v5 = *(void **)(v3 + 64);
      v6 = objc_msgSend(v5, sel_view);
      if (v6)
      {
        v28 = v6;
        objc_msgSend(v27, sel_addChildViewController_, v5);
        objc_msgSend(v28, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        v7 = objc_msgSend(v1, sel_contentView);
        objc_msgSend(v7, sel_addSubview_, v28);

        v8 = (void *)objc_opt_self();
        sub_1BC34D844();
        v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1BC63A3D0;
        v10 = objc_msgSend(v28, sel_leadingAnchor);
        v11 = objc_msgSend(v1, sel_contentView);
        v12 = objc_msgSend(v11, sel_leadingAnchor);

        v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
        *(_QWORD *)(v9 + 32) = v13;
        v14 = objc_msgSend(v28, sel_trailingAnchor);
        v15 = objc_msgSend(v1, sel_contentView);
        v16 = objc_msgSend(v15, sel_trailingAnchor);

        v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
        *(_QWORD *)(v9 + 40) = v17;
        v18 = objc_msgSend(v28, sel_topAnchor);
        v19 = objc_msgSend(v1, sel_contentView);
        v20 = objc_msgSend(v19, sel_topAnchor);

        v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
        *(_QWORD *)(v9 + 48) = v21;
        v22 = objc_msgSend(v28, sel_bottomAnchor);
        v23 = objc_msgSend(v1, sel_contentView);
        v24 = objc_msgSend(v23, sel_bottomAnchor);

        v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
        *(_QWORD *)(v9 + 56) = v25;
        sub_1BC62C890();
        sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
        v26 = (void *)sub_1BC62C86C();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_activateConstraints_, v26);

        objc_msgSend(v1, sel_invalidateIntrinsicContentSize);
        objc_msgSend(v1, sel_setNeedsLayout);
        swift_release();

      }
      else
      {
        swift_release();

      }
    }
    else
    {
      swift_release();
    }
  }
}

id sub_1BC55C780()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChartCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ChartCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC55C7E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI9ChartCell_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC55C830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI9ChartCell_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC55BE3C();
  return sub_1BC37AE60(a1);
}

void (*sub_1BC55C89C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC55C8E4;
}

void sub_1BC55C8E4(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC55BE3C();
}

ValueMetadata *_s9YearRangeVMa()
{
  return &_s9YearRangeVN;
}

uint64_t _s13HealthKitDataVwxx(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t _s13HealthKitDataVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13HealthKitDataVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  __int128 v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s13HealthKitDataVwta(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13HealthKitDataVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13HealthKitDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13HealthKitDataVMa()
{
  return &_s13HealthKitDataVN;
}

uint64_t sub_1BC55CB08(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC5048B4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BC55FBAC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BC55CB70(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC505EE8();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BC560354(v6);
  return sub_1BC62D274();
}

id sub_1BC55CBE8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  void *v21;
  void *v22;
  void *v23;
  void (*v24)(char *, uint64_t);
  _QWORD v26[3];
  uint64_t v27;

  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, &qword_1EF4376B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v26 - v3;
  sub_1BC357158(0, &qword_1EF435770, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], v1);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v26 - v6;
  v8 = sub_1BC62A478();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v26 - v13;
  v15 = 0;
  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
  {
    v16 = *(_QWORD *)(v0 + 24);
    v26[1] = *(_QWORD *)(v0 + 16);
    v26[2] = v16;
    v27 = v12;
    v17 = sub_1BC62A8D4();
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
    v18(v7, 1, 1, v17);
    v19 = sub_1BC62A91C();
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
    v20(v4, 1, 1, v19);
    sub_1BC62A460();
    v18(v7, 1, 1, v17);
    v20(v4, 1, 1, v19);
    sub_1BC62A460();
    v21 = (void *)objc_opt_self();
    v22 = (void *)sub_1BC62A40C();
    v23 = (void *)sub_1BC62A40C();
    v15 = objc_msgSend(v21, sel_predicateForRecordsWithSortDateFromStartDateComponents_endDateComponents_, v22, v23);

    v24 = *(void (**)(char *, uint64_t))(v27 + 8);
    v24(v11, v8);
    v24(v14, v8);
  }
  return v15;
}

uint64_t sub_1BC55CF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  sub_1BC357158(0, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v18 - v2;
  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 16);
    v5 = *(_QWORD *)(v0 + 24);
    v7 = sub_1BC62A820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
    sub_1BC3B30F0();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BC6395A0;
    v9 = sub_1BC4B264C(v6);
    v11 = v10;
    v12 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    v13 = sub_1BC3644C0();
    *(_QWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 32) = v9;
    *(_QWORD *)(v8 + 40) = v11;
    v14 = sub_1BC4B264C(v5);
    *(_QWORD *)(v8 + 96) = v12;
    *(_QWORD *)(v8 + 104) = v13;
    *(_QWORD *)(v8 + 72) = v14;
    *(_QWORD *)(v8 + 80) = v15;
    if (qword_1ED6A4888 != -1)
      swift_once();
    v16 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    v4 = sub_1BC62C6A4();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC377E3C((uint64_t)v3, (unint64_t *)&qword_1EF434570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  }
  return v4;
}

uint64_t sub_1BC55D134()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1EF428550 != -1)
    swift_once();
  v1 = (id)qword_1EF42F698;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v2 = *(_QWORD *)(v0[9] + 16);
  if (v2 == *(_QWORD *)(v0[8] + 16))
  {
    swift_bridgeObjectRelease();
    v3 = v0[10];
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BC3B30F0();
    v4 = swift_allocObject();
    v5 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v4 + 16) = xmmword_1BC639590;
    v6 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v4 + 56) = v5;
    *(_QWORD *)(v4 + 64) = v6;
    *(_QWORD *)(v4 + 32) = v2;
    v3 = sub_1BC62C65C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1BC55D294()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0[14];
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D118();
    swift_bridgeObjectRelease();
    v3 = v0[13];
    if (v3)
      goto LABEL_3;
LABEL_7:
    if (v2 == -1)
      goto LABEL_5;
    goto LABEL_8;
  }
  v2 = *(_QWORD *)(v1 + 16);
  v3 = v0[13];
  if (!v3)
    goto LABEL_7;
LABEL_3:
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v2 == v11)
      goto LABEL_5;
  }
  else if (v2 == *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    v4 = v0[15];
    swift_bridgeObjectRetain();
    return v4;
  }
LABEL_8:
  if (qword_1EF428550 != -1)
    swift_once();
  v5 = (id)qword_1EF42F698;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  sub_1BC3B30F0();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC639590;
  v7 = v0[14];
  if ((v7 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BC62D118();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)(v7 + 16);
  }
  v9 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v6 + 64) = v9;
  *(_QWORD *)(v6 + 32) = v8;
  v4 = sub_1BC62C65C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BC55D4B0(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  _BOOL8 v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  __int128 v69;
  __int128 v70;
  char v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t result;
  void *v84;
  id v85;
  unint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  _QWORD *v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  char v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  id v114;
  _QWORD *v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  _BYTE v119[40];

  v95 = a2[2];
  v96 = *a2;
  v5 = a2[4];
  v103 = a2[3];
  v88 = a2[5];
  v89 = a2[6];
  v90 = a2[7];
  v91 = (void *)a2[1];
  v87 = (void *)a2[8];
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_WORD *)(v3 + 32) = 1;
  *(_QWORD *)(v3 + 40) = 0;
  if (qword_1ED6A4888 != -1)
    swift_once();
  v6 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v7 = sub_1BC62A4A8();
  v9 = v8;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v3 + 48) = v7;
  *(_QWORD *)(v3 + 56) = v9;
  v10 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v11 = sub_1BC62A4A8();
  v13 = v12;
  swift_bridgeObjectRelease();

  v14 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v3 + 80) = v11;
  *(_QWORD *)(v3 + 88) = v13;
  *(_QWORD *)(v3 + 104) = 0;
  *(_QWORD *)(v3 + 112) = v14;
  v15 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v86 = 0xE000000000000000;
  v16 = sub_1BC62A4A8();
  v18 = v17;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v3 + 120) = v16;
  *(_QWORD *)(v3 + 128) = v18;
  sub_1BC36D6D8(a3, v3 + OBJC_IVAR____TtC15HealthRecordsUI26PDFConfigurationDataSource_configuration);
  sub_1BC561764();
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v3 + 96) = v19;
  v92 = (_QWORD *)v3;
  if (!a1)
    goto LABEL_10;
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC6396B0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)&v117 = inited;
  sub_1BC62C890();
  if ((unint64_t)v117 >> 62)
  {
    v25 = a1;
    swift_bridgeObjectRetain();
    v26 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v26)
      goto LABEL_6;
LABEL_8:
    v24 = MEMORY[0x1E0DEE9E8];
    goto LABEL_9;
  }
  v21 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFF8) + 0x10);
  v22 = a1;
  if (!v21)
    goto LABEL_8;
LABEL_6:
  sub_1BC52286C(v117);
  v24 = v23;
LABEL_9:
  swift_bridgeObjectRelease();

  v92[14] = v24;
  swift_bridgeObjectRelease();
LABEL_10:
  v116 = MEMORY[0x1E0DEE9D8];
  sub_1BC3BD764(0, 8, 0);
  v101 = v116;
  v99 = (id)objc_opt_self();
  v27 = 0;
  v28 = 0;
  v94 = a3;
  v29 = v103;
  while (1)
  {
    v100 = v27;
    v30 = *((unsigned __int8 *)&unk_1E74D2598 + v27 + 32);
    v31 = objc_msgSend(v99, sel_supportedRecordCategoriesByCategoryType, v86);
    if (!v31)
    {
      v36 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      if (!*(_QWORD *)(MEMORY[0x1E0DEE9E0] + 16))
        goto LABEL_31;
      goto LABEL_29;
    }
    v32 = v31;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5990);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5920);
    sub_1BC35E2D8((unint64_t *)&qword_1ED6A52F0, (unint64_t *)&qword_1ED6A5990);
    v33 = sub_1BC62C548();

    sub_1BC3BACCC(v33);
    v35 = v34;
    swift_bridgeObjectRelease();
    v98 = v28;
    v97 = v30;
    if (*(_QWORD *)(v35 + 16))
      break;
    v36 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRetain();
LABEL_28:
    swift_bridgeObjectRelease_n();
    v28 = v98;
    v30 = v97;
    if (!v36[2])
      goto LABEL_31;
LABEL_29:
    v59 = sub_1BC558FD8(v30);
    if ((v60 & 1) == 0)
    {
LABEL_31:
      swift_bridgeObjectRelease();
      v72 = objc_msgSend(v99, sel_unknownRecordCategory);
      if (!v72)
        goto LABEL_46;
      sub_1BC4FC8D8(v72, (uint64_t)&v117);
      v71 = v117;
      v68 = (id)*((_QWORD *)&v117 + 1);
      v65 = *((_QWORD *)&v118 + 1);
      v64 = v118;
      v66 = *(_QWORD *)v119;
      v69 = *(_OWORD *)&v119[8];
      v70 = *(_OWORD *)&v119[24];
      goto LABEL_33;
    }
    v61 = v36[7] + 72 * v59;
    v62 = *(_BYTE *)v61;
    v63 = *(void **)(v61 + 8);
    v64 = *(_QWORD *)(v61 + 16);
    v65 = *(_QWORD *)(v61 + 24);
    v66 = *(_QWORD *)(v61 + 32);
    v109 = *(_OWORD *)(v61 + 56);
    v112 = *(_OWORD *)(v61 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v67 = *((id *)&v109 + 1);
    v68 = v63;
    swift_bridgeObjectRelease();
    v70 = v109;
    v69 = v112;
    v71 = v62;
    LOBYTE(v117) = v62;
    *((_QWORD *)&v117 + 1) = v68;
    *(_QWORD *)&v118 = v64;
    *((_QWORD *)&v118 + 1) = v65;
    *(_QWORD *)v119 = v66;
    *(_OWORD *)&v119[8] = v112;
    *(_OWORD *)&v119[24] = v109;
LABEL_33:
    v73 = v101;
    v75 = *(_QWORD *)(v101 + 16);
    v74 = *(_QWORD *)(v101 + 24);
    if (v75 >= v74 >> 1)
    {
      v107 = v71;
      v110 = v70;
      v113 = v69;
      sub_1BC3BD764(v74 > 1, v75 + 1, 1);
      v70 = v110;
      v69 = v113;
      v71 = v107;
      v73 = v101;
    }
    *(_QWORD *)(v73 + 16) = v75 + 1;
    v101 = v73;
    v76 = v73 + 72 * v75;
    *(_BYTE *)(v76 + 32) = v71;
    v27 = v100 + 1;
    *(_QWORD *)(v76 + 40) = v68;
    *(_QWORD *)(v76 + 48) = v64;
    *(_QWORD *)(v76 + 56) = v65;
    *(_QWORD *)(v76 + 64) = v66;
    *(_OWORD *)(v76 + 72) = v69;
    *(_OWORD *)(v76 + 88) = v70;
    if (v100 == 7)
    {
      *(_QWORD *)&v117 = v101;
      swift_bridgeObjectRetain();
      sub_1BC55CB08((uint64_t *)&v117);
      swift_bridgeObjectRelease();
      v77 = v117;
      v92[8] = v117;
      if (v91)
      {
        LOBYTE(v117) = v96;
        *((_QWORD *)&v117 + 1) = v91;
        *(_QWORD *)&v118 = v95;
        *((_QWORD *)&v118 + 1) = v29;
        *(_QWORD *)v119 = v5;
        *(_QWORD *)&v119[8] = v88;
        *(_QWORD *)&v119[16] = v89;
        *(_QWORD *)&v119[24] = v90;
        *(_QWORD *)&v119[32] = v87;
        swift_retain();
        if ((sub_1BC3B0F38(&v117, v77) & 1) != 0)
        {
          swift_release();
          sub_1BC379A60(0, (unint64_t *)&qword_1ED6A59B0);
          v78 = swift_initStackObject();
          *(_OWORD *)(v78 + 16) = xmmword_1BC639590;
          v79 = v117;
          *(_OWORD *)(v78 + 48) = v118;
          v80 = *(_OWORD *)&v119[16];
          *(_OWORD *)(v78 + 64) = *(_OWORD *)v119;
          *(_OWORD *)(v78 + 80) = v80;
          *(_QWORD *)(v78 + 96) = *(_QWORD *)&v119[32];
          *(_OWORD *)(v78 + 32) = v79;
          sub_1BC5617C4(v96, v91, v95, v29, v5, v88, v89, v90, v87);
          sub_1BC522BC4(v78);
          v82 = v81;
          swift_setDeallocating();
          swift_arrayDestroy();

          sub_1BC359B60(v96, v91, v95, v29, v5, v88, v89, v90, v87);
LABEL_42:
          sub_1BC36DCA4(v94);
          result = (uint64_t)v92;
          v92[9] = v82;
          return result;
        }
        sub_1BC359B60(v96, v91, v95, v29, v5, v88, v89, v90, v87);
      }
      else
      {
        swift_retain();
      }
      v82 = sub_1BC58B89C(v77);
      swift_release();

      goto LABEL_42;
    }
  }
  sub_1BC35F4F0();
  v36 = (_QWORD *)sub_1BC62D400();
  v37 = *(_QWORD *)(v35 + 16);
  v115 = v36;
  swift_bridgeObjectRetain();
  v105 = v37;
  if (!v37)
    goto LABEL_28;
  v38 = 0;
  v39 = 0;
  v104 = v35;
  while (v39 < *(_QWORD *)(v35 + 16))
  {
    v40 = v35 + v38;
    v108 = *(_OWORD *)(v35 + v38 + 80);
    v111 = *(_OWORD *)(v35 + v38 + 96);
    v41 = *(_BYTE *)(v35 + v38 + 40);
    v42 = *(unsigned __int8 *)(v40 + 32);
    v44 = *(_QWORD *)(v40 + 64);
    v43 = *(_QWORD *)(v40 + 72);
    v46 = *(void **)(v40 + 48);
    v45 = *(_QWORD *)(v40 + 56);
    v106 = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47 = *((id *)&v111 + 1);
    if (!v46)
    {
      v29 = v103;
      goto LABEL_28;
    }
    v102 = v47;
    v48 = sub_1BC558FD8(v42);
    v50 = v36[2];
    v51 = (v49 & 1) == 0;
    v52 = __OFADD__(v50, v51);
    v53 = v50 + v51;
    if (v52)
      goto LABEL_44;
    v54 = v49;
    if (v36[3] < v53)
    {
      sub_1BC3C1D38(v53, 1);
      v36 = v115;
      v48 = sub_1BC558FD8(v42);
      if ((v54 & 1) != (v55 & 1))
        goto LABEL_49;
    }
    if ((v54 & 1) != 0)
      goto LABEL_47;
    v36[(v48 >> 6) + 8] |= 1 << v48;
    *(_BYTE *)(v36[6] + v48) = v42;
    v56 = v36[7] + 72 * v48;
    *(_BYTE *)v56 = v41;
    *(_QWORD *)(v56 + 8) = v106;
    *(_QWORD *)(v56 + 16) = v45;
    *(_QWORD *)(v56 + 24) = v44;
    *(_QWORD *)(v56 + 32) = v43;
    *(_OWORD *)(v56 + 40) = v108;
    *(_OWORD *)(v56 + 56) = v111;
    v57 = v36[2];
    v52 = __OFADD__(v57, 1);
    v58 = v57 + 1;
    if (v52)
      goto LABEL_45;
    ++v39;
    v36[2] = v58;
    v38 += 80;
    v35 = v104;
    v29 = v103;
    if (v105 == v39)
      goto LABEL_28;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  v84 = (void *)swift_allocError();
  swift_willThrow();
  v114 = v84;
  v85 = v84;
  sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)&v117 = 0;
    *((_QWORD *)&v117 + 1) = 0xE000000000000000;
    sub_1BC62D1D8();
    sub_1BC62C764();
    sub_1BC62D2D4();
    sub_1BC62C764();
    sub_1BC62D394();
    __break(1u);
LABEL_49:
    sub_1BC62D5EC();
    __break(1u);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unexpectedError();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BC55DF88(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  id v15;
  id v16;
  NSObject *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  os_log_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v10 = sub_1BC62BB34();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    result = sub_1BC55E264();
    if (!a4)
      return result;
    return a4(result);
  }
  sub_1BC62BAF8();
  swift_retain();
  v15 = a2;
  swift_retain();
  v16 = a2;
  v17 = sub_1BC62BB28();
  v18 = sub_1BC62CAC4();
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    v28 = v18;
    v29 = v17;
    v30 = a5;
    v19 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v31 = a3;
    v32 = v27;
    *(_DWORD *)v19 = 136315394;
    type metadata accessor for PDFConfigurationDataSource();
    swift_retain();
    v20 = sub_1BC62C6E0();
    v31 = sub_1BC4991F0(v20, v21, &v32);
    sub_1BC62CFF8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue();
      v22 = sub_1BC62D610();
      v24 = v23;
    }
    else
    {
      v24 = 0xEB000000007D726FLL;
      v22 = 0x727265206C696E7BLL;
    }
    v31 = sub_1BC4991F0(v22, v24, &v32);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    v25 = v29;
    _os_log_impl(&dword_1BC30A000, v29, (os_log_type_t)v28, "%s failed to load all accounts: %s)", (uint8_t *)v19, 0x16u);
    v26 = v27;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v26, -1, -1);
    MEMORY[0x1BCCF36A8](v19, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (a4)
      return a4(result);
  }
  else
  {
    swift_release_n();

    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (a4)
      return a4(result);
  }
  return result;
}

uint64_t sub_1BC55E264()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t result;
  _QWORD *v22;

  v1 = (os_unfair_lock_s *)v0[12];
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  swift_release();
  if (v0[13])
    goto LABEL_21;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC58C148(v2);
  swift_bridgeObjectRelease();
  v4 = v0[14];
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC62D118();
    swift_bridgeObjectRelease();
    v4 = v0[14];
    if (!v5)
      goto LABEL_7;
  }
  else if (!*(_QWORD *)(v4 + 16))
  {
LABEL_7:
    v0[14] = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  sub_1BC55E4E4(v3, v4);
  v7 = v6;
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
    goto LABEL_7;
LABEL_8:
  v8 = sub_1BC3D6FBC(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if ((v8 & 0x8000000000000000) != 0 || (v9 = (_QWORD *)v8, (v8 & 0x4000000000000000) != 0))
  {
    v9 = sub_1BC3D74B4(v8);
    swift_release();
  }
  v22 = v9;
  sub_1BC55CB70((uint64_t *)&v22);
  swift_release();
  v0[13] = v22;
  swift_bridgeObjectRelease();
  v10 = v0[13];
  if (!v10)
    goto LABEL_21;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v18 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (v18 != 1)
      goto LABEL_20;
    swift_bridgeObjectRetain();
    v19 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
    if (!v19)
      goto LABEL_20;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11 != 1)
    {
LABEL_20:
      swift_bridgeObjectRelease();
LABEL_21:
      v20 = (os_unfair_lock_s *)v0[12];
      swift_retain();
      os_unfair_lock_unlock(v20 + 4);
      return swift_release();
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x1BCCF24CC](0, v10);
    goto LABEL_16;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v10 + 32);
LABEL_16:
    v13 = v12;
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v13, sel_title);
    v15 = sub_1BC62C680();
    v17 = v16;

    v0[15] = v15;
    v0[16] = v17;
    goto LABEL_20;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

void sub_1BC55E4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  id v30;
  char v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v2 = a2;
  v4 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v5 = sub_1BC62D118();
    v6 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0)
      goto LABEL_3;
LABEL_6:
    if (*(_QWORD *)(a1 + 16) < v5)
      return;
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(a2 + 16);
  v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
    goto LABEL_6;
LABEL_3:
  if (sub_1BC62D118() < v5)
    return;
LABEL_7:
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1BC62D0DC();
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
    sub_1BC35E2D8(&qword_1EF42C7B8, (unint64_t *)&qword_1EF431480);
    sub_1BC62CA1C();
    v2 = v37;
    v33 = v38;
    v7 = v39;
    v8 = v40;
    v9 = v41;
  }
  else
  {
    v10 = -1 << *(_BYTE *)(v2 + 32);
    v33 = v2 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(v2 + 56);
    swift_bridgeObjectRetain();
    v8 = 0;
  }
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
  v32 = (unint64_t)(v7 + 64) >> 6;
  v35 = a1 + 56;
  while (1)
  {
    while (1)
    {
      v14 = v9;
      v15 = v8;
      if ((v2 & 0x8000000000000000) == 0)
        break;
      if (!sub_1BC62D13C())
        goto LABEL_46;
      swift_dynamicCast();
      v17 = v36;
      v34 = v14;
      if (v6)
        goto LABEL_14;
LABEL_36:
      v22 = v6;
      v23 = v2;
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_43;
      v24 = sub_1BC62CEA8();
      v25 = -1 << *(_BYTE *)(a1 + 32);
      v26 = v24 & ~v25;
      if (((*(_QWORD *)(v35 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
        goto LABEL_43;
      v27 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v26);
      v28 = sub_1BC62CEB4();

      if ((v28 & 1) == 0)
      {
        v29 = ~v25;
        while (1)
        {
          v26 = (v26 + 1) & v29;
          if (((*(_QWORD *)(v35 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
            break;
          v30 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v26);
          v31 = sub_1BC62CEB4();

          if ((v31 & 1) != 0)
            goto LABEL_42;
        }
LABEL_43:

LABEL_44:
        sub_1BC3583F4();
        return;
      }
LABEL_42:

      v2 = v23;
      v6 = v22;
      v9 = v34;
    }
    if (v9)
    {
      v34 = (v9 - 1) & v9;
      v16 = __clz(__rbit64(v9)) | (v8 << 6);
      goto LABEL_35;
    }
    v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      return;
    }
    if (v18 >= v32)
      goto LABEL_46;
    v19 = *(_QWORD *)(v33 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v15 + 2;
      if (v15 + 2 >= v32)
        goto LABEL_46;
      v19 = *(_QWORD *)(v33 + 8 * v8);
      if (!v19)
      {
        v8 = v15 + 3;
        if (v15 + 3 >= v32)
          goto LABEL_46;
        v19 = *(_QWORD *)(v33 + 8 * v8);
        if (!v19)
        {
          v8 = v15 + 4;
          if (v15 + 4 >= v32)
            goto LABEL_46;
          v19 = *(_QWORD *)(v33 + 8 * v8);
          if (!v19)
            break;
        }
      }
    }
LABEL_34:
    v34 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_35:
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v16);
    v36 = v17;
    v21 = v17;
    if (!v6)
      goto LABEL_36;
LABEL_14:
    v13 = sub_1BC62D148();

    v9 = v34;
    if ((v13 & 1) == 0)
      goto LABEL_44;
  }
  v20 = v15 + 5;
  while (v32 != v20)
  {
    v19 = *(_QWORD *)(v33 + 8 * v20++);
    if (v19)
    {
      v8 = v20 - 1;
      goto LABEL_34;
    }
  }
LABEL_46:
  sub_1BC3583F4();
}

id sub_1BC55E918(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  objc_class *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  id v32;
  objc_class *v33;
  char *v34;
  uint64_t v35;
  objc_class *v36;
  _BYTE *v37;
  _QWORD *v38;
  uint64_t v39;
  id result;
  objc_super v41;
  objc_super v42;
  objc_super v43;

  v3 = v2;
  v5 = sub_1BC62A94C();
  if (v5 == 2)
  {
    v13 = v2[14];
    if (v3[13])
      v14 = v3[13];
    else
      v14 = MEMORY[0x1E0DEE9D8];
    swift_getObjectType();
    v15 = swift_conformsToProtocol2();
    if (v15)
      v16 = v15;
    else
      v16 = 0;
    if (v15)
      v17 = a2;
    else
      v17 = 0;
    if (v17)
      v18 = a2;
    else
      v16 = 0;
    v25 = (objc_class *)type metadata accessor for AccountSelectionViewController();
    v26 = (char *)objc_allocWithZone(v25);
    v27 = OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_iconProvider;
    v28 = qword_1ED6A31F0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = v26;
    if (v28 != -1)
      swift_once();
    *(_QWORD *)&v26[v27] = qword_1ED6A4498;
    v30 = &v29[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize];
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0;
    *((_QWORD *)v30 + 2) = 0;
    v30[24] = 1;
    *(_QWORD *)&v29[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_accountIcons] = 0;
    *(_QWORD *)&v29[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_delegate + 8] = 0;
    v31 = swift_unknownObjectWeakInit();
    *(_QWORD *)&v29[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts] = v14;
    *(_QWORD *)&v29[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts] = v13;
    *(_QWORD *)(v31 + 8) = v16;
    swift_unknownObjectWeakAssign();
    swift_retain();

    v43.receiver = v29;
    v43.super_class = v25;
    v32 = objc_msgSendSuper2(&v43, sel_initWithStyle_, 2);
    goto LABEL_39;
  }
  if (v5 == 1)
  {
    v20 = v2[8];
    v19 = v2[9];
    swift_getObjectType();
    v21 = swift_conformsToProtocol2();
    if (v21)
      v22 = v21;
    else
      v22 = 0;
    if (v21)
      v23 = a2;
    else
      v23 = 0;
    if (v23)
      v24 = a2;
    else
      v22 = 0;
    v33 = (objc_class *)type metadata accessor for CategorySelectionViewController();
    v34 = (char *)objc_allocWithZone(v33);
    *(_QWORD *)&v34[OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_delegate + 8] = 0;
    v35 = swift_unknownObjectWeakInit();
    *(_QWORD *)&v34[OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_allCategories] = v20;
    *(_QWORD *)&v34[OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_selectedCategories] = v19;
    *(_QWORD *)(v35 + 8) = v22;
    swift_unknownObjectWeakAssign();
    v42.receiver = v34;
    v42.super_class = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = objc_msgSendSuper2(&v42, sel_initWithStyle_, 2);
LABEL_39:
    v12 = v32;
LABEL_43:
    swift_unknownObjectRelease();
    return v12;
  }
  if (v5)
    return 0;
  v6 = v2[5];
  if (!v6)
    return 0;
  v7 = *((_BYTE *)v3 + 33);
  swift_getObjectType();
  v8 = swift_conformsToProtocol2();
  if (v8)
    v9 = v8;
  else
    v9 = 0;
  if (v8)
    v10 = a2;
  else
    v10 = 0;
  if (v10)
    v11 = a2;
  else
    v9 = 0;
  v36 = (objc_class *)type metadata accessor for YearRangePickerViewController();
  v37 = objc_allocWithZone(v36);
  v38 = &v37[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_defaultCellIdentifier];
  *v38 = 1819043139;
  v38[1] = 0xE400000000000000;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_delegate + 8] = 0;
  v39 = swift_unknownObjectWeakInit();
  *(_QWORD *)&v37[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_dataSource] = v6;
  v37[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow] = v7;
  *(_QWORD *)(v39 + 8) = v9;
  swift_unknownObjectWeakAssign();
  v41.receiver = v37;
  v41.super_class = v36;
  swift_retain_n();
  result = objc_msgSendSuper2(&v41, sel_initWithUsingInsetStyling_, 1);
  if (result)
  {
    v12 = result;
    swift_release();
    goto LABEL_43;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC55EC68()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t i;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  id *v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  int64_t v49;
  char v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  unint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  unint64_t v63;

  v1 = v0;
  v2 = _s13ConfigurationVMa();
  MEMORY[0x1E0C80A78](v2);
  v56 = (uint64_t)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC62A760();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v62 = (char *)&v56 - v9;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v58 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v56 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v56 - v17;
  MEMORY[0x1E0C80A78](v19);
  v60 = (char *)&v56 - v20;
  v21 = swift_bridgeObjectRetain();
  v22 = sub_1BC3D71B8(v21);
  swift_bridgeObjectRelease();
  v63 = MEMORY[0x1E0DEE9D8];
  v23 = v22[2];
  if (v23)
  {
    swift_retain();
    for (i = 0; i != v23; ++i)
    {
      v25 = swift_bridgeObjectRetain();
      sub_1BC3BB8CC(v25);
    }
    swift_release_n();
    v26 = v63;
    if (!(v63 >> 62))
      goto LABEL_5;
  }
  else
  {
    swift_release();
    v26 = MEMORY[0x1E0DEE9D8];
    if (!(MEMORY[0x1E0DEE9D8] >> 62))
    {
LABEL_5:
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v27 = result;
LABEL_6:
  v57 = v1;
  v59 = v26;
  if (v27)
  {
    if (v27 < 1)
    {
      __break(1u);
      goto LABEL_37;
    }
    v29 = MEMORY[0x1E0DEE9D8];
    v30 = (id *)(v26 + 32);
    v61 = v7;
    do
    {
      v31 = *v30;
      v32 = objc_msgSend(v31, sel_meaningfulDate);
      if (v32)
      {
        v33 = v32;
        sub_1BC62A724();

        v34 = 0;
      }
      else
      {
        v34 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v15, v34, 1, v4);
      sub_1BC3EFC38((uint64_t)v15, (uint64_t)v18);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v18, 1, v4) == 1)
      {
        sub_1BC377E3C((uint64_t)v18, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      }
      else
      {
        v35 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v36 = v62;
        v35(v62, v18, v4);
        v35(v7, v36, v4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v29 = sub_1BC3B666C(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
        v38 = *(_QWORD *)(v29 + 16);
        v37 = *(_QWORD *)(v29 + 24);
        if (v38 >= v37 >> 1)
          v29 = sub_1BC3B666C(v37 > 1, v38 + 1, 1, v29);
        *(_QWORD *)(v29 + 16) = v38 + 1;
        v39 = v29
            + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
            + *(_QWORD *)(v5 + 72) * v38;
        v7 = v61;
        v35((char *)v39, v61, v4);
      }
      ++v30;
      --v27;
    }
    while (v27);
  }
  else
  {
    v29 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease_n();
  v40 = v60;
  sub_1BC55F208(v29, v60);
  v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v41(v40, 1, v4) == 1)
  {
    swift_bridgeObjectRelease();
    v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    v43 = (uint64_t)v40;
    return sub_1BC377E3C(v43, (unint64_t *)&qword_1ED6A4EA0, v42);
  }
  v44 = sub_1BC55F51C();
  v46 = v45;
  v47 = *(void (**)(char *, uint64_t))(v5 + 8);
  v47(v40, v4);
  if ((v46 & 1) != 0)
    return swift_bridgeObjectRelease();
  v48 = v58;
  sub_1BC55F708(v29, v58);
  swift_bridgeObjectRelease();
  if (v41(v48, 1, v4) == 1)
  {
    v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    v43 = (uint64_t)v48;
    return sub_1BC377E3C(v43, (unint64_t *)&qword_1ED6A4EA0, v42);
  }
  v49 = sub_1BC55F51C();
  v51 = v50;
  result = ((uint64_t (*)(char *, uint64_t))v47)(v48, v4);
  if ((v51 & 1) == 0)
  {
    v52 = v57;
    if (v44 == v49)
    {
      v52[6] = sub_1BC4B264C(v44);
      v52[7] = v53;
      swift_bridgeObjectRelease();
    }
    v54 = v56;
    sub_1BC36D6D8((uint64_t)v52 + OBJC_IVAR____TtC15HealthRecordsUI26PDFConfigurationDataSource_configuration, v56);
    type metadata accessor for YearRangePickerDataSource();
    v55 = swift_allocObject();
    *(_QWORD *)(v55 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_delegate + 8) = 0;
    result = swift_unknownObjectWeakInit();
    if (v49 >= v44)
    {
      *(_QWORD *)(v55 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_pickerRange) = sub_1BC3D70DC(v44, v49);
      *(_QWORD *)(v55 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear) = v44;
      *(_QWORD *)(v55 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear) = v49;
      sub_1BC36D7DC(v54, v55 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_configuration);
      v52[5] = v55;
      return swift_release();
    }
LABEL_37:
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC55F208@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v25)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v26;
  unint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t, __n128);

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1BC62A760();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v30 - v16;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
    v20(v9, 1, 1, v10, v15);
    goto LABEL_5;
  }
  v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v35 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v11 + 16);
  v35(v9, a1 + v31, v10, v15);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v33)(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
    v20 = v33;
LABEL_5:
    sub_1BC377E3C((uint64_t)v9, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v20)(a2, 1, 1, v10);
  }
  v30 = a2;
  v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v22(v17, v9, v10);
  v32 = a1;
  swift_bridgeObjectRetain();
  v23 = v18 - 1;
  v24 = v33;
  if (v23)
  {
    v34 = *(_QWORD *)(v11 + 72);
    v27 = v32 + v34 + v31;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v35)(v6, v27, v10);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v6, 0, 1, v10);
      if (v19(v6, 1, v10) == 1)
        break;
      v22(v13, v6, v10);
      sub_1BC4B86D8();
      v28 = sub_1BC62C5F0();
      v29 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v28 & 1) != 0)
      {
        v29(v17, v10);
        v22(v17, v13, v10);
      }
      else
      {
        v29(v13, v10);
      }
      v27 += v34;
      if (!--v23)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v24)(v6, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1BC377E3C((uint64_t)v6, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v25 = v24;
  v26 = v30;
  v22(v30, v17, v10);
  return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v25)(v26, 0, 1, v10);
}

uint64_t sub_1BC55F51C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v15 = sub_1BC62A478();
  v0 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC62A8D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_hk_gregorianCalendarWithUTCTimeZone);
  sub_1BC62A874();

  sub_1BC357158(0, &qword_1EF429B18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = sub_1BC62A8C8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC639590;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x1E0CB1158], v8);
  sub_1BC5237DC(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BC62A85C();
  swift_bridgeObjectRelease();
  v12 = sub_1BC62A43C();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v15);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v12;
}

uint64_t sub_1BC55F708@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v25)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v26;
  unint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t, __n128);

  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1BC62A760();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v30 - v16;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
    v20(v9, 1, 1, v10, v15);
    goto LABEL_5;
  }
  v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v35 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v11 + 16);
  v35(v9, a1 + v31, v10, v15);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v33)(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
    v20 = v33;
LABEL_5:
    sub_1BC377E3C((uint64_t)v9, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v20)(a2, 1, 1, v10);
  }
  v30 = a2;
  v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v22(v17, v9, v10);
  v32 = a1;
  swift_bridgeObjectRetain();
  v23 = v18 - 1;
  v24 = v33;
  if (v23)
  {
    v34 = *(_QWORD *)(v11 + 72);
    v27 = v32 + v34 + v31;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v35)(v6, v27, v10);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v6, 0, 1, v10);
      if (v19(v6, 1, v10) == 1)
        break;
      v22(v13, v6, v10);
      sub_1BC4B86D8();
      v28 = sub_1BC62C5F0();
      v29 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v28 & 1) != 0)
      {
        v29(v17, v10);
        v22(v17, v13, v10);
      }
      else
      {
        v29(v13, v10);
      }
      v27 += v34;
      if (!--v23)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v24)(v6, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1BC377E3C((uint64_t)v6, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v25 = v24;
  v26 = v30;
  v22(v30, v17, v10);
  return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v25)(v26, 0, 1, v10);
}

uint64_t sub_1BC55FA1C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC36DCA4(v0 + OBJC_IVAR____TtC15HealthRecordsUI26PDFConfigurationDataSource_configuration);
  return v0;
}

uint64_t sub_1BC55FA88()
{
  sub_1BC55FA1C();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC55FAAC()
{
  return type metadata accessor for PDFConfigurationDataSource();
}

uint64_t type metadata accessor for PDFConfigurationDataSource()
{
  uint64_t result;

  result = qword_1EF4367C0;
  if (!qword_1EF4367C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC55FAF0()
{
  uint64_t result;
  unint64_t v1;

  result = _s13ConfigurationVMa();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC55FBAC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  char v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  char v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;

  v3 = a1[1];
  result = sub_1BC62D520();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_153;
    if (v3)
      return sub_1BC560C1C(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_161;
  v113 = result;
  v110 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    v120 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_119:
      v101 = v11;
      v112 = v8;
      if (v12 >= 2)
      {
        v102 = *v110;
        do
        {
          v103 = v12 - 2;
          if (v12 < 2)
            goto LABEL_148;
          if (!v102)
            goto LABEL_160;
          v104 = v101;
          v105 = *(_QWORD *)&v101[16 * v103 + 32];
          v106 = *(_QWORD *)&v101[16 * v12 + 24];
          sub_1BC560EAC((char *)(v102 + 72 * v105), (char *)(v102 + 72 * *(_QWORD *)&v101[16 * v12 + 16]), v102 + 72 * v106, v120);
          if (v1)
            break;
          if (v106 < v105)
            goto LABEL_149;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v104 = sub_1BC504414((uint64_t)v104);
          if (v103 >= *((_QWORD *)v104 + 2))
            goto LABEL_150;
          v107 = &v104[16 * v103 + 32];
          *(_QWORD *)v107 = v105;
          *((_QWORD *)v107 + 1) = v106;
          v108 = *((_QWORD *)v104 + 2);
          if (v12 > v108)
            goto LABEL_151;
          memmove(&v104[16 * v12 + 16], &v104[16 * v12 + 32], 16 * (v108 - v12));
          v101 = v104;
          *((_QWORD *)v104 + 2) = v108 - 1;
          v12 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v112 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v112 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BC62C8CC();
    *(_QWORD *)(v7 + 16) = v6;
    v112 = v7;
    v120 = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v111 = *a1 + 40;
  v109 = *a1 + 56;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v114 = v3;
  v121 = v10;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_47;
    v14 = v10 + 72 * v9;
    v15 = *(_QWORD *)(v14 + 32);
    v16 = *(_QWORD *)(v14 + 40);
    v17 = v10 + 72 * v13;
    if (v15 == *(_QWORD *)(v17 + 32) && v16 == *(_QWORD *)(v17 + 40))
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
      {
        v9 = v13 + 2;
        goto LABEL_69;
      }
      v19 = 0;
    }
    else
    {
      v19 = sub_1BC62D574();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_37;
    }
    v21 = (_QWORD *)(v111 + 72 * v20);
    do
    {
      v23 = v10 + 72 * v9;
      if (*(v21 - 1) == *(_QWORD *)(v23 + 32) && *v21 == *(_QWORD *)(v23 + 40))
      {
        if ((v19 & 1) != 0)
          goto LABEL_38;
      }
      else if (((v19 ^ sub_1BC62D574()) & 1) != 0)
      {
        goto LABEL_37;
      }
      v22 = v20 + 1;
      v21 += 9;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_37:
    v9 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_47;
LABEL_38:
    if (v20 < v13)
      goto LABEL_156;
    if (v13 < v20)
      break;
    v9 = v20;
LABEL_47:
    if (v9 < v3)
      goto LABEL_48;
LABEL_69:
    if (v9 < v13)
      goto LABEL_147;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BC503AB4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v52 = *((_QWORD *)v11 + 2);
    v51 = *((_QWORD *)v11 + 3);
    v12 = v52 + 1;
    if (v52 >= v51 >> 1)
      v11 = sub_1BC503AB4((char *)(v51 > 1), v52 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v53 = v11 + 32;
    v54 = &v11[16 * v52 + 32];
    *(_QWORD *)v54 = v13;
    *((_QWORD *)v54 + 1) = v9;
    if (v52)
    {
      while (1)
      {
        v55 = v12 - 1;
        if (v12 >= 4)
        {
          v60 = &v53[16 * v12];
          v61 = *((_QWORD *)v60 - 8);
          v62 = *((_QWORD *)v60 - 7);
          v66 = __OFSUB__(v62, v61);
          v63 = v62 - v61;
          if (v66)
            goto LABEL_136;
          v65 = *((_QWORD *)v60 - 6);
          v64 = *((_QWORD *)v60 - 5);
          v66 = __OFSUB__(v64, v65);
          v58 = v64 - v65;
          v59 = v66;
          if (v66)
            goto LABEL_137;
          v67 = v12 - 2;
          v68 = &v53[16 * v12 - 32];
          v70 = *(_QWORD *)v68;
          v69 = *((_QWORD *)v68 + 1);
          v66 = __OFSUB__(v69, v70);
          v71 = v69 - v70;
          if (v66)
            goto LABEL_139;
          v66 = __OFADD__(v58, v71);
          v72 = v58 + v71;
          if (v66)
            goto LABEL_142;
          if (v72 >= v63)
          {
            v90 = &v53[16 * v55];
            v92 = *(_QWORD *)v90;
            v91 = *((_QWORD *)v90 + 1);
            v66 = __OFSUB__(v91, v92);
            v93 = v91 - v92;
            if (v66)
              goto LABEL_146;
            v83 = v58 < v93;
            goto LABEL_106;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v84 = *((_QWORD *)v11 + 4);
            v85 = *((_QWORD *)v11 + 5);
            v66 = __OFSUB__(v85, v84);
            v77 = v85 - v84;
            v78 = v66;
            goto LABEL_100;
          }
          v57 = *((_QWORD *)v11 + 4);
          v56 = *((_QWORD *)v11 + 5);
          v66 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          v59 = v66;
        }
        if ((v59 & 1) != 0)
          goto LABEL_138;
        v67 = v12 - 2;
        v73 = &v53[16 * v12 - 32];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v76 = __OFSUB__(v74, v75);
        v77 = v74 - v75;
        v78 = v76;
        if (v76)
          goto LABEL_141;
        v79 = &v53[16 * v55];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v66 = __OFSUB__(v80, v81);
        v82 = v80 - v81;
        if (v66)
          goto LABEL_144;
        if (__OFADD__(v77, v82))
          goto LABEL_145;
        if (v77 + v82 >= v58)
        {
          v83 = v58 < v82;
LABEL_106:
          if (v83)
            v55 = v67;
          goto LABEL_108;
        }
LABEL_100:
        if ((v78 & 1) != 0)
          goto LABEL_140;
        v86 = &v53[16 * v55];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v66 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v66)
          goto LABEL_143;
        if (v89 < v77)
          goto LABEL_15;
LABEL_108:
        v94 = v55 - 1;
        if (v55 - 1 >= v12)
        {
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
          goto LABEL_155;
        }
        if (!v10)
          goto LABEL_158;
        v95 = v10;
        v96 = &v53[16 * v94];
        v97 = *(_QWORD *)v96;
        v98 = &v53[16 * v55];
        v99 = *((_QWORD *)v98 + 1);
        sub_1BC560EAC((char *)(v95 + 72 * *(_QWORD *)v96), (char *)(v95 + 72 * *(_QWORD *)v98), v95 + 72 * v99, v120);
        if (v1)
          goto LABEL_116;
        if (v99 < v97)
          goto LABEL_133;
        if (v55 > *((_QWORD *)v11 + 2))
          goto LABEL_134;
        *(_QWORD *)v96 = v97;
        *(_QWORD *)&v53[16 * v94 + 8] = v99;
        v100 = *((_QWORD *)v11 + 2);
        if (v55 >= v100)
          goto LABEL_135;
        v12 = v100 - 1;
        memmove(&v53[16 * v55], v98 + 16, 16 * (v100 - 1 - v55));
        *((_QWORD *)v11 + 2) = v100 - 1;
        v10 = v121;
        if (v100 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v114;
    if (v9 >= v114)
    {
      v8 = v112;
      goto LABEL_119;
    }
  }
  v25 = 72 * v20;
  v26 = 72 * v13;
  v27 = v20;
  v28 = v13;
  do
  {
    if (v28 != --v27)
    {
      if (!v10)
        goto LABEL_159;
      v29 = v10 + v26;
      v30 = v10 + v25;
      v31 = (const void *)(v10 + v25 - 72);
      v118 = *(_BYTE *)(v10 + v26);
      v32 = *(_QWORD *)(v10 + v26 + 8);
      v119 = *(_QWORD *)(v29 + 32);
      v117 = *(_OWORD *)(v29 + 40);
      v115 = *(_OWORD *)(v29 + 16);
      v116 = *(_OWORD *)(v29 + 56);
      memmove((void *)v29, v31, 0x48uLL);
      *(_BYTE *)(v30 - 72) = v118;
      *(_QWORD *)(v30 - 64) = v32;
      v10 = v121;
      *(_OWORD *)(v30 - 56) = v115;
      *(_QWORD *)(v30 - 40) = v119;
      *(_OWORD *)(v30 - 32) = v117;
      *(_OWORD *)(v30 - 16) = v116;
    }
    ++v28;
    v25 -= 72;
    v26 += 72;
  }
  while (v28 < v27);
  v9 = v20;
  v3 = v114;
  if (v20 >= v114)
    goto LABEL_69;
LABEL_48:
  if (__OFSUB__(v9, v13))
    goto LABEL_152;
  if (v9 - v13 >= v113)
    goto LABEL_69;
  if (__OFADD__(v13, v113))
    goto LABEL_154;
  if (v13 + v113 >= v3)
    v33 = v3;
  else
    v33 = v13 + v113;
  if (v33 >= v13)
  {
    if (v9 != v33)
    {
      v34 = v109 + 72 * v9;
      do
      {
        v35 = v10 + 72 * v9;
        v36 = *(_QWORD *)(v35 + 32);
        v37 = *(_QWORD *)(v35 + 40);
        v38 = v13;
        v39 = v34;
        do
        {
          v40 = v36 == *(_QWORD *)(v39 - 96) && v37 == *(_QWORD *)(v39 - 88);
          if (v40 || (sub_1BC62D574() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_157;
          v41 = v39 - 56;
          v42 = (_OWORD *)(v39 - 128);
          v43 = *(_QWORD *)(v39 - 64);
          v45 = *(_OWORD *)(v39 - 96);
          v44 = *(_OWORD *)(v39 - 80);
          *(_OWORD *)(v39 - 72) = *(_OWORD *)v39;
          v39 -= 72;
          v46 = *(_BYTE *)(v39 + 16);
          v47 = *(_QWORD *)(v39 + 24);
          v36 = *(_QWORD *)(v39 + 48);
          v48 = *(_OWORD *)(v39 + 32);
          v49 = *(_OWORD *)(v39 + 56);
          *(_OWORD *)(v41 + 32) = v45;
          *(_OWORD *)(v41 + 48) = v44;
          *(_QWORD *)(v41 + 64) = v43;
          v50 = v42[1];
          *(_OWORD *)v41 = *v42;
          *(_OWORD *)(v41 + 16) = v50;
          *(_BYTE *)(v39 - 56) = v46;
          *(_QWORD *)(v39 - 48) = v47;
          *(_OWORD *)(v39 - 40) = v48;
          *(_OWORD *)(v39 - 16) = v49;
          v37 = v49;
          ++v38;
          *(_QWORD *)(v39 - 24) = v36;
        }
        while (v9 != v38);
        ++v9;
        v34 += 72;
      }
      while (v9 != v33);
      v9 = v33;
    }
    goto LABEL_69;
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC560354(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v25;
  int v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v60;
  void *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v3 = a1[1];
  result = sub_1BC62D520();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_150;
    if (v3)
      return sub_1BC560D2C(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_158;
  v120 = result;
  v117 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v133 = MEMORY[0x1E0DEE9D8];
    v128 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_116:
      if (v11 >= 2)
      {
        v111 = *v117;
        do
        {
          v112 = v11 - 2;
          if (v11 < 2)
            goto LABEL_145;
          if (!v111)
            goto LABEL_157;
          v113 = *(_QWORD *)&v8[16 * v112 + 32];
          v114 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_1BC561188((void **)(v111 + 8 * v113), (id *)(v111 + 8 * *(_QWORD *)&v8[16 * v11 + 16]), (id *)(v111 + 8 * v114), v128);
          if (v1)
            break;
          if (v114 < v113)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1BC504414((uint64_t)v8);
          if (v112 >= *((_QWORD *)v8 + 2))
            goto LABEL_147;
          v115 = &v8[16 * v112 + 32];
          *(_QWORD *)v115 = v113;
          *((_QWORD *)v115 + 1) = v114;
          v116 = *((_QWORD *)v8 + 2);
          if (v11 > v116)
            goto LABEL_148;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v116 - v11));
          *((_QWORD *)v8 + 2) = v116 - 1;
          v11 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BC62C890();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
    v7 = sub_1BC62C8CC();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v128 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v133 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v118 = *a1 + 16;
  v119 = *a1 - 8;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v125 = v3;
  v129 = *a1;
  while (2)
  {
    v12 = v9 + 1;
    v124 = v9;
    if (v9 + 1 >= v3)
      goto LABEL_45;
    v121 = v8;
    v13 = *(void **)(v10 + 8 * v9);
    v14 = *(id *)(v10 + 8 * v12);
    v15 = v13;
    v16 = objc_msgSend(v14, sel_title);
    v17 = sub_1BC62C680();
    v19 = v18;

    v20 = objc_msgSend(v15, sel_title);
    v21 = sub_1BC62C680();
    v23 = v22;

    if (v17 == v21 && v19 == v23)
      v126 = 0;
    else
      v126 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v12 = v9 + 2;
    v3 = v125;
    if (v9 + 2 >= v125)
      goto LABEL_36;
    v25 = (id *)(v118 + 8 * v9);
    while (1)
    {
      v130 = v12;
      v27 = *(v25 - 1);
      v28 = *v25;
      v29 = v27;
      v30 = objc_msgSend(v28, sel_title);
      v31 = sub_1BC62C680();
      v33 = v32;

      v34 = objc_msgSend(v29, sel_title);
      v35 = sub_1BC62C680();
      v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
        if ((v126 & 1) != 0)
        {
          v8 = v121;
          v9 = v124;
          v3 = v125;
          v10 = v129;
          v12 = v130;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      v26 = sub_1BC62D574();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v126 ^ v26) & 1) != 0)
        break;
LABEL_25:
      v12 = v130 + 1;
      ++v25;
      v3 = v125;
      if (v125 == v130 + 1)
      {
        v12 = v125;
        goto LABEL_35;
      }
    }
    v3 = v125;
    v12 = v130;
LABEL_35:
    v9 = v124;
LABEL_36:
    v8 = v121;
    v10 = v129;
    if ((v126 & 1) != 0)
    {
LABEL_37:
      if (v12 < v9)
        goto LABEL_151;
      if (v9 < v12)
      {
        v39 = (uint64_t *)(v119 + 8 * v12);
        v40 = v12;
        v41 = v9;
        v42 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v41 != --v40)
          {
            if (!v10)
              goto LABEL_156;
            v43 = *v42;
            *v42 = *v39;
            *v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
    }
LABEL_45:
    if (v12 >= v3)
      goto LABEL_68;
    if (__OFSUB__(v12, v9))
      goto LABEL_149;
    if (v12 - v9 >= v120)
    {
LABEL_68:
      if (v12 < v9)
        goto LABEL_144;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1BC503AB4(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v63 = *((_QWORD *)v8 + 2);
      v62 = *((_QWORD *)v8 + 3);
      v11 = v63 + 1;
      if (v63 >= v62 >> 1)
        v8 = sub_1BC503AB4((char *)(v62 > 1), v63 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v11;
      v64 = v8 + 32;
      v65 = &v8[16 * v63 + 32];
      *(_QWORD *)v65 = v9;
      *((_QWORD *)v65 + 1) = v12;
      v132 = v12;
      if (!v63)
      {
        v11 = 1;
LABEL_14:
        v3 = v125;
        v9 = v132;
        if (v132 >= v125)
          goto LABEL_116;
        continue;
      }
      while (1)
      {
        v66 = v11 - 1;
        if (v11 >= 4)
        {
          v71 = &v64[16 * v11];
          v72 = *((_QWORD *)v71 - 8);
          v73 = *((_QWORD *)v71 - 7);
          v77 = __OFSUB__(v73, v72);
          v74 = v73 - v72;
          if (v77)
            goto LABEL_133;
          v76 = *((_QWORD *)v71 - 6);
          v75 = *((_QWORD *)v71 - 5);
          v77 = __OFSUB__(v75, v76);
          v69 = v75 - v76;
          v70 = v77;
          if (v77)
            goto LABEL_134;
          v78 = v11 - 2;
          v79 = &v64[16 * v11 - 32];
          v81 = *(_QWORD *)v79;
          v80 = *((_QWORD *)v79 + 1);
          v77 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          if (v77)
            goto LABEL_136;
          v77 = __OFADD__(v69, v82);
          v83 = v69 + v82;
          if (v77)
            goto LABEL_139;
          if (v83 >= v74)
          {
            v101 = &v64[16 * v66];
            v103 = *(_QWORD *)v101;
            v102 = *((_QWORD *)v101 + 1);
            v77 = __OFSUB__(v102, v103);
            v104 = v102 - v103;
            if (v77)
              goto LABEL_143;
            v94 = v69 < v104;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v95 = *((_QWORD *)v8 + 4);
            v96 = *((_QWORD *)v8 + 5);
            v77 = __OFSUB__(v96, v95);
            v88 = v96 - v95;
            v89 = v77;
            goto LABEL_99;
          }
          v68 = *((_QWORD *)v8 + 4);
          v67 = *((_QWORD *)v8 + 5);
          v77 = __OFSUB__(v67, v68);
          v69 = v67 - v68;
          v70 = v77;
        }
        if ((v70 & 1) != 0)
          goto LABEL_135;
        v78 = v11 - 2;
        v84 = &v64[16 * v11 - 32];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v87 = __OFSUB__(v85, v86);
        v88 = v85 - v86;
        v89 = v87;
        if (v87)
          goto LABEL_138;
        v90 = &v64[16 * v66];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v77 = __OFSUB__(v91, v92);
        v93 = v91 - v92;
        if (v77)
          goto LABEL_141;
        if (__OFADD__(v88, v93))
          goto LABEL_142;
        if (v88 + v93 >= v69)
        {
          v94 = v69 < v93;
LABEL_105:
          if (v94)
            v66 = v78;
          goto LABEL_107;
        }
LABEL_99:
        if ((v89 & 1) != 0)
          goto LABEL_137;
        v97 = &v64[16 * v66];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v77 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v77)
          goto LABEL_140;
        if (v100 < v88)
          goto LABEL_14;
LABEL_107:
        v105 = v66 - 1;
        if (v66 - 1 >= v11)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v10)
          goto LABEL_155;
        v106 = &v64[16 * v105];
        v107 = *(_QWORD *)v106;
        v108 = &v64[16 * v66];
        v109 = *((_QWORD *)v108 + 1);
        sub_1BC561188((void **)(v10 + 8 * *(_QWORD *)v106), (id *)(v10 + 8 * *(_QWORD *)v108), (id *)(v10 + 8 * v109), v128);
        if (v1)
          goto LABEL_127;
        if (v109 < v107)
          goto LABEL_130;
        if (v66 > *((_QWORD *)v8 + 2))
          goto LABEL_131;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v64[16 * v105 + 8] = v109;
        v110 = *((_QWORD *)v8 + 2);
        if (v66 >= v110)
          goto LABEL_132;
        v11 = v110 - 1;
        memmove(&v64[16 * v66], v108 + 16, 16 * (v110 - 1 - v66));
        *((_QWORD *)v8 + 2) = v110 - 1;
        if (v110 <= 2)
          goto LABEL_14;
      }
    }
    break;
  }
  if (__OFADD__(v9, v120))
    goto LABEL_152;
  if (v9 + v120 >= v3)
    v44 = v3;
  else
    v44 = v9 + v120;
  if (v44 >= v9)
  {
    if (v12 != v44)
    {
      v122 = v8;
      v123 = v44;
      v45 = v119 + 8 * v12;
      do
      {
        v47 = *(void **)(v10 + 8 * v12);
        v127 = v45;
        v131 = v12;
        while (1)
        {
          v48 = *(void **)v45;
          v49 = v47;
          v50 = v48;
          v51 = objc_msgSend(v49, sel_title);
          v52 = sub_1BC62C680();
          v54 = v53;

          v55 = objc_msgSend(v50, sel_title);
          v56 = sub_1BC62C680();
          v58 = v57;

          if (v52 == v56 && v54 == v58)
          {

            swift_bridgeObjectRelease_n();
            v10 = v129;
            v46 = v131;
            goto LABEL_56;
          }
          v60 = sub_1BC62D574();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = v129;
          if ((v60 & 1) == 0)
            break;
          if (!v129)
            goto LABEL_154;
          v61 = *(void **)v45;
          v47 = *(void **)(v45 + 8);
          *(_QWORD *)v45 = v47;
          *(_QWORD *)(v45 + 8) = v61;
          v45 -= 8;
          ++v9;
          v46 = v131;
          if (v131 == v9)
            goto LABEL_56;
        }
        v46 = v131;
LABEL_56:
        v12 = v46 + 1;
        v45 = v127 + 8;
        v9 = v124;
      }
      while (v12 != v123);
      v12 = v123;
      v8 = v122;
    }
    goto LABEL_68;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_1BC62D388();
  __break(1u);
  return result;
}

uint64_t sub_1BC560C1C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 72 * a3 + 56;
LABEL_5:
    v9 = v7 + 72 * v4;
    result = *(_QWORD *)(v9 + 32);
    v10 = *(_QWORD *)(v9 + 40);
    v11 = v6;
    v12 = v8;
    while (1)
    {
      v13 = result == *(_QWORD *)(v12 - 96) && v10 == *(_QWORD *)(v12 - 88);
      if (v13 || (result = sub_1BC62D574(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 72;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v14 = v12 - 56;
      v15 = (_OWORD *)(v12 - 128);
      v16 = *(_QWORD *)(v12 - 64);
      v18 = *(_OWORD *)(v12 - 96);
      v17 = *(_OWORD *)(v12 - 80);
      *(_OWORD *)(v12 - 72) = *(_OWORD *)v12;
      v12 -= 72;
      v19 = *(_BYTE *)(v12 + 16);
      v20 = *(_QWORD *)(v12 + 24);
      result = *(_QWORD *)(v12 + 48);
      v21 = *(_OWORD *)(v12 + 32);
      v22 = *(_OWORD *)(v12 + 56);
      *(_OWORD *)(v14 + 32) = v18;
      *(_OWORD *)(v14 + 48) = v17;
      *(_QWORD *)(v14 + 64) = v16;
      v23 = v15[1];
      *(_OWORD *)v14 = *v15;
      *(_OWORD *)(v14 + 16) = v23;
      *(_BYTE *)(v12 - 56) = v19;
      *(_QWORD *)(v12 - 48) = v20;
      *(_OWORD *)(v12 - 40) = v21;
      *(_OWORD *)(v12 - 16) = v22;
      v10 = v22;
      ++v11;
      *(_QWORD *)(v12 - 24) = result;
      if (v4 == v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC560D2C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = result;
  if (a3 != a2)
  {
    v25 = *a4;
    v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v25 + 8 * a3);
    v7 = v23;
    v24 = v4;
    v26 = a3;
    while (1)
    {
      v8 = *(void **)v4;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, sel_title);
      v12 = sub_1BC62C680();
      v14 = v13;

      v15 = objc_msgSend(v10, sel_title);
      v16 = sub_1BC62C680();
      v18 = v17;

      if (v12 == v16 && v14 == v18)
      {

        result = swift_bridgeObjectRelease_n();
        v5 = v26;
LABEL_5:
        a3 = v5 + 1;
        v4 = v24 + 8;
        if (a3 == a2)
          return result;
        goto LABEL_6;
      }
      v20 = sub_1BC62D574();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 = v26;
      if ((v20 & 1) == 0)
        goto LABEL_5;
      if (!v25)
        break;
      v21 = *(void **)v4;
      v6 = *(void **)(v4 + 8);
      *(_QWORD *)v4 = v6;
      *(_QWORD *)(v4 + 8) = v21;
      v4 -= 8;
      if (v26 == ++v7)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC560EAC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  BOOL v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  BOOL v20;
  char *v21;
  uint64_t result;
  char *v23;
  const void *v24;
  char *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 72;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 72;
  v25 = __src;
  v24 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -71)
    {
      if (__dst != a2 || &a2[72 * v11] <= __dst)
        memmove(__dst, a2, 72 * v11);
      v17 = &v4[72 * v11];
      v23 = v17;
      v25 = v6;
      if (v7 < v6 && v10 >= 72)
      {
        v18 = (char *)(a3 - 72);
        do
        {
          v19 = v18 + 72;
          v20 = *((_QWORD *)v17 - 5) == *((_QWORD *)v6 - 5) && *((_QWORD *)v17 - 4) == *((_QWORD *)v6 - 4);
          if (v20 || (sub_1BC62D574() & 1) == 0)
          {
            v23 = v17 - 72;
            if (v19 < v17 || v18 >= v17 || v19 != v17)
              memmove(v18, v17 - 72, 0x48uLL);
            v21 = v6;
            v17 -= 72;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 72;
            if (v19 != v6 || v18 >= v6)
              memmove(v18, v6 - 72, 0x48uLL);
            v25 = v6 - 72;
            if (v21 <= v7)
              break;
          }
          v18 -= 72;
          v6 = v21;
        }
        while (v17 > v4);
      }
LABEL_48:
      sub_1BC503BC0((void **)&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -71)
  {
    if (__dst != __src || &__src[72 * v9] <= __dst)
      memmove(__dst, __src, 72 * v9);
    v12 = &v4[72 * v9];
    v23 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 72)
    {
      v13 = v4;
      while (1)
      {
        v14 = *((_QWORD *)v6 + 4) == *((_QWORD *)v13 + 4) && *((_QWORD *)v6 + 5) == *((_QWORD *)v13 + 5);
        if (v14 || (sub_1BC62D574() & 1) == 0)
        {
          v4 = v13 + 72;
          v16 = v13;
          v15 = v6;
          if (v7 == v13)
          {
            v13 += 72;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v13 += 72;
          }
        }
        else
        {
          v15 = v6 + 72;
          v16 = v6;
          if (v7 == v6 && v7 < v15)
            goto LABEL_22;
        }
        memmove(v7, v16, 0x48uLL);
LABEL_22:
        v7 += 72;
        if (v13 < v12)
        {
          v6 = v15;
          if ((unint64_t)v15 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC561188(void **__src, id *a2, id *a3, void **__dst)
{
  void **v4;
  id *v5;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  id *v28;
  void **v29;
  id *v30;
  void **v31;
  id *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  id *v48;
  unint64_t v49;
  uint64_t result;
  void **v51;
  id *v52;
  void **v53;
  id *v54;
  void **v55;
  id *v56;
  id *v57;
  id *v58;
  void **v59;
  void **v60;
  id *v61;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = (char *)a3 - (char *)a2;
  v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v12 = (char *)a3 - (char *)a2;
  v13 = v12 >> 3;
  v61 = __src;
  v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_53;
    if (__dst != a2 || &a2[v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v51 = v4;
    v31 = &v4[v13];
    v59 = v31;
    v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_1BC503C80(&v61, &v60, &v59);
      return 1;
    }
    v32 = v6;
    v56 = v7;
    while (1)
    {
      v52 = v31;
      v54 = v6;
      v58 = v5;
      v34 = *--v31;
      v33 = v34;
      v35 = *--v32;
      v36 = v33;
      v37 = v35;
      v38 = objc_msgSend(v36, sel_title);
      v39 = sub_1BC62C680();
      v41 = v40;

      v42 = objc_msgSend(v37, sel_title);
      v43 = sub_1BC62C680();
      v45 = v44;

      if (v39 == v43 && v41 == v45)
        break;
      v47 = sub_1BC62D574();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v58;
      v5 = v58 - 1;
      if ((v47 & 1) == 0)
        goto LABEL_46;
      v49 = (unint64_t)v56;
      v31 = v52;
      if (v58 != v54 || v5 >= v54)
        *v5 = *v32;
      v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        v6 = v32;
        if (v31 > v51)
          continue;
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    v48 = v58;
    v5 = v58 - 1;
LABEL_46:
    v32 = v54;
    v49 = (unint64_t)v56;
    v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52)
      *v5 = *v31;
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v53 = &v4[v10];
    v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      v57 = v5;
      while (1)
      {
        v55 = v7;
        v14 = v6;
        v15 = *v4;
        v16 = *v6;
        v17 = v15;
        v18 = objc_msgSend(v16, sel_title);
        v19 = sub_1BC62C680();
        v21 = v20;

        v22 = objc_msgSend(v17, sel_title);
        v23 = sub_1BC62C680();
        v25 = v24;

        if (v19 == v23 && v21 == v25)
          break;
        v27 = sub_1BC62D574();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
          goto LABEL_23;
        v28 = v14 + 1;
        v29 = v55;
        v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14)
          *v55 = *v14;
LABEL_26:
        v7 = v29 + 1;
        if (v4 < v53)
        {
          v6 = v28;
          if (v28 < v30)
            continue;
        }
        v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      v29 = v55;
      v30 = v57;
      if (v55 != v4)
        *v55 = *v4;
      v60 = ++v4;
      v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  result = sub_1BC62D418();
  __break(1u);
  return result;
}

uint64_t sub_1BC56159C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v0 = sub_1BC62A94C();
  if (v0 == 2)
  {
    if (qword_1ED6A4888 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (v0 == 1)
  {
    if (qword_1ED6A4888 == -1)
      goto LABEL_9;
LABEL_12:
    swift_once();
    goto LABEL_9;
  }
  if (v0)
    return 0;
  if (qword_1ED6A4888 != -1)
    goto LABEL_12;
LABEL_9:
  v1 = (id)qword_1ED6A5528;
  swift_bridgeObjectRetain();
  v2 = sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  return v2;
}

void sub_1BC561764()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4369E8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC62D244();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4369E8);
  }
}

id sub_1BC5617C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  id v9;
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = a9;
    return a2;
  }
  return result;
}

void sub_1BC561830()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6A3308 != -1)
    swift_once();
  v0 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC62A4A8();
  v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EF4369F0 = v1;
  *(_QWORD *)algn_1EF4369F8 = v3;
}

void sub_1BC5618FC()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1BC62C650();
  v2 = objc_msgSend(v0, sel_modelSpecificLocalizedStringKeyForKey_, v1);

  if (v2)
  {
    sub_1BC62C680();

    if (qword_1ED6A3308 != -1)
      swift_once();
    v3 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    v4 = sub_1BC62A4A8();
    v6 = v5;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    qword_1EF436A00 = v4;
    *(_QWORD *)algn_1EF436A08 = v6;
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC561A38()
{
  qword_1EF436A10 = 0x403E000000000000;
}

void sub_1BC561A48()
{
  qword_1EF436A18 = 0x405A800000000000;
}

id sub_1BC561A5C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___doneButton;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___doneButton);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___doneButton);
  }
  else
  {
    v4 = sub_1BC561ABC(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC561ABC(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_boldButton);
  if (qword_1ED6A3308 != -1)
    swift_once();
  v3 = (id)qword_1ED6A32F0;
  swift_bridgeObjectRetain();
  sub_1BC62A4A8();
  swift_bridgeObjectRelease();

  v4 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setTitle_forState_, v4, 0, 0xE000000000000000);

  objc_msgSend(v2, sel_addTarget_action_forControlEvents_, a1, sel_doneButtonTapped_, 64);
  return v2;
}

id sub_1BC561C04()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___spinner;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___spinner);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___spinner);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
    v5 = objc_msgSend((id)objc_opt_self(), sel_systemWhiteColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_startAnimating);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC561CDC(void *a1, void *a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  objc_super v17;

  v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_cancellable] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___doneButton] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___spinner] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_onboardingSession] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_selectedItems] = a3;
  v5 = qword_1EF428728;
  v6 = a1;
  v7 = a2;
  if (v5 != -1)
    swift_once();
  v8 = (void *)sub_1BC62C650();
  if (qword_1EF428730 != -1)
    swift_once();
  sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC639590;
  v10 = objc_msgSend(v7, sel_title);
  v11 = sub_1BC62C680();
  v13 = v12;

  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1BC3644C0();
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  sub_1BC62C6B0();
  v14 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingSharingHealthDataViewController();
  v15 = objc_msgSendSuper2(&v17, sel_initWithTitle_detailText_icon_contentLayout_, v8, v14, 0, 3);

  return v15;
}

void sub_1BC561FB0()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v0 = sub_1BC561A5C();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A53C0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC6398E0;
  *(_QWORD *)(v1 + 32) = sub_1BC62C680();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = 0xD000000000000010;
  *(_QWORD *)(v1 + 56) = 0x80000001BC652220;
  *(_QWORD *)(v1 + 64) = 1701736260;
  *(_QWORD *)(v1 + 72) = 0xE400000000000000;
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v0, sel_setAccessibilityIdentifier_, v4);
}

void sub_1BC5620A4()
{
  void *v0;
  uint64_t ObjectType;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  double v42;
  double v43;
  double v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(char *, _QWORD *);
  char *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;

  ObjectType = swift_getObjectType();
  v2 = (_QWORD *)sub_1BC62BB34();
  v3 = *(v2 - 1);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v60 - v7;
  if (qword_1ED6A4918 != -1)
    swift_once();
  v9 = (id)qword_1ED6A5980;
  v10 = (void *)sub_1BC62C650();
  v11 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v10, v9);

  if (!v11)
  {
    sub_1BC62BAF8();
    v46 = sub_1BC62BB28();
    v47 = sub_1BC62CADC();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v62 = v49;
      v63 = ObjectType;
      *(_DWORD *)v48 = 136315138;
      swift_getMetatypeMetadata();
      v61 = v2;
      v50 = sub_1BC62C6E0();
      v63 = sub_1BC4991F0(v50, v51, &v62);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v46, v47, "[%s]: couldn't find image 'HealthLink_Onboarding_SharingInProgressWithSpinnerPlaceholder'", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v49, -1, -1);
      MEMORY[0x1BCCF36A8](v48, -1, -1);

      (*(void (**)(char *, id))(v3 + 8))(v5, v61);
      return;
    }

    v58 = *(void (**)(char *, _QWORD *))(v3 + 8);
    v59 = v5;
LABEL_16:
    v58(v59, v2);
    return;
  }
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v11);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v13 = sub_1BC561C04();
  objc_msgSend(v12, sel_addSubview_, v13);

  v14 = objc_msgSend(v0, sel_headerView);
  v15 = objc_msgSend(v14, sel_customIconContainerView);

  if (!v15)
  {
    sub_1BC62BAF8();
    v52 = sub_1BC62BB28();
    v53 = sub_1BC62CADC();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      v61 = v2;
      v62 = v55;
      *(_DWORD *)v54 = 136315138;
      v60 = v54 + 4;
      v63 = ObjectType;
      swift_getMetatypeMetadata();
      v56 = sub_1BC62C6E0();
      v63 = sub_1BC4991F0(v56, v57, &v62);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v52, v53, "[%s]: there is no customIconContainerView", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v55, -1, -1);
      MEMORY[0x1BCCF36A8](v54, -1, -1);

      (*(void (**)(char *, id))(v3 + 8))(v8, v61);
      return;
    }

    v58 = *(void (**)(char *, _QWORD *))(v3 + 8);
    v59 = v8;
    goto LABEL_16;
  }
  objc_msgSend(v15, sel_addSubview_, v12);
  v60 = (id)objc_opt_self();
  sub_1BC379A60(0, (unint64_t *)&qword_1ED6A4E30);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC641AB0;
  v17 = sub_1BC561C04();
  v18 = objc_msgSend(v17, sel_centerXAnchor);

  v19 = objc_msgSend(v12, sel_leadingAnchor);
  if (qword_1EF428740 != -1)
    swift_once();
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, *(double *)&qword_1EF436A18);

  *(_QWORD *)(v16 + 32) = v20;
  v21 = sub_1BC561C04();
  v22 = objc_msgSend(v21, sel_centerYAnchor);

  v23 = objc_msgSend(v12, sel_topAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 60.5);

  *(_QWORD *)(v16 + 40) = v24;
  v25 = sub_1BC561C04();
  v26 = objc_msgSend(v25, sel_heightAnchor);

  if (qword_1EF428738 != -1)
    swift_once();
  v27 = objc_msgSend(v26, sel_constraintEqualToConstant_, *(double *)&qword_1EF436A10);

  *(_QWORD *)(v16 + 48) = v27;
  v28 = sub_1BC561C04();
  v29 = objc_msgSend(v28, sel_widthAnchor);

  v30 = objc_msgSend(v29, sel_constraintEqualToConstant_, *(double *)&qword_1EF436A10);
  *(_QWORD *)(v16 + 56) = v30;
  v31 = objc_msgSend(v12, sel_centerYAnchor);
  v32 = objc_msgSend(v15, sel_centerYAnchor);
  v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  *(_QWORD *)(v16 + 64) = v33;
  v34 = objc_msgSend(v12, sel_centerXAnchor);
  v35 = objc_msgSend(v15, sel_centerXAnchor);
  v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

  *(_QWORD *)(v16 + 72) = v36;
  v37 = objc_msgSend(v12, sel_heightAnchor);
  v38 = objc_msgSend(v15, sel_heightAnchor);
  v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

  *(_QWORD *)(v16 + 80) = v39;
  v40 = objc_msgSend(v12, sel_widthAnchor);
  v41 = objc_msgSend(v15, sel_heightAnchor);
  objc_msgSend(v11, sel_size);
  v43 = v42;
  objc_msgSend(v11, sel_size);
  v45 = objc_msgSend(v40, sel_constraintEqualToAnchor_multiplier_, v41, v43 / v44);

  *(_QWORD *)(v16 + 88) = v45;
  v63 = v16;
  sub_1BC62C890();
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  v61 = (id)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v60, sel_activateConstraints_, v61);

}

uint64_t sub_1BC562924()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  ObjectType = swift_getObjectType();
  v2 = sub_1BC62BB34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A4918 != -1)
    swift_once();
  v6 = (id)qword_1ED6A5980;
  v7 = (void *)sub_1BC62C650();
  v8 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v7, v6);

  if (v8)
  {
    if (qword_1ED6A3308 != -1)
      swift_once();
    v9 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    v10 = sub_1BC62A4A8();
    v12 = v11;
    swift_bridgeObjectRelease();

    v13 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BC639590;
    v15 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account], sel_title);
    v16 = sub_1BC62C680();
    v18 = v17;

    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 64) = sub_1BC3644C0();
    *(_QWORD *)(v14 + 32) = v16;
    *(_QWORD *)(v14 + 40) = v18;
    v19 = sub_1BC62C6B0();
    v21 = v20;
    swift_bridgeObjectRelease();
    sub_1BC5632C0(v8, v10, v12, v19, v21, v0);

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC62BAF8();
    v23 = sub_1BC62BB28();
    v24 = sub_1BC62CAC4();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v29 = v26;
      v30 = ObjectType;
      *(_DWORD *)v25 = 136315138;
      swift_getMetatypeMetadata();
      v27 = sub_1BC62C6E0();
      v30 = sub_1BC4991F0(v27, v28, &v29);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v23, v24, "[%s] Could not load image HealthLink_Onboarding_SharingCompleted", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v26, -1, -1);
      MEMORY[0x1BCCF36A8](v25, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_1BC562D54(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_1BC62BB34();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6A4918 != -1)
    swift_once();
  v9 = (id)qword_1ED6A5980;
  v10 = (void *)sub_1BC62C650();
  v11 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v10, v9);

  if (v11)
  {
    if (qword_1ED6A3308 != -1)
      swift_once();
    v45 = v11;
    v42[1] = a1;
    v12 = (id)qword_1ED6A32F0;
    swift_bridgeObjectRetain();
    v43 = sub_1BC62A4A8();
    v44 = v13;
    swift_bridgeObjectRelease();

    v14 = (void *)objc_opt_self();
    v15 = (void *)sub_1BC62C650();
    v16 = objc_msgSend(v14, sel_modelSpecificLocalizedStringKeyForKey_, v15);

    if (v16)
    {
      sub_1BC62C680();

      v17 = (id)qword_1ED6A32F0;
      swift_bridgeObjectRetain();
      sub_1BC62A4A8();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1BC41EB3C(0, (unint64_t *)&qword_1ED6A4E70, (unint64_t *)&qword_1ED6A4E90, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1BC6395A0;
      v19 = OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account;
      v20 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account], sel_title);
      v21 = sub_1BC62C680();
      v23 = v22;

      v24 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
      v25 = sub_1BC3644C0();
      *(_QWORD *)(v18 + 64) = v25;
      *(_QWORD *)(v18 + 32) = v21;
      *(_QWORD *)(v18 + 40) = v23;
      v26 = objc_msgSend(*(id *)&v2[v19], sel_title);
      v27 = sub_1BC62C680();
      v29 = v28;

      *(_QWORD *)(v18 + 96) = v24;
      *(_QWORD *)(v18 + 104) = v25;
      *(_QWORD *)(v18 + 72) = v27;
      *(_QWORD *)(v18 + 80) = v29;
      v30 = sub_1BC62C6B0();
      v32 = v31;
      swift_bridgeObjectRelease();
      if (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
      {
        v46 = v30;
        v47 = v32;
        swift_bridgeObjectRetain();
        sub_1BC62C764();
        swift_bridgeObjectRelease();
        v34 = v46;
        v33 = v47;
        swift_getErrorValue();
        sub_1BC62D610();
        v46 = v34;
        v47 = v33;
        swift_bridgeObjectRetain();
        sub_1BC62C764();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v30 = v46;
        v32 = v47;
      }
      v35 = v45;
      sub_1BC5632C0(v45, v43, v44, v30, v32, v2);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1BC62BAF8();
    v36 = sub_1BC62BB28();
    v37 = sub_1BC62CAC4();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v48 = v39;
      *(_DWORD *)v38 = 136315138;
      v46 = ObjectType;
      swift_getMetatypeMetadata();
      v40 = sub_1BC62C6E0();
      v46 = sub_1BC4991F0(v40, v41, &v48);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v36, v37, "[%s] Could not load image HealthLink_Onboarding_Error", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v39, -1, -1);
      MEMORY[0x1BCCF36A8](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_1BC5632C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, id a6)
{
  id v6;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  double v23;
  double v24;
  id v25;
  _QWORD *v26;
  id v27;
  id v28;
  unint64_t v29;
  id v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v50;
  uint64_t aBlock;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  _QWORD *v56;

  v6 = a6;
  v8 = objc_msgSend(a6, sel_headerView);
  v9 = objc_msgSend(v8, sel_customIconContainerView);

  if (v9)
  {
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, a1);
    objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v10, sel_setAlpha_, 0.0);
    objc_msgSend(v9, sel_addSubview_, v10);
    v11 = objc_msgSend(v10, sel_centerXAnchor);
    v12 = objc_msgSend(v9, sel_centerXAnchor);
    v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

    objc_msgSend(v13, sel_setActive_, 1);
    v14 = objc_msgSend(v10, sel_centerYAnchor);
    v15 = objc_msgSend(v9, sel_centerYAnchor);
    v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

    objc_msgSend(v16, sel_setActive_, 1);
    v17 = objc_msgSend(v10, sel_heightAnchor);
    v18 = objc_msgSend(v9, sel_heightAnchor);
    v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

    objc_msgSend(v19, sel_setActive_, 1);
    v20 = objc_msgSend(v10, sel_widthAnchor);
    v21 = objc_msgSend(v9, sel_heightAnchor);
    objc_msgSend(a1, sel_size);
    v23 = v22;
    objc_msgSend(a1, sel_size);
    v25 = objc_msgSend(v20, sel_constraintEqualToAnchor_multiplier_, v21, v23 / v24);

    objc_msgSend(v25, sel_setActive_, 1);
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = v10;
    v26[3] = v6;
    v26[4] = a2;
    v26[5] = a3;
    v26[6] = a4;
    v26[7] = a5;
    v26[8] = nullsub_1;
    v26[9] = 0;
    v27 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = v6;
    v28 = objc_msgSend(v9, sel_subviews);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF429090);
    v29 = sub_1BC62C878();

    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      v40 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (v40)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      if ((v29 & 0xC000000000000001) != 0)
      {
        v30 = (id)MEMORY[0x1BCCF24CC](0, v29);
        goto LABEL_7;
      }
      if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v30 = *(id *)(v29 + 32);
LABEL_7:
        v31 = v30;
        swift_bridgeObjectRelease();
        v32 = (void *)objc_opt_self();
        v33 = (_QWORD *)swift_allocObject();
        v33[2] = v31;
        v33[3] = sub_1BC567CC4;
        v33[4] = v26;
        v55 = sub_1BC567D18;
        v56 = v33;
        v34 = MEMORY[0x1E0C809B0];
        aBlock = MEMORY[0x1E0C809B0];
        v52 = 1107296256;
        v53 = sub_1BC39BE70;
        v54 = &block_descriptor_93;
        v35 = _Block_copy(&aBlock);
        v36 = v31;
        swift_retain();
        swift_release();
        v37 = swift_allocObject();
        *(_QWORD *)(v37 + 16) = v36;
        v55 = sub_1BC46C040;
        v56 = (_QWORD *)v37;
        aBlock = v34;
        v52 = 1107296256;
        v53 = sub_1BC39BAC4;
        v54 = &block_descriptor_99;
        v38 = _Block_copy(&aBlock);
        v39 = v36;
        swift_release();
        objc_msgSend(v32, sel_animateWithDuration_animations_completion_, v35, v38, 0.3);

        swift_release();
        _Block_release(v38);
        _Block_release(v35);

        return;
      }
      __break(1u);
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_setAlpha_, 1.0);
    v41 = objc_msgSend(v6, sel_headerView);
    v42 = (void *)sub_1BC62C650();
    objc_msgSend(v41, sel_setTitle_, v42);

    v43 = objc_msgSend(v6, (SEL)&selRef_initWithSession_existingAccount_);
    v50 = (id)sub_1BC62C650();
    objc_msgSend(v43, sel_setDetailText_, v50);

    swift_release();
    return;
  }
LABEL_12:
  sub_1BC62D1D8();
  sub_1BC62C764();
  v44 = objc_msgSend(v6, sel_headerView);
  v45 = objc_msgSend(v44, sel_description);
  sub_1BC62C680();

  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC5639A0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  id v9;
  void *v10;
  id v11;
  void *v12;

  objc_msgSend(a1, sel_setAlpha_, 1.0);
  v9 = objc_msgSend(a2, sel_headerView);
  v10 = (void *)sub_1BC62C650();
  objc_msgSend(v9, sel_setTitle_, v10);

  v11 = objc_msgSend(a2, sel_headerView);
  v12 = (void *)sub_1BC62C650();
  objc_msgSend(v11, sel_setDetailText_, v12);

  return a7();
}

uint64_t sub_1BC563A94()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  uint64_t result;
  id v24;
  unsigned __int8 *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  id v64;

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v62 = (char *)&v51 - v4;
  sub_1BC5675C0();
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC567664(0);
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC56769C(0, &qword_1EF436AE8, v11, (void (*)(void))sub_1BC567764);
  v60 = *(_QWORD *)(v12 - 8);
  v61 = v12;
  MEMORY[0x1E0C80A78](v12);
  v59 = (char *)&v51 - v13;
  sub_1BC567780();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v63 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BC62C4D0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (uint64_t *)((char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A58F0);
  *v21 = sub_1BC62CC74();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E0DEF740], v18);
  v22 = sub_1BC62C4F4();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) != 0)
  {
    sub_1BC5620A4();
    v24 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v24, sel_setRightBarButtonItem_, 0);

    v25 = (unsigned __int8 *)&v1[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss];
    v1[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss] = 0;
    v26 = sub_1BC561A5C();
    objc_msgSend(v26, sel_setEnabled_, *v25);

    objc_msgSend(v1, sel_setModalInPresentation_, (*v25 & 1) == 0);
    v27 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account];
    v28 = (void *)sub_1BC564C08(v27);

    v64 = v28;
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v1;
    v30 = swift_allocObject();
    v53 = v16;
    *(_QWORD *)(v30 + 16) = sub_1BC5678B4;
    *(_QWORD *)(v30 + 24) = v29;
    v31 = v1;
    sub_1BC62BE88();
    v32 = MEMORY[0x1E0C95D78];
    sub_1BC56739C(0, &qword_1EF436AC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
    v52 = v15;
    sub_1BC56742C(&qword_1EF436AD0, &qword_1EF436AC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v32, MEMORY[0x1E0C95D90]);
    sub_1BC62C074();
    swift_release();
    swift_release();
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = v31;
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = sub_1BC56790C;
    *(_QWORD *)(v34 + 24) = v33;
    v35 = v31;
    sub_1BC62BE88();
    sub_1BC567680();
    v36 = v55;
    sub_1BC62C074();
    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v7, v36);
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v35;
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = sub_1BC567914;
    *(_QWORD *)(v38 + 24) = v37;
    v39 = v35;
    sub_1BC62BE88();
    sub_1BC567764();
    v40 = v58;
    v41 = v59;
    sub_1BC62C074();
    swift_release();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v40);
    v64 = (id)sub_1BC62CC74();
    v42 = sub_1BC62CC38();
    v43 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v62, 1, 1, v42);
    sub_1BC567830();
    sub_1BC3ABB20();
    v44 = v63;
    v45 = v61;
    sub_1BC62C080();
    sub_1BC3A4334(v43);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v45);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v39;
    *(_QWORD *)(v46 + 24) = ObjectType;
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = v39;
    *(_QWORD *)(v47 + 24) = ObjectType;
    sub_1BC347F0C(&qword_1EF436B08, (uint64_t (*)(uint64_t))sub_1BC567780, MEMORY[0x1E0C95CB8]);
    v48 = v39;
    v49 = v52;
    v50 = sub_1BC62C038();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v49);
    *(_QWORD *)&v48[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_cancellable] = v50;
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC56411C(void *a1, void *a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t (*v11)(void);
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  ObjectType = swift_getObjectType();
  sub_1BC567304();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = ObjectType;
  v11 = MEMORY[0x1E0C960D8];
  sub_1BC56739C(0, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC56742C(&qword_1EF436AA0, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v11, MEMORY[0x1E0C96108]);
  v12 = a1;
  v13 = a2;
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF436AB0, (uint64_t (*)(uint64_t))sub_1BC567304, MEMORY[0x1E0C96148]);
  v14 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_1BC564270(void *a1, void *a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t (*v11)(void);
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  ObjectType = swift_getObjectType();
  sub_1BC567304();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a1;
  v10[4] = ObjectType;
  v11 = MEMORY[0x1E0C960D8];
  sub_1BC56739C(0, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC56742C(&qword_1EF436AA0, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v11, MEMORY[0x1E0C96108]);
  v12 = a2;
  v13 = a1;
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF436AB0, (uint64_t (*)(uint64_t))sub_1BC567304, MEMORY[0x1E0C96148]);
  v14 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_1BC5643C4(void *a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  id v10;
  uint64_t v11;
  uint64_t v13;

  ObjectType = swift_getObjectType();
  sub_1BC567304();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = ObjectType;
  v9 = MEMORY[0x1E0C960D8];
  sub_1BC56739C(0, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC56742C(&qword_1EF436AA0, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v9, MEMORY[0x1E0C96108]);
  v10 = a1;
  sub_1BC62BF78();
  sub_1BC347F0C(&qword_1EF436AB0, (uint64_t (*)(uint64_t))sub_1BC567304, MEMORY[0x1E0C96148]);
  v11 = sub_1BC62BFFC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

void sub_1BC56450C(void **a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  unsigned __int8 *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1BC62BB34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = &a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss];
  a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss] = 1;
  v10 = sub_1BC561A5C();
  objc_msgSend(v10, sel_setEnabled_, *v9);

  objc_msgSend(a2, sel_setModalInPresentation_, (*v9 & 1) == 0);
  if (v8)
  {
    v11 = v8;
    sub_1BC62BAF8();
    v12 = v8;
    v13 = v8;
    v14 = sub_1BC62BB28();
    v15 = sub_1BC62CAC4();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v26 = v24;
      *(_DWORD *)v16 = 136446466;
      v17 = sub_1BC62D718();
      v25 = sub_1BC4991F0(v17, v18, &v26);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2082;
      v25 = (uint64_t)v8;
      v19 = v8;
      sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
      v20 = sub_1BC62C6F8();
      v25 = sub_1BC4991F0(v20, v21, &v26);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v14, v15, "[%{public}s]: Error during sharing initiation: %{public}s", (uint8_t *)v16, 0x16u);
      v22 = v24;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v22, -1, -1);
      MEMORY[0x1BCCF36A8](v16, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1BC562D54((uint64_t)v8);

  }
}

uint64_t sub_1BC5647B0(void **a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  unsigned __int8 *v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v39 = a3;
  v5 = sub_1BC62A7B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62BB34();
  v40 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_1BC62BAE0();
  v13 = v12;
  v14 = sub_1BC62BB28();
  v15 = sub_1BC62CADC();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v41 = v5;
    v17 = v16;
    v38 = swift_slowAlloc();
    v43 = v38;
    *(_DWORD *)v17 = 136315394;
    v18 = sub_1BC62D718();
    v39 = v6;
    v42 = sub_1BC4991F0(v18, v19, &v43);
    v37 = v9;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    v20 = objc_msgSend(v13, sel_identifier, v17 + 14);
    sub_1BC62A79C();

    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v21 = sub_1BC62D52C();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v41);
    v42 = sub_1BC4991F0(v21, v23, &v43);
    sub_1BC62CFF8();

    v6 = v39;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v14, v15, "[%s] Successfully started sharing for account %s)", (uint8_t *)v17, 0x16u);
    v24 = v38;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v24, -1, -1);
    v25 = v17;
    v5 = v41;
    MEMORY[0x1BCCF36A8](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v37);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v9);
  }
  v26 = objc_msgSend(*(id *)(*(_QWORD *)&a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_onboardingSession]+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_ingestionStore);
  v27 = (void *)sub_1BC62C650();
  sub_1BC357158(0, &qword_1EF436B10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v28 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1BC639590;
  v30 = v29 + v28;
  v31 = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account], sel_identifier);
  sub_1BC62A79C();

  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v30, v8, v5);
  v32 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_ingestHealthRecordsWithOptions_reason_accountIdentifiers_completion_, 0, v27, v32, 0);

  v33 = &a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss];
  a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss] = 1;
  v34 = sub_1BC561A5C();
  objc_msgSend(v34, sel_setEnabled_, *v33);

  objc_msgSend(a2, sel_setModalInPresentation_, (*v33 & 1) == 0);
  return sub_1BC562924();
}

uint64_t sub_1BC564C08(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(void);
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  void *v28;

  ObjectType = swift_getObjectType();
  sub_1BC5672A0();
  v4 = v3;
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC56739C(0, &qword_1EF436A88, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v8 = v7;
  v26 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - v9;
  sub_1BC567304();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v16 = swift_dynamicCastObjCClass();
  if (v16)
  {
    v17 = v16;
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v1;
    v18[3] = v17;
    v18[4] = ObjectType;
    v19 = MEMORY[0x1E0C960D8];
    sub_1BC56739C(0, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC56742C(&qword_1EF436AA0, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v19, MEMORY[0x1E0C96108]);
    v20 = a1;
    v21 = v1;
    sub_1BC62BF78();
    sub_1BC347F0C(&qword_1EF436AB0, (uint64_t (*)(uint64_t))sub_1BC567304, MEMORY[0x1E0C96148]);
    v22 = sub_1BC62BFFC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v28 = a1;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF431480);
    v23 = a1;
    sub_1BC62BF48();
    sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
    sub_1BC62BF30();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
    sub_1BC56742C(&qword_1EF436AA8, &qword_1EF436A88, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
    v22 = sub_1BC62BFFC();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  }
  return v22;
}

uint64_t sub_1BC564EC8(uint64_t a1, uint64_t a2, char *a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  id v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a4;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v38 = (char *)&v33 - v10;
  v11 = sub_1BC62BB34();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  swift_retain();
  sub_1BC62BAF8();
  v16 = sub_1BC62BB28();
  v17 = sub_1BC62CADC();
  if (os_log_type_enabled(v16, v17))
  {
    v35 = v12;
    v18 = swift_slowAlloc();
    v34 = v11;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v40 = v20;
    v36 = a3;
    *(_DWORD *)v19 = 136315138;
    v21 = sub_1BC62D718();
    v39 = sub_1BC4991F0(v21, v22, &v40);
    a3 = v36;
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC30A000, v16, v17, "[%s] Persisting newly logged in account...", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v20, -1, -1);
    MEMORY[0x1BCCF36A8](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v23 = *(void **)&a3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_onboardingSession];
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a3;
  v24[3] = sub_1BC5674D0;
  v24[4] = v15;
  v24[5] = a5;
  v25 = sub_1BC62C95C();
  v26 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v38, 1, 1, v25);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = 0;
  *(_QWORD *)(v27 + 24) = 0;
  v28 = v37;
  *(_QWORD *)(v27 + 32) = v23;
  *(_QWORD *)(v27 + 40) = v28;
  *(_BYTE *)(v27 + 48) = 1;
  *(_QWORD *)(v27 + 56) = sub_1BC5674E4;
  *(_QWORD *)(v27 + 64) = v24;
  v29 = a3;
  v30 = v23;
  v31 = v28;
  swift_retain();
  sub_1BC5C2784(v26, (uint64_t)&unk_1EF436AB8, v27);
  swift_release();
  return swift_release();
}

void sub_1BC5651C8(void *a1, void *a2, uint64_t a3, void (*a4)(void *, _QWORD), uint64_t a5, uint64_t *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(void *, _QWORD);
  id v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  void (*v54)(void *, _QWORD);
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v55 = a6;
  v58 = a5;
  v10 = sub_1BC62A7B4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC62BB34();
  v56 = *(_QWORD *)(v14 - 8);
  v57 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v51 - v18;
  if (a1)
  {
    v54 = a4;
    v20 = *(void **)(a3
                   + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account);
    *(_QWORD *)(a3 + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account) = a1;
    v21 = a1;

    sub_1BC62BAF8();
    v22 = v21;
    v23 = sub_1BC62BB28();
    v24 = sub_1BC62CADC();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v53 = swift_slowAlloc();
      v60 = v53;
      *(_DWORD *)v26 = 136315394;
      v52 = v25;
      v27 = sub_1BC62D718();
      v59 = sub_1BC4991F0(v27, v28, &v60);
      v55 = &v60;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      v29 = objc_msgSend(v22, sel_identifier, v26 + 14);
      sub_1BC62A79C();

      sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v30 = sub_1BC62D52C();
      v32 = v31;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      v59 = sub_1BC4991F0(v30, v32, &v60);
      sub_1BC62CFF8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v23, (os_log_type_t)v52, "[%s] Successfully persisted newly logged in account %s", (uint8_t *)v26, 0x16u);
      v33 = v53;
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v33, -1, -1);
      MEMORY[0x1BCCF36A8](v26, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v57);
    v45 = v54;
    v46 = v22;
    v45(a1, 0);

  }
  else
  {
    sub_1BC62BAF8();
    v34 = a2;
    v35 = a2;
    v36 = sub_1BC62BB28();
    v37 = sub_1BC62CAC4();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v60 = v39;
      *(_DWORD *)v38 = 136315394;
      v40 = sub_1BC62D718();
      v59 = sub_1BC4991F0(v40, v41, &v60);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      v59 = (uint64_t)a2;
      v42 = a2;
      sub_1BC41EB3C(0, (unint64_t *)&unk_1ED6A4E80, (unint64_t *)&qword_1ED6A59C0, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v43 = sub_1BC62C6F8();
      v59 = sub_1BC4991F0(v43, v44, &v60);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v36, v37, "[%s] Error persisting newly logged in account: %s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v39, -1, -1);
      MEMORY[0x1BCCF36A8](v38, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v19, v57);
    v47 = a2;
    if (!a2)
    {
      v48 = (void *)objc_opt_self();
      v49 = (void *)sub_1BC62C650();
      v47 = objc_msgSend(v48, sel_hk_error_description_, 11, v49);

    }
    v50 = a2;
    a4(v47, 1);

  }
}

void sub_1BC56571C(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  unint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  _QWORD aBlock[6];
  unint64_t v74;

  v60 = a5;
  v70 = a4;
  v8 = sub_1BC62B8C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v71 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v67 = (char *)&v57 - v12;
  v72 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  v13 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v64 = (char *)&v57 - v17;
  v18 = sub_1BC62A7B4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  v59 = v22;
  swift_retain();
  v61 = a3;
  v23 = objc_msgSend(a3, sel_identifier);
  sub_1BC62A79C();

  sub_1BC62A778();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v24 = objc_allocWithZone(MEMORY[0x1E0CB6BB8]);
  v25 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v24, sel_initForClinicalAccountIdentifier_, v25);

  v27 = v70;
  v28 = objc_msgSend(*(id *)(*(_QWORD *)(v70+ OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_onboardingSession)+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_healthStore);
  v29 = objc_allocWithZone(MEMORY[0x1E0CB6BA8]);
  v58 = v26;
  v30 = objc_msgSend(v29, sel_initWithHealthStore_recipientIdentifier_, v28, v26);

  v74 = MEMORY[0x1E0DEE9D8];
  v31 = *(_QWORD *)(v27
                  + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_selectedItems);
  v69 = *(_QWORD *)(v31 + 16);
  if (v69)
  {
    v57 = v30;
    v62 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v68 = v31 + v62;
    v32 = swift_bridgeObjectRetain();
    v33 = 0;
    v34 = v72;
    v35 = (uint64_t)v64;
    v36 = v32;
    v66 = v32;
    v63 = v13;
    while (v33 < *(_QWORD *)(v36 + 16))
    {
      v37 = *(_QWORD *)(v13 + 72);
      sub_1BC3AFE24(v68 + v37 * v33, v35);
      v38 = *(_QWORD *)(v35 + *(int *)(v34 + 52));
      v70 = v33;
      if (v38)
      {
        v39 = *(_QWORD *)(v38 + 16);
        if (v39)
        {
          aBlock[0] = MEMORY[0x1E0DEE9D8];
          v40 = v38;
          swift_bridgeObjectRetain();
          sub_1BC3BDB00(0, v39, 0);
          v65 = v40;
          v41 = v40 + v62;
          v42 = v71;
          do
          {
            sub_1BC3AFE24(v41, (uint64_t)v15);
            (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v42, &v15[*(int *)(v34 + 48)], v8);
            sub_1BC3AFE68((uint64_t)v15);
            v43 = aBlock[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BC3BDB00(0, *(_QWORD *)(v43 + 16) + 1, 1);
              v42 = v71;
              v43 = aBlock[0];
            }
            v45 = *(_QWORD *)(v43 + 16);
            v44 = *(_QWORD *)(v43 + 24);
            if (v45 >= v44 >> 1)
            {
              sub_1BC3BDB00(v44 > 1, v45 + 1, 1);
              v42 = v71;
              v43 = aBlock[0];
            }
            *(_QWORD *)(v43 + 16) = v45 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v43+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v45, v42, v8);
            aBlock[0] = v43;
            v41 += v37;
            --v39;
            v34 = v72;
          }
          while (v39);
          swift_bridgeObjectRelease();
          v36 = v66;
        }
        else
        {
          v43 = MEMORY[0x1E0DEE9D8];
        }
        sub_1BC3BB58C(v43);
        v13 = v63;
        v35 = (uint64_t)v64;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v67, v35 + *(int *)(v34 + 48), v8);
        v46 = v74;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v46 = sub_1BC3B52BC(0, *(_QWORD *)(v46 + 16) + 1, 1, v46);
        v48 = *(_QWORD *)(v46 + 16);
        v47 = *(_QWORD *)(v46 + 24);
        if (v48 >= v47 >> 1)
          v46 = sub_1BC3B52BC(v47 > 1, v48 + 1, 1, v46);
        *(_QWORD *)(v46 + 16) = v48 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v46+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v48, v67, v8);
        v74 = v46;
        v36 = v66;
      }
      v33 = v70 + 1;
      sub_1BC3AFE68(v35);
      if (v33 == v69)
      {
        swift_bridgeObjectRelease();
        v30 = v57;
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_22:
    v49 = swift_bridgeObjectRetain();
    sub_1BC3F54E8(v49);
    swift_bridgeObjectRelease_n();
    sub_1BC34B6A0(0, &qword_1EF42DB80);
    v50 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    v51 = (_QWORD *)swift_allocObject();
    v52 = v59;
    v51[2] = sub_1BC567DA0;
    v51[3] = v52;
    v53 = v61;
    v54 = v60;
    v51[4] = v61;
    v51[5] = v54;
    aBlock[4] = sub_1BC567C54;
    aBlock[5] = v51;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC3EFECC;
    aBlock[3] = &block_descriptor_84;
    v55 = _Block_copy(aBlock);
    v56 = v53;
    swift_release();
    objc_msgSend(v30, sel_addSharingAuthorizations_completion_, v50, v55);

    _Block_release(v55);
  }
}

uint64_t sub_1BC565D4C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1BC56739C(0, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  v9 = a1;
  v10 = a2;
  result = sub_1BC62BF60();
  *a4 = result;
  return result;
}

void sub_1BC565DE4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  void (*v24)(char *, uint64_t);
  void *v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v32 = a4;
  v33 = a5;
  v8 = sub_1BC62A760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC62A7B4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  v17 = *(_QWORD *)(a3
                  + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_onboardingSession);
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v18 = *(void **)(v17 + OBJC_IVAR___WDClinicalAccountOnboardingSession_profile);
  swift_retain();
  v19 = objc_msgSend(v18, sel_clinicalAccountStore);
  v20 = v32;
  v21 = objc_msgSend(v32, sel_identifier);
  sub_1BC62A79C();

  v22 = (void *)sub_1BC62A784();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1BC62A6A0();
  v23 = (void *)sub_1BC62A700();
  v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v11, v8);
  sub_1BC62A6A0();
  v25 = (void *)sub_1BC62A700();
  v24(v11, v8);
  v26 = (void *)sub_1BC62CA34();
  v27 = (void *)sub_1BC62CA34();
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = sub_1BC567DA0;
  v28[3] = v16;
  v29 = v33;
  v28[4] = v20;
  v28[5] = v29;
  aBlock[4] = sub_1BC567BC0;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC3EFECC;
  aBlock[3] = &block_descriptor_68;
  v30 = _Block_copy(aBlock);
  v31 = v20;
  swift_release();
  objc_msgSend(v19, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v22, v23, v25, v26, v27, 0, v30);
  _Block_release(v30);

}

void sub_1BC566068(uint64_t a1, void *a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5, uint64_t a6, const char *a7, const char *a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  char *v20;
  const char *v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  NSObject *v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  const char *v44;
  void (*v45)(_QWORD, _QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v14 = sub_1BC62BB34();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v43 - v19;
  if (a2)
  {
    v21 = v18;
    v44 = a7;
    v22 = a2;
    sub_1BC62BAF8();
    v23 = a2;
    v24 = a2;
    v25 = sub_1BC62BB28();
    v26 = sub_1BC62CAC4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v46 = v14;
      v29 = v28;
      v48 = v28;
      *(_DWORD *)v27 = 136315394;
      v45 = a3;
      v30 = sub_1BC62D718();
      v47 = sub_1BC4991F0(v30, v31, &v48);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      v47 = (uint64_t)a2;
      v32 = a2;
      sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
      v33 = sub_1BC62C6F8();
      v47 = sub_1BC4991F0(v33, v34, &v48);
      a3 = v45;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC30A000, v25, v26, v44, (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v29, -1, -1);
      MEMORY[0x1BCCF36A8](v27, -1, -1);

      (*((void (**)(char *, uint64_t))v21 + 1))(v16, v46);
    }
    else
    {

      (*((void (**)(char *, uint64_t))v21 + 1))(v16, v14);
    }
    v42 = a2;
    a3(a2, 1);

  }
  else
  {
    v44 = v18;
    v46 = v14;
    sub_1BC62BAF8();
    v35 = sub_1BC62BB28();
    v36 = sub_1BC62CADC();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v43 = a4;
      v39 = v38;
      v48 = v38;
      v45 = a3;
      *(_DWORD *)v37 = 136315138;
      v40 = sub_1BC62D718();
      v47 = sub_1BC4991F0(v40, v41, &v48);
      a3 = v45;
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v35, (os_log_type_t)v36, a8, v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v39, -1, -1);
      MEMORY[0x1BCCF36A8](v37, -1, -1);
    }

    (*((void (**)(char *, uint64_t))v44 + 1))(v20, v46);
    a3(a5, 0);
  }
}

uint64_t sub_1BC566454@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  id v7;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1BC56739C(0, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  v7 = a1;
  result = sub_1BC62BF60();
  *a3 = result;
  return result;
}

void sub_1BC5664E0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  id v9;
  id v10;
  _QWORD *v11;
  void *v12;
  id v13;
  _QWORD v14[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = objc_allocWithZone(MEMORY[0x1E0D2EEF8]);
  swift_retain();
  v10 = objc_msgSend(v9, sel_init);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a3;
  v11[3] = sub_1BC567DA0;
  v11[4] = v8;
  v11[5] = a4;
  v14[4] = sub_1BC567968;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC3F9CC4;
  v14[3] = &block_descriptor_57;
  v12 = _Block_copy(v14);
  v13 = a3;
  swift_release();
  objc_msgSend(v10, sel_shareHealthDataWithOptions_reason_completion_, 0, 1, v12);

  _Block_release(v12);
}

void sub_1BC566608(unint64_t a1, void *a2, void *a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint8_t *v29;
  void (*v30)(char *, uint64_t);
  id v31;
  id v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  char *v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint8_t *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(id, uint64_t);
  id v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;

  v12 = sub_1BC62BB34();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v69 - v15;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v69 - v19;
  if (a1)
  {
    v74 = a3;
    v75 = a5;
    v70 = v18;
    v73 = a4;
    sub_1BC62BAF8();
    v21 = sub_1BC62BB28();
    v22 = sub_1BC62CADC();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v72 = v12;
      v24 = (uint8_t *)v23;
      v25 = (void *)swift_slowAlloc();
      v71 = v13;
      v26 = v25;
      v77 = v25;
      *(_DWORD *)v24 = 136315138;
      v69 = v24 + 4;
      v27 = sub_1BC62D718();
      v76 = sub_1BC4991F0(v27, v28, (uint64_t *)&v77);
      sub_1BC62CFF8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC30A000, v21, v22, "[%s] Successfully completed sync to clinicalSharingClient", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF36A8](v26, -1, -1);
      v29 = v24;
      v12 = v72;
      MEMORY[0x1BCCF36A8](v29, -1, -1);

      v30 = *(void (**)(char *, uint64_t))(v71 + 8);
    }
    else
    {

      v30 = *(void (**)(char *, uint64_t))(v13 + 8);
    }
    v30(v16, v12);
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v44 = sub_1BC62D3B8();
      if (v44)
        goto LABEL_9;
    }
    else
    {
      v44 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v44)
      {
LABEL_9:
        if (v44 < 1)
        {
          __break(1u);
          return;
        }
        v45 = 0;
        do
        {
          if ((a1 & 0xC000000000000001) != 0)
            v46 = (id)MEMORY[0x1BCCF24CC](v45, a1);
          else
            v46 = *(id *)(a1 + 8 * v45 + 32);
          v47 = v46;
          ++v45;
          v77 = v46;
          sub_1BC566D58(&v77, a2, a6);

        }
        while (v44 != v45);
      }
    }
    swift_bridgeObjectRelease();
    v52 = v74;
    v53 = sub_1BC56798C(a1, v52);

    if (v53 && (v54 = objc_msgSend(v53, sel_error), v53, v54))
    {
      v55 = v54;
      v73(v54, 1);

      v56 = v70;
      sub_1BC62BAF8();
      v57 = v55;
      v58 = sub_1BC62BB28();
      v59 = sub_1BC62CADC();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc();
        v61 = (void *)swift_slowAlloc();
        v77 = v61;
        *(_DWORD *)v60 = 136315394;
        v62 = sub_1BC62D718();
        v72 = v12;
        v76 = sub_1BC4991F0(v62, v63, (uint64_t *)&v77);
        sub_1BC62CFF8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 12) = 2080;
        v76 = (uint64_t)v57;
        sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
        v64 = v57;
        v65 = sub_1BC62C6F8();
        v76 = sub_1BC4991F0(v65, v66, (uint64_t *)&v77);
        sub_1BC62CFF8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC30A000, v58, v59, "[%s] Error sharing to clinicalSharingClient: %s", (uint8_t *)v60, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF36A8](v61, -1, -1);
        MEMORY[0x1BCCF36A8](v60, -1, -1);

        v67 = v56;
        v68 = v72;
      }
      else
      {

        v67 = v56;
        v68 = v12;
      }
      v30(v67, v68);
    }
    else
    {
      v73(v52, 0);
    }
    return;
  }
  sub_1BC62BAF8();
  v31 = a2;
  v32 = a2;
  v33 = sub_1BC62BB28();
  v34 = sub_1BC62CAC4();
  if (os_log_type_enabled(v33, (os_log_type_t)v34))
  {
    v35 = swift_slowAlloc();
    v72 = v12;
    v36 = v35;
    v37 = (void *)swift_slowAlloc();
    v75 = a5;
    v38 = v37;
    v77 = v37;
    *(_DWORD *)v36 = 136315394;
    v71 = v13;
    v39 = sub_1BC62D718();
    v76 = sub_1BC4991F0(v39, v40, (uint64_t *)&v77);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    v76 = (uint64_t)a2;
    v41 = a2;
    sub_1BC41EB3C(0, (unint64_t *)&unk_1ED6A4E80, (unint64_t *)&qword_1ED6A59C0, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v42 = sub_1BC62C6F8();
    v76 = sub_1BC4991F0(v42, v43, (uint64_t *)&v77);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC30A000, v33, (os_log_type_t)v34, "[%s] Error sharing to clinicalSharingClient: %s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v38, -1, -1);
    MEMORY[0x1BCCF36A8](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v71 + 8))(v20, v72);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
  }
  v48 = a2;
  if (!a2)
  {
    v49 = (void *)objc_opt_self();
    v50 = (void *)sub_1BC62C650();
    v48 = objc_msgSend(v49, sel_hk_error_description_, 11, v50);

  }
  v51 = a2;
  a4(v48, 1);

}

uint64_t sub_1BC566D58(void **a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  os_log_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;

  v40 = a3;
  v6 = sub_1BC62A7B4();
  v41 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC62BB34();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  sub_1BC62BAF8();
  v14 = v13;
  v15 = a2;
  v16 = v14;
  v17 = a2;
  v18 = sub_1BC62BB28();
  v42 = sub_1BC62CADC();
  if (os_log_type_enabled(v18, (os_log_type_t)v42))
  {
    v34 = v12;
    v36 = v18;
    v37 = v10;
    v38 = v9;
    v39 = v3;
    v19 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v44 = v35;
    *(_DWORD *)v19 = 136315650;
    v20 = sub_1BC62D718();
    v43 = sub_1BC4991F0(v20, v21, &v44);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    v22 = objc_msgSend(v16, sel_accountID);
    sub_1BC62A79C();

    sub_1BC347F0C((unint64_t *)&qword_1EF429280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v23 = sub_1BC62D52C();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v6);
    v43 = sub_1BC4991F0(v23, v25, &v44);
    sub_1BC62CFF8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2080;
    if (a2)
    {
      v43 = (uint64_t)a2;
      v26 = a2;
      sub_1BC41EB3C(0, (unint64_t *)&unk_1ED6A4E80, (unint64_t *)&qword_1ED6A59C0, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v27 = sub_1BC62C6E0();
      v29 = v28;
    }
    else
    {
      v29 = 0xEA00000000006C75;
      v27 = 0x6673736563637553;
    }
    v31 = v37;
    v43 = sub_1BC4991F0(v27, v29, &v44);
    sub_1BC62CFF8();
    swift_bridgeObjectRelease();

    v32 = v36;
    _os_log_impl(&dword_1BC30A000, v36, (os_log_type_t)v42, "[%s] Sync Result. Account: %s %s", (uint8_t *)v19, 0x20u);
    v33 = v35;
    swift_arrayDestroy();
    MEMORY[0x1BCCF36A8](v33, -1, -1);
    MEMORY[0x1BCCF36A8](v19, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v34, v38);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

id sub_1BC5671D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingSharingHealthDataViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalSharingOnboardingSharingHealthDataViewController()
{
  return objc_opt_self();
}

void sub_1BC5672A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF436A80)
  {
    sub_1BC34B6A0(255, (unint64_t *)&qword_1EF431480);
    v0 = sub_1BC62BF3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF436A80);
  }
}

void sub_1BC567304()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF436A90)
  {
    v0 = MEMORY[0x1E0C960D8];
    sub_1BC56739C(255, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC56742C(&qword_1EF436AA0, &qword_1EF436A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0C96108]);
    v1 = sub_1BC62BF84();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF436A90);
  }
}

void sub_1BC56739C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_1BC34B6A0(255, (unint64_t *)&qword_1EF431480);
    v7 = sub_1BC35817C(255, (unint64_t *)&qword_1ED6A59C0);
    v8 = a3(a1, v6, v7, MEMORY[0x1E0DEDB38]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC56742C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC56739C(255, a2, a3);
    result = MEMORY[0x1BCCF35C4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC56746C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC567498@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC565D4C(*(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1BC5674C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC564EC8(a1, a2, *(char **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1BC5674D0(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1BC606BF4(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1BC5674DC()
{
  return objectdestroy_8Tm_1();
}

void sub_1BC5674E4(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC5651C8(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void *, _QWORD))(v2 + 24), *(_QWORD *)(v2 + 32), *(uint64_t **)(v2 + 40));
}

uint64_t sub_1BC5674F0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC56752C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v10 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1BC377F18;
  return sub_1BC60C83C(a1, v4, v5, v6, v7, v8, v10, v9);
}

void sub_1BC5675C0()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF436AC0)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC56739C(255, &qword_1EF436AC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC56742C(&qword_1EF436AD0, &qword_1EF436AC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC62BE28();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF436AC0);
  }
}

void sub_1BC567664(uint64_t a1)
{
  sub_1BC56769C(a1, &qword_1EF436AD8, (void (*)(uint64_t))sub_1BC5675C0, (void (*)(void))sub_1BC567680);
}

uint64_t sub_1BC567680()
{
  return sub_1BC347F0C(&qword_1EF436AE0, (uint64_t (*)(uint64_t))sub_1BC5675C0, MEMORY[0x1E0C95B78]);
}

void sub_1BC56769C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t (*v7)(void);
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = MEMORY[0x1E0C95D78];
    sub_1BC56739C(255, &qword_1EF436AC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    a3(255);
    sub_1BC56742C(&qword_1EF436AD0, &qword_1EF436AC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v7, MEMORY[0x1E0C95D90]);
    a4();
    v8 = sub_1BC62BE28();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC567764()
{
  return sub_1BC347F0C(&qword_1EF436AF0, (uint64_t (*)(uint64_t))sub_1BC567664, MEMORY[0x1E0C95B78]);
}

void sub_1BC567780()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF436AF8)
  {
    sub_1BC56769C(255, &qword_1EF436AE8, sub_1BC567664, (void (*)(void))sub_1BC567764);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A58F0);
    sub_1BC567830();
    sub_1BC3ABB20();
    v0 = sub_1BC62BE70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF436AF8);
  }
}

unint64_t sub_1BC567830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF436B00;
  if (!qword_1EF436B00)
  {
    sub_1BC56769C(255, &qword_1EF436AE8, sub_1BC567664, (void (*)(void))sub_1BC567764);
    result = MEMORY[0x1BCCF35C4](MEMORY[0x1E0C95B78], v1);
    atomic_store(result, (unint64_t *)&qword_1EF436B00);
  }
  return result;
}

uint64_t sub_1BC567890()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC5678B4(void *a1)
{
  uint64_t v1;

  return sub_1BC56411C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1BC5678BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC5678E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC56790C(void *a1)
{
  uint64_t v1;

  return sub_1BC564270(a1, *(void **)(v1 + 16));
}

uint64_t sub_1BC567914(void *a1)
{
  return sub_1BC5643C4(a1);
}

uint64_t sub_1BC56791C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC567940(void **a1)
{
  uint64_t v1;

  sub_1BC56450C(a1, *(_BYTE **)(v1 + 16));
}

uint64_t sub_1BC567948(void **a1)
{
  uint64_t v1;

  return sub_1BC5647B0(a1, *(_BYTE **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC567950@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC566454(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1BC567958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC5664E0(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC567960()
{
  return objectdestroy_8Tm_1();
}

void sub_1BC567968(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BC566608(a1, a2, *(void **)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t block_copy_helper_56(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_56()
{
  return swift_release();
}

void *sub_1BC56798C(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void (*v19)(char *, uint64_t);
  _QWORD v21[2];
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  v3 = v2;
  v26 = a2;
  v5 = sub_1BC62A7B4();
  v6 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  v25 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v21 - v10;
  if (a1 >> 62)
    goto LABEL_13;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; v12 = sub_1BC62D3B8())
  {
    v21[1] = v3;
    v22 = v12;
    v23 = a1 & 0xC000000000000001;
    v3 = 4;
    v13 = v24;
    while (1)
    {
      v14 = v23 ? (id)MEMORY[0x1BCCF24CC](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      v15 = v14;
      v16 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v17 = objc_msgSend(v14, sel_accountID);
      sub_1BC62A79C();

      v18 = objc_msgSend(v26, sel_identifier);
      sub_1BC62A79C();

      LOBYTE(v18) = sub_1BC62A790();
      v19 = *(void (**)(char *, uint64_t))(v25 + 8);
      v19(v8, v13);
      v19(v11, v13);
      if ((v18 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v15;
      }

      ++v3;
      if (v16 == v22)
        goto LABEL_14;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BC567B84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC565D4C(*(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

void sub_1BC567BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC565DE4(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_1BC567BC0(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BC566068(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), "[%s] Error updating user status: %s", "[%s] Successfully updated user status");
}

uint64_t sub_1BC567BEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC565D4C(*(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

void sub_1BC567C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC56571C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t objectdestroy_64Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BC567C54(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BC566068(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), "[%s] Error adding Authorization Identifiers: %s", "[%s] Successfully added Authorization Identifiers");
}

uint64_t sub_1BC567C80()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC567CC4()
{
  uint64_t v0;

  return sub_1BC5639A0(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(uint64_t (**)(void))(v0 + 64));
}

uint64_t sub_1BC567CD8()
{
  return objectdestroy_8Tm_1();
}

uint64_t objectdestroy_8Tm_1()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC567D18()
{
  uint64_t v0;

  return (*(uint64_t (**)(id))(v0 + 24))(objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 0.0));
}

id sub_1BC567DB8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15HealthRecordsUI18TextViewController____lazy_storage___textView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18TextViewController____lazy_storage___textView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18TextViewController____lazy_storage___textView);
  }
  else
  {
    v4 = sub_1BC567E14();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC567E14()
{
  id v0;
  id v1;
  double v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3E50]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setEditable_, 0);
  objc_msgSend(v0, sel_setAlwaysBounceVertical_, 1);
  objc_msgSend(v0, sel_setDataDetectorTypes_, 2);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v0, sel_setFont_, v1);
  objc_msgSend(v1, sel_lineHeight);
  objc_msgSend(v0, sel_setTextContainerInset_, v2, 10.0, v2, 10.0);

  return v0;
}

void sub_1BC567F0C(uint64_t *a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1BC567DB8();
  v3 = objc_msgSend(v2, sel_text);

  if (v3)
  {
    v4 = sub_1BC62C680();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  *a1 = v4;
  a1[1] = v6;
}

void sub_1BC567F80(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v1 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  v2 = sub_1BC567DB8();
  if (v1)
  {
    v3 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(v2, sel_setText_, v3);

}

uint64_t sub_1BC568000()
{
  id v0;
  id v1;
  uint64_t v2;

  v0 = sub_1BC567DB8();
  v1 = objc_msgSend(v0, sel_text);

  if (!v1)
    return 0;
  v2 = sub_1BC62C680();

  return v2;
}

void sub_1BC568070(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;

  v3 = sub_1BC567DB8();
  if (a2)
  {
    v4 = (id)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, sel_setText_, v4);

}

void (*sub_1BC5680E8(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  v3 = sub_1BC567DB8();
  v4 = objc_msgSend(v3, sel_text);

  if (v4)
  {
    v5 = sub_1BC62C680();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1BC568168;
}

void sub_1BC568168(uint64_t a1, char a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC567DB8();
    v6 = v3;
    if (v2)
    {
      v4 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v3 = v6;
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(v3, sel_setText_, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = sub_1BC567DB8();
    v6 = v5;
    if (v2)
    {
      v4 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v5 = v6;
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(v5, sel_setText_, v4);
  }

}

void sub_1BC568238()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  objc_super v32;

  v32.receiver = v0;
  v32.super_class = (Class)type metadata accessor for TextViewController();
  objc_msgSendSuper2(&v32, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 2);

  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v6 = v5;
  v7 = sub_1BC567DB8();
  objc_msgSend(v6, sel_addSubview_, v7);

  v8 = sub_1BC567DB8();
  v9 = objc_msgSend(v8, sel_leadingAnchor);

  v10 = objc_msgSend(v0, sel_view);
  if (!v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, sel_leadingAnchor);

  v13 = objc_msgSend(v9, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v12, 1.0);
  objc_msgSend(v13, sel_setActive_, 1);

  v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, sel_trailingAnchor);

  v17 = sub_1BC567DB8();
  v18 = objc_msgSend(v17, sel_trailingAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v18, 1.0);
  objc_msgSend(v19, sel_setActive_, 1);

  v20 = sub_1BC567DB8();
  v21 = objc_msgSend(v20, sel_topAnchor);

  v22 = objc_msgSend(v0, sel_view);
  if (!v22)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, sel_topAnchor);

  v25 = objc_msgSend(v21, sel_constraintEqualToSystemSpacingBelowAnchor_multiplier_, v24, 1.0);
  objc_msgSend(v25, sel_setActive_, 1);

  v26 = objc_msgSend(v0, sel_view);
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v26, sel_bottomAnchor);

    v29 = sub_1BC567DB8();
    v30 = objc_msgSend(v29, sel_bottomAnchor);

    v31 = objc_msgSend(v28, sel_constraintEqualToSystemSpacingBelowAnchor_multiplier_, v30, 1.0);
    objc_msgSend(v31, sel_setActive_, 1);

    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t type metadata accessor for TextViewController()
{
  return objc_opt_self();
}

id TextViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id TextViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  void *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v3[OBJC_IVAR____TtC15HealthRecordsUI18TextViewController____lazy_storage___textView] = 0;
  if (a2)
  {
    v5 = (void *)sub_1BC62C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for TextViewController();
  v6 = objc_msgSendSuper2(&v8, sel_initWithNibName_bundle_, v5, a3);

  return v6;
}

id TextViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TextViewController.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI18TextViewController____lazy_storage___textView] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for TextViewController();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id TextViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for TextViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TextViewController.text.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TextViewController.text.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TextViewController.text.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t sub_1BC568960(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  double v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v9 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC3BDA2C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v9;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCF24CC](v5, a1);
      else
        swift_retain();
      v6 = sub_1BC4DD66C();
      swift_release();
      v8 = *(_QWORD *)(v9 + 16);
      v7 = *(_QWORD *)(v9 + 24);
      if (v8 >= v7 >> 1)
        sub_1BC3BDA2C(v7 > 1, v8 + 1, 1);
      ++v5;
      *(_QWORD *)(v9 + 16) = v8 + 1;
      *(double *)(v9 + 8 * v8 + 32) = v6;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC568AC0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v9 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC3BDA10(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v9;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCF24CC](v5, a1);
      else
        swift_retain();
      swift_getKeyPath();
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      swift_release_n();
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      if (v7 >= v6 >> 1)
        sub_1BC3BDA10(v6 > 1, v7 + 1, 1);
      ++v5;
      *(_QWORD *)(v9 + 16) = v7 + 1;
      *(_QWORD *)(v9 + 8 * v7 + 32) = v8;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC568C58(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v10 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC3BDE90(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v10;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1BCCF24CC](v5, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
        swift_retain();
      }
      v7 = *(_QWORD *)(v6 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      v9 = *(_QWORD *)(v10 + 16);
      v8 = *(_QWORD *)(v10 + 24);
      if (v9 >= v8 >> 1)
        sub_1BC3BDE90(v8 > 1, v9 + 1, 1);
      ++v5;
      *(_QWORD *)(v10 + 16) = v9 + 1;
      *(_QWORD *)(v10 + 8 * v9 + 32) = v7;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC568DAC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  double *v7;
  double *v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1BC3BDA2C(0, v6, 0);
  v31 = v5;
  v32 = v4;
  v33 = a1;
  if (v6)
  {
    v7 = (double *)(a1 + 32);
    v8 = (double *)(a2 + 32);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v10 = v6;
    v11 = a2;
    while (v4)
    {
      if (!v5)
        goto LABEL_36;
      v12 = *v8;
      if (*v7 > *v8)
        v12 = *v7;
      if (*v7 <= 0.0)
        v13 = 0.0;
      else
        v13 = v12;
      v15 = *(_QWORD *)(v34 + 16);
      v14 = *(_QWORD *)(v34 + 24);
      if (v15 >= v14 >> 1)
      {
        v29 = v11;
        result = sub_1BC3BDA2C(v14 > 1, v15 + 1, 1);
        v11 = v29;
      }
      --v5;
      *(_QWORD *)(v34 + 16) = v15 + 1;
      *(double *)(v34 + 8 * v15 + 32) = v13;
      --v4;
      ++v8;
      ++v7;
      if (!--v10)
        goto LABEL_18;
    }
    __break(1u);
LABEL_36:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v11 = a2;
LABEL_18:
    if (v32 <= v31)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v34;
    }
    v16 = 0;
    if (v6 <= v31)
      v17 = v31;
    else
      v17 = v6;
    v18 = v17 - v6;
    v19 = v32 - v6;
    v20 = v31 - v6;
    v21 = 8 * v6 + 32;
    v22 = v33 + v21;
    v23 = v11 + v21;
    while (v19 != v16)
    {
      if (v20 == v16)
        goto LABEL_34;
      if (v18 == v16)
        goto LABEL_38;
      v24 = *(double *)(v22 + 8 * v16);
      v25 = *(double *)(v23 + 8 * v16);
      if (v24 > v25)
        v25 = *(double *)(v22 + 8 * v16);
      if (v24 <= 0.0)
        v26 = 0.0;
      else
        v26 = v25;
      v28 = *(_QWORD *)(v34 + 16);
      v27 = *(_QWORD *)(v34 + 24);
      if (v28 >= v27 >> 1)
      {
        v30 = v11;
        result = sub_1BC3BDA2C(v27 > 1, v28 + 1, 1);
        v11 = v30;
      }
      *(_QWORD *)(v34 + 16) = v28 + 1;
      *(double *)(v34 + 8 * v28 + 32) = v26;
      if (v19 == ++v16)
        goto LABEL_34;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_1BC568FE8(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;

  v5 = v4;
  v6 = a4;
  v7 = a3;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a4 + 16);
  if (v9 >= v8)
    v10 = *(_QWORD *)(a3 + 16);
  else
    v10 = *(_QWORD *)(a4 + 16);
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1BC3BDA2C(0, v10, 0);
  v11 = v40;
  v32 = v10;
  v34 = v6;
  if (v10)
  {
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_bridgeObjectRetain();
    v13 = 0;
    while (v8 != v13)
    {
      if (v9 == v13)
        goto LABEL_30;
      v14 = *(_QWORD *)(v6 + 8 * v13 + 32);
      v36 = *(_QWORD *)(v7 + 8 * v13 + 32);
      v37 = v14;
      v38 = 0;
      result = a1(&v39, &v36);
      if (v5)
      {
LABEL_27:
        swift_release();
        goto LABEL_28;
      }
      v5 = 0;
      v15 = v7;
      v16 = v39;
      v40 = v11;
      v18 = *(_QWORD *)(v11 + 16);
      v17 = *(_QWORD *)(v11 + 24);
      if (v18 >= v17 >> 1)
      {
        result = (_QWORD *)sub_1BC3BDA2C(v17 > 1, v18 + 1, 1);
        v11 = v40;
      }
      ++v13;
      *(_QWORD *)(v11 + 16) = v18 + 1;
      *(_QWORD *)(v11 + 8 * v18 + 32) = v16;
      v7 = v15;
      v6 = v34;
      if (v32 == v13)
        goto LABEL_14;
    }
    __break(1u);
LABEL_30:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_bridgeObjectRetain();
LABEL_14:
    if (v8 <= v9)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (_QWORD *)v11;
    }
    v19 = v8;
    v20 = 0;
    if (v32 <= (uint64_t)v9)
      v21 = v9;
    else
      v21 = v32;
    v30 = v21 - v32;
    v22 = v6;
    v23 = v19 - v32;
    v31 = v9 - v32;
    v24 = 8 * v32 + 32;
    v33 = v7 + v24;
    v25 = v22 + v24;
    while (v23 != v20)
    {
      if (v31 == v20)
        goto LABEL_28;
      if (v30 == v20)
        goto LABEL_32;
      v26 = *(_QWORD *)(v25 + 8 * v20);
      v36 = *(_QWORD *)(v33 + 8 * v20);
      v37 = v26;
      result = a1(&v39, &v36);
      if (v5)
        goto LABEL_27;
      v5 = 0;
      v27 = v39;
      v40 = v11;
      v29 = *(_QWORD *)(v11 + 16);
      v28 = *(_QWORD *)(v11 + 24);
      if (v29 >= v28 >> 1)
      {
        result = (_QWORD *)sub_1BC3BDA2C(v28 > 1, v29 + 1, 1);
        v11 = v40;
      }
      *(_QWORD *)(v11 + 16) = v29 + 1;
      *(_QWORD *)(v11 + 8 * v29 + 32) = v27;
      if (v23 == ++v20)
        goto LABEL_28;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

double sub_1BC569290()
{
  uint64_t v0;
  double result;

  if ((*(_BYTE *)(v0 + 120) & 1) == 0)
    return *(double *)(v0 + 112);
  result = sub_1BC569394(v0);
  *(double *)(v0 + 112) = result;
  *(_BYTE *)(v0 + 120) = 0;
  return result;
}

uint64_t sub_1BC5692C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  __int128 v20;

  v9 = *(void **)(v4 + 24);
  v10 = *(_QWORD *)(v4 + 32);
  v11 = *(_QWORD *)(v4 + 40);
  v12 = *(void **)(v4 + 72);
  v20 = *(_OWORD *)(v4 + 80);
  v13 = *(_QWORD *)(v4 + 96);
  v14 = *(_QWORD *)(v4 + 104);
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 120) = 1;
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v9;
  *(_QWORD *)(v15 + 32) = v10;
  *(_QWORD *)(v15 + 40) = v11;
  *(_QWORD *)(v15 + 48) = a2;
  *(_QWORD *)(v15 + 56) = a3;
  *(_QWORD *)(v15 + 64) = a4;
  *(_QWORD *)(v15 + 72) = v12;
  *(_OWORD *)(v15 + 80) = v20;
  *(_QWORD *)(v15 + 96) = v13;
  *(_QWORD *)(v15 + 104) = v14;
  *(_QWORD *)(v15 + 112) = 0;
  v16 = a2;
  v17 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v9;
  return v15;
}

double sub_1BC569394(uint64_t a1)
{
  double v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  if (!*(_QWORD *)(a1 + 24))
  {
    v2 = 0.0;
    goto LABEL_5;
  }
  if (qword_1EF428470 != -1)
    goto LABEL_38;
  while (1)
  {
    v2 = *(double *)&qword_1EF459C30;
LABEL_5:
    v3 = *(_QWORD *)(a1 + 16);
    v4 = v3 >> 62;
    if (v3 >> 62)
      break;
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
    {
      v8 = 0.0;
      goto LABEL_13;
    }
    v6 = v5 - 1;
    if (!__OFSUB__(v5, 1))
      goto LABEL_8;
LABEL_37:
    __break(1u);
LABEL_38:
    swift_once();
  }
  swift_bridgeObjectRetain();
  v21 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_44;
  swift_bridgeObjectRetain();
  v22 = sub_1BC62D3B8();
  swift_bridgeObjectRelease();
  v6 = v22 - 1;
  if (__OFSUB__(v22, 1))
    goto LABEL_37;
LABEL_8:
  v7 = (double)v6;
  if (qword_1EF428430 != -1)
    swift_once();
  v8 = *(double *)&qword_1EF459BF0 * v7;
  if (!v4)
  {
LABEL_13:
    v10 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = swift_bridgeObjectRetain_n();
    goto LABEL_14;
  }
  while (2)
  {
    swift_bridgeObjectRetain_n();
    v9 = sub_1BC62D3B8();
    v10 = v9;
LABEL_14:
    v11 = 0.0;
    v12 = 0.0;
    if (v10)
    {
      if (v10 >= 1)
      {
        v13 = 0;
        do
        {
          if ((v3 & 0xC000000000000001) != 0)
            MEMORY[0x1BCCF24CC](v13, v3);
          else
            swift_retain();
          ++v13;
          v14 = sub_1BC4DD144();
          swift_release();
          v12 = v12 + v14;
        }
        while (v10 != v13);
        goto LABEL_21;
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      v16 = MEMORY[0x1BCCF24CC](v9, v3);
LABEL_29:
      swift_bridgeObjectRelease();
      sub_1BC34E674(v16 + 72, (uint64_t)v23);
      swift_release();
      v17 = v24;
      v18 = v25;
      __swift_project_boxed_opaque_existential_1Tm(v23, v24);
      v19 = (*(double (**)(uint64_t, uint64_t))(v18 + 48))(v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
      goto LABEL_32;
    }
LABEL_21:
    swift_bridgeObjectRelease_n();
    if (!*(_QWORD *)(a1 + 48))
      return v8 + v2 + v12 + v11;
    v11 = *(double *)(a1 + 64);
    if (!v4)
    {
      v15 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v15)
        goto LABEL_31;
LABEL_24:
      v9 = v15 - 1;
      if (__OFSUB__(v15, 1))
        goto LABEL_40;
      if ((v3 & 0xC000000000000001) != 0)
        goto LABEL_41;
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v9 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v16 = *(_QWORD *)(v3 + 8 * v9 + 32);
        swift_retain();
        goto LABEL_29;
      }
      __break(1u);
LABEL_44:
      v8 = 0.0;
      continue;
    }
    break;
  }
  swift_bridgeObjectRetain();
  v15 = sub_1BC62D3B8();
  if (v15)
    goto LABEL_24;
LABEL_31:
  swift_bridgeObjectRelease();
  v19 = 0.0;
LABEL_32:
  v11 = v11 + v19;
  return v8 + v2 + v12 + v11;
}

uint64_t sub_1BC56969C()
{
  id *v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s4PageCMa()
{
  return objc_opt_self();
}

uint64_t _s10ColumnInfoVwCP(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s10ColumnInfoVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t _s10ColumnInfoVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *_s10ColumnInfoVMa()
{
  return &_s10ColumnInfoVN;
}

uint64_t sub_1BC5697D4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(v0 + 64);
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC62D3B8();
  v3 = result;
  if (!result)
    goto LABEL_14;
LABEL_3:
  v1 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_15:
    MEMORY[0x1BCCF24CC](0, v2);
    goto LABEL_6;
  }
  if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_17;
  }
  swift_retain();
LABEL_6:
  v5 = sub_1BC56AEB4();
  swift_release();
  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease();
  result = sub_1BC4DDE20(v6, -INFINITY);
  if (v3 < 1)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  v7 = result;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = v7;
  do
  {
    if (v1)
      MEMORY[0x1BCCF24CC](v8, v2);
    else
      swift_retain();
    ++v8;
    v10 = sub_1BC56AEB4();
    swift_release();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BC568FE8((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_1BC56C6D8, 0, v9, v10);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v9 = (uint64_t)v11;
  }
  while (v3 != v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return (uint64_t)v11;
}

uint64_t sub_1BC56999C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC5697D4();
  *a1 = result;
  return result;
}

uint64_t sub_1BC5699C4@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  double *v17;
  double *v18;
  int64_t v19;
  double v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int64_t v51;
  double *v52;
  double *v53;
  int64_t v54;
  double v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int64_t v59;
  int64_t v60;
  unint64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  int64_t v80;
  double *v81;
  double *v82;
  int64_t v83;
  unint64_t v84;
  double v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  int64_t v89;
  int64_t v90;
  unint64_t v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t result;
  uint64_t v99;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int64_t v120;
  int64_t v121;
  int64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v3 = a2;
  v108 = *a1;
  *a3 = *a1;
  if (a2 >> 62)
    goto LABEL_69;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v109 = v4;
  v110 = v3;
  if (!v4)
  {
LABEL_70:
    v35 = 0;
    goto LABEL_71;
  }
LABEL_3:
  v5 = 0;
  v6 = v3 & 0xC000000000000001;
  v101 = v3 + 32;
  v103 = v3 & 0xC000000000000001;
  do
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v7 = MEMORY[0x1BCCF24CC](v5, v3);
    }
    else
    {
      v7 = *(_QWORD *)(v101 + 8 * v5);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    v8 = *(_QWORD *)(v7 + 64);
    v111 = v8;
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v3 = *(_QWORD *)(v7 + 64);
      else
        v3 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
      v9 = sub_1BC62D3B8();
      swift_bridgeObjectRelease();
      if (!v9)
      {
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        swift_bridgeObjectRetain();
        v4 = sub_1BC62D3B8();
        v109 = v4;
        v110 = v3;
        if (!v4)
          goto LABEL_70;
        goto LABEL_3;
      }
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9)
        goto LABEL_66;
    }
    v105 = v5;
    if ((v111 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1BCCF24CC](0);
    }
    else
    {
      if (!*(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_67;
      swift_retain();
    }
    v10 = sub_1BC56AEB4();
    swift_release();
    v3 = *(_QWORD *)(v10 + 16);
    swift_bridgeObjectRelease();
    if (v3)
    {
      v11 = sub_1BC62C8CC();
      *(_QWORD *)(v11 + 16) = v3;
      memset_pattern16((void *)(v11 + 32), &unk_1BC648220, 8 * v3);
    }
    else
    {
      v11 = MEMORY[0x1E0DEE9D8];
    }
    if (v9 < 1)
      goto LABEL_68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = 0;
    v114 = v9;
    do
    {
      if ((v111 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCF24CC](v12, v111);
      else
        swift_retain();
      v117 = v12;
      v13 = sub_1BC56AEB4();
      swift_release();
      v14 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v13 + 16);
      if (v15 >= v14)
        v16 = *(_QWORD *)(v11 + 16);
      else
        v16 = *(_QWORD *)(v13 + 16);
      v130 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC3BDA2C(0, v16, 0);
      v128 = v11;
      v120 = v15;
      v123 = v14;
      if (v16)
      {
        v17 = (double *)(v11 + 32);
        v18 = (double *)(v13 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = v16;
        while (v14)
        {
          if (!v15)
            goto LABEL_62;
          if (*v17 > *v18)
            v20 = *v17;
          else
            v20 = *v18;
          v22 = *(_QWORD *)(v130 + 16);
          v21 = *(_QWORD *)(v130 + 24);
          if (v22 >= v21 >> 1)
            sub_1BC3BDA2C(v21 > 1, v22 + 1, 1);
          --v15;
          *(_QWORD *)(v130 + 16) = v22 + 1;
          *(double *)(v130 + 8 * v22 + 32) = v20;
          --v14;
          ++v18;
          ++v17;
          if (!--v19)
            goto LABEL_36;
        }
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        v4 = v109;
        v3 = v110;
        v35 = v5;
LABEL_71:
        if (v35 != v4)
        {
          v103 = v3 & 0xC000000000000001;
          if ((v3 & 0xC000000000000001) != 0)
            goto LABEL_207;
          if ((v35 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v35 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            goto LABEL_76;
          }
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          __break(1u);
LABEL_215:
          __break(1u);
        }
        goto LABEL_216;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_36:
      if (v123 > v120)
      {
        v23 = 0;
        v24 = 8 * v16;
        v25 = v128 + 8 * v16;
        if (v16 <= v120)
          v26 = v120;
        else
          v26 = v16;
        v27 = v26 - v16;
        v28 = v123 - v16;
        v29 = v120 - v16;
        v30 = v25 + 32;
        v31 = v13 + v24 + 32;
        while (v28 != v23)
        {
          if (v29 == v23)
            goto LABEL_17;
          if (v27 == v23)
            goto LABEL_64;
          if (*(double *)(v30 + 8 * v23) > *(double *)(v31 + 8 * v23))
            v32 = *(_QWORD *)(v30 + 8 * v23);
          else
            v32 = *(_QWORD *)(v31 + 8 * v23);
          v34 = *(_QWORD *)(v130 + 16);
          v33 = *(_QWORD *)(v130 + 24);
          if (v34 >= v33 >> 1)
            sub_1BC3BDA2C(v33 > 1, v34 + 1, 1);
          *(_QWORD *)(v130 + 16) = v34 + 1;
          *(_QWORD *)(v130 + 8 * v34 + 32) = v32;
          if (v28 == ++v23)
            goto LABEL_17;
        }
        goto LABEL_63;
      }
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v12 = v117 + 1;
      swift_bridgeObjectRelease();
      v11 = v130;
    }
    while (v117 + 1 != v114);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v3 = *(_QWORD *)(v130 + 16);
    v35 = swift_bridgeObjectRelease();
    if (v3 == v108)
      goto LABEL_65;
    ++v5;
    if (__OFADD__(v105, 1))
    {
      while (1)
      {
        __break(1u);
LABEL_207:
        MEMORY[0x1BCCF24CC](v35, v3);
LABEL_76:
        v36 = sub_1BC5697D4();
        swift_release();
        v37 = *(_QWORD *)(v36 + 16);
        swift_bridgeObjectRelease();
        v3 = sub_1BC4DDE20(v37, -INFINITY);
        if (!v109)
          goto LABEL_217;
        v38 = v110;
        v102 = v110 + 32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v39 = 0;
        v99 = v3;
        while (2)
        {
          if (v103)
          {
            v3 = v39;
            v35 = MEMORY[0x1BCCF24CC](v39, v38);
            v40 = v35;
            ++v39;
            if (__OFADD__(v3, 1))
              goto LABEL_202;
          }
          else
          {
            if ((v39 & 0x8000000000000000) != 0)
              goto LABEL_210;
            if (v39 >= *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_211;
            v40 = *(_QWORD *)(v102 + 8 * v39);
            v35 = swift_retain();
            v41 = __OFADD__(v39++, 1);
            if (v41)
            {
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
              break;
            }
          }
          v42 = *(_QWORD *)(v40 + 64);
          v112 = v42;
          if (v42 >> 62)
          {
            swift_bridgeObjectRetain_n();
            v3 = sub_1BC62D3B8();
            v35 = swift_bridgeObjectRelease();
            if (!v3)
              goto LABEL_203;
          }
          else
          {
            v3 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
            v35 = swift_bridgeObjectRetain();
            if (!v3)
              goto LABEL_203;
          }
          if ((v112 & 0xC000000000000001) != 0)
          {
            MEMORY[0x1BCCF24CC](0);
          }
          else
          {
            if (!*(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_204;
            swift_retain();
          }
          v43 = sub_1BC56AEB4();
          swift_release();
          v44 = *(_QWORD *)(v43 + 16);
          swift_bridgeObjectRelease();
          if (v44)
          {
            v45 = sub_1BC62C8CC();
            *(_QWORD *)(v45 + 16) = v44;
            v106 = v45;
            memset_pattern16((void *)(v45 + 32), &unk_1BC648220, 8 * v44);
          }
          else
          {
            v106 = MEMORY[0x1E0DEE9D8];
          }
          v35 = v112;
          if (v3 >= 1)
          {
            swift_bridgeObjectRetain();
            v46 = v106;
            swift_bridgeObjectRetain();
            v47 = 0;
            v115 = v3;
            do
            {
              if ((v112 & 0xC000000000000001) != 0)
                MEMORY[0x1BCCF24CC](v47, v112);
              else
                swift_retain();
              v118 = v47;
              v48 = sub_1BC56AEB4();
              swift_release();
              v49 = *(_QWORD *)(v46 + 16);
              v50 = *(_QWORD *)(v48 + 16);
              if (v50 >= v49)
                v51 = *(_QWORD *)(v46 + 16);
              else
                v51 = *(_QWORD *)(v48 + 16);
              v131 = MEMORY[0x1E0DEE9D8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1BC3BDA2C(0, v51, 0);
              v38 = v131;
              v126 = v48;
              v129 = v46;
              v121 = v50;
              v124 = v49;
              if (v51)
              {
                v52 = (double *)(v46 + 32);
                v53 = (double *)(v48 + 32);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v54 = v51;
                while (v49)
                {
                  if (!v50)
                    goto LABEL_138;
                  if (*v52 > *v53)
                    v55 = *v52;
                  else
                    v55 = *v53;
                  v57 = *(_QWORD *)(v131 + 16);
                  v56 = *(_QWORD *)(v131 + 24);
                  if (v57 >= v56 >> 1)
                    sub_1BC3BDA2C(v56 > 1, v57 + 1, 1);
                  --v50;
                  *(_QWORD *)(v131 + 16) = v57 + 1;
                  *(double *)(v131 + 8 * v57 + 32) = v55;
                  --v49;
                  ++v53;
                  ++v52;
                  if (!--v54)
                    goto LABEL_114;
                }
                __break(1u);
LABEL_138:
                __break(1u);
LABEL_139:
                __break(1u);
LABEL_140:
                __break(1u);
LABEL_141:
                v3 = v99;
                goto LABEL_142;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
LABEL_114:
              if (v124 > v121)
              {
                v58 = 0;
                if (v51 <= v121)
                  v59 = v121;
                else
                  v59 = v51;
                v60 = v59 - v51;
                v61 = v124 - v51;
                v62 = v121 - v51;
                v63 = v129 + 8 * v51 + 32;
                v64 = v126 + 8 * v51 + 32;
                while (v61 != v58)
                {
                  if (v62 == v58)
                    goto LABEL_95;
                  if (v60 == v58)
                    goto LABEL_140;
                  if (*(double *)(v63 + 8 * v58) > *(double *)(v64 + 8 * v58))
                    v65 = *(_QWORD *)(v63 + 8 * v58);
                  else
                    v65 = *(_QWORD *)(v64 + 8 * v58);
                  v67 = *(_QWORD *)(v131 + 16);
                  v66 = *(_QWORD *)(v131 + 24);
                  if (v67 >= v66 >> 1)
                    sub_1BC3BDA2C(v66 > 1, v67 + 1, 1);
                  *(_QWORD *)(v131 + 16) = v67 + 1;
                  *(_QWORD *)(v131 + 8 * v67 + 32) = v65;
                  if (v61 == ++v58)
                    goto LABEL_95;
                }
                goto LABEL_139;
              }
LABEL_95:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              v47 = v118 + 1;
              swift_bridgeObjectRelease();
              v46 = v131;
              v3 = v115;
            }
            while (v118 + 1 != v115);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            if (*(_QWORD *)(v131 + 16) != v108)
            {
              swift_bridgeObjectRelease();
              v38 = v110;
              if (v39 != v109)
                continue;
              goto LABEL_141;
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v3 = (uint64_t)sub_1BC568FE8((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_1BC56C6D8, 0, v99, v131);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            v99 = v3;
            v38 = v110;
            if (v39 != v109)
              continue;
LABEL_142:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            a3[1] = v3;
            swift_bridgeObjectRetain();
            v68 = 0;
LABEL_143:
            if (v103)
            {
              v3 = v68;
              v69 = MEMORY[0x1BCCF24CC](v68, v38);
            }
            else
            {
              v69 = *(_QWORD *)(v102 + 8 * v68);
              swift_retain();
            }
            v41 = __OFADD__(v68++, 1);
            if (v41)
              goto LABEL_212;
            v70 = *(_QWORD *)(v69 + 64);
            v113 = v70;
            if (v70 >> 62)
            {
              v3 = v68;
              swift_bridgeObjectRetain_n();
              v71 = sub_1BC62D3B8();
              swift_bridgeObjectRelease();
              if (!v71)
                goto LABEL_213;
            }
            else
            {
              v71 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v71)
                goto LABEL_213;
            }
            v104 = v69;
            if ((v113 & 0xC000000000000001) != 0)
            {
              MEMORY[0x1BCCF24CC](0);
            }
            else
            {
              if (!*(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_214;
              swift_retain();
            }
            v72 = sub_1BC56AEB4();
            swift_release();
            v73 = *(_QWORD *)(v72 + 16);
            swift_bridgeObjectRelease();
            if (v73)
            {
              v74 = sub_1BC62C8CC();
              *(_QWORD *)(v74 + 16) = v73;
              v107 = v74;
              memset_pattern16((void *)(v74 + 32), &unk_1BC648220, 8 * v73);
            }
            else
            {
              v107 = MEMORY[0x1E0DEE9D8];
            }
            if (v71 >= 1)
            {
              swift_bridgeObjectRetain();
              v75 = v107;
              swift_bridgeObjectRetain();
              v76 = 0;
              v116 = v71;
              while (1)
              {
                v119 = v76;
                if ((v113 & 0xC000000000000001) != 0)
                  MEMORY[0x1BCCF24CC](v76, v113);
                else
                  swift_retain();
                v77 = sub_1BC56AEB4();
                swift_release();
                v78 = *(_QWORD *)(v75 + 16);
                v79 = *(_QWORD *)(v77 + 16);
                v80 = v79 >= v78 ? *(_QWORD *)(v75 + 16) : *(_QWORD *)(v77 + 16);
                v132 = MEMORY[0x1E0DEE9D8];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1BC3BDA2C(0, v80, 0);
                v127 = v77;
                v122 = v79;
                v125 = v78;
                if (v80)
                  break;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
LABEL_176:
                if (v125 > v122)
                {
                  v88 = 0;
                  if (v80 <= v122)
                    v89 = v122;
                  else
                    v89 = v80;
                  v90 = v89 - v80;
                  v91 = v125 - v80;
                  v92 = v122 - v80;
                  v93 = v75 + 8 * v80 + 32;
                  v94 = v127 + 8 * v80 + 32;
                  while (v91 != v88)
                  {
                    if (v92 == v88)
                      goto LABEL_157;
                    if (v90 == v88)
                      goto LABEL_200;
                    if (*(double *)(v93 + 8 * v88) > *(double *)(v94 + 8 * v88))
                      v95 = *(_QWORD *)(v93 + 8 * v88);
                    else
                      v95 = *(_QWORD *)(v94 + 8 * v88);
                    v97 = *(_QWORD *)(v132 + 16);
                    v96 = *(_QWORD *)(v132 + 24);
                    if (v97 >= v96 >> 1)
                      sub_1BC3BDA2C(v96 > 1, v97 + 1, 1);
                    *(_QWORD *)(v132 + 16) = v97 + 1;
                    *(_QWORD *)(v132 + 8 * v97 + 32) = v95;
                    if (v91 == ++v88)
                      goto LABEL_157;
                  }
                  goto LABEL_199;
                }
LABEL_157:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                v76 = v119 + 1;
                swift_bridgeObjectRelease();
                v75 = v132;
                if (v119 + 1 == v116)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  v3 = *(_QWORD *)(v132 + 16);
                  swift_bridgeObjectRelease();
                  if (v3 != v108)
                  {
                    swift_release();
                    v38 = v110;
                    if (v68 != v109)
                      goto LABEL_143;
                    goto LABEL_218;
                  }
LABEL_201:
                  swift_bridgeObjectRelease();
                  sub_1BC34E674(v104 + 72, (uint64_t)(a3 + 2));
                  return swift_release();
                }
              }
              v81 = (double *)(v75 + 32);
              v82 = (double *)(v77 + 32);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v83 = v80;
              v84 = v78;
              while (v84)
              {
                if (!v79)
                  goto LABEL_198;
                if (*v81 > *v82)
                  v85 = *v81;
                else
                  v85 = *v82;
                v87 = *(_QWORD *)(v132 + 16);
                v86 = *(_QWORD *)(v132 + 24);
                if (v87 >= v86 >> 1)
                  sub_1BC3BDA2C(v86 > 1, v87 + 1, 1);
                --v79;
                *(_QWORD *)(v132 + 16) = v87 + 1;
                *(double *)(v132 + 8 * v87 + 32) = v85;
                --v84;
                ++v82;
                ++v81;
                if (!--v83)
                  goto LABEL_176;
              }
              __break(1u);
LABEL_198:
              __break(1u);
LABEL_199:
              __break(1u);
LABEL_200:
              __break(1u);
              goto LABEL_201;
            }
            goto LABEL_215;
          }
          break;
        }
        __break(1u);
      }
    }
    v3 = v110;
    v6 = v103;
  }
  while (v5 != v109);
LABEL_216:
  __break(1u);
LABEL_217:
  swift_bridgeObjectRelease();
  a3[1] = v3;
  __break(1u);
LABEL_218:
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_1BC56A850(_QWORD *a1, _QWORD *a2, double a3)
{
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  BOOL v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  double v43;
  double *v44;
  uint64_t v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double *v56;
  uint64_t v57;
  uint64_t v58;
  double *v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD v77[3];
  uint64_t v78;
  uint64_t v79;
  __int128 v80[2];

  if (qword_1EF428490 != -1)
LABEL_79:
    swift_once();
  v6 = *(double *)&qword_1EF459C50;
  v7 = a2[3];
  v8 = a2[4];
  __swift_project_boxed_opaque_existential_1Tm(a2, v7);
  v9 = 0.0;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8) & 1) != 0)
  {
    v10 = a2[3];
    v11 = a2[4];
    __swift_project_boxed_opaque_existential_1Tm(a2, v10);
    v9 = (*(double (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11) + a3;
  }
  if (qword_1EF428478 != -1)
    swift_once();
  v12 = *(double *)&qword_1EF459C38;
  v13 = a1[2];
  if (v13)
  {
    swift_bridgeObjectRetain();
    v14 = 0;
    v15 = MEMORY[0x1E0DEE9D8];
    do
    {
      v18 = *(double *)&a1[v14 + 4];
      if (v18 > 0.0)
      {
        *(_QWORD *)&v80[0] = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC3BDA2C(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v15 = *(_QWORD *)&v80[0];
        }
        v17 = *(_QWORD *)(v15 + 16);
        v16 = *(_QWORD *)(v15 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1BC3BDA2C(v16 > 1, v17 + 1, 1);
          v15 = *(_QWORD *)&v80[0];
        }
        *(_QWORD *)(v15 + 16) = v17 + 1;
        *(double *)(v15 + 8 * v17 + 32) = v18;
      }
      ++v14;
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9D8];
  }
  v19 = *(_QWORD *)(v15 + 16);
  swift_release();
  v20 = a2[3];
  v21 = a2[4];
  __swift_project_boxed_opaque_existential_1Tm(a2, v20);
  v22 = ((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 56))(v20, v21) & 1) == 0;
  v23 = __OFSUB__(v19, v22);
  v24 = v19 - v22;
  if (v23)
  {
    __break(1u);
LABEL_81:
    swift_once();
    goto LABEL_56;
  }
  v25 = v12 - (v6 + v9);
  v26 = (double)v24;
  v27 = a2[3];
  v28 = a2[4];
  __swift_project_boxed_opaque_existential_1Tm(a2, v27);
  v29 = (*(double (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28) * v26;
  v30 = a2[3];
  v31 = a2[4];
  __swift_project_boxed_opaque_existential_1Tm(a2, v30);
  v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 72);
  swift_bridgeObjectRetain();
  v33 = v32(v30, v31);
  v34 = *(_QWORD *)(v33 + 16);
  if (!v34)
  {
    swift_bridgeObjectRelease();
    v53 = a1[2];
    if (v53)
      goto LABEL_48;
    goto LABEL_55;
  }
  v75 = v13;
  v76 = a2;
  v35 = 0;
  a3 = v25 - v29;
  while (1)
  {
    if (v35 >= *(_QWORD *)(v33 + 16))
    {
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    v36 = *(_QWORD *)(v33 + 32 + 8 * v35);
    if (v36 >= v13)
      goto LABEL_22;
    if (v36 < 0)
      goto LABEL_73;
    if ((unint64_t)v36 >= a1[2])
      goto LABEL_74;
    a2 = a1;
    a1 += 4;
    v37 = *(double *)&a1[v36];
    v38 = v76[3];
    v39 = v76[4];
    __swift_project_boxed_opaque_existential_1Tm(v76, v38);
    v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 80))(v38, v39);
    if ((unint64_t)v36 >= *(_QWORD *)(v40 + 16))
      goto LABEL_75;
    v41 = *(double *)(v40 + 8 * v36 + 32);
    swift_bridgeObjectRelease();
    if (v41 < v37)
      break;
    a1 = a2;
LABEL_21:
    v13 = v75;
LABEL_22:
    if (++v35 == v34)
    {
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
  }
  v42 = a2[2];
  if (!v42)
  {
    v43 = 0.0;
    if (a3 >= 0.0)
      goto LABEL_46;
    goto LABEL_35;
  }
  v43 = 0.0;
  v44 = (double *)a1;
  v45 = a2[2];
  do
  {
    v46 = *v44++;
    v43 = v43 + v46;
    --v45;
  }
  while (v45);
  if (a3 < v43)
  {
LABEL_35:
    if (v36 >= v42)
      goto LABEL_76;
    v47 = *(double *)&a1[v36];
    v48 = v76[3];
    v49 = v76[4];
    __swift_project_boxed_opaque_existential_1Tm(v76, v48);
    v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 80))(v48, v49);
    if (v36 >= *(_QWORD *)(v50 + 16))
      goto LABEL_77;
    v51 = a3 - (v43 - v47);
    v52 = *(double *)(v50 + 8 * v36 + 32);
    swift_bridgeObjectRelease();
    if (v51 <= v52)
      v51 = v52;
    a1 = a2;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      a1 = sub_1BC4DE3A0(a2);
    if (v36 >= a1[2])
      goto LABEL_78;
    *(double *)&a1[v36 + 4] = v51;
    goto LABEL_21;
  }
LABEL_46:
  swift_bridgeObjectRelease();
  a1 = a2;
LABEL_47:
  a2 = v76;
  v53 = a1[2];
  if (!v53)
    goto LABEL_55;
LABEL_48:
  if (v53 == 1)
  {
    v54 = 0;
    v55 = 0.0;
    goto LABEL_53;
  }
  v54 = v53 & 0x7FFFFFFFFFFFFFFELL;
  v56 = (double *)(a1 + 5);
  v55 = 0.0;
  v57 = v53 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v55 = v55 + *(v56 - 1) + *v56;
    v56 += 2;
    v57 -= 2;
  }
  while (v57);
  if (v53 != v54)
  {
LABEL_53:
    v58 = v53 - v54;
    v59 = (double *)&a1[v54 + 4];
    do
    {
      v60 = *v59++;
      v55 = v55 + v60;
      --v58;
    }
    while (v58);
  }
LABEL_55:
  if (qword_1EF428438 != -1)
    goto LABEL_81;
LABEL_56:
  v61 = a2[3];
  v62 = a2[4];
  __swift_project_boxed_opaque_existential_1Tm(a2, v61);
  v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 88))(v61, v62);
  v64 = 0.0;
  if ((v65 & 1) != 0)
    return;
  v66 = v63 + 1;
  if (__OFADD__(v63, 1))
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  v67 = a1[2];
  if (v67 < v66)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if (v66 < 0)
  {
LABEL_85:
    __break(1u);
    return;
  }
  sub_1BC34E674((uint64_t)a2, (uint64_t)v80);
  sub_1BC34E674((uint64_t)v80, (uint64_t)v77);
  v68 = swift_allocObject();
  sub_1BC34E718(v80, v68 + 16);
  if (v66 == v67)
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
  }
  else
  {
    v69 = a1 + 4;
    swift_bridgeObjectRetain_n();
    swift_retain();
    v70 = a1 + 5;
    v71 = v66;
    while (1)
    {
      if (v71 < v66 || v71 >= v67)
      {
        __break(1u);
        goto LABEL_83;
      }
      v74 = *(double *)&v69[v71];
      if (v74 <= 0.0)
        break;
LABEL_65:
      ++v71;
      v72 = v78;
      v73 = v79;
      __swift_project_boxed_opaque_existential_1Tm(v77, v78);
      v64 = v64 + v74 + (*(double (**)(uint64_t, uint64_t))(v73 + 16))(v72, v73);
      if (v71 == v67)
        goto LABEL_62;
    }
    while (v67 - 1 != v71)
    {
      v74 = *(double *)&v70[v71++];
      if (v74 > 0.0)
        goto LABEL_65;
    }
  }
LABEL_62:
  swift_release_n();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v77);
}

uint64_t sub_1BC56AEB4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 80);
  v20 = MEMORY[0x1E0DEE9D8];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = sub_1BC62D3B8();
    v3 = result;
    if (!result)
      goto LABEL_10;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (!v3)
      goto LABEL_10;
  }
  if (v3 < 1)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    v5 = 0;
    do
    {
      v6 = MEMORY[0x1BCCF24CC](v5++, v2);
      v7 = *(_QWORD *)(v6 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BC3BBC4C(v7);
    }
    while (v3 != v5);
  }
  else
  {
    v8 = v2 + 32;
    do
    {
      v8 += 8;
      v9 = swift_bridgeObjectRetain();
      sub_1BC3BBC4C(v9);
      --v3;
    }
    while (v3);
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  v10 = sub_1BC568C58(v20);
  result = swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v10 + 16))
  {
    __break(1u);
    goto LABEL_22;
  }
  v11 = sub_1BC4DDE20(*(_QWORD *)(*(_QWORD *)(v10 + 32) + 16), -INFINITY);
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(v10 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = 0;
    v15 = v12;
    do
    {
      v16 = *(_QWORD *)(v10 + 8 * v14++ + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = sub_1BC568FE8((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_1BC56B550, 0, (uint64_t)v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = (_QWORD *)v11;
  }
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v1 + 72);
  if (v17)
  {
    v18 = *(_QWORD *)(v17 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    v19 = sub_1BC568DAC((uint64_t)v15, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return v19;
  }
  return (uint64_t)v15;
}

void sub_1BC56B10C(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void *v22;
  id v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;

  v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v8 = a1[4];
  v7 = a1[5];
  v9 = a1[6];
  v10 = a1[7];
  swift_bridgeObjectRetain();
  v11 = (_QWORD *)*a3;
  v12 = sub_1BC559308(v8);
  v14 = v11[2];
  v15 = (v13 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
    goto LABEL_24;
  v17 = v12;
  v18 = v13;
  v19 = v11[3];
  swift_bridgeObjectRetain();
  if (v19 >= v16)
  {
    if ((a2 & 1) != 0)
    {
      if ((v18 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1BC5A5750();
      if ((v18 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v24 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v17 >> 6) + 64) |= 1 << v17;
    *(_QWORD *)(v24[6] + 8 * v17) = v8;
    v25 = (_QWORD *)(v24[7] + 24 * v17);
    *v25 = v7;
    v25[1] = v9;
    v25[2] = v10;
    v26 = v24[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v24[2] = v28;
    v29 = v4 - 1;
    if (!v29)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v30 = a1 + 10;
    while (1)
    {
      v32 = *((_QWORD *)v30 - 2);
      v31 = *((_QWORD *)v30 - 1);
      v48 = *v30;
      v33 = (_QWORD *)*a3;
      v34 = sub_1BC559308(v32);
      v36 = v33[2];
      v37 = (v35 & 1) == 0;
      v38 = v36 + v37;
      if (__OFADD__(v36, v37))
        break;
      v39 = v34;
      v40 = v35;
      v41 = v33[3];
      swift_bridgeObjectRetain();
      if (v41 < v38)
      {
        sub_1BC3C3C54(v38, 1);
        v42 = sub_1BC559308(v32);
        if ((v40 & 1) != (v43 & 1))
          goto LABEL_26;
        v39 = v42;
      }
      if ((v40 & 1) != 0)
        goto LABEL_10;
      v44 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v39 >> 6) + 64) |= 1 << v39;
      *(_QWORD *)(v44[6] + 8 * v39) = v32;
      v45 = v44[7] + 24 * v39;
      *(_QWORD *)v45 = v31;
      *(_OWORD *)(v45 + 8) = v48;
      v46 = v44[2];
      v27 = __OFADD__(v46, 1);
      v47 = v46 + 1;
      if (v27)
        goto LABEL_25;
      v44[2] = v47;
      v30 += 2;
      if (!--v29)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1BC3C3C54(v16, a2 & 1);
  v20 = sub_1BC559308(v8);
  if ((v18 & 1) == (v21 & 1))
  {
    v17 = v20;
    if ((v18 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v22 = (void *)swift_allocError();
    swift_willThrow();
    v23 = v22;
    sub_1BC35817C(0, (unint64_t *)&qword_1ED6A59C0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1BC62D5EC();
  __break(1u);
LABEL_27:
  sub_1BC62D1D8();
  sub_1BC62C764();
  sub_1BC62D2D4();
  sub_1BC62C764();
  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC56B4B0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

double *sub_1BC56B550@<X0>(double *result@<X0>, double *a2@<X8>)
{
  double v2;

  v2 = *result;
  if (*result <= result[1])
    v2 = result[1];
  *a2 = v2;
  return result;
}

uint64_t sub_1BC56B564(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1BC3BD9F4(0, v4, 0);
  v5 = v25;
  result = sub_1BC56B4B0(a1);
  v8 = result;
  v10 = v9;
  v12 = v11 & 1;
  while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v10)
      goto LABEL_16;
    v22 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v8);
    sub_1BC5699C4(&v22, a2, (uint64_t *)v23);
    if (v3)
    {
      swift_release();
      return v5;
    }
    v3 = 0;
    v25 = v5;
    v14 = *(_QWORD *)(v5 + 16);
    v13 = *(_QWORD *)(v5 + 24);
    if (v14 >= v13 >> 1)
    {
      sub_1BC3BD9F4(v13 > 1, v14 + 1, 1);
      v5 = v25;
    }
    *(_QWORD *)(v5 + 16) = v14 + 1;
    v15 = v5 + 56 * v14;
    v16 = v23[0];
    v17 = v23[1];
    v18 = v23[2];
    *(_QWORD *)(v15 + 80) = v24;
    *(_OWORD *)(v15 + 48) = v17;
    *(_OWORD *)(v15 + 64) = v18;
    *(_OWORD *)(v15 + 32) = v16;
    result = sub_1BC5822C4(v8, v10, v12 & 1, a1);
    v8 = result;
    v10 = v19;
    v12 = v20 & 1;
    if (!--v4)
    {
      sub_1BC3583DC(result, v19, v20 & 1);
      return v5;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1BC56B718(unint64_t a1, _QWORD *a2, _QWORD *a3, double a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v59[2];
  uint64_t v60;
  uint64_t v61;

  v5 = a1;
  if (a1 >> 62)
    goto LABEL_42;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  result = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v61 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if ((v6 & 0x8000000000000000) == 0)
    {
      v8 = 0;
      v47 = a3 + 9;
      v48 = v5 & 0xC000000000000001;
      v43 = v5 + 32;
      v44 = v6;
      v45 = v5;
      while (1)
      {
        if (v8 == v6)
        {
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        v50 = v8;
        if (v48)
        {
          v9 = MEMORY[0x1BCCF24CC](v8, v5);
        }
        else
        {
          v9 = *(_QWORD *)(v43 + 8 * v8);
          swift_retain();
        }
        v21 = MEMORY[0x1E0DEE9D8];
        v22 = a3[12];
        v23 = a3[13];
        __swift_project_boxed_opaque_existential_1Tm(v47, v22);
        (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
        v24 = a3[12];
        v25 = a3[13];
        __swift_project_boxed_opaque_existential_1Tm(v47, v24);
        v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 88))(v24, v25);
        v28 = v27;
        v5 = *(_QWORD *)(v9 + 80);
        if (v5 >> 62)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v29 = sub_1BC62D3B8();
          if (v29)
          {
LABEL_14:
            *(_QWORD *)&v59[0] = v21;
            sub_1BC62D28C();
            if ((v29 & 0x8000000000000000) == 0)
            {
              v46 = v9;
              v30 = 0;
              v31 = v28 & 1;
              v52 = v5;
              v53 = v5 & 0xC000000000000001;
              v51 = v29;
              while (v30 != v29)
              {
                v57 = v30;
                if (v53)
                  v38 = MEMORY[0x1BCCF24CC](v30, v5);
                else
                  v38 = swift_retain();
                v39 = MEMORY[0x1E0DEE9D8];
                v55 = v38;
                v40 = *(_QWORD *)(v38 + 48);
                if (v40 >> 62)
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v41 = sub_1BC62D3B8();
                  if (v41)
                  {
LABEL_24:
                    v60 = v39;
                    sub_1BC62D28C();
                    if ((v41 & 0x8000000000000000) == 0)
                    {
                      v42 = 0;
                      while (v41 != v42)
                      {
                        if ((v40 & 0xC000000000000001) != 0)
                          MEMORY[0x1BCCF24CC](v42, v40);
                        else
                          swift_retain();
                        ++v42;
                        sub_1BC4E1940(a2, v26, v31, a4);
                        swift_release();
                        sub_1BC62D268();
                        sub_1BC62D298();
                        sub_1BC62D2A4();
                        sub_1BC62D274();
                        if (v41 == v42)
                        {
                          v54 = v60;
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          goto LABEL_17;
                        }
                      }
                      __break(1u);
                      return v61;
                    }
LABEL_39:
                    __break(1u);
                    goto LABEL_40;
                  }
                }
                else
                {
                  v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v41)
                    goto LABEL_24;
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v54 = v39;
LABEL_17:
                v30 = v57 + 1;
                v32 = *(void **)(v55 + 16);
                v33 = *(_QWORD *)(v55 + 24);
                v34 = *(_QWORD *)(v55 + 32);
                v35 = *(_BYTE *)(v55 + 40);
                _s15SizedValueGroupCMa();
                v36 = swift_allocObject();
                *(_QWORD *)(v36 + 16) = v32;
                *(_QWORD *)(v36 + 24) = v33;
                *(_QWORD *)(v36 + 32) = v34;
                *(_BYTE *)(v36 + 40) = v35;
                *(_QWORD *)(v36 + 48) = v54;
                v37 = v32;
                swift_release();
                sub_1BC62D268();
                sub_1BC62D298();
                sub_1BC62D2A4();
                sub_1BC62D274();
                v29 = v51;
                v5 = v52;
                if (v57 + 1 == v51)
                {
                  v56 = *(_QWORD *)&v59[0];
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v9 = v46;
                  goto LABEL_7;
                }
              }
              __break(1u);
              goto LABEL_39;
            }
LABEL_41:
            __break(1u);
LABEL_42:
            swift_bridgeObjectRetain();
            v6 = sub_1BC62D3B8();
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
        }
        else
        {
          v29 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v29)
            goto LABEL_14;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v56 = v21;
LABEL_7:
        v8 = v50 + 1;
        v10 = *(void **)(v9 + 16);
        v11 = *(_QWORD *)(v9 + 24);
        v12 = *(_QWORD *)(v9 + 32);
        v13 = *(void **)(v9 + 40);
        v14 = *(_QWORD *)(v9 + 48);
        v15 = *(_QWORD *)(v9 + 56);
        v16 = *(_BYTE *)(v9 + 64);
        v17 = *(_QWORD *)(v9 + 72);
        sub_1BC34E674(v9 + 88, (uint64_t)v59);
        _s11SizedRecordCMa();
        v18 = swift_allocObject();
        *(_QWORD *)(v18 + 128) = 0;
        *(_BYTE *)(v18 + 136) = 1;
        *(_QWORD *)(v18 + 16) = v10;
        *(_QWORD *)(v18 + 24) = v11;
        *(_QWORD *)(v18 + 32) = v12;
        *(_QWORD *)(v18 + 40) = v13;
        *(_QWORD *)(v18 + 48) = v14;
        *(_QWORD *)(v18 + 56) = v15;
        *(_BYTE *)(v18 + 64) = v16;
        *(_QWORD *)(v18 + 72) = v17;
        *(_QWORD *)(v18 + 80) = v56;
        sub_1BC34E718(v59, v18 + 88);
        swift_retain();
        v19 = v10;
        v20 = v13;
        swift_release();
        sub_1BC62D268();
        sub_1BC62D298();
        sub_1BC62D2A4();
        sub_1BC62D274();
        v6 = v44;
        v5 = v45;
        if (v50 + 1 == v44)
          return v61;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC56BC2C(unint64_t a1, unint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  __int128 v28[2];
  uint64_t v29;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v4)
      return result;
    v29 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC62D28C();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v26 = a2;
    v6 = 0;
    v27 = v3 & 0xC000000000000001;
    while (v4 != v6)
    {
      if (v27)
      {
        v7 = (_QWORD *)MEMORY[0x1BCCF24CC](v6, v3);
      }
      else
      {
        v7 = *(_QWORD **)(v3 + 8 * v6 + 32);
        swift_retain();
      }
      a2 = v26;
      v8 = sub_1BC4DD794();
      if (!*(_QWORD *)(v26 + 16))
        goto LABEL_16;
      v9 = sub_1BC559308(v8);
      if ((v10 & 1) == 0)
        goto LABEL_17;
      ++v6;
      v11 = *(_QWORD *)(v26 + 56) + 24 * v9;
      v12 = *(_QWORD **)v11;
      v13 = *(double *)(v11 + 16);
      swift_bridgeObjectRetain_n();
      swift_retain();
      v14 = swift_bridgeObjectRetain();
      v15 = sub_1BC56B718(v14, v12, v7, v13);
      swift_bridgeObjectRelease();
      swift_release();
      a2 = v3;
      v16 = (void *)v7[2];
      v17 = v7[3];
      v18 = v7[4];
      v19 = v4;
      v20 = (void *)v7[5];
      v21 = v7[6];
      v22 = v7[7];
      sub_1BC34E674((uint64_t)(v7 + 9), (uint64_t)v28);
      _s12SizedSectionCMa();
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 112) = 0;
      *(_BYTE *)(v23 + 120) = 1;
      *(_QWORD *)(v23 + 128) = 0;
      *(_BYTE *)(v23 + 136) = 1;
      *(_QWORD *)(v23 + 144) = 0;
      *(_BYTE *)(v23 + 152) = 1;
      *(_QWORD *)(v23 + 16) = v16;
      *(_QWORD *)(v23 + 24) = v17;
      *(_QWORD *)(v23 + 32) = v18;
      *(_QWORD *)(v23 + 40) = v20;
      *(_QWORD *)(v23 + 64) = v15;
      *(_QWORD *)(v23 + 48) = v21;
      *(_QWORD *)(v23 + 56) = v22;
      sub_1BC34E718(v28, v23 + 72);
      v24 = v16;
      v3 = a2;
      v25 = v20;
      v4 = v19;
      swift_release();
      swift_bridgeObjectRelease_n();
      sub_1BC62D268();
      sub_1BC62D298();
      sub_1BC62D2A4();
      sub_1BC62D274();
      if (v19 == v6)
        return v29;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v4 = sub_1BC62D3B8();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC56BE98(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  double *v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _BYTE v48[40];
  _QWORD v49[2];
  _QWORD v50[5];
  uint64_t v51;

  v13 = sub_1BC568960(a1);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = (double *)(v13 + 32);
    v16 = 0.0;
    do
    {
      v17 = *v15++;
      v18 = v17;
      if (v16 <= v17)
        v16 = v18;
      --v14;
    }
    while (v14);
  }
  else
  {
    v16 = 0.0;
  }
  swift_bridgeObjectRelease();
  v19 = sub_1BC568AC0(a1);
  v20 = sub_1BC58C16C(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v21 = sub_1BC56B564(v20, a1);
  swift_bridgeObjectRelease();
  v46 = a1;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v42 = a3;
    v43 = a4;
    v44 = a6;
    v45 = a7;
    v51 = MEMORY[0x1E0DEE9D8];
    sub_1BC3BD9D8(0, v22, 0);
    v23 = v21 + 32;
    v24 = v51;
    do
    {
      sub_1BC56C1C4(v23, (uint64_t)v49);
      v26 = v49[0];
      v25 = (_QWORD *)v49[1];
      sub_1BC34E674((uint64_t)v50, (uint64_t)v48);
      sub_1BC56A850(v25, v50, v16);
      v28 = v27;
      v30 = v29;
      v32 = v31;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      sub_1BC56C208((uint64_t)v49);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC3BD9D8(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v24 = v51;
      }
      v34 = *(_QWORD *)(v24 + 16);
      v33 = *(_QWORD *)(v24 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1BC3BD9D8(v33 > 1, v34 + 1, 1);
        v24 = v51;
      }
      *(_QWORD *)(v24 + 16) = v34 + 1;
      v35 = (_QWORD *)(v24 + 32 * v34);
      v35[4] = v26;
      v35[5] = v28;
      v35[6] = v30;
      v35[7] = v32;
      v23 += 56;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    a6 = v44;
    a7 = v45;
    a4 = v43;
    a3 = v42;
    if (*(_QWORD *)(v24 + 16))
      goto LABEL_16;
LABEL_18:
    v36 = MEMORY[0x1E0DEE9E0];
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    goto LABEL_18;
LABEL_16:
  sub_1BC56C244();
  v36 = sub_1BC62D400();
LABEL_19:
  v49[0] = v36;
  v37 = (_QWORD *)swift_bridgeObjectRetain();
  sub_1BC56B10C(v37, 1, v49);
  swift_bridgeObjectRelease();
  v38 = v49[0];
  swift_retain();
  v39 = sub_1BC56BC2C(v46, v38);
  swift_bridgeObjectRelease();
  swift_release();
  v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3498]), sel_init);
  _s4PageCMa();
  result = swift_allocObject();
  *(_BYTE *)(result + 120) = 1;
  *(_QWORD *)(result + 16) = v39;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = a5;
  *(_QWORD *)(result + 56) = a6;
  *(_QWORD *)(result + 64) = a7;
  *(_QWORD *)(result + 72) = v40;
  *(_QWORD *)(result + 80) = 0;
  *(_QWORD *)(result + 88) = 0;
  *(double *)(result + 96) = v16;
  *(_QWORD *)(result + 104) = v38;
  *(_QWORD *)(result + 112) = 0;
  return result;
}

uint64_t sub_1BC56C1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC3CC0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC56C208(uint64_t a1)
{
  uint64_t v2;

  sub_1BC3CC0C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC56C244()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF42C7D8)
  {
    v0 = sub_1BC62D40C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF42C7D8);
  }
}

uint64_t sub_1BC56C2A8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BC56C2CC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 16);
  return result;
}

void _s13PaginatedDataVwxx(id *a1)
{

  swift_bridgeObjectRelease();
}

uint64_t _s13PaginatedDataVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  __int128 v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v6 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v7;
  v8 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  v9 = *(void **)(a2 + 144);
  *(_QWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  swift_bridgeObjectRetain();
  v14 = v8;
  v15 = v9;
  return a1;
}

uint64_t _s13PaginatedDataVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  __int128 v13;
  void *v14;
  void *v15;
  id v16;
  __int128 v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  v13 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v13;
  v14 = *(void **)(a1 + 80);
  v15 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v15;
  v16 = v15;

  v17 = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = *(void **)(a2 + 120);
  v19 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v18;
  v20 = v18;

  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v21 = *(void **)(a2 + 144);
  v22 = *(void **)(a1 + 144);
  *(_QWORD *)(a1 + 144) = v21;
  v23 = v21;

  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t _s13PaginatedDataVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v7 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  v9 = *(void **)(a1 + 144);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);

  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  return a1;
}

uint64_t _s13PaginatedDataVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13PaginatedDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13PaginatedDataVMa()
{
  return &_s13PaginatedDataVN;
}

double *sub_1BC56C6D8@<X0>(double *a1@<X0>, double *a2@<X8>)
{
  return sub_1BC56B550(a1, a2);
}

void AccountStatusSummaryTileFeedItemData.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  int *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = sub_1BC62A7B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - v9;
  v11 = a1;
  sub_1BC3EEE9C(v11, 0, 0, 0, (uint64_t)v10);
  v12 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12) == 1)
  {

    sub_1BC377E3C((uint64_t)v10, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    v13 = type metadata accessor for AccountStatusSummaryTileFeedItemData();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  else
  {
    sub_1BC377E3C((uint64_t)v10, (unint64_t *)&qword_1EF42A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    v14 = objc_msgSend(v11, sel_identifier);
    sub_1BC62A79C();

    v15 = objc_msgSend(v11, sel_provenance);
    v16 = objc_msgSend(v15, sel_brand);

    if (v16)
    {
      v46 = v5;
      v17 = objc_msgSend(v16, sel_externalID);
      v18 = sub_1BC62C680();
      v44 = v19;
      v45 = v18;

      v20 = objc_msgSend(v16, sel_batchID);
      v21 = sub_1BC62C680();
      v42 = v22;
      v43 = v21;

      v23 = objc_msgSend(v11, sel_provenance);
      v24 = objc_msgSend(v23, sel_title);

      v25 = sub_1BC62C680();
      v27 = v26;

      v28 = objc_msgSend(v11, sel_provenance);
      v29 = objc_msgSend(v28, sel_subtitle);

      v30 = v4;
      if (v29)
      {
        v31 = sub_1BC62C680();
        v33 = v32;

      }
      else
      {
        v31 = 0;
        v33 = 0xE000000000000000;
      }
      v34 = objc_msgSend(v11, sel_state);
      v35 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
      HKClinicalAccount.summaryTileType.getter(a2 + v35[9]);

      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(a2, v7, v30);
      v36 = (uint64_t *)(a2 + v35[5]);
      v37 = v44;
      *v36 = v45;
      v36[1] = v37;
      v38 = v42;
      v36[2] = v43;
      v36[3] = v38;
      v39 = (uint64_t *)(a2 + v35[6]);
      *v39 = v25;
      v39[1] = v27;
      v40 = (uint64_t *)(a2 + v35[7]);
      *v40 = v31;
      v40[1] = v33;
      *(_QWORD *)(a2 + v35[8]) = v34;
      *(_QWORD *)(a2 + v35[10]) = 0;
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v35 - 1) + 56))(a2, 0, 1, v35);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for AccountStatusSummaryTileFeedItemData()
{
  uint64_t result;

  result = qword_1ED6A3D88;
  if (!qword_1ED6A3D88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AccountStatusSummaryTileFeedItemData.accountId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC62A7B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AccountStatusSummaryTileFeedItemData.brandId.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AccountStatusSummaryTileFeedItemData() + 20));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AccountStatusSummaryTileFeedItemData.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccountStatusSummaryTileFeedItemData() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountStatusSummaryTileFeedItemData.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccountStatusSummaryTileFeedItemData() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountStatusSummaryTileFeedItemData.state.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccountStatusSummaryTileFeedItemData() + 32));
}

uint64_t AccountStatusSummaryTileFeedItemData.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccountStatusSummaryTileFeedItemData() + 36);
  return sub_1BC399F2C(v3, a1);
}

uint64_t AccountStatusSummaryTileFeedItemData.accounts.getter()
{
  type metadata accessor for AccountStatusSummaryTileFeedItemData();
  return swift_bridgeObjectRetain();
}

uint64_t AccountStatusSummaryTileFeedItemData.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  char *v15;

  v3 = sub_1BC62B918();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v15 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1ED6A3D50, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  sub_1BC62A7B4();
  sub_1BC347F0C((unint64_t *)&qword_1ED6A4E38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC62C5CC();
  v10 = type metadata accessor for AccountStatusSummaryTileFeedItemData();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D67C();
  sub_1BC399F2C(v1 + *(int *)(v10 + 36), (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_1BC62D688();
  }
  else
  {
    v11 = v15;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v15, v9, v3);
    sub_1BC62D688();
    sub_1BC347F0C(&qword_1EF436C18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], MEMORY[0x1E0D2EDF8]);
    sub_1BC62C5CC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
  }
  v12 = *(_QWORD *)(v1 + *(int *)(v10 + 40));
  if (!v12)
    return sub_1BC62D688();
  sub_1BC62D688();
  swift_bridgeObjectRetain();
  sub_1BC4FD318(a1, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC56CEB4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC56CEE8 + 4 * byte_1BC648230[*v0]))(0x49746E756F636361, 0xE900000000000064);
}

uint64_t sub_1BC56CEE8()
{
  return 0x6449646E617262;
}

uint64_t sub_1BC56CF00()
{
  return 0x656C746974;
}

uint64_t sub_1BC56CF14()
{
  return 0x656C746974627573;
}

uint64_t sub_1BC56CF2C()
{
  return 0x6574617473;
}

uint64_t sub_1BC56CF40()
{
  return 1701869940;
}

uint64_t sub_1BC56CF50()
{
  return 0x73746E756F636361;
}

uint64_t sub_1BC56CF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC56EFF0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC56CF8C(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1BC56CF98()
{
  sub_1BC56E080();
  return sub_1BC62D700();
}

uint64_t sub_1BC56CFC0()
{
  sub_1BC56E080();
  return sub_1BC62D70C();
}

uint64_t AccountStatusSummaryTileFeedItemData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v1;
  sub_1BC56E108(0, &qword_1EF436C20, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC56E080();
  sub_1BC62D6F4();
  LOBYTE(v18) = 0;
  sub_1BC62A7B4();
  sub_1BC347F0C(qword_1EF429C80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1BC62D4FC();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *v11;
    v14 = *((_QWORD *)v11 + 2);
    v13 = *((_QWORD *)v11 + 3);
    v18 = v12;
    v19 = v14;
    v20 = v13;
    v17 = 1;
    sub_1BC56E0C4();
    sub_1BC62D4FC();
    LOBYTE(v18) = 2;
    sub_1BC62D4D8();
    LOBYTE(v18) = 3;
    sub_1BC62D4D8();
    *(_QWORD *)&v18 = *(_QWORD *)(v3 + v10[8]);
    v17 = 4;
    type metadata accessor for HKClinicalAccountState(0);
    sub_1BC347F0C(&qword_1EF436C38, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalAccountState, (uint64_t)&protocol conformance descriptor for HKClinicalAccountState);
    sub_1BC62D4FC();
    LOBYTE(v18) = 5;
    sub_1BC62B918();
    sub_1BC347F0C(&qword_1EF436C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], MEMORY[0x1E0D2EDF0]);
    sub_1BC62D4CC();
    *(_QWORD *)&v18 = *(_QWORD *)(v3 + v10[10]);
    v17 = 6;
    sub_1BC357158(0, &qword_1EF436C48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC56E204(&qword_1EF436C50, qword_1EF429C80, MEMORY[0x1E0CB09B8], MEMORY[0x1E0DEAF10]);
    sub_1BC62D4CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t AccountStatusSummaryTileFeedItemData.hashValue.getter()
{
  _BYTE v1[72];

  sub_1BC62D670();
  AccountStatusSummaryTileFeedItemData.hash(into:)((uint64_t)v1);
  return sub_1BC62D6AC();
}

uint64_t AccountStatusSummaryTileFeedItemData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v29 = a2;
  sub_1BC357158(0, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v28 - v4;
  v31 = sub_1BC62A7B4();
  v5 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v32 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC56E108(0, &qword_1EF436C58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v33 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - v9;
  v11 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1BC56E080();
  v34 = v10;
  v14 = v35;
  sub_1BC62D6DC();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v28 = v8;
  LOBYTE(v36) = 0;
  sub_1BC347F0C(&qword_1EF429C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v15 = v31;
  v16 = v32;
  sub_1BC62D490();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v16, v15);
  v39 = 1;
  sub_1BC56E164();
  sub_1BC62D490();
  v17 = v37;
  v18 = v38;
  v19 = &v13[v11[5]];
  *(_OWORD *)v19 = v36;
  *((_QWORD *)v19 + 2) = v17;
  *((_QWORD *)v19 + 3) = v18;
  LOBYTE(v36) = 2;
  v20 = sub_1BC62D46C();
  v21 = (uint64_t *)&v13[v11[6]];
  *v21 = v20;
  v21[1] = v22;
  LOBYTE(v36) = 3;
  v23 = sub_1BC62D46C();
  v24 = (uint64_t *)&v13[v11[7]];
  *v24 = v23;
  v24[1] = v25;
  type metadata accessor for HKClinicalAccountState(0);
  v39 = 4;
  sub_1BC347F0C(&qword_1EF436C68, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalAccountState, (uint64_t)&protocol conformance descriptor for HKClinicalAccountState);
  sub_1BC62D490();
  *(_QWORD *)&v13[v11[8]] = v36;
  sub_1BC62B918();
  LOBYTE(v36) = 5;
  sub_1BC347F0C(&qword_1EF436C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], MEMORY[0x1E0D2EE08]);
  v26 = (uint64_t)v30;
  sub_1BC62D460();
  sub_1BC56E1A8(v26, (uint64_t)&v13[v11[9]]);
  sub_1BC357158(0, &qword_1EF436C48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v39 = 6;
  sub_1BC56E204(&qword_1EF436C78, &qword_1EF429C70, MEMORY[0x1E0CB09E0], MEMORY[0x1E0DEAF40]);
  sub_1BC62D460();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v33);
  *(_QWORD *)&v13[v11[10]] = v36;
  sub_1BC39A1DC((uint64_t)v13, v29);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_1BC348D78((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for AccountStatusSummaryTileFeedItemData);
}

uint64_t sub_1BC56D8D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AccountStatusSummaryTileFeedItemData.init(from:)(a1, a2);
}

uint64_t sub_1BC56D8EC(_QWORD *a1)
{
  return AccountStatusSummaryTileFeedItemData.encode(to:)(a1);
}

uint64_t sub_1BC56D900()
{
  _BYTE v1[72];

  sub_1BC62D670();
  AccountStatusSummaryTileFeedItemData.hash(into:)((uint64_t)v1);
  return sub_1BC62D6AC();
}

uint64_t sub_1BC56D940()
{
  _BYTE v1[72];

  sub_1BC62D670();
  AccountStatusSummaryTileFeedItemData.hash(into:)((uint64_t)v1);
  return sub_1BC62D6AC();
}

uint64_t AccountStatusSummaryTileFeedItemData.init(accountId:type:accounts:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v8 = sub_1BC62A7B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a1, v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  v13 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
  v14 = a4 + v13[9];
  v15 = sub_1BC62B918();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v14, a2, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v12, v8);
  v18 = (_QWORD *)(a4 + v13[5]);
  *v18 = 1162760014;
  v18[1] = 0xE400000000000000;
  v18[2] = 1162760014;
  v18[3] = 0xE400000000000000;
  v19 = (_QWORD *)(a4 + v13[6]);
  *v19 = 0xD000000000000019;
  v19[1] = 0x80000001BC664260;
  v20 = (_QWORD *)(a4 + v13[7]);
  *v20 = 0;
  v20[1] = 0xE000000000000000;
  *(_QWORD *)(a4 + v13[8]) = 3;
  *(_QWORD *)(a4 + v13[10]) = a3;
  return result;
}

uint64_t sub_1BC56DAEC()
{
  sub_1BC347F0C(&qword_1EF436CA0, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalAccountState, (uint64_t)&unk_1BC6379DC);
  return sub_1BC62C854();
}

uint64_t sub_1BC56DB60()
{
  sub_1BC347F0C(&qword_1EF436CA0, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalAccountState, (uint64_t)&unk_1BC6379DC);
  return sub_1BC62C83C();
}

uint64_t _s15HealthRecordsUI36AccountStatusSummaryTileFeedItemDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  uint64_t result;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  char *v54;
  char v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  int *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;

  v4 = sub_1BC62B918();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC399EBC();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC357158(0, &qword_1ED6A3D50, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v64 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v64 - v20;
  if ((sub_1BC62A790() & 1) == 0)
    return 0;
  v65 = v8;
  v66 = v15;
  v68 = v6;
  v69 = v12;
  v67 = v4;
  v22 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
  v23 = v22[5];
  v24 = *(_QWORD *)(a1 + v23);
  v25 = *(_QWORD *)(a1 + v23 + 8);
  v27 = *(_QWORD *)(a1 + v23 + 16);
  v26 = *(_QWORD *)(a1 + v23 + 24);
  v28 = (_QWORD *)(a2 + v23);
  v29 = v28[2];
  v30 = v28[3];
  v31 = v24 == *v28 && v25 == v28[1];
  if (v31 || (v32 = sub_1BC62D574(), result = 0, (v32 & 1) != 0))
  {
    if (v27 == v29 && v26 == v30 || (v34 = sub_1BC62D574(), result = 0, (v34 & 1) != 0))
    {
      if ((v35 = v22[6],
            v36 = *(_QWORD *)(a1 + v35),
            v37 = *(_QWORD *)(a1 + v35 + 8),
            v38 = (_QWORD *)(a2 + v35),
            v36 == *v38)
        && v37 == v38[1]
        || (v39 = sub_1BC62D574(), result = 0, (v39 & 1) != 0))
      {
        if ((v40 = v22[7],
              v41 = *(_QWORD *)(a1 + v40),
              v42 = *(_QWORD *)(a1 + v40 + 8),
              v43 = (_QWORD *)(a2 + v40),
              v41 == *v43)
          && v42 == v43[1]
          || (v44 = sub_1BC62D574(), result = 0, (v44 & 1) != 0))
        {
          if (*(_QWORD *)(a1 + v22[8]) == *(_QWORD *)(a2 + v22[8]))
          {
            sub_1BC399F2C(a1 + v22[9], (uint64_t)v21);
            sub_1BC399F2C(a2 + v22[9], (uint64_t)v18);
            v45 = (uint64_t)v69;
            v46 = (uint64_t)&v69[*(int *)(v10 + 48)];
            sub_1BC399F2C((uint64_t)v21, (uint64_t)v69);
            sub_1BC399F2C((uint64_t)v18, v46);
            v47 = v67;
            v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
            if (v48(v45, 1, v67) == 1)
            {
              v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0];
              sub_1BC377E3C((uint64_t)v18, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
              sub_1BC377E3C((uint64_t)v21, &qword_1ED6A3D50, v49);
              if (v48(v46, 1, v47) == 1)
              {
                sub_1BC377E3C((uint64_t)v69, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
                goto LABEL_26;
              }
              goto LABEL_22;
            }
            v50 = (uint64_t)v66;
            sub_1BC399F2C(v45, (uint64_t)v66);
            if (v48(v46, 1, v47) == 1)
            {
              v51 = v50;
              v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0];
              sub_1BC377E3C((uint64_t)v18, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
              sub_1BC377E3C((uint64_t)v21, &qword_1ED6A3D50, v52);
              (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v51, v47);
LABEL_22:
              sub_1BC348D78((uint64_t)v69, (uint64_t (*)(_QWORD))sub_1BC399EBC);
              return 0;
            }
            v64 = v22;
            v53 = v68;
            v54 = v65;
            (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v65, v46, v47);
            sub_1BC347F0C((unint64_t *)&qword_1EF42B2D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], MEMORY[0x1E0D2EE00]);
            v55 = sub_1BC62C644();
            v56 = v47;
            v57 = *(void (**)(char *, uint64_t))(v53 + 8);
            v22 = v64;
            v57(v54, v56);
            v58 = (uint64_t)v18;
            v59 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0];
            sub_1BC377E3C(v58, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0]);
            sub_1BC377E3C((uint64_t)v21, &qword_1ED6A3D50, v59);
            v57(v66, v56);
            sub_1BC377E3C(v45, &qword_1ED6A3D50, v59);
            if ((v55 & 1) != 0)
            {
LABEL_26:
              v60 = v22[10];
              v61 = *(_QWORD *)(a2 + v60);
              if (*(_QWORD *)(a1 + v60))
              {
                if (v61)
                {
                  swift_bridgeObjectRetain();
                  v62 = swift_bridgeObjectRetain();
                  v63 = sub_1BC3ED360(v62, v61);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v63 & 1) != 0)
                    return 1;
                }
              }
              else if (!v61)
              {
                return 1;
              }
            }
          }
          return 0;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1BC56E080()
{
  unint64_t result;

  result = qword_1EF436C28;
  if (!qword_1EF436C28)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC6484C4, &type metadata for AccountStatusSummaryTileFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF436C28);
  }
  return result;
}

unint64_t sub_1BC56E0C4()
{
  unint64_t result;

  result = qword_1EF436C30;
  if (!qword_1EF436C30)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for BrandIdentifier, &type metadata for BrandIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EF436C30);
  }
  return result;
}

void sub_1BC56E108(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC56E080();
    v7 = a3(a1, &type metadata for AccountStatusSummaryTileFeedItemData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BC56E164()
{
  unint64_t result;

  result = qword_1EF436C60;
  if (!qword_1EF436C60)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for BrandIdentifier, &type metadata for BrandIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EF436C60);
  }
  return result;
}

uint64_t sub_1BC56E1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC357158(0, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC56E204(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = *a1;
  if (!result)
  {
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC357158(255, &qword_1EF436C48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v11 = v10;
    v12 = sub_1BC347F0C(a2, v9, a3);
    result = MEMORY[0x1BCCF35C4](a4, v11, &v12);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC56E29C()
{
  return sub_1BC347F0C(&qword_1EF436C80, (uint64_t (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemData, (uint64_t)&protocol conformance descriptor for AccountStatusSummaryTileFeedItemData);
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountStatusSummaryTileFeedItemData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC62A7B4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = v11[3];
    v10[2] = v11[2];
    v10[3] = v13;
    v14 = (uint64_t *)((char *)a1 + v9);
    v15 = (uint64_t *)((char *)a2 + v9);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[7];
    v18 = a3[8];
    v19 = (uint64_t *)((char *)a1 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = *v20;
    v22 = v20[1];
    v23 = *(uint64_t *)((char *)a2 + v18);
    *v19 = v21;
    v19[1] = v22;
    *(uint64_t *)((char *)a1 + v18) = v23;
    v24 = a3[9];
    __dst = (char *)a1 + v24;
    v25 = (char *)a2 + v24;
    v26 = sub_1BC62B918();
    v27 = *(_QWORD *)(v26 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31(v25, 1, v26))
    {
      sub_1BC357158(0, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
    }
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 36);
  v6 = sub_1BC62B918();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  void *__dst;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  v13 = (_QWORD *)(a1 + v8);
  v14 = (_QWORD *)(a2 + v8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (uint64_t *)(a2 + v16);
  v20 = *v19;
  v21 = v19[1];
  v22 = *(_QWORD *)(a2 + v17);
  *v18 = v20;
  v18[1] = v21;
  *(_QWORD *)(a1 + v17) = v22;
  v23 = a3[9];
  __dst = (void *)(a1 + v23);
  v24 = (const void *)(a2 + v23);
  v25 = sub_1BC62B918();
  v26 = *(_QWORD *)(v25 - 8);
  v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v24, 1, v25))
  {
    sub_1BC357158(0, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(__dst, v24, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
  }
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = *(_QWORD *)(v9 + 16);
  v8[3] = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = sub_1BC62B918();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    sub_1BC357158(0, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_7:
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_OWORD *)(a2 + v7);
  v10 = *(_OWORD *)(a2 + v7 + 16);
  v11 = (_OWORD *)(a1 + v7);
  *v11 = v9;
  v11[1] = v10;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[9];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_1BC62B918();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1BC357158(0, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;

  v6 = sub_1BC62A7B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  v8[2] = *(_QWORD *)(v9 + 16);
  v8[3] = v11;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v23 = (void *)(a1 + v22);
  v24 = (void *)(a2 + v22);
  v25 = sub_1BC62B918();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    sub_1BC357158(0, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountStatusSummaryTileFeedItemData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC56EBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1BC62A7B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    sub_1BC357158(0, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v8 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountStatusSummaryTileFeedItemData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC56ECC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_1BC62A7B4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    sub_1BC357158(0, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1BC56ED84()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC62A7B4();
  if (v0 <= 0x3F)
  {
    sub_1BC357158(319, &qword_1ED6A3D50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2EDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for AccountStatusSummaryTileFeedItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BC56EE98 + 4 * byte_1BC64823C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BC56EECC + 4 * byte_1BC648237[v4]))();
}

uint64_t sub_1BC56EECC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC56EED4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC56EEDCLL);
  return result;
}

uint64_t sub_1BC56EEE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC56EEF0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BC56EEF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC56EEFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountStatusSummaryTileFeedItemData.CodingKeys()
{
  return &type metadata for AccountStatusSummaryTileFeedItemData.CodingKeys;
}

unint64_t sub_1BC56EF1C()
{
  unint64_t result;

  result = qword_1EF436C88;
  if (!qword_1EF436C88)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64849C, &type metadata for AccountStatusSummaryTileFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF436C88);
  }
  return result;
}

unint64_t sub_1BC56EF64()
{
  unint64_t result;

  result = qword_1EF436C90;
  if (!qword_1EF436C90)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC64840C, &type metadata for AccountStatusSummaryTileFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF436C90);
  }
  return result;
}

unint64_t sub_1BC56EFAC()
{
  unint64_t result;

  result = qword_1EF436C98;
  if (!qword_1EF436C98)
  {
    result = MEMORY[0x1BCCF35C4](&unk_1BC648434, &type metadata for AccountStatusSummaryTileFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF436C98);
  }
  return result;
}

uint64_t sub_1BC56EFF0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000064;
  if (v2 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449646E617262 && a2 == 0xE700000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1BC62D574() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73746E756F636361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BC62D574();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

id NSAttributedString.init(leadingImage:text:font:displayScale:imageTintColor:textColor:adjustsImageSizeForAccessibilityContentSizeCategory:)(void *a1, double a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, char a8)
{
  id v14;
  void *v15;
  id v16;

  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v15 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithLeadingImage_text_font_displayScale_imageTintColor_textColor_adjustsImageSizeForAccessibilityContentSizeCategory_, a1, v15, a5, a6, a7, a8 & 1, a2);

  return v16;
}

id NSAttributedString.init(image:font:displayScale:tintColor:adjustsImageSizeForAccessibilityContentSizeCategory:)(void *a1, void *a2, void *a3, char a4, double a5)
{
  id v8;

  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithImage_font_displayScale_tintColor_adjustsImageSizeForAccessibilityContentSizeCategory_, a1, a2, a3, a4 & 1, a5);

  return v8;
}

id sub_1BC56F418(double a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void *a7, void *a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;

  v13 = sub_1BC62C680();
  v15 = v14;
  v16 = a4;
  v17 = a6;
  v18 = a7;
  return _sSo18NSAttributedStringC15HealthRecordsUIE12leadingImage4text4font12displayScale14imageTintColor0hN007adjustsg27SizeForAccessibilityContentP8CategoryABSo7UIImageC_SSSo6UIFontC12CoreGraphics7CGFloatVSo7UIColorCSgASSbtcfc_0(v16, a1, v13, v15, v17, a7, a8);
}

id NSAttributedString.init(image:font:displayScale:tintColor:adjustsImageSizeForAccessibilityContentSizeCategory:)(void *a1, void *a2, void *a3, char a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void (*v15)(char *, _QWORD, uint64_t);
  double v16;
  double v17;
  double v18;
  double v19;
  void (*v20)(char *, uint64_t);
  double v21;
  double v22;
  double v23;
  double v24;
  void *ObjCClassFromMetadata;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v33;

  v5 = v4;
  v10 = sub_1BC62D55C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, a1);
  objc_msgSend(v14, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, a4 & 1);
  objc_msgSend(a2, sel_descender);
  v15 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
  v15(v13, *MEMORY[0x1E0DED508], v10);
  sub_1BC62A994();
  v17 = v16;
  sub_1BC62A994();
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v13, v10);
  objc_msgSend(a1, sel_size);
  objc_msgSend(a1, sel_size);
  objc_msgSend(a2, sel_lineHeight);
  objc_msgSend(a2, sel_lineHeight);
  v15(v13, *MEMORY[0x1E0DED500], v10);
  sub_1BC62A994();
  v22 = v21;
  sub_1BC62A994();
  v24 = v23;
  v20(v13, v10);
  objc_msgSend(v14, sel_setBounds_, v17, v19, v22, v24);
  if (a3)
  {
    sub_1BC34B6A0(0, &qword_1EF436CA8);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v26 = a3;
    v27 = objc_msgSend(ObjCClassFromMetadata, sel_attributedStringWithAttachment_, v14);
    v28 = *MEMORY[0x1E0DC1140];
    v29 = v26;
    objc_msgSend(v27, sel_addAttribute_value_range_, v28, v29, 0, objc_msgSend(v27, sel_length));

    v30 = objc_msgSend(v5, sel_initWithAttributedString_, v27);
    v31 = a1;
    v14 = a2;
    a1 = v29;
    a2 = v29;
  }
  else
  {
    v31 = objc_msgSend((id)objc_opt_self(), sel_attributedStringWithAttachment_, v14);
    v30 = objc_msgSend(v5, sel_initWithAttributedString_, v31);
  }

  return v30;
}

id sub_1BC56F7C8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, char a6)
{
  id v9;
  id v10;
  id v11;

  v9 = a3;
  v10 = a4;
  v11 = a5;
  return NSAttributedString.init(image:font:displayScale:tintColor:adjustsImageSizeForAccessibilityContentSizeCategory:)(v9, v10, a5, a6);
}

id sub_1BC56F83C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v9 = sub_1BC62C680();
  v11 = v10;
  v12 = a4;
  v13 = a5;
  v14 = a6;
  v15 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v9, v11, a4, a5, a6);

  swift_bridgeObjectRelease();
  return v15;
}

id _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v6;
  id v7;
  id v8;
  id v9;
  void **v10;
  uint64_t inited;
  void *v12;
  id v13;
  id v14;
  unint64_t v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;

  if (a4)
  {
    v6 = a4;
    v7 = objc_msgSend(v6, sel_imageWithRenderingMode_, 2);
    v8 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v7);

    sub_1BC34B6A0(0, &qword_1EF436CA8);
    v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v8);
    v10 = (void **)MEMORY[0x1E0DC1140];
    if (a3)
    {
      sub_1BC38DB44(0, &qword_1EF436CB0, (void (*)(uint64_t))sub_1BC56FF54);
      v33 = v6;
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BC639590;
      v12 = *v10;
      *(_QWORD *)(inited + 32) = *v10;
      *(_QWORD *)(inited + 40) = a3;
      v13 = a3;
      v14 = v12;
      v15 = sub_1BC35C3C4(inited);
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      sub_1BC372458(v15);
      swift_bridgeObjectRelease();
      v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v17 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1BC34B608();
      v18 = (void *)sub_1BC62C53C();
      swift_bridgeObjectRelease();
      v19 = v16;
      v6 = v33;
      v20 = objc_msgSend(v19, sel_initWithString_attributes_, v17, v18);

      v21 = a5;
      if (!a5)
      {
LABEL_5:
        objc_msgSend(v9, sel_appendAttributedString_, v20);

        return v9;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BC62C764();
      swift_bridgeObjectRelease();
      v31 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v32 = (void *)sub_1BC62C650();
      swift_bridgeObjectRelease();
      v20 = objc_msgSend(v31, sel_initWithString_, v32);

      v21 = a5;
      if (!a5)
        goto LABEL_5;
    }
    sub_1BC38DB44(0, (unint64_t *)&qword_1EF4383B0, (void (*)(uint64_t))sub_1BC34B5A0);
    v22 = swift_initStackObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BC639590;
    v23 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(v22 + 32) = *MEMORY[0x1E0DC1140];
    *(_QWORD *)(v22 + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
    *(_QWORD *)(v22 + 40) = v21;
    v24 = v21;
    v25 = v23;
    sub_1BC35B6B4(v22);
    type metadata accessor for Key(0);
    sub_1BC34B608();
    v26 = (void *)sub_1BC62C53C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_addAttributes_range_, v26, 0, objc_msgSend(v9, sel_length));

    goto LABEL_5;
  }
  v28 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v29 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v28, sel_initWithString_, v29);

  return v30;
}

id _sSo18NSAttributedStringC15HealthRecordsUIE12leadingImage4text4font12displayScale14imageTintColor0hN007adjustsg27SizeForAccessibilityContentP8CategoryABSo7UIImageC_SSSo6UIFontC12CoreGraphics7CGFloatVSo7UIColorCSgASSbtcfc_0(void *a1, double a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  void *v7;
  void *v8;
  id v14;
  uint64_t inited;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;

  v8 = v7;
  sub_1BC34B6A0(0, &qword_1EF436CA8);
  v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithImage_font_displayScale_tintColor_adjustsImageSizeForAccessibilityContentSizeCategory_, a1, a5, a6, 1, a2);
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  sub_1BC38DB44(0, (unint64_t *)&qword_1EF4383B0, (void (*)(uint64_t))sub_1BC34B5A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC639590;
  v16 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = sub_1BC34B6A0(0, (unint64_t *)&qword_1ED6A5970);
  *(_QWORD *)(inited + 40) = a7;
  v17 = v16;
  v18 = a7;
  sub_1BC35B6B4(inited);
  v19 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v20 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC34B608();
  v21 = (void *)sub_1BC62C53C();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

  objc_msgSend(v14, sel_appendAttributedString_, v22);
  v23 = *MEMORY[0x1E0DC1138];
  v24 = a5;
  objc_msgSend(v14, sel_addAttribute_value_range_, v23, v24, 0, objc_msgSend(v14, sel_length));

  v25 = objc_msgSend(v8, sel_initWithAttributedString_, v14);
  return v25;
}

void sub_1BC56FF54()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF436CB8)
  {
    type metadata accessor for Key(255);
    sub_1BC34B6A0(255, (unint64_t *)&qword_1ED6A5970);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF436CB8);
  }
}

CGSize __swiftcall CGSize.inset(by:)(UIEdgeInsets by)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  CGSize result;

  v3 = v1 - by.left - by.right;
  v4 = v2 - by.top - by.bottom;
  v5 = v3;
  result.height = v4;
  result.width = v5;
  return result;
}

double CGSize.rounded(_:toScaleOf:)(int a1, id a2)
{
  double v3;
  double v4;

  objc_msgSend(a2, sel_displayScale);
  sub_1BC62A994();
  v4 = v3;
  objc_msgSend(a2, sel_displayScale);
  sub_1BC62A994();
  return v4;
}

{
  id v3;
  double v4;
  double v5;
  id v6;

  v3 = objc_msgSend(a2, sel_traitCollection);
  sub_1BC62A9A0();
  v5 = v4;

  v6 = objc_msgSend(a2, sel_traitCollection);
  sub_1BC62A9A0();

  return v5;
}

CGSize __swiftcall CGSize.outset(by:)(NSDirectionalEdgeInsets by)
{
  double v1;
  double v2;
  CGFloat v3;
  double v4;
  double v5;
  CGSize result;

  v3 = by.leading + v1 + by.trailing;
  v4 = by.top + v2 + by.bottom;
  v5 = v3;
  result.height = v4;
  result.width = v5;
  return result;
}

double CGSize.rounded(_:toScale:)()
{
  double v0;
  double v1;

  sub_1BC62A994();
  v1 = v0;
  sub_1BC62A994();
  return v1;
}

double static CGSize.maxDimension.getter()
{
  return 1.79769313e308;
}

double static CGSize.maxSize.getter()
{
  return 1.79769313e308;
}

double CGSize.maxDimension.getter(double result, double a2)
{
  if (result <= a2)
    return a2;
  return result;
}

Swift::Bool __swiftcall CGSize.contains(_:)(CGSize a1)
{
  double v1;
  double v2;

  return a1.height <= v2 && a1.width <= v1;
}

BOOL CGSize.isZero.getter(double a1, double a2)
{
  return a2 == 0.0 && a1 == 0.0;
}

CGSize __swiftcall CGSize.scaled(for:)(UIFont a1)
{
  double v1;
  double v2;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  CGSize result;

  v2 = v1;
  -[objc_class _scaledValueForValue:](a1.super.isa, sel__scaledValueForValue_);
  v5 = v4;
  -[objc_class _scaledValueForValue:](a1.super.isa, sel__scaledValueForValue_, v2);
  v7 = v6;
  v8 = v5;
  result.height = v7;
  result.width = v8;
  return result;
}

uint64_t TransientConceptType.hash(into:)()
{
  return sub_1BC62D67C();
}

BOOL static TransientConceptType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TransientConceptType.hashValue.getter()
{
  sub_1BC62D670();
  sub_1BC62D67C();
  return sub_1BC62D6AC();
}

uint64_t TransientConceptForChart.uniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void TransientConceptForChart.conceptType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t TransientConceptForChart.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransientConceptForChart.chartsBloodPressure.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t TransientConceptForChart.hidesOutOfRangeFilter.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

void __swiftcall TransientConceptForChart.init(conceptIdentifier:conceptType:displayName:chartsBloodPressure:hidesOutOfRangeFilter:)(HealthRecordsUI::TransientConceptForChart *__return_ptr retstr, Swift::String conceptIdentifier, HealthRecordsUI::TransientConceptType conceptType, Swift::String displayName, Swift::Bool chartsBloodPressure, Swift::Bool hidesOutOfRangeFilter)
{
  HealthRecordsUI::TransientConceptType v6;

  v6 = *(_BYTE *)conceptType;
  retstr->conceptIdentifier = conceptIdentifier;
  retstr->conceptType = v6;
  retstr->displayName = displayName;
  retstr->chartsBloodPressure = chartsBloodPressure;
  retstr->hidesOutOfRangeFilter = hidesOutOfRangeFilter;
}

uint64_t TransientConceptForChart.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D67C();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D688();
  return sub_1BC62D688();
}

uint64_t TransientConceptForChart.hashValue.getter()
{
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D67C();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D688();
  sub_1BC62D688();
  return sub_1BC62D6AC();
}

uint64_t sub_1BC5704A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC5704CC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t sub_1BC5704DC()
{
  sub_1BC62D670();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D67C();
  swift_bridgeObjectRetain();
  sub_1BC62C740();
  swift_bridgeObjectRelease();
  sub_1BC62D688();
  sub_1BC62D688();
  return sub_1BC62D6AC();
}

uint64_t _s15HealthRecordsUI24TransientConceptForChartV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  char v12;
  uint64_t result;
  char v14;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 41);
  v7 = *(unsigned __int8 *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(unsigned __int8 *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 41);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v2 != v7)
      return 0;
  }
  else
  {
    v12 = sub_1BC62D574();
    result = 0;
    if ((v12 & 1) == 0 || v2 != v7)
      return result;
  }
  if (v3 == v8 && v4 == v9)
  {
    if (v5 != v10)
      return 0;
    return v6 ^ v11 ^ 1u;
  }
  v14 = sub_1BC62D574();
  result = 0;
  if ((v14 & 1) != 0 && ((v5 ^ v10) & 1) == 0)
    return v6 ^ v11 ^ 1u;
  return result;
}

unint64_t sub_1BC57069C()
{
  unint64_t result;

  result = qword_1EF436CC0;
  if (!qword_1EF436CC0)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for TransientConceptType, &type metadata for TransientConceptType);
    atomic_store(result, (unint64_t *)&qword_1EF436CC0);
  }
  return result;
}

unint64_t sub_1BC5706E4()
{
  unint64_t result;

  result = qword_1EF436CC8;
  if (!qword_1EF436CC8)
  {
    result = MEMORY[0x1BCCF35C4](&protocol conformance descriptor for TransientConceptForChart, &type metadata for TransientConceptForChart);
    atomic_store(result, (unint64_t *)&qword_1EF436CC8);
  }
  return result;
}

uint64_t dispatch thunk of MedicalRecordChartDefining.displayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicalRecordChartDefining.chartsBloodPressure.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MedicalRecordChartDefining.hidesOutOfRangeFilter.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MedicalRecordChartDefining.uniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t storeEnumTagSinglePayload for TransientConceptType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC570794 + 4 * byte_1BC648525[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC5707C8 + 4 * byte_1BC648520[v4]))();
}

uint64_t sub_1BC5707C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC5707D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC5707D8);
  return result;
}

uint64_t sub_1BC5707E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC5707ECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC5707F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC5707F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransientConceptType()
{
  return &type metadata for TransientConceptType;
}

uint64_t destroy for TransientConceptForChart()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TransientConceptForChart(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransientConceptForChart(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TransientConceptForChart(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransientConceptForChart(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 42))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransientConceptForChart(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 42) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransientConceptForChart()
{
  return &type metadata for TransientConceptForChart;
}

uint64_t dispatch thunk of MedicalRecordChartPointRepresentable.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicalRecordChartPointRepresentable.conceptForChart.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MedicalRecordChartPointRepresentable.recordCategoryType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MedicalRecordChartPointRepresentable.chartableCodedQuantitySet()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t static RecordTitleWithSubtitleView.reuseIdentifier.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = qword_1EF436CD0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static RecordTitleWithSubtitleView.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  qword_1EF436CD0 = a1;
  qword_1EF436CD8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static RecordTitleWithSubtitleView.reuseIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1BC570B2C()
{
  return sub_1BC570B8C(&OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___recordsHeadingLabel, MEMORY[0x1E0DC4B58], 32770, (SEL *)&selRef_labelColor);
}

id sub_1BC570B4C()
{
  return sub_1BC570B8C(&OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___titleLabel, MEMORY[0x1E0DC4B60], 32770, (SEL *)&selRef_labelColor);
}

id sub_1BC570B6C()
{
  return sub_1BC570B8C(&OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___subtitleLabel, MEMORY[0x1E0DC4B10], 0x8000, (SEL *)&selRef_secondaryLabelColor);
}

id sub_1BC570B8C(uint64_t *a1, id *a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;

  v5 = *a1;
  v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    v7 = *(id *)(v4 + *a1);
  }
  else
  {
    v10 = v4;
    v11 = objc_msgSend(objc_allocWithZone((Class)sub_1BC62AE44()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v11, sel_setNumberOfLines_, 0);
    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v12 = *a2;
    sub_1BC62AE38();
    sub_1BC62AE2C();
    v13 = (void *)objc_opt_self();
    v7 = v11;
    v14 = objc_msgSend(v13, *a4);
    objc_msgSend(v7, sel_setTextColor_, v14);

    v15 = *(void **)(v10 + v5);
    *(_QWORD *)(v10 + v5) = v7;

    v6 = 0;
  }
  v16 = v6;
  return v7;
}

uint64_t sub_1BC570C9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _OWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v14[5];

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1BC37ADB0(v3, (uint64_t)v14);
  if (v14[3])
  {
    sub_1BC37AE0C();
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v5 = v10[1];
      v6 = v10[2];
      v7 = v11;
      v8 = v12;
      v9 = v13;
      *(_OWORD *)a1 = v10[0];
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 32) = v6;
      *(_QWORD *)(a1 + 48) = v7;
      *(_QWORD *)(a1 + 56) = v8;
      *(_BYTE *)(a1 + 64) = v9;
      return result;
    }
  }
  else
  {
    sub_1BC37AE60((uint64_t)v14);
  }
  *(_QWORD *)&v10[0] = 0;
  *((_QWORD *)&v10[0] + 1) = 0xE000000000000000;
  sub_1BC62D1D8();
  swift_bridgeObjectRelease();
  v14[0] = 0xD000000000000026;
  v14[1] = 0x80000001BC664320;
  sub_1BC37ADB0(v3, (uint64_t)v10);
  sub_1BC3A0AB8();
  sub_1BC62C6F8();
  sub_1BC62C764();
  swift_bridgeObjectRelease();
  result = sub_1BC62D394();
  __break(1u);
  return result;
}

uint64_t sub_1BC570DF4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC37ADB0(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1BC384E14((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC570E64();
  return sub_1BC37AE60((uint64_t)v5);
}

id sub_1BC570E64()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  char v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id result;
  _QWORD v16[2];
  char v17;
  _QWORD v18[6];

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item];
  swift_beginAccess();
  sub_1BC37ADB0(v1, (uint64_t)v18);
  if (!v18[3])
  {
    sub_1BC37AE60((uint64_t)v18);
    goto LABEL_10;
  }
  sub_1BC37AE0C();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_1BC62D1D8();
    swift_bridgeObjectRelease();
    v18[0] = 0xD000000000000026;
    v18[1] = 0x80000001BC664320;
    sub_1BC37ADB0(v1, (uint64_t)v16);
    sub_1BC3A0AB8();
    sub_1BC62C6F8();
    sub_1BC62C764();
    swift_bridgeObjectRelease();
    result = (id)sub_1BC62D394();
    __break(1u);
    return result;
  }
  v2 = sub_1BC570B2C();
  v3 = v2;
  if (v17 == 1)
  {
    if (qword_1ED6A4888 != -1)
      swift_once();
    v4 = (id)qword_1ED6A5528;
    swift_bridgeObjectRetain();
    sub_1BC62A4A8();
    swift_bridgeObjectRelease();

    v5 = sub_1BC62C650();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setText_, v5, 0xE000000000000000);

    v6 = 1;
    v3 = (void *)v5;
  }
  else
  {
    objc_msgSend(v2, sel_setText_, 0);
    v6 = 0;
  }

  v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_needsToLayoutFirstHeader] = v6;
  v7 = sub_1BC570B4C();
  v8 = (void *)sub_1BC62C650();
  objc_msgSend(v7, sel_setText_, v8);

  v9 = sub_1BC570B6C();
  v10 = (void *)sub_1BC62C650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setText_, v10);

  v11 = (void *)objc_opt_self();
  v12 = OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_deactivateConstraints_, v13);

  *(_QWORD *)&v0[v12] = sub_1BC5719C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v14 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_activateConstraints_, v14);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1BC571228@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC571278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC570E64();
  return sub_1BC37AE60(a1);
}

id (*sub_1BC5712E4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC57132C;
}

id sub_1BC57132C(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC570E64();
  return result;
}

id RecordTitleWithSubtitleView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id RecordTitleWithSubtitleView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  objc_class *v10;
  id v11;
  objc_super v13;

  v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_needsToLayoutFirstHeader] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___recordsHeadingLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints] = MEMORY[0x1E0DEE9D8];
  v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item];
  v10 = (objc_class *)type metadata accessor for RecordTitleWithSubtitleView();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v13.receiver = v4;
  v13.super_class = v10;
  v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC5715A4();

  return v11;
}

uint64_t type metadata accessor for RecordTitleWithSubtitleView()
{
  return objc_opt_self();
}

id sub_1BC5715A4()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v1 = sub_1BC570B2C();
  objc_msgSend(v0, sel_addSubview_, v1);

  v2 = sub_1BC570B4C();
  objc_msgSend(v0, sel_addSubview_, v2);

  v3 = sub_1BC570B6C();
  objc_msgSend(v0, sel_addSubview_, v3);

  v4 = (void *)objc_opt_self();
  v5 = OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_deactivateConstraints_, v6);

  *(_QWORD *)&v0[v5] = sub_1BC5719C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v7);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

void sub_1BC5716E8(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  id v6;
  char v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  objc_super v12;

  v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for RecordTitleWithSubtitleView();
  objc_msgSendSuper2(&v12, sel_traitCollectionDidChange_, a1);
  v4 = objc_msgSend(v2, sel_traitCollection);
  v5 = v4;
  if (!a1)
  {
    if (!v4)
      return;

    goto LABEL_7;
  }
  if (!v4
    || (sub_1BC34B6A0(0, &qword_1ED6A58F8),
        v6 = a1,
        v7 = sub_1BC62CEB4(),
        v6,
        v6,
        v5,
        (v7 & 1) == 0))
  {
LABEL_7:
    v8 = (void *)objc_opt_self();
    v9 = OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints;
    sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_deactivateConstraints_, v10);

    *(_QWORD *)&v2[v9] = sub_1BC5719C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1BC62C86C();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_activateConstraints_, v11);

    objc_msgSend(v2, sel_setNeedsLayout);
  }
}

id sub_1BC5718D8()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = (void *)objc_opt_self();
  v2 = OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints;
  sub_1BC34B6A0(0, (unint64_t *)&qword_1EF4290A0);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  *(_QWORD *)&v0[v2] = sub_1BC5719C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1BC62C86C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v4);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1BC5719C4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;

  v1 = v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_needsToLayoutFirstHeader];
  sub_1BC34D844();
  if (v1 == 1)
  {
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BC63A940;
    v3 = sub_1BC570B2C();
    v4 = objc_msgSend(v3, sel_topAnchor);

    v5 = objc_msgSend(v0, (SEL)&selRef_setCategoriesBySourceAlphaOrdered_ + 4);
    v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, 10.0);

    *(_QWORD *)(v2 + 32) = v6;
    v7 = sub_1BC570B2C();
    v8 = objc_msgSend(v7, sel_leadingAnchor);

    v9 = objc_msgSend(v0, sel_leadingAnchor);
    v10 = objc_msgSend(v8, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v9, 2.0);

    *(_QWORD *)(v2 + 40) = v10;
    v11 = objc_msgSend(v0, sel_trailingAnchor);
    v12 = sub_1BC570B2C();
    v13 = objc_msgSend(v12, sel_trailingAnchor);

    v14 = objc_msgSend(v11, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v13, 2.0);
    *(_QWORD *)(v2 + 48) = v14;
    v15 = sub_1BC570B4C();
    v16 = objc_msgSend(v15, (SEL)&selRef_setCategoriesBySourceAlphaOrdered_ + 4);

    v17 = sub_1BC570B2C();
    v18 = objc_msgSend(v17, sel_bottomAnchor);

    v19 = objc_msgSend(v16, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v18, 10.0);
    *(_QWORD *)(v2 + 56) = v19;
    v20 = sub_1BC570B4C();
    v21 = objc_msgSend(v20, sel_leadingAnchor);

    v22 = sub_1BC570B2C();
    v23 = objc_msgSend(v22, sel_leadingAnchor);

    v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
    *(_QWORD *)(v2 + 64) = v24;
    v25 = sub_1BC570B4C();
    v26 = objc_msgSend(v25, sel_trailingAnchor);

    v27 = sub_1BC570B2C();
    v28 = objc_msgSend(v27, sel_trailingAnchor);

    v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v28);
    *(_QWORD *)(v2 + 72) = v29;
    v30 = sub_1BC570B6C();
    v31 = objc_msgSend(v30, sel_topAnchor);

    v32 = sub_1BC570B4C();
    v33 = objc_msgSend(v32, sel_bottomAnchor);

    v34 = objc_msgSend(v31, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v33, 4.0);
    *(_QWORD *)(v2 + 80) = v34;
    v35 = sub_1BC570B6C();
    v36 = objc_msgSend(v35, sel_leadingAnchor);

    v37 = sub_1BC570B4C();
    v38 = objc_msgSend(v37, sel_leadingAnchor);

    v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
    *(_QWORD *)(v2 + 88) = v39;
    v40 = sub_1BC570B6C();
    v41 = objc_msgSend(v40, sel_trailingAnchor);

    v42 = sub_1BC570B4C();
    v43 = objc_msgSend(v42, sel_trailingAnchor);

    v44 = objc_msgSend(v41, sel_constraintLessThanOrEqualToAnchor_, v43);
    *(_QWORD *)(v2 + 96) = v44;
    v45 = objc_msgSend(v0, sel_bottomAnchor);
    v46 = sub_1BC570B6C();
    v47 = objc_msgSend(v46, sel_bottomAnchor);

    v48 = objc_msgSend(v45, (SEL)&selRef_conceptHeaderItemWithCategoryType_title_ + 7, v47, 12.0);
    *(_QWORD *)(v2 + 104) = v48;
  }
  else
  {
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BC63B440;
    v49 = sub_1BC570B4C();
    v50 = objc_msgSend(v49, sel_topAnchor);

    v51 = objc_msgSend(v0, sel_topAnchor);
    v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_constant_, v51, 10.0);

    *(_QWORD *)(v2 + 32) = v52;
    v53 = sub_1BC570B4C();
    v54 = objc_msgSend(v53, sel_leadingAnchor);

    v55 = objc_msgSend(v0, sel_leadingAnchor);
    v56 = objc_msgSend(v54, sel_constraintEqualToAnchor_constant_, v55, 2.0);

    *(_QWORD *)(v2 + 40) = v56;
    v57 = objc_msgSend(v0, sel_trailingAnchor);
    v58 = sub_1BC570B4C();
    v59 = objc_msgSend(v58, sel_trailingAnchor);

    v60 = objc_msgSend(v57, sel_constraintEqualToAnchor_constant_, v59, 2.0);
    *(_QWORD *)(v2 + 48) = v60;
    v61 = sub_1BC570B6C();
    v62 = objc_msgSend(v61, sel_topAnchor);

    v63 = sub_1BC570B4C();
    v64 = objc_msgSend(v63, sel_bottomAnchor);

    v65 = objc_msgSend(v62, sel_constraintEqualToAnchor_constant_, v64, 4.0);
    *(_QWORD *)(v2 + 56) = v65;
    v66 = sub_1BC570B6C();
    v67 = objc_msgSend(v66, sel_leadingAnchor);

    v68 = sub_1BC570B4C();
    v69 = objc_msgSend(v68, sel_leadingAnchor);

    v70 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v69);
    *(_QWORD *)(v2 + 64) = v70;
    v71 = sub_1BC570B6C();
    v72 = objc_msgSend(v71, sel_trailingAnchor);

    v73 = sub_1BC570B4C();
    v74 = objc_msgSend(v73, sel_trailingAnchor);

    v75 = objc_msgSend(v72, sel_constraintLessThanOrEqualToAnchor_, v74);
    *(_QWORD *)(v2 + 72) = v75;
    v76 = objc_msgSend(v0, sel_bottomAnchor);
    v77 = sub_1BC570B6C();
    v78 = objc_msgSend(v77, sel_bottomAnchor);

    v79 = objc_msgSend(v76, sel_constraintEqualToAnchor_constant_, v78, 12.0);
    *(_QWORD *)(v2 + 80) = v79;
  }
  sub_1BC62C890();
  return v2;
}

id RecordTitleWithSubtitleView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordTitleWithSubtitleView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC572224@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a1);
}

uint64_t sub_1BC572278(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1BC384E14(a1, v3);
  swift_endAccess();
  sub_1BC570E64();
  return sub_1BC37AE60(a1);
}

id (*sub_1BC5722E8(uint64_t a1))(uint64_t a1, char a2)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1BC57132C;
}

uint64_t sub_1BC572334()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = qword_1EF436CD0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BC572384@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1BC37ADB0(v3, a2);
}

uint64_t method lookup function for RecordTitleWithSubtitleView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.headerItem.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.commonInit()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.updateFonts()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.setUpConstraints()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

void sub_1BC5724AC()
{
  _BYTE *v0;
  char *v1;

  v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_needsToLayoutFirstHeader] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___recordsHeadingLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints] = MEMORY[0x1E0DEE9D8];
  v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;

  sub_1BC62D394();
  __break(1u);
}

uint64_t sub_1BC572564(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC505EE8();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BC575640(v6);
  return sub_1BC62D274();
}

uint64_t sub_1BC5725DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 16);
  type metadata accessor for EntriesDataSource(0);
  sub_1BC347F0C((unint64_t *)&qword_1EF4336B0, type metadata accessor for EntriesDataSource, (uint64_t)&unk_1BC648804);
  v4 = sub_1BC62C164();
  v6 = v5;
  v7 = sub_1BC62BEC4();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v3;
  return swift_retain();
}

uint64_t sub_1BC572664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v15 = a2;
  sub_1BC576C10();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC576E60(0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1BC62BFC0();
    swift_release();
    swift_release();
    v13 = swift_release();
    MEMORY[0x1E0C80A78](v13);
    *(&v15 - 4) = (uint64_t)&v16;
    *(&v15 - 3) = (uint64_t)sub_1BC572950;
    *(&v15 - 2) = 0;
    sub_1BC57724C(0, &qword_1EF436E58, sub_1BC5755DC, (void (*)(uint64_t))sub_1BC576CAC, (void (*)(void))sub_1BC576DAC);
    sub_1BC576DC8();
    sub_1BC62C2CC();
    swift_bridgeObjectRelease();
    sub_1BC62C200();
    sub_1BC347F0C(&qword_1EF436E98, (uint64_t (*)(uint64_t))sub_1BC576C10, MEMORY[0x1E0CDD950]);
    sub_1BC62C374();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v15, v12, v9);
  }
  else
  {
    type metadata accessor for EntriesDataSource(0);
    sub_1BC347F0C((unint64_t *)&qword_1EF4336B0, type metadata accessor for EntriesDataSource, (uint64_t)&unk_1BC648804);
    result = sub_1BC62C158();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC5728E0()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC62BFC0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BC572950(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  sub_1BC576D24();
  sub_1BC576D68();
  v2 = v1;
  return sub_1BC62C128();
}

uint64_t sub_1BC5729C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1BC572664(*v1, a1);
}

uint64_t sub_1BC5729D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v36 = sub_1BC62C1B8();
  sub_1BC572D08(a1, (uint64_t)&v55);
  v38 = v56;
  v39 = v55;
  v40 = v57;
  v27 = v60;
  v33 = v61;
  v34 = v59;
  v32 = v62;
  v29 = v63;
  v30 = v58;
  v31 = v64;
  v37 = sub_1BC62C2C0();
  KeyPath = swift_getKeyPath();
  v28 = sub_1BC62C1B8();
  sub_1BC572ECC(a1, (uint64_t)&v55);
  v25 = v56;
  v26 = v55;
  v4 = v57;
  v23 = v59;
  v24 = v58;
  v5 = v61;
  v6 = v63;
  v21 = v62;
  v22 = v60;
  v7 = v65;
  v8 = v66;
  v9 = v67;
  v10 = v68;
  v11 = v64;
  v12 = sub_1BC62C290();
  v13 = swift_getKeyPath();
  v52 = v27;
  *((_QWORD *)&v41 + 1) = 0;
  LOBYTE(v42) = 1;
  *((_QWORD *)&v42 + 1) = v26;
  *(_QWORD *)&v43 = v25;
  BYTE8(v43) = v4;
  *(_QWORD *)&v44 = v24;
  *((_QWORD *)&v44 + 1) = v23;
  *(_QWORD *)&v45 = v22;
  BYTE8(v45) = v5;
  *(_QWORD *)&v46 = v21;
  *((_QWORD *)&v46 + 1) = v6;
  LOBYTE(v47) = v11;
  *((_QWORD *)&v47 + 1) = v7;
  *(_QWORD *)&v48 = v8;
  BYTE8(v48) = v9;
  *(_QWORD *)&v49 = v10;
  *((_QWORD *)&v49 + 1) = v13;
  v14 = v47;
  v15 = v48;
  v16 = v49;
  v54 = 1;
  v53 = v40;
  *(_QWORD *)a2 = v36;
  *(_BYTE *)(a2 + 16) = 1;
  *(_BYTE *)(a2 + 40) = v40;
  v51 = v29;
  *(_QWORD *)(a2 + 56) = v34;
  *(_BYTE *)(a2 + 64) = v52;
  *(_BYTE *)(a2 + 88) = v29;
  *(_QWORD *)&v41 = v28;
  *(_QWORD *)(a2 + 48) = v30;
  v17 = v45;
  *(_OWORD *)(a2 + 200) = v46;
  *(_OWORD *)(a2 + 184) = v17;
  v18 = v43;
  *(_OWORD *)(a2 + 168) = v44;
  *(_OWORD *)(a2 + 152) = v18;
  *(_QWORD *)(a2 + 264) = v12;
  *(_OWORD *)(a2 + 248) = v16;
  *(_OWORD *)(a2 + 232) = v15;
  *(_OWORD *)(a2 + 216) = v14;
  v19 = v41;
  *(_OWORD *)(a2 + 136) = v42;
  *(_OWORD *)(a2 + 120) = v19;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 24) = v39;
  *(_QWORD *)(a2 + 32) = v38;
  *(_QWORD *)(a2 + 72) = v33;
  *(_QWORD *)(a2 + 80) = v32;
  *(_QWORD *)(a2 + 96) = v31;
  *(_QWORD *)(a2 + 104) = KeyPath;
  *(_QWORD *)(a2 + 112) = v37;
  v57 = 1;
  v58 = v26;
  v59 = v25;
  LOBYTE(v60) = v4;
  v61 = v24;
  v62 = v23;
  v63 = v22;
  LOBYTE(v64) = v5;
  v65 = v21;
  v66 = v6;
  v67 = v11;
  v68 = v7;
  v69 = v8;
  v70 = v9;
  v71 = v10;
  v72 = v13;
  v50 = v12;
  v73 = v12;
  v55 = v28;
  v56 = 0;
  sub_1BC404110(v39, v38, v40);
  swift_bridgeObjectRetain();
  sub_1BC404110(v33, v32, v29);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1BC577028((uint64_t)&v41);
  sub_1BC5770EC((uint64_t)&v55);
  sub_1BC4040D0(v39, v38, v40);
  swift_bridgeObjectRelease();
  sub_1BC4040D0(v33, v32, v29);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC572D08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_1BC62C680();
  v7 = v6;

  v24 = v5;
  v25 = v7;
  sub_1BC36E2AC();
  v8 = sub_1BC62C338();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = objc_msgSend(a1, sel_currentVersion, v24, v25);
  if (v15 && v15 != (id)-1)
  {
    objc_msgSend(a1, sel_currentVersion);
    sub_1BC359F98();
    sub_1BC62D07C();
  }
  v16 = v12 & 1;
  v17 = sub_1BC62C338();
  v19 = v18;
  v21 = v20 & 1;
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v16;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v18;
  *(_BYTE *)(a2 + 64) = v20 & 1;
  *(_QWORD *)(a2 + 72) = v22;
  sub_1BC404110(v8, v10, v16);
  swift_bridgeObjectRetain();
  sub_1BC404110(v17, v19, v21);
  swift_bridgeObjectRetain();
  sub_1BC4040D0(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_1BC4040D0(v8, v10, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC572ECC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v4 = sub_1BC62C314();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1BC62A760();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1BC62C1F4();
  v7 = objc_msgSend(a1, sel_schemaType, MEMORY[0x1E0C80A78](v6).n128_f64[0]);
  sub_1BC62C680();

  sub_1BC36E2AC();
  v8 = sub_1BC62C338();
  v30 = v9;
  v31 = v8;
  v11 = v10;
  v13 = v12 & 1;
  sub_1BC62C1E8();
  sub_1BC62C1DC();
  objc_msgSend(a1, sel_schemaVersion);
  sub_1BC62C1C4();
  sub_1BC62C1DC();
  sub_1BC62C20C();
  v14 = sub_1BC62C32C();
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  v21 = objc_msgSend(a1, sel_currentVersionDate);
  sub_1BC62A724();

  sub_1BC62C308();
  v22 = sub_1BC62C320();
  v24 = v23;
  v25 = v13;
  v32 = v13;
  v27 = v26 & 1;
  *(_QWORD *)a2 = v31;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = v30;
  *(_QWORD *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = v16;
  *(_BYTE *)(a2 + 48) = v20;
  *(_QWORD *)(a2 + 56) = v18;
  *(_QWORD *)(a2 + 64) = 0;
  *(_BYTE *)(a2 + 72) = 1;
  *(_QWORD *)(a2 + 80) = v22;
  *(_QWORD *)(a2 + 88) = v23;
  *(_BYTE *)(a2 + 96) = v26 & 1;
  *(_QWORD *)(a2 + 104) = v28;
  sub_1BC404110(v31, v11, v25);
  swift_bridgeObjectRetain();
  sub_1BC404110(v14, v16, v20);
  swift_bridgeObjectRetain();
  sub_1BC404110(v22, v24, v27);
  swift_bridgeObjectRetain();
  sub_1BC4040D0(v22, v24, v27);
  swift_bridgeObjectRelease();
  sub_1BC4040D0(v14, v16, v20);
  swift_bridgeObjectRelease();
  sub_1BC4040D0(v31, v11, v32);
  return swift_bridgeObjectRelease();
}

void *sub_1BC5731C8@<X0>(uint64_t a1@<X8>)
{
  void **v1;
  void *v3;
  uint64_t v4;
  _BYTE v6[272];
  _BYTE __src[279];

  v3 = *v1;
  v4 = sub_1BC62C224();
  sub_1BC5729D0(v3, (uint64_t)v6);
  memcpy(&__src[7], v6, 0x110uLL);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  return memcpy((void *)(a1 + 17), __src, 0x117uLL);
}

uint64_t sub_1BC573244(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  _QWORD *v13;
  uint64_t (*v14)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v15;
  _QWORD v16[2];

  sub_1BC5771B0();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16[0] = sub_1BC5733C4(a1);
  v13 = v16;
  v14 = sub_1BC574180;
  v15 = 0;
  sub_1BC57724C(0, &qword_1EF436EB0, sub_1BC5772E8, (void (*)(uint64_t))type metadata accessor for EntryDetail.EntryDetailRow, (void (*)(void))sub_1BC577318);
  sub_1BC577334();
  sub_1BC62C2CC();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a1, sel_identifier);
  v8 = sub_1BC62C680();
  v10 = v9;

  v16[0] = v8;
  v16[1] = v10;
  sub_1BC347F0C(&qword_1EF436ED8, (uint64_t (*)(uint64_t))sub_1BC5771B0, MEMORY[0x1E0CDD950]);
  sub_1BC36E2AC();
  sub_1BC62C380();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BC5733C4(void *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  void *v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  id v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  id v81;
  uint64_t v82;
  id v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v94)(uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  _QWORD *v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  id v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  id v116;
  uint64_t v117;
  id v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  id v137;
  id v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  id v154;
  uint64_t v155;
  char *v156;
  _QWORD *v157;
  void (*v158)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  id v161;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC357158(0, (unint64_t *)&qword_1EF42B258, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v150 = (char *)&v148 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v151 = (uint64_t)&v148 - v6;
  sub_1BC357158(0, (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v2);
  MEMORY[0x1E0C80A78](v7);
  v156 = (char *)&v148 - v8;
  sub_1BC357158(0, qword_1EF436EE8, type metadata accessor for EntryDetail.EntryDetailRow, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = type metadata accessor for EntryDetail.EntryDetailRow(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC648760;
  v152 = v13;
  v14 = (char *)(v13 + v12);
  v15 = objc_msgSend(a1, sel_identifier);
  v16 = sub_1BC62C680();
  v18 = v17;

  v19 = &v14[*(int *)(v9 + 24)];
  v20 = sub_1BC62A760();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v19, 1, 1, v20);
  *(_QWORD *)v14 = 0x696669746E656449;
  *((_QWORD *)v14 + 1) = 0xEA00000000007265;
  *((_QWORD *)v14 + 2) = v16;
  *((_QWORD *)v14 + 3) = v18;
  v160 = v11;
  v22 = &v14[v11];
  v23 = objc_msgSend(a1, sel_schemaType);
  v24 = sub_1BC62C680();
  v26 = v25;

  v21(&v14[v11 + *(int *)(v9 + 24)], 1, 1, v20);
  *(_QWORD *)v22 = 0x7954616D65686353;
  *((_QWORD *)v22 + 1) = 0xEA00000000006570;
  *((_QWORD *)v22 + 2) = v24;
  *((_QWORD *)v22 + 3) = v26;
  v27 = v9;
  v28 = 2 * v11;
  v29 = &v14[2 * v11];
  v161 = objc_msgSend(a1, sel_schemaVersion);
  v153 = sub_1BC359F98();
  v30 = sub_1BC62D07C();
  v32 = v31;
  v21(&v29[*(int *)(v9 + 24)], 1, 1, v20);
  strcpy(v29, "SchemaVersion");
  *((_WORD *)v29 + 7) = -4864;
  *((_QWORD *)v29 + 2) = v30;
  *((_QWORD *)v29 + 3) = v32;
  v157 = v14;
  v33 = &v14[v28 + v160];
  objc_msgSend(a1, sel_settings);
  v34 = (id)HKStringFromOntologyShardSettings();
  v35 = sub_1BC62C680();
  v37 = v36;

  v155 = v27;
  v38 = &v33[*(int *)(v27 + 24)];
  v158 = v21;
  v159 = v20;
  v21(v38, 1, 1, v20);
  *(_QWORD *)v33 = 0x73676E6974746553;
  *((_QWORD *)v33 + 1) = 0xE800000000000000;
  *((_QWORD *)v33 + 2) = v35;
  *((_QWORD *)v33 + 3) = v37;
  v39 = objc_msgSend(a1, sel_slot);
  v40 = 1701736302;
  v41 = 0xE400000000000000;
  if ((id)*MEMORY[0x1E0CB5730] != v39)
  {
    v161 = objc_msgSend(a1, sel_slot);
    v40 = sub_1BC62D07C();
    v41 = v42;
  }
  v43 = v159;
  v44 = v160;
  v45 = v157;
  v46 = (char *)v157 + 4 * v160;
  v47 = v155;
  v48 = a1;
  v49 = v158;
  v158(&v46[*(int *)(v155 + 24)], 1, 1, v159);
  *(_QWORD *)v46 = 1953459283;
  *((_QWORD *)v46 + 1) = 0xE400000000000000;
  *((_QWORD *)v46 + 2) = v40;
  *((_QWORD *)v46 + 3) = v41;
  v50 = (uint64_t)v45 + 5 * v44;
  v51 = sub_1BC57741C((uint64_t)objc_msgSend(v48, sel_desiredState));
  v53 = v52;
  v54 = objc_msgSend(v48, sel_desiredStateDate);
  v55 = (uint64_t)v156;
  sub_1BC62A724();

  v49((char *)v55, 0, 1, v43);
  strcpy((char *)v50, "DesiredState");
  *(_BYTE *)(v50 + 13) = 0;
  *(_WORD *)(v50 + 14) = -5120;
  *(_QWORD *)(v50 + 16) = v51;
  *(_QWORD *)(v50 + 24) = v53;
  sub_1BC577510(v55, v50 + *(int *)(v47 + 24), (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v56 = objc_msgSend(v48, sel_currentVersion);
  if (v56)
  {
    if (v56 == (id)-1)
    {
      v57 = 0xEC00000064656E69;
      v58 = 0x6D72657465646E75;
    }
    else
    {
      v161 = objc_msgSend(v48, sel_currentVersion);
      v58 = sub_1BC62D07C();
      v57 = v59;
    }
  }
  else
  {
    v58 = 1701736302;
    v57 = 0xE400000000000000;
  }
  v60 = v160;
  v61 = v157;
  v62 = (char *)v157 + 6 * v160;
  v63 = objc_msgSend(v48, sel_currentVersionDate);
  v64 = (uint64_t)v156;
  sub_1BC62A724();

  v65 = v158;
  v66 = v159;
  v158((char *)v64, 0, 1, v159);
  strcpy(v62, "CurrentVersion");
  v62[15] = -18;
  *((_QWORD *)v62 + 2) = v58;
  *((_QWORD *)v62 + 3) = v57;
  sub_1BC577510(v64, (uint64_t)&v62[*(int *)(v155 + 24)], (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v149 = (uint64_t)v61 - v60;
  v67 = (uint64_t)&v61[v60] - v60;
  v68 = objc_msgSend(v48, sel_currentRegion);
  v69 = sub_1BC62C680();
  v71 = v70;

  v72 = objc_msgSend(v48, sel_currentRegionDate);
  sub_1BC62A724();

  v65((char *)v64, 0, 1, v66);
  v73 = v48;
  strcpy((char *)v67, "CurrentRegion");
  *(_WORD *)(v67 + 14) = -4864;
  *(_QWORD *)(v67 + 16) = v69;
  *(_QWORD *)(v67 + 24) = v71;
  v74 = v155;
  sub_1BC577510(v64, v67 + *(int *)(v155 + 24), (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v75 = objc_msgSend(v48, sel_currentLocale);
  if (v75)
  {
    v76 = v75;
    v77 = sub_1BC62C680();
    v79 = v78;

  }
  else
  {
    v77 = 0;
    v79 = 0;
  }
  v80 = (char *)&v157[v160];
  v81 = objc_msgSend(v73, sel_currentLocaleDate);
  v82 = (uint64_t)v156;
  sub_1BC62A724();

  v158((char *)v82, 0, 1, v159);
  strcpy(v80, "CurrentLocale");
  *((_WORD *)v80 + 7) = -4864;
  *((_QWORD *)v80 + 2) = v77;
  *((_QWORD *)v80 + 3) = v79;
  sub_1BC577510(v82, (uint64_t)&v80[*(int *)(v74 + 24)], (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v83 = objc_msgSend(v73, sel_availableVersion);
  if (v83)
  {
    if (v83 == (id)-1)
    {
      v84 = 0xEC00000064656E69;
      v85 = 0x6D72657465646E75;
    }
    else
    {
      v161 = objc_msgSend(v73, sel_availableVersion);
      v85 = sub_1BC62D07C();
      v84 = v86;
    }
  }
  else
  {
    v84 = 0xE400000000000000;
    v85 = 1701736302;
  }
  v87 = v160;
  v88 = v157;
  v89 = (_QWORD *)((char *)v157 + 9 * v160);
  v90 = objc_msgSend(v73, sel_availableVersionDate);
  v91 = (uint64_t)v156;
  sub_1BC62A724();

  v154 = v73;
  v93 = v158;
  v92 = v159;
  v158((char *)v91, 0, 1, v159);
  *v89 = 0xD000000000000010;
  v89[1] = 0x80000001BC664440;
  v89[2] = v85;
  v89[3] = v84;
  v94 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC577510(v91, (uint64_t)v89 + *(int *)(v74 + 24), (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v95 = (uint64_t)v88 + 10 * v87;
  v96 = sub_1BC57741C((uint64_t)objc_msgSend(v154, sel_availableState));
  v98 = v97;
  v99 = objc_msgSend(v154, sel_availableStateDate);
  sub_1BC62A724();

  v93((char *)v91, 0, 1, v92);
  strcpy((char *)v95, "AvailableState");
  *(_BYTE *)(v95 + 15) = -18;
  *(_QWORD *)(v95 + 16) = v96;
  *(_QWORD *)(v95 + 24) = v98;
  sub_1BC577510(v91, v95 + *(int *)(v155 + 24), (unint64_t *)&qword_1ED6A4EA0, v94);
  v100 = (_QWORD *)((char *)v88 + 11 * v87);
  v101 = objc_msgSend(v154, sel_availableRegion);
  v102 = sub_1BC62C680();
  v104 = v103;

  v105 = objc_msgSend(v154, sel_availableRegionDate);
  sub_1BC62A724();

  v106 = v92;
  v107 = v154;
  v93((char *)v91, 0, 1, v106);
  *v100 = 0x6C62616C69617641;
  v100[1] = 0xEF6E6F6967655265;
  v100[2] = v102;
  v100[3] = v104;
  v108 = v155;
  sub_1BC577510(v91, (uint64_t)v100 + *(int *)(v155 + 24), (unint64_t *)&qword_1ED6A4EA0, v94);
  v109 = objc_msgSend(v107, sel_availableLocale);
  if (v109)
  {
    v110 = v109;
    v111 = sub_1BC62C680();
    v113 = v112;

  }
  else
  {
    v111 = 0;
    v113 = 0;
  }
  v114 = (uint64_t)v150;
  v115 = (_QWORD *)((char *)v157 + 12 * v160);
  v116 = objc_msgSend(v107, sel_availableLocaleDate);
  v117 = (uint64_t)v156;
  sub_1BC62A724();

  v158((char *)v117, 0, 1, v159);
  *v115 = 0x6C62616C69617641;
  v115[1] = 0xEF656C61636F4C65;
  v115[2] = v111;
  v115[3] = v113;
  sub_1BC577510(v117, (uint64_t)v115 + *(int *)(v108 + 24), (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v118 = objc_msgSend(v107, sel_availableURL);
  if (v118)
  {
    v119 = v118;
    sub_1BC62A5BC();

    v120 = sub_1BC62A604();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v114, 0, 1, v120);
  }
  else
  {
    v120 = sub_1BC62A604();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v114, 1, 1, v120);
  }
  v121 = v151;
  sub_1BC577510(v114, v151, (unint64_t *)&qword_1EF42B258, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1BC62A604();
  v122 = *(_QWORD *)(v120 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v121, 1, v120) == 1)
  {
    sub_1BC377E3C(v121, (unint64_t *)&qword_1EF42B258, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v123 = 0;
    v124 = 0;
  }
  else
  {
    v123 = sub_1BC62A574();
    v124 = v125;
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v121, v120);
  }
  v126 = (char *)v157 + 13 * v160;
  v127 = objc_msgSend(v107, sel_availableURLDate);
  v128 = (uint64_t)v156;
  sub_1BC62A724();

  v158((char *)v128, 0, 1, v159);
  strcpy(v126, "AvailableURL");
  v126[13] = 0;
  *((_WORD *)v126 + 7) = -5120;
  *((_QWORD *)v126 + 2) = v123;
  *((_QWORD *)v126 + 3) = v124;
  v129 = v155;
  sub_1BC577510(v128, (uint64_t)&v126[*(int *)(v155 + 24)], (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v130 = objc_msgSend(v107, sel_availableChecksum);
  if (v130)
  {
    v131 = v130;
    v132 = sub_1BC62C680();
    v134 = v133;

  }
  else
  {
    v132 = 0;
    v134 = 0;
  }
  v135 = v160;
  v136 = (_QWORD *)((char *)v157 + 14 * v160);
  v137 = v154;
  v138 = objc_msgSend(v154, sel_availableChecksumDate);
  v139 = (uint64_t)v156;
  sub_1BC62A724();

  v140 = v158;
  v141 = v159;
  v158((char *)v139, 0, 1, v159);
  *v136 = 0xD000000000000011;
  v136[1] = 0x80000001BC664460;
  v136[2] = v132;
  v136[3] = v134;
  sub_1BC577510(v139, (uint64_t)v136 + *(int *)(v129 + 24), (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v142 = v149 + 16 * v135;
  v161 = objc_msgSend(v137, sel_availableSize);
  v143 = sub_1BC62D07C();
  v145 = v144;
  v146 = objc_msgSend(v137, sel_availableSizeDate);
  sub_1BC62A724();

  v140((char *)v139, 0, 1, v141);
  strcpy((char *)v142, "AvailableSize");
  *(_WORD *)(v142 + 14) = -4864;
  *(_QWORD *)(v142 + 16) = v143;
  *(_QWORD *)(v142 + 24) = v145;
  sub_1BC577510(v139, v142 + *(int *)(v129 + 24), (unint64_t *)&qword_1ED6A4EA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  return v152;
}

